

Microchip MPLAB XC8 Assembler V3.00 build 20241204225717 
                                                                                               Wed Feb 26 10:06:56 2025

Microchip MPLAB XC8 C Compiler v3.00 (Free license) build 20241204225717 Og1 
     1                           	processor	16F18345
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	idataBANK0,global,class=CODE,space=0,delta=2,noexec
     5                           	psect	idataBANK2,global,class=CODE,space=0,delta=2,noexec
     6                           	psect	stringtext1,global,class=STRCODE,space=0,delta=2,noexec
     7                           	psect	stringtext2,global,class=STRCODE,space=0,delta=2,noexec
     8                           	psect	stringtext3,global,class=STRCODE,space=0,delta=2,noexec
     9                           	psect	stringtext4,global,class=STRCODE,space=0,delta=2,noexec
    10                           	psect	stringtext5,global,class=STRCODE,space=0,delta=2,noexec
    11                           	psect	nvBANK2,global,class=BANK2,space=1,delta=1,noexec
    12                           	psect	nvBANK3,global,class=BANK3,space=1,delta=1,noexec
    13                           	psect	stringtext6,global,class=STRCODE,space=0,delta=2,noexec
    14                           	psect	stringtext7,global,class=STRCODE,space=0,delta=2,noexec
    15                           	psect	stringtext8,global,class=STRCODE,space=0,delta=2,noexec
    16                           	psect	stringtext9,global,class=STRCODE,space=0,delta=2,noexec
    17                           	psect	stringtext10,global,class=STRCODE,space=0,delta=2,noexec
    18                           	psect	stringtext11,global,class=STRCODE,space=0,delta=2,noexec
    19                           	psect	stringtext12,global,class=STRCODE,space=0,delta=2,noexec
    20                           	psect	stringtext13,global,class=STRCODE,space=0,delta=2,noexec
    21                           	psect	stringtext14,global,class=STRCODE,space=0,delta=2,noexec
    22                           	psect	stringtext15,global,class=STRCODE,space=0,delta=2,noexec
    23                           	psect	stringtext16,global,class=STRCODE,space=0,delta=2,noexec
    24                           	psect	stringtext17,global,class=STRCODE,space=0,delta=2,noexec
    25                           	psect	stringtext18,global,class=STRCODE,space=0,delta=2,noexec
    26                           	psect	stringtext19,global,class=STRCODE,space=0,delta=2,noexec
    27                           	psect	cinit,global,class=CODE,space=0,merge=1,delta=2
    28                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,noexec
    29                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,noexec
    30                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1,noexec
    31                           	psect	bssBANK2,global,class=BANK2,space=1,delta=1,noexec
    32                           	psect	dataBANK2,global,class=BANK2,space=1,delta=1,noexec
    33                           	psect	bssBANK3,global,class=BANK3,space=1,delta=1,noexec
    34                           	psect	inittext,global,class=CODE,space=0,delta=2
    35                           	psect	clrtext,global,class=CODE,space=0,delta=2
    36                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1,noexec
    37                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
    38                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    39                           	psect	maintext,global,class=CODE,space=0,merge=1,split=1,delta=2
    40                           	psect	text1,local,class=CODE,space=0,merge=1,delta=2
    41                           	psect	text2,local,class=CODE,space=0,merge=1,delta=2,group=3
    42                           	psect	text3,local,class=CODE,space=0,merge=1,delta=2,group=1
    43                           	psect	text4,local,class=CODE,space=0,merge=1,delta=2,group=1
    44                           	psect	text5,local,class=CODE,space=0,merge=1,delta=2,group=1
    45                           	psect	text6,local,class=CODE,space=0,merge=1,delta=2,group=2
    46                           	psect	text7,local,class=CODE,space=0,merge=1,delta=2,group=2
    47                           	psect	text8,local,class=CODE,space=0,merge=1,delta=2,group=1
    48                           	psect	text9,local,class=CODE,space=0,merge=1,delta=2,group=2
    49                           	psect	text10,local,class=CODE,space=0,merge=1,delta=2,group=1
    50                           	psect	text11,local,class=CODE,space=0,merge=1,delta=2,group=1
    51                           	psect	text12,local,class=CODE,space=0,merge=1,delta=2,group=3
    52                           	psect	text13,local,class=CODE,space=0,merge=1,delta=2,group=3
    53                           	psect	text14,local,class=CODE,space=0,merge=1,delta=2,group=3
    54                           	psect	text15,local,class=CODE,space=0,merge=1,delta=2
    55                           	psect	text16,local,class=CODE,space=0,merge=1,delta=2
    56                           	psect	text17,local,class=CODE,space=0,merge=1,delta=2
    57                           	psect	text18,local,class=CODE,space=0,merge=1,delta=2,group=3
    58                           	psect	text19,local,class=CODE,space=0,merge=1,delta=2,group=2
    59                           	psect	text20,local,class=CODE,space=0,merge=1,delta=2,group=2
    60                           	psect	text21,local,class=CODE,space=0,merge=1,delta=2
    61                           	psect	text22,local,class=CODE,space=0,merge=1,delta=2
    62                           	psect	text23,local,class=CODE,space=0,merge=1,delta=2
    63                           	psect	text24,local,class=CODE,space=0,merge=1,delta=2
    64                           	psect	text25,local,class=CODE,space=0,merge=1,delta=2
    65                           	psect	text26,local,class=CODE,space=0,merge=1,delta=2
    66                           	psect	text27,local,class=CODE,space=0,merge=1,delta=2
    67                           	psect	text28,local,class=CODE,space=0,merge=1,delta=2
    68                           	psect	text29,local,class=CODE,space=0,merge=1,delta=2
    69                           	psect	text30,local,class=CODE,space=0,merge=1,delta=2
    70                           	psect	text31,local,class=CODE,space=0,merge=1,delta=2
    71                           	psect	text32,local,class=CODE,space=0,merge=1,delta=2
    72                           	psect	text33,local,class=CODE,space=0,merge=1,delta=2
    73                           	psect	text34,local,class=CODE,space=0,merge=1,inline,delta=2
    74                           	psect	text35,local,class=CODE,space=0,merge=1,delta=2
    75                           	psect	text36,local,class=CODE,space=0,merge=1,delta=2
    76                           	psect	text37,local,class=CODE,space=0,merge=1,delta=2
    77                           	psect	text38,local,class=CODE,space=0,merge=1,delta=2
    78                           	psect	text39,local,class=CODE,space=0,merge=1,delta=2
    79                           	psect	text40,local,class=CODE,space=0,merge=1,delta=2
    80                           	psect	intentry,global,class=CODE,space=0,delta=2
    81                           	psect	text42,local,class=CODE,space=0,merge=1,delta=2
    82                           	psect	text43,local,class=CODE,space=0,merge=1,delta=2
    83                           	psect	text44,local,class=CODE,space=0,merge=1,delta=2
    84                           	psect	text45,local,class=CODE,space=0,merge=1,delta=2
    85                           	psect	text46,local,class=CODE,space=0,merge=1,delta=2
    86                           	psect	text47,local,class=CODE,space=0,merge=1,delta=2,group=2
    87                           	psect	text48,local,class=CODE,space=0,merge=1,delta=2,group=2
    88                           	psect	text49,local,class=CODE,space=0,merge=1,delta=2,group=2
    89                           	psect	text50,local,class=CODE,space=0,merge=1,delta=2,group=2
    90                           	psect	text51,local,class=CODE,space=0,merge=1,delta=2,group=2
    91                           	psect	text52,local,class=CODE,space=0,merge=1,delta=2
    92                           	psect	text53,local,class=CODE,space=0,merge=1,delta=2
    93                           	psect	text54,local,class=CODE,space=0,merge=1,delta=2
    94                           	psect	text55,local,class=CODE,space=0,merge=1,delta=2
    95                           	psect	text56,local,class=CODE,space=0,merge=1,delta=2
    96                           	psect	text57,local,class=CODE,space=0,merge=1,delta=2
    97                           	psect	text58,local,class=CODE,space=0,merge=1,delta=2
    98                           	psect	text59,local,class=CODE,space=0,merge=1,delta=2
    99                           	psect	text60,local,class=CODE,space=0,merge=1,delta=2
   100                           	psect	text61,local,class=CODE,space=0,merge=1,delta=2
   101                           	psect	text62,local,class=CODE,space=0,merge=1,delta=2
   102                           	psect	text63,local,class=CODE,space=0,merge=1,delta=2
   103                           	psect	text64,local,class=CODE,space=0,merge=1,delta=2
   104                           	psect	text65,local,class=CODE,space=0,merge=1,delta=2
   105                           	psect	text66,local,class=CODE,space=0,merge=1,delta=2
   106                           	psect	text67,local,class=CODE,space=0,merge=1,delta=2
   107                           	psect	text68,local,class=CODE,space=0,merge=1,delta=2
   108                           	psect	text69,local,class=CODE,space=0,merge=1,delta=2
   109                           	psect	text70,local,class=CODE,space=0,merge=1,inline,delta=2
   110                           	psect	text71,local,class=CODE,space=0,merge=1,delta=2
   111                           	psect	text72,local,class=CODE,space=0,merge=1,inline,delta=2
   112                           	psect	text73,local,class=CODE,space=0,merge=1,inline,delta=2
   113                           	psect	text74,local,class=CODE,space=0,merge=1,inline,delta=2
   114                           	psect	text75,local,class=CODE,space=0,merge=1,delta=2
   115                           	psect	text76,local,class=CODE,space=0,merge=1,delta=2
   116                           	psect	text77,local,class=CODE,space=0,merge=1,inline,delta=2
   117                           	psect	text78,local,class=CODE,space=0,merge=1,inline,delta=2
   118                           	psect	text79,local,class=CODE,space=0,merge=1,delta=2
   119                           	psect	text80,local,class=CODE,space=0,merge=1,inline,delta=2
   120                           	psect	text81,local,class=CODE,space=0,merge=1,inline,delta=2
   121                           	psect	text82,local,class=CODE,space=0,merge=1,inline,delta=2
   122                           	psect	text83,local,class=CODE,space=0,merge=1,inline,delta=2
   123                           	psect	text84,local,class=CODE,space=0,merge=1,delta=2
   124                           	psect	text85,local,class=CODE,space=0,merge=1,delta=2
   125                           	psect	text86,local,class=CODE,space=0,merge=1,delta=2
   126                           	psect	text87,local,class=CODE,space=0,merge=1,delta=2
   127                           	psect	text88,local,class=CODE,space=0,merge=1,delta=2
   128                           	psect	text89,local,class=CODE,space=0,merge=1,delta=2
   129                           	psect	text90,local,class=CODE,space=0,merge=1,delta=2
   130                           	psect	text91,local,class=CODE,space=0,merge=1,delta=2
   131                           	psect	text92,local,class=CODE,space=0,merge=1,delta=2
   132                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
   133                           	dabs	1,0x7E,2
   134     0000                     
   135                           ; Generated 11/01/2024 GMT
   136                           ; 
   137                           ; Copyright © 2024, Microchip Technology Inc. and its subsidiaries ("Microchip")
   138                           ; All rights reserved.
   139                           ; 
   140                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
   141                           ; 
   142                           ; Redistribution and use in source and binary forms, with or without modification, are
   143                           ; permitted provided that the following conditions are met:
   144                           ; 
   145                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
   146                           ;        conditions and the following disclaimer.
   147                           ; 
   148                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
   149                           ;        of conditions and the following disclaimer in the documentation and/or other
   150                           ;        materials provided with the distribution. Publication is not required when
   151                           ;        this file is used in an embedded application.
   152                           ; 
   153                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
   154                           ;        software without specific prior written permission.
   155                           ; 
   156                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
   157                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
   158                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
   159                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
   160                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
   161                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
   162                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
   163                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
   164                           ; 
   165                           ; 
   166                           ; Code-generator required, PIC16F18345 Definitions
   167                           ; 
   168                           ; SFR Addresses
   169     0008                     bsr             equ	8
   170     0005                     fsr0h           equ	5
   171     0004                     fsr0l           equ	4
   172     0007                     fsr1h           equ	7
   173     0006                     fsr1l           equ	6
   174     0000                     indf            equ	0
   175     0000                     indf0           equ	0
   176     0001                     indf1           equ	1
   177     000B                     intcon          equ	11
   178     0002                     pc              equ	2
   179     0002                     pcl             equ	2
   180     000A                     pclath          equ	10
   181     0003                     status          equ	3
   182     0009                     wreg            equ	9
   183     0000                     INDF0           equ	0	;# 
   184     0001                     INDF1           equ	1	;# 
   185     0002                     PCL             equ	2	;# 
   186     0003                     STATUS          equ	3	;# 
   187     0004                     FSR0L           equ	4	;# 
   188     0005                     FSR0H           equ	5	;# 
   189     0006                     FSR1L           equ	6	;# 
   190     0007                     FSR1H           equ	7	;# 
   191     0008                     BSR             equ	8	;# 
   192     0009                     WREG            equ	9	;# 
   193     000A                     PCLATH          equ	10	;# 
   194     000B                     INTCON          equ	11	;# 
   195     000C                     PORTA           equ	12	;# 
   196     000D                     PORTB           equ	13	;# 
   197     000E                     PORTC           equ	14	;# 
   198     0010                     PIR0            equ	16	;# 
   199     0011                     PIR1            equ	17	;# 
   200     0012                     PIR2            equ	18	;# 
   201     0013                     PIR3            equ	19	;# 
   202     0014                     PIR4            equ	20	;# 
   203     0015                     TMR0L           equ	21	;# 
   204     0015                     TMR0            equ	21	;# 
   205     0016                     TMR0H           equ	22	;# 
   206     0016                     PR0             equ	22	;# 
   207     0017                     T0CON0          equ	23	;# 
   208     0018                     T0CON1          equ	24	;# 
   209     0019                     TMR1            equ	25	;# 
   210     0019                     TMR1L           equ	25	;# 
   211     001A                     TMR1H           equ	26	;# 
   212     001B                     T1CON           equ	27	;# 
   213     001C                     T1GCON          equ	28	;# 
   214     001D                     TMR2            equ	29	;# 
   215     001E                     PR2             equ	30	;# 
   216     001F                     T2CON           equ	31	;# 
   217     008C                     TRISA           equ	140	;# 
   218     008D                     TRISB           equ	141	;# 
   219     008E                     TRISC           equ	142	;# 
   220     0090                     PIE0            equ	144	;# 
   221     0091                     PIE1            equ	145	;# 
   222     0092                     PIE2            equ	146	;# 
   223     0093                     PIE3            equ	147	;# 
   224     0094                     PIE4            equ	148	;# 
   225     0097                     WDTCON          equ	151	;# 
   226     009B                     ADRES           equ	155	;# 
   227     009B                     ADRESL          equ	155	;# 
   228     009C                     ADRESH          equ	156	;# 
   229     009D                     ADCON0          equ	157	;# 
   230     009E                     ADCON1          equ	158	;# 
   231     009F                     ADACT           equ	159	;# 
   232     010C                     LATA            equ	268	;# 
   233     010D                     LATB            equ	269	;# 
   234     010E                     LATC            equ	270	;# 
   235     0111                     CM1CON0         equ	273	;# 
   236     0112                     CM1CON1         equ	274	;# 
   237     0113                     CM2CON0         equ	275	;# 
   238     0114                     CM2CON1         equ	276	;# 
   239     0115                     CMOUT           equ	277	;# 
   240     0116                     BORCON          equ	278	;# 
   241     0117                     FVRCON          equ	279	;# 
   242     0118                     DACCON0         equ	280	;# 
   243     0119                     DACCON1         equ	281	;# 
   244     018C                     ANSELA          equ	396	;# 
   245     018D                     ANSELB          equ	397	;# 
   246     018E                     ANSELC          equ	398	;# 
   247     0197                     VREGCON         equ	407	;# 
   248     0199                     RC1REG          equ	409	;# 
   249     0199                     RCREG           equ	409	;# 
   250     0199                     RCREG1          equ	409	;# 
   251     019A                     TX1REG          equ	410	;# 
   252     019A                     TXREG1          equ	410	;# 
   253     019A                     TXREG           equ	410	;# 
   254     019B                     SP1BRG          equ	411	;# 
   255     019B                     SPBRG           equ	411	;# 
   256     019B                     SP1BRGL         equ	411	;# 
   257     019B                     SPBRG1          equ	411	;# 
   258     019B                     SPBRGL          equ	411	;# 
   259     019C                     SP1BRGH         equ	412	;# 
   260     019C                     SPBRGH          equ	412	;# 
   261     019C                     SPBRGH1         equ	412	;# 
   262     019D                     RC1STA          equ	413	;# 
   263     019D                     RCSTA1          equ	413	;# 
   264     019D                     RCSTA           equ	413	;# 
   265     019E                     TX1STA          equ	414	;# 
   266     019E                     TXSTA1          equ	414	;# 
   267     019E                     TXSTA           equ	414	;# 
   268     019F                     BAUD1CON        equ	415	;# 
   269     019F                     BAUDCON1        equ	415	;# 
   270     019F                     BAUDCTL1        equ	415	;# 
   271     019F                     BAUDCON         equ	415	;# 
   272     019F                     BAUDCTL         equ	415	;# 
   273     020C                     WPUA            equ	524	;# 
   274     020D                     WPUB            equ	525	;# 
   275     020E                     WPUC            equ	526	;# 
   276     0211                     SSP1BUF         equ	529	;# 
   277     0211                     SSPBUF          equ	529	;# 
   278     0212                     SSP1ADD         equ	530	;# 
   279     0212                     SSPADD          equ	530	;# 
   280     0213                     SSP1MSK         equ	531	;# 
   281     0213                     SSPMSK          equ	531	;# 
   282     0214                     SSP1STAT        equ	532	;# 
   283     0214                     SSPSTAT         equ	532	;# 
   284     0215                     SSP1CON1        equ	533	;# 
   285     0215                     SSPCON          equ	533	;# 
   286     0215                     SSPCON1         equ	533	;# 
   287     0215                     SSP1CON         equ	533	;# 
   288     0216                     SSP1CON2        equ	534	;# 
   289     0216                     SSPCON2         equ	534	;# 
   290     0217                     SSP1CON3        equ	535	;# 
   291     0217                     SSPCON3         equ	535	;# 
   292     0219                     SSP2BUF         equ	537	;# 
   293     021A                     SSP2ADD         equ	538	;# 
   294     021B                     SSP2MSK         equ	539	;# 
   295     021C                     SSP2STAT        equ	540	;# 
   296     021D                     SSP2CON1        equ	541	;# 
   297     021D                     SSP2CON         equ	541	;# 
   298     021E                     SSP2CON2        equ	542	;# 
   299     021F                     SSP2CON3        equ	543	;# 
   300     028C                     ODCONA          equ	652	;# 
   301     028D                     ODCONB          equ	653	;# 
   302     028E                     ODCONC          equ	654	;# 
   303     0291                     CCPR1           equ	657	;# 
   304     0291                     CCPR1L          equ	657	;# 
   305     0292                     CCPR1H          equ	658	;# 
   306     0293                     CCP1CON         equ	659	;# 
   307     0294                     CCP1CAP         equ	660	;# 
   308     0295                     CCPR2           equ	661	;# 
   309     0295                     CCPR2L          equ	661	;# 
   310     0296                     CCPR2H          equ	662	;# 
   311     0297                     CCP2CON         equ	663	;# 
   312     0298                     CCP2CAP         equ	664	;# 
   313     029F                     CCPTMRS         equ	671	;# 
   314     030C                     SLRCONA         equ	780	;# 
   315     030D                     SLRCONB         equ	781	;# 
   316     030E                     SLRCONC         equ	782	;# 
   317     0311                     CCPR3           equ	785	;# 
   318     0311                     CCPR3L          equ	785	;# 
   319     0312                     CCPR3H          equ	786	;# 
   320     0313                     CCP3CON         equ	787	;# 
   321     0314                     CCP3CAP         equ	788	;# 
   322     0315                     CCPR4           equ	789	;# 
   323     0315                     CCPR4L          equ	789	;# 
   324     0316                     CCPR4H          equ	790	;# 
   325     0317                     CCP4CON         equ	791	;# 
   326     0318                     CCP4CAP         equ	792	;# 
   327     038C                     INLVLA          equ	908	;# 
   328     038D                     INLVLB          equ	909	;# 
   329     038E                     INLVLC          equ	910	;# 
   330     0391                     IOCAP           equ	913	;# 
   331     0392                     IOCAN           equ	914	;# 
   332     0393                     IOCAF           equ	915	;# 
   333     0394                     IOCBP           equ	916	;# 
   334     0395                     IOCBN           equ	917	;# 
   335     0396                     IOCBF           equ	918	;# 
   336     0397                     IOCCP           equ	919	;# 
   337     0398                     IOCCN           equ	920	;# 
   338     0399                     IOCCF           equ	921	;# 
   339     039A                     CLKRCON         equ	922	;# 
   340     039C                     MDCON           equ	924	;# 
   341     039D                     MDSRC           equ	925	;# 
   342     039E                     MDCARH          equ	926	;# 
   343     039F                     MDCARL          equ	927	;# 
   344     0411                     TMR3            equ	1041	;# 
   345     0411                     TMR3L           equ	1041	;# 
   346     0412                     TMR3H           equ	1042	;# 
   347     0413                     T3CON           equ	1043	;# 
   348     0414                     T3GCON          equ	1044	;# 
   349     0415                     TMR4            equ	1045	;# 
   350     0416                     PR4             equ	1046	;# 
   351     0417                     T4CON           equ	1047	;# 
   352     0418                     TMR5            equ	1048	;# 
   353     0418                     TMR5L           equ	1048	;# 
   354     0419                     TMR5H           equ	1049	;# 
   355     041A                     T5CON           equ	1050	;# 
   356     041B                     T5GCON          equ	1051	;# 
   357     041C                     TMR6            equ	1052	;# 
   358     041D                     PR6             equ	1053	;# 
   359     041E                     T6CON           equ	1054	;# 
   360     041F                     CCDCON          equ	1055	;# 
   361     0498                     NCO1ACC         equ	1176	;# 
   362     0498                     NCO1ACCL        equ	1176	;# 
   363     0499                     NCO1ACCH        equ	1177	;# 
   364     049A                     NCO1ACCU        equ	1178	;# 
   365     049B                     NCO1INC         equ	1179	;# 
   366     049B                     NCO1INCL        equ	1179	;# 
   367     049C                     NCO1INCH        equ	1180	;# 
   368     049D                     NCO1INCU        equ	1181	;# 
   369     049E                     NCO1CON         equ	1182	;# 
   370     049F                     NCO1CLK         equ	1183	;# 
   371     0617                     PWM5DCL         equ	1559	;# 
   372     0618                     PWM5DCH         equ	1560	;# 
   373     0619                     PWM5CON         equ	1561	;# 
   374     0619                     PWM5CON0        equ	1561	;# 
   375     061A                     PWM6DCL         equ	1562	;# 
   376     061B                     PWM6DCH         equ	1563	;# 
   377     061C                     PWM6CON         equ	1564	;# 
   378     061C                     PWM6CON0        equ	1564	;# 
   379     061F                     PWMTMRS         equ	1567	;# 
   380     0691                     CWG1CLKCON      equ	1681	;# 
   381     0692                     CWG1DAT         equ	1682	;# 
   382     0693                     CWG1DBR         equ	1683	;# 
   383     0694                     CWG1DBF         equ	1684	;# 
   384     0695                     CWG1CON0        equ	1685	;# 
   385     0696                     CWG1CON1        equ	1686	;# 
   386     0697                     CWG1AS0         equ	1687	;# 
   387     0698                     CWG1AS1         equ	1688	;# 
   388     0699                     CWG1STR         equ	1689	;# 
   389     0711                     CWG2CLKCON      equ	1809	;# 
   390     0712                     CWG2DAT         equ	1810	;# 
   391     0713                     CWG2DBR         equ	1811	;# 
   392     0714                     CWG2DBF         equ	1812	;# 
   393     0715                     CWG2CON0        equ	1813	;# 
   394     0716                     CWG2CON1        equ	1814	;# 
   395     0717                     CWG2AS0         equ	1815	;# 
   396     0718                     CWG2AS1         equ	1816	;# 
   397     0719                     CWG2STR         equ	1817	;# 
   398     0891                     NVMADR          equ	2193	;# 
   399     0891                     EEADR           equ	2193	;# 
   400     0891                     PMADR           equ	2193	;# 
   401     0891                     NVMADRL         equ	2193	;# 
   402     0891                     EEADRL          equ	2193	;# 
   403     0891                     PMADRL          equ	2193	;# 
   404     0892                     NVMADRH         equ	2194	;# 
   405     0892                     EEADRH          equ	2194	;# 
   406     0892                     PMADRH          equ	2194	;# 
   407     0893                     NVMDAT          equ	2195	;# 
   408     0893                     EEDAT           equ	2195	;# 
   409     0893                     PMDAT           equ	2195	;# 
   410     0893                     NVMDATL         equ	2195	;# 
   411     0893                     EEDATL          equ	2195	;# 
   412     0893                     PMDATL          equ	2195	;# 
   413     0894                     NVMDATH         equ	2196	;# 
   414     0894                     EEDATH          equ	2196	;# 
   415     0894                     PMDATH          equ	2196	;# 
   416     0895                     NVMCON1         equ	2197	;# 
   417     0895                     EECON1          equ	2197	;# 
   418     0895                     PMCON1          equ	2197	;# 
   419     0896                     NVMCON2         equ	2198	;# 
   420     0896                     EECON2          equ	2198	;# 
   421     0896                     PMCON2          equ	2198	;# 
   422     089B                     PCON0           equ	2203	;# 
   423     0911                     PMD0            equ	2321	;# 
   424     0912                     PMD1            equ	2322	;# 
   425     0913                     PMD2            equ	2323	;# 
   426     0914                     PMD3            equ	2324	;# 
   427     0915                     PMD4            equ	2325	;# 
   428     0916                     PMD5            equ	2326	;# 
   429     0918                     CPUDOZE         equ	2328	;# 
   430     0919                     OSCCON1         equ	2329	;# 
   431     091A                     OSCCON2         equ	2330	;# 
   432     091B                     OSCCON3         equ	2331	;# 
   433     091C                     OSCSTAT1        equ	2332	;# 
   434     091D                     OSCEN           equ	2333	;# 
   435     091E                     OSCTUNE         equ	2334	;# 
   436     091F                     OSCFRQ          equ	2335	;# 
   437     0E0F                     PPSLOCK         equ	3599	;# 
   438     0E10                     INTPPS          equ	3600	;# 
   439     0E11                     T0CKIPPS        equ	3601	;# 
   440     0E12                     T1CKIPPS        equ	3602	;# 
   441     0E13                     T1GPPS          equ	3603	;# 
   442     0E14                     CCP1PPS         equ	3604	;# 
   443     0E15                     CCP2PPS         equ	3605	;# 
   444     0E16                     CCP3PPS         equ	3606	;# 
   445     0E17                     CCP4PPS         equ	3607	;# 
   446     0E18                     CWG1PPS         equ	3608	;# 
   447     0E19                     CWG2PPS         equ	3609	;# 
   448     0E1A                     MDCIN1PPS       equ	3610	;# 
   449     0E1B                     MDCIN2PPS       equ	3611	;# 
   450     0E1C                     MDMINPPS        equ	3612	;# 
   451     0E1D                     SSP2CLKPPS      equ	3613	;# 
   452     0E1E                     SSP2DATPPS      equ	3614	;# 
   453     0E1F                     SSP2SSPPS       equ	3615	;# 
   454     0E20                     SSP1CLKPPS      equ	3616	;# 
   455     0E21                     SSP1DATPPS      equ	3617	;# 
   456     0E22                     SSP1SSPPS       equ	3618	;# 
   457     0E24                     RXPPS           equ	3620	;# 
   458     0E25                     TXPPS           equ	3621	;# 
   459     0E28                     CLCIN0PPS       equ	3624	;# 
   460     0E29                     CLCIN1PPS       equ	3625	;# 
   461     0E2A                     CLCIN2PPS       equ	3626	;# 
   462     0E2B                     CLCIN3PPS       equ	3627	;# 
   463     0E2C                     T3CKIPPS        equ	3628	;# 
   464     0E2D                     T3GPPS          equ	3629	;# 
   465     0E2E                     T5CKIPPS        equ	3630	;# 
   466     0E2F                     T5GPPS          equ	3631	;# 
   467     0E90                     RA0PPS          equ	3728	;# 
   468     0E91                     RA1PPS          equ	3729	;# 
   469     0E92                     RA2PPS          equ	3730	;# 
   470     0E94                     RA4PPS          equ	3732	;# 
   471     0E95                     RA5PPS          equ	3733	;# 
   472     0E9C                     RB4PPS          equ	3740	;# 
   473     0E9D                     RB5PPS          equ	3741	;# 
   474     0E9E                     RB6PPS          equ	3742	;# 
   475     0E9F                     RB7PPS          equ	3743	;# 
   476     0EA0                     RC0PPS          equ	3744	;# 
   477     0EA1                     RC1PPS          equ	3745	;# 
   478     0EA2                     RC2PPS          equ	3746	;# 
   479     0EA3                     RC3PPS          equ	3747	;# 
   480     0EA4                     RC4PPS          equ	3748	;# 
   481     0EA5                     RC5PPS          equ	3749	;# 
   482     0EA6                     RC6PPS          equ	3750	;# 
   483     0EA7                     RC7PPS          equ	3751	;# 
   484     0F0F                     CLCDATA         equ	3855	;# 
   485     0F10                     CLC1CON         equ	3856	;# 
   486     0F11                     CLC1POL         equ	3857	;# 
   487     0F12                     CLC1SEL0        equ	3858	;# 
   488     0F13                     CLC1SEL1        equ	3859	;# 
   489     0F14                     CLC1SEL2        equ	3860	;# 
   490     0F15                     CLC1SEL3        equ	3861	;# 
   491     0F16                     CLC1GLS0        equ	3862	;# 
   492     0F17                     CLC1GLS1        equ	3863	;# 
   493     0F18                     CLC1GLS2        equ	3864	;# 
   494     0F19                     CLC1GLS3        equ	3865	;# 
   495     0F1A                     CLC2CON         equ	3866	;# 
   496     0F1B                     CLC2POL         equ	3867	;# 
   497     0F1C                     CLC2SEL0        equ	3868	;# 
   498     0F1D                     CLC2SEL1        equ	3869	;# 
   499     0F1E                     CLC2SEL2        equ	3870	;# 
   500     0F1F                     CLC2SEL3        equ	3871	;# 
   501     0F20                     CLC2GLS0        equ	3872	;# 
   502     0F21                     CLC2GLS1        equ	3873	;# 
   503     0F22                     CLC2GLS2        equ	3874	;# 
   504     0F23                     CLC2GLS3        equ	3875	;# 
   505     0F24                     CLC3CON         equ	3876	;# 
   506     0F25                     CLC3POL         equ	3877	;# 
   507     0F26                     CLC3SEL0        equ	3878	;# 
   508     0F27                     CLC3SEL1        equ	3879	;# 
   509     0F28                     CLC3SEL2        equ	3880	;# 
   510     0F29                     CLC3SEL3        equ	3881	;# 
   511     0F2A                     CLC3GLS0        equ	3882	;# 
   512     0F2B                     CLC3GLS1        equ	3883	;# 
   513     0F2C                     CLC3GLS2        equ	3884	;# 
   514     0F2D                     CLC3GLS3        equ	3885	;# 
   515     0F2E                     CLC4CON         equ	3886	;# 
   516     0F2F                     CLC4POL         equ	3887	;# 
   517     0F30                     CLC4SEL0        equ	3888	;# 
   518     0F31                     CLC4SEL1        equ	3889	;# 
   519     0F32                     CLC4SEL2        equ	3890	;# 
   520     0F33                     CLC4SEL3        equ	3891	;# 
   521     0F34                     CLC4GLS0        equ	3892	;# 
   522     0F35                     CLC4GLS1        equ	3893	;# 
   523     0F36                     CLC4GLS2        equ	3894	;# 
   524     0F37                     CLC4GLS3        equ	3895	;# 
   525     0FE4                     STATUS_SHAD     equ	4068	;# 
   526     0FE5                     WREG_SHAD       equ	4069	;# 
   527     0FE6                     BSR_SHAD        equ	4070	;# 
   528     0FE7                     PCLATH_SHAD     equ	4071	;# 
   529     0FE8                     FSR0L_SHAD      equ	4072	;# 
   530     0FE9                     FSR0H_SHAD      equ	4073	;# 
   531     0FEA                     FSR1L_SHAD      equ	4074	;# 
   532     0FEB                     FSR1H_SHAD      equ	4075	;# 
   533     0FED                     STKPTR          equ	4077	;# 
   534     0FEE                     TOSL            equ	4078	;# 
   535     0FEF                     TOSH            equ	4079	;# 
   536     0000                     INDF0           equ	0	;# 
   537     0001                     INDF1           equ	1	;# 
   538     0002                     PCL             equ	2	;# 
   539     0003                     STATUS          equ	3	;# 
   540     0004                     FSR0L           equ	4	;# 
   541     0005                     FSR0H           equ	5	;# 
   542     0006                     FSR1L           equ	6	;# 
   543     0007                     FSR1H           equ	7	;# 
   544     0008                     BSR             equ	8	;# 
   545     0009                     WREG            equ	9	;# 
   546     000A                     PCLATH          equ	10	;# 
   547     000B                     INTCON          equ	11	;# 
   548     000C                     PORTA           equ	12	;# 
   549     000D                     PORTB           equ	13	;# 
   550     000E                     PORTC           equ	14	;# 
   551     0010                     PIR0            equ	16	;# 
   552     0011                     PIR1            equ	17	;# 
   553     0012                     PIR2            equ	18	;# 
   554     0013                     PIR3            equ	19	;# 
   555     0014                     PIR4            equ	20	;# 
   556     0015                     TMR0L           equ	21	;# 
   557     0015                     TMR0            equ	21	;# 
   558     0016                     TMR0H           equ	22	;# 
   559     0016                     PR0             equ	22	;# 
   560     0017                     T0CON0          equ	23	;# 
   561     0018                     T0CON1          equ	24	;# 
   562     0019                     TMR1            equ	25	;# 
   563     0019                     TMR1L           equ	25	;# 
   564     001A                     TMR1H           equ	26	;# 
   565     001B                     T1CON           equ	27	;# 
   566     001C                     T1GCON          equ	28	;# 
   567     001D                     TMR2            equ	29	;# 
   568     001E                     PR2             equ	30	;# 
   569     001F                     T2CON           equ	31	;# 
   570     008C                     TRISA           equ	140	;# 
   571     008D                     TRISB           equ	141	;# 
   572     008E                     TRISC           equ	142	;# 
   573     0090                     PIE0            equ	144	;# 
   574     0091                     PIE1            equ	145	;# 
   575     0092                     PIE2            equ	146	;# 
   576     0093                     PIE3            equ	147	;# 
   577     0094                     PIE4            equ	148	;# 
   578     0097                     WDTCON          equ	151	;# 
   579     009B                     ADRES           equ	155	;# 
   580     009B                     ADRESL          equ	155	;# 
   581     009C                     ADRESH          equ	156	;# 
   582     009D                     ADCON0          equ	157	;# 
   583     009E                     ADCON1          equ	158	;# 
   584     009F                     ADACT           equ	159	;# 
   585     010C                     LATA            equ	268	;# 
   586     010D                     LATB            equ	269	;# 
   587     010E                     LATC            equ	270	;# 
   588     0111                     CM1CON0         equ	273	;# 
   589     0112                     CM1CON1         equ	274	;# 
   590     0113                     CM2CON0         equ	275	;# 
   591     0114                     CM2CON1         equ	276	;# 
   592     0115                     CMOUT           equ	277	;# 
   593     0116                     BORCON          equ	278	;# 
   594     0117                     FVRCON          equ	279	;# 
   595     0118                     DACCON0         equ	280	;# 
   596     0119                     DACCON1         equ	281	;# 
   597     018C                     ANSELA          equ	396	;# 
   598     018D                     ANSELB          equ	397	;# 
   599     018E                     ANSELC          equ	398	;# 
   600     0197                     VREGCON         equ	407	;# 
   601     0199                     RC1REG          equ	409	;# 
   602     0199                     RCREG           equ	409	;# 
   603     0199                     RCREG1          equ	409	;# 
   604     019A                     TX1REG          equ	410	;# 
   605     019A                     TXREG1          equ	410	;# 
   606     019A                     TXREG           equ	410	;# 
   607     019B                     SP1BRG          equ	411	;# 
   608     019B                     SPBRG           equ	411	;# 
   609     019B                     SP1BRGL         equ	411	;# 
   610     019B                     SPBRG1          equ	411	;# 
   611     019B                     SPBRGL          equ	411	;# 
   612     019C                     SP1BRGH         equ	412	;# 
   613     019C                     SPBRGH          equ	412	;# 
   614     019C                     SPBRGH1         equ	412	;# 
   615     019D                     RC1STA          equ	413	;# 
   616     019D                     RCSTA1          equ	413	;# 
   617     019D                     RCSTA           equ	413	;# 
   618     019E                     TX1STA          equ	414	;# 
   619     019E                     TXSTA1          equ	414	;# 
   620     019E                     TXSTA           equ	414	;# 
   621     019F                     BAUD1CON        equ	415	;# 
   622     019F                     BAUDCON1        equ	415	;# 
   623     019F                     BAUDCTL1        equ	415	;# 
   624     019F                     BAUDCON         equ	415	;# 
   625     019F                     BAUDCTL         equ	415	;# 
   626     020C                     WPUA            equ	524	;# 
   627     020D                     WPUB            equ	525	;# 
   628     020E                     WPUC            equ	526	;# 
   629     0211                     SSP1BUF         equ	529	;# 
   630     0211                     SSPBUF          equ	529	;# 
   631     0212                     SSP1ADD         equ	530	;# 
   632     0212                     SSPADD          equ	530	;# 
   633     0213                     SSP1MSK         equ	531	;# 
   634     0213                     SSPMSK          equ	531	;# 
   635     0214                     SSP1STAT        equ	532	;# 
   636     0214                     SSPSTAT         equ	532	;# 
   637     0215                     SSP1CON1        equ	533	;# 
   638     0215                     SSPCON          equ	533	;# 
   639     0215                     SSPCON1         equ	533	;# 
   640     0215                     SSP1CON         equ	533	;# 
   641     0216                     SSP1CON2        equ	534	;# 
   642     0216                     SSPCON2         equ	534	;# 
   643     0217                     SSP1CON3        equ	535	;# 
   644     0217                     SSPCON3         equ	535	;# 
   645     0219                     SSP2BUF         equ	537	;# 
   646     021A                     SSP2ADD         equ	538	;# 
   647     021B                     SSP2MSK         equ	539	;# 
   648     021C                     SSP2STAT        equ	540	;# 
   649     021D                     SSP2CON1        equ	541	;# 
   650     021D                     SSP2CON         equ	541	;# 
   651     021E                     SSP2CON2        equ	542	;# 
   652     021F                     SSP2CON3        equ	543	;# 
   653     028C                     ODCONA          equ	652	;# 
   654     028D                     ODCONB          equ	653	;# 
   655     028E                     ODCONC          equ	654	;# 
   656     0291                     CCPR1           equ	657	;# 
   657     0291                     CCPR1L          equ	657	;# 
   658     0292                     CCPR1H          equ	658	;# 
   659     0293                     CCP1CON         equ	659	;# 
   660     0294                     CCP1CAP         equ	660	;# 
   661     0295                     CCPR2           equ	661	;# 
   662     0295                     CCPR2L          equ	661	;# 
   663     0296                     CCPR2H          equ	662	;# 
   664     0297                     CCP2CON         equ	663	;# 
   665     0298                     CCP2CAP         equ	664	;# 
   666     029F                     CCPTMRS         equ	671	;# 
   667     030C                     SLRCONA         equ	780	;# 
   668     030D                     SLRCONB         equ	781	;# 
   669     030E                     SLRCONC         equ	782	;# 
   670     0311                     CCPR3           equ	785	;# 
   671     0311                     CCPR3L          equ	785	;# 
   672     0312                     CCPR3H          equ	786	;# 
   673     0313                     CCP3CON         equ	787	;# 
   674     0314                     CCP3CAP         equ	788	;# 
   675     0315                     CCPR4           equ	789	;# 
   676     0315                     CCPR4L          equ	789	;# 
   677     0316                     CCPR4H          equ	790	;# 
   678     0317                     CCP4CON         equ	791	;# 
   679     0318                     CCP4CAP         equ	792	;# 
   680     038C                     INLVLA          equ	908	;# 
   681     038D                     INLVLB          equ	909	;# 
   682     038E                     INLVLC          equ	910	;# 
   683     0391                     IOCAP           equ	913	;# 
   684     0392                     IOCAN           equ	914	;# 
   685     0393                     IOCAF           equ	915	;# 
   686     0394                     IOCBP           equ	916	;# 
   687     0395                     IOCBN           equ	917	;# 
   688     0396                     IOCBF           equ	918	;# 
   689     0397                     IOCCP           equ	919	;# 
   690     0398                     IOCCN           equ	920	;# 
   691     0399                     IOCCF           equ	921	;# 
   692     039A                     CLKRCON         equ	922	;# 
   693     039C                     MDCON           equ	924	;# 
   694     039D                     MDSRC           equ	925	;# 
   695     039E                     MDCARH          equ	926	;# 
   696     039F                     MDCARL          equ	927	;# 
   697     0411                     TMR3            equ	1041	;# 
   698     0411                     TMR3L           equ	1041	;# 
   699     0412                     TMR3H           equ	1042	;# 
   700     0413                     T3CON           equ	1043	;# 
   701     0414                     T3GCON          equ	1044	;# 
   702     0415                     TMR4            equ	1045	;# 
   703     0416                     PR4             equ	1046	;# 
   704     0417                     T4CON           equ	1047	;# 
   705     0418                     TMR5            equ	1048	;# 
   706     0418                     TMR5L           equ	1048	;# 
   707     0419                     TMR5H           equ	1049	;# 
   708     041A                     T5CON           equ	1050	;# 
   709     041B                     T5GCON          equ	1051	;# 
   710     041C                     TMR6            equ	1052	;# 
   711     041D                     PR6             equ	1053	;# 
   712     041E                     T6CON           equ	1054	;# 
   713     041F                     CCDCON          equ	1055	;# 
   714     0498                     NCO1ACC         equ	1176	;# 
   715     0498                     NCO1ACCL        equ	1176	;# 
   716     0499                     NCO1ACCH        equ	1177	;# 
   717     049A                     NCO1ACCU        equ	1178	;# 
   718     049B                     NCO1INC         equ	1179	;# 
   719     049B                     NCO1INCL        equ	1179	;# 
   720     049C                     NCO1INCH        equ	1180	;# 
   721     049D                     NCO1INCU        equ	1181	;# 
   722     049E                     NCO1CON         equ	1182	;# 
   723     049F                     NCO1CLK         equ	1183	;# 
   724     0617                     PWM5DCL         equ	1559	;# 
   725     0618                     PWM5DCH         equ	1560	;# 
   726     0619                     PWM5CON         equ	1561	;# 
   727     0619                     PWM5CON0        equ	1561	;# 
   728     061A                     PWM6DCL         equ	1562	;# 
   729     061B                     PWM6DCH         equ	1563	;# 
   730     061C                     PWM6CON         equ	1564	;# 
   731     061C                     PWM6CON0        equ	1564	;# 
   732     061F                     PWMTMRS         equ	1567	;# 
   733     0691                     CWG1CLKCON      equ	1681	;# 
   734     0692                     CWG1DAT         equ	1682	;# 
   735     0693                     CWG1DBR         equ	1683	;# 
   736     0694                     CWG1DBF         equ	1684	;# 
   737     0695                     CWG1CON0        equ	1685	;# 
   738     0696                     CWG1CON1        equ	1686	;# 
   739     0697                     CWG1AS0         equ	1687	;# 
   740     0698                     CWG1AS1         equ	1688	;# 
   741     0699                     CWG1STR         equ	1689	;# 
   742     0711                     CWG2CLKCON      equ	1809	;# 
   743     0712                     CWG2DAT         equ	1810	;# 
   744     0713                     CWG2DBR         equ	1811	;# 
   745     0714                     CWG2DBF         equ	1812	;# 
   746     0715                     CWG2CON0        equ	1813	;# 
   747     0716                     CWG2CON1        equ	1814	;# 
   748     0717                     CWG2AS0         equ	1815	;# 
   749     0718                     CWG2AS1         equ	1816	;# 
   750     0719                     CWG2STR         equ	1817	;# 
   751     0891                     NVMADR          equ	2193	;# 
   752     0891                     EEADR           equ	2193	;# 
   753     0891                     PMADR           equ	2193	;# 
   754     0891                     NVMADRL         equ	2193	;# 
   755     0891                     EEADRL          equ	2193	;# 
   756     0891                     PMADRL          equ	2193	;# 
   757     0892                     NVMADRH         equ	2194	;# 
   758     0892                     EEADRH          equ	2194	;# 
   759     0892                     PMADRH          equ	2194	;# 
   760     0893                     NVMDAT          equ	2195	;# 
   761     0893                     EEDAT           equ	2195	;# 
   762     0893                     PMDAT           equ	2195	;# 
   763     0893                     NVMDATL         equ	2195	;# 
   764     0893                     EEDATL          equ	2195	;# 
   765     0893                     PMDATL          equ	2195	;# 
   766     0894                     NVMDATH         equ	2196	;# 
   767     0894                     EEDATH          equ	2196	;# 
   768     0894                     PMDATH          equ	2196	;# 
   769     0895                     NVMCON1         equ	2197	;# 
   770     0895                     EECON1          equ	2197	;# 
   771     0895                     PMCON1          equ	2197	;# 
   772     0896                     NVMCON2         equ	2198	;# 
   773     0896                     EECON2          equ	2198	;# 
   774     0896                     PMCON2          equ	2198	;# 
   775     089B                     PCON0           equ	2203	;# 
   776     0911                     PMD0            equ	2321	;# 
   777     0912                     PMD1            equ	2322	;# 
   778     0913                     PMD2            equ	2323	;# 
   779     0914                     PMD3            equ	2324	;# 
   780     0915                     PMD4            equ	2325	;# 
   781     0916                     PMD5            equ	2326	;# 
   782     0918                     CPUDOZE         equ	2328	;# 
   783     0919                     OSCCON1         equ	2329	;# 
   784     091A                     OSCCON2         equ	2330	;# 
   785     091B                     OSCCON3         equ	2331	;# 
   786     091C                     OSCSTAT1        equ	2332	;# 
   787     091D                     OSCEN           equ	2333	;# 
   788     091E                     OSCTUNE         equ	2334	;# 
   789     091F                     OSCFRQ          equ	2335	;# 
   790     0E0F                     PPSLOCK         equ	3599	;# 
   791     0E10                     INTPPS          equ	3600	;# 
   792     0E11                     T0CKIPPS        equ	3601	;# 
   793     0E12                     T1CKIPPS        equ	3602	;# 
   794     0E13                     T1GPPS          equ	3603	;# 
   795     0E14                     CCP1PPS         equ	3604	;# 
   796     0E15                     CCP2PPS         equ	3605	;# 
   797     0E16                     CCP3PPS         equ	3606	;# 
   798     0E17                     CCP4PPS         equ	3607	;# 
   799     0E18                     CWG1PPS         equ	3608	;# 
   800     0E19                     CWG2PPS         equ	3609	;# 
   801     0E1A                     MDCIN1PPS       equ	3610	;# 
   802     0E1B                     MDCIN2PPS       equ	3611	;# 
   803     0E1C                     MDMINPPS        equ	3612	;# 
   804     0E1D                     SSP2CLKPPS      equ	3613	;# 
   805     0E1E                     SSP2DATPPS      equ	3614	;# 
   806     0E1F                     SSP2SSPPS       equ	3615	;# 
   807     0E20                     SSP1CLKPPS      equ	3616	;# 
   808     0E21                     SSP1DATPPS      equ	3617	;# 
   809     0E22                     SSP1SSPPS       equ	3618	;# 
   810     0E24                     RXPPS           equ	3620	;# 
   811     0E25                     TXPPS           equ	3621	;# 
   812     0E28                     CLCIN0PPS       equ	3624	;# 
   813     0E29                     CLCIN1PPS       equ	3625	;# 
   814     0E2A                     CLCIN2PPS       equ	3626	;# 
   815     0E2B                     CLCIN3PPS       equ	3627	;# 
   816     0E2C                     T3CKIPPS        equ	3628	;# 
   817     0E2D                     T3GPPS          equ	3629	;# 
   818     0E2E                     T5CKIPPS        equ	3630	;# 
   819     0E2F                     T5GPPS          equ	3631	;# 
   820     0E90                     RA0PPS          equ	3728	;# 
   821     0E91                     RA1PPS          equ	3729	;# 
   822     0E92                     RA2PPS          equ	3730	;# 
   823     0E94                     RA4PPS          equ	3732	;# 
   824     0E95                     RA5PPS          equ	3733	;# 
   825     0E9C                     RB4PPS          equ	3740	;# 
   826     0E9D                     RB5PPS          equ	3741	;# 
   827     0E9E                     RB6PPS          equ	3742	;# 
   828     0E9F                     RB7PPS          equ	3743	;# 
   829     0EA0                     RC0PPS          equ	3744	;# 
   830     0EA1                     RC1PPS          equ	3745	;# 
   831     0EA2                     RC2PPS          equ	3746	;# 
   832     0EA3                     RC3PPS          equ	3747	;# 
   833     0EA4                     RC4PPS          equ	3748	;# 
   834     0EA5                     RC5PPS          equ	3749	;# 
   835     0EA6                     RC6PPS          equ	3750	;# 
   836     0EA7                     RC7PPS          equ	3751	;# 
   837     0F0F                     CLCDATA         equ	3855	;# 
   838     0F10                     CLC1CON         equ	3856	;# 
   839     0F11                     CLC1POL         equ	3857	;# 
   840     0F12                     CLC1SEL0        equ	3858	;# 
   841     0F13                     CLC1SEL1        equ	3859	;# 
   842     0F14                     CLC1SEL2        equ	3860	;# 
   843     0F15                     CLC1SEL3        equ	3861	;# 
   844     0F16                     CLC1GLS0        equ	3862	;# 
   845     0F17                     CLC1GLS1        equ	3863	;# 
   846     0F18                     CLC1GLS2        equ	3864	;# 
   847     0F19                     CLC1GLS3        equ	3865	;# 
   848     0F1A                     CLC2CON         equ	3866	;# 
   849     0F1B                     CLC2POL         equ	3867	;# 
   850     0F1C                     CLC2SEL0        equ	3868	;# 
   851     0F1D                     CLC2SEL1        equ	3869	;# 
   852     0F1E                     CLC2SEL2        equ	3870	;# 
   853     0F1F                     CLC2SEL3        equ	3871	;# 
   854     0F20                     CLC2GLS0        equ	3872	;# 
   855     0F21                     CLC2GLS1        equ	3873	;# 
   856     0F22                     CLC2GLS2        equ	3874	;# 
   857     0F23                     CLC2GLS3        equ	3875	;# 
   858     0F24                     CLC3CON         equ	3876	;# 
   859     0F25                     CLC3POL         equ	3877	;# 
   860     0F26                     CLC3SEL0        equ	3878	;# 
   861     0F27                     CLC3SEL1        equ	3879	;# 
   862     0F28                     CLC3SEL2        equ	3880	;# 
   863     0F29                     CLC3SEL3        equ	3881	;# 
   864     0F2A                     CLC3GLS0        equ	3882	;# 
   865     0F2B                     CLC3GLS1        equ	3883	;# 
   866     0F2C                     CLC3GLS2        equ	3884	;# 
   867     0F2D                     CLC3GLS3        equ	3885	;# 
   868     0F2E                     CLC4CON         equ	3886	;# 
   869     0F2F                     CLC4POL         equ	3887	;# 
   870     0F30                     CLC4SEL0        equ	3888	;# 
   871     0F31                     CLC4SEL1        equ	3889	;# 
   872     0F32                     CLC4SEL2        equ	3890	;# 
   873     0F33                     CLC4SEL3        equ	3891	;# 
   874     0F34                     CLC4GLS0        equ	3892	;# 
   875     0F35                     CLC4GLS1        equ	3893	;# 
   876     0F36                     CLC4GLS2        equ	3894	;# 
   877     0F37                     CLC4GLS3        equ	3895	;# 
   878     0FE4                     STATUS_SHAD     equ	4068	;# 
   879     0FE5                     WREG_SHAD       equ	4069	;# 
   880     0FE6                     BSR_SHAD        equ	4070	;# 
   881     0FE7                     PCLATH_SHAD     equ	4071	;# 
   882     0FE8                     FSR0L_SHAD      equ	4072	;# 
   883     0FE9                     FSR0H_SHAD      equ	4073	;# 
   884     0FEA                     FSR1L_SHAD      equ	4074	;# 
   885     0FEB                     FSR1H_SHAD      equ	4075	;# 
   886     0FED                     STKPTR          equ	4077	;# 
   887     0FEE                     TOSL            equ	4078	;# 
   888     0FEF                     TOSH            equ	4079	;# 
   889     0000                     INDF0           equ	0	;# 
   890     0001                     INDF1           equ	1	;# 
   891     0002                     PCL             equ	2	;# 
   892     0003                     STATUS          equ	3	;# 
   893     0004                     FSR0L           equ	4	;# 
   894     0005                     FSR0H           equ	5	;# 
   895     0006                     FSR1L           equ	6	;# 
   896     0007                     FSR1H           equ	7	;# 
   897     0008                     BSR             equ	8	;# 
   898     0009                     WREG            equ	9	;# 
   899     000A                     PCLATH          equ	10	;# 
   900     000B                     INTCON          equ	11	;# 
   901     000C                     PORTA           equ	12	;# 
   902     000D                     PORTB           equ	13	;# 
   903     000E                     PORTC           equ	14	;# 
   904     0010                     PIR0            equ	16	;# 
   905     0011                     PIR1            equ	17	;# 
   906     0012                     PIR2            equ	18	;# 
   907     0013                     PIR3            equ	19	;# 
   908     0014                     PIR4            equ	20	;# 
   909     0015                     TMR0L           equ	21	;# 
   910     0015                     TMR0            equ	21	;# 
   911     0016                     TMR0H           equ	22	;# 
   912     0016                     PR0             equ	22	;# 
   913     0017                     T0CON0          equ	23	;# 
   914     0018                     T0CON1          equ	24	;# 
   915     0019                     TMR1            equ	25	;# 
   916     0019                     TMR1L           equ	25	;# 
   917     001A                     TMR1H           equ	26	;# 
   918     001B                     T1CON           equ	27	;# 
   919     001C                     T1GCON          equ	28	;# 
   920     001D                     TMR2            equ	29	;# 
   921     001E                     PR2             equ	30	;# 
   922     001F                     T2CON           equ	31	;# 
   923     008C                     TRISA           equ	140	;# 
   924     008D                     TRISB           equ	141	;# 
   925     008E                     TRISC           equ	142	;# 
   926     0090                     PIE0            equ	144	;# 
   927     0091                     PIE1            equ	145	;# 
   928     0092                     PIE2            equ	146	;# 
   929     0093                     PIE3            equ	147	;# 
   930     0094                     PIE4            equ	148	;# 
   931     0097                     WDTCON          equ	151	;# 
   932     009B                     ADRES           equ	155	;# 
   933     009B                     ADRESL          equ	155	;# 
   934     009C                     ADRESH          equ	156	;# 
   935     009D                     ADCON0          equ	157	;# 
   936     009E                     ADCON1          equ	158	;# 
   937     009F                     ADACT           equ	159	;# 
   938     010C                     LATA            equ	268	;# 
   939     010D                     LATB            equ	269	;# 
   940     010E                     LATC            equ	270	;# 
   941     0111                     CM1CON0         equ	273	;# 
   942     0112                     CM1CON1         equ	274	;# 
   943     0113                     CM2CON0         equ	275	;# 
   944     0114                     CM2CON1         equ	276	;# 
   945     0115                     CMOUT           equ	277	;# 
   946     0116                     BORCON          equ	278	;# 
   947     0117                     FVRCON          equ	279	;# 
   948     0118                     DACCON0         equ	280	;# 
   949     0119                     DACCON1         equ	281	;# 
   950     018C                     ANSELA          equ	396	;# 
   951     018D                     ANSELB          equ	397	;# 
   952     018E                     ANSELC          equ	398	;# 
   953     0197                     VREGCON         equ	407	;# 
   954     0199                     RC1REG          equ	409	;# 
   955     0199                     RCREG           equ	409	;# 
   956     0199                     RCREG1          equ	409	;# 
   957     019A                     TX1REG          equ	410	;# 
   958     019A                     TXREG1          equ	410	;# 
   959     019A                     TXREG           equ	410	;# 
   960     019B                     SP1BRG          equ	411	;# 
   961     019B                     SPBRG           equ	411	;# 
   962     019B                     SP1BRGL         equ	411	;# 
   963     019B                     SPBRG1          equ	411	;# 
   964     019B                     SPBRGL          equ	411	;# 
   965     019C                     SP1BRGH         equ	412	;# 
   966     019C                     SPBRGH          equ	412	;# 
   967     019C                     SPBRGH1         equ	412	;# 
   968     019D                     RC1STA          equ	413	;# 
   969     019D                     RCSTA1          equ	413	;# 
   970     019D                     RCSTA           equ	413	;# 
   971     019E                     TX1STA          equ	414	;# 
   972     019E                     TXSTA1          equ	414	;# 
   973     019E                     TXSTA           equ	414	;# 
   974     019F                     BAUD1CON        equ	415	;# 
   975     019F                     BAUDCON1        equ	415	;# 
   976     019F                     BAUDCTL1        equ	415	;# 
   977     019F                     BAUDCON         equ	415	;# 
   978     019F                     BAUDCTL         equ	415	;# 
   979     020C                     WPUA            equ	524	;# 
   980     020D                     WPUB            equ	525	;# 
   981     020E                     WPUC            equ	526	;# 
   982     0211                     SSP1BUF         equ	529	;# 
   983     0211                     SSPBUF          equ	529	;# 
   984     0212                     SSP1ADD         equ	530	;# 
   985     0212                     SSPADD          equ	530	;# 
   986     0213                     SSP1MSK         equ	531	;# 
   987     0213                     SSPMSK          equ	531	;# 
   988     0214                     SSP1STAT        equ	532	;# 
   989     0214                     SSPSTAT         equ	532	;# 
   990     0215                     SSP1CON1        equ	533	;# 
   991     0215                     SSPCON          equ	533	;# 
   992     0215                     SSPCON1         equ	533	;# 
   993     0215                     SSP1CON         equ	533	;# 
   994     0216                     SSP1CON2        equ	534	;# 
   995     0216                     SSPCON2         equ	534	;# 
   996     0217                     SSP1CON3        equ	535	;# 
   997     0217                     SSPCON3         equ	535	;# 
   998     0219                     SSP2BUF         equ	537	;# 
   999     021A                     SSP2ADD         equ	538	;# 
  1000     021B                     SSP2MSK         equ	539	;# 
  1001     021C                     SSP2STAT        equ	540	;# 
  1002     021D                     SSP2CON1        equ	541	;# 
  1003     021D                     SSP2CON         equ	541	;# 
  1004     021E                     SSP2CON2        equ	542	;# 
  1005     021F                     SSP2CON3        equ	543	;# 
  1006     028C                     ODCONA          equ	652	;# 
  1007     028D                     ODCONB          equ	653	;# 
  1008     028E                     ODCONC          equ	654	;# 
  1009     0291                     CCPR1           equ	657	;# 
  1010     0291                     CCPR1L          equ	657	;# 
  1011     0292                     CCPR1H          equ	658	;# 
  1012     0293                     CCP1CON         equ	659	;# 
  1013     0294                     CCP1CAP         equ	660	;# 
  1014     0295                     CCPR2           equ	661	;# 
  1015     0295                     CCPR2L          equ	661	;# 
  1016     0296                     CCPR2H          equ	662	;# 
  1017     0297                     CCP2CON         equ	663	;# 
  1018     0298                     CCP2CAP         equ	664	;# 
  1019     029F                     CCPTMRS         equ	671	;# 
  1020     030C                     SLRCONA         equ	780	;# 
  1021     030D                     SLRCONB         equ	781	;# 
  1022     030E                     SLRCONC         equ	782	;# 
  1023     0311                     CCPR3           equ	785	;# 
  1024     0311                     CCPR3L          equ	785	;# 
  1025     0312                     CCPR3H          equ	786	;# 
  1026     0313                     CCP3CON         equ	787	;# 
  1027     0314                     CCP3CAP         equ	788	;# 
  1028     0315                     CCPR4           equ	789	;# 
  1029     0315                     CCPR4L          equ	789	;# 
  1030     0316                     CCPR4H          equ	790	;# 
  1031     0317                     CCP4CON         equ	791	;# 
  1032     0318                     CCP4CAP         equ	792	;# 
  1033     038C                     INLVLA          equ	908	;# 
  1034     038D                     INLVLB          equ	909	;# 
  1035     038E                     INLVLC          equ	910	;# 
  1036     0391                     IOCAP           equ	913	;# 
  1037     0392                     IOCAN           equ	914	;# 
  1038     0393                     IOCAF           equ	915	;# 
  1039     0394                     IOCBP           equ	916	;# 
  1040     0395                     IOCBN           equ	917	;# 
  1041     0396                     IOCBF           equ	918	;# 
  1042     0397                     IOCCP           equ	919	;# 
  1043     0398                     IOCCN           equ	920	;# 
  1044     0399                     IOCCF           equ	921	;# 
  1045     039A                     CLKRCON         equ	922	;# 
  1046     039C                     MDCON           equ	924	;# 
  1047     039D                     MDSRC           equ	925	;# 
  1048     039E                     MDCARH          equ	926	;# 
  1049     039F                     MDCARL          equ	927	;# 
  1050     0411                     TMR3            equ	1041	;# 
  1051     0411                     TMR3L           equ	1041	;# 
  1052     0412                     TMR3H           equ	1042	;# 
  1053     0413                     T3CON           equ	1043	;# 
  1054     0414                     T3GCON          equ	1044	;# 
  1055     0415                     TMR4            equ	1045	;# 
  1056     0416                     PR4             equ	1046	;# 
  1057     0417                     T4CON           equ	1047	;# 
  1058     0418                     TMR5            equ	1048	;# 
  1059     0418                     TMR5L           equ	1048	;# 
  1060     0419                     TMR5H           equ	1049	;# 
  1061     041A                     T5CON           equ	1050	;# 
  1062     041B                     T5GCON          equ	1051	;# 
  1063     041C                     TMR6            equ	1052	;# 
  1064     041D                     PR6             equ	1053	;# 
  1065     041E                     T6CON           equ	1054	;# 
  1066     041F                     CCDCON          equ	1055	;# 
  1067     0498                     NCO1ACC         equ	1176	;# 
  1068     0498                     NCO1ACCL        equ	1176	;# 
  1069     0499                     NCO1ACCH        equ	1177	;# 
  1070     049A                     NCO1ACCU        equ	1178	;# 
  1071     049B                     NCO1INC         equ	1179	;# 
  1072     049B                     NCO1INCL        equ	1179	;# 
  1073     049C                     NCO1INCH        equ	1180	;# 
  1074     049D                     NCO1INCU        equ	1181	;# 
  1075     049E                     NCO1CON         equ	1182	;# 
  1076     049F                     NCO1CLK         equ	1183	;# 
  1077     0617                     PWM5DCL         equ	1559	;# 
  1078     0618                     PWM5DCH         equ	1560	;# 
  1079     0619                     PWM5CON         equ	1561	;# 
  1080     0619                     PWM5CON0        equ	1561	;# 
  1081     061A                     PWM6DCL         equ	1562	;# 
  1082     061B                     PWM6DCH         equ	1563	;# 
  1083     061C                     PWM6CON         equ	1564	;# 
  1084     061C                     PWM6CON0        equ	1564	;# 
  1085     061F                     PWMTMRS         equ	1567	;# 
  1086     0691                     CWG1CLKCON      equ	1681	;# 
  1087     0692                     CWG1DAT         equ	1682	;# 
  1088     0693                     CWG1DBR         equ	1683	;# 
  1089     0694                     CWG1DBF         equ	1684	;# 
  1090     0695                     CWG1CON0        equ	1685	;# 
  1091     0696                     CWG1CON1        equ	1686	;# 
  1092     0697                     CWG1AS0         equ	1687	;# 
  1093     0698                     CWG1AS1         equ	1688	;# 
  1094     0699                     CWG1STR         equ	1689	;# 
  1095     0711                     CWG2CLKCON      equ	1809	;# 
  1096     0712                     CWG2DAT         equ	1810	;# 
  1097     0713                     CWG2DBR         equ	1811	;# 
  1098     0714                     CWG2DBF         equ	1812	;# 
  1099     0715                     CWG2CON0        equ	1813	;# 
  1100     0716                     CWG2CON1        equ	1814	;# 
  1101     0717                     CWG2AS0         equ	1815	;# 
  1102     0718                     CWG2AS1         equ	1816	;# 
  1103     0719                     CWG2STR         equ	1817	;# 
  1104     0891                     NVMADR          equ	2193	;# 
  1105     0891                     EEADR           equ	2193	;# 
  1106     0891                     PMADR           equ	2193	;# 
  1107     0891                     NVMADRL         equ	2193	;# 
  1108     0891                     EEADRL          equ	2193	;# 
  1109     0891                     PMADRL          equ	2193	;# 
  1110     0892                     NVMADRH         equ	2194	;# 
  1111     0892                     EEADRH          equ	2194	;# 
  1112     0892                     PMADRH          equ	2194	;# 
  1113     0893                     NVMDAT          equ	2195	;# 
  1114     0893                     EEDAT           equ	2195	;# 
  1115     0893                     PMDAT           equ	2195	;# 
  1116     0893                     NVMDATL         equ	2195	;# 
  1117     0893                     EEDATL          equ	2195	;# 
  1118     0893                     PMDATL          equ	2195	;# 
  1119     0894                     NVMDATH         equ	2196	;# 
  1120     0894                     EEDATH          equ	2196	;# 
  1121     0894                     PMDATH          equ	2196	;# 
  1122     0895                     NVMCON1         equ	2197	;# 
  1123     0895                     EECON1          equ	2197	;# 
  1124     0895                     PMCON1          equ	2197	;# 
  1125     0896                     NVMCON2         equ	2198	;# 
  1126     0896                     EECON2          equ	2198	;# 
  1127     0896                     PMCON2          equ	2198	;# 
  1128     089B                     PCON0           equ	2203	;# 
  1129     0911                     PMD0            equ	2321	;# 
  1130     0912                     PMD1            equ	2322	;# 
  1131     0913                     PMD2            equ	2323	;# 
  1132     0914                     PMD3            equ	2324	;# 
  1133     0915                     PMD4            equ	2325	;# 
  1134     0916                     PMD5            equ	2326	;# 
  1135     0918                     CPUDOZE         equ	2328	;# 
  1136     0919                     OSCCON1         equ	2329	;# 
  1137     091A                     OSCCON2         equ	2330	;# 
  1138     091B                     OSCCON3         equ	2331	;# 
  1139     091C                     OSCSTAT1        equ	2332	;# 
  1140     091D                     OSCEN           equ	2333	;# 
  1141     091E                     OSCTUNE         equ	2334	;# 
  1142     091F                     OSCFRQ          equ	2335	;# 
  1143     0E0F                     PPSLOCK         equ	3599	;# 
  1144     0E10                     INTPPS          equ	3600	;# 
  1145     0E11                     T0CKIPPS        equ	3601	;# 
  1146     0E12                     T1CKIPPS        equ	3602	;# 
  1147     0E13                     T1GPPS          equ	3603	;# 
  1148     0E14                     CCP1PPS         equ	3604	;# 
  1149     0E15                     CCP2PPS         equ	3605	;# 
  1150     0E16                     CCP3PPS         equ	3606	;# 
  1151     0E17                     CCP4PPS         equ	3607	;# 
  1152     0E18                     CWG1PPS         equ	3608	;# 
  1153     0E19                     CWG2PPS         equ	3609	;# 
  1154     0E1A                     MDCIN1PPS       equ	3610	;# 
  1155     0E1B                     MDCIN2PPS       equ	3611	;# 
  1156     0E1C                     MDMINPPS        equ	3612	;# 
  1157     0E1D                     SSP2CLKPPS      equ	3613	;# 
  1158     0E1E                     SSP2DATPPS      equ	3614	;# 
  1159     0E1F                     SSP2SSPPS       equ	3615	;# 
  1160     0E20                     SSP1CLKPPS      equ	3616	;# 
  1161     0E21                     SSP1DATPPS      equ	3617	;# 
  1162     0E22                     SSP1SSPPS       equ	3618	;# 
  1163     0E24                     RXPPS           equ	3620	;# 
  1164     0E25                     TXPPS           equ	3621	;# 
  1165     0E28                     CLCIN0PPS       equ	3624	;# 
  1166     0E29                     CLCIN1PPS       equ	3625	;# 
  1167     0E2A                     CLCIN2PPS       equ	3626	;# 
  1168     0E2B                     CLCIN3PPS       equ	3627	;# 
  1169     0E2C                     T3CKIPPS        equ	3628	;# 
  1170     0E2D                     T3GPPS          equ	3629	;# 
  1171     0E2E                     T5CKIPPS        equ	3630	;# 
  1172     0E2F                     T5GPPS          equ	3631	;# 
  1173     0E90                     RA0PPS          equ	3728	;# 
  1174     0E91                     RA1PPS          equ	3729	;# 
  1175     0E92                     RA2PPS          equ	3730	;# 
  1176     0E94                     RA4PPS          equ	3732	;# 
  1177     0E95                     RA5PPS          equ	3733	;# 
  1178     0E9C                     RB4PPS          equ	3740	;# 
  1179     0E9D                     RB5PPS          equ	3741	;# 
  1180     0E9E                     RB6PPS          equ	3742	;# 
  1181     0E9F                     RB7PPS          equ	3743	;# 
  1182     0EA0                     RC0PPS          equ	3744	;# 
  1183     0EA1                     RC1PPS          equ	3745	;# 
  1184     0EA2                     RC2PPS          equ	3746	;# 
  1185     0EA3                     RC3PPS          equ	3747	;# 
  1186     0EA4                     RC4PPS          equ	3748	;# 
  1187     0EA5                     RC5PPS          equ	3749	;# 
  1188     0EA6                     RC6PPS          equ	3750	;# 
  1189     0EA7                     RC7PPS          equ	3751	;# 
  1190     0F0F                     CLCDATA         equ	3855	;# 
  1191     0F10                     CLC1CON         equ	3856	;# 
  1192     0F11                     CLC1POL         equ	3857	;# 
  1193     0F12                     CLC1SEL0        equ	3858	;# 
  1194     0F13                     CLC1SEL1        equ	3859	;# 
  1195     0F14                     CLC1SEL2        equ	3860	;# 
  1196     0F15                     CLC1SEL3        equ	3861	;# 
  1197     0F16                     CLC1GLS0        equ	3862	;# 
  1198     0F17                     CLC1GLS1        equ	3863	;# 
  1199     0F18                     CLC1GLS2        equ	3864	;# 
  1200     0F19                     CLC1GLS3        equ	3865	;# 
  1201     0F1A                     CLC2CON         equ	3866	;# 
  1202     0F1B                     CLC2POL         equ	3867	;# 
  1203     0F1C                     CLC2SEL0        equ	3868	;# 
  1204     0F1D                     CLC2SEL1        equ	3869	;# 
  1205     0F1E                     CLC2SEL2        equ	3870	;# 
  1206     0F1F                     CLC2SEL3        equ	3871	;# 
  1207     0F20                     CLC2GLS0        equ	3872	;# 
  1208     0F21                     CLC2GLS1        equ	3873	;# 
  1209     0F22                     CLC2GLS2        equ	3874	;# 
  1210     0F23                     CLC2GLS3        equ	3875	;# 
  1211     0F24                     CLC3CON         equ	3876	;# 
  1212     0F25                     CLC3POL         equ	3877	;# 
  1213     0F26                     CLC3SEL0        equ	3878	;# 
  1214     0F27                     CLC3SEL1        equ	3879	;# 
  1215     0F28                     CLC3SEL2        equ	3880	;# 
  1216     0F29                     CLC3SEL3        equ	3881	;# 
  1217     0F2A                     CLC3GLS0        equ	3882	;# 
  1218     0F2B                     CLC3GLS1        equ	3883	;# 
  1219     0F2C                     CLC3GLS2        equ	3884	;# 
  1220     0F2D                     CLC3GLS3        equ	3885	;# 
  1221     0F2E                     CLC4CON         equ	3886	;# 
  1222     0F2F                     CLC4POL         equ	3887	;# 
  1223     0F30                     CLC4SEL0        equ	3888	;# 
  1224     0F31                     CLC4SEL1        equ	3889	;# 
  1225     0F32                     CLC4SEL2        equ	3890	;# 
  1226     0F33                     CLC4SEL3        equ	3891	;# 
  1227     0F34                     CLC4GLS0        equ	3892	;# 
  1228     0F35                     CLC4GLS1        equ	3893	;# 
  1229     0F36                     CLC4GLS2        equ	3894	;# 
  1230     0F37                     CLC4GLS3        equ	3895	;# 
  1231     0FE4                     STATUS_SHAD     equ	4068	;# 
  1232     0FE5                     WREG_SHAD       equ	4069	;# 
  1233     0FE6                     BSR_SHAD        equ	4070	;# 
  1234     0FE7                     PCLATH_SHAD     equ	4071	;# 
  1235     0FE8                     FSR0L_SHAD      equ	4072	;# 
  1236     0FE9                     FSR0H_SHAD      equ	4073	;# 
  1237     0FEA                     FSR1L_SHAD      equ	4074	;# 
  1238     0FEB                     FSR1H_SHAD      equ	4075	;# 
  1239     0FED                     STKPTR          equ	4077	;# 
  1240     0FEE                     TOSL            equ	4078	;# 
  1241     0FEF                     TOSH            equ	4079	;# 
  1242     0000                     INDF0           equ	0	;# 
  1243     0001                     INDF1           equ	1	;# 
  1244     0002                     PCL             equ	2	;# 
  1245     0003                     STATUS          equ	3	;# 
  1246     0004                     FSR0L           equ	4	;# 
  1247     0005                     FSR0H           equ	5	;# 
  1248     0006                     FSR1L           equ	6	;# 
  1249     0007                     FSR1H           equ	7	;# 
  1250     0008                     BSR             equ	8	;# 
  1251     0009                     WREG            equ	9	;# 
  1252     000A                     PCLATH          equ	10	;# 
  1253     000B                     INTCON          equ	11	;# 
  1254     000C                     PORTA           equ	12	;# 
  1255     000D                     PORTB           equ	13	;# 
  1256     000E                     PORTC           equ	14	;# 
  1257     0010                     PIR0            equ	16	;# 
  1258     0011                     PIR1            equ	17	;# 
  1259     0012                     PIR2            equ	18	;# 
  1260     0013                     PIR3            equ	19	;# 
  1261     0014                     PIR4            equ	20	;# 
  1262     0015                     TMR0L           equ	21	;# 
  1263     0015                     TMR0            equ	21	;# 
  1264     0016                     TMR0H           equ	22	;# 
  1265     0016                     PR0             equ	22	;# 
  1266     0017                     T0CON0          equ	23	;# 
  1267     0018                     T0CON1          equ	24	;# 
  1268     0019                     TMR1            equ	25	;# 
  1269     0019                     TMR1L           equ	25	;# 
  1270     001A                     TMR1H           equ	26	;# 
  1271     001B                     T1CON           equ	27	;# 
  1272     001C                     T1GCON          equ	28	;# 
  1273     001D                     TMR2            equ	29	;# 
  1274     001E                     PR2             equ	30	;# 
  1275     001F                     T2CON           equ	31	;# 
  1276     008C                     TRISA           equ	140	;# 
  1277     008D                     TRISB           equ	141	;# 
  1278     008E                     TRISC           equ	142	;# 
  1279     0090                     PIE0            equ	144	;# 
  1280     0091                     PIE1            equ	145	;# 
  1281     0092                     PIE2            equ	146	;# 
  1282     0093                     PIE3            equ	147	;# 
  1283     0094                     PIE4            equ	148	;# 
  1284     0097                     WDTCON          equ	151	;# 
  1285     009B                     ADRES           equ	155	;# 
  1286     009B                     ADRESL          equ	155	;# 
  1287     009C                     ADRESH          equ	156	;# 
  1288     009D                     ADCON0          equ	157	;# 
  1289     009E                     ADCON1          equ	158	;# 
  1290     009F                     ADACT           equ	159	;# 
  1291     010C                     LATA            equ	268	;# 
  1292     010D                     LATB            equ	269	;# 
  1293     010E                     LATC            equ	270	;# 
  1294     0111                     CM1CON0         equ	273	;# 
  1295     0112                     CM1CON1         equ	274	;# 
  1296     0113                     CM2CON0         equ	275	;# 
  1297     0114                     CM2CON1         equ	276	;# 
  1298     0115                     CMOUT           equ	277	;# 
  1299     0116                     BORCON          equ	278	;# 
  1300     0117                     FVRCON          equ	279	;# 
  1301     0118                     DACCON0         equ	280	;# 
  1302     0119                     DACCON1         equ	281	;# 
  1303     018C                     ANSELA          equ	396	;# 
  1304     018D                     ANSELB          equ	397	;# 
  1305     018E                     ANSELC          equ	398	;# 
  1306     0197                     VREGCON         equ	407	;# 
  1307     0199                     RC1REG          equ	409	;# 
  1308     0199                     RCREG           equ	409	;# 
  1309     0199                     RCREG1          equ	409	;# 
  1310     019A                     TX1REG          equ	410	;# 
  1311     019A                     TXREG1          equ	410	;# 
  1312     019A                     TXREG           equ	410	;# 
  1313     019B                     SP1BRG          equ	411	;# 
  1314     019B                     SPBRG           equ	411	;# 
  1315     019B                     SP1BRGL         equ	411	;# 
  1316     019B                     SPBRG1          equ	411	;# 
  1317     019B                     SPBRGL          equ	411	;# 
  1318     019C                     SP1BRGH         equ	412	;# 
  1319     019C                     SPBRGH          equ	412	;# 
  1320     019C                     SPBRGH1         equ	412	;# 
  1321     019D                     RC1STA          equ	413	;# 
  1322     019D                     RCSTA1          equ	413	;# 
  1323     019D                     RCSTA           equ	413	;# 
  1324     019E                     TX1STA          equ	414	;# 
  1325     019E                     TXSTA1          equ	414	;# 
  1326     019E                     TXSTA           equ	414	;# 
  1327     019F                     BAUD1CON        equ	415	;# 
  1328     019F                     BAUDCON1        equ	415	;# 
  1329     019F                     BAUDCTL1        equ	415	;# 
  1330     019F                     BAUDCON         equ	415	;# 
  1331     019F                     BAUDCTL         equ	415	;# 
  1332     020C                     WPUA            equ	524	;# 
  1333     020D                     WPUB            equ	525	;# 
  1334     020E                     WPUC            equ	526	;# 
  1335     0211                     SSP1BUF         equ	529	;# 
  1336     0211                     SSPBUF          equ	529	;# 
  1337     0212                     SSP1ADD         equ	530	;# 
  1338     0212                     SSPADD          equ	530	;# 
  1339     0213                     SSP1MSK         equ	531	;# 
  1340     0213                     SSPMSK          equ	531	;# 
  1341     0214                     SSP1STAT        equ	532	;# 
  1342     0214                     SSPSTAT         equ	532	;# 
  1343     0215                     SSP1CON1        equ	533	;# 
  1344     0215                     SSPCON          equ	533	;# 
  1345     0215                     SSPCON1         equ	533	;# 
  1346     0215                     SSP1CON         equ	533	;# 
  1347     0216                     SSP1CON2        equ	534	;# 
  1348     0216                     SSPCON2         equ	534	;# 
  1349     0217                     SSP1CON3        equ	535	;# 
  1350     0217                     SSPCON3         equ	535	;# 
  1351     0219                     SSP2BUF         equ	537	;# 
  1352     021A                     SSP2ADD         equ	538	;# 
  1353     021B                     SSP2MSK         equ	539	;# 
  1354     021C                     SSP2STAT        equ	540	;# 
  1355     021D                     SSP2CON1        equ	541	;# 
  1356     021D                     SSP2CON         equ	541	;# 
  1357     021E                     SSP2CON2        equ	542	;# 
  1358     021F                     SSP2CON3        equ	543	;# 
  1359     028C                     ODCONA          equ	652	;# 
  1360     028D                     ODCONB          equ	653	;# 
  1361     028E                     ODCONC          equ	654	;# 
  1362     0291                     CCPR1           equ	657	;# 
  1363     0291                     CCPR1L          equ	657	;# 
  1364     0292                     CCPR1H          equ	658	;# 
  1365     0293                     CCP1CON         equ	659	;# 
  1366     0294                     CCP1CAP         equ	660	;# 
  1367     0295                     CCPR2           equ	661	;# 
  1368     0295                     CCPR2L          equ	661	;# 
  1369     0296                     CCPR2H          equ	662	;# 
  1370     0297                     CCP2CON         equ	663	;# 
  1371     0298                     CCP2CAP         equ	664	;# 
  1372     029F                     CCPTMRS         equ	671	;# 
  1373     030C                     SLRCONA         equ	780	;# 
  1374     030D                     SLRCONB         equ	781	;# 
  1375     030E                     SLRCONC         equ	782	;# 
  1376     0311                     CCPR3           equ	785	;# 
  1377     0311                     CCPR3L          equ	785	;# 
  1378     0312                     CCPR3H          equ	786	;# 
  1379     0313                     CCP3CON         equ	787	;# 
  1380     0314                     CCP3CAP         equ	788	;# 
  1381     0315                     CCPR4           equ	789	;# 
  1382     0315                     CCPR4L          equ	789	;# 
  1383     0316                     CCPR4H          equ	790	;# 
  1384     0317                     CCP4CON         equ	791	;# 
  1385     0318                     CCP4CAP         equ	792	;# 
  1386     038C                     INLVLA          equ	908	;# 
  1387     038D                     INLVLB          equ	909	;# 
  1388     038E                     INLVLC          equ	910	;# 
  1389     0391                     IOCAP           equ	913	;# 
  1390     0392                     IOCAN           equ	914	;# 
  1391     0393                     IOCAF           equ	915	;# 
  1392     0394                     IOCBP           equ	916	;# 
  1393     0395                     IOCBN           equ	917	;# 
  1394     0396                     IOCBF           equ	918	;# 
  1395     0397                     IOCCP           equ	919	;# 
  1396     0398                     IOCCN           equ	920	;# 
  1397     0399                     IOCCF           equ	921	;# 
  1398     039A                     CLKRCON         equ	922	;# 
  1399     039C                     MDCON           equ	924	;# 
  1400     039D                     MDSRC           equ	925	;# 
  1401     039E                     MDCARH          equ	926	;# 
  1402     039F                     MDCARL          equ	927	;# 
  1403     0411                     TMR3            equ	1041	;# 
  1404     0411                     TMR3L           equ	1041	;# 
  1405     0412                     TMR3H           equ	1042	;# 
  1406     0413                     T3CON           equ	1043	;# 
  1407     0414                     T3GCON          equ	1044	;# 
  1408     0415                     TMR4            equ	1045	;# 
  1409     0416                     PR4             equ	1046	;# 
  1410     0417                     T4CON           equ	1047	;# 
  1411     0418                     TMR5            equ	1048	;# 
  1412     0418                     TMR5L           equ	1048	;# 
  1413     0419                     TMR5H           equ	1049	;# 
  1414     041A                     T5CON           equ	1050	;# 
  1415     041B                     T5GCON          equ	1051	;# 
  1416     041C                     TMR6            equ	1052	;# 
  1417     041D                     PR6             equ	1053	;# 
  1418     041E                     T6CON           equ	1054	;# 
  1419     041F                     CCDCON          equ	1055	;# 
  1420     0498                     NCO1ACC         equ	1176	;# 
  1421     0498                     NCO1ACCL        equ	1176	;# 
  1422     0499                     NCO1ACCH        equ	1177	;# 
  1423     049A                     NCO1ACCU        equ	1178	;# 
  1424     049B                     NCO1INC         equ	1179	;# 
  1425     049B                     NCO1INCL        equ	1179	;# 
  1426     049C                     NCO1INCH        equ	1180	;# 
  1427     049D                     NCO1INCU        equ	1181	;# 
  1428     049E                     NCO1CON         equ	1182	;# 
  1429     049F                     NCO1CLK         equ	1183	;# 
  1430     0617                     PWM5DCL         equ	1559	;# 
  1431     0618                     PWM5DCH         equ	1560	;# 
  1432     0619                     PWM5CON         equ	1561	;# 
  1433     0619                     PWM5CON0        equ	1561	;# 
  1434     061A                     PWM6DCL         equ	1562	;# 
  1435     061B                     PWM6DCH         equ	1563	;# 
  1436     061C                     PWM6CON         equ	1564	;# 
  1437     061C                     PWM6CON0        equ	1564	;# 
  1438     061F                     PWMTMRS         equ	1567	;# 
  1439     0691                     CWG1CLKCON      equ	1681	;# 
  1440     0692                     CWG1DAT         equ	1682	;# 
  1441     0693                     CWG1DBR         equ	1683	;# 
  1442     0694                     CWG1DBF         equ	1684	;# 
  1443     0695                     CWG1CON0        equ	1685	;# 
  1444     0696                     CWG1CON1        equ	1686	;# 
  1445     0697                     CWG1AS0         equ	1687	;# 
  1446     0698                     CWG1AS1         equ	1688	;# 
  1447     0699                     CWG1STR         equ	1689	;# 
  1448     0711                     CWG2CLKCON      equ	1809	;# 
  1449     0712                     CWG2DAT         equ	1810	;# 
  1450     0713                     CWG2DBR         equ	1811	;# 
  1451     0714                     CWG2DBF         equ	1812	;# 
  1452     0715                     CWG2CON0        equ	1813	;# 
  1453     0716                     CWG2CON1        equ	1814	;# 
  1454     0717                     CWG2AS0         equ	1815	;# 
  1455     0718                     CWG2AS1         equ	1816	;# 
  1456     0719                     CWG2STR         equ	1817	;# 
  1457     0891                     NVMADR          equ	2193	;# 
  1458     0891                     EEADR           equ	2193	;# 
  1459     0891                     PMADR           equ	2193	;# 
  1460     0891                     NVMADRL         equ	2193	;# 
  1461     0891                     EEADRL          equ	2193	;# 
  1462     0891                     PMADRL          equ	2193	;# 
  1463     0892                     NVMADRH         equ	2194	;# 
  1464     0892                     EEADRH          equ	2194	;# 
  1465     0892                     PMADRH          equ	2194	;# 
  1466     0893                     NVMDAT          equ	2195	;# 
  1467     0893                     EEDAT           equ	2195	;# 
  1468     0893                     PMDAT           equ	2195	;# 
  1469     0893                     NVMDATL         equ	2195	;# 
  1470     0893                     EEDATL          equ	2195	;# 
  1471     0893                     PMDATL          equ	2195	;# 
  1472     0894                     NVMDATH         equ	2196	;# 
  1473     0894                     EEDATH          equ	2196	;# 
  1474     0894                     PMDATH          equ	2196	;# 
  1475     0895                     NVMCON1         equ	2197	;# 
  1476     0895                     EECON1          equ	2197	;# 
  1477     0895                     PMCON1          equ	2197	;# 
  1478     0896                     NVMCON2         equ	2198	;# 
  1479     0896                     EECON2          equ	2198	;# 
  1480     0896                     PMCON2          equ	2198	;# 
  1481     089B                     PCON0           equ	2203	;# 
  1482     0911                     PMD0            equ	2321	;# 
  1483     0912                     PMD1            equ	2322	;# 
  1484     0913                     PMD2            equ	2323	;# 
  1485     0914                     PMD3            equ	2324	;# 
  1486     0915                     PMD4            equ	2325	;# 
  1487     0916                     PMD5            equ	2326	;# 
  1488     0918                     CPUDOZE         equ	2328	;# 
  1489     0919                     OSCCON1         equ	2329	;# 
  1490     091A                     OSCCON2         equ	2330	;# 
  1491     091B                     OSCCON3         equ	2331	;# 
  1492     091C                     OSCSTAT1        equ	2332	;# 
  1493     091D                     OSCEN           equ	2333	;# 
  1494     091E                     OSCTUNE         equ	2334	;# 
  1495     091F                     OSCFRQ          equ	2335	;# 
  1496     0E0F                     PPSLOCK         equ	3599	;# 
  1497     0E10                     INTPPS          equ	3600	;# 
  1498     0E11                     T0CKIPPS        equ	3601	;# 
  1499     0E12                     T1CKIPPS        equ	3602	;# 
  1500     0E13                     T1GPPS          equ	3603	;# 
  1501     0E14                     CCP1PPS         equ	3604	;# 
  1502     0E15                     CCP2PPS         equ	3605	;# 
  1503     0E16                     CCP3PPS         equ	3606	;# 
  1504     0E17                     CCP4PPS         equ	3607	;# 
  1505     0E18                     CWG1PPS         equ	3608	;# 
  1506     0E19                     CWG2PPS         equ	3609	;# 
  1507     0E1A                     MDCIN1PPS       equ	3610	;# 
  1508     0E1B                     MDCIN2PPS       equ	3611	;# 
  1509     0E1C                     MDMINPPS        equ	3612	;# 
  1510     0E1D                     SSP2CLKPPS      equ	3613	;# 
  1511     0E1E                     SSP2DATPPS      equ	3614	;# 
  1512     0E1F                     SSP2SSPPS       equ	3615	;# 
  1513     0E20                     SSP1CLKPPS      equ	3616	;# 
  1514     0E21                     SSP1DATPPS      equ	3617	;# 
  1515     0E22                     SSP1SSPPS       equ	3618	;# 
  1516     0E24                     RXPPS           equ	3620	;# 
  1517     0E25                     TXPPS           equ	3621	;# 
  1518     0E28                     CLCIN0PPS       equ	3624	;# 
  1519     0E29                     CLCIN1PPS       equ	3625	;# 
  1520     0E2A                     CLCIN2PPS       equ	3626	;# 
  1521     0E2B                     CLCIN3PPS       equ	3627	;# 
  1522     0E2C                     T3CKIPPS        equ	3628	;# 
  1523     0E2D                     T3GPPS          equ	3629	;# 
  1524     0E2E                     T5CKIPPS        equ	3630	;# 
  1525     0E2F                     T5GPPS          equ	3631	;# 
  1526     0E90                     RA0PPS          equ	3728	;# 
  1527     0E91                     RA1PPS          equ	3729	;# 
  1528     0E92                     RA2PPS          equ	3730	;# 
  1529     0E94                     RA4PPS          equ	3732	;# 
  1530     0E95                     RA5PPS          equ	3733	;# 
  1531     0E9C                     RB4PPS          equ	3740	;# 
  1532     0E9D                     RB5PPS          equ	3741	;# 
  1533     0E9E                     RB6PPS          equ	3742	;# 
  1534     0E9F                     RB7PPS          equ	3743	;# 
  1535     0EA0                     RC0PPS          equ	3744	;# 
  1536     0EA1                     RC1PPS          equ	3745	;# 
  1537     0EA2                     RC2PPS          equ	3746	;# 
  1538     0EA3                     RC3PPS          equ	3747	;# 
  1539     0EA4                     RC4PPS          equ	3748	;# 
  1540     0EA5                     RC5PPS          equ	3749	;# 
  1541     0EA6                     RC6PPS          equ	3750	;# 
  1542     0EA7                     RC7PPS          equ	3751	;# 
  1543     0F0F                     CLCDATA         equ	3855	;# 
  1544     0F10                     CLC1CON         equ	3856	;# 
  1545     0F11                     CLC1POL         equ	3857	;# 
  1546     0F12                     CLC1SEL0        equ	3858	;# 
  1547     0F13                     CLC1SEL1        equ	3859	;# 
  1548     0F14                     CLC1SEL2        equ	3860	;# 
  1549     0F15                     CLC1SEL3        equ	3861	;# 
  1550     0F16                     CLC1GLS0        equ	3862	;# 
  1551     0F17                     CLC1GLS1        equ	3863	;# 
  1552     0F18                     CLC1GLS2        equ	3864	;# 
  1553     0F19                     CLC1GLS3        equ	3865	;# 
  1554     0F1A                     CLC2CON         equ	3866	;# 
  1555     0F1B                     CLC2POL         equ	3867	;# 
  1556     0F1C                     CLC2SEL0        equ	3868	;# 
  1557     0F1D                     CLC2SEL1        equ	3869	;# 
  1558     0F1E                     CLC2SEL2        equ	3870	;# 
  1559     0F1F                     CLC2SEL3        equ	3871	;# 
  1560     0F20                     CLC2GLS0        equ	3872	;# 
  1561     0F21                     CLC2GLS1        equ	3873	;# 
  1562     0F22                     CLC2GLS2        equ	3874	;# 
  1563     0F23                     CLC2GLS3        equ	3875	;# 
  1564     0F24                     CLC3CON         equ	3876	;# 
  1565     0F25                     CLC3POL         equ	3877	;# 
  1566     0F26                     CLC3SEL0        equ	3878	;# 
  1567     0F27                     CLC3SEL1        equ	3879	;# 
  1568     0F28                     CLC3SEL2        equ	3880	;# 
  1569     0F29                     CLC3SEL3        equ	3881	;# 
  1570     0F2A                     CLC3GLS0        equ	3882	;# 
  1571     0F2B                     CLC3GLS1        equ	3883	;# 
  1572     0F2C                     CLC3GLS2        equ	3884	;# 
  1573     0F2D                     CLC3GLS3        equ	3885	;# 
  1574     0F2E                     CLC4CON         equ	3886	;# 
  1575     0F2F                     CLC4POL         equ	3887	;# 
  1576     0F30                     CLC4SEL0        equ	3888	;# 
  1577     0F31                     CLC4SEL1        equ	3889	;# 
  1578     0F32                     CLC4SEL2        equ	3890	;# 
  1579     0F33                     CLC4SEL3        equ	3891	;# 
  1580     0F34                     CLC4GLS0        equ	3892	;# 
  1581     0F35                     CLC4GLS1        equ	3893	;# 
  1582     0F36                     CLC4GLS2        equ	3894	;# 
  1583     0F37                     CLC4GLS3        equ	3895	;# 
  1584     0FE4                     STATUS_SHAD     equ	4068	;# 
  1585     0FE5                     WREG_SHAD       equ	4069	;# 
  1586     0FE6                     BSR_SHAD        equ	4070	;# 
  1587     0FE7                     PCLATH_SHAD     equ	4071	;# 
  1588     0FE8                     FSR0L_SHAD      equ	4072	;# 
  1589     0FE9                     FSR0H_SHAD      equ	4073	;# 
  1590     0FEA                     FSR1L_SHAD      equ	4074	;# 
  1591     0FEB                     FSR1H_SHAD      equ	4075	;# 
  1592     0FED                     STKPTR          equ	4077	;# 
  1593     0FEE                     TOSL            equ	4078	;# 
  1594     0FEF                     TOSH            equ	4079	;# 
  1595     0000                     INDF0           equ	0	;# 
  1596     0001                     INDF1           equ	1	;# 
  1597     0002                     PCL             equ	2	;# 
  1598     0003                     STATUS          equ	3	;# 
  1599     0004                     FSR0L           equ	4	;# 
  1600     0005                     FSR0H           equ	5	;# 
  1601     0006                     FSR1L           equ	6	;# 
  1602     0007                     FSR1H           equ	7	;# 
  1603     0008                     BSR             equ	8	;# 
  1604     0009                     WREG            equ	9	;# 
  1605     000A                     PCLATH          equ	10	;# 
  1606     000B                     INTCON          equ	11	;# 
  1607     000C                     PORTA           equ	12	;# 
  1608     000D                     PORTB           equ	13	;# 
  1609     000E                     PORTC           equ	14	;# 
  1610     0010                     PIR0            equ	16	;# 
  1611     0011                     PIR1            equ	17	;# 
  1612     0012                     PIR2            equ	18	;# 
  1613     0013                     PIR3            equ	19	;# 
  1614     0014                     PIR4            equ	20	;# 
  1615     0015                     TMR0L           equ	21	;# 
  1616     0015                     TMR0            equ	21	;# 
  1617     0016                     TMR0H           equ	22	;# 
  1618     0016                     PR0             equ	22	;# 
  1619     0017                     T0CON0          equ	23	;# 
  1620     0018                     T0CON1          equ	24	;# 
  1621     0019                     TMR1            equ	25	;# 
  1622     0019                     TMR1L           equ	25	;# 
  1623     001A                     TMR1H           equ	26	;# 
  1624     001B                     T1CON           equ	27	;# 
  1625     001C                     T1GCON          equ	28	;# 
  1626     001D                     TMR2            equ	29	;# 
  1627     001E                     PR2             equ	30	;# 
  1628     001F                     T2CON           equ	31	;# 
  1629     008C                     TRISA           equ	140	;# 
  1630     008D                     TRISB           equ	141	;# 
  1631     008E                     TRISC           equ	142	;# 
  1632     0090                     PIE0            equ	144	;# 
  1633     0091                     PIE1            equ	145	;# 
  1634     0092                     PIE2            equ	146	;# 
  1635     0093                     PIE3            equ	147	;# 
  1636     0094                     PIE4            equ	148	;# 
  1637     0097                     WDTCON          equ	151	;# 
  1638     009B                     ADRES           equ	155	;# 
  1639     009B                     ADRESL          equ	155	;# 
  1640     009C                     ADRESH          equ	156	;# 
  1641     009D                     ADCON0          equ	157	;# 
  1642     009E                     ADCON1          equ	158	;# 
  1643     009F                     ADACT           equ	159	;# 
  1644     010C                     LATA            equ	268	;# 
  1645     010D                     LATB            equ	269	;# 
  1646     010E                     LATC            equ	270	;# 
  1647     0111                     CM1CON0         equ	273	;# 
  1648     0112                     CM1CON1         equ	274	;# 
  1649     0113                     CM2CON0         equ	275	;# 
  1650     0114                     CM2CON1         equ	276	;# 
  1651     0115                     CMOUT           equ	277	;# 
  1652     0116                     BORCON          equ	278	;# 
  1653     0117                     FVRCON          equ	279	;# 
  1654     0118                     DACCON0         equ	280	;# 
  1655     0119                     DACCON1         equ	281	;# 
  1656     018C                     ANSELA          equ	396	;# 
  1657     018D                     ANSELB          equ	397	;# 
  1658     018E                     ANSELC          equ	398	;# 
  1659     0197                     VREGCON         equ	407	;# 
  1660     0199                     RC1REG          equ	409	;# 
  1661     0199                     RCREG           equ	409	;# 
  1662     0199                     RCREG1          equ	409	;# 
  1663     019A                     TX1REG          equ	410	;# 
  1664     019A                     TXREG1          equ	410	;# 
  1665     019A                     TXREG           equ	410	;# 
  1666     019B                     SP1BRG          equ	411	;# 
  1667     019B                     SPBRG           equ	411	;# 
  1668     019B                     SP1BRGL         equ	411	;# 
  1669     019B                     SPBRG1          equ	411	;# 
  1670     019B                     SPBRGL          equ	411	;# 
  1671     019C                     SP1BRGH         equ	412	;# 
  1672     019C                     SPBRGH          equ	412	;# 
  1673     019C                     SPBRGH1         equ	412	;# 
  1674     019D                     RC1STA          equ	413	;# 
  1675     019D                     RCSTA1          equ	413	;# 
  1676     019D                     RCSTA           equ	413	;# 
  1677     019E                     TX1STA          equ	414	;# 
  1678     019E                     TXSTA1          equ	414	;# 
  1679     019E                     TXSTA           equ	414	;# 
  1680     019F                     BAUD1CON        equ	415	;# 
  1681     019F                     BAUDCON1        equ	415	;# 
  1682     019F                     BAUDCTL1        equ	415	;# 
  1683     019F                     BAUDCON         equ	415	;# 
  1684     019F                     BAUDCTL         equ	415	;# 
  1685     020C                     WPUA            equ	524	;# 
  1686     020D                     WPUB            equ	525	;# 
  1687     020E                     WPUC            equ	526	;# 
  1688     0211                     SSP1BUF         equ	529	;# 
  1689     0211                     SSPBUF          equ	529	;# 
  1690     0212                     SSP1ADD         equ	530	;# 
  1691     0212                     SSPADD          equ	530	;# 
  1692     0213                     SSP1MSK         equ	531	;# 
  1693     0213                     SSPMSK          equ	531	;# 
  1694     0214                     SSP1STAT        equ	532	;# 
  1695     0214                     SSPSTAT         equ	532	;# 
  1696     0215                     SSP1CON1        equ	533	;# 
  1697     0215                     SSPCON          equ	533	;# 
  1698     0215                     SSPCON1         equ	533	;# 
  1699     0215                     SSP1CON         equ	533	;# 
  1700     0216                     SSP1CON2        equ	534	;# 
  1701     0216                     SSPCON2         equ	534	;# 
  1702     0217                     SSP1CON3        equ	535	;# 
  1703     0217                     SSPCON3         equ	535	;# 
  1704     0219                     SSP2BUF         equ	537	;# 
  1705     021A                     SSP2ADD         equ	538	;# 
  1706     021B                     SSP2MSK         equ	539	;# 
  1707     021C                     SSP2STAT        equ	540	;# 
  1708     021D                     SSP2CON1        equ	541	;# 
  1709     021D                     SSP2CON         equ	541	;# 
  1710     021E                     SSP2CON2        equ	542	;# 
  1711     021F                     SSP2CON3        equ	543	;# 
  1712     028C                     ODCONA          equ	652	;# 
  1713     028D                     ODCONB          equ	653	;# 
  1714     028E                     ODCONC          equ	654	;# 
  1715     0291                     CCPR1           equ	657	;# 
  1716     0291                     CCPR1L          equ	657	;# 
  1717     0292                     CCPR1H          equ	658	;# 
  1718     0293                     CCP1CON         equ	659	;# 
  1719     0294                     CCP1CAP         equ	660	;# 
  1720     0295                     CCPR2           equ	661	;# 
  1721     0295                     CCPR2L          equ	661	;# 
  1722     0296                     CCPR2H          equ	662	;# 
  1723     0297                     CCP2CON         equ	663	;# 
  1724     0298                     CCP2CAP         equ	664	;# 
  1725     029F                     CCPTMRS         equ	671	;# 
  1726     030C                     SLRCONA         equ	780	;# 
  1727     030D                     SLRCONB         equ	781	;# 
  1728     030E                     SLRCONC         equ	782	;# 
  1729     0311                     CCPR3           equ	785	;# 
  1730     0311                     CCPR3L          equ	785	;# 
  1731     0312                     CCPR3H          equ	786	;# 
  1732     0313                     CCP3CON         equ	787	;# 
  1733     0314                     CCP3CAP         equ	788	;# 
  1734     0315                     CCPR4           equ	789	;# 
  1735     0315                     CCPR4L          equ	789	;# 
  1736     0316                     CCPR4H          equ	790	;# 
  1737     0317                     CCP4CON         equ	791	;# 
  1738     0318                     CCP4CAP         equ	792	;# 
  1739     038C                     INLVLA          equ	908	;# 
  1740     038D                     INLVLB          equ	909	;# 
  1741     038E                     INLVLC          equ	910	;# 
  1742     0391                     IOCAP           equ	913	;# 
  1743     0392                     IOCAN           equ	914	;# 
  1744     0393                     IOCAF           equ	915	;# 
  1745     0394                     IOCBP           equ	916	;# 
  1746     0395                     IOCBN           equ	917	;# 
  1747     0396                     IOCBF           equ	918	;# 
  1748     0397                     IOCCP           equ	919	;# 
  1749     0398                     IOCCN           equ	920	;# 
  1750     0399                     IOCCF           equ	921	;# 
  1751     039A                     CLKRCON         equ	922	;# 
  1752     039C                     MDCON           equ	924	;# 
  1753     039D                     MDSRC           equ	925	;# 
  1754     039E                     MDCARH          equ	926	;# 
  1755     039F                     MDCARL          equ	927	;# 
  1756     0411                     TMR3            equ	1041	;# 
  1757     0411                     TMR3L           equ	1041	;# 
  1758     0412                     TMR3H           equ	1042	;# 
  1759     0413                     T3CON           equ	1043	;# 
  1760     0414                     T3GCON          equ	1044	;# 
  1761     0415                     TMR4            equ	1045	;# 
  1762     0416                     PR4             equ	1046	;# 
  1763     0417                     T4CON           equ	1047	;# 
  1764     0418                     TMR5            equ	1048	;# 
  1765     0418                     TMR5L           equ	1048	;# 
  1766     0419                     TMR5H           equ	1049	;# 
  1767     041A                     T5CON           equ	1050	;# 
  1768     041B                     T5GCON          equ	1051	;# 
  1769     041C                     TMR6            equ	1052	;# 
  1770     041D                     PR6             equ	1053	;# 
  1771     041E                     T6CON           equ	1054	;# 
  1772     041F                     CCDCON          equ	1055	;# 
  1773     0498                     NCO1ACC         equ	1176	;# 
  1774     0498                     NCO1ACCL        equ	1176	;# 
  1775     0499                     NCO1ACCH        equ	1177	;# 
  1776     049A                     NCO1ACCU        equ	1178	;# 
  1777     049B                     NCO1INC         equ	1179	;# 
  1778     049B                     NCO1INCL        equ	1179	;# 
  1779     049C                     NCO1INCH        equ	1180	;# 
  1780     049D                     NCO1INCU        equ	1181	;# 
  1781     049E                     NCO1CON         equ	1182	;# 
  1782     049F                     NCO1CLK         equ	1183	;# 
  1783     0617                     PWM5DCL         equ	1559	;# 
  1784     0618                     PWM5DCH         equ	1560	;# 
  1785     0619                     PWM5CON         equ	1561	;# 
  1786     0619                     PWM5CON0        equ	1561	;# 
  1787     061A                     PWM6DCL         equ	1562	;# 
  1788     061B                     PWM6DCH         equ	1563	;# 
  1789     061C                     PWM6CON         equ	1564	;# 
  1790     061C                     PWM6CON0        equ	1564	;# 
  1791     061F                     PWMTMRS         equ	1567	;# 
  1792     0691                     CWG1CLKCON      equ	1681	;# 
  1793     0692                     CWG1DAT         equ	1682	;# 
  1794     0693                     CWG1DBR         equ	1683	;# 
  1795     0694                     CWG1DBF         equ	1684	;# 
  1796     0695                     CWG1CON0        equ	1685	;# 
  1797     0696                     CWG1CON1        equ	1686	;# 
  1798     0697                     CWG1AS0         equ	1687	;# 
  1799     0698                     CWG1AS1         equ	1688	;# 
  1800     0699                     CWG1STR         equ	1689	;# 
  1801     0711                     CWG2CLKCON      equ	1809	;# 
  1802     0712                     CWG2DAT         equ	1810	;# 
  1803     0713                     CWG2DBR         equ	1811	;# 
  1804     0714                     CWG2DBF         equ	1812	;# 
  1805     0715                     CWG2CON0        equ	1813	;# 
  1806     0716                     CWG2CON1        equ	1814	;# 
  1807     0717                     CWG2AS0         equ	1815	;# 
  1808     0718                     CWG2AS1         equ	1816	;# 
  1809     0719                     CWG2STR         equ	1817	;# 
  1810     0891                     NVMADR          equ	2193	;# 
  1811     0891                     EEADR           equ	2193	;# 
  1812     0891                     PMADR           equ	2193	;# 
  1813     0891                     NVMADRL         equ	2193	;# 
  1814     0891                     EEADRL          equ	2193	;# 
  1815     0891                     PMADRL          equ	2193	;# 
  1816     0892                     NVMADRH         equ	2194	;# 
  1817     0892                     EEADRH          equ	2194	;# 
  1818     0892                     PMADRH          equ	2194	;# 
  1819     0893                     NVMDAT          equ	2195	;# 
  1820     0893                     EEDAT           equ	2195	;# 
  1821     0893                     PMDAT           equ	2195	;# 
  1822     0893                     NVMDATL         equ	2195	;# 
  1823     0893                     EEDATL          equ	2195	;# 
  1824     0893                     PMDATL          equ	2195	;# 
  1825     0894                     NVMDATH         equ	2196	;# 
  1826     0894                     EEDATH          equ	2196	;# 
  1827     0894                     PMDATH          equ	2196	;# 
  1828     0895                     NVMCON1         equ	2197	;# 
  1829     0895                     EECON1          equ	2197	;# 
  1830     0895                     PMCON1          equ	2197	;# 
  1831     0896                     NVMCON2         equ	2198	;# 
  1832     0896                     EECON2          equ	2198	;# 
  1833     0896                     PMCON2          equ	2198	;# 
  1834     089B                     PCON0           equ	2203	;# 
  1835     0911                     PMD0            equ	2321	;# 
  1836     0912                     PMD1            equ	2322	;# 
  1837     0913                     PMD2            equ	2323	;# 
  1838     0914                     PMD3            equ	2324	;# 
  1839     0915                     PMD4            equ	2325	;# 
  1840     0916                     PMD5            equ	2326	;# 
  1841     0918                     CPUDOZE         equ	2328	;# 
  1842     0919                     OSCCON1         equ	2329	;# 
  1843     091A                     OSCCON2         equ	2330	;# 
  1844     091B                     OSCCON3         equ	2331	;# 
  1845     091C                     OSCSTAT1        equ	2332	;# 
  1846     091D                     OSCEN           equ	2333	;# 
  1847     091E                     OSCTUNE         equ	2334	;# 
  1848     091F                     OSCFRQ          equ	2335	;# 
  1849     0E0F                     PPSLOCK         equ	3599	;# 
  1850     0E10                     INTPPS          equ	3600	;# 
  1851     0E11                     T0CKIPPS        equ	3601	;# 
  1852     0E12                     T1CKIPPS        equ	3602	;# 
  1853     0E13                     T1GPPS          equ	3603	;# 
  1854     0E14                     CCP1PPS         equ	3604	;# 
  1855     0E15                     CCP2PPS         equ	3605	;# 
  1856     0E16                     CCP3PPS         equ	3606	;# 
  1857     0E17                     CCP4PPS         equ	3607	;# 
  1858     0E18                     CWG1PPS         equ	3608	;# 
  1859     0E19                     CWG2PPS         equ	3609	;# 
  1860     0E1A                     MDCIN1PPS       equ	3610	;# 
  1861     0E1B                     MDCIN2PPS       equ	3611	;# 
  1862     0E1C                     MDMINPPS        equ	3612	;# 
  1863     0E1D                     SSP2CLKPPS      equ	3613	;# 
  1864     0E1E                     SSP2DATPPS      equ	3614	;# 
  1865     0E1F                     SSP2SSPPS       equ	3615	;# 
  1866     0E20                     SSP1CLKPPS      equ	3616	;# 
  1867     0E21                     SSP1DATPPS      equ	3617	;# 
  1868     0E22                     SSP1SSPPS       equ	3618	;# 
  1869     0E24                     RXPPS           equ	3620	;# 
  1870     0E25                     TXPPS           equ	3621	;# 
  1871     0E28                     CLCIN0PPS       equ	3624	;# 
  1872     0E29                     CLCIN1PPS       equ	3625	;# 
  1873     0E2A                     CLCIN2PPS       equ	3626	;# 
  1874     0E2B                     CLCIN3PPS       equ	3627	;# 
  1875     0E2C                     T3CKIPPS        equ	3628	;# 
  1876     0E2D                     T3GPPS          equ	3629	;# 
  1877     0E2E                     T5CKIPPS        equ	3630	;# 
  1878     0E2F                     T5GPPS          equ	3631	;# 
  1879     0E90                     RA0PPS          equ	3728	;# 
  1880     0E91                     RA1PPS          equ	3729	;# 
  1881     0E92                     RA2PPS          equ	3730	;# 
  1882     0E94                     RA4PPS          equ	3732	;# 
  1883     0E95                     RA5PPS          equ	3733	;# 
  1884     0E9C                     RB4PPS          equ	3740	;# 
  1885     0E9D                     RB5PPS          equ	3741	;# 
  1886     0E9E                     RB6PPS          equ	3742	;# 
  1887     0E9F                     RB7PPS          equ	3743	;# 
  1888     0EA0                     RC0PPS          equ	3744	;# 
  1889     0EA1                     RC1PPS          equ	3745	;# 
  1890     0EA2                     RC2PPS          equ	3746	;# 
  1891     0EA3                     RC3PPS          equ	3747	;# 
  1892     0EA4                     RC4PPS          equ	3748	;# 
  1893     0EA5                     RC5PPS          equ	3749	;# 
  1894     0EA6                     RC6PPS          equ	3750	;# 
  1895     0EA7                     RC7PPS          equ	3751	;# 
  1896     0F0F                     CLCDATA         equ	3855	;# 
  1897     0F10                     CLC1CON         equ	3856	;# 
  1898     0F11                     CLC1POL         equ	3857	;# 
  1899     0F12                     CLC1SEL0        equ	3858	;# 
  1900     0F13                     CLC1SEL1        equ	3859	;# 
  1901     0F14                     CLC1SEL2        equ	3860	;# 
  1902     0F15                     CLC1SEL3        equ	3861	;# 
  1903     0F16                     CLC1GLS0        equ	3862	;# 
  1904     0F17                     CLC1GLS1        equ	3863	;# 
  1905     0F18                     CLC1GLS2        equ	3864	;# 
  1906     0F19                     CLC1GLS3        equ	3865	;# 
  1907     0F1A                     CLC2CON         equ	3866	;# 
  1908     0F1B                     CLC2POL         equ	3867	;# 
  1909     0F1C                     CLC2SEL0        equ	3868	;# 
  1910     0F1D                     CLC2SEL1        equ	3869	;# 
  1911     0F1E                     CLC2SEL2        equ	3870	;# 
  1912     0F1F                     CLC2SEL3        equ	3871	;# 
  1913     0F20                     CLC2GLS0        equ	3872	;# 
  1914     0F21                     CLC2GLS1        equ	3873	;# 
  1915     0F22                     CLC2GLS2        equ	3874	;# 
  1916     0F23                     CLC2GLS3        equ	3875	;# 
  1917     0F24                     CLC3CON         equ	3876	;# 
  1918     0F25                     CLC3POL         equ	3877	;# 
  1919     0F26                     CLC3SEL0        equ	3878	;# 
  1920     0F27                     CLC3SEL1        equ	3879	;# 
  1921     0F28                     CLC3SEL2        equ	3880	;# 
  1922     0F29                     CLC3SEL3        equ	3881	;# 
  1923     0F2A                     CLC3GLS0        equ	3882	;# 
  1924     0F2B                     CLC3GLS1        equ	3883	;# 
  1925     0F2C                     CLC3GLS2        equ	3884	;# 
  1926     0F2D                     CLC3GLS3        equ	3885	;# 
  1927     0F2E                     CLC4CON         equ	3886	;# 
  1928     0F2F                     CLC4POL         equ	3887	;# 
  1929     0F30                     CLC4SEL0        equ	3888	;# 
  1930     0F31                     CLC4SEL1        equ	3889	;# 
  1931     0F32                     CLC4SEL2        equ	3890	;# 
  1932     0F33                     CLC4SEL3        equ	3891	;# 
  1933     0F34                     CLC4GLS0        equ	3892	;# 
  1934     0F35                     CLC4GLS1        equ	3893	;# 
  1935     0F36                     CLC4GLS2        equ	3894	;# 
  1936     0F37                     CLC4GLS3        equ	3895	;# 
  1937     0FE4                     STATUS_SHAD     equ	4068	;# 
  1938     0FE5                     WREG_SHAD       equ	4069	;# 
  1939     0FE6                     BSR_SHAD        equ	4070	;# 
  1940     0FE7                     PCLATH_SHAD     equ	4071	;# 
  1941     0FE8                     FSR0L_SHAD      equ	4072	;# 
  1942     0FE9                     FSR0H_SHAD      equ	4073	;# 
  1943     0FEA                     FSR1L_SHAD      equ	4074	;# 
  1944     0FEB                     FSR1H_SHAD      equ	4075	;# 
  1945     0FED                     STKPTR          equ	4077	;# 
  1946     0FEE                     TOSL            equ	4078	;# 
  1947     0FEF                     TOSH            equ	4079	;# 
  1948     0000                     INDF0           equ	0	;# 
  1949     0001                     INDF1           equ	1	;# 
  1950     0002                     PCL             equ	2	;# 
  1951     0003                     STATUS          equ	3	;# 
  1952     0004                     FSR0L           equ	4	;# 
  1953     0005                     FSR0H           equ	5	;# 
  1954     0006                     FSR1L           equ	6	;# 
  1955     0007                     FSR1H           equ	7	;# 
  1956     0008                     BSR             equ	8	;# 
  1957     0009                     WREG            equ	9	;# 
  1958     000A                     PCLATH          equ	10	;# 
  1959     000B                     INTCON          equ	11	;# 
  1960     000C                     PORTA           equ	12	;# 
  1961     000D                     PORTB           equ	13	;# 
  1962     000E                     PORTC           equ	14	;# 
  1963     0010                     PIR0            equ	16	;# 
  1964     0011                     PIR1            equ	17	;# 
  1965     0012                     PIR2            equ	18	;# 
  1966     0013                     PIR3            equ	19	;# 
  1967     0014                     PIR4            equ	20	;# 
  1968     0015                     TMR0L           equ	21	;# 
  1969     0015                     TMR0            equ	21	;# 
  1970     0016                     TMR0H           equ	22	;# 
  1971     0016                     PR0             equ	22	;# 
  1972     0017                     T0CON0          equ	23	;# 
  1973     0018                     T0CON1          equ	24	;# 
  1974     0019                     TMR1            equ	25	;# 
  1975     0019                     TMR1L           equ	25	;# 
  1976     001A                     TMR1H           equ	26	;# 
  1977     001B                     T1CON           equ	27	;# 
  1978     001C                     T1GCON          equ	28	;# 
  1979     001D                     TMR2            equ	29	;# 
  1980     001E                     PR2             equ	30	;# 
  1981     001F                     T2CON           equ	31	;# 
  1982     008C                     TRISA           equ	140	;# 
  1983     008D                     TRISB           equ	141	;# 
  1984     008E                     TRISC           equ	142	;# 
  1985     0090                     PIE0            equ	144	;# 
  1986     0091                     PIE1            equ	145	;# 
  1987     0092                     PIE2            equ	146	;# 
  1988     0093                     PIE3            equ	147	;# 
  1989     0094                     PIE4            equ	148	;# 
  1990     0097                     WDTCON          equ	151	;# 
  1991     009B                     ADRES           equ	155	;# 
  1992     009B                     ADRESL          equ	155	;# 
  1993     009C                     ADRESH          equ	156	;# 
  1994     009D                     ADCON0          equ	157	;# 
  1995     009E                     ADCON1          equ	158	;# 
  1996     009F                     ADACT           equ	159	;# 
  1997     010C                     LATA            equ	268	;# 
  1998     010D                     LATB            equ	269	;# 
  1999     010E                     LATC            equ	270	;# 
  2000     0111                     CM1CON0         equ	273	;# 
  2001     0112                     CM1CON1         equ	274	;# 
  2002     0113                     CM2CON0         equ	275	;# 
  2003     0114                     CM2CON1         equ	276	;# 
  2004     0115                     CMOUT           equ	277	;# 
  2005     0116                     BORCON          equ	278	;# 
  2006     0117                     FVRCON          equ	279	;# 
  2007     0118                     DACCON0         equ	280	;# 
  2008     0119                     DACCON1         equ	281	;# 
  2009     018C                     ANSELA          equ	396	;# 
  2010     018D                     ANSELB          equ	397	;# 
  2011     018E                     ANSELC          equ	398	;# 
  2012     0197                     VREGCON         equ	407	;# 
  2013     0199                     RC1REG          equ	409	;# 
  2014     0199                     RCREG           equ	409	;# 
  2015     0199                     RCREG1          equ	409	;# 
  2016     019A                     TX1REG          equ	410	;# 
  2017     019A                     TXREG1          equ	410	;# 
  2018     019A                     TXREG           equ	410	;# 
  2019     019B                     SP1BRG          equ	411	;# 
  2020     019B                     SPBRG           equ	411	;# 
  2021     019B                     SP1BRGL         equ	411	;# 
  2022     019B                     SPBRG1          equ	411	;# 
  2023     019B                     SPBRGL          equ	411	;# 
  2024     019C                     SP1BRGH         equ	412	;# 
  2025     019C                     SPBRGH          equ	412	;# 
  2026     019C                     SPBRGH1         equ	412	;# 
  2027     019D                     RC1STA          equ	413	;# 
  2028     019D                     RCSTA1          equ	413	;# 
  2029     019D                     RCSTA           equ	413	;# 
  2030     019E                     TX1STA          equ	414	;# 
  2031     019E                     TXSTA1          equ	414	;# 
  2032     019E                     TXSTA           equ	414	;# 
  2033     019F                     BAUD1CON        equ	415	;# 
  2034     019F                     BAUDCON1        equ	415	;# 
  2035     019F                     BAUDCTL1        equ	415	;# 
  2036     019F                     BAUDCON         equ	415	;# 
  2037     019F                     BAUDCTL         equ	415	;# 
  2038     020C                     WPUA            equ	524	;# 
  2039     020D                     WPUB            equ	525	;# 
  2040     020E                     WPUC            equ	526	;# 
  2041     0211                     SSP1BUF         equ	529	;# 
  2042     0211                     SSPBUF          equ	529	;# 
  2043     0212                     SSP1ADD         equ	530	;# 
  2044     0212                     SSPADD          equ	530	;# 
  2045     0213                     SSP1MSK         equ	531	;# 
  2046     0213                     SSPMSK          equ	531	;# 
  2047     0214                     SSP1STAT        equ	532	;# 
  2048     0214                     SSPSTAT         equ	532	;# 
  2049     0215                     SSP1CON1        equ	533	;# 
  2050     0215                     SSPCON          equ	533	;# 
  2051     0215                     SSPCON1         equ	533	;# 
  2052     0215                     SSP1CON         equ	533	;# 
  2053     0216                     SSP1CON2        equ	534	;# 
  2054     0216                     SSPCON2         equ	534	;# 
  2055     0217                     SSP1CON3        equ	535	;# 
  2056     0217                     SSPCON3         equ	535	;# 
  2057     0219                     SSP2BUF         equ	537	;# 
  2058     021A                     SSP2ADD         equ	538	;# 
  2059     021B                     SSP2MSK         equ	539	;# 
  2060     021C                     SSP2STAT        equ	540	;# 
  2061     021D                     SSP2CON1        equ	541	;# 
  2062     021D                     SSP2CON         equ	541	;# 
  2063     021E                     SSP2CON2        equ	542	;# 
  2064     021F                     SSP2CON3        equ	543	;# 
  2065     028C                     ODCONA          equ	652	;# 
  2066     028D                     ODCONB          equ	653	;# 
  2067     028E                     ODCONC          equ	654	;# 
  2068     0291                     CCPR1           equ	657	;# 
  2069     0291                     CCPR1L          equ	657	;# 
  2070     0292                     CCPR1H          equ	658	;# 
  2071     0293                     CCP1CON         equ	659	;# 
  2072     0294                     CCP1CAP         equ	660	;# 
  2073     0295                     CCPR2           equ	661	;# 
  2074     0295                     CCPR2L          equ	661	;# 
  2075     0296                     CCPR2H          equ	662	;# 
  2076     0297                     CCP2CON         equ	663	;# 
  2077     0298                     CCP2CAP         equ	664	;# 
  2078     029F                     CCPTMRS         equ	671	;# 
  2079     030C                     SLRCONA         equ	780	;# 
  2080     030D                     SLRCONB         equ	781	;# 
  2081     030E                     SLRCONC         equ	782	;# 
  2082     0311                     CCPR3           equ	785	;# 
  2083     0311                     CCPR3L          equ	785	;# 
  2084     0312                     CCPR3H          equ	786	;# 
  2085     0313                     CCP3CON         equ	787	;# 
  2086     0314                     CCP3CAP         equ	788	;# 
  2087     0315                     CCPR4           equ	789	;# 
  2088     0315                     CCPR4L          equ	789	;# 
  2089     0316                     CCPR4H          equ	790	;# 
  2090     0317                     CCP4CON         equ	791	;# 
  2091     0318                     CCP4CAP         equ	792	;# 
  2092     038C                     INLVLA          equ	908	;# 
  2093     038D                     INLVLB          equ	909	;# 
  2094     038E                     INLVLC          equ	910	;# 
  2095     0391                     IOCAP           equ	913	;# 
  2096     0392                     IOCAN           equ	914	;# 
  2097     0393                     IOCAF           equ	915	;# 
  2098     0394                     IOCBP           equ	916	;# 
  2099     0395                     IOCBN           equ	917	;# 
  2100     0396                     IOCBF           equ	918	;# 
  2101     0397                     IOCCP           equ	919	;# 
  2102     0398                     IOCCN           equ	920	;# 
  2103     0399                     IOCCF           equ	921	;# 
  2104     039A                     CLKRCON         equ	922	;# 
  2105     039C                     MDCON           equ	924	;# 
  2106     039D                     MDSRC           equ	925	;# 
  2107     039E                     MDCARH          equ	926	;# 
  2108     039F                     MDCARL          equ	927	;# 
  2109     0411                     TMR3            equ	1041	;# 
  2110     0411                     TMR3L           equ	1041	;# 
  2111     0412                     TMR3H           equ	1042	;# 
  2112     0413                     T3CON           equ	1043	;# 
  2113     0414                     T3GCON          equ	1044	;# 
  2114     0415                     TMR4            equ	1045	;# 
  2115     0416                     PR4             equ	1046	;# 
  2116     0417                     T4CON           equ	1047	;# 
  2117     0418                     TMR5            equ	1048	;# 
  2118     0418                     TMR5L           equ	1048	;# 
  2119     0419                     TMR5H           equ	1049	;# 
  2120     041A                     T5CON           equ	1050	;# 
  2121     041B                     T5GCON          equ	1051	;# 
  2122     041C                     TMR6            equ	1052	;# 
  2123     041D                     PR6             equ	1053	;# 
  2124     041E                     T6CON           equ	1054	;# 
  2125     041F                     CCDCON          equ	1055	;# 
  2126     0498                     NCO1ACC         equ	1176	;# 
  2127     0498                     NCO1ACCL        equ	1176	;# 
  2128     0499                     NCO1ACCH        equ	1177	;# 
  2129     049A                     NCO1ACCU        equ	1178	;# 
  2130     049B                     NCO1INC         equ	1179	;# 
  2131     049B                     NCO1INCL        equ	1179	;# 
  2132     049C                     NCO1INCH        equ	1180	;# 
  2133     049D                     NCO1INCU        equ	1181	;# 
  2134     049E                     NCO1CON         equ	1182	;# 
  2135     049F                     NCO1CLK         equ	1183	;# 
  2136     0617                     PWM5DCL         equ	1559	;# 
  2137     0618                     PWM5DCH         equ	1560	;# 
  2138     0619                     PWM5CON         equ	1561	;# 
  2139     0619                     PWM5CON0        equ	1561	;# 
  2140     061A                     PWM6DCL         equ	1562	;# 
  2141     061B                     PWM6DCH         equ	1563	;# 
  2142     061C                     PWM6CON         equ	1564	;# 
  2143     061C                     PWM6CON0        equ	1564	;# 
  2144     061F                     PWMTMRS         equ	1567	;# 
  2145     0691                     CWG1CLKCON      equ	1681	;# 
  2146     0692                     CWG1DAT         equ	1682	;# 
  2147     0693                     CWG1DBR         equ	1683	;# 
  2148     0694                     CWG1DBF         equ	1684	;# 
  2149     0695                     CWG1CON0        equ	1685	;# 
  2150     0696                     CWG1CON1        equ	1686	;# 
  2151     0697                     CWG1AS0         equ	1687	;# 
  2152     0698                     CWG1AS1         equ	1688	;# 
  2153     0699                     CWG1STR         equ	1689	;# 
  2154     0711                     CWG2CLKCON      equ	1809	;# 
  2155     0712                     CWG2DAT         equ	1810	;# 
  2156     0713                     CWG2DBR         equ	1811	;# 
  2157     0714                     CWG2DBF         equ	1812	;# 
  2158     0715                     CWG2CON0        equ	1813	;# 
  2159     0716                     CWG2CON1        equ	1814	;# 
  2160     0717                     CWG2AS0         equ	1815	;# 
  2161     0718                     CWG2AS1         equ	1816	;# 
  2162     0719                     CWG2STR         equ	1817	;# 
  2163     0891                     NVMADR          equ	2193	;# 
  2164     0891                     EEADR           equ	2193	;# 
  2165     0891                     PMADR           equ	2193	;# 
  2166     0891                     NVMADRL         equ	2193	;# 
  2167     0891                     EEADRL          equ	2193	;# 
  2168     0891                     PMADRL          equ	2193	;# 
  2169     0892                     NVMADRH         equ	2194	;# 
  2170     0892                     EEADRH          equ	2194	;# 
  2171     0892                     PMADRH          equ	2194	;# 
  2172     0893                     NVMDAT          equ	2195	;# 
  2173     0893                     EEDAT           equ	2195	;# 
  2174     0893                     PMDAT           equ	2195	;# 
  2175     0893                     NVMDATL         equ	2195	;# 
  2176     0893                     EEDATL          equ	2195	;# 
  2177     0893                     PMDATL          equ	2195	;# 
  2178     0894                     NVMDATH         equ	2196	;# 
  2179     0894                     EEDATH          equ	2196	;# 
  2180     0894                     PMDATH          equ	2196	;# 
  2181     0895                     NVMCON1         equ	2197	;# 
  2182     0895                     EECON1          equ	2197	;# 
  2183     0895                     PMCON1          equ	2197	;# 
  2184     0896                     NVMCON2         equ	2198	;# 
  2185     0896                     EECON2          equ	2198	;# 
  2186     0896                     PMCON2          equ	2198	;# 
  2187     089B                     PCON0           equ	2203	;# 
  2188     0911                     PMD0            equ	2321	;# 
  2189     0912                     PMD1            equ	2322	;# 
  2190     0913                     PMD2            equ	2323	;# 
  2191     0914                     PMD3            equ	2324	;# 
  2192     0915                     PMD4            equ	2325	;# 
  2193     0916                     PMD5            equ	2326	;# 
  2194     0918                     CPUDOZE         equ	2328	;# 
  2195     0919                     OSCCON1         equ	2329	;# 
  2196     091A                     OSCCON2         equ	2330	;# 
  2197     091B                     OSCCON3         equ	2331	;# 
  2198     091C                     OSCSTAT1        equ	2332	;# 
  2199     091D                     OSCEN           equ	2333	;# 
  2200     091E                     OSCTUNE         equ	2334	;# 
  2201     091F                     OSCFRQ          equ	2335	;# 
  2202     0E0F                     PPSLOCK         equ	3599	;# 
  2203     0E10                     INTPPS          equ	3600	;# 
  2204     0E11                     T0CKIPPS        equ	3601	;# 
  2205     0E12                     T1CKIPPS        equ	3602	;# 
  2206     0E13                     T1GPPS          equ	3603	;# 
  2207     0E14                     CCP1PPS         equ	3604	;# 
  2208     0E15                     CCP2PPS         equ	3605	;# 
  2209     0E16                     CCP3PPS         equ	3606	;# 
  2210     0E17                     CCP4PPS         equ	3607	;# 
  2211     0E18                     CWG1PPS         equ	3608	;# 
  2212     0E19                     CWG2PPS         equ	3609	;# 
  2213     0E1A                     MDCIN1PPS       equ	3610	;# 
  2214     0E1B                     MDCIN2PPS       equ	3611	;# 
  2215     0E1C                     MDMINPPS        equ	3612	;# 
  2216     0E1D                     SSP2CLKPPS      equ	3613	;# 
  2217     0E1E                     SSP2DATPPS      equ	3614	;# 
  2218     0E1F                     SSP2SSPPS       equ	3615	;# 
  2219     0E20                     SSP1CLKPPS      equ	3616	;# 
  2220     0E21                     SSP1DATPPS      equ	3617	;# 
  2221     0E22                     SSP1SSPPS       equ	3618	;# 
  2222     0E24                     RXPPS           equ	3620	;# 
  2223     0E25                     TXPPS           equ	3621	;# 
  2224     0E28                     CLCIN0PPS       equ	3624	;# 
  2225     0E29                     CLCIN1PPS       equ	3625	;# 
  2226     0E2A                     CLCIN2PPS       equ	3626	;# 
  2227     0E2B                     CLCIN3PPS       equ	3627	;# 
  2228     0E2C                     T3CKIPPS        equ	3628	;# 
  2229     0E2D                     T3GPPS          equ	3629	;# 
  2230     0E2E                     T5CKIPPS        equ	3630	;# 
  2231     0E2F                     T5GPPS          equ	3631	;# 
  2232     0E90                     RA0PPS          equ	3728	;# 
  2233     0E91                     RA1PPS          equ	3729	;# 
  2234     0E92                     RA2PPS          equ	3730	;# 
  2235     0E94                     RA4PPS          equ	3732	;# 
  2236     0E95                     RA5PPS          equ	3733	;# 
  2237     0E9C                     RB4PPS          equ	3740	;# 
  2238     0E9D                     RB5PPS          equ	3741	;# 
  2239     0E9E                     RB6PPS          equ	3742	;# 
  2240     0E9F                     RB7PPS          equ	3743	;# 
  2241     0EA0                     RC0PPS          equ	3744	;# 
  2242     0EA1                     RC1PPS          equ	3745	;# 
  2243     0EA2                     RC2PPS          equ	3746	;# 
  2244     0EA3                     RC3PPS          equ	3747	;# 
  2245     0EA4                     RC4PPS          equ	3748	;# 
  2246     0EA5                     RC5PPS          equ	3749	;# 
  2247     0EA6                     RC6PPS          equ	3750	;# 
  2248     0EA7                     RC7PPS          equ	3751	;# 
  2249     0F0F                     CLCDATA         equ	3855	;# 
  2250     0F10                     CLC1CON         equ	3856	;# 
  2251     0F11                     CLC1POL         equ	3857	;# 
  2252     0F12                     CLC1SEL0        equ	3858	;# 
  2253     0F13                     CLC1SEL1        equ	3859	;# 
  2254     0F14                     CLC1SEL2        equ	3860	;# 
  2255     0F15                     CLC1SEL3        equ	3861	;# 
  2256     0F16                     CLC1GLS0        equ	3862	;# 
  2257     0F17                     CLC1GLS1        equ	3863	;# 
  2258     0F18                     CLC1GLS2        equ	3864	;# 
  2259     0F19                     CLC1GLS3        equ	3865	;# 
  2260     0F1A                     CLC2CON         equ	3866	;# 
  2261     0F1B                     CLC2POL         equ	3867	;# 
  2262     0F1C                     CLC2SEL0        equ	3868	;# 
  2263     0F1D                     CLC2SEL1        equ	3869	;# 
  2264     0F1E                     CLC2SEL2        equ	3870	;# 
  2265     0F1F                     CLC2SEL3        equ	3871	;# 
  2266     0F20                     CLC2GLS0        equ	3872	;# 
  2267     0F21                     CLC2GLS1        equ	3873	;# 
  2268     0F22                     CLC2GLS2        equ	3874	;# 
  2269     0F23                     CLC2GLS3        equ	3875	;# 
  2270     0F24                     CLC3CON         equ	3876	;# 
  2271     0F25                     CLC3POL         equ	3877	;# 
  2272     0F26                     CLC3SEL0        equ	3878	;# 
  2273     0F27                     CLC3SEL1        equ	3879	;# 
  2274     0F28                     CLC3SEL2        equ	3880	;# 
  2275     0F29                     CLC3SEL3        equ	3881	;# 
  2276     0F2A                     CLC3GLS0        equ	3882	;# 
  2277     0F2B                     CLC3GLS1        equ	3883	;# 
  2278     0F2C                     CLC3GLS2        equ	3884	;# 
  2279     0F2D                     CLC3GLS3        equ	3885	;# 
  2280     0F2E                     CLC4CON         equ	3886	;# 
  2281     0F2F                     CLC4POL         equ	3887	;# 
  2282     0F30                     CLC4SEL0        equ	3888	;# 
  2283     0F31                     CLC4SEL1        equ	3889	;# 
  2284     0F32                     CLC4SEL2        equ	3890	;# 
  2285     0F33                     CLC4SEL3        equ	3891	;# 
  2286     0F34                     CLC4GLS0        equ	3892	;# 
  2287     0F35                     CLC4GLS1        equ	3893	;# 
  2288     0F36                     CLC4GLS2        equ	3894	;# 
  2289     0F37                     CLC4GLS3        equ	3895	;# 
  2290     0FE4                     STATUS_SHAD     equ	4068	;# 
  2291     0FE5                     WREG_SHAD       equ	4069	;# 
  2292     0FE6                     BSR_SHAD        equ	4070	;# 
  2293     0FE7                     PCLATH_SHAD     equ	4071	;# 
  2294     0FE8                     FSR0L_SHAD      equ	4072	;# 
  2295     0FE9                     FSR0H_SHAD      equ	4073	;# 
  2296     0FEA                     FSR1L_SHAD      equ	4074	;# 
  2297     0FEB                     FSR1H_SHAD      equ	4075	;# 
  2298     0FED                     STKPTR          equ	4077	;# 
  2299     0FEE                     TOSL            equ	4078	;# 
  2300     0FEF                     TOSH            equ	4079	;# 
  2301     0000                     INDF0           equ	0	;# 
  2302     0001                     INDF1           equ	1	;# 
  2303     0002                     PCL             equ	2	;# 
  2304     0003                     STATUS          equ	3	;# 
  2305     0004                     FSR0L           equ	4	;# 
  2306     0005                     FSR0H           equ	5	;# 
  2307     0006                     FSR1L           equ	6	;# 
  2308     0007                     FSR1H           equ	7	;# 
  2309     0008                     BSR             equ	8	;# 
  2310     0009                     WREG            equ	9	;# 
  2311     000A                     PCLATH          equ	10	;# 
  2312     000B                     INTCON          equ	11	;# 
  2313     000C                     PORTA           equ	12	;# 
  2314     000D                     PORTB           equ	13	;# 
  2315     000E                     PORTC           equ	14	;# 
  2316     0010                     PIR0            equ	16	;# 
  2317     0011                     PIR1            equ	17	;# 
  2318     0012                     PIR2            equ	18	;# 
  2319     0013                     PIR3            equ	19	;# 
  2320     0014                     PIR4            equ	20	;# 
  2321     0015                     TMR0L           equ	21	;# 
  2322     0015                     TMR0            equ	21	;# 
  2323     0016                     TMR0H           equ	22	;# 
  2324     0016                     PR0             equ	22	;# 
  2325     0017                     T0CON0          equ	23	;# 
  2326     0018                     T0CON1          equ	24	;# 
  2327     0019                     TMR1            equ	25	;# 
  2328     0019                     TMR1L           equ	25	;# 
  2329     001A                     TMR1H           equ	26	;# 
  2330     001B                     T1CON           equ	27	;# 
  2331     001C                     T1GCON          equ	28	;# 
  2332     001D                     TMR2            equ	29	;# 
  2333     001E                     PR2             equ	30	;# 
  2334     001F                     T2CON           equ	31	;# 
  2335     008C                     TRISA           equ	140	;# 
  2336     008D                     TRISB           equ	141	;# 
  2337     008E                     TRISC           equ	142	;# 
  2338     0090                     PIE0            equ	144	;# 
  2339     0091                     PIE1            equ	145	;# 
  2340     0092                     PIE2            equ	146	;# 
  2341     0093                     PIE3            equ	147	;# 
  2342     0094                     PIE4            equ	148	;# 
  2343     0097                     WDTCON          equ	151	;# 
  2344     009B                     ADRES           equ	155	;# 
  2345     009B                     ADRESL          equ	155	;# 
  2346     009C                     ADRESH          equ	156	;# 
  2347     009D                     ADCON0          equ	157	;# 
  2348     009E                     ADCON1          equ	158	;# 
  2349     009F                     ADACT           equ	159	;# 
  2350     010C                     LATA            equ	268	;# 
  2351     010D                     LATB            equ	269	;# 
  2352     010E                     LATC            equ	270	;# 
  2353     0111                     CM1CON0         equ	273	;# 
  2354     0112                     CM1CON1         equ	274	;# 
  2355     0113                     CM2CON0         equ	275	;# 
  2356     0114                     CM2CON1         equ	276	;# 
  2357     0115                     CMOUT           equ	277	;# 
  2358     0116                     BORCON          equ	278	;# 
  2359     0117                     FVRCON          equ	279	;# 
  2360     0118                     DACCON0         equ	280	;# 
  2361     0119                     DACCON1         equ	281	;# 
  2362     018C                     ANSELA          equ	396	;# 
  2363     018D                     ANSELB          equ	397	;# 
  2364     018E                     ANSELC          equ	398	;# 
  2365     0197                     VREGCON         equ	407	;# 
  2366     0199                     RC1REG          equ	409	;# 
  2367     0199                     RCREG           equ	409	;# 
  2368     0199                     RCREG1          equ	409	;# 
  2369     019A                     TX1REG          equ	410	;# 
  2370     019A                     TXREG1          equ	410	;# 
  2371     019A                     TXREG           equ	410	;# 
  2372     019B                     SP1BRG          equ	411	;# 
  2373     019B                     SPBRG           equ	411	;# 
  2374     019B                     SP1BRGL         equ	411	;# 
  2375     019B                     SPBRG1          equ	411	;# 
  2376     019B                     SPBRGL          equ	411	;# 
  2377     019C                     SP1BRGH         equ	412	;# 
  2378     019C                     SPBRGH          equ	412	;# 
  2379     019C                     SPBRGH1         equ	412	;# 
  2380     019D                     RC1STA          equ	413	;# 
  2381     019D                     RCSTA1          equ	413	;# 
  2382     019D                     RCSTA           equ	413	;# 
  2383     019E                     TX1STA          equ	414	;# 
  2384     019E                     TXSTA1          equ	414	;# 
  2385     019E                     TXSTA           equ	414	;# 
  2386     019F                     BAUD1CON        equ	415	;# 
  2387     019F                     BAUDCON1        equ	415	;# 
  2388     019F                     BAUDCTL1        equ	415	;# 
  2389     019F                     BAUDCON         equ	415	;# 
  2390     019F                     BAUDCTL         equ	415	;# 
  2391     020C                     WPUA            equ	524	;# 
  2392     020D                     WPUB            equ	525	;# 
  2393     020E                     WPUC            equ	526	;# 
  2394     0211                     SSP1BUF         equ	529	;# 
  2395     0211                     SSPBUF          equ	529	;# 
  2396     0212                     SSP1ADD         equ	530	;# 
  2397     0212                     SSPADD          equ	530	;# 
  2398     0213                     SSP1MSK         equ	531	;# 
  2399     0213                     SSPMSK          equ	531	;# 
  2400     0214                     SSP1STAT        equ	532	;# 
  2401     0214                     SSPSTAT         equ	532	;# 
  2402     0215                     SSP1CON1        equ	533	;# 
  2403     0215                     SSPCON          equ	533	;# 
  2404     0215                     SSPCON1         equ	533	;# 
  2405     0215                     SSP1CON         equ	533	;# 
  2406     0216                     SSP1CON2        equ	534	;# 
  2407     0216                     SSPCON2         equ	534	;# 
  2408     0217                     SSP1CON3        equ	535	;# 
  2409     0217                     SSPCON3         equ	535	;# 
  2410     0219                     SSP2BUF         equ	537	;# 
  2411     021A                     SSP2ADD         equ	538	;# 
  2412     021B                     SSP2MSK         equ	539	;# 
  2413     021C                     SSP2STAT        equ	540	;# 
  2414     021D                     SSP2CON1        equ	541	;# 
  2415     021D                     SSP2CON         equ	541	;# 
  2416     021E                     SSP2CON2        equ	542	;# 
  2417     021F                     SSP2CON3        equ	543	;# 
  2418     028C                     ODCONA          equ	652	;# 
  2419     028D                     ODCONB          equ	653	;# 
  2420     028E                     ODCONC          equ	654	;# 
  2421     0291                     CCPR1           equ	657	;# 
  2422     0291                     CCPR1L          equ	657	;# 
  2423     0292                     CCPR1H          equ	658	;# 
  2424     0293                     CCP1CON         equ	659	;# 
  2425     0294                     CCP1CAP         equ	660	;# 
  2426     0295                     CCPR2           equ	661	;# 
  2427     0295                     CCPR2L          equ	661	;# 
  2428     0296                     CCPR2H          equ	662	;# 
  2429     0297                     CCP2CON         equ	663	;# 
  2430     0298                     CCP2CAP         equ	664	;# 
  2431     029F                     CCPTMRS         equ	671	;# 
  2432     030C                     SLRCONA         equ	780	;# 
  2433     030D                     SLRCONB         equ	781	;# 
  2434     030E                     SLRCONC         equ	782	;# 
  2435     0311                     CCPR3           equ	785	;# 
  2436     0311                     CCPR3L          equ	785	;# 
  2437     0312                     CCPR3H          equ	786	;# 
  2438     0313                     CCP3CON         equ	787	;# 
  2439     0314                     CCP3CAP         equ	788	;# 
  2440     0315                     CCPR4           equ	789	;# 
  2441     0315                     CCPR4L          equ	789	;# 
  2442     0316                     CCPR4H          equ	790	;# 
  2443     0317                     CCP4CON         equ	791	;# 
  2444     0318                     CCP4CAP         equ	792	;# 
  2445     038C                     INLVLA          equ	908	;# 
  2446     038D                     INLVLB          equ	909	;# 
  2447     038E                     INLVLC          equ	910	;# 
  2448     0391                     IOCAP           equ	913	;# 
  2449     0392                     IOCAN           equ	914	;# 
  2450     0393                     IOCAF           equ	915	;# 
  2451     0394                     IOCBP           equ	916	;# 
  2452     0395                     IOCBN           equ	917	;# 
  2453     0396                     IOCBF           equ	918	;# 
  2454     0397                     IOCCP           equ	919	;# 
  2455     0398                     IOCCN           equ	920	;# 
  2456     0399                     IOCCF           equ	921	;# 
  2457     039A                     CLKRCON         equ	922	;# 
  2458     039C                     MDCON           equ	924	;# 
  2459     039D                     MDSRC           equ	925	;# 
  2460     039E                     MDCARH          equ	926	;# 
  2461     039F                     MDCARL          equ	927	;# 
  2462     0411                     TMR3            equ	1041	;# 
  2463     0411                     TMR3L           equ	1041	;# 
  2464     0412                     TMR3H           equ	1042	;# 
  2465     0413                     T3CON           equ	1043	;# 
  2466     0414                     T3GCON          equ	1044	;# 
  2467     0415                     TMR4            equ	1045	;# 
  2468     0416                     PR4             equ	1046	;# 
  2469     0417                     T4CON           equ	1047	;# 
  2470     0418                     TMR5            equ	1048	;# 
  2471     0418                     TMR5L           equ	1048	;# 
  2472     0419                     TMR5H           equ	1049	;# 
  2473     041A                     T5CON           equ	1050	;# 
  2474     041B                     T5GCON          equ	1051	;# 
  2475     041C                     TMR6            equ	1052	;# 
  2476     041D                     PR6             equ	1053	;# 
  2477     041E                     T6CON           equ	1054	;# 
  2478     041F                     CCDCON          equ	1055	;# 
  2479     0498                     NCO1ACC         equ	1176	;# 
  2480     0498                     NCO1ACCL        equ	1176	;# 
  2481     0499                     NCO1ACCH        equ	1177	;# 
  2482     049A                     NCO1ACCU        equ	1178	;# 
  2483     049B                     NCO1INC         equ	1179	;# 
  2484     049B                     NCO1INCL        equ	1179	;# 
  2485     049C                     NCO1INCH        equ	1180	;# 
  2486     049D                     NCO1INCU        equ	1181	;# 
  2487     049E                     NCO1CON         equ	1182	;# 
  2488     049F                     NCO1CLK         equ	1183	;# 
  2489     0617                     PWM5DCL         equ	1559	;# 
  2490     0618                     PWM5DCH         equ	1560	;# 
  2491     0619                     PWM5CON         equ	1561	;# 
  2492     0619                     PWM5CON0        equ	1561	;# 
  2493     061A                     PWM6DCL         equ	1562	;# 
  2494     061B                     PWM6DCH         equ	1563	;# 
  2495     061C                     PWM6CON         equ	1564	;# 
  2496     061C                     PWM6CON0        equ	1564	;# 
  2497     061F                     PWMTMRS         equ	1567	;# 
  2498     0691                     CWG1CLKCON      equ	1681	;# 
  2499     0692                     CWG1DAT         equ	1682	;# 
  2500     0693                     CWG1DBR         equ	1683	;# 
  2501     0694                     CWG1DBF         equ	1684	;# 
  2502     0695                     CWG1CON0        equ	1685	;# 
  2503     0696                     CWG1CON1        equ	1686	;# 
  2504     0697                     CWG1AS0         equ	1687	;# 
  2505     0698                     CWG1AS1         equ	1688	;# 
  2506     0699                     CWG1STR         equ	1689	;# 
  2507     0711                     CWG2CLKCON      equ	1809	;# 
  2508     0712                     CWG2DAT         equ	1810	;# 
  2509     0713                     CWG2DBR         equ	1811	;# 
  2510     0714                     CWG2DBF         equ	1812	;# 
  2511     0715                     CWG2CON0        equ	1813	;# 
  2512     0716                     CWG2CON1        equ	1814	;# 
  2513     0717                     CWG2AS0         equ	1815	;# 
  2514     0718                     CWG2AS1         equ	1816	;# 
  2515     0719                     CWG2STR         equ	1817	;# 
  2516     0891                     NVMADR          equ	2193	;# 
  2517     0891                     EEADR           equ	2193	;# 
  2518     0891                     PMADR           equ	2193	;# 
  2519     0891                     NVMADRL         equ	2193	;# 
  2520     0891                     EEADRL          equ	2193	;# 
  2521     0891                     PMADRL          equ	2193	;# 
  2522     0892                     NVMADRH         equ	2194	;# 
  2523     0892                     EEADRH          equ	2194	;# 
  2524     0892                     PMADRH          equ	2194	;# 
  2525     0893                     NVMDAT          equ	2195	;# 
  2526     0893                     EEDAT           equ	2195	;# 
  2527     0893                     PMDAT           equ	2195	;# 
  2528     0893                     NVMDATL         equ	2195	;# 
  2529     0893                     EEDATL          equ	2195	;# 
  2530     0893                     PMDATL          equ	2195	;# 
  2531     0894                     NVMDATH         equ	2196	;# 
  2532     0894                     EEDATH          equ	2196	;# 
  2533     0894                     PMDATH          equ	2196	;# 
  2534     0895                     NVMCON1         equ	2197	;# 
  2535     0895                     EECON1          equ	2197	;# 
  2536     0895                     PMCON1          equ	2197	;# 
  2537     0896                     NVMCON2         equ	2198	;# 
  2538     0896                     EECON2          equ	2198	;# 
  2539     0896                     PMCON2          equ	2198	;# 
  2540     089B                     PCON0           equ	2203	;# 
  2541     0911                     PMD0            equ	2321	;# 
  2542     0912                     PMD1            equ	2322	;# 
  2543     0913                     PMD2            equ	2323	;# 
  2544     0914                     PMD3            equ	2324	;# 
  2545     0915                     PMD4            equ	2325	;# 
  2546     0916                     PMD5            equ	2326	;# 
  2547     0918                     CPUDOZE         equ	2328	;# 
  2548     0919                     OSCCON1         equ	2329	;# 
  2549     091A                     OSCCON2         equ	2330	;# 
  2550     091B                     OSCCON3         equ	2331	;# 
  2551     091C                     OSCSTAT1        equ	2332	;# 
  2552     091D                     OSCEN           equ	2333	;# 
  2553     091E                     OSCTUNE         equ	2334	;# 
  2554     091F                     OSCFRQ          equ	2335	;# 
  2555     0E0F                     PPSLOCK         equ	3599	;# 
  2556     0E10                     INTPPS          equ	3600	;# 
  2557     0E11                     T0CKIPPS        equ	3601	;# 
  2558     0E12                     T1CKIPPS        equ	3602	;# 
  2559     0E13                     T1GPPS          equ	3603	;# 
  2560     0E14                     CCP1PPS         equ	3604	;# 
  2561     0E15                     CCP2PPS         equ	3605	;# 
  2562     0E16                     CCP3PPS         equ	3606	;# 
  2563     0E17                     CCP4PPS         equ	3607	;# 
  2564     0E18                     CWG1PPS         equ	3608	;# 
  2565     0E19                     CWG2PPS         equ	3609	;# 
  2566     0E1A                     MDCIN1PPS       equ	3610	;# 
  2567     0E1B                     MDCIN2PPS       equ	3611	;# 
  2568     0E1C                     MDMINPPS        equ	3612	;# 
  2569     0E1D                     SSP2CLKPPS      equ	3613	;# 
  2570     0E1E                     SSP2DATPPS      equ	3614	;# 
  2571     0E1F                     SSP2SSPPS       equ	3615	;# 
  2572     0E20                     SSP1CLKPPS      equ	3616	;# 
  2573     0E21                     SSP1DATPPS      equ	3617	;# 
  2574     0E22                     SSP1SSPPS       equ	3618	;# 
  2575     0E24                     RXPPS           equ	3620	;# 
  2576     0E25                     TXPPS           equ	3621	;# 
  2577     0E28                     CLCIN0PPS       equ	3624	;# 
  2578     0E29                     CLCIN1PPS       equ	3625	;# 
  2579     0E2A                     CLCIN2PPS       equ	3626	;# 
  2580     0E2B                     CLCIN3PPS       equ	3627	;# 
  2581     0E2C                     T3CKIPPS        equ	3628	;# 
  2582     0E2D                     T3GPPS          equ	3629	;# 
  2583     0E2E                     T5CKIPPS        equ	3630	;# 
  2584     0E2F                     T5GPPS          equ	3631	;# 
  2585     0E90                     RA0PPS          equ	3728	;# 
  2586     0E91                     RA1PPS          equ	3729	;# 
  2587     0E92                     RA2PPS          equ	3730	;# 
  2588     0E94                     RA4PPS          equ	3732	;# 
  2589     0E95                     RA5PPS          equ	3733	;# 
  2590     0E9C                     RB4PPS          equ	3740	;# 
  2591     0E9D                     RB5PPS          equ	3741	;# 
  2592     0E9E                     RB6PPS          equ	3742	;# 
  2593     0E9F                     RB7PPS          equ	3743	;# 
  2594     0EA0                     RC0PPS          equ	3744	;# 
  2595     0EA1                     RC1PPS          equ	3745	;# 
  2596     0EA2                     RC2PPS          equ	3746	;# 
  2597     0EA3                     RC3PPS          equ	3747	;# 
  2598     0EA4                     RC4PPS          equ	3748	;# 
  2599     0EA5                     RC5PPS          equ	3749	;# 
  2600     0EA6                     RC6PPS          equ	3750	;# 
  2601     0EA7                     RC7PPS          equ	3751	;# 
  2602     0F0F                     CLCDATA         equ	3855	;# 
  2603     0F10                     CLC1CON         equ	3856	;# 
  2604     0F11                     CLC1POL         equ	3857	;# 
  2605     0F12                     CLC1SEL0        equ	3858	;# 
  2606     0F13                     CLC1SEL1        equ	3859	;# 
  2607     0F14                     CLC1SEL2        equ	3860	;# 
  2608     0F15                     CLC1SEL3        equ	3861	;# 
  2609     0F16                     CLC1GLS0        equ	3862	;# 
  2610     0F17                     CLC1GLS1        equ	3863	;# 
  2611     0F18                     CLC1GLS2        equ	3864	;# 
  2612     0F19                     CLC1GLS3        equ	3865	;# 
  2613     0F1A                     CLC2CON         equ	3866	;# 
  2614     0F1B                     CLC2POL         equ	3867	;# 
  2615     0F1C                     CLC2SEL0        equ	3868	;# 
  2616     0F1D                     CLC2SEL1        equ	3869	;# 
  2617     0F1E                     CLC2SEL2        equ	3870	;# 
  2618     0F1F                     CLC2SEL3        equ	3871	;# 
  2619     0F20                     CLC2GLS0        equ	3872	;# 
  2620     0F21                     CLC2GLS1        equ	3873	;# 
  2621     0F22                     CLC2GLS2        equ	3874	;# 
  2622     0F23                     CLC2GLS3        equ	3875	;# 
  2623     0F24                     CLC3CON         equ	3876	;# 
  2624     0F25                     CLC3POL         equ	3877	;# 
  2625     0F26                     CLC3SEL0        equ	3878	;# 
  2626     0F27                     CLC3SEL1        equ	3879	;# 
  2627     0F28                     CLC3SEL2        equ	3880	;# 
  2628     0F29                     CLC3SEL3        equ	3881	;# 
  2629     0F2A                     CLC3GLS0        equ	3882	;# 
  2630     0F2B                     CLC3GLS1        equ	3883	;# 
  2631     0F2C                     CLC3GLS2        equ	3884	;# 
  2632     0F2D                     CLC3GLS3        equ	3885	;# 
  2633     0F2E                     CLC4CON         equ	3886	;# 
  2634     0F2F                     CLC4POL         equ	3887	;# 
  2635     0F30                     CLC4SEL0        equ	3888	;# 
  2636     0F31                     CLC4SEL1        equ	3889	;# 
  2637     0F32                     CLC4SEL2        equ	3890	;# 
  2638     0F33                     CLC4SEL3        equ	3891	;# 
  2639     0F34                     CLC4GLS0        equ	3892	;# 
  2640     0F35                     CLC4GLS1        equ	3893	;# 
  2641     0F36                     CLC4GLS2        equ	3894	;# 
  2642     0F37                     CLC4GLS3        equ	3895	;# 
  2643     0FE4                     STATUS_SHAD     equ	4068	;# 
  2644     0FE5                     WREG_SHAD       equ	4069	;# 
  2645     0FE6                     BSR_SHAD        equ	4070	;# 
  2646     0FE7                     PCLATH_SHAD     equ	4071	;# 
  2647     0FE8                     FSR0L_SHAD      equ	4072	;# 
  2648     0FE9                     FSR0H_SHAD      equ	4073	;# 
  2649     0FEA                     FSR1L_SHAD      equ	4074	;# 
  2650     0FEB                     FSR1H_SHAD      equ	4075	;# 
  2651     0FED                     STKPTR          equ	4077	;# 
  2652     0FEE                     TOSL            equ	4078	;# 
  2653     0FEF                     TOSH            equ	4079	;# 
  2654     0000                     INDF0           equ	0	;# 
  2655     0001                     INDF1           equ	1	;# 
  2656     0002                     PCL             equ	2	;# 
  2657     0003                     STATUS          equ	3	;# 
  2658     0004                     FSR0L           equ	4	;# 
  2659     0005                     FSR0H           equ	5	;# 
  2660     0006                     FSR1L           equ	6	;# 
  2661     0007                     FSR1H           equ	7	;# 
  2662     0008                     BSR             equ	8	;# 
  2663     0009                     WREG            equ	9	;# 
  2664     000A                     PCLATH          equ	10	;# 
  2665     000B                     INTCON          equ	11	;# 
  2666     000C                     PORTA           equ	12	;# 
  2667     000D                     PORTB           equ	13	;# 
  2668     000E                     PORTC           equ	14	;# 
  2669     0010                     PIR0            equ	16	;# 
  2670     0011                     PIR1            equ	17	;# 
  2671     0012                     PIR2            equ	18	;# 
  2672     0013                     PIR3            equ	19	;# 
  2673     0014                     PIR4            equ	20	;# 
  2674     0015                     TMR0L           equ	21	;# 
  2675     0015                     TMR0            equ	21	;# 
  2676     0016                     TMR0H           equ	22	;# 
  2677     0016                     PR0             equ	22	;# 
  2678     0017                     T0CON0          equ	23	;# 
  2679     0018                     T0CON1          equ	24	;# 
  2680     0019                     TMR1            equ	25	;# 
  2681     0019                     TMR1L           equ	25	;# 
  2682     001A                     TMR1H           equ	26	;# 
  2683     001B                     T1CON           equ	27	;# 
  2684     001C                     T1GCON          equ	28	;# 
  2685     001D                     TMR2            equ	29	;# 
  2686     001E                     PR2             equ	30	;# 
  2687     001F                     T2CON           equ	31	;# 
  2688     008C                     TRISA           equ	140	;# 
  2689     008D                     TRISB           equ	141	;# 
  2690     008E                     TRISC           equ	142	;# 
  2691     0090                     PIE0            equ	144	;# 
  2692     0091                     PIE1            equ	145	;# 
  2693     0092                     PIE2            equ	146	;# 
  2694     0093                     PIE3            equ	147	;# 
  2695     0094                     PIE4            equ	148	;# 
  2696     0097                     WDTCON          equ	151	;# 
  2697     009B                     ADRES           equ	155	;# 
  2698     009B                     ADRESL          equ	155	;# 
  2699     009C                     ADRESH          equ	156	;# 
  2700     009D                     ADCON0          equ	157	;# 
  2701     009E                     ADCON1          equ	158	;# 
  2702     009F                     ADACT           equ	159	;# 
  2703     010C                     LATA            equ	268	;# 
  2704     010D                     LATB            equ	269	;# 
  2705     010E                     LATC            equ	270	;# 
  2706     0111                     CM1CON0         equ	273	;# 
  2707     0112                     CM1CON1         equ	274	;# 
  2708     0113                     CM2CON0         equ	275	;# 
  2709     0114                     CM2CON1         equ	276	;# 
  2710     0115                     CMOUT           equ	277	;# 
  2711     0116                     BORCON          equ	278	;# 
  2712     0117                     FVRCON          equ	279	;# 
  2713     0118                     DACCON0         equ	280	;# 
  2714     0119                     DACCON1         equ	281	;# 
  2715     018C                     ANSELA          equ	396	;# 
  2716     018D                     ANSELB          equ	397	;# 
  2717     018E                     ANSELC          equ	398	;# 
  2718     0197                     VREGCON         equ	407	;# 
  2719     0199                     RC1REG          equ	409	;# 
  2720     0199                     RCREG           equ	409	;# 
  2721     0199                     RCREG1          equ	409	;# 
  2722     019A                     TX1REG          equ	410	;# 
  2723     019A                     TXREG1          equ	410	;# 
  2724     019A                     TXREG           equ	410	;# 
  2725     019B                     SP1BRG          equ	411	;# 
  2726     019B                     SPBRG           equ	411	;# 
  2727     019B                     SP1BRGL         equ	411	;# 
  2728     019B                     SPBRG1          equ	411	;# 
  2729     019B                     SPBRGL          equ	411	;# 
  2730     019C                     SP1BRGH         equ	412	;# 
  2731     019C                     SPBRGH          equ	412	;# 
  2732     019C                     SPBRGH1         equ	412	;# 
  2733     019D                     RC1STA          equ	413	;# 
  2734     019D                     RCSTA1          equ	413	;# 
  2735     019D                     RCSTA           equ	413	;# 
  2736     019E                     TX1STA          equ	414	;# 
  2737     019E                     TXSTA1          equ	414	;# 
  2738     019E                     TXSTA           equ	414	;# 
  2739     019F                     BAUD1CON        equ	415	;# 
  2740     019F                     BAUDCON1        equ	415	;# 
  2741     019F                     BAUDCTL1        equ	415	;# 
  2742     019F                     BAUDCON         equ	415	;# 
  2743     019F                     BAUDCTL         equ	415	;# 
  2744     020C                     WPUA            equ	524	;# 
  2745     020D                     WPUB            equ	525	;# 
  2746     020E                     WPUC            equ	526	;# 
  2747     0211                     SSP1BUF         equ	529	;# 
  2748     0211                     SSPBUF          equ	529	;# 
  2749     0212                     SSP1ADD         equ	530	;# 
  2750     0212                     SSPADD          equ	530	;# 
  2751     0213                     SSP1MSK         equ	531	;# 
  2752     0213                     SSPMSK          equ	531	;# 
  2753     0214                     SSP1STAT        equ	532	;# 
  2754     0214                     SSPSTAT         equ	532	;# 
  2755     0215                     SSP1CON1        equ	533	;# 
  2756     0215                     SSPCON          equ	533	;# 
  2757     0215                     SSPCON1         equ	533	;# 
  2758     0215                     SSP1CON         equ	533	;# 
  2759     0216                     SSP1CON2        equ	534	;# 
  2760     0216                     SSPCON2         equ	534	;# 
  2761     0217                     SSP1CON3        equ	535	;# 
  2762     0217                     SSPCON3         equ	535	;# 
  2763     0219                     SSP2BUF         equ	537	;# 
  2764     021A                     SSP2ADD         equ	538	;# 
  2765     021B                     SSP2MSK         equ	539	;# 
  2766     021C                     SSP2STAT        equ	540	;# 
  2767     021D                     SSP2CON1        equ	541	;# 
  2768     021D                     SSP2CON         equ	541	;# 
  2769     021E                     SSP2CON2        equ	542	;# 
  2770     021F                     SSP2CON3        equ	543	;# 
  2771     028C                     ODCONA          equ	652	;# 
  2772     028D                     ODCONB          equ	653	;# 
  2773     028E                     ODCONC          equ	654	;# 
  2774     0291                     CCPR1           equ	657	;# 
  2775     0291                     CCPR1L          equ	657	;# 
  2776     0292                     CCPR1H          equ	658	;# 
  2777     0293                     CCP1CON         equ	659	;# 
  2778     0294                     CCP1CAP         equ	660	;# 
  2779     0295                     CCPR2           equ	661	;# 
  2780     0295                     CCPR2L          equ	661	;# 
  2781     0296                     CCPR2H          equ	662	;# 
  2782     0297                     CCP2CON         equ	663	;# 
  2783     0298                     CCP2CAP         equ	664	;# 
  2784     029F                     CCPTMRS         equ	671	;# 
  2785     030C                     SLRCONA         equ	780	;# 
  2786     030D                     SLRCONB         equ	781	;# 
  2787     030E                     SLRCONC         equ	782	;# 
  2788     0311                     CCPR3           equ	785	;# 
  2789     0311                     CCPR3L          equ	785	;# 
  2790     0312                     CCPR3H          equ	786	;# 
  2791     0313                     CCP3CON         equ	787	;# 
  2792     0314                     CCP3CAP         equ	788	;# 
  2793     0315                     CCPR4           equ	789	;# 
  2794     0315                     CCPR4L          equ	789	;# 
  2795     0316                     CCPR4H          equ	790	;# 
  2796     0317                     CCP4CON         equ	791	;# 
  2797     0318                     CCP4CAP         equ	792	;# 
  2798     038C                     INLVLA          equ	908	;# 
  2799     038D                     INLVLB          equ	909	;# 
  2800     038E                     INLVLC          equ	910	;# 
  2801     0391                     IOCAP           equ	913	;# 
  2802     0392                     IOCAN           equ	914	;# 
  2803     0393                     IOCAF           equ	915	;# 
  2804     0394                     IOCBP           equ	916	;# 
  2805     0395                     IOCBN           equ	917	;# 
  2806     0396                     IOCBF           equ	918	;# 
  2807     0397                     IOCCP           equ	919	;# 
  2808     0398                     IOCCN           equ	920	;# 
  2809     0399                     IOCCF           equ	921	;# 
  2810     039A                     CLKRCON         equ	922	;# 
  2811     039C                     MDCON           equ	924	;# 
  2812     039D                     MDSRC           equ	925	;# 
  2813     039E                     MDCARH          equ	926	;# 
  2814     039F                     MDCARL          equ	927	;# 
  2815     0411                     TMR3            equ	1041	;# 
  2816     0411                     TMR3L           equ	1041	;# 
  2817     0412                     TMR3H           equ	1042	;# 
  2818     0413                     T3CON           equ	1043	;# 
  2819     0414                     T3GCON          equ	1044	;# 
  2820     0415                     TMR4            equ	1045	;# 
  2821     0416                     PR4             equ	1046	;# 
  2822     0417                     T4CON           equ	1047	;# 
  2823     0418                     TMR5            equ	1048	;# 
  2824     0418                     TMR5L           equ	1048	;# 
  2825     0419                     TMR5H           equ	1049	;# 
  2826     041A                     T5CON           equ	1050	;# 
  2827     041B                     T5GCON          equ	1051	;# 
  2828     041C                     TMR6            equ	1052	;# 
  2829     041D                     PR6             equ	1053	;# 
  2830     041E                     T6CON           equ	1054	;# 
  2831     041F                     CCDCON          equ	1055	;# 
  2832     0498                     NCO1ACC         equ	1176	;# 
  2833     0498                     NCO1ACCL        equ	1176	;# 
  2834     0499                     NCO1ACCH        equ	1177	;# 
  2835     049A                     NCO1ACCU        equ	1178	;# 
  2836     049B                     NCO1INC         equ	1179	;# 
  2837     049B                     NCO1INCL        equ	1179	;# 
  2838     049C                     NCO1INCH        equ	1180	;# 
  2839     049D                     NCO1INCU        equ	1181	;# 
  2840     049E                     NCO1CON         equ	1182	;# 
  2841     049F                     NCO1CLK         equ	1183	;# 
  2842     0617                     PWM5DCL         equ	1559	;# 
  2843     0618                     PWM5DCH         equ	1560	;# 
  2844     0619                     PWM5CON         equ	1561	;# 
  2845     0619                     PWM5CON0        equ	1561	;# 
  2846     061A                     PWM6DCL         equ	1562	;# 
  2847     061B                     PWM6DCH         equ	1563	;# 
  2848     061C                     PWM6CON         equ	1564	;# 
  2849     061C                     PWM6CON0        equ	1564	;# 
  2850     061F                     PWMTMRS         equ	1567	;# 
  2851     0691                     CWG1CLKCON      equ	1681	;# 
  2852     0692                     CWG1DAT         equ	1682	;# 
  2853     0693                     CWG1DBR         equ	1683	;# 
  2854     0694                     CWG1DBF         equ	1684	;# 
  2855     0695                     CWG1CON0        equ	1685	;# 
  2856     0696                     CWG1CON1        equ	1686	;# 
  2857     0697                     CWG1AS0         equ	1687	;# 
  2858     0698                     CWG1AS1         equ	1688	;# 
  2859     0699                     CWG1STR         equ	1689	;# 
  2860     0711                     CWG2CLKCON      equ	1809	;# 
  2861     0712                     CWG2DAT         equ	1810	;# 
  2862     0713                     CWG2DBR         equ	1811	;# 
  2863     0714                     CWG2DBF         equ	1812	;# 
  2864     0715                     CWG2CON0        equ	1813	;# 
  2865     0716                     CWG2CON1        equ	1814	;# 
  2866     0717                     CWG2AS0         equ	1815	;# 
  2867     0718                     CWG2AS1         equ	1816	;# 
  2868     0719                     CWG2STR         equ	1817	;# 
  2869     0891                     NVMADR          equ	2193	;# 
  2870     0891                     EEADR           equ	2193	;# 
  2871     0891                     PMADR           equ	2193	;# 
  2872     0891                     NVMADRL         equ	2193	;# 
  2873     0891                     EEADRL          equ	2193	;# 
  2874     0891                     PMADRL          equ	2193	;# 
  2875     0892                     NVMADRH         equ	2194	;# 
  2876     0892                     EEADRH          equ	2194	;# 
  2877     0892                     PMADRH          equ	2194	;# 
  2878     0893                     NVMDAT          equ	2195	;# 
  2879     0893                     EEDAT           equ	2195	;# 
  2880     0893                     PMDAT           equ	2195	;# 
  2881     0893                     NVMDATL         equ	2195	;# 
  2882     0893                     EEDATL          equ	2195	;# 
  2883     0893                     PMDATL          equ	2195	;# 
  2884     0894                     NVMDATH         equ	2196	;# 
  2885     0894                     EEDATH          equ	2196	;# 
  2886     0894                     PMDATH          equ	2196	;# 
  2887     0895                     NVMCON1         equ	2197	;# 
  2888     0895                     EECON1          equ	2197	;# 
  2889     0895                     PMCON1          equ	2197	;# 
  2890     0896                     NVMCON2         equ	2198	;# 
  2891     0896                     EECON2          equ	2198	;# 
  2892     0896                     PMCON2          equ	2198	;# 
  2893     089B                     PCON0           equ	2203	;# 
  2894     0911                     PMD0            equ	2321	;# 
  2895     0912                     PMD1            equ	2322	;# 
  2896     0913                     PMD2            equ	2323	;# 
  2897     0914                     PMD3            equ	2324	;# 
  2898     0915                     PMD4            equ	2325	;# 
  2899     0916                     PMD5            equ	2326	;# 
  2900     0918                     CPUDOZE         equ	2328	;# 
  2901     0919                     OSCCON1         equ	2329	;# 
  2902     091A                     OSCCON2         equ	2330	;# 
  2903     091B                     OSCCON3         equ	2331	;# 
  2904     091C                     OSCSTAT1        equ	2332	;# 
  2905     091D                     OSCEN           equ	2333	;# 
  2906     091E                     OSCTUNE         equ	2334	;# 
  2907     091F                     OSCFRQ          equ	2335	;# 
  2908     0E0F                     PPSLOCK         equ	3599	;# 
  2909     0E10                     INTPPS          equ	3600	;# 
  2910     0E11                     T0CKIPPS        equ	3601	;# 
  2911     0E12                     T1CKIPPS        equ	3602	;# 
  2912     0E13                     T1GPPS          equ	3603	;# 
  2913     0E14                     CCP1PPS         equ	3604	;# 
  2914     0E15                     CCP2PPS         equ	3605	;# 
  2915     0E16                     CCP3PPS         equ	3606	;# 
  2916     0E17                     CCP4PPS         equ	3607	;# 
  2917     0E18                     CWG1PPS         equ	3608	;# 
  2918     0E19                     CWG2PPS         equ	3609	;# 
  2919     0E1A                     MDCIN1PPS       equ	3610	;# 
  2920     0E1B                     MDCIN2PPS       equ	3611	;# 
  2921     0E1C                     MDMINPPS        equ	3612	;# 
  2922     0E1D                     SSP2CLKPPS      equ	3613	;# 
  2923     0E1E                     SSP2DATPPS      equ	3614	;# 
  2924     0E1F                     SSP2SSPPS       equ	3615	;# 
  2925     0E20                     SSP1CLKPPS      equ	3616	;# 
  2926     0E21                     SSP1DATPPS      equ	3617	;# 
  2927     0E22                     SSP1SSPPS       equ	3618	;# 
  2928     0E24                     RXPPS           equ	3620	;# 
  2929     0E25                     TXPPS           equ	3621	;# 
  2930     0E28                     CLCIN0PPS       equ	3624	;# 
  2931     0E29                     CLCIN1PPS       equ	3625	;# 
  2932     0E2A                     CLCIN2PPS       equ	3626	;# 
  2933     0E2B                     CLCIN3PPS       equ	3627	;# 
  2934     0E2C                     T3CKIPPS        equ	3628	;# 
  2935     0E2D                     T3GPPS          equ	3629	;# 
  2936     0E2E                     T5CKIPPS        equ	3630	;# 
  2937     0E2F                     T5GPPS          equ	3631	;# 
  2938     0E90                     RA0PPS          equ	3728	;# 
  2939     0E91                     RA1PPS          equ	3729	;# 
  2940     0E92                     RA2PPS          equ	3730	;# 
  2941     0E94                     RA4PPS          equ	3732	;# 
  2942     0E95                     RA5PPS          equ	3733	;# 
  2943     0E9C                     RB4PPS          equ	3740	;# 
  2944     0E9D                     RB5PPS          equ	3741	;# 
  2945     0E9E                     RB6PPS          equ	3742	;# 
  2946     0E9F                     RB7PPS          equ	3743	;# 
  2947     0EA0                     RC0PPS          equ	3744	;# 
  2948     0EA1                     RC1PPS          equ	3745	;# 
  2949     0EA2                     RC2PPS          equ	3746	;# 
  2950     0EA3                     RC3PPS          equ	3747	;# 
  2951     0EA4                     RC4PPS          equ	3748	;# 
  2952     0EA5                     RC5PPS          equ	3749	;# 
  2953     0EA6                     RC6PPS          equ	3750	;# 
  2954     0EA7                     RC7PPS          equ	3751	;# 
  2955     0F0F                     CLCDATA         equ	3855	;# 
  2956     0F10                     CLC1CON         equ	3856	;# 
  2957     0F11                     CLC1POL         equ	3857	;# 
  2958     0F12                     CLC1SEL0        equ	3858	;# 
  2959     0F13                     CLC1SEL1        equ	3859	;# 
  2960     0F14                     CLC1SEL2        equ	3860	;# 
  2961     0F15                     CLC1SEL3        equ	3861	;# 
  2962     0F16                     CLC1GLS0        equ	3862	;# 
  2963     0F17                     CLC1GLS1        equ	3863	;# 
  2964     0F18                     CLC1GLS2        equ	3864	;# 
  2965     0F19                     CLC1GLS3        equ	3865	;# 
  2966     0F1A                     CLC2CON         equ	3866	;# 
  2967     0F1B                     CLC2POL         equ	3867	;# 
  2968     0F1C                     CLC2SEL0        equ	3868	;# 
  2969     0F1D                     CLC2SEL1        equ	3869	;# 
  2970     0F1E                     CLC2SEL2        equ	3870	;# 
  2971     0F1F                     CLC2SEL3        equ	3871	;# 
  2972     0F20                     CLC2GLS0        equ	3872	;# 
  2973     0F21                     CLC2GLS1        equ	3873	;# 
  2974     0F22                     CLC2GLS2        equ	3874	;# 
  2975     0F23                     CLC2GLS3        equ	3875	;# 
  2976     0F24                     CLC3CON         equ	3876	;# 
  2977     0F25                     CLC3POL         equ	3877	;# 
  2978     0F26                     CLC3SEL0        equ	3878	;# 
  2979     0F27                     CLC3SEL1        equ	3879	;# 
  2980     0F28                     CLC3SEL2        equ	3880	;# 
  2981     0F29                     CLC3SEL3        equ	3881	;# 
  2982     0F2A                     CLC3GLS0        equ	3882	;# 
  2983     0F2B                     CLC3GLS1        equ	3883	;# 
  2984     0F2C                     CLC3GLS2        equ	3884	;# 
  2985     0F2D                     CLC3GLS3        equ	3885	;# 
  2986     0F2E                     CLC4CON         equ	3886	;# 
  2987     0F2F                     CLC4POL         equ	3887	;# 
  2988     0F30                     CLC4SEL0        equ	3888	;# 
  2989     0F31                     CLC4SEL1        equ	3889	;# 
  2990     0F32                     CLC4SEL2        equ	3890	;# 
  2991     0F33                     CLC4SEL3        equ	3891	;# 
  2992     0F34                     CLC4GLS0        equ	3892	;# 
  2993     0F35                     CLC4GLS1        equ	3893	;# 
  2994     0F36                     CLC4GLS2        equ	3894	;# 
  2995     0F37                     CLC4GLS3        equ	3895	;# 
  2996     0FE4                     STATUS_SHAD     equ	4068	;# 
  2997     0FE5                     WREG_SHAD       equ	4069	;# 
  2998     0FE6                     BSR_SHAD        equ	4070	;# 
  2999     0FE7                     PCLATH_SHAD     equ	4071	;# 
  3000     0FE8                     FSR0L_SHAD      equ	4072	;# 
  3001     0FE9                     FSR0H_SHAD      equ	4073	;# 
  3002     0FEA                     FSR1L_SHAD      equ	4074	;# 
  3003     0FEB                     FSR1H_SHAD      equ	4075	;# 
  3004     0FED                     STKPTR          equ	4077	;# 
  3005     0FEE                     TOSL            equ	4078	;# 
  3006     0FEF                     TOSH            equ	4079	;# 
  3007     0000                     INDF0           equ	0	;# 
  3008     0001                     INDF1           equ	1	;# 
  3009     0002                     PCL             equ	2	;# 
  3010     0003                     STATUS          equ	3	;# 
  3011     0004                     FSR0L           equ	4	;# 
  3012     0005                     FSR0H           equ	5	;# 
  3013     0006                     FSR1L           equ	6	;# 
  3014     0007                     FSR1H           equ	7	;# 
  3015     0008                     BSR             equ	8	;# 
  3016     0009                     WREG            equ	9	;# 
  3017     000A                     PCLATH          equ	10	;# 
  3018     000B                     INTCON          equ	11	;# 
  3019     000C                     PORTA           equ	12	;# 
  3020     000D                     PORTB           equ	13	;# 
  3021     000E                     PORTC           equ	14	;# 
  3022     0010                     PIR0            equ	16	;# 
  3023     0011                     PIR1            equ	17	;# 
  3024     0012                     PIR2            equ	18	;# 
  3025     0013                     PIR3            equ	19	;# 
  3026     0014                     PIR4            equ	20	;# 
  3027     0015                     TMR0L           equ	21	;# 
  3028     0015                     TMR0            equ	21	;# 
  3029     0016                     TMR0H           equ	22	;# 
  3030     0016                     PR0             equ	22	;# 
  3031     0017                     T0CON0          equ	23	;# 
  3032     0018                     T0CON1          equ	24	;# 
  3033     0019                     TMR1            equ	25	;# 
  3034     0019                     TMR1L           equ	25	;# 
  3035     001A                     TMR1H           equ	26	;# 
  3036     001B                     T1CON           equ	27	;# 
  3037     001C                     T1GCON          equ	28	;# 
  3038     001D                     TMR2            equ	29	;# 
  3039     001E                     PR2             equ	30	;# 
  3040     001F                     T2CON           equ	31	;# 
  3041     008C                     TRISA           equ	140	;# 
  3042     008D                     TRISB           equ	141	;# 
  3043     008E                     TRISC           equ	142	;# 
  3044     0090                     PIE0            equ	144	;# 
  3045     0091                     PIE1            equ	145	;# 
  3046     0092                     PIE2            equ	146	;# 
  3047     0093                     PIE3            equ	147	;# 
  3048     0094                     PIE4            equ	148	;# 
  3049     0097                     WDTCON          equ	151	;# 
  3050     009B                     ADRES           equ	155	;# 
  3051     009B                     ADRESL          equ	155	;# 
  3052     009C                     ADRESH          equ	156	;# 
  3053     009D                     ADCON0          equ	157	;# 
  3054     009E                     ADCON1          equ	158	;# 
  3055     009F                     ADACT           equ	159	;# 
  3056     010C                     LATA            equ	268	;# 
  3057     010D                     LATB            equ	269	;# 
  3058     010E                     LATC            equ	270	;# 
  3059     0111                     CM1CON0         equ	273	;# 
  3060     0112                     CM1CON1         equ	274	;# 
  3061     0113                     CM2CON0         equ	275	;# 
  3062     0114                     CM2CON1         equ	276	;# 
  3063     0115                     CMOUT           equ	277	;# 
  3064     0116                     BORCON          equ	278	;# 
  3065     0117                     FVRCON          equ	279	;# 
  3066     0118                     DACCON0         equ	280	;# 
  3067     0119                     DACCON1         equ	281	;# 
  3068     018C                     ANSELA          equ	396	;# 
  3069     018D                     ANSELB          equ	397	;# 
  3070     018E                     ANSELC          equ	398	;# 
  3071     0197                     VREGCON         equ	407	;# 
  3072     0199                     RC1REG          equ	409	;# 
  3073     0199                     RCREG           equ	409	;# 
  3074     0199                     RCREG1          equ	409	;# 
  3075     019A                     TX1REG          equ	410	;# 
  3076     019A                     TXREG1          equ	410	;# 
  3077     019A                     TXREG           equ	410	;# 
  3078     019B                     SP1BRG          equ	411	;# 
  3079     019B                     SPBRG           equ	411	;# 
  3080     019B                     SP1BRGL         equ	411	;# 
  3081     019B                     SPBRG1          equ	411	;# 
  3082     019B                     SPBRGL          equ	411	;# 
  3083     019C                     SP1BRGH         equ	412	;# 
  3084     019C                     SPBRGH          equ	412	;# 
  3085     019C                     SPBRGH1         equ	412	;# 
  3086     019D                     RC1STA          equ	413	;# 
  3087     019D                     RCSTA1          equ	413	;# 
  3088     019D                     RCSTA           equ	413	;# 
  3089     019E                     TX1STA          equ	414	;# 
  3090     019E                     TXSTA1          equ	414	;# 
  3091     019E                     TXSTA           equ	414	;# 
  3092     019F                     BAUD1CON        equ	415	;# 
  3093     019F                     BAUDCON1        equ	415	;# 
  3094     019F                     BAUDCTL1        equ	415	;# 
  3095     019F                     BAUDCON         equ	415	;# 
  3096     019F                     BAUDCTL         equ	415	;# 
  3097     020C                     WPUA            equ	524	;# 
  3098     020D                     WPUB            equ	525	;# 
  3099     020E                     WPUC            equ	526	;# 
  3100     0211                     SSP1BUF         equ	529	;# 
  3101     0211                     SSPBUF          equ	529	;# 
  3102     0212                     SSP1ADD         equ	530	;# 
  3103     0212                     SSPADD          equ	530	;# 
  3104     0213                     SSP1MSK         equ	531	;# 
  3105     0213                     SSPMSK          equ	531	;# 
  3106     0214                     SSP1STAT        equ	532	;# 
  3107     0214                     SSPSTAT         equ	532	;# 
  3108     0215                     SSP1CON1        equ	533	;# 
  3109     0215                     SSPCON          equ	533	;# 
  3110     0215                     SSPCON1         equ	533	;# 
  3111     0215                     SSP1CON         equ	533	;# 
  3112     0216                     SSP1CON2        equ	534	;# 
  3113     0216                     SSPCON2         equ	534	;# 
  3114     0217                     SSP1CON3        equ	535	;# 
  3115     0217                     SSPCON3         equ	535	;# 
  3116     0219                     SSP2BUF         equ	537	;# 
  3117     021A                     SSP2ADD         equ	538	;# 
  3118     021B                     SSP2MSK         equ	539	;# 
  3119     021C                     SSP2STAT        equ	540	;# 
  3120     021D                     SSP2CON1        equ	541	;# 
  3121     021D                     SSP2CON         equ	541	;# 
  3122     021E                     SSP2CON2        equ	542	;# 
  3123     021F                     SSP2CON3        equ	543	;# 
  3124     028C                     ODCONA          equ	652	;# 
  3125     028D                     ODCONB          equ	653	;# 
  3126     028E                     ODCONC          equ	654	;# 
  3127     0291                     CCPR1           equ	657	;# 
  3128     0291                     CCPR1L          equ	657	;# 
  3129     0292                     CCPR1H          equ	658	;# 
  3130     0293                     CCP1CON         equ	659	;# 
  3131     0294                     CCP1CAP         equ	660	;# 
  3132     0295                     CCPR2           equ	661	;# 
  3133     0295                     CCPR2L          equ	661	;# 
  3134     0296                     CCPR2H          equ	662	;# 
  3135     0297                     CCP2CON         equ	663	;# 
  3136     0298                     CCP2CAP         equ	664	;# 
  3137     029F                     CCPTMRS         equ	671	;# 
  3138     030C                     SLRCONA         equ	780	;# 
  3139     030D                     SLRCONB         equ	781	;# 
  3140     030E                     SLRCONC         equ	782	;# 
  3141     0311                     CCPR3           equ	785	;# 
  3142     0311                     CCPR3L          equ	785	;# 
  3143     0312                     CCPR3H          equ	786	;# 
  3144     0313                     CCP3CON         equ	787	;# 
  3145     0314                     CCP3CAP         equ	788	;# 
  3146     0315                     CCPR4           equ	789	;# 
  3147     0315                     CCPR4L          equ	789	;# 
  3148     0316                     CCPR4H          equ	790	;# 
  3149     0317                     CCP4CON         equ	791	;# 
  3150     0318                     CCP4CAP         equ	792	;# 
  3151     038C                     INLVLA          equ	908	;# 
  3152     038D                     INLVLB          equ	909	;# 
  3153     038E                     INLVLC          equ	910	;# 
  3154     0391                     IOCAP           equ	913	;# 
  3155     0392                     IOCAN           equ	914	;# 
  3156     0393                     IOCAF           equ	915	;# 
  3157     0394                     IOCBP           equ	916	;# 
  3158     0395                     IOCBN           equ	917	;# 
  3159     0396                     IOCBF           equ	918	;# 
  3160     0397                     IOCCP           equ	919	;# 
  3161     0398                     IOCCN           equ	920	;# 
  3162     0399                     IOCCF           equ	921	;# 
  3163     039A                     CLKRCON         equ	922	;# 
  3164     039C                     MDCON           equ	924	;# 
  3165     039D                     MDSRC           equ	925	;# 
  3166     039E                     MDCARH          equ	926	;# 
  3167     039F                     MDCARL          equ	927	;# 
  3168     0411                     TMR3            equ	1041	;# 
  3169     0411                     TMR3L           equ	1041	;# 
  3170     0412                     TMR3H           equ	1042	;# 
  3171     0413                     T3CON           equ	1043	;# 
  3172     0414                     T3GCON          equ	1044	;# 
  3173     0415                     TMR4            equ	1045	;# 
  3174     0416                     PR4             equ	1046	;# 
  3175     0417                     T4CON           equ	1047	;# 
  3176     0418                     TMR5            equ	1048	;# 
  3177     0418                     TMR5L           equ	1048	;# 
  3178     0419                     TMR5H           equ	1049	;# 
  3179     041A                     T5CON           equ	1050	;# 
  3180     041B                     T5GCON          equ	1051	;# 
  3181     041C                     TMR6            equ	1052	;# 
  3182     041D                     PR6             equ	1053	;# 
  3183     041E                     T6CON           equ	1054	;# 
  3184     041F                     CCDCON          equ	1055	;# 
  3185     0498                     NCO1ACC         equ	1176	;# 
  3186     0498                     NCO1ACCL        equ	1176	;# 
  3187     0499                     NCO1ACCH        equ	1177	;# 
  3188     049A                     NCO1ACCU        equ	1178	;# 
  3189     049B                     NCO1INC         equ	1179	;# 
  3190     049B                     NCO1INCL        equ	1179	;# 
  3191     049C                     NCO1INCH        equ	1180	;# 
  3192     049D                     NCO1INCU        equ	1181	;# 
  3193     049E                     NCO1CON         equ	1182	;# 
  3194     049F                     NCO1CLK         equ	1183	;# 
  3195     0617                     PWM5DCL         equ	1559	;# 
  3196     0618                     PWM5DCH         equ	1560	;# 
  3197     0619                     PWM5CON         equ	1561	;# 
  3198     0619                     PWM5CON0        equ	1561	;# 
  3199     061A                     PWM6DCL         equ	1562	;# 
  3200     061B                     PWM6DCH         equ	1563	;# 
  3201     061C                     PWM6CON         equ	1564	;# 
  3202     061C                     PWM6CON0        equ	1564	;# 
  3203     061F                     PWMTMRS         equ	1567	;# 
  3204     0691                     CWG1CLKCON      equ	1681	;# 
  3205     0692                     CWG1DAT         equ	1682	;# 
  3206     0693                     CWG1DBR         equ	1683	;# 
  3207     0694                     CWG1DBF         equ	1684	;# 
  3208     0695                     CWG1CON0        equ	1685	;# 
  3209     0696                     CWG1CON1        equ	1686	;# 
  3210     0697                     CWG1AS0         equ	1687	;# 
  3211     0698                     CWG1AS1         equ	1688	;# 
  3212     0699                     CWG1STR         equ	1689	;# 
  3213     0711                     CWG2CLKCON      equ	1809	;# 
  3214     0712                     CWG2DAT         equ	1810	;# 
  3215     0713                     CWG2DBR         equ	1811	;# 
  3216     0714                     CWG2DBF         equ	1812	;# 
  3217     0715                     CWG2CON0        equ	1813	;# 
  3218     0716                     CWG2CON1        equ	1814	;# 
  3219     0717                     CWG2AS0         equ	1815	;# 
  3220     0718                     CWG2AS1         equ	1816	;# 
  3221     0719                     CWG2STR         equ	1817	;# 
  3222     0891                     NVMADR          equ	2193	;# 
  3223     0891                     EEADR           equ	2193	;# 
  3224     0891                     PMADR           equ	2193	;# 
  3225     0891                     NVMADRL         equ	2193	;# 
  3226     0891                     EEADRL          equ	2193	;# 
  3227     0891                     PMADRL          equ	2193	;# 
  3228     0892                     NVMADRH         equ	2194	;# 
  3229     0892                     EEADRH          equ	2194	;# 
  3230     0892                     PMADRH          equ	2194	;# 
  3231     0893                     NVMDAT          equ	2195	;# 
  3232     0893                     EEDAT           equ	2195	;# 
  3233     0893                     PMDAT           equ	2195	;# 
  3234     0893                     NVMDATL         equ	2195	;# 
  3235     0893                     EEDATL          equ	2195	;# 
  3236     0893                     PMDATL          equ	2195	;# 
  3237     0894                     NVMDATH         equ	2196	;# 
  3238     0894                     EEDATH          equ	2196	;# 
  3239     0894                     PMDATH          equ	2196	;# 
  3240     0895                     NVMCON1         equ	2197	;# 
  3241     0895                     EECON1          equ	2197	;# 
  3242     0895                     PMCON1          equ	2197	;# 
  3243     0896                     NVMCON2         equ	2198	;# 
  3244     0896                     EECON2          equ	2198	;# 
  3245     0896                     PMCON2          equ	2198	;# 
  3246     089B                     PCON0           equ	2203	;# 
  3247     0911                     PMD0            equ	2321	;# 
  3248     0912                     PMD1            equ	2322	;# 
  3249     0913                     PMD2            equ	2323	;# 
  3250     0914                     PMD3            equ	2324	;# 
  3251     0915                     PMD4            equ	2325	;# 
  3252     0916                     PMD5            equ	2326	;# 
  3253     0918                     CPUDOZE         equ	2328	;# 
  3254     0919                     OSCCON1         equ	2329	;# 
  3255     091A                     OSCCON2         equ	2330	;# 
  3256     091B                     OSCCON3         equ	2331	;# 
  3257     091C                     OSCSTAT1        equ	2332	;# 
  3258     091D                     OSCEN           equ	2333	;# 
  3259     091E                     OSCTUNE         equ	2334	;# 
  3260     091F                     OSCFRQ          equ	2335	;# 
  3261     0E0F                     PPSLOCK         equ	3599	;# 
  3262     0E10                     INTPPS          equ	3600	;# 
  3263     0E11                     T0CKIPPS        equ	3601	;# 
  3264     0E12                     T1CKIPPS        equ	3602	;# 
  3265     0E13                     T1GPPS          equ	3603	;# 
  3266     0E14                     CCP1PPS         equ	3604	;# 
  3267     0E15                     CCP2PPS         equ	3605	;# 
  3268     0E16                     CCP3PPS         equ	3606	;# 
  3269     0E17                     CCP4PPS         equ	3607	;# 
  3270     0E18                     CWG1PPS         equ	3608	;# 
  3271     0E19                     CWG2PPS         equ	3609	;# 
  3272     0E1A                     MDCIN1PPS       equ	3610	;# 
  3273     0E1B                     MDCIN2PPS       equ	3611	;# 
  3274     0E1C                     MDMINPPS        equ	3612	;# 
  3275     0E1D                     SSP2CLKPPS      equ	3613	;# 
  3276     0E1E                     SSP2DATPPS      equ	3614	;# 
  3277     0E1F                     SSP2SSPPS       equ	3615	;# 
  3278     0E20                     SSP1CLKPPS      equ	3616	;# 
  3279     0E21                     SSP1DATPPS      equ	3617	;# 
  3280     0E22                     SSP1SSPPS       equ	3618	;# 
  3281     0E24                     RXPPS           equ	3620	;# 
  3282     0E25                     TXPPS           equ	3621	;# 
  3283     0E28                     CLCIN0PPS       equ	3624	;# 
  3284     0E29                     CLCIN1PPS       equ	3625	;# 
  3285     0E2A                     CLCIN2PPS       equ	3626	;# 
  3286     0E2B                     CLCIN3PPS       equ	3627	;# 
  3287     0E2C                     T3CKIPPS        equ	3628	;# 
  3288     0E2D                     T3GPPS          equ	3629	;# 
  3289     0E2E                     T5CKIPPS        equ	3630	;# 
  3290     0E2F                     T5GPPS          equ	3631	;# 
  3291     0E90                     RA0PPS          equ	3728	;# 
  3292     0E91                     RA1PPS          equ	3729	;# 
  3293     0E92                     RA2PPS          equ	3730	;# 
  3294     0E94                     RA4PPS          equ	3732	;# 
  3295     0E95                     RA5PPS          equ	3733	;# 
  3296     0E9C                     RB4PPS          equ	3740	;# 
  3297     0E9D                     RB5PPS          equ	3741	;# 
  3298     0E9E                     RB6PPS          equ	3742	;# 
  3299     0E9F                     RB7PPS          equ	3743	;# 
  3300     0EA0                     RC0PPS          equ	3744	;# 
  3301     0EA1                     RC1PPS          equ	3745	;# 
  3302     0EA2                     RC2PPS          equ	3746	;# 
  3303     0EA3                     RC3PPS          equ	3747	;# 
  3304     0EA4                     RC4PPS          equ	3748	;# 
  3305     0EA5                     RC5PPS          equ	3749	;# 
  3306     0EA6                     RC6PPS          equ	3750	;# 
  3307     0EA7                     RC7PPS          equ	3751	;# 
  3308     0F0F                     CLCDATA         equ	3855	;# 
  3309     0F10                     CLC1CON         equ	3856	;# 
  3310     0F11                     CLC1POL         equ	3857	;# 
  3311     0F12                     CLC1SEL0        equ	3858	;# 
  3312     0F13                     CLC1SEL1        equ	3859	;# 
  3313     0F14                     CLC1SEL2        equ	3860	;# 
  3314     0F15                     CLC1SEL3        equ	3861	;# 
  3315     0F16                     CLC1GLS0        equ	3862	;# 
  3316     0F17                     CLC1GLS1        equ	3863	;# 
  3317     0F18                     CLC1GLS2        equ	3864	;# 
  3318     0F19                     CLC1GLS3        equ	3865	;# 
  3319     0F1A                     CLC2CON         equ	3866	;# 
  3320     0F1B                     CLC2POL         equ	3867	;# 
  3321     0F1C                     CLC2SEL0        equ	3868	;# 
  3322     0F1D                     CLC2SEL1        equ	3869	;# 
  3323     0F1E                     CLC2SEL2        equ	3870	;# 
  3324     0F1F                     CLC2SEL3        equ	3871	;# 
  3325     0F20                     CLC2GLS0        equ	3872	;# 
  3326     0F21                     CLC2GLS1        equ	3873	;# 
  3327     0F22                     CLC2GLS2        equ	3874	;# 
  3328     0F23                     CLC2GLS3        equ	3875	;# 
  3329     0F24                     CLC3CON         equ	3876	;# 
  3330     0F25                     CLC3POL         equ	3877	;# 
  3331     0F26                     CLC3SEL0        equ	3878	;# 
  3332     0F27                     CLC3SEL1        equ	3879	;# 
  3333     0F28                     CLC3SEL2        equ	3880	;# 
  3334     0F29                     CLC3SEL3        equ	3881	;# 
  3335     0F2A                     CLC3GLS0        equ	3882	;# 
  3336     0F2B                     CLC3GLS1        equ	3883	;# 
  3337     0F2C                     CLC3GLS2        equ	3884	;# 
  3338     0F2D                     CLC3GLS3        equ	3885	;# 
  3339     0F2E                     CLC4CON         equ	3886	;# 
  3340     0F2F                     CLC4POL         equ	3887	;# 
  3341     0F30                     CLC4SEL0        equ	3888	;# 
  3342     0F31                     CLC4SEL1        equ	3889	;# 
  3343     0F32                     CLC4SEL2        equ	3890	;# 
  3344     0F33                     CLC4SEL3        equ	3891	;# 
  3345     0F34                     CLC4GLS0        equ	3892	;# 
  3346     0F35                     CLC4GLS1        equ	3893	;# 
  3347     0F36                     CLC4GLS2        equ	3894	;# 
  3348     0F37                     CLC4GLS3        equ	3895	;# 
  3349     0FE4                     STATUS_SHAD     equ	4068	;# 
  3350     0FE5                     WREG_SHAD       equ	4069	;# 
  3351     0FE6                     BSR_SHAD        equ	4070	;# 
  3352     0FE7                     PCLATH_SHAD     equ	4071	;# 
  3353     0FE8                     FSR0L_SHAD      equ	4072	;# 
  3354     0FE9                     FSR0H_SHAD      equ	4073	;# 
  3355     0FEA                     FSR1L_SHAD      equ	4074	;# 
  3356     0FEB                     FSR1H_SHAD      equ	4075	;# 
  3357     0FED                     STKPTR          equ	4077	;# 
  3358     0FEE                     TOSL            equ	4078	;# 
  3359     0FEF                     TOSH            equ	4079	;# 
  3360     0000                     INDF0           equ	0	;# 
  3361     0001                     INDF1           equ	1	;# 
  3362     0002                     PCL             equ	2	;# 
  3363     0003                     STATUS          equ	3	;# 
  3364     0004                     FSR0L           equ	4	;# 
  3365     0005                     FSR0H           equ	5	;# 
  3366     0006                     FSR1L           equ	6	;# 
  3367     0007                     FSR1H           equ	7	;# 
  3368     0008                     BSR             equ	8	;# 
  3369     0009                     WREG            equ	9	;# 
  3370     000A                     PCLATH          equ	10	;# 
  3371     000B                     INTCON          equ	11	;# 
  3372     000C                     PORTA           equ	12	;# 
  3373     000D                     PORTB           equ	13	;# 
  3374     000E                     PORTC           equ	14	;# 
  3375     0010                     PIR0            equ	16	;# 
  3376     0011                     PIR1            equ	17	;# 
  3377     0012                     PIR2            equ	18	;# 
  3378     0013                     PIR3            equ	19	;# 
  3379     0014                     PIR4            equ	20	;# 
  3380     0015                     TMR0L           equ	21	;# 
  3381     0015                     TMR0            equ	21	;# 
  3382     0016                     TMR0H           equ	22	;# 
  3383     0016                     PR0             equ	22	;# 
  3384     0017                     T0CON0          equ	23	;# 
  3385     0018                     T0CON1          equ	24	;# 
  3386     0019                     TMR1            equ	25	;# 
  3387     0019                     TMR1L           equ	25	;# 
  3388     001A                     TMR1H           equ	26	;# 
  3389     001B                     T1CON           equ	27	;# 
  3390     001C                     T1GCON          equ	28	;# 
  3391     001D                     TMR2            equ	29	;# 
  3392     001E                     PR2             equ	30	;# 
  3393     001F                     T2CON           equ	31	;# 
  3394     008C                     TRISA           equ	140	;# 
  3395     008D                     TRISB           equ	141	;# 
  3396     008E                     TRISC           equ	142	;# 
  3397     0090                     PIE0            equ	144	;# 
  3398     0091                     PIE1            equ	145	;# 
  3399     0092                     PIE2            equ	146	;# 
  3400     0093                     PIE3            equ	147	;# 
  3401     0094                     PIE4            equ	148	;# 
  3402     0097                     WDTCON          equ	151	;# 
  3403     009B                     ADRES           equ	155	;# 
  3404     009B                     ADRESL          equ	155	;# 
  3405     009C                     ADRESH          equ	156	;# 
  3406     009D                     ADCON0          equ	157	;# 
  3407     009E                     ADCON1          equ	158	;# 
  3408     009F                     ADACT           equ	159	;# 
  3409     010C                     LATA            equ	268	;# 
  3410     010D                     LATB            equ	269	;# 
  3411     010E                     LATC            equ	270	;# 
  3412     0111                     CM1CON0         equ	273	;# 
  3413     0112                     CM1CON1         equ	274	;# 
  3414     0113                     CM2CON0         equ	275	;# 
  3415     0114                     CM2CON1         equ	276	;# 
  3416     0115                     CMOUT           equ	277	;# 
  3417     0116                     BORCON          equ	278	;# 
  3418     0117                     FVRCON          equ	279	;# 
  3419     0118                     DACCON0         equ	280	;# 
  3420     0119                     DACCON1         equ	281	;# 
  3421     018C                     ANSELA          equ	396	;# 
  3422     018D                     ANSELB          equ	397	;# 
  3423     018E                     ANSELC          equ	398	;# 
  3424     0197                     VREGCON         equ	407	;# 
  3425     0199                     RC1REG          equ	409	;# 
  3426     0199                     RCREG           equ	409	;# 
  3427     0199                     RCREG1          equ	409	;# 
  3428     019A                     TX1REG          equ	410	;# 
  3429     019A                     TXREG1          equ	410	;# 
  3430     019A                     TXREG           equ	410	;# 
  3431     019B                     SP1BRG          equ	411	;# 
  3432     019B                     SPBRG           equ	411	;# 
  3433     019B                     SP1BRGL         equ	411	;# 
  3434     019B                     SPBRG1          equ	411	;# 
  3435     019B                     SPBRGL          equ	411	;# 
  3436     019C                     SP1BRGH         equ	412	;# 
  3437     019C                     SPBRGH          equ	412	;# 
  3438     019C                     SPBRGH1         equ	412	;# 
  3439     019D                     RC1STA          equ	413	;# 
  3440     019D                     RCSTA1          equ	413	;# 
  3441     019D                     RCSTA           equ	413	;# 
  3442     019E                     TX1STA          equ	414	;# 
  3443     019E                     TXSTA1          equ	414	;# 
  3444     019E                     TXSTA           equ	414	;# 
  3445     019F                     BAUD1CON        equ	415	;# 
  3446     019F                     BAUDCON1        equ	415	;# 
  3447     019F                     BAUDCTL1        equ	415	;# 
  3448     019F                     BAUDCON         equ	415	;# 
  3449     019F                     BAUDCTL         equ	415	;# 
  3450     020C                     WPUA            equ	524	;# 
  3451     020D                     WPUB            equ	525	;# 
  3452     020E                     WPUC            equ	526	;# 
  3453     0211                     SSP1BUF         equ	529	;# 
  3454     0211                     SSPBUF          equ	529	;# 
  3455     0212                     SSP1ADD         equ	530	;# 
  3456     0212                     SSPADD          equ	530	;# 
  3457     0213                     SSP1MSK         equ	531	;# 
  3458     0213                     SSPMSK          equ	531	;# 
  3459     0214                     SSP1STAT        equ	532	;# 
  3460     0214                     SSPSTAT         equ	532	;# 
  3461     0215                     SSP1CON1        equ	533	;# 
  3462     0215                     SSPCON          equ	533	;# 
  3463     0215                     SSPCON1         equ	533	;# 
  3464     0215                     SSP1CON         equ	533	;# 
  3465     0216                     SSP1CON2        equ	534	;# 
  3466     0216                     SSPCON2         equ	534	;# 
  3467     0217                     SSP1CON3        equ	535	;# 
  3468     0217                     SSPCON3         equ	535	;# 
  3469     0219                     SSP2BUF         equ	537	;# 
  3470     021A                     SSP2ADD         equ	538	;# 
  3471     021B                     SSP2MSK         equ	539	;# 
  3472     021C                     SSP2STAT        equ	540	;# 
  3473     021D                     SSP2CON1        equ	541	;# 
  3474     021D                     SSP2CON         equ	541	;# 
  3475     021E                     SSP2CON2        equ	542	;# 
  3476     021F                     SSP2CON3        equ	543	;# 
  3477     028C                     ODCONA          equ	652	;# 
  3478     028D                     ODCONB          equ	653	;# 
  3479     028E                     ODCONC          equ	654	;# 
  3480     0291                     CCPR1           equ	657	;# 
  3481     0291                     CCPR1L          equ	657	;# 
  3482     0292                     CCPR1H          equ	658	;# 
  3483     0293                     CCP1CON         equ	659	;# 
  3484     0294                     CCP1CAP         equ	660	;# 
  3485     0295                     CCPR2           equ	661	;# 
  3486     0295                     CCPR2L          equ	661	;# 
  3487     0296                     CCPR2H          equ	662	;# 
  3488     0297                     CCP2CON         equ	663	;# 
  3489     0298                     CCP2CAP         equ	664	;# 
  3490     029F                     CCPTMRS         equ	671	;# 
  3491     030C                     SLRCONA         equ	780	;# 
  3492     030D                     SLRCONB         equ	781	;# 
  3493     030E                     SLRCONC         equ	782	;# 
  3494     0311                     CCPR3           equ	785	;# 
  3495     0311                     CCPR3L          equ	785	;# 
  3496     0312                     CCPR3H          equ	786	;# 
  3497     0313                     CCP3CON         equ	787	;# 
  3498     0314                     CCP3CAP         equ	788	;# 
  3499     0315                     CCPR4           equ	789	;# 
  3500     0315                     CCPR4L          equ	789	;# 
  3501     0316                     CCPR4H          equ	790	;# 
  3502     0317                     CCP4CON         equ	791	;# 
  3503     0318                     CCP4CAP         equ	792	;# 
  3504     038C                     INLVLA          equ	908	;# 
  3505     038D                     INLVLB          equ	909	;# 
  3506     038E                     INLVLC          equ	910	;# 
  3507     0391                     IOCAP           equ	913	;# 
  3508     0392                     IOCAN           equ	914	;# 
  3509     0393                     IOCAF           equ	915	;# 
  3510     0394                     IOCBP           equ	916	;# 
  3511     0395                     IOCBN           equ	917	;# 
  3512     0396                     IOCBF           equ	918	;# 
  3513     0397                     IOCCP           equ	919	;# 
  3514     0398                     IOCCN           equ	920	;# 
  3515     0399                     IOCCF           equ	921	;# 
  3516     039A                     CLKRCON         equ	922	;# 
  3517     039C                     MDCON           equ	924	;# 
  3518     039D                     MDSRC           equ	925	;# 
  3519     039E                     MDCARH          equ	926	;# 
  3520     039F                     MDCARL          equ	927	;# 
  3521     0411                     TMR3            equ	1041	;# 
  3522     0411                     TMR3L           equ	1041	;# 
  3523     0412                     TMR3H           equ	1042	;# 
  3524     0413                     T3CON           equ	1043	;# 
  3525     0414                     T3GCON          equ	1044	;# 
  3526     0415                     TMR4            equ	1045	;# 
  3527     0416                     PR4             equ	1046	;# 
  3528     0417                     T4CON           equ	1047	;# 
  3529     0418                     TMR5            equ	1048	;# 
  3530     0418                     TMR5L           equ	1048	;# 
  3531     0419                     TMR5H           equ	1049	;# 
  3532     041A                     T5CON           equ	1050	;# 
  3533     041B                     T5GCON          equ	1051	;# 
  3534     041C                     TMR6            equ	1052	;# 
  3535     041D                     PR6             equ	1053	;# 
  3536     041E                     T6CON           equ	1054	;# 
  3537     041F                     CCDCON          equ	1055	;# 
  3538     0498                     NCO1ACC         equ	1176	;# 
  3539     0498                     NCO1ACCL        equ	1176	;# 
  3540     0499                     NCO1ACCH        equ	1177	;# 
  3541     049A                     NCO1ACCU        equ	1178	;# 
  3542     049B                     NCO1INC         equ	1179	;# 
  3543     049B                     NCO1INCL        equ	1179	;# 
  3544     049C                     NCO1INCH        equ	1180	;# 
  3545     049D                     NCO1INCU        equ	1181	;# 
  3546     049E                     NCO1CON         equ	1182	;# 
  3547     049F                     NCO1CLK         equ	1183	;# 
  3548     0617                     PWM5DCL         equ	1559	;# 
  3549     0618                     PWM5DCH         equ	1560	;# 
  3550     0619                     PWM5CON         equ	1561	;# 
  3551     0619                     PWM5CON0        equ	1561	;# 
  3552     061A                     PWM6DCL         equ	1562	;# 
  3553     061B                     PWM6DCH         equ	1563	;# 
  3554     061C                     PWM6CON         equ	1564	;# 
  3555     061C                     PWM6CON0        equ	1564	;# 
  3556     061F                     PWMTMRS         equ	1567	;# 
  3557     0691                     CWG1CLKCON      equ	1681	;# 
  3558     0692                     CWG1DAT         equ	1682	;# 
  3559     0693                     CWG1DBR         equ	1683	;# 
  3560     0694                     CWG1DBF         equ	1684	;# 
  3561     0695                     CWG1CON0        equ	1685	;# 
  3562     0696                     CWG1CON1        equ	1686	;# 
  3563     0697                     CWG1AS0         equ	1687	;# 
  3564     0698                     CWG1AS1         equ	1688	;# 
  3565     0699                     CWG1STR         equ	1689	;# 
  3566     0711                     CWG2CLKCON      equ	1809	;# 
  3567     0712                     CWG2DAT         equ	1810	;# 
  3568     0713                     CWG2DBR         equ	1811	;# 
  3569     0714                     CWG2DBF         equ	1812	;# 
  3570     0715                     CWG2CON0        equ	1813	;# 
  3571     0716                     CWG2CON1        equ	1814	;# 
  3572     0717                     CWG2AS0         equ	1815	;# 
  3573     0718                     CWG2AS1         equ	1816	;# 
  3574     0719                     CWG2STR         equ	1817	;# 
  3575     0891                     NVMADR          equ	2193	;# 
  3576     0891                     EEADR           equ	2193	;# 
  3577     0891                     PMADR           equ	2193	;# 
  3578     0891                     NVMADRL         equ	2193	;# 
  3579     0891                     EEADRL          equ	2193	;# 
  3580     0891                     PMADRL          equ	2193	;# 
  3581     0892                     NVMADRH         equ	2194	;# 
  3582     0892                     EEADRH          equ	2194	;# 
  3583     0892                     PMADRH          equ	2194	;# 
  3584     0893                     NVMDAT          equ	2195	;# 
  3585     0893                     EEDAT           equ	2195	;# 
  3586     0893                     PMDAT           equ	2195	;# 
  3587     0893                     NVMDATL         equ	2195	;# 
  3588     0893                     EEDATL          equ	2195	;# 
  3589     0893                     PMDATL          equ	2195	;# 
  3590     0894                     NVMDATH         equ	2196	;# 
  3591     0894                     EEDATH          equ	2196	;# 
  3592     0894                     PMDATH          equ	2196	;# 
  3593     0895                     NVMCON1         equ	2197	;# 
  3594     0895                     EECON1          equ	2197	;# 
  3595     0895                     PMCON1          equ	2197	;# 
  3596     0896                     NVMCON2         equ	2198	;# 
  3597     0896                     EECON2          equ	2198	;# 
  3598     0896                     PMCON2          equ	2198	;# 
  3599     089B                     PCON0           equ	2203	;# 
  3600     0911                     PMD0            equ	2321	;# 
  3601     0912                     PMD1            equ	2322	;# 
  3602     0913                     PMD2            equ	2323	;# 
  3603     0914                     PMD3            equ	2324	;# 
  3604     0915                     PMD4            equ	2325	;# 
  3605     0916                     PMD5            equ	2326	;# 
  3606     0918                     CPUDOZE         equ	2328	;# 
  3607     0919                     OSCCON1         equ	2329	;# 
  3608     091A                     OSCCON2         equ	2330	;# 
  3609     091B                     OSCCON3         equ	2331	;# 
  3610     091C                     OSCSTAT1        equ	2332	;# 
  3611     091D                     OSCEN           equ	2333	;# 
  3612     091E                     OSCTUNE         equ	2334	;# 
  3613     091F                     OSCFRQ          equ	2335	;# 
  3614     0E0F                     PPSLOCK         equ	3599	;# 
  3615     0E10                     INTPPS          equ	3600	;# 
  3616     0E11                     T0CKIPPS        equ	3601	;# 
  3617     0E12                     T1CKIPPS        equ	3602	;# 
  3618     0E13                     T1GPPS          equ	3603	;# 
  3619     0E14                     CCP1PPS         equ	3604	;# 
  3620     0E15                     CCP2PPS         equ	3605	;# 
  3621     0E16                     CCP3PPS         equ	3606	;# 
  3622     0E17                     CCP4PPS         equ	3607	;# 
  3623     0E18                     CWG1PPS         equ	3608	;# 
  3624     0E19                     CWG2PPS         equ	3609	;# 
  3625     0E1A                     MDCIN1PPS       equ	3610	;# 
  3626     0E1B                     MDCIN2PPS       equ	3611	;# 
  3627     0E1C                     MDMINPPS        equ	3612	;# 
  3628     0E1D                     SSP2CLKPPS      equ	3613	;# 
  3629     0E1E                     SSP2DATPPS      equ	3614	;# 
  3630     0E1F                     SSP2SSPPS       equ	3615	;# 
  3631     0E20                     SSP1CLKPPS      equ	3616	;# 
  3632     0E21                     SSP1DATPPS      equ	3617	;# 
  3633     0E22                     SSP1SSPPS       equ	3618	;# 
  3634     0E24                     RXPPS           equ	3620	;# 
  3635     0E25                     TXPPS           equ	3621	;# 
  3636     0E28                     CLCIN0PPS       equ	3624	;# 
  3637     0E29                     CLCIN1PPS       equ	3625	;# 
  3638     0E2A                     CLCIN2PPS       equ	3626	;# 
  3639     0E2B                     CLCIN3PPS       equ	3627	;# 
  3640     0E2C                     T3CKIPPS        equ	3628	;# 
  3641     0E2D                     T3GPPS          equ	3629	;# 
  3642     0E2E                     T5CKIPPS        equ	3630	;# 
  3643     0E2F                     T5GPPS          equ	3631	;# 
  3644     0E90                     RA0PPS          equ	3728	;# 
  3645     0E91                     RA1PPS          equ	3729	;# 
  3646     0E92                     RA2PPS          equ	3730	;# 
  3647     0E94                     RA4PPS          equ	3732	;# 
  3648     0E95                     RA5PPS          equ	3733	;# 
  3649     0E9C                     RB4PPS          equ	3740	;# 
  3650     0E9D                     RB5PPS          equ	3741	;# 
  3651     0E9E                     RB6PPS          equ	3742	;# 
  3652     0E9F                     RB7PPS          equ	3743	;# 
  3653     0EA0                     RC0PPS          equ	3744	;# 
  3654     0EA1                     RC1PPS          equ	3745	;# 
  3655     0EA2                     RC2PPS          equ	3746	;# 
  3656     0EA3                     RC3PPS          equ	3747	;# 
  3657     0EA4                     RC4PPS          equ	3748	;# 
  3658     0EA5                     RC5PPS          equ	3749	;# 
  3659     0EA6                     RC6PPS          equ	3750	;# 
  3660     0EA7                     RC7PPS          equ	3751	;# 
  3661     0F0F                     CLCDATA         equ	3855	;# 
  3662     0F10                     CLC1CON         equ	3856	;# 
  3663     0F11                     CLC1POL         equ	3857	;# 
  3664     0F12                     CLC1SEL0        equ	3858	;# 
  3665     0F13                     CLC1SEL1        equ	3859	;# 
  3666     0F14                     CLC1SEL2        equ	3860	;# 
  3667     0F15                     CLC1SEL3        equ	3861	;# 
  3668     0F16                     CLC1GLS0        equ	3862	;# 
  3669     0F17                     CLC1GLS1        equ	3863	;# 
  3670     0F18                     CLC1GLS2        equ	3864	;# 
  3671     0F19                     CLC1GLS3        equ	3865	;# 
  3672     0F1A                     CLC2CON         equ	3866	;# 
  3673     0F1B                     CLC2POL         equ	3867	;# 
  3674     0F1C                     CLC2SEL0        equ	3868	;# 
  3675     0F1D                     CLC2SEL1        equ	3869	;# 
  3676     0F1E                     CLC2SEL2        equ	3870	;# 
  3677     0F1F                     CLC2SEL3        equ	3871	;# 
  3678     0F20                     CLC2GLS0        equ	3872	;# 
  3679     0F21                     CLC2GLS1        equ	3873	;# 
  3680     0F22                     CLC2GLS2        equ	3874	;# 
  3681     0F23                     CLC2GLS3        equ	3875	;# 
  3682     0F24                     CLC3CON         equ	3876	;# 
  3683     0F25                     CLC3POL         equ	3877	;# 
  3684     0F26                     CLC3SEL0        equ	3878	;# 
  3685     0F27                     CLC3SEL1        equ	3879	;# 
  3686     0F28                     CLC3SEL2        equ	3880	;# 
  3687     0F29                     CLC3SEL3        equ	3881	;# 
  3688     0F2A                     CLC3GLS0        equ	3882	;# 
  3689     0F2B                     CLC3GLS1        equ	3883	;# 
  3690     0F2C                     CLC3GLS2        equ	3884	;# 
  3691     0F2D                     CLC3GLS3        equ	3885	;# 
  3692     0F2E                     CLC4CON         equ	3886	;# 
  3693     0F2F                     CLC4POL         equ	3887	;# 
  3694     0F30                     CLC4SEL0        equ	3888	;# 
  3695     0F31                     CLC4SEL1        equ	3889	;# 
  3696     0F32                     CLC4SEL2        equ	3890	;# 
  3697     0F33                     CLC4SEL3        equ	3891	;# 
  3698     0F34                     CLC4GLS0        equ	3892	;# 
  3699     0F35                     CLC4GLS1        equ	3893	;# 
  3700     0F36                     CLC4GLS2        equ	3894	;# 
  3701     0F37                     CLC4GLS3        equ	3895	;# 
  3702     0FE4                     STATUS_SHAD     equ	4068	;# 
  3703     0FE5                     WREG_SHAD       equ	4069	;# 
  3704     0FE6                     BSR_SHAD        equ	4070	;# 
  3705     0FE7                     PCLATH_SHAD     equ	4071	;# 
  3706     0FE8                     FSR0L_SHAD      equ	4072	;# 
  3707     0FE9                     FSR0H_SHAD      equ	4073	;# 
  3708     0FEA                     FSR1L_SHAD      equ	4074	;# 
  3709     0FEB                     FSR1H_SHAD      equ	4075	;# 
  3710     0FED                     STKPTR          equ	4077	;# 
  3711     0FEE                     TOSL            equ	4078	;# 
  3712     0FEF                     TOSH            equ	4079	;# 
  3713     0000                     INDF0           equ	0	;# 
  3714     0001                     INDF1           equ	1	;# 
  3715     0002                     PCL             equ	2	;# 
  3716     0003                     STATUS          equ	3	;# 
  3717     0004                     FSR0L           equ	4	;# 
  3718     0005                     FSR0H           equ	5	;# 
  3719     0006                     FSR1L           equ	6	;# 
  3720     0007                     FSR1H           equ	7	;# 
  3721     0008                     BSR             equ	8	;# 
  3722     0009                     WREG            equ	9	;# 
  3723     000A                     PCLATH          equ	10	;# 
  3724     000B                     INTCON          equ	11	;# 
  3725     000C                     PORTA           equ	12	;# 
  3726     000D                     PORTB           equ	13	;# 
  3727     000E                     PORTC           equ	14	;# 
  3728     0010                     PIR0            equ	16	;# 
  3729     0011                     PIR1            equ	17	;# 
  3730     0012                     PIR2            equ	18	;# 
  3731     0013                     PIR3            equ	19	;# 
  3732     0014                     PIR4            equ	20	;# 
  3733     0015                     TMR0L           equ	21	;# 
  3734     0015                     TMR0            equ	21	;# 
  3735     0016                     TMR0H           equ	22	;# 
  3736     0016                     PR0             equ	22	;# 
  3737     0017                     T0CON0          equ	23	;# 
  3738     0018                     T0CON1          equ	24	;# 
  3739     0019                     TMR1            equ	25	;# 
  3740     0019                     TMR1L           equ	25	;# 
  3741     001A                     TMR1H           equ	26	;# 
  3742     001B                     T1CON           equ	27	;# 
  3743     001C                     T1GCON          equ	28	;# 
  3744     001D                     TMR2            equ	29	;# 
  3745     001E                     PR2             equ	30	;# 
  3746     001F                     T2CON           equ	31	;# 
  3747     008C                     TRISA           equ	140	;# 
  3748     008D                     TRISB           equ	141	;# 
  3749     008E                     TRISC           equ	142	;# 
  3750     0090                     PIE0            equ	144	;# 
  3751     0091                     PIE1            equ	145	;# 
  3752     0092                     PIE2            equ	146	;# 
  3753     0093                     PIE3            equ	147	;# 
  3754     0094                     PIE4            equ	148	;# 
  3755     0097                     WDTCON          equ	151	;# 
  3756     009B                     ADRES           equ	155	;# 
  3757     009B                     ADRESL          equ	155	;# 
  3758     009C                     ADRESH          equ	156	;# 
  3759     009D                     ADCON0          equ	157	;# 
  3760     009E                     ADCON1          equ	158	;# 
  3761     009F                     ADACT           equ	159	;# 
  3762     010C                     LATA            equ	268	;# 
  3763     010D                     LATB            equ	269	;# 
  3764     010E                     LATC            equ	270	;# 
  3765     0111                     CM1CON0         equ	273	;# 
  3766     0112                     CM1CON1         equ	274	;# 
  3767     0113                     CM2CON0         equ	275	;# 
  3768     0114                     CM2CON1         equ	276	;# 
  3769     0115                     CMOUT           equ	277	;# 
  3770     0116                     BORCON          equ	278	;# 
  3771     0117                     FVRCON          equ	279	;# 
  3772     0118                     DACCON0         equ	280	;# 
  3773     0119                     DACCON1         equ	281	;# 
  3774     018C                     ANSELA          equ	396	;# 
  3775     018D                     ANSELB          equ	397	;# 
  3776     018E                     ANSELC          equ	398	;# 
  3777     0197                     VREGCON         equ	407	;# 
  3778     0199                     RC1REG          equ	409	;# 
  3779     0199                     RCREG           equ	409	;# 
  3780     0199                     RCREG1          equ	409	;# 
  3781     019A                     TX1REG          equ	410	;# 
  3782     019A                     TXREG1          equ	410	;# 
  3783     019A                     TXREG           equ	410	;# 
  3784     019B                     SP1BRG          equ	411	;# 
  3785     019B                     SPBRG           equ	411	;# 
  3786     019B                     SP1BRGL         equ	411	;# 
  3787     019B                     SPBRG1          equ	411	;# 
  3788     019B                     SPBRGL          equ	411	;# 
  3789     019C                     SP1BRGH         equ	412	;# 
  3790     019C                     SPBRGH          equ	412	;# 
  3791     019C                     SPBRGH1         equ	412	;# 
  3792     019D                     RC1STA          equ	413	;# 
  3793     019D                     RCSTA1          equ	413	;# 
  3794     019D                     RCSTA           equ	413	;# 
  3795     019E                     TX1STA          equ	414	;# 
  3796     019E                     TXSTA1          equ	414	;# 
  3797     019E                     TXSTA           equ	414	;# 
  3798     019F                     BAUD1CON        equ	415	;# 
  3799     019F                     BAUDCON1        equ	415	;# 
  3800     019F                     BAUDCTL1        equ	415	;# 
  3801     019F                     BAUDCON         equ	415	;# 
  3802     019F                     BAUDCTL         equ	415	;# 
  3803     020C                     WPUA            equ	524	;# 
  3804     020D                     WPUB            equ	525	;# 
  3805     020E                     WPUC            equ	526	;# 
  3806     0211                     SSP1BUF         equ	529	;# 
  3807     0211                     SSPBUF          equ	529	;# 
  3808     0212                     SSP1ADD         equ	530	;# 
  3809     0212                     SSPADD          equ	530	;# 
  3810     0213                     SSP1MSK         equ	531	;# 
  3811     0213                     SSPMSK          equ	531	;# 
  3812     0214                     SSP1STAT        equ	532	;# 
  3813     0214                     SSPSTAT         equ	532	;# 
  3814     0215                     SSP1CON1        equ	533	;# 
  3815     0215                     SSPCON          equ	533	;# 
  3816     0215                     SSPCON1         equ	533	;# 
  3817     0215                     SSP1CON         equ	533	;# 
  3818     0216                     SSP1CON2        equ	534	;# 
  3819     0216                     SSPCON2         equ	534	;# 
  3820     0217                     SSP1CON3        equ	535	;# 
  3821     0217                     SSPCON3         equ	535	;# 
  3822     0219                     SSP2BUF         equ	537	;# 
  3823     021A                     SSP2ADD         equ	538	;# 
  3824     021B                     SSP2MSK         equ	539	;# 
  3825     021C                     SSP2STAT        equ	540	;# 
  3826     021D                     SSP2CON1        equ	541	;# 
  3827     021D                     SSP2CON         equ	541	;# 
  3828     021E                     SSP2CON2        equ	542	;# 
  3829     021F                     SSP2CON3        equ	543	;# 
  3830     028C                     ODCONA          equ	652	;# 
  3831     028D                     ODCONB          equ	653	;# 
  3832     028E                     ODCONC          equ	654	;# 
  3833     0291                     CCPR1           equ	657	;# 
  3834     0291                     CCPR1L          equ	657	;# 
  3835     0292                     CCPR1H          equ	658	;# 
  3836     0293                     CCP1CON         equ	659	;# 
  3837     0294                     CCP1CAP         equ	660	;# 
  3838     0295                     CCPR2           equ	661	;# 
  3839     0295                     CCPR2L          equ	661	;# 
  3840     0296                     CCPR2H          equ	662	;# 
  3841     0297                     CCP2CON         equ	663	;# 
  3842     0298                     CCP2CAP         equ	664	;# 
  3843     029F                     CCPTMRS         equ	671	;# 
  3844     030C                     SLRCONA         equ	780	;# 
  3845     030D                     SLRCONB         equ	781	;# 
  3846     030E                     SLRCONC         equ	782	;# 
  3847     0311                     CCPR3           equ	785	;# 
  3848     0311                     CCPR3L          equ	785	;# 
  3849     0312                     CCPR3H          equ	786	;# 
  3850     0313                     CCP3CON         equ	787	;# 
  3851     0314                     CCP3CAP         equ	788	;# 
  3852     0315                     CCPR4           equ	789	;# 
  3853     0315                     CCPR4L          equ	789	;# 
  3854     0316                     CCPR4H          equ	790	;# 
  3855     0317                     CCP4CON         equ	791	;# 
  3856     0318                     CCP4CAP         equ	792	;# 
  3857     038C                     INLVLA          equ	908	;# 
  3858     038D                     INLVLB          equ	909	;# 
  3859     038E                     INLVLC          equ	910	;# 
  3860     0391                     IOCAP           equ	913	;# 
  3861     0392                     IOCAN           equ	914	;# 
  3862     0393                     IOCAF           equ	915	;# 
  3863     0394                     IOCBP           equ	916	;# 
  3864     0395                     IOCBN           equ	917	;# 
  3865     0396                     IOCBF           equ	918	;# 
  3866     0397                     IOCCP           equ	919	;# 
  3867     0398                     IOCCN           equ	920	;# 
  3868     0399                     IOCCF           equ	921	;# 
  3869     039A                     CLKRCON         equ	922	;# 
  3870     039C                     MDCON           equ	924	;# 
  3871     039D                     MDSRC           equ	925	;# 
  3872     039E                     MDCARH          equ	926	;# 
  3873     039F                     MDCARL          equ	927	;# 
  3874     0411                     TMR3            equ	1041	;# 
  3875     0411                     TMR3L           equ	1041	;# 
  3876     0412                     TMR3H           equ	1042	;# 
  3877     0413                     T3CON           equ	1043	;# 
  3878     0414                     T3GCON          equ	1044	;# 
  3879     0415                     TMR4            equ	1045	;# 
  3880     0416                     PR4             equ	1046	;# 
  3881     0417                     T4CON           equ	1047	;# 
  3882     0418                     TMR5            equ	1048	;# 
  3883     0418                     TMR5L           equ	1048	;# 
  3884     0419                     TMR5H           equ	1049	;# 
  3885     041A                     T5CON           equ	1050	;# 
  3886     041B                     T5GCON          equ	1051	;# 
  3887     041C                     TMR6            equ	1052	;# 
  3888     041D                     PR6             equ	1053	;# 
  3889     041E                     T6CON           equ	1054	;# 
  3890     041F                     CCDCON          equ	1055	;# 
  3891     0498                     NCO1ACC         equ	1176	;# 
  3892     0498                     NCO1ACCL        equ	1176	;# 
  3893     0499                     NCO1ACCH        equ	1177	;# 
  3894     049A                     NCO1ACCU        equ	1178	;# 
  3895     049B                     NCO1INC         equ	1179	;# 
  3896     049B                     NCO1INCL        equ	1179	;# 
  3897     049C                     NCO1INCH        equ	1180	;# 
  3898     049D                     NCO1INCU        equ	1181	;# 
  3899     049E                     NCO1CON         equ	1182	;# 
  3900     049F                     NCO1CLK         equ	1183	;# 
  3901     0617                     PWM5DCL         equ	1559	;# 
  3902     0618                     PWM5DCH         equ	1560	;# 
  3903     0619                     PWM5CON         equ	1561	;# 
  3904     0619                     PWM5CON0        equ	1561	;# 
  3905     061A                     PWM6DCL         equ	1562	;# 
  3906     061B                     PWM6DCH         equ	1563	;# 
  3907     061C                     PWM6CON         equ	1564	;# 
  3908     061C                     PWM6CON0        equ	1564	;# 
  3909     061F                     PWMTMRS         equ	1567	;# 
  3910     0691                     CWG1CLKCON      equ	1681	;# 
  3911     0692                     CWG1DAT         equ	1682	;# 
  3912     0693                     CWG1DBR         equ	1683	;# 
  3913     0694                     CWG1DBF         equ	1684	;# 
  3914     0695                     CWG1CON0        equ	1685	;# 
  3915     0696                     CWG1CON1        equ	1686	;# 
  3916     0697                     CWG1AS0         equ	1687	;# 
  3917     0698                     CWG1AS1         equ	1688	;# 
  3918     0699                     CWG1STR         equ	1689	;# 
  3919     0711                     CWG2CLKCON      equ	1809	;# 
  3920     0712                     CWG2DAT         equ	1810	;# 
  3921     0713                     CWG2DBR         equ	1811	;# 
  3922     0714                     CWG2DBF         equ	1812	;# 
  3923     0715                     CWG2CON0        equ	1813	;# 
  3924     0716                     CWG2CON1        equ	1814	;# 
  3925     0717                     CWG2AS0         equ	1815	;# 
  3926     0718                     CWG2AS1         equ	1816	;# 
  3927     0719                     CWG2STR         equ	1817	;# 
  3928     0891                     NVMADR          equ	2193	;# 
  3929     0891                     EEADR           equ	2193	;# 
  3930     0891                     PMADR           equ	2193	;# 
  3931     0891                     NVMADRL         equ	2193	;# 
  3932     0891                     EEADRL          equ	2193	;# 
  3933     0891                     PMADRL          equ	2193	;# 
  3934     0892                     NVMADRH         equ	2194	;# 
  3935     0892                     EEADRH          equ	2194	;# 
  3936     0892                     PMADRH          equ	2194	;# 
  3937     0893                     NVMDAT          equ	2195	;# 
  3938     0893                     EEDAT           equ	2195	;# 
  3939     0893                     PMDAT           equ	2195	;# 
  3940     0893                     NVMDATL         equ	2195	;# 
  3941     0893                     EEDATL          equ	2195	;# 
  3942     0893                     PMDATL          equ	2195	;# 
  3943     0894                     NVMDATH         equ	2196	;# 
  3944     0894                     EEDATH          equ	2196	;# 
  3945     0894                     PMDATH          equ	2196	;# 
  3946     0895                     NVMCON1         equ	2197	;# 
  3947     0895                     EECON1          equ	2197	;# 
  3948     0895                     PMCON1          equ	2197	;# 
  3949     0896                     NVMCON2         equ	2198	;# 
  3950     0896                     EECON2          equ	2198	;# 
  3951     0896                     PMCON2          equ	2198	;# 
  3952     089B                     PCON0           equ	2203	;# 
  3953     0911                     PMD0            equ	2321	;# 
  3954     0912                     PMD1            equ	2322	;# 
  3955     0913                     PMD2            equ	2323	;# 
  3956     0914                     PMD3            equ	2324	;# 
  3957     0915                     PMD4            equ	2325	;# 
  3958     0916                     PMD5            equ	2326	;# 
  3959     0918                     CPUDOZE         equ	2328	;# 
  3960     0919                     OSCCON1         equ	2329	;# 
  3961     091A                     OSCCON2         equ	2330	;# 
  3962     091B                     OSCCON3         equ	2331	;# 
  3963     091C                     OSCSTAT1        equ	2332	;# 
  3964     091D                     OSCEN           equ	2333	;# 
  3965     091E                     OSCTUNE         equ	2334	;# 
  3966     091F                     OSCFRQ          equ	2335	;# 
  3967     0E0F                     PPSLOCK         equ	3599	;# 
  3968     0E10                     INTPPS          equ	3600	;# 
  3969     0E11                     T0CKIPPS        equ	3601	;# 
  3970     0E12                     T1CKIPPS        equ	3602	;# 
  3971     0E13                     T1GPPS          equ	3603	;# 
  3972     0E14                     CCP1PPS         equ	3604	;# 
  3973     0E15                     CCP2PPS         equ	3605	;# 
  3974     0E16                     CCP3PPS         equ	3606	;# 
  3975     0E17                     CCP4PPS         equ	3607	;# 
  3976     0E18                     CWG1PPS         equ	3608	;# 
  3977     0E19                     CWG2PPS         equ	3609	;# 
  3978     0E1A                     MDCIN1PPS       equ	3610	;# 
  3979     0E1B                     MDCIN2PPS       equ	3611	;# 
  3980     0E1C                     MDMINPPS        equ	3612	;# 
  3981     0E1D                     SSP2CLKPPS      equ	3613	;# 
  3982     0E1E                     SSP2DATPPS      equ	3614	;# 
  3983     0E1F                     SSP2SSPPS       equ	3615	;# 
  3984     0E20                     SSP1CLKPPS      equ	3616	;# 
  3985     0E21                     SSP1DATPPS      equ	3617	;# 
  3986     0E22                     SSP1SSPPS       equ	3618	;# 
  3987     0E24                     RXPPS           equ	3620	;# 
  3988     0E25                     TXPPS           equ	3621	;# 
  3989     0E28                     CLCIN0PPS       equ	3624	;# 
  3990     0E29                     CLCIN1PPS       equ	3625	;# 
  3991     0E2A                     CLCIN2PPS       equ	3626	;# 
  3992     0E2B                     CLCIN3PPS       equ	3627	;# 
  3993     0E2C                     T3CKIPPS        equ	3628	;# 
  3994     0E2D                     T3GPPS          equ	3629	;# 
  3995     0E2E                     T5CKIPPS        equ	3630	;# 
  3996     0E2F                     T5GPPS          equ	3631	;# 
  3997     0E90                     RA0PPS          equ	3728	;# 
  3998     0E91                     RA1PPS          equ	3729	;# 
  3999     0E92                     RA2PPS          equ	3730	;# 
  4000     0E94                     RA4PPS          equ	3732	;# 
  4001     0E95                     RA5PPS          equ	3733	;# 
  4002     0E9C                     RB4PPS          equ	3740	;# 
  4003     0E9D                     RB5PPS          equ	3741	;# 
  4004     0E9E                     RB6PPS          equ	3742	;# 
  4005     0E9F                     RB7PPS          equ	3743	;# 
  4006     0EA0                     RC0PPS          equ	3744	;# 
  4007     0EA1                     RC1PPS          equ	3745	;# 
  4008     0EA2                     RC2PPS          equ	3746	;# 
  4009     0EA3                     RC3PPS          equ	3747	;# 
  4010     0EA4                     RC4PPS          equ	3748	;# 
  4011     0EA5                     RC5PPS          equ	3749	;# 
  4012     0EA6                     RC6PPS          equ	3750	;# 
  4013     0EA7                     RC7PPS          equ	3751	;# 
  4014     0F0F                     CLCDATA         equ	3855	;# 
  4015     0F10                     CLC1CON         equ	3856	;# 
  4016     0F11                     CLC1POL         equ	3857	;# 
  4017     0F12                     CLC1SEL0        equ	3858	;# 
  4018     0F13                     CLC1SEL1        equ	3859	;# 
  4019     0F14                     CLC1SEL2        equ	3860	;# 
  4020     0F15                     CLC1SEL3        equ	3861	;# 
  4021     0F16                     CLC1GLS0        equ	3862	;# 
  4022     0F17                     CLC1GLS1        equ	3863	;# 
  4023     0F18                     CLC1GLS2        equ	3864	;# 
  4024     0F19                     CLC1GLS3        equ	3865	;# 
  4025     0F1A                     CLC2CON         equ	3866	;# 
  4026     0F1B                     CLC2POL         equ	3867	;# 
  4027     0F1C                     CLC2SEL0        equ	3868	;# 
  4028     0F1D                     CLC2SEL1        equ	3869	;# 
  4029     0F1E                     CLC2SEL2        equ	3870	;# 
  4030     0F1F                     CLC2SEL3        equ	3871	;# 
  4031     0F20                     CLC2GLS0        equ	3872	;# 
  4032     0F21                     CLC2GLS1        equ	3873	;# 
  4033     0F22                     CLC2GLS2        equ	3874	;# 
  4034     0F23                     CLC2GLS3        equ	3875	;# 
  4035     0F24                     CLC3CON         equ	3876	;# 
  4036     0F25                     CLC3POL         equ	3877	;# 
  4037     0F26                     CLC3SEL0        equ	3878	;# 
  4038     0F27                     CLC3SEL1        equ	3879	;# 
  4039     0F28                     CLC3SEL2        equ	3880	;# 
  4040     0F29                     CLC3SEL3        equ	3881	;# 
  4041     0F2A                     CLC3GLS0        equ	3882	;# 
  4042     0F2B                     CLC3GLS1        equ	3883	;# 
  4043     0F2C                     CLC3GLS2        equ	3884	;# 
  4044     0F2D                     CLC3GLS3        equ	3885	;# 
  4045     0F2E                     CLC4CON         equ	3886	;# 
  4046     0F2F                     CLC4POL         equ	3887	;# 
  4047     0F30                     CLC4SEL0        equ	3888	;# 
  4048     0F31                     CLC4SEL1        equ	3889	;# 
  4049     0F32                     CLC4SEL2        equ	3890	;# 
  4050     0F33                     CLC4SEL3        equ	3891	;# 
  4051     0F34                     CLC4GLS0        equ	3892	;# 
  4052     0F35                     CLC4GLS1        equ	3893	;# 
  4053     0F36                     CLC4GLS2        equ	3894	;# 
  4054     0F37                     CLC4GLS3        equ	3895	;# 
  4055     0FE4                     STATUS_SHAD     equ	4068	;# 
  4056     0FE5                     WREG_SHAD       equ	4069	;# 
  4057     0FE6                     BSR_SHAD        equ	4070	;# 
  4058     0FE7                     PCLATH_SHAD     equ	4071	;# 
  4059     0FE8                     FSR0L_SHAD      equ	4072	;# 
  4060     0FE9                     FSR0H_SHAD      equ	4073	;# 
  4061     0FEA                     FSR1L_SHAD      equ	4074	;# 
  4062     0FEB                     FSR1H_SHAD      equ	4075	;# 
  4063     0FED                     STKPTR          equ	4077	;# 
  4064     0FEE                     TOSL            equ	4078	;# 
  4065     0FEF                     TOSH            equ	4079	;# 
  4066     0000                     INDF0           equ	0	;# 
  4067     0001                     INDF1           equ	1	;# 
  4068     0002                     PCL             equ	2	;# 
  4069     0003                     STATUS          equ	3	;# 
  4070     0004                     FSR0L           equ	4	;# 
  4071     0005                     FSR0H           equ	5	;# 
  4072     0006                     FSR1L           equ	6	;# 
  4073     0007                     FSR1H           equ	7	;# 
  4074     0008                     BSR             equ	8	;# 
  4075     0009                     WREG            equ	9	;# 
  4076     000A                     PCLATH          equ	10	;# 
  4077     000B                     INTCON          equ	11	;# 
  4078     000C                     PORTA           equ	12	;# 
  4079     000D                     PORTB           equ	13	;# 
  4080     000E                     PORTC           equ	14	;# 
  4081     0010                     PIR0            equ	16	;# 
  4082     0011                     PIR1            equ	17	;# 
  4083     0012                     PIR2            equ	18	;# 
  4084     0013                     PIR3            equ	19	;# 
  4085     0014                     PIR4            equ	20	;# 
  4086     0015                     TMR0L           equ	21	;# 
  4087     0015                     TMR0            equ	21	;# 
  4088     0016                     TMR0H           equ	22	;# 
  4089     0016                     PR0             equ	22	;# 
  4090     0017                     T0CON0          equ	23	;# 
  4091     0018                     T0CON1          equ	24	;# 
  4092     0019                     TMR1            equ	25	;# 
  4093     0019                     TMR1L           equ	25	;# 
  4094     001A                     TMR1H           equ	26	;# 
  4095     001B                     T1CON           equ	27	;# 
  4096     001C                     T1GCON          equ	28	;# 
  4097     001D                     TMR2            equ	29	;# 
  4098     001E                     PR2             equ	30	;# 
  4099     001F                     T2CON           equ	31	;# 
  4100     008C                     TRISA           equ	140	;# 
  4101     008D                     TRISB           equ	141	;# 
  4102     008E                     TRISC           equ	142	;# 
  4103     0090                     PIE0            equ	144	;# 
  4104     0091                     PIE1            equ	145	;# 
  4105     0092                     PIE2            equ	146	;# 
  4106     0093                     PIE3            equ	147	;# 
  4107     0094                     PIE4            equ	148	;# 
  4108     0097                     WDTCON          equ	151	;# 
  4109     009B                     ADRES           equ	155	;# 
  4110     009B                     ADRESL          equ	155	;# 
  4111     009C                     ADRESH          equ	156	;# 
  4112     009D                     ADCON0          equ	157	;# 
  4113     009E                     ADCON1          equ	158	;# 
  4114     009F                     ADACT           equ	159	;# 
  4115     010C                     LATA            equ	268	;# 
  4116     010D                     LATB            equ	269	;# 
  4117     010E                     LATC            equ	270	;# 
  4118     0111                     CM1CON0         equ	273	;# 
  4119     0112                     CM1CON1         equ	274	;# 
  4120     0113                     CM2CON0         equ	275	;# 
  4121     0114                     CM2CON1         equ	276	;# 
  4122     0115                     CMOUT           equ	277	;# 
  4123     0116                     BORCON          equ	278	;# 
  4124     0117                     FVRCON          equ	279	;# 
  4125     0118                     DACCON0         equ	280	;# 
  4126     0119                     DACCON1         equ	281	;# 
  4127     018C                     ANSELA          equ	396	;# 
  4128     018D                     ANSELB          equ	397	;# 
  4129     018E                     ANSELC          equ	398	;# 
  4130     0197                     VREGCON         equ	407	;# 
  4131     0199                     RC1REG          equ	409	;# 
  4132     0199                     RCREG           equ	409	;# 
  4133     0199                     RCREG1          equ	409	;# 
  4134     019A                     TX1REG          equ	410	;# 
  4135     019A                     TXREG1          equ	410	;# 
  4136     019A                     TXREG           equ	410	;# 
  4137     019B                     SP1BRG          equ	411	;# 
  4138     019B                     SPBRG           equ	411	;# 
  4139     019B                     SP1BRGL         equ	411	;# 
  4140     019B                     SPBRG1          equ	411	;# 
  4141     019B                     SPBRGL          equ	411	;# 
  4142     019C                     SP1BRGH         equ	412	;# 
  4143     019C                     SPBRGH          equ	412	;# 
  4144     019C                     SPBRGH1         equ	412	;# 
  4145     019D                     RC1STA          equ	413	;# 
  4146     019D                     RCSTA1          equ	413	;# 
  4147     019D                     RCSTA           equ	413	;# 
  4148     019E                     TX1STA          equ	414	;# 
  4149     019E                     TXSTA1          equ	414	;# 
  4150     019E                     TXSTA           equ	414	;# 
  4151     019F                     BAUD1CON        equ	415	;# 
  4152     019F                     BAUDCON1        equ	415	;# 
  4153     019F                     BAUDCTL1        equ	415	;# 
  4154     019F                     BAUDCON         equ	415	;# 
  4155     019F                     BAUDCTL         equ	415	;# 
  4156     020C                     WPUA            equ	524	;# 
  4157     020D                     WPUB            equ	525	;# 
  4158     020E                     WPUC            equ	526	;# 
  4159     0211                     SSP1BUF         equ	529	;# 
  4160     0211                     SSPBUF          equ	529	;# 
  4161     0212                     SSP1ADD         equ	530	;# 
  4162     0212                     SSPADD          equ	530	;# 
  4163     0213                     SSP1MSK         equ	531	;# 
  4164     0213                     SSPMSK          equ	531	;# 
  4165     0214                     SSP1STAT        equ	532	;# 
  4166     0214                     SSPSTAT         equ	532	;# 
  4167     0215                     SSP1CON1        equ	533	;# 
  4168     0215                     SSPCON          equ	533	;# 
  4169     0215                     SSPCON1         equ	533	;# 
  4170     0215                     SSP1CON         equ	533	;# 
  4171     0216                     SSP1CON2        equ	534	;# 
  4172     0216                     SSPCON2         equ	534	;# 
  4173     0217                     SSP1CON3        equ	535	;# 
  4174     0217                     SSPCON3         equ	535	;# 
  4175     0219                     SSP2BUF         equ	537	;# 
  4176     021A                     SSP2ADD         equ	538	;# 
  4177     021B                     SSP2MSK         equ	539	;# 
  4178     021C                     SSP2STAT        equ	540	;# 
  4179     021D                     SSP2CON1        equ	541	;# 
  4180     021D                     SSP2CON         equ	541	;# 
  4181     021E                     SSP2CON2        equ	542	;# 
  4182     021F                     SSP2CON3        equ	543	;# 
  4183     028C                     ODCONA          equ	652	;# 
  4184     028D                     ODCONB          equ	653	;# 
  4185     028E                     ODCONC          equ	654	;# 
  4186     0291                     CCPR1           equ	657	;# 
  4187     0291                     CCPR1L          equ	657	;# 
  4188     0292                     CCPR1H          equ	658	;# 
  4189     0293                     CCP1CON         equ	659	;# 
  4190     0294                     CCP1CAP         equ	660	;# 
  4191     0295                     CCPR2           equ	661	;# 
  4192     0295                     CCPR2L          equ	661	;# 
  4193     0296                     CCPR2H          equ	662	;# 
  4194     0297                     CCP2CON         equ	663	;# 
  4195     0298                     CCP2CAP         equ	664	;# 
  4196     029F                     CCPTMRS         equ	671	;# 
  4197     030C                     SLRCONA         equ	780	;# 
  4198     030D                     SLRCONB         equ	781	;# 
  4199     030E                     SLRCONC         equ	782	;# 
  4200     0311                     CCPR3           equ	785	;# 
  4201     0311                     CCPR3L          equ	785	;# 
  4202     0312                     CCPR3H          equ	786	;# 
  4203     0313                     CCP3CON         equ	787	;# 
  4204     0314                     CCP3CAP         equ	788	;# 
  4205     0315                     CCPR4           equ	789	;# 
  4206     0315                     CCPR4L          equ	789	;# 
  4207     0316                     CCPR4H          equ	790	;# 
  4208     0317                     CCP4CON         equ	791	;# 
  4209     0318                     CCP4CAP         equ	792	;# 
  4210     038C                     INLVLA          equ	908	;# 
  4211     038D                     INLVLB          equ	909	;# 
  4212     038E                     INLVLC          equ	910	;# 
  4213     0391                     IOCAP           equ	913	;# 
  4214     0392                     IOCAN           equ	914	;# 
  4215     0393                     IOCAF           equ	915	;# 
  4216     0394                     IOCBP           equ	916	;# 
  4217     0395                     IOCBN           equ	917	;# 
  4218     0396                     IOCBF           equ	918	;# 
  4219     0397                     IOCCP           equ	919	;# 
  4220     0398                     IOCCN           equ	920	;# 
  4221     0399                     IOCCF           equ	921	;# 
  4222     039A                     CLKRCON         equ	922	;# 
  4223     039C                     MDCON           equ	924	;# 
  4224     039D                     MDSRC           equ	925	;# 
  4225     039E                     MDCARH          equ	926	;# 
  4226     039F                     MDCARL          equ	927	;# 
  4227     0411                     TMR3            equ	1041	;# 
  4228     0411                     TMR3L           equ	1041	;# 
  4229     0412                     TMR3H           equ	1042	;# 
  4230     0413                     T3CON           equ	1043	;# 
  4231     0414                     T3GCON          equ	1044	;# 
  4232     0415                     TMR4            equ	1045	;# 
  4233     0416                     PR4             equ	1046	;# 
  4234     0417                     T4CON           equ	1047	;# 
  4235     0418                     TMR5            equ	1048	;# 
  4236     0418                     TMR5L           equ	1048	;# 
  4237     0419                     TMR5H           equ	1049	;# 
  4238     041A                     T5CON           equ	1050	;# 
  4239     041B                     T5GCON          equ	1051	;# 
  4240     041C                     TMR6            equ	1052	;# 
  4241     041D                     PR6             equ	1053	;# 
  4242     041E                     T6CON           equ	1054	;# 
  4243     041F                     CCDCON          equ	1055	;# 
  4244     0498                     NCO1ACC         equ	1176	;# 
  4245     0498                     NCO1ACCL        equ	1176	;# 
  4246     0499                     NCO1ACCH        equ	1177	;# 
  4247     049A                     NCO1ACCU        equ	1178	;# 
  4248     049B                     NCO1INC         equ	1179	;# 
  4249     049B                     NCO1INCL        equ	1179	;# 
  4250     049C                     NCO1INCH        equ	1180	;# 
  4251     049D                     NCO1INCU        equ	1181	;# 
  4252     049E                     NCO1CON         equ	1182	;# 
  4253     049F                     NCO1CLK         equ	1183	;# 
  4254     0617                     PWM5DCL         equ	1559	;# 
  4255     0618                     PWM5DCH         equ	1560	;# 
  4256     0619                     PWM5CON         equ	1561	;# 
  4257     0619                     PWM5CON0        equ	1561	;# 
  4258     061A                     PWM6DCL         equ	1562	;# 
  4259     061B                     PWM6DCH         equ	1563	;# 
  4260     061C                     PWM6CON         equ	1564	;# 
  4261     061C                     PWM6CON0        equ	1564	;# 
  4262     061F                     PWMTMRS         equ	1567	;# 
  4263     0691                     CWG1CLKCON      equ	1681	;# 
  4264     0692                     CWG1DAT         equ	1682	;# 
  4265     0693                     CWG1DBR         equ	1683	;# 
  4266     0694                     CWG1DBF         equ	1684	;# 
  4267     0695                     CWG1CON0        equ	1685	;# 
  4268     0696                     CWG1CON1        equ	1686	;# 
  4269     0697                     CWG1AS0         equ	1687	;# 
  4270     0698                     CWG1AS1         equ	1688	;# 
  4271     0699                     CWG1STR         equ	1689	;# 
  4272     0711                     CWG2CLKCON      equ	1809	;# 
  4273     0712                     CWG2DAT         equ	1810	;# 
  4274     0713                     CWG2DBR         equ	1811	;# 
  4275     0714                     CWG2DBF         equ	1812	;# 
  4276     0715                     CWG2CON0        equ	1813	;# 
  4277     0716                     CWG2CON1        equ	1814	;# 
  4278     0717                     CWG2AS0         equ	1815	;# 
  4279     0718                     CWG2AS1         equ	1816	;# 
  4280     0719                     CWG2STR         equ	1817	;# 
  4281     0891                     NVMADR          equ	2193	;# 
  4282     0891                     EEADR           equ	2193	;# 
  4283     0891                     PMADR           equ	2193	;# 
  4284     0891                     NVMADRL         equ	2193	;# 
  4285     0891                     EEADRL          equ	2193	;# 
  4286     0891                     PMADRL          equ	2193	;# 
  4287     0892                     NVMADRH         equ	2194	;# 
  4288     0892                     EEADRH          equ	2194	;# 
  4289     0892                     PMADRH          equ	2194	;# 
  4290     0893                     NVMDAT          equ	2195	;# 
  4291     0893                     EEDAT           equ	2195	;# 
  4292     0893                     PMDAT           equ	2195	;# 
  4293     0893                     NVMDATL         equ	2195	;# 
  4294     0893                     EEDATL          equ	2195	;# 
  4295     0893                     PMDATL          equ	2195	;# 
  4296     0894                     NVMDATH         equ	2196	;# 
  4297     0894                     EEDATH          equ	2196	;# 
  4298     0894                     PMDATH          equ	2196	;# 
  4299     0895                     NVMCON1         equ	2197	;# 
  4300     0895                     EECON1          equ	2197	;# 
  4301     0895                     PMCON1          equ	2197	;# 
  4302     0896                     NVMCON2         equ	2198	;# 
  4303     0896                     EECON2          equ	2198	;# 
  4304     0896                     PMCON2          equ	2198	;# 
  4305     089B                     PCON0           equ	2203	;# 
  4306     0911                     PMD0            equ	2321	;# 
  4307     0912                     PMD1            equ	2322	;# 
  4308     0913                     PMD2            equ	2323	;# 
  4309     0914                     PMD3            equ	2324	;# 
  4310     0915                     PMD4            equ	2325	;# 
  4311     0916                     PMD5            equ	2326	;# 
  4312     0918                     CPUDOZE         equ	2328	;# 
  4313     0919                     OSCCON1         equ	2329	;# 
  4314     091A                     OSCCON2         equ	2330	;# 
  4315     091B                     OSCCON3         equ	2331	;# 
  4316     091C                     OSCSTAT1        equ	2332	;# 
  4317     091D                     OSCEN           equ	2333	;# 
  4318     091E                     OSCTUNE         equ	2334	;# 
  4319     091F                     OSCFRQ          equ	2335	;# 
  4320     0E0F                     PPSLOCK         equ	3599	;# 
  4321     0E10                     INTPPS          equ	3600	;# 
  4322     0E11                     T0CKIPPS        equ	3601	;# 
  4323     0E12                     T1CKIPPS        equ	3602	;# 
  4324     0E13                     T1GPPS          equ	3603	;# 
  4325     0E14                     CCP1PPS         equ	3604	;# 
  4326     0E15                     CCP2PPS         equ	3605	;# 
  4327     0E16                     CCP3PPS         equ	3606	;# 
  4328     0E17                     CCP4PPS         equ	3607	;# 
  4329     0E18                     CWG1PPS         equ	3608	;# 
  4330     0E19                     CWG2PPS         equ	3609	;# 
  4331     0E1A                     MDCIN1PPS       equ	3610	;# 
  4332     0E1B                     MDCIN2PPS       equ	3611	;# 
  4333     0E1C                     MDMINPPS        equ	3612	;# 
  4334     0E1D                     SSP2CLKPPS      equ	3613	;# 
  4335     0E1E                     SSP2DATPPS      equ	3614	;# 
  4336     0E1F                     SSP2SSPPS       equ	3615	;# 
  4337     0E20                     SSP1CLKPPS      equ	3616	;# 
  4338     0E21                     SSP1DATPPS      equ	3617	;# 
  4339     0E22                     SSP1SSPPS       equ	3618	;# 
  4340     0E24                     RXPPS           equ	3620	;# 
  4341     0E25                     TXPPS           equ	3621	;# 
  4342     0E28                     CLCIN0PPS       equ	3624	;# 
  4343     0E29                     CLCIN1PPS       equ	3625	;# 
  4344     0E2A                     CLCIN2PPS       equ	3626	;# 
  4345     0E2B                     CLCIN3PPS       equ	3627	;# 
  4346     0E2C                     T3CKIPPS        equ	3628	;# 
  4347     0E2D                     T3GPPS          equ	3629	;# 
  4348     0E2E                     T5CKIPPS        equ	3630	;# 
  4349     0E2F                     T5GPPS          equ	3631	;# 
  4350     0E90                     RA0PPS          equ	3728	;# 
  4351     0E91                     RA1PPS          equ	3729	;# 
  4352     0E92                     RA2PPS          equ	3730	;# 
  4353     0E94                     RA4PPS          equ	3732	;# 
  4354     0E95                     RA5PPS          equ	3733	;# 
  4355     0E9C                     RB4PPS          equ	3740	;# 
  4356     0E9D                     RB5PPS          equ	3741	;# 
  4357     0E9E                     RB6PPS          equ	3742	;# 
  4358     0E9F                     RB7PPS          equ	3743	;# 
  4359     0EA0                     RC0PPS          equ	3744	;# 
  4360     0EA1                     RC1PPS          equ	3745	;# 
  4361     0EA2                     RC2PPS          equ	3746	;# 
  4362     0EA3                     RC3PPS          equ	3747	;# 
  4363     0EA4                     RC4PPS          equ	3748	;# 
  4364     0EA5                     RC5PPS          equ	3749	;# 
  4365     0EA6                     RC6PPS          equ	3750	;# 
  4366     0EA7                     RC7PPS          equ	3751	;# 
  4367     0F0F                     CLCDATA         equ	3855	;# 
  4368     0F10                     CLC1CON         equ	3856	;# 
  4369     0F11                     CLC1POL         equ	3857	;# 
  4370     0F12                     CLC1SEL0        equ	3858	;# 
  4371     0F13                     CLC1SEL1        equ	3859	;# 
  4372     0F14                     CLC1SEL2        equ	3860	;# 
  4373     0F15                     CLC1SEL3        equ	3861	;# 
  4374     0F16                     CLC1GLS0        equ	3862	;# 
  4375     0F17                     CLC1GLS1        equ	3863	;# 
  4376     0F18                     CLC1GLS2        equ	3864	;# 
  4377     0F19                     CLC1GLS3        equ	3865	;# 
  4378     0F1A                     CLC2CON         equ	3866	;# 
  4379     0F1B                     CLC2POL         equ	3867	;# 
  4380     0F1C                     CLC2SEL0        equ	3868	;# 
  4381     0F1D                     CLC2SEL1        equ	3869	;# 
  4382     0F1E                     CLC2SEL2        equ	3870	;# 
  4383     0F1F                     CLC2SEL3        equ	3871	;# 
  4384     0F20                     CLC2GLS0        equ	3872	;# 
  4385     0F21                     CLC2GLS1        equ	3873	;# 
  4386     0F22                     CLC2GLS2        equ	3874	;# 
  4387     0F23                     CLC2GLS3        equ	3875	;# 
  4388     0F24                     CLC3CON         equ	3876	;# 
  4389     0F25                     CLC3POL         equ	3877	;# 
  4390     0F26                     CLC3SEL0        equ	3878	;# 
  4391     0F27                     CLC3SEL1        equ	3879	;# 
  4392     0F28                     CLC3SEL2        equ	3880	;# 
  4393     0F29                     CLC3SEL3        equ	3881	;# 
  4394     0F2A                     CLC3GLS0        equ	3882	;# 
  4395     0F2B                     CLC3GLS1        equ	3883	;# 
  4396     0F2C                     CLC3GLS2        equ	3884	;# 
  4397     0F2D                     CLC3GLS3        equ	3885	;# 
  4398     0F2E                     CLC4CON         equ	3886	;# 
  4399     0F2F                     CLC4POL         equ	3887	;# 
  4400     0F30                     CLC4SEL0        equ	3888	;# 
  4401     0F31                     CLC4SEL1        equ	3889	;# 
  4402     0F32                     CLC4SEL2        equ	3890	;# 
  4403     0F33                     CLC4SEL3        equ	3891	;# 
  4404     0F34                     CLC4GLS0        equ	3892	;# 
  4405     0F35                     CLC4GLS1        equ	3893	;# 
  4406     0F36                     CLC4GLS2        equ	3894	;# 
  4407     0F37                     CLC4GLS3        equ	3895	;# 
  4408     0FE4                     STATUS_SHAD     equ	4068	;# 
  4409     0FE5                     WREG_SHAD       equ	4069	;# 
  4410     0FE6                     BSR_SHAD        equ	4070	;# 
  4411     0FE7                     PCLATH_SHAD     equ	4071	;# 
  4412     0FE8                     FSR0L_SHAD      equ	4072	;# 
  4413     0FE9                     FSR0H_SHAD      equ	4073	;# 
  4414     0FEA                     FSR1L_SHAD      equ	4074	;# 
  4415     0FEB                     FSR1H_SHAD      equ	4075	;# 
  4416     0FED                     STKPTR          equ	4077	;# 
  4417     0FEE                     TOSL            equ	4078	;# 
  4418     0FEF                     TOSH            equ	4079	;# 
  4419     0000                     INDF0           equ	0	;# 
  4420     0001                     INDF1           equ	1	;# 
  4421     0002                     PCL             equ	2	;# 
  4422     0003                     STATUS          equ	3	;# 
  4423     0004                     FSR0L           equ	4	;# 
  4424     0005                     FSR0H           equ	5	;# 
  4425     0006                     FSR1L           equ	6	;# 
  4426     0007                     FSR1H           equ	7	;# 
  4427     0008                     BSR             equ	8	;# 
  4428     0009                     WREG            equ	9	;# 
  4429     000A                     PCLATH          equ	10	;# 
  4430     000B                     INTCON          equ	11	;# 
  4431     000C                     PORTA           equ	12	;# 
  4432     000D                     PORTB           equ	13	;# 
  4433     000E                     PORTC           equ	14	;# 
  4434     0010                     PIR0            equ	16	;# 
  4435     0011                     PIR1            equ	17	;# 
  4436     0012                     PIR2            equ	18	;# 
  4437     0013                     PIR3            equ	19	;# 
  4438     0014                     PIR4            equ	20	;# 
  4439     0015                     TMR0L           equ	21	;# 
  4440     0015                     TMR0            equ	21	;# 
  4441     0016                     TMR0H           equ	22	;# 
  4442     0016                     PR0             equ	22	;# 
  4443     0017                     T0CON0          equ	23	;# 
  4444     0018                     T0CON1          equ	24	;# 
  4445     0019                     TMR1            equ	25	;# 
  4446     0019                     TMR1L           equ	25	;# 
  4447     001A                     TMR1H           equ	26	;# 
  4448     001B                     T1CON           equ	27	;# 
  4449     001C                     T1GCON          equ	28	;# 
  4450     001D                     TMR2            equ	29	;# 
  4451     001E                     PR2             equ	30	;# 
  4452     001F                     T2CON           equ	31	;# 
  4453     008C                     TRISA           equ	140	;# 
  4454     008D                     TRISB           equ	141	;# 
  4455     008E                     TRISC           equ	142	;# 
  4456     0090                     PIE0            equ	144	;# 
  4457     0091                     PIE1            equ	145	;# 
  4458     0092                     PIE2            equ	146	;# 
  4459     0093                     PIE3            equ	147	;# 
  4460     0094                     PIE4            equ	148	;# 
  4461     0097                     WDTCON          equ	151	;# 
  4462     009B                     ADRES           equ	155	;# 
  4463     009B                     ADRESL          equ	155	;# 
  4464     009C                     ADRESH          equ	156	;# 
  4465     009D                     ADCON0          equ	157	;# 
  4466     009E                     ADCON1          equ	158	;# 
  4467     009F                     ADACT           equ	159	;# 
  4468     010C                     LATA            equ	268	;# 
  4469     010D                     LATB            equ	269	;# 
  4470     010E                     LATC            equ	270	;# 
  4471     0111                     CM1CON0         equ	273	;# 
  4472     0112                     CM1CON1         equ	274	;# 
  4473     0113                     CM2CON0         equ	275	;# 
  4474     0114                     CM2CON1         equ	276	;# 
  4475     0115                     CMOUT           equ	277	;# 
  4476     0116                     BORCON          equ	278	;# 
  4477     0117                     FVRCON          equ	279	;# 
  4478     0118                     DACCON0         equ	280	;# 
  4479     0119                     DACCON1         equ	281	;# 
  4480     018C                     ANSELA          equ	396	;# 
  4481     018D                     ANSELB          equ	397	;# 
  4482     018E                     ANSELC          equ	398	;# 
  4483     0197                     VREGCON         equ	407	;# 
  4484     0199                     RC1REG          equ	409	;# 
  4485     0199                     RCREG           equ	409	;# 
  4486     0199                     RCREG1          equ	409	;# 
  4487     019A                     TX1REG          equ	410	;# 
  4488     019A                     TXREG1          equ	410	;# 
  4489     019A                     TXREG           equ	410	;# 
  4490     019B                     SP1BRG          equ	411	;# 
  4491     019B                     SPBRG           equ	411	;# 
  4492     019B                     SP1BRGL         equ	411	;# 
  4493     019B                     SPBRG1          equ	411	;# 
  4494     019B                     SPBRGL          equ	411	;# 
  4495     019C                     SP1BRGH         equ	412	;# 
  4496     019C                     SPBRGH          equ	412	;# 
  4497     019C                     SPBRGH1         equ	412	;# 
  4498     019D                     RC1STA          equ	413	;# 
  4499     019D                     RCSTA1          equ	413	;# 
  4500     019D                     RCSTA           equ	413	;# 
  4501     019E                     TX1STA          equ	414	;# 
  4502     019E                     TXSTA1          equ	414	;# 
  4503     019E                     TXSTA           equ	414	;# 
  4504     019F                     BAUD1CON        equ	415	;# 
  4505     019F                     BAUDCON1        equ	415	;# 
  4506     019F                     BAUDCTL1        equ	415	;# 
  4507     019F                     BAUDCON         equ	415	;# 
  4508     019F                     BAUDCTL         equ	415	;# 
  4509     020C                     WPUA            equ	524	;# 
  4510     020D                     WPUB            equ	525	;# 
  4511     020E                     WPUC            equ	526	;# 
  4512     0211                     SSP1BUF         equ	529	;# 
  4513     0211                     SSPBUF          equ	529	;# 
  4514     0212                     SSP1ADD         equ	530	;# 
  4515     0212                     SSPADD          equ	530	;# 
  4516     0213                     SSP1MSK         equ	531	;# 
  4517     0213                     SSPMSK          equ	531	;# 
  4518     0214                     SSP1STAT        equ	532	;# 
  4519     0214                     SSPSTAT         equ	532	;# 
  4520     0215                     SSP1CON1        equ	533	;# 
  4521     0215                     SSPCON          equ	533	;# 
  4522     0215                     SSPCON1         equ	533	;# 
  4523     0215                     SSP1CON         equ	533	;# 
  4524     0216                     SSP1CON2        equ	534	;# 
  4525     0216                     SSPCON2         equ	534	;# 
  4526     0217                     SSP1CON3        equ	535	;# 
  4527     0217                     SSPCON3         equ	535	;# 
  4528     0219                     SSP2BUF         equ	537	;# 
  4529     021A                     SSP2ADD         equ	538	;# 
  4530     021B                     SSP2MSK         equ	539	;# 
  4531     021C                     SSP2STAT        equ	540	;# 
  4532     021D                     SSP2CON1        equ	541	;# 
  4533     021D                     SSP2CON         equ	541	;# 
  4534     021E                     SSP2CON2        equ	542	;# 
  4535     021F                     SSP2CON3        equ	543	;# 
  4536     028C                     ODCONA          equ	652	;# 
  4537     028D                     ODCONB          equ	653	;# 
  4538     028E                     ODCONC          equ	654	;# 
  4539     0291                     CCPR1           equ	657	;# 
  4540     0291                     CCPR1L          equ	657	;# 
  4541     0292                     CCPR1H          equ	658	;# 
  4542     0293                     CCP1CON         equ	659	;# 
  4543     0294                     CCP1CAP         equ	660	;# 
  4544     0295                     CCPR2           equ	661	;# 
  4545     0295                     CCPR2L          equ	661	;# 
  4546     0296                     CCPR2H          equ	662	;# 
  4547     0297                     CCP2CON         equ	663	;# 
  4548     0298                     CCP2CAP         equ	664	;# 
  4549     029F                     CCPTMRS         equ	671	;# 
  4550     030C                     SLRCONA         equ	780	;# 
  4551     030D                     SLRCONB         equ	781	;# 
  4552     030E                     SLRCONC         equ	782	;# 
  4553     0311                     CCPR3           equ	785	;# 
  4554     0311                     CCPR3L          equ	785	;# 
  4555     0312                     CCPR3H          equ	786	;# 
  4556     0313                     CCP3CON         equ	787	;# 
  4557     0314                     CCP3CAP         equ	788	;# 
  4558     0315                     CCPR4           equ	789	;# 
  4559     0315                     CCPR4L          equ	789	;# 
  4560     0316                     CCPR4H          equ	790	;# 
  4561     0317                     CCP4CON         equ	791	;# 
  4562     0318                     CCP4CAP         equ	792	;# 
  4563     038C                     INLVLA          equ	908	;# 
  4564     038D                     INLVLB          equ	909	;# 
  4565     038E                     INLVLC          equ	910	;# 
  4566     0391                     IOCAP           equ	913	;# 
  4567     0392                     IOCAN           equ	914	;# 
  4568     0393                     IOCAF           equ	915	;# 
  4569     0394                     IOCBP           equ	916	;# 
  4570     0395                     IOCBN           equ	917	;# 
  4571     0396                     IOCBF           equ	918	;# 
  4572     0397                     IOCCP           equ	919	;# 
  4573     0398                     IOCCN           equ	920	;# 
  4574     0399                     IOCCF           equ	921	;# 
  4575     039A                     CLKRCON         equ	922	;# 
  4576     039C                     MDCON           equ	924	;# 
  4577     039D                     MDSRC           equ	925	;# 
  4578     039E                     MDCARH          equ	926	;# 
  4579     039F                     MDCARL          equ	927	;# 
  4580     0411                     TMR3            equ	1041	;# 
  4581     0411                     TMR3L           equ	1041	;# 
  4582     0412                     TMR3H           equ	1042	;# 
  4583     0413                     T3CON           equ	1043	;# 
  4584     0414                     T3GCON          equ	1044	;# 
  4585     0415                     TMR4            equ	1045	;# 
  4586     0416                     PR4             equ	1046	;# 
  4587     0417                     T4CON           equ	1047	;# 
  4588     0418                     TMR5            equ	1048	;# 
  4589     0418                     TMR5L           equ	1048	;# 
  4590     0419                     TMR5H           equ	1049	;# 
  4591     041A                     T5CON           equ	1050	;# 
  4592     041B                     T5GCON          equ	1051	;# 
  4593     041C                     TMR6            equ	1052	;# 
  4594     041D                     PR6             equ	1053	;# 
  4595     041E                     T6CON           equ	1054	;# 
  4596     041F                     CCDCON          equ	1055	;# 
  4597     0498                     NCO1ACC         equ	1176	;# 
  4598     0498                     NCO1ACCL        equ	1176	;# 
  4599     0499                     NCO1ACCH        equ	1177	;# 
  4600     049A                     NCO1ACCU        equ	1178	;# 
  4601     049B                     NCO1INC         equ	1179	;# 
  4602     049B                     NCO1INCL        equ	1179	;# 
  4603     049C                     NCO1INCH        equ	1180	;# 
  4604     049D                     NCO1INCU        equ	1181	;# 
  4605     049E                     NCO1CON         equ	1182	;# 
  4606     049F                     NCO1CLK         equ	1183	;# 
  4607     0617                     PWM5DCL         equ	1559	;# 
  4608     0618                     PWM5DCH         equ	1560	;# 
  4609     0619                     PWM5CON         equ	1561	;# 
  4610     0619                     PWM5CON0        equ	1561	;# 
  4611     061A                     PWM6DCL         equ	1562	;# 
  4612     061B                     PWM6DCH         equ	1563	;# 
  4613     061C                     PWM6CON         equ	1564	;# 
  4614     061C                     PWM6CON0        equ	1564	;# 
  4615     061F                     PWMTMRS         equ	1567	;# 
  4616     0691                     CWG1CLKCON      equ	1681	;# 
  4617     0692                     CWG1DAT         equ	1682	;# 
  4618     0693                     CWG1DBR         equ	1683	;# 
  4619     0694                     CWG1DBF         equ	1684	;# 
  4620     0695                     CWG1CON0        equ	1685	;# 
  4621     0696                     CWG1CON1        equ	1686	;# 
  4622     0697                     CWG1AS0         equ	1687	;# 
  4623     0698                     CWG1AS1         equ	1688	;# 
  4624     0699                     CWG1STR         equ	1689	;# 
  4625     0711                     CWG2CLKCON      equ	1809	;# 
  4626     0712                     CWG2DAT         equ	1810	;# 
  4627     0713                     CWG2DBR         equ	1811	;# 
  4628     0714                     CWG2DBF         equ	1812	;# 
  4629     0715                     CWG2CON0        equ	1813	;# 
  4630     0716                     CWG2CON1        equ	1814	;# 
  4631     0717                     CWG2AS0         equ	1815	;# 
  4632     0718                     CWG2AS1         equ	1816	;# 
  4633     0719                     CWG2STR         equ	1817	;# 
  4634     0891                     NVMADR          equ	2193	;# 
  4635     0891                     EEADR           equ	2193	;# 
  4636     0891                     PMADR           equ	2193	;# 
  4637     0891                     NVMADRL         equ	2193	;# 
  4638     0891                     EEADRL          equ	2193	;# 
  4639     0891                     PMADRL          equ	2193	;# 
  4640     0892                     NVMADRH         equ	2194	;# 
  4641     0892                     EEADRH          equ	2194	;# 
  4642     0892                     PMADRH          equ	2194	;# 
  4643     0893                     NVMDAT          equ	2195	;# 
  4644     0893                     EEDAT           equ	2195	;# 
  4645     0893                     PMDAT           equ	2195	;# 
  4646     0893                     NVMDATL         equ	2195	;# 
  4647     0893                     EEDATL          equ	2195	;# 
  4648     0893                     PMDATL          equ	2195	;# 
  4649     0894                     NVMDATH         equ	2196	;# 
  4650     0894                     EEDATH          equ	2196	;# 
  4651     0894                     PMDATH          equ	2196	;# 
  4652     0895                     NVMCON1         equ	2197	;# 
  4653     0895                     EECON1          equ	2197	;# 
  4654     0895                     PMCON1          equ	2197	;# 
  4655     0896                     NVMCON2         equ	2198	;# 
  4656     0896                     EECON2          equ	2198	;# 
  4657     0896                     PMCON2          equ	2198	;# 
  4658     089B                     PCON0           equ	2203	;# 
  4659     0911                     PMD0            equ	2321	;# 
  4660     0912                     PMD1            equ	2322	;# 
  4661     0913                     PMD2            equ	2323	;# 
  4662     0914                     PMD3            equ	2324	;# 
  4663     0915                     PMD4            equ	2325	;# 
  4664     0916                     PMD5            equ	2326	;# 
  4665     0918                     CPUDOZE         equ	2328	;# 
  4666     0919                     OSCCON1         equ	2329	;# 
  4667     091A                     OSCCON2         equ	2330	;# 
  4668     091B                     OSCCON3         equ	2331	;# 
  4669     091C                     OSCSTAT1        equ	2332	;# 
  4670     091D                     OSCEN           equ	2333	;# 
  4671     091E                     OSCTUNE         equ	2334	;# 
  4672     091F                     OSCFRQ          equ	2335	;# 
  4673     0E0F                     PPSLOCK         equ	3599	;# 
  4674     0E10                     INTPPS          equ	3600	;# 
  4675     0E11                     T0CKIPPS        equ	3601	;# 
  4676     0E12                     T1CKIPPS        equ	3602	;# 
  4677     0E13                     T1GPPS          equ	3603	;# 
  4678     0E14                     CCP1PPS         equ	3604	;# 
  4679     0E15                     CCP2PPS         equ	3605	;# 
  4680     0E16                     CCP3PPS         equ	3606	;# 
  4681     0E17                     CCP4PPS         equ	3607	;# 
  4682     0E18                     CWG1PPS         equ	3608	;# 
  4683     0E19                     CWG2PPS         equ	3609	;# 
  4684     0E1A                     MDCIN1PPS       equ	3610	;# 
  4685     0E1B                     MDCIN2PPS       equ	3611	;# 
  4686     0E1C                     MDMINPPS        equ	3612	;# 
  4687     0E1D                     SSP2CLKPPS      equ	3613	;# 
  4688     0E1E                     SSP2DATPPS      equ	3614	;# 
  4689     0E1F                     SSP2SSPPS       equ	3615	;# 
  4690     0E20                     SSP1CLKPPS      equ	3616	;# 
  4691     0E21                     SSP1DATPPS      equ	3617	;# 
  4692     0E22                     SSP1SSPPS       equ	3618	;# 
  4693     0E24                     RXPPS           equ	3620	;# 
  4694     0E25                     TXPPS           equ	3621	;# 
  4695     0E28                     CLCIN0PPS       equ	3624	;# 
  4696     0E29                     CLCIN1PPS       equ	3625	;# 
  4697     0E2A                     CLCIN2PPS       equ	3626	;# 
  4698     0E2B                     CLCIN3PPS       equ	3627	;# 
  4699     0E2C                     T3CKIPPS        equ	3628	;# 
  4700     0E2D                     T3GPPS          equ	3629	;# 
  4701     0E2E                     T5CKIPPS        equ	3630	;# 
  4702     0E2F                     T5GPPS          equ	3631	;# 
  4703     0E90                     RA0PPS          equ	3728	;# 
  4704     0E91                     RA1PPS          equ	3729	;# 
  4705     0E92                     RA2PPS          equ	3730	;# 
  4706     0E94                     RA4PPS          equ	3732	;# 
  4707     0E95                     RA5PPS          equ	3733	;# 
  4708     0E9C                     RB4PPS          equ	3740	;# 
  4709     0E9D                     RB5PPS          equ	3741	;# 
  4710     0E9E                     RB6PPS          equ	3742	;# 
  4711     0E9F                     RB7PPS          equ	3743	;# 
  4712     0EA0                     RC0PPS          equ	3744	;# 
  4713     0EA1                     RC1PPS          equ	3745	;# 
  4714     0EA2                     RC2PPS          equ	3746	;# 
  4715     0EA3                     RC3PPS          equ	3747	;# 
  4716     0EA4                     RC4PPS          equ	3748	;# 
  4717     0EA5                     RC5PPS          equ	3749	;# 
  4718     0EA6                     RC6PPS          equ	3750	;# 
  4719     0EA7                     RC7PPS          equ	3751	;# 
  4720     0F0F                     CLCDATA         equ	3855	;# 
  4721     0F10                     CLC1CON         equ	3856	;# 
  4722     0F11                     CLC1POL         equ	3857	;# 
  4723     0F12                     CLC1SEL0        equ	3858	;# 
  4724     0F13                     CLC1SEL1        equ	3859	;# 
  4725     0F14                     CLC1SEL2        equ	3860	;# 
  4726     0F15                     CLC1SEL3        equ	3861	;# 
  4727     0F16                     CLC1GLS0        equ	3862	;# 
  4728     0F17                     CLC1GLS1        equ	3863	;# 
  4729     0F18                     CLC1GLS2        equ	3864	;# 
  4730     0F19                     CLC1GLS3        equ	3865	;# 
  4731     0F1A                     CLC2CON         equ	3866	;# 
  4732     0F1B                     CLC2POL         equ	3867	;# 
  4733     0F1C                     CLC2SEL0        equ	3868	;# 
  4734     0F1D                     CLC2SEL1        equ	3869	;# 
  4735     0F1E                     CLC2SEL2        equ	3870	;# 
  4736     0F1F                     CLC2SEL3        equ	3871	;# 
  4737     0F20                     CLC2GLS0        equ	3872	;# 
  4738     0F21                     CLC2GLS1        equ	3873	;# 
  4739     0F22                     CLC2GLS2        equ	3874	;# 
  4740     0F23                     CLC2GLS3        equ	3875	;# 
  4741     0F24                     CLC3CON         equ	3876	;# 
  4742     0F25                     CLC3POL         equ	3877	;# 
  4743     0F26                     CLC3SEL0        equ	3878	;# 
  4744     0F27                     CLC3SEL1        equ	3879	;# 
  4745     0F28                     CLC3SEL2        equ	3880	;# 
  4746     0F29                     CLC3SEL3        equ	3881	;# 
  4747     0F2A                     CLC3GLS0        equ	3882	;# 
  4748     0F2B                     CLC3GLS1        equ	3883	;# 
  4749     0F2C                     CLC3GLS2        equ	3884	;# 
  4750     0F2D                     CLC3GLS3        equ	3885	;# 
  4751     0F2E                     CLC4CON         equ	3886	;# 
  4752     0F2F                     CLC4POL         equ	3887	;# 
  4753     0F30                     CLC4SEL0        equ	3888	;# 
  4754     0F31                     CLC4SEL1        equ	3889	;# 
  4755     0F32                     CLC4SEL2        equ	3890	;# 
  4756     0F33                     CLC4SEL3        equ	3891	;# 
  4757     0F34                     CLC4GLS0        equ	3892	;# 
  4758     0F35                     CLC4GLS1        equ	3893	;# 
  4759     0F36                     CLC4GLS2        equ	3894	;# 
  4760     0F37                     CLC4GLS3        equ	3895	;# 
  4761     0FE4                     STATUS_SHAD     equ	4068	;# 
  4762     0FE5                     WREG_SHAD       equ	4069	;# 
  4763     0FE6                     BSR_SHAD        equ	4070	;# 
  4764     0FE7                     PCLATH_SHAD     equ	4071	;# 
  4765     0FE8                     FSR0L_SHAD      equ	4072	;# 
  4766     0FE9                     FSR0H_SHAD      equ	4073	;# 
  4767     0FEA                     FSR1L_SHAD      equ	4074	;# 
  4768     0FEB                     FSR1H_SHAD      equ	4075	;# 
  4769     0FED                     STKPTR          equ	4077	;# 
  4770     0FEE                     TOSL            equ	4078	;# 
  4771     0FEF                     TOSH            equ	4079	;# 
  4772     0000                     INDF0           equ	0	;# 
  4773     0001                     INDF1           equ	1	;# 
  4774     0002                     PCL             equ	2	;# 
  4775     0003                     STATUS          equ	3	;# 
  4776     0004                     FSR0L           equ	4	;# 
  4777     0005                     FSR0H           equ	5	;# 
  4778     0006                     FSR1L           equ	6	;# 
  4779     0007                     FSR1H           equ	7	;# 
  4780     0008                     BSR             equ	8	;# 
  4781     0009                     WREG            equ	9	;# 
  4782     000A                     PCLATH          equ	10	;# 
  4783     000B                     INTCON          equ	11	;# 
  4784     000C                     PORTA           equ	12	;# 
  4785     000D                     PORTB           equ	13	;# 
  4786     000E                     PORTC           equ	14	;# 
  4787     0010                     PIR0            equ	16	;# 
  4788     0011                     PIR1            equ	17	;# 
  4789     0012                     PIR2            equ	18	;# 
  4790     0013                     PIR3            equ	19	;# 
  4791     0014                     PIR4            equ	20	;# 
  4792     0015                     TMR0L           equ	21	;# 
  4793     0015                     TMR0            equ	21	;# 
  4794     0016                     TMR0H           equ	22	;# 
  4795     0016                     PR0             equ	22	;# 
  4796     0017                     T0CON0          equ	23	;# 
  4797     0018                     T0CON1          equ	24	;# 
  4798     0019                     TMR1            equ	25	;# 
  4799     0019                     TMR1L           equ	25	;# 
  4800     001A                     TMR1H           equ	26	;# 
  4801     001B                     T1CON           equ	27	;# 
  4802     001C                     T1GCON          equ	28	;# 
  4803     001D                     TMR2            equ	29	;# 
  4804     001E                     PR2             equ	30	;# 
  4805     001F                     T2CON           equ	31	;# 
  4806     008C                     TRISA           equ	140	;# 
  4807     008D                     TRISB           equ	141	;# 
  4808     008E                     TRISC           equ	142	;# 
  4809     0090                     PIE0            equ	144	;# 
  4810     0091                     PIE1            equ	145	;# 
  4811     0092                     PIE2            equ	146	;# 
  4812     0093                     PIE3            equ	147	;# 
  4813     0094                     PIE4            equ	148	;# 
  4814     0097                     WDTCON          equ	151	;# 
  4815     009B                     ADRES           equ	155	;# 
  4816     009B                     ADRESL          equ	155	;# 
  4817     009C                     ADRESH          equ	156	;# 
  4818     009D                     ADCON0          equ	157	;# 
  4819     009E                     ADCON1          equ	158	;# 
  4820     009F                     ADACT           equ	159	;# 
  4821     010C                     LATA            equ	268	;# 
  4822     010D                     LATB            equ	269	;# 
  4823     010E                     LATC            equ	270	;# 
  4824     0111                     CM1CON0         equ	273	;# 
  4825     0112                     CM1CON1         equ	274	;# 
  4826     0113                     CM2CON0         equ	275	;# 
  4827     0114                     CM2CON1         equ	276	;# 
  4828     0115                     CMOUT           equ	277	;# 
  4829     0116                     BORCON          equ	278	;# 
  4830     0117                     FVRCON          equ	279	;# 
  4831     0118                     DACCON0         equ	280	;# 
  4832     0119                     DACCON1         equ	281	;# 
  4833     018C                     ANSELA          equ	396	;# 
  4834     018D                     ANSELB          equ	397	;# 
  4835     018E                     ANSELC          equ	398	;# 
  4836     0197                     VREGCON         equ	407	;# 
  4837     0199                     RC1REG          equ	409	;# 
  4838     0199                     RCREG           equ	409	;# 
  4839     0199                     RCREG1          equ	409	;# 
  4840     019A                     TX1REG          equ	410	;# 
  4841     019A                     TXREG1          equ	410	;# 
  4842     019A                     TXREG           equ	410	;# 
  4843     019B                     SP1BRG          equ	411	;# 
  4844     019B                     SPBRG           equ	411	;# 
  4845     019B                     SP1BRGL         equ	411	;# 
  4846     019B                     SPBRG1          equ	411	;# 
  4847     019B                     SPBRGL          equ	411	;# 
  4848     019C                     SP1BRGH         equ	412	;# 
  4849     019C                     SPBRGH          equ	412	;# 
  4850     019C                     SPBRGH1         equ	412	;# 
  4851     019D                     RC1STA          equ	413	;# 
  4852     019D                     RCSTA1          equ	413	;# 
  4853     019D                     RCSTA           equ	413	;# 
  4854     019E                     TX1STA          equ	414	;# 
  4855     019E                     TXSTA1          equ	414	;# 
  4856     019E                     TXSTA           equ	414	;# 
  4857     019F                     BAUD1CON        equ	415	;# 
  4858     019F                     BAUDCON1        equ	415	;# 
  4859     019F                     BAUDCTL1        equ	415	;# 
  4860     019F                     BAUDCON         equ	415	;# 
  4861     019F                     BAUDCTL         equ	415	;# 
  4862     020C                     WPUA            equ	524	;# 
  4863     020D                     WPUB            equ	525	;# 
  4864     020E                     WPUC            equ	526	;# 
  4865     0211                     SSP1BUF         equ	529	;# 
  4866     0211                     SSPBUF          equ	529	;# 
  4867     0212                     SSP1ADD         equ	530	;# 
  4868     0212                     SSPADD          equ	530	;# 
  4869     0213                     SSP1MSK         equ	531	;# 
  4870     0213                     SSPMSK          equ	531	;# 
  4871     0214                     SSP1STAT        equ	532	;# 
  4872     0214                     SSPSTAT         equ	532	;# 
  4873     0215                     SSP1CON1        equ	533	;# 
  4874     0215                     SSPCON          equ	533	;# 
  4875     0215                     SSPCON1         equ	533	;# 
  4876     0215                     SSP1CON         equ	533	;# 
  4877     0216                     SSP1CON2        equ	534	;# 
  4878     0216                     SSPCON2         equ	534	;# 
  4879     0217                     SSP1CON3        equ	535	;# 
  4880     0217                     SSPCON3         equ	535	;# 
  4881     0219                     SSP2BUF         equ	537	;# 
  4882     021A                     SSP2ADD         equ	538	;# 
  4883     021B                     SSP2MSK         equ	539	;# 
  4884     021C                     SSP2STAT        equ	540	;# 
  4885     021D                     SSP2CON1        equ	541	;# 
  4886     021D                     SSP2CON         equ	541	;# 
  4887     021E                     SSP2CON2        equ	542	;# 
  4888     021F                     SSP2CON3        equ	543	;# 
  4889     028C                     ODCONA          equ	652	;# 
  4890     028D                     ODCONB          equ	653	;# 
  4891     028E                     ODCONC          equ	654	;# 
  4892     0291                     CCPR1           equ	657	;# 
  4893     0291                     CCPR1L          equ	657	;# 
  4894     0292                     CCPR1H          equ	658	;# 
  4895     0293                     CCP1CON         equ	659	;# 
  4896     0294                     CCP1CAP         equ	660	;# 
  4897     0295                     CCPR2           equ	661	;# 
  4898     0295                     CCPR2L          equ	661	;# 
  4899     0296                     CCPR2H          equ	662	;# 
  4900     0297                     CCP2CON         equ	663	;# 
  4901     0298                     CCP2CAP         equ	664	;# 
  4902     029F                     CCPTMRS         equ	671	;# 
  4903     030C                     SLRCONA         equ	780	;# 
  4904     030D                     SLRCONB         equ	781	;# 
  4905     030E                     SLRCONC         equ	782	;# 
  4906     0311                     CCPR3           equ	785	;# 
  4907     0311                     CCPR3L          equ	785	;# 
  4908     0312                     CCPR3H          equ	786	;# 
  4909     0313                     CCP3CON         equ	787	;# 
  4910     0314                     CCP3CAP         equ	788	;# 
  4911     0315                     CCPR4           equ	789	;# 
  4912     0315                     CCPR4L          equ	789	;# 
  4913     0316                     CCPR4H          equ	790	;# 
  4914     0317                     CCP4CON         equ	791	;# 
  4915     0318                     CCP4CAP         equ	792	;# 
  4916     038C                     INLVLA          equ	908	;# 
  4917     038D                     INLVLB          equ	909	;# 
  4918     038E                     INLVLC          equ	910	;# 
  4919     0391                     IOCAP           equ	913	;# 
  4920     0392                     IOCAN           equ	914	;# 
  4921     0393                     IOCAF           equ	915	;# 
  4922     0394                     IOCBP           equ	916	;# 
  4923     0395                     IOCBN           equ	917	;# 
  4924     0396                     IOCBF           equ	918	;# 
  4925     0397                     IOCCP           equ	919	;# 
  4926     0398                     IOCCN           equ	920	;# 
  4927     0399                     IOCCF           equ	921	;# 
  4928     039A                     CLKRCON         equ	922	;# 
  4929     039C                     MDCON           equ	924	;# 
  4930     039D                     MDSRC           equ	925	;# 
  4931     039E                     MDCARH          equ	926	;# 
  4932     039F                     MDCARL          equ	927	;# 
  4933     0411                     TMR3            equ	1041	;# 
  4934     0411                     TMR3L           equ	1041	;# 
  4935     0412                     TMR3H           equ	1042	;# 
  4936     0413                     T3CON           equ	1043	;# 
  4937     0414                     T3GCON          equ	1044	;# 
  4938     0415                     TMR4            equ	1045	;# 
  4939     0416                     PR4             equ	1046	;# 
  4940     0417                     T4CON           equ	1047	;# 
  4941     0418                     TMR5            equ	1048	;# 
  4942     0418                     TMR5L           equ	1048	;# 
  4943     0419                     TMR5H           equ	1049	;# 
  4944     041A                     T5CON           equ	1050	;# 
  4945     041B                     T5GCON          equ	1051	;# 
  4946     041C                     TMR6            equ	1052	;# 
  4947     041D                     PR6             equ	1053	;# 
  4948     041E                     T6CON           equ	1054	;# 
  4949     041F                     CCDCON          equ	1055	;# 
  4950     0498                     NCO1ACC         equ	1176	;# 
  4951     0498                     NCO1ACCL        equ	1176	;# 
  4952     0499                     NCO1ACCH        equ	1177	;# 
  4953     049A                     NCO1ACCU        equ	1178	;# 
  4954     049B                     NCO1INC         equ	1179	;# 
  4955     049B                     NCO1INCL        equ	1179	;# 
  4956     049C                     NCO1INCH        equ	1180	;# 
  4957     049D                     NCO1INCU        equ	1181	;# 
  4958     049E                     NCO1CON         equ	1182	;# 
  4959     049F                     NCO1CLK         equ	1183	;# 
  4960     0617                     PWM5DCL         equ	1559	;# 
  4961     0618                     PWM5DCH         equ	1560	;# 
  4962     0619                     PWM5CON         equ	1561	;# 
  4963     0619                     PWM5CON0        equ	1561	;# 
  4964     061A                     PWM6DCL         equ	1562	;# 
  4965     061B                     PWM6DCH         equ	1563	;# 
  4966     061C                     PWM6CON         equ	1564	;# 
  4967     061C                     PWM6CON0        equ	1564	;# 
  4968     061F                     PWMTMRS         equ	1567	;# 
  4969     0691                     CWG1CLKCON      equ	1681	;# 
  4970     0692                     CWG1DAT         equ	1682	;# 
  4971     0693                     CWG1DBR         equ	1683	;# 
  4972     0694                     CWG1DBF         equ	1684	;# 
  4973     0695                     CWG1CON0        equ	1685	;# 
  4974     0696                     CWG1CON1        equ	1686	;# 
  4975     0697                     CWG1AS0         equ	1687	;# 
  4976     0698                     CWG1AS1         equ	1688	;# 
  4977     0699                     CWG1STR         equ	1689	;# 
  4978     0711                     CWG2CLKCON      equ	1809	;# 
  4979     0712                     CWG2DAT         equ	1810	;# 
  4980     0713                     CWG2DBR         equ	1811	;# 
  4981     0714                     CWG2DBF         equ	1812	;# 
  4982     0715                     CWG2CON0        equ	1813	;# 
  4983     0716                     CWG2CON1        equ	1814	;# 
  4984     0717                     CWG2AS0         equ	1815	;# 
  4985     0718                     CWG2AS1         equ	1816	;# 
  4986     0719                     CWG2STR         equ	1817	;# 
  4987     0891                     NVMADR          equ	2193	;# 
  4988     0891                     EEADR           equ	2193	;# 
  4989     0891                     PMADR           equ	2193	;# 
  4990     0891                     NVMADRL         equ	2193	;# 
  4991     0891                     EEADRL          equ	2193	;# 
  4992     0891                     PMADRL          equ	2193	;# 
  4993     0892                     NVMADRH         equ	2194	;# 
  4994     0892                     EEADRH          equ	2194	;# 
  4995     0892                     PMADRH          equ	2194	;# 
  4996     0893                     NVMDAT          equ	2195	;# 
  4997     0893                     EEDAT           equ	2195	;# 
  4998     0893                     PMDAT           equ	2195	;# 
  4999     0893                     NVMDATL         equ	2195	;# 
  5000     0893                     EEDATL          equ	2195	;# 
  5001     0893                     PMDATL          equ	2195	;# 
  5002     0894                     NVMDATH         equ	2196	;# 
  5003     0894                     EEDATH          equ	2196	;# 
  5004     0894                     PMDATH          equ	2196	;# 
  5005     0895                     NVMCON1         equ	2197	;# 
  5006     0895                     EECON1          equ	2197	;# 
  5007     0895                     PMCON1          equ	2197	;# 
  5008     0896                     NVMCON2         equ	2198	;# 
  5009     0896                     EECON2          equ	2198	;# 
  5010     0896                     PMCON2          equ	2198	;# 
  5011     089B                     PCON0           equ	2203	;# 
  5012     0911                     PMD0            equ	2321	;# 
  5013     0912                     PMD1            equ	2322	;# 
  5014     0913                     PMD2            equ	2323	;# 
  5015     0914                     PMD3            equ	2324	;# 
  5016     0915                     PMD4            equ	2325	;# 
  5017     0916                     PMD5            equ	2326	;# 
  5018     0918                     CPUDOZE         equ	2328	;# 
  5019     0919                     OSCCON1         equ	2329	;# 
  5020     091A                     OSCCON2         equ	2330	;# 
  5021     091B                     OSCCON3         equ	2331	;# 
  5022     091C                     OSCSTAT1        equ	2332	;# 
  5023     091D                     OSCEN           equ	2333	;# 
  5024     091E                     OSCTUNE         equ	2334	;# 
  5025     091F                     OSCFRQ          equ	2335	;# 
  5026     0E0F                     PPSLOCK         equ	3599	;# 
  5027     0E10                     INTPPS          equ	3600	;# 
  5028     0E11                     T0CKIPPS        equ	3601	;# 
  5029     0E12                     T1CKIPPS        equ	3602	;# 
  5030     0E13                     T1GPPS          equ	3603	;# 
  5031     0E14                     CCP1PPS         equ	3604	;# 
  5032     0E15                     CCP2PPS         equ	3605	;# 
  5033     0E16                     CCP3PPS         equ	3606	;# 
  5034     0E17                     CCP4PPS         equ	3607	;# 
  5035     0E18                     CWG1PPS         equ	3608	;# 
  5036     0E19                     CWG2PPS         equ	3609	;# 
  5037     0E1A                     MDCIN1PPS       equ	3610	;# 
  5038     0E1B                     MDCIN2PPS       equ	3611	;# 
  5039     0E1C                     MDMINPPS        equ	3612	;# 
  5040     0E1D                     SSP2CLKPPS      equ	3613	;# 
  5041     0E1E                     SSP2DATPPS      equ	3614	;# 
  5042     0E1F                     SSP2SSPPS       equ	3615	;# 
  5043     0E20                     SSP1CLKPPS      equ	3616	;# 
  5044     0E21                     SSP1DATPPS      equ	3617	;# 
  5045     0E22                     SSP1SSPPS       equ	3618	;# 
  5046     0E24                     RXPPS           equ	3620	;# 
  5047     0E25                     TXPPS           equ	3621	;# 
  5048     0E28                     CLCIN0PPS       equ	3624	;# 
  5049     0E29                     CLCIN1PPS       equ	3625	;# 
  5050     0E2A                     CLCIN2PPS       equ	3626	;# 
  5051     0E2B                     CLCIN3PPS       equ	3627	;# 
  5052     0E2C                     T3CKIPPS        equ	3628	;# 
  5053     0E2D                     T3GPPS          equ	3629	;# 
  5054     0E2E                     T5CKIPPS        equ	3630	;# 
  5055     0E2F                     T5GPPS          equ	3631	;# 
  5056     0E90                     RA0PPS          equ	3728	;# 
  5057     0E91                     RA1PPS          equ	3729	;# 
  5058     0E92                     RA2PPS          equ	3730	;# 
  5059     0E94                     RA4PPS          equ	3732	;# 
  5060     0E95                     RA5PPS          equ	3733	;# 
  5061     0E9C                     RB4PPS          equ	3740	;# 
  5062     0E9D                     RB5PPS          equ	3741	;# 
  5063     0E9E                     RB6PPS          equ	3742	;# 
  5064     0E9F                     RB7PPS          equ	3743	;# 
  5065     0EA0                     RC0PPS          equ	3744	;# 
  5066     0EA1                     RC1PPS          equ	3745	;# 
  5067     0EA2                     RC2PPS          equ	3746	;# 
  5068     0EA3                     RC3PPS          equ	3747	;# 
  5069     0EA4                     RC4PPS          equ	3748	;# 
  5070     0EA5                     RC5PPS          equ	3749	;# 
  5071     0EA6                     RC6PPS          equ	3750	;# 
  5072     0EA7                     RC7PPS          equ	3751	;# 
  5073     0F0F                     CLCDATA         equ	3855	;# 
  5074     0F10                     CLC1CON         equ	3856	;# 
  5075     0F11                     CLC1POL         equ	3857	;# 
  5076     0F12                     CLC1SEL0        equ	3858	;# 
  5077     0F13                     CLC1SEL1        equ	3859	;# 
  5078     0F14                     CLC1SEL2        equ	3860	;# 
  5079     0F15                     CLC1SEL3        equ	3861	;# 
  5080     0F16                     CLC1GLS0        equ	3862	;# 
  5081     0F17                     CLC1GLS1        equ	3863	;# 
  5082     0F18                     CLC1GLS2        equ	3864	;# 
  5083     0F19                     CLC1GLS3        equ	3865	;# 
  5084     0F1A                     CLC2CON         equ	3866	;# 
  5085     0F1B                     CLC2POL         equ	3867	;# 
  5086     0F1C                     CLC2SEL0        equ	3868	;# 
  5087     0F1D                     CLC2SEL1        equ	3869	;# 
  5088     0F1E                     CLC2SEL2        equ	3870	;# 
  5089     0F1F                     CLC2SEL3        equ	3871	;# 
  5090     0F20                     CLC2GLS0        equ	3872	;# 
  5091     0F21                     CLC2GLS1        equ	3873	;# 
  5092     0F22                     CLC2GLS2        equ	3874	;# 
  5093     0F23                     CLC2GLS3        equ	3875	;# 
  5094     0F24                     CLC3CON         equ	3876	;# 
  5095     0F25                     CLC3POL         equ	3877	;# 
  5096     0F26                     CLC3SEL0        equ	3878	;# 
  5097     0F27                     CLC3SEL1        equ	3879	;# 
  5098     0F28                     CLC3SEL2        equ	3880	;# 
  5099     0F29                     CLC3SEL3        equ	3881	;# 
  5100     0F2A                     CLC3GLS0        equ	3882	;# 
  5101     0F2B                     CLC3GLS1        equ	3883	;# 
  5102     0F2C                     CLC3GLS2        equ	3884	;# 
  5103     0F2D                     CLC3GLS3        equ	3885	;# 
  5104     0F2E                     CLC4CON         equ	3886	;# 
  5105     0F2F                     CLC4POL         equ	3887	;# 
  5106     0F30                     CLC4SEL0        equ	3888	;# 
  5107     0F31                     CLC4SEL1        equ	3889	;# 
  5108     0F32                     CLC4SEL2        equ	3890	;# 
  5109     0F33                     CLC4SEL3        equ	3891	;# 
  5110     0F34                     CLC4GLS0        equ	3892	;# 
  5111     0F35                     CLC4GLS1        equ	3893	;# 
  5112     0F36                     CLC4GLS2        equ	3894	;# 
  5113     0F37                     CLC4GLS3        equ	3895	;# 
  5114     0FE4                     STATUS_SHAD     equ	4068	;# 
  5115     0FE5                     WREG_SHAD       equ	4069	;# 
  5116     0FE6                     BSR_SHAD        equ	4070	;# 
  5117     0FE7                     PCLATH_SHAD     equ	4071	;# 
  5118     0FE8                     FSR0L_SHAD      equ	4072	;# 
  5119     0FE9                     FSR0H_SHAD      equ	4073	;# 
  5120     0FEA                     FSR1L_SHAD      equ	4074	;# 
  5121     0FEB                     FSR1H_SHAD      equ	4075	;# 
  5122     0FED                     STKPTR          equ	4077	;# 
  5123     0FEE                     TOSL            equ	4078	;# 
  5124     0FEF                     TOSH            equ	4079	;# 
  5125     0000                     INDF0           equ	0	;# 
  5126     0001                     INDF1           equ	1	;# 
  5127     0002                     PCL             equ	2	;# 
  5128     0003                     STATUS          equ	3	;# 
  5129     0004                     FSR0L           equ	4	;# 
  5130     0005                     FSR0H           equ	5	;# 
  5131     0006                     FSR1L           equ	6	;# 
  5132     0007                     FSR1H           equ	7	;# 
  5133     0008                     BSR             equ	8	;# 
  5134     0009                     WREG            equ	9	;# 
  5135     000A                     PCLATH          equ	10	;# 
  5136     000B                     INTCON          equ	11	;# 
  5137     000C                     PORTA           equ	12	;# 
  5138     000D                     PORTB           equ	13	;# 
  5139     000E                     PORTC           equ	14	;# 
  5140     0010                     PIR0            equ	16	;# 
  5141     0011                     PIR1            equ	17	;# 
  5142     0012                     PIR2            equ	18	;# 
  5143     0013                     PIR3            equ	19	;# 
  5144     0014                     PIR4            equ	20	;# 
  5145     0015                     TMR0L           equ	21	;# 
  5146     0015                     TMR0            equ	21	;# 
  5147     0016                     TMR0H           equ	22	;# 
  5148     0016                     PR0             equ	22	;# 
  5149     0017                     T0CON0          equ	23	;# 
  5150     0018                     T0CON1          equ	24	;# 
  5151     0019                     TMR1            equ	25	;# 
  5152     0019                     TMR1L           equ	25	;# 
  5153     001A                     TMR1H           equ	26	;# 
  5154     001B                     T1CON           equ	27	;# 
  5155     001C                     T1GCON          equ	28	;# 
  5156     001D                     TMR2            equ	29	;# 
  5157     001E                     PR2             equ	30	;# 
  5158     001F                     T2CON           equ	31	;# 
  5159     008C                     TRISA           equ	140	;# 
  5160     008D                     TRISB           equ	141	;# 
  5161     008E                     TRISC           equ	142	;# 
  5162     0090                     PIE0            equ	144	;# 
  5163     0091                     PIE1            equ	145	;# 
  5164     0092                     PIE2            equ	146	;# 
  5165     0093                     PIE3            equ	147	;# 
  5166     0094                     PIE4            equ	148	;# 
  5167     0097                     WDTCON          equ	151	;# 
  5168     009B                     ADRES           equ	155	;# 
  5169     009B                     ADRESL          equ	155	;# 
  5170     009C                     ADRESH          equ	156	;# 
  5171     009D                     ADCON0          equ	157	;# 
  5172     009E                     ADCON1          equ	158	;# 
  5173     009F                     ADACT           equ	159	;# 
  5174     010C                     LATA            equ	268	;# 
  5175     010D                     LATB            equ	269	;# 
  5176     010E                     LATC            equ	270	;# 
  5177     0111                     CM1CON0         equ	273	;# 
  5178     0112                     CM1CON1         equ	274	;# 
  5179     0113                     CM2CON0         equ	275	;# 
  5180     0114                     CM2CON1         equ	276	;# 
  5181     0115                     CMOUT           equ	277	;# 
  5182     0116                     BORCON          equ	278	;# 
  5183     0117                     FVRCON          equ	279	;# 
  5184     0118                     DACCON0         equ	280	;# 
  5185     0119                     DACCON1         equ	281	;# 
  5186     018C                     ANSELA          equ	396	;# 
  5187     018D                     ANSELB          equ	397	;# 
  5188     018E                     ANSELC          equ	398	;# 
  5189     0197                     VREGCON         equ	407	;# 
  5190     0199                     RC1REG          equ	409	;# 
  5191     0199                     RCREG           equ	409	;# 
  5192     0199                     RCREG1          equ	409	;# 
  5193     019A                     TX1REG          equ	410	;# 
  5194     019A                     TXREG1          equ	410	;# 
  5195     019A                     TXREG           equ	410	;# 
  5196     019B                     SP1BRG          equ	411	;# 
  5197     019B                     SPBRG           equ	411	;# 
  5198     019B                     SP1BRGL         equ	411	;# 
  5199     019B                     SPBRG1          equ	411	;# 
  5200     019B                     SPBRGL          equ	411	;# 
  5201     019C                     SP1BRGH         equ	412	;# 
  5202     019C                     SPBRGH          equ	412	;# 
  5203     019C                     SPBRGH1         equ	412	;# 
  5204     019D                     RC1STA          equ	413	;# 
  5205     019D                     RCSTA1          equ	413	;# 
  5206     019D                     RCSTA           equ	413	;# 
  5207     019E                     TX1STA          equ	414	;# 
  5208     019E                     TXSTA1          equ	414	;# 
  5209     019E                     TXSTA           equ	414	;# 
  5210     019F                     BAUD1CON        equ	415	;# 
  5211     019F                     BAUDCON1        equ	415	;# 
  5212     019F                     BAUDCTL1        equ	415	;# 
  5213     019F                     BAUDCON         equ	415	;# 
  5214     019F                     BAUDCTL         equ	415	;# 
  5215     020C                     WPUA            equ	524	;# 
  5216     020D                     WPUB            equ	525	;# 
  5217     020E                     WPUC            equ	526	;# 
  5218     0211                     SSP1BUF         equ	529	;# 
  5219     0211                     SSPBUF          equ	529	;# 
  5220     0212                     SSP1ADD         equ	530	;# 
  5221     0212                     SSPADD          equ	530	;# 
  5222     0213                     SSP1MSK         equ	531	;# 
  5223     0213                     SSPMSK          equ	531	;# 
  5224     0214                     SSP1STAT        equ	532	;# 
  5225     0214                     SSPSTAT         equ	532	;# 
  5226     0215                     SSP1CON1        equ	533	;# 
  5227     0215                     SSPCON          equ	533	;# 
  5228     0215                     SSPCON1         equ	533	;# 
  5229     0215                     SSP1CON         equ	533	;# 
  5230     0216                     SSP1CON2        equ	534	;# 
  5231     0216                     SSPCON2         equ	534	;# 
  5232     0217                     SSP1CON3        equ	535	;# 
  5233     0217                     SSPCON3         equ	535	;# 
  5234     0219                     SSP2BUF         equ	537	;# 
  5235     021A                     SSP2ADD         equ	538	;# 
  5236     021B                     SSP2MSK         equ	539	;# 
  5237     021C                     SSP2STAT        equ	540	;# 
  5238     021D                     SSP2CON1        equ	541	;# 
  5239     021D                     SSP2CON         equ	541	;# 
  5240     021E                     SSP2CON2        equ	542	;# 
  5241     021F                     SSP2CON3        equ	543	;# 
  5242     028C                     ODCONA          equ	652	;# 
  5243     028D                     ODCONB          equ	653	;# 
  5244     028E                     ODCONC          equ	654	;# 
  5245     0291                     CCPR1           equ	657	;# 
  5246     0291                     CCPR1L          equ	657	;# 
  5247     0292                     CCPR1H          equ	658	;# 
  5248     0293                     CCP1CON         equ	659	;# 
  5249     0294                     CCP1CAP         equ	660	;# 
  5250     0295                     CCPR2           equ	661	;# 
  5251     0295                     CCPR2L          equ	661	;# 
  5252     0296                     CCPR2H          equ	662	;# 
  5253     0297                     CCP2CON         equ	663	;# 
  5254     0298                     CCP2CAP         equ	664	;# 
  5255     029F                     CCPTMRS         equ	671	;# 
  5256     030C                     SLRCONA         equ	780	;# 
  5257     030D                     SLRCONB         equ	781	;# 
  5258     030E                     SLRCONC         equ	782	;# 
  5259     0311                     CCPR3           equ	785	;# 
  5260     0311                     CCPR3L          equ	785	;# 
  5261     0312                     CCPR3H          equ	786	;# 
  5262     0313                     CCP3CON         equ	787	;# 
  5263     0314                     CCP3CAP         equ	788	;# 
  5264     0315                     CCPR4           equ	789	;# 
  5265     0315                     CCPR4L          equ	789	;# 
  5266     0316                     CCPR4H          equ	790	;# 
  5267     0317                     CCP4CON         equ	791	;# 
  5268     0318                     CCP4CAP         equ	792	;# 
  5269     038C                     INLVLA          equ	908	;# 
  5270     038D                     INLVLB          equ	909	;# 
  5271     038E                     INLVLC          equ	910	;# 
  5272     0391                     IOCAP           equ	913	;# 
  5273     0392                     IOCAN           equ	914	;# 
  5274     0393                     IOCAF           equ	915	;# 
  5275     0394                     IOCBP           equ	916	;# 
  5276     0395                     IOCBN           equ	917	;# 
  5277     0396                     IOCBF           equ	918	;# 
  5278     0397                     IOCCP           equ	919	;# 
  5279     0398                     IOCCN           equ	920	;# 
  5280     0399                     IOCCF           equ	921	;# 
  5281     039A                     CLKRCON         equ	922	;# 
  5282     039C                     MDCON           equ	924	;# 
  5283     039D                     MDSRC           equ	925	;# 
  5284     039E                     MDCARH          equ	926	;# 
  5285     039F                     MDCARL          equ	927	;# 
  5286     0411                     TMR3            equ	1041	;# 
  5287     0411                     TMR3L           equ	1041	;# 
  5288     0412                     TMR3H           equ	1042	;# 
  5289     0413                     T3CON           equ	1043	;# 
  5290     0414                     T3GCON          equ	1044	;# 
  5291     0415                     TMR4            equ	1045	;# 
  5292     0416                     PR4             equ	1046	;# 
  5293     0417                     T4CON           equ	1047	;# 
  5294     0418                     TMR5            equ	1048	;# 
  5295     0418                     TMR5L           equ	1048	;# 
  5296     0419                     TMR5H           equ	1049	;# 
  5297     041A                     T5CON           equ	1050	;# 
  5298     041B                     T5GCON          equ	1051	;# 
  5299     041C                     TMR6            equ	1052	;# 
  5300     041D                     PR6             equ	1053	;# 
  5301     041E                     T6CON           equ	1054	;# 
  5302     041F                     CCDCON          equ	1055	;# 
  5303     0498                     NCO1ACC         equ	1176	;# 
  5304     0498                     NCO1ACCL        equ	1176	;# 
  5305     0499                     NCO1ACCH        equ	1177	;# 
  5306     049A                     NCO1ACCU        equ	1178	;# 
  5307     049B                     NCO1INC         equ	1179	;# 
  5308     049B                     NCO1INCL        equ	1179	;# 
  5309     049C                     NCO1INCH        equ	1180	;# 
  5310     049D                     NCO1INCU        equ	1181	;# 
  5311     049E                     NCO1CON         equ	1182	;# 
  5312     049F                     NCO1CLK         equ	1183	;# 
  5313     0617                     PWM5DCL         equ	1559	;# 
  5314     0618                     PWM5DCH         equ	1560	;# 
  5315     0619                     PWM5CON         equ	1561	;# 
  5316     0619                     PWM5CON0        equ	1561	;# 
  5317     061A                     PWM6DCL         equ	1562	;# 
  5318     061B                     PWM6DCH         equ	1563	;# 
  5319     061C                     PWM6CON         equ	1564	;# 
  5320     061C                     PWM6CON0        equ	1564	;# 
  5321     061F                     PWMTMRS         equ	1567	;# 
  5322     0691                     CWG1CLKCON      equ	1681	;# 
  5323     0692                     CWG1DAT         equ	1682	;# 
  5324     0693                     CWG1DBR         equ	1683	;# 
  5325     0694                     CWG1DBF         equ	1684	;# 
  5326     0695                     CWG1CON0        equ	1685	;# 
  5327     0696                     CWG1CON1        equ	1686	;# 
  5328     0697                     CWG1AS0         equ	1687	;# 
  5329     0698                     CWG1AS1         equ	1688	;# 
  5330     0699                     CWG1STR         equ	1689	;# 
  5331     0711                     CWG2CLKCON      equ	1809	;# 
  5332     0712                     CWG2DAT         equ	1810	;# 
  5333     0713                     CWG2DBR         equ	1811	;# 
  5334     0714                     CWG2DBF         equ	1812	;# 
  5335     0715                     CWG2CON0        equ	1813	;# 
  5336     0716                     CWG2CON1        equ	1814	;# 
  5337     0717                     CWG2AS0         equ	1815	;# 
  5338     0718                     CWG2AS1         equ	1816	;# 
  5339     0719                     CWG2STR         equ	1817	;# 
  5340     0891                     NVMADR          equ	2193	;# 
  5341     0891                     EEADR           equ	2193	;# 
  5342     0891                     PMADR           equ	2193	;# 
  5343     0891                     NVMADRL         equ	2193	;# 
  5344     0891                     EEADRL          equ	2193	;# 
  5345     0891                     PMADRL          equ	2193	;# 
  5346     0892                     NVMADRH         equ	2194	;# 
  5347     0892                     EEADRH          equ	2194	;# 
  5348     0892                     PMADRH          equ	2194	;# 
  5349     0893                     NVMDAT          equ	2195	;# 
  5350     0893                     EEDAT           equ	2195	;# 
  5351     0893                     PMDAT           equ	2195	;# 
  5352     0893                     NVMDATL         equ	2195	;# 
  5353     0893                     EEDATL          equ	2195	;# 
  5354     0893                     PMDATL          equ	2195	;# 
  5355     0894                     NVMDATH         equ	2196	;# 
  5356     0894                     EEDATH          equ	2196	;# 
  5357     0894                     PMDATH          equ	2196	;# 
  5358     0895                     NVMCON1         equ	2197	;# 
  5359     0895                     EECON1          equ	2197	;# 
  5360     0895                     PMCON1          equ	2197	;# 
  5361     0896                     NVMCON2         equ	2198	;# 
  5362     0896                     EECON2          equ	2198	;# 
  5363     0896                     PMCON2          equ	2198	;# 
  5364     089B                     PCON0           equ	2203	;# 
  5365     0911                     PMD0            equ	2321	;# 
  5366     0912                     PMD1            equ	2322	;# 
  5367     0913                     PMD2            equ	2323	;# 
  5368     0914                     PMD3            equ	2324	;# 
  5369     0915                     PMD4            equ	2325	;# 
  5370     0916                     PMD5            equ	2326	;# 
  5371     0918                     CPUDOZE         equ	2328	;# 
  5372     0919                     OSCCON1         equ	2329	;# 
  5373     091A                     OSCCON2         equ	2330	;# 
  5374     091B                     OSCCON3         equ	2331	;# 
  5375     091C                     OSCSTAT1        equ	2332	;# 
  5376     091D                     OSCEN           equ	2333	;# 
  5377     091E                     OSCTUNE         equ	2334	;# 
  5378     091F                     OSCFRQ          equ	2335	;# 
  5379     0E0F                     PPSLOCK         equ	3599	;# 
  5380     0E10                     INTPPS          equ	3600	;# 
  5381     0E11                     T0CKIPPS        equ	3601	;# 
  5382     0E12                     T1CKIPPS        equ	3602	;# 
  5383     0E13                     T1GPPS          equ	3603	;# 
  5384     0E14                     CCP1PPS         equ	3604	;# 
  5385     0E15                     CCP2PPS         equ	3605	;# 
  5386     0E16                     CCP3PPS         equ	3606	;# 
  5387     0E17                     CCP4PPS         equ	3607	;# 
  5388     0E18                     CWG1PPS         equ	3608	;# 
  5389     0E19                     CWG2PPS         equ	3609	;# 
  5390     0E1A                     MDCIN1PPS       equ	3610	;# 
  5391     0E1B                     MDCIN2PPS       equ	3611	;# 
  5392     0E1C                     MDMINPPS        equ	3612	;# 
  5393     0E1D                     SSP2CLKPPS      equ	3613	;# 
  5394     0E1E                     SSP2DATPPS      equ	3614	;# 
  5395     0E1F                     SSP2SSPPS       equ	3615	;# 
  5396     0E20                     SSP1CLKPPS      equ	3616	;# 
  5397     0E21                     SSP1DATPPS      equ	3617	;# 
  5398     0E22                     SSP1SSPPS       equ	3618	;# 
  5399     0E24                     RXPPS           equ	3620	;# 
  5400     0E25                     TXPPS           equ	3621	;# 
  5401     0E28                     CLCIN0PPS       equ	3624	;# 
  5402     0E29                     CLCIN1PPS       equ	3625	;# 
  5403     0E2A                     CLCIN2PPS       equ	3626	;# 
  5404     0E2B                     CLCIN3PPS       equ	3627	;# 
  5405     0E2C                     T3CKIPPS        equ	3628	;# 
  5406     0E2D                     T3GPPS          equ	3629	;# 
  5407     0E2E                     T5CKIPPS        equ	3630	;# 
  5408     0E2F                     T5GPPS          equ	3631	;# 
  5409     0E90                     RA0PPS          equ	3728	;# 
  5410     0E91                     RA1PPS          equ	3729	;# 
  5411     0E92                     RA2PPS          equ	3730	;# 
  5412     0E94                     RA4PPS          equ	3732	;# 
  5413     0E95                     RA5PPS          equ	3733	;# 
  5414     0E9C                     RB4PPS          equ	3740	;# 
  5415     0E9D                     RB5PPS          equ	3741	;# 
  5416     0E9E                     RB6PPS          equ	3742	;# 
  5417     0E9F                     RB7PPS          equ	3743	;# 
  5418     0EA0                     RC0PPS          equ	3744	;# 
  5419     0EA1                     RC1PPS          equ	3745	;# 
  5420     0EA2                     RC2PPS          equ	3746	;# 
  5421     0EA3                     RC3PPS          equ	3747	;# 
  5422     0EA4                     RC4PPS          equ	3748	;# 
  5423     0EA5                     RC5PPS          equ	3749	;# 
  5424     0EA6                     RC6PPS          equ	3750	;# 
  5425     0EA7                     RC7PPS          equ	3751	;# 
  5426     0F0F                     CLCDATA         equ	3855	;# 
  5427     0F10                     CLC1CON         equ	3856	;# 
  5428     0F11                     CLC1POL         equ	3857	;# 
  5429     0F12                     CLC1SEL0        equ	3858	;# 
  5430     0F13                     CLC1SEL1        equ	3859	;# 
  5431     0F14                     CLC1SEL2        equ	3860	;# 
  5432     0F15                     CLC1SEL3        equ	3861	;# 
  5433     0F16                     CLC1GLS0        equ	3862	;# 
  5434     0F17                     CLC1GLS1        equ	3863	;# 
  5435     0F18                     CLC1GLS2        equ	3864	;# 
  5436     0F19                     CLC1GLS3        equ	3865	;# 
  5437     0F1A                     CLC2CON         equ	3866	;# 
  5438     0F1B                     CLC2POL         equ	3867	;# 
  5439     0F1C                     CLC2SEL0        equ	3868	;# 
  5440     0F1D                     CLC2SEL1        equ	3869	;# 
  5441     0F1E                     CLC2SEL2        equ	3870	;# 
  5442     0F1F                     CLC2SEL3        equ	3871	;# 
  5443     0F20                     CLC2GLS0        equ	3872	;# 
  5444     0F21                     CLC2GLS1        equ	3873	;# 
  5445     0F22                     CLC2GLS2        equ	3874	;# 
  5446     0F23                     CLC2GLS3        equ	3875	;# 
  5447     0F24                     CLC3CON         equ	3876	;# 
  5448     0F25                     CLC3POL         equ	3877	;# 
  5449     0F26                     CLC3SEL0        equ	3878	;# 
  5450     0F27                     CLC3SEL1        equ	3879	;# 
  5451     0F28                     CLC3SEL2        equ	3880	;# 
  5452     0F29                     CLC3SEL3        equ	3881	;# 
  5453     0F2A                     CLC3GLS0        equ	3882	;# 
  5454     0F2B                     CLC3GLS1        equ	3883	;# 
  5455     0F2C                     CLC3GLS2        equ	3884	;# 
  5456     0F2D                     CLC3GLS3        equ	3885	;# 
  5457     0F2E                     CLC4CON         equ	3886	;# 
  5458     0F2F                     CLC4POL         equ	3887	;# 
  5459     0F30                     CLC4SEL0        equ	3888	;# 
  5460     0F31                     CLC4SEL1        equ	3889	;# 
  5461     0F32                     CLC4SEL2        equ	3890	;# 
  5462     0F33                     CLC4SEL3        equ	3891	;# 
  5463     0F34                     CLC4GLS0        equ	3892	;# 
  5464     0F35                     CLC4GLS1        equ	3893	;# 
  5465     0F36                     CLC4GLS2        equ	3894	;# 
  5466     0F37                     CLC4GLS3        equ	3895	;# 
  5467     0FE4                     STATUS_SHAD     equ	4068	;# 
  5468     0FE5                     WREG_SHAD       equ	4069	;# 
  5469     0FE6                     BSR_SHAD        equ	4070	;# 
  5470     0FE7                     PCLATH_SHAD     equ	4071	;# 
  5471     0FE8                     FSR0L_SHAD      equ	4072	;# 
  5472     0FE9                     FSR0H_SHAD      equ	4073	;# 
  5473     0FEA                     FSR1L_SHAD      equ	4074	;# 
  5474     0FEB                     FSR1H_SHAD      equ	4075	;# 
  5475     0FED                     STKPTR          equ	4077	;# 
  5476     0FEE                     TOSL            equ	4078	;# 
  5477     0FEF                     TOSH            equ	4079	;# 
  5478     0000                     INDF0           equ	0	;# 
  5479     0001                     INDF1           equ	1	;# 
  5480     0002                     PCL             equ	2	;# 
  5481     0003                     STATUS          equ	3	;# 
  5482     0004                     FSR0L           equ	4	;# 
  5483     0005                     FSR0H           equ	5	;# 
  5484     0006                     FSR1L           equ	6	;# 
  5485     0007                     FSR1H           equ	7	;# 
  5486     0008                     BSR             equ	8	;# 
  5487     0009                     WREG            equ	9	;# 
  5488     000A                     PCLATH          equ	10	;# 
  5489     000B                     INTCON          equ	11	;# 
  5490     000C                     PORTA           equ	12	;# 
  5491     000D                     PORTB           equ	13	;# 
  5492     000E                     PORTC           equ	14	;# 
  5493     0010                     PIR0            equ	16	;# 
  5494     0011                     PIR1            equ	17	;# 
  5495     0012                     PIR2            equ	18	;# 
  5496     0013                     PIR3            equ	19	;# 
  5497     0014                     PIR4            equ	20	;# 
  5498     0015                     TMR0L           equ	21	;# 
  5499     0015                     TMR0            equ	21	;# 
  5500     0016                     TMR0H           equ	22	;# 
  5501     0016                     PR0             equ	22	;# 
  5502     0017                     T0CON0          equ	23	;# 
  5503     0018                     T0CON1          equ	24	;# 
  5504     0019                     TMR1            equ	25	;# 
  5505     0019                     TMR1L           equ	25	;# 
  5506     001A                     TMR1H           equ	26	;# 
  5507     001B                     T1CON           equ	27	;# 
  5508     001C                     T1GCON          equ	28	;# 
  5509     001D                     TMR2            equ	29	;# 
  5510     001E                     PR2             equ	30	;# 
  5511     001F                     T2CON           equ	31	;# 
  5512     008C                     TRISA           equ	140	;# 
  5513     008D                     TRISB           equ	141	;# 
  5514     008E                     TRISC           equ	142	;# 
  5515     0090                     PIE0            equ	144	;# 
  5516     0091                     PIE1            equ	145	;# 
  5517     0092                     PIE2            equ	146	;# 
  5518     0093                     PIE3            equ	147	;# 
  5519     0094                     PIE4            equ	148	;# 
  5520     0097                     WDTCON          equ	151	;# 
  5521     009B                     ADRES           equ	155	;# 
  5522     009B                     ADRESL          equ	155	;# 
  5523     009C                     ADRESH          equ	156	;# 
  5524     009D                     ADCON0          equ	157	;# 
  5525     009E                     ADCON1          equ	158	;# 
  5526     009F                     ADACT           equ	159	;# 
  5527     010C                     LATA            equ	268	;# 
  5528     010D                     LATB            equ	269	;# 
  5529     010E                     LATC            equ	270	;# 
  5530     0111                     CM1CON0         equ	273	;# 
  5531     0112                     CM1CON1         equ	274	;# 
  5532     0113                     CM2CON0         equ	275	;# 
  5533     0114                     CM2CON1         equ	276	;# 
  5534     0115                     CMOUT           equ	277	;# 
  5535     0116                     BORCON          equ	278	;# 
  5536     0117                     FVRCON          equ	279	;# 
  5537     0118                     DACCON0         equ	280	;# 
  5538     0119                     DACCON1         equ	281	;# 
  5539     018C                     ANSELA          equ	396	;# 
  5540     018D                     ANSELB          equ	397	;# 
  5541     018E                     ANSELC          equ	398	;# 
  5542     0197                     VREGCON         equ	407	;# 
  5543     0199                     RC1REG          equ	409	;# 
  5544     0199                     RCREG           equ	409	;# 
  5545     0199                     RCREG1          equ	409	;# 
  5546     019A                     TX1REG          equ	410	;# 
  5547     019A                     TXREG1          equ	410	;# 
  5548     019A                     TXREG           equ	410	;# 
  5549     019B                     SP1BRG          equ	411	;# 
  5550     019B                     SPBRG           equ	411	;# 
  5551     019B                     SP1BRGL         equ	411	;# 
  5552     019B                     SPBRG1          equ	411	;# 
  5553     019B                     SPBRGL          equ	411	;# 
  5554     019C                     SP1BRGH         equ	412	;# 
  5555     019C                     SPBRGH          equ	412	;# 
  5556     019C                     SPBRGH1         equ	412	;# 
  5557     019D                     RC1STA          equ	413	;# 
  5558     019D                     RCSTA1          equ	413	;# 
  5559     019D                     RCSTA           equ	413	;# 
  5560     019E                     TX1STA          equ	414	;# 
  5561     019E                     TXSTA1          equ	414	;# 
  5562     019E                     TXSTA           equ	414	;# 
  5563     019F                     BAUD1CON        equ	415	;# 
  5564     019F                     BAUDCON1        equ	415	;# 
  5565     019F                     BAUDCTL1        equ	415	;# 
  5566     019F                     BAUDCON         equ	415	;# 
  5567     019F                     BAUDCTL         equ	415	;# 
  5568     020C                     WPUA            equ	524	;# 
  5569     020D                     WPUB            equ	525	;# 
  5570     020E                     WPUC            equ	526	;# 
  5571     0211                     SSP1BUF         equ	529	;# 
  5572     0211                     SSPBUF          equ	529	;# 
  5573     0212                     SSP1ADD         equ	530	;# 
  5574     0212                     SSPADD          equ	530	;# 
  5575     0213                     SSP1MSK         equ	531	;# 
  5576     0213                     SSPMSK          equ	531	;# 
  5577     0214                     SSP1STAT        equ	532	;# 
  5578     0214                     SSPSTAT         equ	532	;# 
  5579     0215                     SSP1CON1        equ	533	;# 
  5580     0215                     SSPCON          equ	533	;# 
  5581     0215                     SSPCON1         equ	533	;# 
  5582     0215                     SSP1CON         equ	533	;# 
  5583     0216                     SSP1CON2        equ	534	;# 
  5584     0216                     SSPCON2         equ	534	;# 
  5585     0217                     SSP1CON3        equ	535	;# 
  5586     0217                     SSPCON3         equ	535	;# 
  5587     0219                     SSP2BUF         equ	537	;# 
  5588     021A                     SSP2ADD         equ	538	;# 
  5589     021B                     SSP2MSK         equ	539	;# 
  5590     021C                     SSP2STAT        equ	540	;# 
  5591     021D                     SSP2CON1        equ	541	;# 
  5592     021D                     SSP2CON         equ	541	;# 
  5593     021E                     SSP2CON2        equ	542	;# 
  5594     021F                     SSP2CON3        equ	543	;# 
  5595     028C                     ODCONA          equ	652	;# 
  5596     028D                     ODCONB          equ	653	;# 
  5597     028E                     ODCONC          equ	654	;# 
  5598     0291                     CCPR1           equ	657	;# 
  5599     0291                     CCPR1L          equ	657	;# 
  5600     0292                     CCPR1H          equ	658	;# 
  5601     0293                     CCP1CON         equ	659	;# 
  5602     0294                     CCP1CAP         equ	660	;# 
  5603     0295                     CCPR2           equ	661	;# 
  5604     0295                     CCPR2L          equ	661	;# 
  5605     0296                     CCPR2H          equ	662	;# 
  5606     0297                     CCP2CON         equ	663	;# 
  5607     0298                     CCP2CAP         equ	664	;# 
  5608     029F                     CCPTMRS         equ	671	;# 
  5609     030C                     SLRCONA         equ	780	;# 
  5610     030D                     SLRCONB         equ	781	;# 
  5611     030E                     SLRCONC         equ	782	;# 
  5612     0311                     CCPR3           equ	785	;# 
  5613     0311                     CCPR3L          equ	785	;# 
  5614     0312                     CCPR3H          equ	786	;# 
  5615     0313                     CCP3CON         equ	787	;# 
  5616     0314                     CCP3CAP         equ	788	;# 
  5617     0315                     CCPR4           equ	789	;# 
  5618     0315                     CCPR4L          equ	789	;# 
  5619     0316                     CCPR4H          equ	790	;# 
  5620     0317                     CCP4CON         equ	791	;# 
  5621     0318                     CCP4CAP         equ	792	;# 
  5622     038C                     INLVLA          equ	908	;# 
  5623     038D                     INLVLB          equ	909	;# 
  5624     038E                     INLVLC          equ	910	;# 
  5625     0391                     IOCAP           equ	913	;# 
  5626     0392                     IOCAN           equ	914	;# 
  5627     0393                     IOCAF           equ	915	;# 
  5628     0394                     IOCBP           equ	916	;# 
  5629     0395                     IOCBN           equ	917	;# 
  5630     0396                     IOCBF           equ	918	;# 
  5631     0397                     IOCCP           equ	919	;# 
  5632     0398                     IOCCN           equ	920	;# 
  5633     0399                     IOCCF           equ	921	;# 
  5634     039A                     CLKRCON         equ	922	;# 
  5635     039C                     MDCON           equ	924	;# 
  5636     039D                     MDSRC           equ	925	;# 
  5637     039E                     MDCARH          equ	926	;# 
  5638     039F                     MDCARL          equ	927	;# 
  5639     0411                     TMR3            equ	1041	;# 
  5640     0411                     TMR3L           equ	1041	;# 
  5641     0412                     TMR3H           equ	1042	;# 
  5642     0413                     T3CON           equ	1043	;# 
  5643     0414                     T3GCON          equ	1044	;# 
  5644     0415                     TMR4            equ	1045	;# 
  5645     0416                     PR4             equ	1046	;# 
  5646     0417                     T4CON           equ	1047	;# 
  5647     0418                     TMR5            equ	1048	;# 
  5648     0418                     TMR5L           equ	1048	;# 
  5649     0419                     TMR5H           equ	1049	;# 
  5650     041A                     T5CON           equ	1050	;# 
  5651     041B                     T5GCON          equ	1051	;# 
  5652     041C                     TMR6            equ	1052	;# 
  5653     041D                     PR6             equ	1053	;# 
  5654     041E                     T6CON           equ	1054	;# 
  5655     041F                     CCDCON          equ	1055	;# 
  5656     0498                     NCO1ACC         equ	1176	;# 
  5657     0498                     NCO1ACCL        equ	1176	;# 
  5658     0499                     NCO1ACCH        equ	1177	;# 
  5659     049A                     NCO1ACCU        equ	1178	;# 
  5660     049B                     NCO1INC         equ	1179	;# 
  5661     049B                     NCO1INCL        equ	1179	;# 
  5662     049C                     NCO1INCH        equ	1180	;# 
  5663     049D                     NCO1INCU        equ	1181	;# 
  5664     049E                     NCO1CON         equ	1182	;# 
  5665     049F                     NCO1CLK         equ	1183	;# 
  5666     0617                     PWM5DCL         equ	1559	;# 
  5667     0618                     PWM5DCH         equ	1560	;# 
  5668     0619                     PWM5CON         equ	1561	;# 
  5669     0619                     PWM5CON0        equ	1561	;# 
  5670     061A                     PWM6DCL         equ	1562	;# 
  5671     061B                     PWM6DCH         equ	1563	;# 
  5672     061C                     PWM6CON         equ	1564	;# 
  5673     061C                     PWM6CON0        equ	1564	;# 
  5674     061F                     PWMTMRS         equ	1567	;# 
  5675     0691                     CWG1CLKCON      equ	1681	;# 
  5676     0692                     CWG1DAT         equ	1682	;# 
  5677     0693                     CWG1DBR         equ	1683	;# 
  5678     0694                     CWG1DBF         equ	1684	;# 
  5679     0695                     CWG1CON0        equ	1685	;# 
  5680     0696                     CWG1CON1        equ	1686	;# 
  5681     0697                     CWG1AS0         equ	1687	;# 
  5682     0698                     CWG1AS1         equ	1688	;# 
  5683     0699                     CWG1STR         equ	1689	;# 
  5684     0711                     CWG2CLKCON      equ	1809	;# 
  5685     0712                     CWG2DAT         equ	1810	;# 
  5686     0713                     CWG2DBR         equ	1811	;# 
  5687     0714                     CWG2DBF         equ	1812	;# 
  5688     0715                     CWG2CON0        equ	1813	;# 
  5689     0716                     CWG2CON1        equ	1814	;# 
  5690     0717                     CWG2AS0         equ	1815	;# 
  5691     0718                     CWG2AS1         equ	1816	;# 
  5692     0719                     CWG2STR         equ	1817	;# 
  5693     0891                     NVMADR          equ	2193	;# 
  5694     0891                     EEADR           equ	2193	;# 
  5695     0891                     PMADR           equ	2193	;# 
  5696     0891                     NVMADRL         equ	2193	;# 
  5697     0891                     EEADRL          equ	2193	;# 
  5698     0891                     PMADRL          equ	2193	;# 
  5699     0892                     NVMADRH         equ	2194	;# 
  5700     0892                     EEADRH          equ	2194	;# 
  5701     0892                     PMADRH          equ	2194	;# 
  5702     0893                     NVMDAT          equ	2195	;# 
  5703     0893                     EEDAT           equ	2195	;# 
  5704     0893                     PMDAT           equ	2195	;# 
  5705     0893                     NVMDATL         equ	2195	;# 
  5706     0893                     EEDATL          equ	2195	;# 
  5707     0893                     PMDATL          equ	2195	;# 
  5708     0894                     NVMDATH         equ	2196	;# 
  5709     0894                     EEDATH          equ	2196	;# 
  5710     0894                     PMDATH          equ	2196	;# 
  5711     0895                     NVMCON1         equ	2197	;# 
  5712     0895                     EECON1          equ	2197	;# 
  5713     0895                     PMCON1          equ	2197	;# 
  5714     0896                     NVMCON2         equ	2198	;# 
  5715     0896                     EECON2          equ	2198	;# 
  5716     0896                     PMCON2          equ	2198	;# 
  5717     089B                     PCON0           equ	2203	;# 
  5718     0911                     PMD0            equ	2321	;# 
  5719     0912                     PMD1            equ	2322	;# 
  5720     0913                     PMD2            equ	2323	;# 
  5721     0914                     PMD3            equ	2324	;# 
  5722     0915                     PMD4            equ	2325	;# 
  5723     0916                     PMD5            equ	2326	;# 
  5724     0918                     CPUDOZE         equ	2328	;# 
  5725     0919                     OSCCON1         equ	2329	;# 
  5726     091A                     OSCCON2         equ	2330	;# 
  5727     091B                     OSCCON3         equ	2331	;# 
  5728     091C                     OSCSTAT1        equ	2332	;# 
  5729     091D                     OSCEN           equ	2333	;# 
  5730     091E                     OSCTUNE         equ	2334	;# 
  5731     091F                     OSCFRQ          equ	2335	;# 
  5732     0E0F                     PPSLOCK         equ	3599	;# 
  5733     0E10                     INTPPS          equ	3600	;# 
  5734     0E11                     T0CKIPPS        equ	3601	;# 
  5735     0E12                     T1CKIPPS        equ	3602	;# 
  5736     0E13                     T1GPPS          equ	3603	;# 
  5737     0E14                     CCP1PPS         equ	3604	;# 
  5738     0E15                     CCP2PPS         equ	3605	;# 
  5739     0E16                     CCP3PPS         equ	3606	;# 
  5740     0E17                     CCP4PPS         equ	3607	;# 
  5741     0E18                     CWG1PPS         equ	3608	;# 
  5742     0E19                     CWG2PPS         equ	3609	;# 
  5743     0E1A                     MDCIN1PPS       equ	3610	;# 
  5744     0E1B                     MDCIN2PPS       equ	3611	;# 
  5745     0E1C                     MDMINPPS        equ	3612	;# 
  5746     0E1D                     SSP2CLKPPS      equ	3613	;# 
  5747     0E1E                     SSP2DATPPS      equ	3614	;# 
  5748     0E1F                     SSP2SSPPS       equ	3615	;# 
  5749     0E20                     SSP1CLKPPS      equ	3616	;# 
  5750     0E21                     SSP1DATPPS      equ	3617	;# 
  5751     0E22                     SSP1SSPPS       equ	3618	;# 
  5752     0E24                     RXPPS           equ	3620	;# 
  5753     0E25                     TXPPS           equ	3621	;# 
  5754     0E28                     CLCIN0PPS       equ	3624	;# 
  5755     0E29                     CLCIN1PPS       equ	3625	;# 
  5756     0E2A                     CLCIN2PPS       equ	3626	;# 
  5757     0E2B                     CLCIN3PPS       equ	3627	;# 
  5758     0E2C                     T3CKIPPS        equ	3628	;# 
  5759     0E2D                     T3GPPS          equ	3629	;# 
  5760     0E2E                     T5CKIPPS        equ	3630	;# 
  5761     0E2F                     T5GPPS          equ	3631	;# 
  5762     0E90                     RA0PPS          equ	3728	;# 
  5763     0E91                     RA1PPS          equ	3729	;# 
  5764     0E92                     RA2PPS          equ	3730	;# 
  5765     0E94                     RA4PPS          equ	3732	;# 
  5766     0E95                     RA5PPS          equ	3733	;# 
  5767     0E9C                     RB4PPS          equ	3740	;# 
  5768     0E9D                     RB5PPS          equ	3741	;# 
  5769     0E9E                     RB6PPS          equ	3742	;# 
  5770     0E9F                     RB7PPS          equ	3743	;# 
  5771     0EA0                     RC0PPS          equ	3744	;# 
  5772     0EA1                     RC1PPS          equ	3745	;# 
  5773     0EA2                     RC2PPS          equ	3746	;# 
  5774     0EA3                     RC3PPS          equ	3747	;# 
  5775     0EA4                     RC4PPS          equ	3748	;# 
  5776     0EA5                     RC5PPS          equ	3749	;# 
  5777     0EA6                     RC6PPS          equ	3750	;# 
  5778     0EA7                     RC7PPS          equ	3751	;# 
  5779     0F0F                     CLCDATA         equ	3855	;# 
  5780     0F10                     CLC1CON         equ	3856	;# 
  5781     0F11                     CLC1POL         equ	3857	;# 
  5782     0F12                     CLC1SEL0        equ	3858	;# 
  5783     0F13                     CLC1SEL1        equ	3859	;# 
  5784     0F14                     CLC1SEL2        equ	3860	;# 
  5785     0F15                     CLC1SEL3        equ	3861	;# 
  5786     0F16                     CLC1GLS0        equ	3862	;# 
  5787     0F17                     CLC1GLS1        equ	3863	;# 
  5788     0F18                     CLC1GLS2        equ	3864	;# 
  5789     0F19                     CLC1GLS3        equ	3865	;# 
  5790     0F1A                     CLC2CON         equ	3866	;# 
  5791     0F1B                     CLC2POL         equ	3867	;# 
  5792     0F1C                     CLC2SEL0        equ	3868	;# 
  5793     0F1D                     CLC2SEL1        equ	3869	;# 
  5794     0F1E                     CLC2SEL2        equ	3870	;# 
  5795     0F1F                     CLC2SEL3        equ	3871	;# 
  5796     0F20                     CLC2GLS0        equ	3872	;# 
  5797     0F21                     CLC2GLS1        equ	3873	;# 
  5798     0F22                     CLC2GLS2        equ	3874	;# 
  5799     0F23                     CLC2GLS3        equ	3875	;# 
  5800     0F24                     CLC3CON         equ	3876	;# 
  5801     0F25                     CLC3POL         equ	3877	;# 
  5802     0F26                     CLC3SEL0        equ	3878	;# 
  5803     0F27                     CLC3SEL1        equ	3879	;# 
  5804     0F28                     CLC3SEL2        equ	3880	;# 
  5805     0F29                     CLC3SEL3        equ	3881	;# 
  5806     0F2A                     CLC3GLS0        equ	3882	;# 
  5807     0F2B                     CLC3GLS1        equ	3883	;# 
  5808     0F2C                     CLC3GLS2        equ	3884	;# 
  5809     0F2D                     CLC3GLS3        equ	3885	;# 
  5810     0F2E                     CLC4CON         equ	3886	;# 
  5811     0F2F                     CLC4POL         equ	3887	;# 
  5812     0F30                     CLC4SEL0        equ	3888	;# 
  5813     0F31                     CLC4SEL1        equ	3889	;# 
  5814     0F32                     CLC4SEL2        equ	3890	;# 
  5815     0F33                     CLC4SEL3        equ	3891	;# 
  5816     0F34                     CLC4GLS0        equ	3892	;# 
  5817     0F35                     CLC4GLS1        equ	3893	;# 
  5818     0F36                     CLC4GLS2        equ	3894	;# 
  5819     0F37                     CLC4GLS3        equ	3895	;# 
  5820     0FE4                     STATUS_SHAD     equ	4068	;# 
  5821     0FE5                     WREG_SHAD       equ	4069	;# 
  5822     0FE6                     BSR_SHAD        equ	4070	;# 
  5823     0FE7                     PCLATH_SHAD     equ	4071	;# 
  5824     0FE8                     FSR0L_SHAD      equ	4072	;# 
  5825     0FE9                     FSR0H_SHAD      equ	4073	;# 
  5826     0FEA                     FSR1L_SHAD      equ	4074	;# 
  5827     0FEB                     FSR1H_SHAD      equ	4075	;# 
  5828     0FED                     STKPTR          equ	4077	;# 
  5829     0FEE                     TOSL            equ	4078	;# 
  5830     0FEF                     TOSH            equ	4079	;# 
  5831     0000                     INDF0           equ	0	;# 
  5832     0001                     INDF1           equ	1	;# 
  5833     0002                     PCL             equ	2	;# 
  5834     0003                     STATUS          equ	3	;# 
  5835     0004                     FSR0L           equ	4	;# 
  5836     0005                     FSR0H           equ	5	;# 
  5837     0006                     FSR1L           equ	6	;# 
  5838     0007                     FSR1H           equ	7	;# 
  5839     0008                     BSR             equ	8	;# 
  5840     0009                     WREG            equ	9	;# 
  5841     000A                     PCLATH          equ	10	;# 
  5842     000B                     INTCON          equ	11	;# 
  5843     000C                     PORTA           equ	12	;# 
  5844     000D                     PORTB           equ	13	;# 
  5845     000E                     PORTC           equ	14	;# 
  5846     0010                     PIR0            equ	16	;# 
  5847     0011                     PIR1            equ	17	;# 
  5848     0012                     PIR2            equ	18	;# 
  5849     0013                     PIR3            equ	19	;# 
  5850     0014                     PIR4            equ	20	;# 
  5851     0015                     TMR0L           equ	21	;# 
  5852     0015                     TMR0            equ	21	;# 
  5853     0016                     TMR0H           equ	22	;# 
  5854     0016                     PR0             equ	22	;# 
  5855     0017                     T0CON0          equ	23	;# 
  5856     0018                     T0CON1          equ	24	;# 
  5857     0019                     TMR1            equ	25	;# 
  5858     0019                     TMR1L           equ	25	;# 
  5859     001A                     TMR1H           equ	26	;# 
  5860     001B                     T1CON           equ	27	;# 
  5861     001C                     T1GCON          equ	28	;# 
  5862     001D                     TMR2            equ	29	;# 
  5863     001E                     PR2             equ	30	;# 
  5864     001F                     T2CON           equ	31	;# 
  5865     008C                     TRISA           equ	140	;# 
  5866     008D                     TRISB           equ	141	;# 
  5867     008E                     TRISC           equ	142	;# 
  5868     0090                     PIE0            equ	144	;# 
  5869     0091                     PIE1            equ	145	;# 
  5870     0092                     PIE2            equ	146	;# 
  5871     0093                     PIE3            equ	147	;# 
  5872     0094                     PIE4            equ	148	;# 
  5873     0097                     WDTCON          equ	151	;# 
  5874     009B                     ADRES           equ	155	;# 
  5875     009B                     ADRESL          equ	155	;# 
  5876     009C                     ADRESH          equ	156	;# 
  5877     009D                     ADCON0          equ	157	;# 
  5878     009E                     ADCON1          equ	158	;# 
  5879     009F                     ADACT           equ	159	;# 
  5880     010C                     LATA            equ	268	;# 
  5881     010D                     LATB            equ	269	;# 
  5882     010E                     LATC            equ	270	;# 
  5883     0111                     CM1CON0         equ	273	;# 
  5884     0112                     CM1CON1         equ	274	;# 
  5885     0113                     CM2CON0         equ	275	;# 
  5886     0114                     CM2CON1         equ	276	;# 
  5887     0115                     CMOUT           equ	277	;# 
  5888     0116                     BORCON          equ	278	;# 
  5889     0117                     FVRCON          equ	279	;# 
  5890     0118                     DACCON0         equ	280	;# 
  5891     0119                     DACCON1         equ	281	;# 
  5892     018C                     ANSELA          equ	396	;# 
  5893     018D                     ANSELB          equ	397	;# 
  5894     018E                     ANSELC          equ	398	;# 
  5895     0197                     VREGCON         equ	407	;# 
  5896     0199                     RC1REG          equ	409	;# 
  5897     0199                     RCREG           equ	409	;# 
  5898     0199                     RCREG1          equ	409	;# 
  5899     019A                     TX1REG          equ	410	;# 
  5900     019A                     TXREG1          equ	410	;# 
  5901     019A                     TXREG           equ	410	;# 
  5902     019B                     SP1BRG          equ	411	;# 
  5903     019B                     SPBRG           equ	411	;# 
  5904     019B                     SP1BRGL         equ	411	;# 
  5905     019B                     SPBRG1          equ	411	;# 
  5906     019B                     SPBRGL          equ	411	;# 
  5907     019C                     SP1BRGH         equ	412	;# 
  5908     019C                     SPBRGH          equ	412	;# 
  5909     019C                     SPBRGH1         equ	412	;# 
  5910     019D                     RC1STA          equ	413	;# 
  5911     019D                     RCSTA1          equ	413	;# 
  5912     019D                     RCSTA           equ	413	;# 
  5913     019E                     TX1STA          equ	414	;# 
  5914     019E                     TXSTA1          equ	414	;# 
  5915     019E                     TXSTA           equ	414	;# 
  5916     019F                     BAUD1CON        equ	415	;# 
  5917     019F                     BAUDCON1        equ	415	;# 
  5918     019F                     BAUDCTL1        equ	415	;# 
  5919     019F                     BAUDCON         equ	415	;# 
  5920     019F                     BAUDCTL         equ	415	;# 
  5921     020C                     WPUA            equ	524	;# 
  5922     020D                     WPUB            equ	525	;# 
  5923     020E                     WPUC            equ	526	;# 
  5924     0211                     SSP1BUF         equ	529	;# 
  5925     0211                     SSPBUF          equ	529	;# 
  5926     0212                     SSP1ADD         equ	530	;# 
  5927     0212                     SSPADD          equ	530	;# 
  5928     0213                     SSP1MSK         equ	531	;# 
  5929     0213                     SSPMSK          equ	531	;# 
  5930     0214                     SSP1STAT        equ	532	;# 
  5931     0214                     SSPSTAT         equ	532	;# 
  5932     0215                     SSP1CON1        equ	533	;# 
  5933     0215                     SSPCON          equ	533	;# 
  5934     0215                     SSPCON1         equ	533	;# 
  5935     0215                     SSP1CON         equ	533	;# 
  5936     0216                     SSP1CON2        equ	534	;# 
  5937     0216                     SSPCON2         equ	534	;# 
  5938     0217                     SSP1CON3        equ	535	;# 
  5939     0217                     SSPCON3         equ	535	;# 
  5940     0219                     SSP2BUF         equ	537	;# 
  5941     021A                     SSP2ADD         equ	538	;# 
  5942     021B                     SSP2MSK         equ	539	;# 
  5943     021C                     SSP2STAT        equ	540	;# 
  5944     021D                     SSP2CON1        equ	541	;# 
  5945     021D                     SSP2CON         equ	541	;# 
  5946     021E                     SSP2CON2        equ	542	;# 
  5947     021F                     SSP2CON3        equ	543	;# 
  5948     028C                     ODCONA          equ	652	;# 
  5949     028D                     ODCONB          equ	653	;# 
  5950     028E                     ODCONC          equ	654	;# 
  5951     0291                     CCPR1           equ	657	;# 
  5952     0291                     CCPR1L          equ	657	;# 
  5953     0292                     CCPR1H          equ	658	;# 
  5954     0293                     CCP1CON         equ	659	;# 
  5955     0294                     CCP1CAP         equ	660	;# 
  5956     0295                     CCPR2           equ	661	;# 
  5957     0295                     CCPR2L          equ	661	;# 
  5958     0296                     CCPR2H          equ	662	;# 
  5959     0297                     CCP2CON         equ	663	;# 
  5960     0298                     CCP2CAP         equ	664	;# 
  5961     029F                     CCPTMRS         equ	671	;# 
  5962     030C                     SLRCONA         equ	780	;# 
  5963     030D                     SLRCONB         equ	781	;# 
  5964     030E                     SLRCONC         equ	782	;# 
  5965     0311                     CCPR3           equ	785	;# 
  5966     0311                     CCPR3L          equ	785	;# 
  5967     0312                     CCPR3H          equ	786	;# 
  5968     0313                     CCP3CON         equ	787	;# 
  5969     0314                     CCP3CAP         equ	788	;# 
  5970     0315                     CCPR4           equ	789	;# 
  5971     0315                     CCPR4L          equ	789	;# 
  5972     0316                     CCPR4H          equ	790	;# 
  5973     0317                     CCP4CON         equ	791	;# 
  5974     0318                     CCP4CAP         equ	792	;# 
  5975     038C                     INLVLA          equ	908	;# 
  5976     038D                     INLVLB          equ	909	;# 
  5977     038E                     INLVLC          equ	910	;# 
  5978     0391                     IOCAP           equ	913	;# 
  5979     0392                     IOCAN           equ	914	;# 
  5980     0393                     IOCAF           equ	915	;# 
  5981     0394                     IOCBP           equ	916	;# 
  5982     0395                     IOCBN           equ	917	;# 
  5983     0396                     IOCBF           equ	918	;# 
  5984     0397                     IOCCP           equ	919	;# 
  5985     0398                     IOCCN           equ	920	;# 
  5986     0399                     IOCCF           equ	921	;# 
  5987     039A                     CLKRCON         equ	922	;# 
  5988     039C                     MDCON           equ	924	;# 
  5989     039D                     MDSRC           equ	925	;# 
  5990     039E                     MDCARH          equ	926	;# 
  5991     039F                     MDCARL          equ	927	;# 
  5992     0411                     TMR3            equ	1041	;# 
  5993     0411                     TMR3L           equ	1041	;# 
  5994     0412                     TMR3H           equ	1042	;# 
  5995     0413                     T3CON           equ	1043	;# 
  5996     0414                     T3GCON          equ	1044	;# 
  5997     0415                     TMR4            equ	1045	;# 
  5998     0416                     PR4             equ	1046	;# 
  5999     0417                     T4CON           equ	1047	;# 
  6000     0418                     TMR5            equ	1048	;# 
  6001     0418                     TMR5L           equ	1048	;# 
  6002     0419                     TMR5H           equ	1049	;# 
  6003     041A                     T5CON           equ	1050	;# 
  6004     041B                     T5GCON          equ	1051	;# 
  6005     041C                     TMR6            equ	1052	;# 
  6006     041D                     PR6             equ	1053	;# 
  6007     041E                     T6CON           equ	1054	;# 
  6008     041F                     CCDCON          equ	1055	;# 
  6009     0498                     NCO1ACC         equ	1176	;# 
  6010     0498                     NCO1ACCL        equ	1176	;# 
  6011     0499                     NCO1ACCH        equ	1177	;# 
  6012     049A                     NCO1ACCU        equ	1178	;# 
  6013     049B                     NCO1INC         equ	1179	;# 
  6014     049B                     NCO1INCL        equ	1179	;# 
  6015     049C                     NCO1INCH        equ	1180	;# 
  6016     049D                     NCO1INCU        equ	1181	;# 
  6017     049E                     NCO1CON         equ	1182	;# 
  6018     049F                     NCO1CLK         equ	1183	;# 
  6019     0617                     PWM5DCL         equ	1559	;# 
  6020     0618                     PWM5DCH         equ	1560	;# 
  6021     0619                     PWM5CON         equ	1561	;# 
  6022     0619                     PWM5CON0        equ	1561	;# 
  6023     061A                     PWM6DCL         equ	1562	;# 
  6024     061B                     PWM6DCH         equ	1563	;# 
  6025     061C                     PWM6CON         equ	1564	;# 
  6026     061C                     PWM6CON0        equ	1564	;# 
  6027     061F                     PWMTMRS         equ	1567	;# 
  6028     0691                     CWG1CLKCON      equ	1681	;# 
  6029     0692                     CWG1DAT         equ	1682	;# 
  6030     0693                     CWG1DBR         equ	1683	;# 
  6031     0694                     CWG1DBF         equ	1684	;# 
  6032     0695                     CWG1CON0        equ	1685	;# 
  6033     0696                     CWG1CON1        equ	1686	;# 
  6034     0697                     CWG1AS0         equ	1687	;# 
  6035     0698                     CWG1AS1         equ	1688	;# 
  6036     0699                     CWG1STR         equ	1689	;# 
  6037     0711                     CWG2CLKCON      equ	1809	;# 
  6038     0712                     CWG2DAT         equ	1810	;# 
  6039     0713                     CWG2DBR         equ	1811	;# 
  6040     0714                     CWG2DBF         equ	1812	;# 
  6041     0715                     CWG2CON0        equ	1813	;# 
  6042     0716                     CWG2CON1        equ	1814	;# 
  6043     0717                     CWG2AS0         equ	1815	;# 
  6044     0718                     CWG2AS1         equ	1816	;# 
  6045     0719                     CWG2STR         equ	1817	;# 
  6046     0891                     NVMADR          equ	2193	;# 
  6047     0891                     EEADR           equ	2193	;# 
  6048     0891                     PMADR           equ	2193	;# 
  6049     0891                     NVMADRL         equ	2193	;# 
  6050     0891                     EEADRL          equ	2193	;# 
  6051     0891                     PMADRL          equ	2193	;# 
  6052     0892                     NVMADRH         equ	2194	;# 
  6053     0892                     EEADRH          equ	2194	;# 
  6054     0892                     PMADRH          equ	2194	;# 
  6055     0893                     NVMDAT          equ	2195	;# 
  6056     0893                     EEDAT           equ	2195	;# 
  6057     0893                     PMDAT           equ	2195	;# 
  6058     0893                     NVMDATL         equ	2195	;# 
  6059     0893                     EEDATL          equ	2195	;# 
  6060     0893                     PMDATL          equ	2195	;# 
  6061     0894                     NVMDATH         equ	2196	;# 
  6062     0894                     EEDATH          equ	2196	;# 
  6063     0894                     PMDATH          equ	2196	;# 
  6064     0895                     NVMCON1         equ	2197	;# 
  6065     0895                     EECON1          equ	2197	;# 
  6066     0895                     PMCON1          equ	2197	;# 
  6067     0896                     NVMCON2         equ	2198	;# 
  6068     0896                     EECON2          equ	2198	;# 
  6069     0896                     PMCON2          equ	2198	;# 
  6070     089B                     PCON0           equ	2203	;# 
  6071     0911                     PMD0            equ	2321	;# 
  6072     0912                     PMD1            equ	2322	;# 
  6073     0913                     PMD2            equ	2323	;# 
  6074     0914                     PMD3            equ	2324	;# 
  6075     0915                     PMD4            equ	2325	;# 
  6076     0916                     PMD5            equ	2326	;# 
  6077     0918                     CPUDOZE         equ	2328	;# 
  6078     0919                     OSCCON1         equ	2329	;# 
  6079     091A                     OSCCON2         equ	2330	;# 
  6080     091B                     OSCCON3         equ	2331	;# 
  6081     091C                     OSCSTAT1        equ	2332	;# 
  6082     091D                     OSCEN           equ	2333	;# 
  6083     091E                     OSCTUNE         equ	2334	;# 
  6084     091F                     OSCFRQ          equ	2335	;# 
  6085     0E0F                     PPSLOCK         equ	3599	;# 
  6086     0E10                     INTPPS          equ	3600	;# 
  6087     0E11                     T0CKIPPS        equ	3601	;# 
  6088     0E12                     T1CKIPPS        equ	3602	;# 
  6089     0E13                     T1GPPS          equ	3603	;# 
  6090     0E14                     CCP1PPS         equ	3604	;# 
  6091     0E15                     CCP2PPS         equ	3605	;# 
  6092     0E16                     CCP3PPS         equ	3606	;# 
  6093     0E17                     CCP4PPS         equ	3607	;# 
  6094     0E18                     CWG1PPS         equ	3608	;# 
  6095     0E19                     CWG2PPS         equ	3609	;# 
  6096     0E1A                     MDCIN1PPS       equ	3610	;# 
  6097     0E1B                     MDCIN2PPS       equ	3611	;# 
  6098     0E1C                     MDMINPPS        equ	3612	;# 
  6099     0E1D                     SSP2CLKPPS      equ	3613	;# 
  6100     0E1E                     SSP2DATPPS      equ	3614	;# 
  6101     0E1F                     SSP2SSPPS       equ	3615	;# 
  6102     0E20                     SSP1CLKPPS      equ	3616	;# 
  6103     0E21                     SSP1DATPPS      equ	3617	;# 
  6104     0E22                     SSP1SSPPS       equ	3618	;# 
  6105     0E24                     RXPPS           equ	3620	;# 
  6106     0E25                     TXPPS           equ	3621	;# 
  6107     0E28                     CLCIN0PPS       equ	3624	;# 
  6108     0E29                     CLCIN1PPS       equ	3625	;# 
  6109     0E2A                     CLCIN2PPS       equ	3626	;# 
  6110     0E2B                     CLCIN3PPS       equ	3627	;# 
  6111     0E2C                     T3CKIPPS        equ	3628	;# 
  6112     0E2D                     T3GPPS          equ	3629	;# 
  6113     0E2E                     T5CKIPPS        equ	3630	;# 
  6114     0E2F                     T5GPPS          equ	3631	;# 
  6115     0E90                     RA0PPS          equ	3728	;# 
  6116     0E91                     RA1PPS          equ	3729	;# 
  6117     0E92                     RA2PPS          equ	3730	;# 
  6118     0E94                     RA4PPS          equ	3732	;# 
  6119     0E95                     RA5PPS          equ	3733	;# 
  6120     0E9C                     RB4PPS          equ	3740	;# 
  6121     0E9D                     RB5PPS          equ	3741	;# 
  6122     0E9E                     RB6PPS          equ	3742	;# 
  6123     0E9F                     RB7PPS          equ	3743	;# 
  6124     0EA0                     RC0PPS          equ	3744	;# 
  6125     0EA1                     RC1PPS          equ	3745	;# 
  6126     0EA2                     RC2PPS          equ	3746	;# 
  6127     0EA3                     RC3PPS          equ	3747	;# 
  6128     0EA4                     RC4PPS          equ	3748	;# 
  6129     0EA5                     RC5PPS          equ	3749	;# 
  6130     0EA6                     RC6PPS          equ	3750	;# 
  6131     0EA7                     RC7PPS          equ	3751	;# 
  6132     0F0F                     CLCDATA         equ	3855	;# 
  6133     0F10                     CLC1CON         equ	3856	;# 
  6134     0F11                     CLC1POL         equ	3857	;# 
  6135     0F12                     CLC1SEL0        equ	3858	;# 
  6136     0F13                     CLC1SEL1        equ	3859	;# 
  6137     0F14                     CLC1SEL2        equ	3860	;# 
  6138     0F15                     CLC1SEL3        equ	3861	;# 
  6139     0F16                     CLC1GLS0        equ	3862	;# 
  6140     0F17                     CLC1GLS1        equ	3863	;# 
  6141     0F18                     CLC1GLS2        equ	3864	;# 
  6142     0F19                     CLC1GLS3        equ	3865	;# 
  6143     0F1A                     CLC2CON         equ	3866	;# 
  6144     0F1B                     CLC2POL         equ	3867	;# 
  6145     0F1C                     CLC2SEL0        equ	3868	;# 
  6146     0F1D                     CLC2SEL1        equ	3869	;# 
  6147     0F1E                     CLC2SEL2        equ	3870	;# 
  6148     0F1F                     CLC2SEL3        equ	3871	;# 
  6149     0F20                     CLC2GLS0        equ	3872	;# 
  6150     0F21                     CLC2GLS1        equ	3873	;# 
  6151     0F22                     CLC2GLS2        equ	3874	;# 
  6152     0F23                     CLC2GLS3        equ	3875	;# 
  6153     0F24                     CLC3CON         equ	3876	;# 
  6154     0F25                     CLC3POL         equ	3877	;# 
  6155     0F26                     CLC3SEL0        equ	3878	;# 
  6156     0F27                     CLC3SEL1        equ	3879	;# 
  6157     0F28                     CLC3SEL2        equ	3880	;# 
  6158     0F29                     CLC3SEL3        equ	3881	;# 
  6159     0F2A                     CLC3GLS0        equ	3882	;# 
  6160     0F2B                     CLC3GLS1        equ	3883	;# 
  6161     0F2C                     CLC3GLS2        equ	3884	;# 
  6162     0F2D                     CLC3GLS3        equ	3885	;# 
  6163     0F2E                     CLC4CON         equ	3886	;# 
  6164     0F2F                     CLC4POL         equ	3887	;# 
  6165     0F30                     CLC4SEL0        equ	3888	;# 
  6166     0F31                     CLC4SEL1        equ	3889	;# 
  6167     0F32                     CLC4SEL2        equ	3890	;# 
  6168     0F33                     CLC4SEL3        equ	3891	;# 
  6169     0F34                     CLC4GLS0        equ	3892	;# 
  6170     0F35                     CLC4GLS1        equ	3893	;# 
  6171     0F36                     CLC4GLS2        equ	3894	;# 
  6172     0F37                     CLC4GLS3        equ	3895	;# 
  6173     0FE4                     STATUS_SHAD     equ	4068	;# 
  6174     0FE5                     WREG_SHAD       equ	4069	;# 
  6175     0FE6                     BSR_SHAD        equ	4070	;# 
  6176     0FE7                     PCLATH_SHAD     equ	4071	;# 
  6177     0FE8                     FSR0L_SHAD      equ	4072	;# 
  6178     0FE9                     FSR0H_SHAD      equ	4073	;# 
  6179     0FEA                     FSR1L_SHAD      equ	4074	;# 
  6180     0FEB                     FSR1H_SHAD      equ	4075	;# 
  6181     0FED                     STKPTR          equ	4077	;# 
  6182     0FEE                     TOSL            equ	4078	;# 
  6183     0FEF                     TOSH            equ	4079	;# 
  6184                           
  6185 ;; Function _I2C2_Deinitialize is unused but had its address taken
  6186     0000                     _I2C2_Deinitialize equ	0
  6187                           
  6188 ;; Function _I2C2_Write is unused but had its address taken
  6189     0000                     _I2C2_Write     equ	0
  6190                           
  6191 ;; Function _I2C2_Read is unused but had its address taken
  6192     0000                     _I2C2_Read      equ	0
  6193                           
  6194 ;; Function _I2C2_WriteRead is unused but had its address taken
  6195     0000                     _I2C2_WriteRead equ	0
  6196                           
  6197 ;; Function _I2C2_ErrorGet is unused but had its address taken
  6198     0000                     _I2C2_ErrorGet  equ	0
  6199                           
  6200 ;; Function _I2C2_IsBusy is unused but had its address taken
  6201     0000                     _I2C2_IsBusy    equ	0
  6202                           
  6203 ;; Function _I2C2_CallbackRegister is unused but had its address taken
  6204     0000                     _I2C2_CallbackRegister equ	0
  6205                           
  6206 ;; Function _SPI1_Deinitialize is unused but had its address taken
  6207     0000                     _SPI1_Deinitialize equ	0
  6208                           
  6209 ;; Function _SPI1_Open is unused but had its address taken
  6210     0000                     _SPI1_Open      equ	0
  6211                           
  6212 ;; Function _SPI1_Close is unused but had its address taken
  6213     0000                     _SPI1_Close     equ	0
  6214                           
  6215 ;; Function _SPI1_BufferExchange is unused but had its address taken
  6216     0000                     _SPI1_BufferExchange equ	0
  6217                           
  6218 ;; Function _SPI1_BufferWrite is unused but had its address taken
  6219     0000                     _SPI1_BufferWrite equ	0
  6220                           
  6221 ;; Function _SPI1_BufferRead is unused but had its address taken
  6222     0000                     _SPI1_BufferRead equ	0
  6223                           
  6224 ;; Function _SPI1_ByteExchange is unused but had its address taken
  6225     0000                     _SPI1_ByteExchange equ	0
  6226                           
  6227 ;; Function _SPI1_ByteWrite is unused but had its address taken
  6228     0000                     _SPI1_ByteWrite equ	0
  6229                           
  6230 ;; Function _SPI1_ByteRead is unused but had its address taken
  6231     0000                     _SPI1_ByteRead  equ	0
  6232                           
  6233 ;; Function _SPI1_IsRxReady is unused but had its address taken
  6234     0000                     _SPI1_IsRxReady equ	0
  6235                           
  6236 ;; Function _SPI1_IsTxReady is unused but had its address taken
  6237     0000                     _SPI1_IsTxReady equ	0
  6238                           
  6239 ;; Function _INT_DefaultInterruptHandler is unused but had its address taken
  6240     0000                     _INT_DefaultInterruptHandler equ	0
  6241                           
  6242 ;; Function _TMR6_DefaultPeriodMatchCallback is unused but had its address taken
  6243     0000                     _TMR6_DefaultPeriodMatchCallback equ	0
  6244                           
  6245 ;; Function _EUSART_Deinitialize is unused but had its address taken
  6246     0000                     _EUSART_Deinitialize equ	0
  6247                           
  6248 ;; Function _EUSART_TransmitEnable is unused but had its address taken
  6249     0000                     _EUSART_TransmitEnable equ	0
  6250                           
  6251 ;; Function _EUSART_TransmitDisable is unused but had its address taken
  6252     0000                     _EUSART_TransmitDisable equ	0
  6253                           
  6254 ;; Function _EUSART_AutoBaudSet is unused but had its address taken
  6255     0000                     _EUSART_AutoBaudSet equ	0
  6256                           
  6257 ;; Function _EUSART_AutoBaudQuery is unused but had its address taken
  6258     0000                     _EUSART_AutoBaudQuery equ	0
  6259                           
  6260 ;; Function _EUSART_IsRxReady is unused but had its address taken
  6261     0000                     _EUSART_IsRxReady equ	0
  6262                           
  6263 ;; Function _EUSART_IsTxDone is unused but had its address taken
  6264     0000                     _EUSART_IsTxDone equ	0
  6265                           
  6266 ;; Function _EUSART_ErrorGet is unused but had its address taken
  6267     0000                     _EUSART_ErrorGet equ	0
  6268                           
  6269 ;; Function _EUSART_Read is unused but had its address taken
  6270     0000                     _EUSART_Read    equ	0
  6271                           
  6272 ;; Function _EUSART_RxCompleteCallbackRegister is unused but had its address taken
  6273     0000                     _EUSART_RxCompleteCallbackRegister equ	0
  6274                           
  6275 ;; Function _EUSART_TxCompleteCallbackRegister is unused but had its address taken
  6276     0000                     _EUSART_TxCompleteCallbackRegister equ	0
  6277                           
  6278 ;; Function _updateLedstripAnimation is unused but had its address taken
  6279     0000                     _updateLedstripAnimation equ	0
  6280                           
  6281                           	psect	idataBANK0
  6282     0002                     __pidataBANK0:
  6283                           
  6284                           ;initializer for _mustPrintLogs
  6285     0002  3401               	retlw	1
  6286                           
  6287                           ;initializer for adcConversionDoneHandler@new_channel
  6288     0003  3410               	retlw	16
  6289                           
  6290                           	psect	idataBANK2
  6291     17D2                     __pidataBANK2:
  6292                           
  6293                           ;initializer for _ki
  6294     17D2  3400               	retlw	0
  6295     17D3  3400               	retlw	0
  6296     17D4  34A0               	retlw	160
  6297     17D5  3440               	retlw	64
  6298                           
  6299                           ;initializer for _kp
  6300     17D6  3466               	retlw	102
  6301     17D7  3466               	retlw	102
  6302     17D8  3466               	retlw	102
  6303     17D9  343F               	retlw	63
  6304                           
  6305                           ;initializer for _setpoint
  6306     17DA  34C2               	retlw	194
  6307     17DB  3401               	retlw	1
  6308                           
  6309                           	psect	stringtext1
  6310     1000                     __pstringtext1:
  6311     1000                     _UART1:
  6312     1000  34E6               	retlw	low _EUSART_Initialize
  6313     1001  340A               	retlw	high _EUSART_Initialize
  6314     1002  3400               	retlw	0
  6315     1003  3400               	retlw	0
  6316     1004  3400               	retlw	0
  6317     1005  3400               	retlw	0
  6318     1006  34D2               	retlw	low _EUSART_Write
  6319     1007  3409               	retlw	high _EUSART_Write
  6320     1008  3400               	retlw	0
  6321     1009  3400               	retlw	0
  6322     100A  34B6               	retlw	low _EUSART_IsTxReady
  6323     100B  3417               	retlw	high _EUSART_IsTxReady
  6324     100C  3400               	retlw	0
  6325     100D  3400               	retlw	0
  6326     100E  3400               	retlw	0
  6327     100F  3400               	retlw	0
  6328     1010  3400               	retlw	0
  6329     1011  3400               	retlw	0
  6330     1012  3400               	retlw	0
  6331     1013  3400               	retlw	0
  6332     1014  3400               	retlw	0
  6333     1015  3400               	retlw	0
  6334     1016  3400               	retlw	0
  6335     1017  3400               	retlw	0
  6336     1018  3400               	retlw	0
  6337     1019  3400               	retlw	0
  6338     101A  3400               	retlw	0
  6339     101B  3400               	retlw	0
  6340     101C  3400               	retlw	0
  6341     101D  3400               	retlw	0
  6342     101E  3400               	retlw	0
  6343     101F  3400               	retlw	0
  6344     1020  3400               	retlw	0
  6345     1021  3400               	retlw	0
  6346     1022  3400               	retlw	0
  6347     1023  3400               	retlw	0
  6348     1024  3400               	retlw	0
  6349     1025  3400               	retlw	0
  6350     1026  3400               	retlw	0
  6351     1027  3400               	retlw	0
  6352     1028  3449               	retlw	low _EUSART_FramingErrorCallbackRegister
  6353     1029  3408               	retlw	high _EUSART_FramingErrorCallbackRegister
  6354     102A  3458               	retlw	low _EUSART_OverrunErrorCallbackRegister
  6355     102B  3408               	retlw	high _EUSART_OverrunErrorCallbackRegister
  6356     102C  3400               	retlw	0
  6357     102D  3400               	retlw	0
  6358     102E  3400               	retlw	0
  6359     102F  3400               	retlw	0
  6360     1030                     __end_of_UART1:
  6361                           
  6362                           	psect	stringtext2
  6363     1030                     __pstringtext2:
  6364     1030                     _ledstrip:
  6365     1030  34C8               	retlw	low _SPI1_Initialize
  6366     1031  3417               	retlw	high _SPI1_Initialize
  6367     1032  3400               	retlw	0
  6368     1033  3400               	retlw	0
  6369     1034  3400               	retlw	0
  6370     1035  3400               	retlw	0
  6371     1036  3400               	retlw	0
  6372     1037  3400               	retlw	0
  6373     1038  3400               	retlw	0
  6374     1039  3400               	retlw	0
  6375     103A  3400               	retlw	0
  6376     103B  3400               	retlw	0
  6377     103C  3400               	retlw	0
  6378     103D  3400               	retlw	0
  6379     103E  3400               	retlw	0
  6380     103F  3400               	retlw	0
  6381     1040  3400               	retlw	0
  6382     1041  3400               	retlw	0
  6383     1042  3400               	retlw	0
  6384     1043  3400               	retlw	0
  6385     1044  3400               	retlw	0
  6386     1045  3400               	retlw	0
  6387     1046  3400               	retlw	0
  6388     1047  3400               	retlw	0
  6389     1048  3400               	retlw	0
  6390     1049  3400               	retlw	0
  6391     104A  3400               	retlw	0
  6392     104B  3400               	retlw	0
  6393     104C                     __end_of_ledstrip:
  6394                           
  6395                           	psect	stringtext3
  6396     107D                     __pstringtext3:
  6397     107D                     _I2C2_Host:
  6398     107D  3467               	retlw	low _I2C2_Initialize
  6399     107E  3408               	retlw	high _I2C2_Initialize
  6400     107F  3400               	retlw	0
  6401     1080  3400               	retlw	0
  6402     1081  3400               	retlw	0
  6403     1082  3400               	retlw	0
  6404     1083  3400               	retlw	0
  6405     1084  3400               	retlw	0
  6406     1085  3400               	retlw	0
  6407     1086  3400               	retlw	0
  6408     1087  3400               	retlw	0
  6409     1088  3400               	retlw	0
  6410     1089  3400               	retlw	0
  6411     108A  3400               	retlw	0
  6412     108B  3400               	retlw	0
  6413     108C  3400               	retlw	0
  6414     108D  3400               	retlw	0
  6415     108E  3400               	retlw	0
  6416     108F  3400               	retlw	0
  6417     1090  3400               	retlw	0
  6418     1091                     __end_of_I2C2_Host:
  6419                           
  6420                           	psect	stringtext4
  6421     1091                     __pstringtext4:
  6422     1091                     _i2c2_eventTable:
  6423     1091  342C               	retlw	low _I2C2_EVENT_IDLE
  6424     1092  3417               	retlw	high _I2C2_EVENT_IDLE
  6425     1093  348B               	retlw	low _I2C2_EVENT_SEND_RD_ADDR
  6426     1094  3417               	retlw	high _I2C2_EVENT_SEND_RD_ADDR
  6427     1095  3476               	retlw	low _I2C2_EVENT_SEND_WR_ADDR
  6428     1096  3417               	retlw	high _I2C2_EVENT_SEND_WR_ADDR
  6429     1097  3424               	retlw	low _I2C2_EVENT_TX
  6430     1098  340A               	retlw	high _I2C2_EVENT_TX
  6431     1099  341C               	retlw	low _I2C2_EVENT_RX
  6432     109A  340B               	retlw	high _I2C2_EVENT_RX
  6433     109B  344C               	retlw	low _I2C2_EVENT_NACK
  6434     109C  3417               	retlw	high _I2C2_EVENT_NACK
  6435     109D  3452               	retlw	low _I2C2_EVENT_ERROR
  6436     109E  3417               	retlw	high _I2C2_EVENT_ERROR
  6437     109F  3493               	retlw	low _I2C2_EVENT_STOP
  6438     10A0  3417               	retlw	high _I2C2_EVENT_STOP
  6439     10A1  347D               	retlw	low _I2C2_EVENT_RESET
  6440     10A2  3417               	retlw	high _I2C2_EVENT_RESET
  6441     10A3                     __end_of_i2c2_eventTable:
  6442                           
  6443                           	psect	stringtext5
  6444     180B                     __pstringtext5:
  6445     180B                     _spi1_configuration:
  6446     180B  3440               	retlw	64
  6447     180C  340A               	retlw	10
  6448     180D  3410               	retlw	16
  6449     180E  3407               	retlw	7
  6450     180F  3400               	retlw	0
  6451     1810  3464               	retlw	100
  6452     1811  3400               	retlw	0
  6453     1812  3410               	retlw	16
  6454     1813  3401               	retlw	1
  6455     1814  3400               	retlw	0
  6456     1815                     __end_of_spi1_configuration:
  6457                           
  6458                           	psect	nvBANK2
  6459     0168                     __pnvBANK2:
  6460     0168                     _TMR6_PeriodMatchCallback:
  6461     0168                     	ds	2
  6462     016A                     _TMR4_PeriodMatchCallback:
  6463     016A                     	ds	2
  6464     016C                     _TMR2_PeriodMatchCallback:
  6465     016C                     	ds	2
  6466     016E                     _ADC_InterruptHandler:
  6467     016E                     	ds	2
  6468                           
  6469                           	psect	nvBANK3
  6470     01D4                     __pnvBANK3:
  6471     01D4                     _EUSART_RxInterruptHandler:
  6472     01D4                     	ds	2
  6473     01D6                     _EUSART_TxInterruptHandler:
  6474     01D6                     	ds	2
  6475     001F                     _T2CONbits      set	31
  6476     001F                     _T2CON          set	31
  6477     001D                     _TMR2           set	29
  6478     001E                     _PR2            set	30
  6479     000B                     _INTCONbits     set	11
  6480     0010                     _PIR0bits       set	16
  6481     0012                     _PIR2bits       set	18
  6482     0011                     _PIR1bits       set	17
  6483     008E                     _TRISC          set	142
  6484     008D                     _TRISB          set	141
  6485     008C                     _TRISA          set	140
  6486     0092                     _PIE2bits       set	146
  6487     009D                     _ADCON0bits     set	157
  6488     0091                     _PIE1bits       set	145
  6489     009D                     _ADCON0         set	157
  6490     009F                     _ADACT          set	159
  6491     009C                     _ADRESH         set	156
  6492     009B                     _ADRESL         set	155
  6493     009E                     _ADCON1         set	158
  6494     010C                     _LATAbits       set	268
  6495     010E                     _LATC           set	270
  6496     010D                     _LATB           set	269
  6497     010C                     _LATA           set	268
  6498     019A                     _TX1REG         set	410
  6499     0199                     _RC1REG         set	409
  6500     019F                     _BAUD1CONbits   set	415
  6501     019E                     _TX1STAbits     set	414
  6502     019D                     _RC1STAbits     set	413
  6503     019C                     _SP1BRGH        set	412
  6504     019B                     _SP1BRGL        set	411
  6505     019E                     _TX1STA         set	414
  6506     019D                     _RC1STA         set	413
  6507     019F                     _BAUD1CON       set	415
  6508     018E                     _ANSELC         set	398
  6509     018D                     _ANSELB         set	397
  6510     018C                     _ANSELA         set	396
  6511     020E                     _WPUC           set	526
  6512     020D                     _WPUB           set	525
  6513     020C                     _WPUA           set	524
  6514     0211                     _SSP1BUF        set	529
  6515     0215                     _SSP1CON1bits   set	533
  6516     0212                     _SSP1ADD        set	530
  6517     0217                     _SSP1CON3       set	535
  6518     0215                     _SSP1CON1       set	533
  6519     0214                     _SSP1STAT       set	532
  6520     021E                     _SSP2CON2bits   set	542
  6521     0219                     _SSP2BUF        set	537
  6522     021C                     _SSP2STATbits   set	540
  6523     021D                     _SSP2CON1bits   set	541
  6524     021A                     _SSP2ADD        set	538
  6525     021F                     _SSP2CON3       set	543
  6526     021E                     _SSP2CON2       set	542
  6527     021D                     _SSP2CON1       set	541
  6528     021C                     _SSP2STAT       set	540
  6529     028E                     _ODCONC         set	654
  6530     028D                     _ODCONB         set	653
  6531     028C                     _ODCONA         set	652
  6532     030E                     _SLRCONC        set	782
  6533     030D                     _SLRCONB        set	781
  6534     030C                     _SLRCONA        set	780
  6535     0399                     _IOCCF          set	921
  6536     0398                     _IOCCN          set	920
  6537     0397                     _IOCCP          set	919
  6538     0396                     _IOCBF          set	918
  6539     0395                     _IOCBN          set	917
  6540     0394                     _IOCBP          set	916
  6541     0393                     _IOCAF          set	915
  6542     0392                     _IOCAN          set	914
  6543     0391                     _IOCAP          set	913
  6544     038E                     _INLVLC         set	910
  6545     038D                     _INLVLB         set	909
  6546     038C                     _INLVLA         set	908
  6547     041E                     _T6CONbits      set	1054
  6548     041E                     _T6CON          set	1054
  6549     041C                     _TMR6           set	1052
  6550     041D                     _PR6            set	1053
  6551     0417                     _T4CONbits      set	1047
  6552     0417                     _T4CON          set	1047
  6553     0415                     _TMR4           set	1045
  6554     0416                     _PR4            set	1046
  6555     061F                     _PWMTMRSbits    set	1567
  6556     0617                     _PWM5DCL        set	1559
  6557     0618                     _PWM5DCH        set	1560
  6558     0619                     _PWM5CON        set	1561
  6559     091E                     _OSCTUNE        set	2334
  6560     091C                     _OSCSTAT1       set	2332
  6561     091F                     _OSCFRQ         set	2335
  6562     091D                     _OSCEN          set	2333
  6563     091B                     _OSCCON3        set	2331
  6564     0919                     _OSCCON1        set	2329
  6565     0E1E                     _SSP2DATPPS     set	3614
  6566     0E1D                     _SSP2CLKPPS     set	3613
  6567     0E24                     _RXPPS          set	3620
  6568     0E21                     _SSP1DATPPS     set	3617
  6569     0E9C                     _RB4PPS         set	3740
  6570     0E9E                     _RB6PPS         set	3742
  6571     0E9D                     _RB5PPS         set	3741
  6572     0EA5                     _RC5PPS         set	3749
  6573                           
  6574                           	psect	stringtext6
  6575     104C                     __pstringtext6:
  6576     104C                     STR_10:
  6577     104C  3463               	retlw	99	;'c'
  6578     104D  3468               	retlw	104	;'h'
  6579     104E  3461               	retlw	97	;'a'
  6580     104F  346E               	retlw	110	;'n'
  6581     1050  3467               	retlw	103	;'g'
  6582     1051  3465               	retlw	101	;'e'
  6583     1052  3464               	retlw	100	;'d'
  6584     1053  3420               	retlw	32	;' '
  6585     1054  3473               	retlw	115	;'s'
  6586     1055  3465               	retlw	101	;'e'
  6587     1056  3474               	retlw	116	;'t'
  6588     1057  3470               	retlw	112	;'p'
  6589     1058  346F               	retlw	111	;'o'
  6590     1059  3469               	retlw	105	;'i'
  6591     105A  346E               	retlw	110	;'n'
  6592     105B  3474               	retlw	116	;'t'
  6593     105C  3420               	retlw	32	;' '
  6594     105D  3474               	retlw	116	;'t'
  6595     105E  346F               	retlw	111	;'o'
  6596     105F  3420               	retlw	32	;' '
  6597     1060  3425               	retlw	37	;'%'
  6598     1061  3475               	retlw	117	;'u'
  6599     1062  340D               	retlw	13
  6600     1063  340A               	retlw	10
  6601     1064  3400               	retlw	0
  6602                           
  6603                           	psect	stringtext7
  6604     1065                     __pstringtext7:
  6605     1065                     STR_3:
  6606     1065  3469               	retlw	105	;'i'
  6607     1066  346E               	retlw	110	;'n'
  6608     1067  3470               	retlw	112	;'p'
  6609     1068  3475               	retlw	117	;'u'
  6610     1069  3474               	retlw	116	;'t'
  6611     106A  3420               	retlw	32	;' '
  6612     106B  3462               	retlw	98	;'b'
  6613     106C  3475               	retlw	117	;'u'
  6614     106D  3466               	retlw	102	;'f'
  6615     106E  3466               	retlw	102	;'f'
  6616     106F  3465               	retlw	101	;'e'
  6617     1070  3472               	retlw	114	;'r'
  6618     1071  3420               	retlw	32	;' '
  6619     1072  346F               	retlw	111	;'o'
  6620     1073  3476               	retlw	118	;'v'
  6621     1074  3465               	retlw	101	;'e'
  6622     1075  3472               	retlw	114	;'r'
  6623     1076  3466               	retlw	102	;'f'
  6624     1077  346C               	retlw	108	;'l'
  6625     1078  346F               	retlw	111	;'o'
  6626     1079  3477               	retlw	119	;'w'
  6627     107A  340D               	retlw	13
  6628     107B  340A               	retlw	10
  6629     107C  3400               	retlw	0
  6630                           
  6631                           	psect	stringtext8
  6632     10A3                     __pstringtext8:
  6633     10A3                     STR_14:
  6634     10A3  3455               	retlw	85	;'U'
  6635     10A4  346E               	retlw	110	;'n'
  6636     10A5  346B               	retlw	107	;'k'
  6637     10A6  346F               	retlw	111	;'o'
  6638     10A7  3477               	retlw	119	;'w'
  6639     10A8  346E               	retlw	110	;'n'
  6640     10A9  3420               	retlw	32	;' '
  6641     10AA  3463               	retlw	99	;'c'
  6642     10AB  346F               	retlw	111	;'o'
  6643     10AC  346D               	retlw	109	;'m'
  6644     10AD  346D               	retlw	109	;'m'
  6645     10AE  3461               	retlw	97	;'a'
  6646     10AF  346E               	retlw	110	;'n'
  6647     10B0  3464               	retlw	100	;'d'
  6648     10B1  340D               	retlw	13
  6649     10B2  340A               	retlw	10
  6650     10B3  3400               	retlw	0
  6651                           
  6652                           	psect	stringtext9
  6653     10B4                     __pstringtext9:
  6654     10B4                     STR_6:
  6655     10B4  342C               	retlw	44	;','
  6656     10B5  3420               	retlw	32	;' '
  6657     10B6  3464               	retlw	100	;'d'
  6658     10B7  3475               	retlw	117	;'u'
  6659     10B8  3474               	retlw	116	;'t'
  6660     10B9  3479               	retlw	121	;'y'
  6661     10BA  3420               	retlw	32	;' '
  6662     10BB  3463               	retlw	99	;'c'
  6663     10BC  3479               	retlw	121	;'y'
  6664     10BD  3463               	retlw	99	;'c'
  6665     10BE  346C               	retlw	108	;'l'
  6666     10BF  3465               	retlw	101	;'e'
  6667     10C0  343A               	retlw	58	;':'
  6668     10C1  3420               	retlw	32	;' '
  6669     10C2  3425               	retlw	37	;'%'
  6670     10C3  3475               	retlw	117	;'u'
  6671     10C4  3400               	retlw	0
  6672                           
  6673                           	psect	stringtext10
  6674     10C5                     __pstringtext10:
  6675     10C5                     STR_13:
  6676     10C5  346C               	retlw	108	;'l'
  6677     10C6  346F               	retlw	111	;'o'
  6678     10C7  3467               	retlw	103	;'g'
  6679     10C8  3473               	retlw	115	;'s'
  6680     10C9  3420               	retlw	32	;' '
  6681     10CA  3474               	retlw	116	;'t'
  6682     10CB  346F               	retlw	111	;'o'
  6683     10CC  3467               	retlw	103	;'g'
  6684     10CD  3467               	retlw	103	;'g'
  6685     10CE  346C               	retlw	108	;'l'
  6686     10CF  3465               	retlw	101	;'e'
  6687     10D0  3464               	retlw	100	;'d'
  6688     10D1  340D               	retlw	13
  6689     10D2  340A               	retlw	10
  6690     10D3  3400               	retlw	0
  6691                           
  6692                           	psect	stringtext11
  6693     10D4                     __pstringtext11:
  6694     10D4                     STR_5:
  6695     10D4  342C               	retlw	44	;','
  6696     10D5  3420               	retlw	32	;' '
  6697     10D6  3473               	retlw	115	;'s'
  6698     10D7  3465               	retlw	101	;'e'
  6699     10D8  3474               	retlw	116	;'t'
  6700     10D9  3470               	retlw	112	;'p'
  6701     10DA  346F               	retlw	111	;'o'
  6702     10DB  3469               	retlw	105	;'i'
  6703     10DC  346E               	retlw	110	;'n'
  6704     10DD  3474               	retlw	116	;'t'
  6705     10DE  343A               	retlw	58	;':'
  6706     10DF  3420               	retlw	32	;' '
  6707     10E0  3425               	retlw	37	;'%'
  6708     10E1  3475               	retlw	117	;'u'
  6709     10E2  3400               	retlw	0
  6710                           
  6711                           	psect	stringtext12
  6712     10E3                     __pstringtext12:
  6713     10E3                     STR_12:
  6714     10E3  3463               	retlw	99	;'c'
  6715     10E4  3468               	retlw	104	;'h'
  6716     10E5  3461               	retlw	97	;'a'
  6717     10E6  346E               	retlw	110	;'n'
  6718     10E7  3467               	retlw	103	;'g'
  6719     10E8  3465               	retlw	101	;'e'
  6720     10E9  3464               	retlw	100	;'d'
  6721     10EA  3420               	retlw	32	;' '
  6722     10EB  346B               	retlw	107	;'k'
  6723     10EC  3469               	retlw	105	;'i'
  6724     10ED  340D               	retlw	13
  6725     10EE  340A               	retlw	10
  6726     10EF  3400               	retlw	0
  6727                           
  6728                           	psect	stringtext13
  6729     10F0                     __pstringtext13:
  6730     10F0                     STR_11:
  6731     10F0  3463               	retlw	99	;'c'
  6732     10F1  3468               	retlw	104	;'h'
  6733     10F2  3461               	retlw	97	;'a'
  6734     10F3  346E               	retlw	110	;'n'
  6735     10F4  3467               	retlw	103	;'g'
  6736     10F5  3465               	retlw	101	;'e'
  6737     10F6  3464               	retlw	100	;'d'
  6738     10F7  3420               	retlw	32	;' '
  6739     10F8  346B               	retlw	107	;'k'
  6740     10F9  3470               	retlw	112	;'p'
  6741     10FA  340D               	retlw	13
  6742     10FB  340A               	retlw	10
  6743     10FC  3400               	retlw	0
  6744                           
  6745                           	psect	stringtext14
  6746     1800                     __pstringtext14:
  6747     1800                     STR_4:
  6748     1800  3468               	retlw	104	;'h'
  6749     1801  346F               	retlw	111	;'o'
  6750     1802  346F               	retlw	111	;'o'
  6751     1803  3467               	retlw	103	;'g'
  6752     1804  3474               	retlw	116	;'t'
  6753     1805  3465               	retlw	101	;'e'
  6754     1806  343A               	retlw	58	;':'
  6755     1807  3420               	retlw	32	;' '
  6756     1808  3425               	retlw	37	;'%'
  6757     1809  3475               	retlw	117	;'u'
  6758     180A  3400               	retlw	0
  6759                           
  6760                           	psect	stringtext15
  6761     1815                     __pstringtext15:
  6762     1815                     STR_2:
  6763     1815  3425               	retlw	37	;'%'
  6764     1816  3469               	retlw	105	;'i'
  6765     1817  342E               	retlw	46	;'.'
  6766     1818  3425               	retlw	37	;'%'
  6767     1819  3430               	retlw	48	;'0'
  6768     181A  3433               	retlw	51	;'3'
  6769     181B  3475               	retlw	117	;'u'
  6770     181C  3400               	retlw	0
  6771                           
  6772                           	psect	stringtext16
  6773     181D                     __pstringtext16:
  6774     181D                     STR_8:
  6775     181D  342C               	retlw	44	;','
  6776     181E  3420               	retlw	32	;' '
  6777     181F  346B               	retlw	107	;'k'
  6778     1820  3469               	retlw	105	;'i'
  6779     1821  343A               	retlw	58	;':'
  6780     1822  3420               	retlw	32	;' '
  6781     1823  3400               	retlw	0
  6782                           
  6783                           	psect	stringtext17
  6784     1824                     __pstringtext17:
  6785     1824                     STR_7:
  6786     1824  342C               	retlw	44	;','
  6787     1825  3420               	retlw	32	;' '
  6788     1826  346B               	retlw	107	;'k'
  6789     1827  3470               	retlw	112	;'p'
  6790     1828  343A               	retlw	58	;':'
  6791     1829  3420               	retlw	32	;' '
  6792     182A  3400               	retlw	0
  6793                           
  6794                           	psect	stringtext18
  6795     182B                     __pstringtext18:
  6796     182B                     STR_1:
  6797     182B  3448               	retlw	72	;'H'
  6798     182C  3400               	retlw	0
  6799                           
  6800                           	psect	stringtext19
  6801     0000                     __pstringtext19:
  6802     10D1                     STR_9           equ	STR_13+12
  6803                           
  6804                           	psect	cinit
  6805     0076                     start_initialization:	
  6806                           ; #config settings
  6807                           
  6808     0076                     __initialization:
  6809                           
  6810                           ; Initialize objects allocated to BANK0
  6811     0076  3180  2002  3180   	fcall	__pidataBANK0	;fetch initializer
  6812     0079  00EE               	movwf	__pdataBANK0& (0+127)
  6813     007A  3180  2003  3180   	fcall	__pidataBANK0+1	;fetch initializer
  6814     007D  00EF               	movwf	(__pdataBANK0+1)& (0+127)
  6815                           
  6816                           ; Initialize objects allocated to BANK2
  6817     007E  30D2               	movlw	low __pidataBANK2
  6818     007F  0084               	movwf	4
  6819     0080  3097               	movlw	(high __pidataBANK2)| (0+128)
  6820     0081  0085               	movwf	5
  6821     0082  305E               	movlw	low __pdataBANK2
  6822     0083  0086               	movwf	6
  6823     0084  3001               	movlw	high __pdataBANK2
  6824     0085  0087               	movwf	7
  6825     0086  300A               	movlw	10
  6826     0087  3197  2770  3180   	fcall	init_ram
  6827                           
  6828                           ; Clear objects allocated to BANK0
  6829     008A  3055               	movlw	low __pbssBANK0
  6830     008B  0084               	movwf	4
  6831     008C  3000               	movlw	high __pbssBANK0
  6832     008D  0085               	movwf	5
  6833     008E  3019               	movlw	25
  6834     008F  3197  276A  3180   	fcall	clear_ram0
  6835                           
  6836                           ; Clear objects allocated to BANK1
  6837     0092  0021               	movlb	1	; select bank1
  6838     0093  01EC               	clrf	__pbssBANK1& (0+127)
  6839     0094  01ED               	clrf	(__pbssBANK1+1)& (0+127)
  6840     0095  01EE               	clrf	(__pbssBANK1+2)& (0+127)
  6841     0096  01EF               	clrf	(__pbssBANK1+3)& (0+127)
  6842                           
  6843                           ; Clear objects allocated to BANK2
  6844     0097  3020               	movlw	low __pbssBANK2
  6845     0098  0084               	movwf	4
  6846     0099  3001               	movlw	high __pbssBANK2
  6847     009A  0085               	movwf	5
  6848     009B  303E               	movlw	62
  6849     009C  3197  276A  3180   	fcall	clear_ram0
  6850                           
  6851                           ; Clear objects allocated to BANK3
  6852     009F  30A0               	movlw	low __pbssBANK3
  6853     00A0  0084               	movwf	4
  6854     00A1  3001               	movlw	high __pbssBANK3
  6855     00A2  0085               	movwf	5
  6856     00A3  3034               	movlw	52
  6857     00A4  3197  276A  3180   	fcall	clear_ram0
  6858     00A7                     end_of_initialization:	
  6859                           ;End of C runtime variable initialization code
  6860                           
  6861     00A7                     __end_of__initialization:
  6862     00A7  107E               	bcf	int$flags,0	;clear compiler interrupt flag (level 1)
  6863     00A8  0020               	movlb	0
  6864     00A9  318A  2AB3         	ljmp	_main	;jump to C main() function
  6865                           
  6866                           	psect	bssBANK0
  6867     0055                     __pbssBANK0:
  6868     0055                     _i2c2Status:
  6869     0055                     	ds	14
  6870     0063                     _dutycycle:
  6871     0063                     	ds	2
  6872     0065                     _flags:
  6873     0065                     	ds	1
  6874     0066                     _is_on_target:
  6875     0066                     	ds	1
  6876     0067                     readLine@index:
  6877     0067                     	ds	1
  6878     0068                     _eusartRxCount:
  6879     0068                     	ds	1
  6880     0069                     _eusartRxTail:
  6881     0069                     	ds	1
  6882     006A                     _eusartRxHead:
  6883     006A                     	ds	1
  6884     006B                     _eusartTxBufferRemaining:
  6885     006B                     	ds	1
  6886     006C                     _eusartTxTail:
  6887     006C                     	ds	1
  6888     006D                     _eusartTxHead:
  6889     006D                     	ds	1
  6890                           
  6891                           	psect	dataBANK0
  6892     006E                     __pdataBANK0:
  6893     006E                     _mustPrintLogs:
  6894     006E                     	ds	1
  6895     006F                     adcConversionDoneHandler@new_channel:
  6896     006F                     	ds	1
  6897                           
  6898                           	psect	bssBANK1
  6899     00EC                     __pbssBANK1:
  6900     00EC                     _width:
  6901     00EC                     	ds	2
  6902     00EE                     _INT_InterruptHandler:
  6903     00EE                     	ds	2
  6904                           
  6905                           	psect	bssBANK2
  6906     0120                     __pbssBANK2:
  6907     0120                     _eusartRxStatusBuffer:
  6908     0120                     	ds	16
  6909     0130                     _eusartRxBuffer:
  6910     0130                     	ds	8
  6911     0138                     _eusartTxBuffer:
  6912     0138                     	ds	8
  6913     0140                     _data:
  6914     0140                     	ds	4
  6915     0144                     _integraal:
  6916     0144                     	ds	4
  6917     0148                     _nout:
  6918     0148                     	ds	2
  6919     014A                     _prec:
  6920     014A                     	ds	2
  6921     014C                     _hoogte_bal:
  6922     014C                     	ds	2
  6923     014E                     _ADC_hoogtesensor:
  6924     014E                     	ds	2
  6925     0150                     _ADC_potentiometer:
  6926     0150                     	ds	2
  6927     0152                     _EUSART_OverrunErrorHandler:
  6928     0152                     	ds	2
  6929     0154                     _EUSART_FramingErrorHandler:
  6930     0154                     	ds	2
  6931     0156                     _EUSART_RxCompleteInterruptHandler:
  6932     0156                     	ds	2
  6933     0158                     _EUSART_TxCompleteInterruptHandler:
  6934     0158                     	ds	2
  6935     015A                     _eusartRxLastError:
  6936     015A                     	ds	2
  6937     015C                     _I2C2_Callback:
  6938     015C                     	ds	2
  6939                           
  6940                           	psect	dataBANK2
  6941     015E                     __pdataBANK2:
  6942     015E                     _ki:
  6943     015E                     	ds	4
  6944     0162                     _kp:
  6945     0162                     	ds	4
  6946     0166                     _setpoint:
  6947     0166                     	ds	2
  6948                           
  6949                           	psect	bssBANK3
  6950     01A0                     __pbssBANK3:
  6951     01A0                     _dbuf:
  6952     01A0                     	ds	32
  6953     01C0                     _line:
  6954     01C0                     	ds	20
  6955                           
  6956                           	psect	inittext
  6957     1770                     init_ram:
  6958     1770  00FE               	movwf	btemp
  6959     1771                     initloop:
  6960     1771  0012               	moviw fsr0++
  6961     1772  001E               	movwi fsr1++
  6962     1773  0BFE               	decfsz	btemp,f
  6963     1774  2F71               	goto	initloop
  6964     1775  3400               	retlw	0
  6965                           
  6966                           	psect	clrtext
  6967     176A                     clear_ram0:	
  6968                           ;	Called with FSR0 containing the base address, and
  6969                           ;	WREG with the size to clear
  6970                           
  6971     176A  0064               	clrwdt	;clear the watchdog before getting into this loop
  6972     176B                     clrloop0:
  6973     176B  0180               	clrf	0	;clear RAM location pointed to by FSR
  6974     176C  3101               	addfsr 0,1
  6975     176D  0B89               	decfsz	9,f	;Have we reached the end of clearing yet?
  6976     176E  2F6B               	goto	clrloop0	;have we reached the end yet?
  6977     176F  3400               	retlw	0	;all done for this memory range, return
  6978                           
  6979                           	psect	cstackBANK1
  6980     00A0                     __pcstackBANK1:
  6981     00A0                     ?_ADC_SetInterruptHandler:
  6982     00A0                     ?_INT_SetInterruptHandler:	
  6983                           ; 1 bytes @ 0x0
  6984                           
  6985     00A0                     ?_EUSART_Write:	
  6986                           ; 1 bytes @ 0x0
  6987                           
  6988     00A0                     ?_EUSART_FramingErrorCallbackRegister:	
  6989                           ; 1 bytes @ 0x0
  6990                           
  6991     00A0                     ?_EUSART_OverrunErrorCallbackRegister:	
  6992                           ; 1 bytes @ 0x0
  6993                           
  6994     00A0                     ?_TMR4_PeriodMatchCallbackRegister:	
  6995                           ; 1 bytes @ 0x0
  6996                           
  6997     00A0                     ?_strlen:	
  6998                           ; 1 bytes @ 0x0
  6999                           
  7000     00A0                     ?___wmul:	
  7001                           ; 2 bytes @ 0x0
  7002                           
  7003     00A0                     ?___awdiv:	
  7004                           ; 2 bytes @ 0x0
  7005                           
  7006     00A0                     ?___awmod:	
  7007                           ; 2 bytes @ 0x0
  7008                           
  7009     00A0                     ?___lwdiv:	
  7010                           ; 2 bytes @ 0x0
  7011                           
  7012     00A0                     ?___lwmod:	
  7013                           ; 2 bytes @ 0x0
  7014                           
  7015     00A0                     EUSART_Write@txData:	
  7016                           ; 2 bytes @ 0x0
  7017                           
  7018     00A0                     strlen@s:	
  7019                           ; 1 bytes @ 0x0
  7020                           
  7021     00A0                     ADC_SetInterruptHandler@InterruptHandler:	
  7022                           ; 1 bytes @ 0x0
  7023                           
  7024     00A0                     INT_SetInterruptHandler@InterruptHandler:	
  7025                           ; 2 bytes @ 0x0
  7026                           
  7027     00A0                     TMR4_PeriodMatchCallbackRegister@CallbackHandler:	
  7028                           ; 2 bytes @ 0x0
  7029                           
  7030     00A0                     EUSART_FramingErrorCallbackRegister@callbackHandler:	
  7031                           ; 2 bytes @ 0x0
  7032                           
  7033     00A0                     EUSART_OverrunErrorCallbackRegister@callbackHandler:	
  7034                           ; 2 bytes @ 0x0
  7035                           
  7036     00A0                     ___wmul@multiplier:	
  7037                           ; 2 bytes @ 0x0
  7038                           
  7039     00A0                     ___awdiv@divisor:	
  7040                           ; 2 bytes @ 0x0
  7041                           
  7042     00A0                     ___awmod@divisor:	
  7043                           ; 2 bytes @ 0x0
  7044                           
  7045     00A0                     ___lwdiv@divisor:	
  7046                           ; 2 bytes @ 0x0
  7047                           
  7048     00A0                     ___lwmod@divisor:	
  7049                           ; 2 bytes @ 0x0
  7050                           
  7051     00A0                     ??_I2C2_Initialize:	
  7052                           ; 2 bytes @ 0x0
  7053                           
  7054     00A0                     ??_I2C2_InterruptsEnable:	
  7055                           ; 1 bytes @ 0x0
  7056                           
  7057     00A0                     ??_SPI1_Initialize:	
  7058                           ; 1 bytes @ 0x0
  7059                           
  7060     00A0                     ??_TMR2_Initialize:	
  7061                           ; 1 bytes @ 0x0
  7062                           
  7063     00A0                     ??_TMR4_Initialize:	
  7064                           ; 1 bytes @ 0x0
  7065                           
  7066     00A0                     ??_TMR6_Initialize:	
  7067                           ; 1 bytes @ 0x0
  7068                           
  7069     00A0                     ??_EUSART_IsTxReady:	
  7070                           ; 1 bytes @ 0x0
  7071                           
  7072     00A0                     ??_ADC_SelectChannel:	
  7073                           ; 1 bytes @ 0x0
  7074                           
  7075     00A0                     ??_pwm_fan_Initialize:	
  7076                           ; 1 bytes @ 0x0
  7077                           
  7078     00A0                     ??_CLOCK_Initialize:	
  7079                           ; 1 bytes @ 0x0
  7080                           
  7081     00A0                     ??_PIN_MANAGER_Initialize:	
  7082                           ; 1 bytes @ 0x0
  7083                           
  7084                           
  7085                           ; 1 bytes @ 0x0
  7086     00A0                     	ds	1
  7087     00A1                     ADC_SelectChannel@channel:
  7088     00A1                     EUSART_Write@tempTxHead:	
  7089                           ; 1 bytes @ 0x1
  7090                           
  7091     00A1                     ??_EUSART_Write:	
  7092                           ; 1 bytes @ 0x1
  7093                           
  7094                           
  7095                           ; 1 bytes @ 0x1
  7096     00A1                     	ds	1
  7097     00A2                     putch@txData:
  7098     00A2                     strlen@a:	
  7099                           ; 1 bytes @ 0x2
  7100                           
  7101     00A2                     ___wmul@multiplicand:	
  7102                           ; 1 bytes @ 0x2
  7103                           
  7104     00A2                     ___awdiv@dividend:	
  7105                           ; 2 bytes @ 0x2
  7106                           
  7107     00A2                     ___awmod@dividend:	
  7108                           ; 2 bytes @ 0x2
  7109                           
  7110     00A2                     ___lwdiv@dividend:	
  7111                           ; 2 bytes @ 0x2
  7112                           
  7113     00A2                     ___lwmod@dividend:	
  7114                           ; 2 bytes @ 0x2
  7115                           
  7116     00A2                     ??_ADC_SetInterruptHandler:	
  7117                           ; 2 bytes @ 0x2
  7118                           
  7119     00A2                     ??_INT_SetInterruptHandler:	
  7120                           ; 1 bytes @ 0x2
  7121                           
  7122     00A2                     ??_EUSART_Initialize:	
  7123                           ; 1 bytes @ 0x2
  7124                           
  7125     00A2                     ??_EUSART_FramingErrorCallbackRegister:	
  7126                           ; 1 bytes @ 0x2
  7127                           
  7128     00A2                     ??_EUSART_OverrunErrorCallbackRegister:	
  7129                           ; 1 bytes @ 0x2
  7130                           
  7131     00A2                     ??_initAdcMultiplexer:	
  7132                           ; 1 bytes @ 0x2
  7133                           
  7134     00A2                     ??_strlen:	
  7135                           ; 1 bytes @ 0x2
  7136                           
  7137     00A2                     ??_ADC_Initialize:	
  7138                           ; 1 bytes @ 0x2
  7139                           
  7140     00A2                     ??_INTERRUPT_Initialize:	
  7141                           ; 1 bytes @ 0x2
  7142                           
  7143     00A2                     ??_SYSTEM_Initialize:	
  7144                           ; 1 bytes @ 0x2
  7145                           
  7146     00A2                     ??_TMR4_PeriodMatchCallbackRegister:	
  7147                           ; 1 bytes @ 0x2
  7148                           
  7149     00A2                     ??_putch:	
  7150                           ; 1 bytes @ 0x2
  7151                           
  7152                           
  7153                           ; 1 bytes @ 0x2
  7154     00A2                     	ds	1
  7155     00A3                     ?_fputc:
  7156     00A3                     fputc@c:	
  7157                           ; 2 bytes @ 0x3
  7158                           
  7159                           
  7160                           ; 2 bytes @ 0x3
  7161     00A3                     	ds	1
  7162     00A4                     ___awdiv@counter:
  7163     00A4                     ___awmod@counter:	
  7164                           ; 1 bytes @ 0x4
  7165                           
  7166     00A4                     ___lwmod@counter:	
  7167                           ; 1 bytes @ 0x4
  7168                           
  7169     00A4                     ___wmul@product:	
  7170                           ; 1 bytes @ 0x4
  7171                           
  7172     00A4                     ___lwdiv@quotient:	
  7173                           ; 2 bytes @ 0x4
  7174                           
  7175     00A4                     ??___wmul:	
  7176                           ; 2 bytes @ 0x4
  7177                           
  7178     00A4                     ??___awdiv:	
  7179                           ; 1 bytes @ 0x4
  7180                           
  7181     00A4                     ??___awmod:	
  7182                           ; 1 bytes @ 0x4
  7183                           
  7184     00A4                     ??___lwdiv:	
  7185                           ; 1 bytes @ 0x4
  7186                           
  7187     00A4                     ??___lwmod:	
  7188                           ; 1 bytes @ 0x4
  7189                           
  7190                           
  7191                           ; 1 bytes @ 0x4
  7192     00A4                     	ds	1
  7193     00A5                     ___awdiv@sign:
  7194     00A5                     ___awmod@sign:	
  7195                           ; 1 bytes @ 0x5
  7196                           
  7197     00A5                     fputc@fp:	
  7198                           ; 1 bytes @ 0x5
  7199                           
  7200                           
  7201                           ; 2 bytes @ 0x5
  7202     00A5                     	ds	1
  7203     00A6                     ?_abs:
  7204     00A6                     ?_read_prec_or_width:	
  7205                           ; 2 bytes @ 0x6
  7206                           
  7207     00A6                     ___lwdiv@counter:	
  7208                           ; 2 bytes @ 0x6
  7209                           
  7210     00A6                     read_prec_or_width@fmt:	
  7211                           ; 1 bytes @ 0x6
  7212                           
  7213     00A6                     ___awdiv@quotient:	
  7214                           ; 1 bytes @ 0x6
  7215                           
  7216     00A6                     abs@a:	
  7217                           ; 2 bytes @ 0x6
  7218                           
  7219                           
  7220                           ; 2 bytes @ 0x6
  7221     00A6                     	ds	1
  7222     00A7                     read_prec_or_width@ap:
  7223     00A7                     ??_fputc:	
  7224                           ; 1 bytes @ 0x7
  7225                           
  7226                           
  7227                           ; 1 bytes @ 0x7
  7228     00A7                     	ds	1
  7229     00A8                     ??_abs:
  7230     00A8                     ??_read_prec_or_width:	
  7231                           ; 1 bytes @ 0x8
  7232                           
  7233                           
  7234                           ; 1 bytes @ 0x8
  7235     00A8                     	ds	3
  7236     00AB                     read_prec_or_width@c:
  7237                           
  7238                           ; 1 bytes @ 0xB
  7239     00AB                     	ds	1
  7240     00AC                     ?_fputs:
  7241     00AC                     fputs@s:	
  7242                           ; 2 bytes @ 0xC
  7243                           
  7244     00AC                     read_prec_or_width@n:	
  7245                           ; 1 bytes @ 0xC
  7246                           
  7247                           
  7248                           ; 2 bytes @ 0xC
  7249     00AC                     	ds	1
  7250     00AD                     fputs@fp:
  7251                           
  7252                           ; 2 bytes @ 0xD
  7253     00AD                     	ds	2
  7254     00AF                     ??_fputs:
  7255                           
  7256                           ; 1 bytes @ 0xF
  7257     00AF                     	ds	2
  7258     00B1                     fputs@c:
  7259                           
  7260                           ; 1 bytes @ 0x11
  7261     00B1                     	ds	1
  7262     00B2                     fputs@i:
  7263                           
  7264                           ; 2 bytes @ 0x12
  7265     00B2                     	ds	2
  7266     00B4                     ?_pad:
  7267     00B4                     pad@fp:	
  7268                           ; 2 bytes @ 0x14
  7269                           
  7270                           
  7271                           ; 2 bytes @ 0x14
  7272     00B4                     	ds	2
  7273     00B6                     pad@buf:
  7274                           
  7275                           ; 1 bytes @ 0x16
  7276     00B6                     	ds	1
  7277     00B7                     pad@p:
  7278                           
  7279                           ; 2 bytes @ 0x17
  7280     00B7                     	ds	2
  7281     00B9                     ??_pad:
  7282                           
  7283                           ; 1 bytes @ 0x19
  7284     00B9                     	ds	1
  7285     00BA                     pad@i:
  7286                           
  7287                           ; 2 bytes @ 0x1A
  7288     00BA                     	ds	2
  7289     00BC                     ?_dtoa:
  7290     00BC                     ?_utoa:	
  7291                           ; 2 bytes @ 0x1C
  7292                           
  7293     00BC                     dtoa@fp:	
  7294                           ; 2 bytes @ 0x1C
  7295                           
  7296     00BC                     utoa@fp:	
  7297                           ; 2 bytes @ 0x1C
  7298                           
  7299                           
  7300                           ; 2 bytes @ 0x1C
  7301     00BC                     	ds	2
  7302     00BE                     dtoa@d:
  7303     00BE                     utoa@d:	
  7304                           ; 2 bytes @ 0x1E
  7305                           
  7306                           
  7307                           ; 2 bytes @ 0x1E
  7308     00BE                     	ds	2
  7309     00C0                     ??_dtoa:
  7310     00C0                     ??_utoa:	
  7311                           ; 1 bytes @ 0x20
  7312                           
  7313                           
  7314                           ; 1 bytes @ 0x20
  7315     00C0                     	ds	1
  7316     00C1                     utoa@p:
  7317     00C1                     _dtoa$2634:	
  7318                           ; 1 bytes @ 0x21
  7319                           
  7320                           
  7321                           ; 2 bytes @ 0x21
  7322     00C1                     	ds	1
  7323     00C2                     utoa@w:
  7324                           
  7325                           ; 2 bytes @ 0x22
  7326     00C2                     	ds	1
  7327     00C3                     dtoa@p:
  7328                           
  7329                           ; 1 bytes @ 0x23
  7330     00C3                     	ds	1
  7331     00C4                     dtoa@w:
  7332     00C4                     utoa@i:	
  7333                           ; 2 bytes @ 0x24
  7334                           
  7335                           
  7336                           ; 2 bytes @ 0x24
  7337     00C4                     	ds	2
  7338     00C6                     dtoa@s:
  7339                           
  7340                           ; 1 bytes @ 0x26
  7341     00C6                     	ds	1
  7342     00C7                     dtoa@i:
  7343                           
  7344                           ; 2 bytes @ 0x27
  7345     00C7                     	ds	2
  7346     00C9                     ?_vfpfcnvrt:
  7347     00C9                     vfpfcnvrt@fp:	
  7348                           ; 2 bytes @ 0x29
  7349                           
  7350                           
  7351                           ; 2 bytes @ 0x29
  7352     00C9                     	ds	2
  7353     00CB                     vfpfcnvrt@fmt:
  7354                           
  7355                           ; 1 bytes @ 0x2B
  7356     00CB                     	ds	1
  7357     00CC                     vfpfcnvrt@ap:
  7358                           
  7359                           ; 2 bytes @ 0x2C
  7360     00CC                     	ds	2
  7361     00CE                     ??_vfpfcnvrt:
  7362                           
  7363                           ; 1 bytes @ 0x2E
  7364     00CE                     	ds	4
  7365     00D2                     vfpfcnvrt@done:
  7366                           
  7367                           ; 1 bytes @ 0x32
  7368     00D2                     	ds	1
  7369     00D3                     vfpfcnvrt@convarg:
  7370                           
  7371                           ; 4 bytes @ 0x33
  7372     00D3                     	ds	4
  7373     00D7                     vfpfcnvrt@cp:
  7374                           
  7375                           ; 2 bytes @ 0x37
  7376     00D7                     	ds	2
  7377     00D9                     ?_vfprintf:
  7378     00D9                     vfprintf@fp:	
  7379                           ; 2 bytes @ 0x39
  7380                           
  7381                           
  7382                           ; 2 bytes @ 0x39
  7383     00D9                     	ds	2
  7384     00DB                     vfprintf@fmt:
  7385                           
  7386                           ; 2 bytes @ 0x3B
  7387     00DB                     	ds	2
  7388     00DD                     vfprintf@ap:
  7389                           
  7390                           ; 1 bytes @ 0x3D
  7391     00DD                     	ds	1
  7392     00DE                     ??_vfprintf:
  7393                           
  7394                           ; 1 bytes @ 0x3E
  7395     00DE                     	ds	1
  7396     00DF                     vfprintf@cfmt:
  7397                           
  7398                           ; 2 bytes @ 0x3F
  7399     00DF                     	ds	2
  7400     00E1                     ?_printf:
  7401     00E1                     printf@fmt:	
  7402                           ; 2 bytes @ 0x41
  7403                           
  7404                           
  7405                           ; 2 bytes @ 0x41
  7406     00E1                     	ds	6
  7407     00E7                     printf@ap:
  7408     00E7                     ??_printf:	
  7409                           ; 1 bytes @ 0x47
  7410                           
  7411                           
  7412                           ; 1 bytes @ 0x47
  7413     00E7                     	ds	1
  7414     00E8                     ?_printOut:
  7415     00E8                     printOut@str:	
  7416                           ; 1 bytes @ 0x48
  7417                           
  7418                           
  7419                           ; 2 bytes @ 0x48
  7420     00E8                     	ds	2
  7421     00EA                     ??_printOut:
  7422     00EA                     ??_main:	
  7423                           ; 1 bytes @ 0x4A
  7424                           
  7425                           
  7426                           ; 1 bytes @ 0x4A
  7427     00EA                     	ds	2
  7428                           
  7429                           	psect	cstackCOMMON
  7430     0070                     __pcstackCOMMON:
  7431     0070                     ?_ADC_DefaultInterruptHandler:
  7432     0070                     ?_I2C2_Initialize:	
  7433                           ; 1 bytes @ 0x0
  7434                           
  7435     0070                     ?_I2C2_EVENT_IDLE:	
  7436                           ; 1 bytes @ 0x0
  7437                           
  7438     0070                     ?_I2C2_EVENT_SEND_RD_ADDR:	
  7439                           ; 1 bytes @ 0x0
  7440                           
  7441     0070                     ?_I2C2_EVENT_SEND_WR_ADDR:	
  7442                           ; 1 bytes @ 0x0
  7443                           
  7444     0070                     ?_I2C2_EVENT_TX:	
  7445                           ; 1 bytes @ 0x0
  7446                           
  7447     0070                     ?_I2C2_EVENT_RX:	
  7448                           ; 1 bytes @ 0x0
  7449                           
  7450     0070                     ?_I2C2_EVENT_NACK:	
  7451                           ; 1 bytes @ 0x0
  7452                           
  7453     0070                     ?_I2C2_EVENT_ERROR:	
  7454                           ; 1 bytes @ 0x0
  7455                           
  7456     0070                     ?_I2C2_EVENT_STOP:	
  7457                           ; 1 bytes @ 0x0
  7458                           
  7459     0070                     ?_I2C2_EVENT_RESET:	
  7460                           ; 1 bytes @ 0x0
  7461                           
  7462     0070                     ?_I2C2_InterruptsEnable:	
  7463                           ; 1 bytes @ 0x0
  7464                           
  7465     0070                     ?_I2C2_EventHandler:	
  7466                           ; 1 bytes @ 0x0
  7467                           
  7468     0070                     ?_I2C2_ErrorEventHandler:	
  7469                           ; 1 bytes @ 0x0
  7470                           
  7471     0070                     ?_I2C2_InterruptClear:	
  7472                           ; 1 bytes @ 0x0
  7473                           
  7474     0070                     ?_I2C2_ErrorInterruptClear:	
  7475                           ; 1 bytes @ 0x0
  7476                           
  7477     0070                     ?_I2C2_StatusFlagsClear:	
  7478                           ; 1 bytes @ 0x0
  7479                           
  7480     0070                     ?_I2C2_IsAddr:	
  7481                           ; 1 bytes @ 0x0
  7482                           
  7483     0070                     ?_I2C2_IsNack:	
  7484                           ; 1 bytes @ 0x0
  7485                           
  7486     0070                     ?_I2C2_IsData:	
  7487                           ; 1 bytes @ 0x0
  7488                           
  7489     0070                     ?_I2C2_DataTransmit:	
  7490                           ; 1 bytes @ 0x0
  7491                           
  7492     0070                     ?_I2C2_RestartEnable:	
  7493                           ; 1 bytes @ 0x0
  7494                           
  7495     0070                     ?_I2C2_IsRxBufFull:	
  7496                           ; 1 bytes @ 0x0
  7497                           
  7498     0070                     ?_I2C2_DataReceive:	
  7499                           ; 1 bytes @ 0x0
  7500                           
  7501     0070                     ?_I2C2_AckSend:	
  7502                           ; 1 bytes @ 0x0
  7503                           
  7504     0070                     ?_I2C2_RestartDisable:	
  7505                           ; 1 bytes @ 0x0
  7506                           
  7507     0070                     ?_I2C2_NackSend:	
  7508                           ; 1 bytes @ 0x0
  7509                           
  7510     0070                     ?_I2C2_ReceiveEnable:	
  7511                           ; 1 bytes @ 0x0
  7512                           
  7513     0070                     ?_I2C2_StopSend:	
  7514                           ; 1 bytes @ 0x0
  7515                           
  7516     0070                     ?_I2C2_BusReset:	
  7517                           ; 1 bytes @ 0x0
  7518                           
  7519     0070                     ?_SPI1_Initialize:	
  7520                           ; 1 bytes @ 0x0
  7521                           
  7522     0070                     ?_TMR4_ISR:	
  7523                           ; 1 bytes @ 0x0
  7524                           
  7525     0070                     ?_TMR2_ISR:	
  7526                           ; 1 bytes @ 0x0
  7527                           
  7528     0070                     ?_TMR2_Initialize:	
  7529                           ; 1 bytes @ 0x0
  7530                           
  7531     0070                     ?_TMR4_Initialize:	
  7532                           ; 1 bytes @ 0x0
  7533                           
  7534     0070                     ?_TMR6_Initialize:	
  7535                           ; 1 bytes @ 0x0
  7536                           
  7537     0070                     ?_EUSART_Initialize:	
  7538                           ; 1 bytes @ 0x0
  7539                           
  7540     0070                     ?_TMR2_DefaultPeriodMatchCallback:	
  7541                           ; 1 bytes @ 0x0
  7542                           
  7543     0070                     ?_TMR4_DefaultPeriodMatchCallback:	
  7544                           ; 1 bytes @ 0x0
  7545                           
  7546     0070                     ?_EUSART_IsTxReady:	
  7547                           ; 1 bytes @ 0x0
  7548                           
  7549     0070                     ?_EUSART_ReceiveISR:	
  7550                           ; 1 bytes @ 0x0
  7551                           
  7552     0070                     ?_EUSART_TransmitISR:	
  7553                           ; 1 bytes @ 0x0
  7554                           
  7555     0070                     ?_EUSART_DefaultFramingErrorCallback:	
  7556                           ; 1 bytes @ 0x0
  7557                           
  7558     0070                     ?_EUSART_DefaultOverrunErrorCallback:	
  7559                           ; 1 bytes @ 0x0
  7560                           
  7561     0070                     ?_initAdcMultiplexer:	
  7562                           ; 1 bytes @ 0x0
  7563                           
  7564     0070                     ?_controller:	
  7565                           ; 1 bytes @ 0x0
  7566                           
  7567     0070                     ?_ADC_Initialize:	
  7568                           ; 1 bytes @ 0x0
  7569                           
  7570     0070                     ?_ADC_SelectChannel:	
  7571                           ; 1 bytes @ 0x0
  7572                           
  7573     0070                     ?_ADC_ISR:	
  7574                           ; 1 bytes @ 0x0
  7575                           
  7576     0070                     ?_I2C2_ISR:	
  7577                           ; 1 bytes @ 0x0
  7578                           
  7579     0070                     ?_I2C2_ERROR_ISR:	
  7580                           ; 1 bytes @ 0x0
  7581                           
  7582     0070                     ?_I2C2_Close:	
  7583                           ; 1 bytes @ 0x0
  7584                           
  7585     0070                     ?_pwm_fan_Initialize:	
  7586                           ; 1 bytes @ 0x0
  7587                           
  7588     0070                     ?_pwm_fan_LoadDutyValue:	
  7589                           ; 1 bytes @ 0x0
  7590                           
  7591     0070                     ?_INTERRUPT_Initialize:	
  7592                           ; 1 bytes @ 0x0
  7593                           
  7594     0070                     ?_INTERRUPT_InterruptManager:	
  7595                           ; 1 bytes @ 0x0
  7596                           
  7597     0070                     ?_CLOCK_Initialize:	
  7598                           ; 1 bytes @ 0x0
  7599                           
  7600     0070                     ?_PIN_MANAGER_Initialize:	
  7601                           ; 1 bytes @ 0x0
  7602                           
  7603     0070                     ?_SYSTEM_Initialize:	
  7604                           ; 1 bytes @ 0x0
  7605                           
  7606     0070                     ?_putch:	
  7607                           ; 1 bytes @ 0x0
  7608                           
  7609     0070                     ?_adcConversionDoneHandler:	
  7610                           ; 1 bytes @ 0x0
  7611                           
  7612     0070                     ?i1_ADC_SelectChannel:	
  7613                           ; 1 bytes @ 0x0
  7614                           
  7615     0070                     ?__Umul8_16:	
  7616                           ; 1 bytes @ 0x0
  7617                           
  7618     0070                     ?_ADC_GetConversionResult:	
  7619                           ; 2 bytes @ 0x0
  7620                           
  7621     0070                     ?_main:	
  7622                           ; 2 bytes @ 0x0
  7623                           
  7624     0070                     ?_getHoogtesensor:	
  7625                           ; 2 bytes @ 0x0
  7626                           
  7627     0070                     ?___xxtofl:	
  7628                           ; 2 bytes @ 0x0
  7629                           
  7630     0070                     I2C2_EVENT_RX@retEventState:	
  7631                           ; 4 bytes @ 0x0
  7632                           
  7633     0070                     I2C2_EVENT_NACK@retEventState:	
  7634                           ; 1 bytes @ 0x0
  7635                           
  7636     0070                     I2C2_EVENT_ERROR@retEventState:	
  7637                           ; 1 bytes @ 0x0
  7638                           
  7639     0070                     I2C2_DataTransmit@data:	
  7640                           ; 1 bytes @ 0x0
  7641                           
  7642     0070                     EUSART_ReceiveISR@regValue:	
  7643                           ; 1 bytes @ 0x0
  7644                           
  7645     0070                     EUSART_TransmitISR@tempTxTail:	
  7646                           ; 1 bytes @ 0x0
  7647                           
  7648     0070                     __Umul8_16@multiplicand:	
  7649                           ; 1 bytes @ 0x0
  7650                           
  7651     0070                     pwm_fan_LoadDutyValue@dutyValue:	
  7652                           ; 1 bytes @ 0x0
  7653                           
  7654     0070                     ___xxtofl@val:	
  7655                           ; 2 bytes @ 0x0
  7656                           
  7657     0070                     ??_ADC_DefaultInterruptHandler:	
  7658                           ; 4 bytes @ 0x0
  7659                           
  7660     0070                     ??_I2C2_EVENT_IDLE:	
  7661                           ; 1 bytes @ 0x0
  7662                           
  7663     0070                     ??_I2C2_EVENT_SEND_RD_ADDR:	
  7664                           ; 1 bytes @ 0x0
  7665                           
  7666     0070                     ??_I2C2_EVENT_RX:	
  7667                           ; 1 bytes @ 0x0
  7668                           
  7669     0070                     ??_I2C2_EVENT_NACK:	
  7670                           ; 1 bytes @ 0x0
  7671                           
  7672     0070                     ??_I2C2_EVENT_ERROR:	
  7673                           ; 1 bytes @ 0x0
  7674                           
  7675     0070                     ??_I2C2_EVENT_STOP:	
  7676                           ; 1 bytes @ 0x0
  7677                           
  7678     0070                     ??_I2C2_EVENT_RESET:	
  7679                           ; 1 bytes @ 0x0
  7680                           
  7681     0070                     ??_I2C2_InterruptClear:	
  7682                           ; 1 bytes @ 0x0
  7683                           
  7684     0070                     ??_I2C2_ErrorInterruptClear:	
  7685                           ; 1 bytes @ 0x0
  7686                           
  7687     0070                     ??_I2C2_StatusFlagsClear:	
  7688                           ; 1 bytes @ 0x0
  7689                           
  7690     0070                     ??_I2C2_IsAddr:	
  7691                           ; 1 bytes @ 0x0
  7692                           
  7693     0070                     ??_I2C2_IsNack:	
  7694                           ; 1 bytes @ 0x0
  7695                           
  7696     0070                     ??_I2C2_IsData:	
  7697                           ; 1 bytes @ 0x0
  7698                           
  7699     0070                     ??_I2C2_DataTransmit:	
  7700                           ; 1 bytes @ 0x0
  7701                           
  7702     0070                     ??_I2C2_RestartEnable:	
  7703                           ; 1 bytes @ 0x0
  7704                           
  7705     0070                     ??_I2C2_IsRxBufFull:	
  7706                           ; 1 bytes @ 0x0
  7707                           
  7708     0070                     ??_I2C2_DataReceive:	
  7709                           ; 1 bytes @ 0x0
  7710                           
  7711     0070                     ??_I2C2_AckSend:	
  7712                           ; 1 bytes @ 0x0
  7713                           
  7714     0070                     ??_I2C2_RestartDisable:	
  7715                           ; 1 bytes @ 0x0
  7716                           
  7717     0070                     ??_I2C2_NackSend:	
  7718                           ; 1 bytes @ 0x0
  7719                           
  7720     0070                     ??_I2C2_ReceiveEnable:	
  7721                           ; 1 bytes @ 0x0
  7722                           
  7723     0070                     ??_I2C2_StopSend:	
  7724                           ; 1 bytes @ 0x0
  7725                           
  7726     0070                     ??_I2C2_BusReset:	
  7727                           ; 1 bytes @ 0x0
  7728                           
  7729     0070                     ??_TMR2_ISR:	
  7730                           ; 1 bytes @ 0x0
  7731                           
  7732     0070                     ??_TMR2_DefaultPeriodMatchCallback:	
  7733                           ; 1 bytes @ 0x0
  7734                           
  7735     0070                     ??_TMR4_DefaultPeriodMatchCallback:	
  7736                           ; 1 bytes @ 0x0
  7737                           
  7738     0070                     ??_EUSART_ReceiveISR:	
  7739                           ; 1 bytes @ 0x0
  7740                           
  7741     0070                     ??_EUSART_TransmitISR:	
  7742                           ; 1 bytes @ 0x0
  7743                           
  7744     0070                     ??_EUSART_DefaultFramingErrorCallback:	
  7745                           ; 1 bytes @ 0x0
  7746                           
  7747     0070                     ??_EUSART_DefaultOverrunErrorCallback:	
  7748                           ; 1 bytes @ 0x0
  7749                           
  7750     0070                     ??_I2C2_Close:	
  7751                           ; 1 bytes @ 0x0
  7752                           
  7753     0070                     ??i1_ADC_SelectChannel:	
  7754                           ; 1 bytes @ 0x0
  7755                           
  7756                           
  7757                           ; 1 bytes @ 0x0
  7758     0070                     	ds	1
  7759     0071                     I2C2_EVENT_TX@retEventState:
  7760     0071                     EUSART_ReceiveISR@tempRxHead:	
  7761                           ; 1 bytes @ 0x1
  7762                           
  7763     0071                     i1ADC_SelectChannel@channel:	
  7764                           ; 1 bytes @ 0x1
  7765                           
  7766     0071                     ??_I2C2_EVENT_SEND_WR_ADDR:	
  7767                           ; 1 bytes @ 0x1
  7768                           
  7769     0071                     ??_I2C2_EVENT_TX:	
  7770                           ; 1 bytes @ 0x1
  7771                           
  7772                           
  7773                           ; 1 bytes @ 0x1
  7774     0071                     	ds	1
  7775     0072                     ??_I2C2_EventHandler:
  7776     0072                     ??_I2C2_ErrorEventHandler:	
  7777                           ; 1 bytes @ 0x2
  7778                           
  7779     0072                     ??__Umul8_16:	
  7780                           ; 1 bytes @ 0x2
  7781                           
  7782     0072                     ??_ADC_GetConversionResult:	
  7783                           ; 1 bytes @ 0x2
  7784                           
  7785     0072                     ??_pwm_fan_LoadDutyValue:	
  7786                           ; 1 bytes @ 0x2
  7787                           
  7788     0072                     ??_adcConversionDoneHandler:	
  7789                           ; 1 bytes @ 0x2
  7790                           
  7791     0072                     ??_getHoogtesensor:	
  7792                           ; 1 bytes @ 0x2
  7793                           
  7794                           
  7795                           ; 1 bytes @ 0x2
  7796     0072                     	ds	2
  7797     0074                     __Umul8_16@product:
  7798     0074                     ??_ADC_ISR:	
  7799                           ; 2 bytes @ 0x4
  7800                           
  7801     0074                     ??_I2C2_ISR:	
  7802                           ; 1 bytes @ 0x4
  7803                           
  7804     0074                     ??_I2C2_ERROR_ISR:	
  7805                           ; 1 bytes @ 0x4
  7806                           
  7807     0074                     ??___xxtofl:	
  7808                           ; 1 bytes @ 0x4
  7809                           
  7810                           
  7811                           ; 1 bytes @ 0x4
  7812     0074                     	ds	2
  7813     0076                     __Umul8_16@word_mpld:
  7814                           
  7815                           ; 2 bytes @ 0x6
  7816     0076                     	ds	2
  7817     0078                     __Umul8_16@multiplier:
  7818     0078                     ___xxtofl@sign:	
  7819                           ; 1 bytes @ 0x8
  7820                           
  7821                           
  7822                           ; 1 bytes @ 0x8
  7823     0078                     	ds	1
  7824     0079                     ___xxtofl@exp:
  7825                           
  7826                           ; 1 bytes @ 0x9
  7827     0079                     	ds	1
  7828     007A                     ___xxtofl@arg:
  7829                           
  7830                           ; 4 bytes @ 0xA
  7831     007A                     	ds	4
  7832     007E                     ??_TMR4_ISR:
  7833     007E                     ??_INTERRUPT_InterruptManager:	
  7834                           ; 1 bytes @ 0xE
  7835                           
  7836                           
  7837                           	psect	cstackBANK0
  7838     0020                     __pcstackBANK0:	
  7839                           ; 1 bytes @ 0xE
  7840                           
  7841     0020                     ?___flmul:
  7842     0020                     ___flmul@b:	
  7843                           ; 4 bytes @ 0x0
  7844                           
  7845                           
  7846                           ; 4 bytes @ 0x0
  7847     0020                     	ds	4
  7848     0024                     ___flmul@a:
  7849                           
  7850                           ; 4 bytes @ 0x4
  7851     0024                     	ds	4
  7852     0028                     ??___flmul:
  7853                           
  7854                           ; 1 bytes @ 0x8
  7855     0028                     	ds	5
  7856     002D                     ___flmul@sign:
  7857                           
  7858                           ; 1 bytes @ 0xD
  7859     002D                     	ds	1
  7860     002E                     ___flmul@grs:
  7861                           
  7862                           ; 4 bytes @ 0xE
  7863     002E                     	ds	4
  7864     0032                     ___flmul@aexp:
  7865                           
  7866                           ; 1 bytes @ 0x12
  7867     0032                     	ds	1
  7868     0033                     ___flmul@bexp:
  7869                           
  7870                           ; 1 bytes @ 0x13
  7871     0033                     	ds	1
  7872     0034                     ___flmul@prod:
  7873                           
  7874                           ; 4 bytes @ 0x14
  7875     0034                     	ds	4
  7876     0038                     ___flmul@temp:
  7877                           
  7878                           ; 2 bytes @ 0x18
  7879     0038                     	ds	2
  7880     003A                     ?___fltol:
  7881     003A                     ?___fladd:	
  7882                           ; 4 bytes @ 0x1A
  7883                           
  7884     003A                     ___fltol@f1:	
  7885                           ; 4 bytes @ 0x1A
  7886                           
  7887     003A                     ___fladd@b:	
  7888                           ; 4 bytes @ 0x1A
  7889                           
  7890                           
  7891                           ; 4 bytes @ 0x1A
  7892     003A                     	ds	4
  7893     003E                     ___fladd@a:
  7894     003E                     ??___fltol:	
  7895                           ; 4 bytes @ 0x1E
  7896                           
  7897                           
  7898                           ; 1 bytes @ 0x1E
  7899     003E                     	ds	4
  7900     0042                     ___fltol@sign1:
  7901     0042                     ??___fladd:	
  7902                           ; 1 bytes @ 0x22
  7903                           
  7904                           
  7905                           ; 1 bytes @ 0x22
  7906     0042                     	ds	1
  7907     0043                     ___fltol@exp1:
  7908                           
  7909                           ; 1 bytes @ 0x23
  7910     0043                     	ds	7
  7911     004A                     ___fladd@signs:
  7912                           
  7913                           ; 1 bytes @ 0x2A
  7914     004A                     	ds	1
  7915     004B                     ___fladd@aexp:
  7916                           
  7917                           ; 1 bytes @ 0x2B
  7918     004B                     	ds	1
  7919     004C                     ___fladd@bexp:
  7920                           
  7921                           ; 1 bytes @ 0x2C
  7922     004C                     	ds	1
  7923     004D                     ___fladd@grs:
  7924                           
  7925                           ; 1 bytes @ 0x2D
  7926     004D                     	ds	1
  7927     004E                     ??_controller:
  7928                           
  7929                           ; 1 bytes @ 0x2E
  7930     004E                     	ds	1
  7931     004F                     controller@P:
  7932                           
  7933                           ; 2 bytes @ 0x2F
  7934     004F                     	ds	2
  7935     0051                     controller@I:
  7936                           
  7937                           ; 2 bytes @ 0x31
  7938     0051                     	ds	2
  7939     0053                     controller@error:
  7940                           
  7941                           ; 2 bytes @ 0x33
  7942     0053                     	ds	2
  7943                           
  7944                           	psect	maintext
  7945     0AB3                     __pmaintext:	
  7946 ;;
  7947 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
  7948 ;;
  7949 ;; *************** function _main *****************
  7950 ;; Defined at:
  7951 ;;		line 52 in file "main.c"
  7952 ;; Parameters:    Size  Location     Type
  7953 ;;		None
  7954 ;; Auto vars:     Size  Location     Type
  7955 ;;		None
  7956 ;; Return value:  Size  Location     Type
  7957 ;;                  2  1054[None  ] int 
  7958 ;; Registers used:
  7959 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  7960 ;; Tracked objects:
  7961 ;;		On entry : B1F/0
  7962 ;;		On exit  : 0/0
  7963 ;;		Unchanged: 0/0
  7964 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7965 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7966 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7967 ;;      Temps:          0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0
  7968 ;;      Totals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0
  7969 ;;Total ram usage:        2 bytes
  7970 ;; Hardware stack levels required when called: 17
  7971 ;; This function calls:
  7972 ;;		_SYSTEM_Initialize
  7973 ;;		_TMR4_PeriodMatchCallbackRegister
  7974 ;;		_initAdcMultiplexer
  7975 ;;		_printOut
  7976 ;; This function is called by:
  7977 ;;		Startup code after reset
  7978 ;; This function uses a non-reentrant model
  7979 ;;
  7980                           
  7981     0AB3                     _main:	
  7982                           ;psect for function _main
  7983                           
  7984     0AB3                     l5847:	
  7985                           ;incstack = 0
  7986 ;; hardware stack exceeded
  7987                           ; Regs used in _main: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  7988                           
  7989                           
  7990                           ;main.c: 54:     SYSTEM_Initialize();
  7991     0AB3  3189  2169  318A   	fcall	_SYSTEM_Initialize
  7992     0AB6                     l5849:
  7993                           
  7994                           ;main.c: 60:     (INTCONbits.GIE = 1);
  7995     0AB6  178B               	bsf	11,7	;volatile
  7996     0AB7                     l5851:
  7997                           
  7998                           ;main.c: 66:     (INTCONbits.PEIE = 1);
  7999     0AB7  170B               	bsf	11,6	;volatile
  8000                           
  8001                           ;main.c: 71:     initAdcMultiplexer();
  8002     0AB8  3188  200F  318A   	fcall	_initAdcMultiplexer
  8003                           
  8004                           ;main.c: 72:     TMR4_PeriodMatchCallbackRegister(controller);
  8005     0ABB  3062               	movlw	low _controller
  8006     0ABC  0021               	movlb	1	; select bank1
  8007     0ABD  00A0               	movwf	TMR4_PeriodMatchCallbackRegister@CallbackHandler^(0+128)
  8008     0ABE  3006               	movlw	high _controller
  8009     0ABF  00A1               	movwf	(TMR4_PeriodMatchCallbackRegister@CallbackHandler^(0+128)+1)
  8010     0AC0  3197  27AD  318A   	fcall	_TMR4_PeriodMatchCallbackRegister
  8011     0AC3                     l5853:
  8012     0AC3  1003               	clrc
  8013     0AC4  0022               	movlb	2	; select bank2
  8014     0AC5  1E8C               	btfss	12,5	;volatile
  8015     0AC6  1403               	setc
  8016     0AC7  1803               	btfsc	3,0
  8017     0AC8  2ACA               	goto	u5311
  8018     0AC9  2ACD               	goto	u5310
  8019     0ACA                     u5311:
  8020     0ACA  0022               	movlb	2	; select bank2
  8021     0ACB  168C               	bsf	12,5	;volatile
  8022     0ACC  2ACF               	goto	u5324
  8023     0ACD                     u5310:
  8024     0ACD  0022               	movlb	2	; select bank2
  8025     0ACE  128C               	bcf	12,5	;volatile
  8026     0ACF                     u5324:
  8027     0ACF                     l5855:
  8028                           
  8029                           ;main.c: 96:         _delay((unsigned long)((1000)*(32000000U/4000.0)));
  8030     0ACF  3029               	movlw	41
  8031     0AD0  0021               	movlb	1	; select bank1
  8032     0AD1  00EB               	movwf	(??_main^(0+128)+1)
  8033     0AD2  3096               	movlw	150
  8034     0AD3  00EA               	movwf	??_main^(0+128)
  8035     0AD4  307F               	movlw	127
  8036     0AD5                     u5747:
  8037     0AD5  0B89               	decfsz	9,f
  8038     0AD6  2AD5               	goto	u5747
  8039     0AD7  0BEA               	decfsz	??_main^(0+128),f
  8040     0AD8  2AD5               	goto	u5747
  8041     0AD9  0BEB               	decfsz	(??_main^(0+128)+1),f
  8042     0ADA  2AD5               	goto	u5747
  8043     0ADB                     l5857:
  8044                           
  8045                           ;main.c: 98:         printOut("H");
  8046     0ADB  302B               	movlw	low (STR_1| (0+32768))
  8047     0ADC  0021               	movlb	1	; select bank1
  8048     0ADD  00E8               	movwf	printOut@str^(0+128)
  8049     0ADE  3098               	movlw	high (STR_1| (0+32768))
  8050     0ADF  00E9               	movwf	(printOut@str^(0+128)+1)
  8051     0AE0  3197  27BF  318A   	fcall	_printOut
  8052     0AE3  2AC3               	goto	l5853
  8053     0AE4  3180  2874         	ljmp	start
  8054     0AE6                     __end_of_main:
  8055                           
  8056                           	psect	text1
  8057     17BF                     __ptext1:	
  8058 ;; *************** function _printOut *****************
  8059 ;; Defined at:
  8060 ;;		line 91 in file "UART.c"
  8061 ;; Parameters:    Size  Location     Type
  8062 ;;  str             2   72[BANK1 ] PTR unsigned char 
  8063 ;;		 -> STR_1(2), 
  8064 ;; Auto vars:     Size  Location     Type
  8065 ;;		None
  8066 ;; Return value:  Size  Location     Type
  8067 ;;                  1    wreg      void 
  8068 ;; Registers used:
  8069 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  8070 ;; Tracked objects:
  8071 ;;		On entry : 0/0
  8072 ;;		On exit  : 0/0
  8073 ;;		Unchanged: 0/0
  8074 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8075 ;;      Params:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0
  8076 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8077 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8078 ;;      Totals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0
  8079 ;;Total ram usage:        2 bytes
  8080 ;; Hardware stack levels used: 1
  8081 ;; Hardware stack levels required when called: 16
  8082 ;; This function calls:
  8083 ;;		_printf
  8084 ;; This function is called by:
  8085 ;;		_main
  8086 ;; This function uses a non-reentrant model
  8087 ;;
  8088                           
  8089     17BF                     _printOut:	
  8090                           ;psect for function _printOut
  8091                           
  8092     17BF                     l5525:	
  8093                           ;incstack = 0
  8094 ;; hardware stack exceeded
  8095                           ; Regs used in _printOut: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  8096                           
  8097                           
  8098                           ;UART.c: 92:     printf(str);
  8099     17BF  0021               	movlb	1	; select bank1
  8100     17C0  0869               	movf	(printOut@str+1)^(0+128),w
  8101     17C1  00E2               	movwf	(printf@fmt+1)^(0+128)
  8102     17C2  0868               	movf	printOut@str^(0+128),w
  8103     17C3  00E1               	movwf	printf@fmt^(0+128)
  8104     17C4  3188  2085  3197   	fcall	_printf
  8105     17C7                     l1157:
  8106     17C7  0008               	return
  8107     17C8                     __end_of_printOut:
  8108                           
  8109                           	psect	text2
  8110     0885                     __ptext2:	
  8111 ;; *************** function _printf *****************
  8112 ;; Defined at:
  8113 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\printf.c"
  8114 ;; Parameters:    Size  Location     Type
  8115 ;;  fmt             2   65[BANK1 ] PTR const unsigned char 
  8116 ;;		 -> STR_14(17), STR_13(15), STR_12(13), STR_11(13), 
  8117 ;;		 -> STR_10(25), STR_9(3), STR_8(7), STR_7(7), 
  8118 ;;		 -> STR_6(17), STR_5(15), STR_4(11), STR_3(24), 
  8119 ;;		 -> STR_2(8), STR_1(2), 
  8120 ;; Auto vars:     Size  Location     Type
  8121 ;;  ret             2    0        int 
  8122 ;;  ap              1   71[BANK1 ] PTR void [1]
  8123 ;;		 -> ?_printf(2), 
  8124 ;; Return value:  Size  Location     Type
  8125 ;;                  2   65[BANK1 ] int 
  8126 ;; Registers used:
  8127 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  8128 ;; Tracked objects:
  8129 ;;		On entry : 0/0
  8130 ;;		On exit  : 0/0
  8131 ;;		Unchanged: 0/0
  8132 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8133 ;;      Params:         0       0       6       0       0       0       0       0       0       0       0       0       
      +0       0
  8134 ;;      Locals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0
  8135 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8136 ;;      Totals:         0       0       7       0       0       0       0       0       0       0       0       0       
      +0       0
  8137 ;;Total ram usage:        7 bytes
  8138 ;; Hardware stack levels used: 1
  8139 ;; Hardware stack levels required when called: 15
  8140 ;; This function calls:
  8141 ;;		_vfprintf
  8142 ;; This function is called by:
  8143 ;;		_printOut
  8144 ;;		_printFloat
  8145 ;;		_readLine
  8146 ;;		_printLogs
  8147 ;;		_uartHandler
  8148 ;; This function uses a non-reentrant model
  8149 ;;
  8150                           
  8151     0885                     _printf:	
  8152                           ;psect for function _printf
  8153                           
  8154     0885                     l5371:	
  8155                           ;incstack = 0
  8156 ;; hardware stack exceeded
  8157                           ; Regs used in _printf: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  8158                           
  8159     0885  30E3               	movlw	(low ((?_printf| 0+2)))& (0+255)
  8160     0886  0021               	movlb	1	; select bank1
  8161     0887  00E7               	movwf	printf@ap^(0+128)
  8162     0888                     l5373:
  8163     0888  3000               	movlw	0
  8164     0889  00D9               	movwf	vfprintf@fp^(0+128)
  8165     088A  00DA               	movwf	(vfprintf@fp+1)^(0+128)
  8166     088B  0862               	movf	(printf@fmt+1)^(0+128),w
  8167     088C  00DC               	movwf	(vfprintf@fmt+1)^(0+128)
  8168     088D  0861               	movf	printf@fmt^(0+128),w
  8169     088E  00DB               	movwf	vfprintf@fmt^(0+128)
  8170     088F  30E7               	movlw	(low (printf@ap| 0))& (0+255)
  8171     0890  00DD               	movwf	vfprintf@ap^(0+128)
  8172     0891  3189  21FA  3188   	fcall	_vfprintf
  8173     0894                     l1922:
  8174     0894  0008               	return
  8175     0895                     __end_of_printf:
  8176                           
  8177                           	psect	text3
  8178     09FA                     __ptext3:	
  8179 ;; *************** function _vfprintf *****************
  8180 ;; Defined at:
  8181 ;;		line 1817 in file "C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c"
  8182 ;; Parameters:    Size  Location     Type
  8183 ;;  fp              2   57[BANK1 ] PTR struct _IO_FILE
  8184 ;;		 -> NULL(0), 
  8185 ;;  fmt             2   59[BANK1 ] PTR const unsigned char 
  8186 ;;		 -> STR_14(17), STR_13(15), STR_12(13), STR_11(13), 
  8187 ;;		 -> STR_10(25), STR_9(3), STR_8(7), STR_7(7), 
  8188 ;;		 -> STR_6(17), STR_5(15), STR_4(11), STR_3(24), 
  8189 ;;		 -> STR_2(8), STR_1(2), 
  8190 ;;  ap              1   61[BANK1 ] PTR PTR void 
  8191 ;;		 -> printf@ap(1), 
  8192 ;; Auto vars:     Size  Location     Type
  8193 ;;  cfmt            2   63[BANK1 ] PTR unsigned char 
  8194 ;;		 -> STR_14(17), STR_13(15), STR_12(13), STR_11(13), 
  8195 ;;		 -> STR_10(25), STR_9(3), STR_8(7), STR_7(7), 
  8196 ;;		 -> STR_6(17), STR_5(15), STR_4(11), STR_3(24), 
  8197 ;;		 -> STR_2(8), STR_1(2), 
  8198 ;; Return value:  Size  Location     Type
  8199 ;;                  2   57[BANK1 ] int 
  8200 ;; Registers used:
  8201 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  8202 ;; Tracked objects:
  8203 ;;		On entry : 0/0
  8204 ;;		On exit  : 0/0
  8205 ;;		Unchanged: 0/0
  8206 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8207 ;;      Params:         0       0       5       0       0       0       0       0       0       0       0       0       
      +0       0
  8208 ;;      Locals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0
  8209 ;;      Temps:          0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0
  8210 ;;      Totals:         0       0       8       0       0       0       0       0       0       0       0       0       
      +0       0
  8211 ;;Total ram usage:        8 bytes
  8212 ;; Hardware stack levels used: 1
  8213 ;; Hardware stack levels required when called: 14
  8214 ;; This function calls:
  8215 ;;		_vfpfcnvrt
  8216 ;; This function is called by:
  8217 ;;		_printf
  8218 ;; This function uses a non-reentrant model
  8219 ;;
  8220                           
  8221     09FA                     _vfprintf:	
  8222                           ;psect for function _vfprintf
  8223                           
  8224     09FA                     l5131:	
  8225                           ;incstack = 0
  8226 ;; hardware stack exceeded
  8227                           ; Regs used in _vfprintf: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  8228                           
  8229                           
  8230                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1817: int vfprint
      +                          f(FILE *fp, const char *fmt, va_list ap);C:\Program Files\Microchip\xc8\v3.00\pic\source
      +                          s\c99\common\doprnt.c: 1818: {;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\comm
      +                          on\doprnt.c: 1820:     char *cfmt;;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\
      +                          common\doprnt.c: 1822:     cfmt = (char *)fmt;
  8231     09FA  0021               	movlb	1	; select bank1
  8232     09FB  085C               	movf	(vfprintf@fmt+1)^(0+128),w
  8233     09FC  00E0               	movwf	(vfprintf@cfmt+1)^(0+128)
  8234     09FD  085B               	movf	vfprintf@fmt^(0+128),w
  8235     09FE  00DF               	movwf	vfprintf@cfmt^(0+128)
  8236     09FF                     l5133:
  8237                           
  8238                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1824:     nout = 
      +                          0;
  8239     09FF  0022               	movlb	2	; select bank2
  8240     0A00  01C8               	clrf	_nout^(0+256)
  8241     0A01  01C9               	clrf	(_nout+1)^(0+256)
  8242                           
  8243                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1826:     while (
      +                          *cfmt) {
  8244     0A02  2A17               	goto	l5137
  8245     0A03                     l5135:
  8246                           
  8247                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1828:         nou
      +                          t +=
  8248     0A03  085A               	movf	(vfprintf@fp+1)^(0+128),w
  8249     0A04  00CA               	movwf	(vfpfcnvrt@fp+1)^(0+128)
  8250     0A05  0859               	movf	vfprintf@fp^(0+128),w
  8251     0A06  00C9               	movwf	vfpfcnvrt@fp^(0+128)
  8252     0A07  30DF               	movlw	(low (vfprintf@cfmt| 0))& (0+255)
  8253     0A08  00CB               	movwf	vfpfcnvrt@fmt^(0+128)
  8254     0A09  085D               	movf	vfprintf@ap^(0+128),w
  8255     0A0A  00CC               	movwf	vfpfcnvrt@ap^(0+128)
  8256     0A0B  01CD               	clrf	(vfpfcnvrt@ap+1)^(0+128)
  8257     0A0C  3184  24F2  3189   	fcall	_vfpfcnvrt
  8258     0A0F  0021               	movlb	1	; select bank1
  8259     0A10  0849               	movf	?_vfpfcnvrt^(0+128),w
  8260     0A11  0022               	movlb	2	; select bank2
  8261     0A12  07C8               	addwf	_nout^(0+256),f
  8262     0A13  0021               	movlb	1	; select bank1
  8263     0A14  084A               	movf	(?_vfpfcnvrt+1)^(0+128),w
  8264     0A15  0022               	movlb	2	; select bank2
  8265     0A16  3DC9               	addwfc	(_nout+1)^(0+256),f
  8266     0A17                     l5137:
  8267                           
  8268                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1826:     while (
      +                          *cfmt) {
  8269     0A17  0021               	movlb	1	; select bank1
  8270     0A18  085F               	movf	vfprintf@cfmt^(0+128),w
  8271     0A19  0084               	movwf	4
  8272     0A1A  0860               	movf	(vfprintf@cfmt+1)^(0+128),w
  8273     0A1B  0085               	movwf	5
  8274     0A1C  0012               	moviw fsr0++
  8275     0A1D  1D03               	btfss	3,2
  8276     0A1E  2A20               	goto	u4611
  8277     0A1F  2A21               	goto	u4610
  8278     0A20                     u4611:
  8279     0A20  2A03               	goto	l5135
  8280     0A21                     u4610:
  8281     0A21                     l5139:
  8282                           
  8283                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1835:  return 0;
  8284     0A21  01D9               	clrf	?_vfprintf^(0+128)
  8285     0A22  01DA               	clrf	(?_vfprintf+1)^(0+128)
  8286     0A23                     l2014:
  8287     0A23  0008               	return
  8288     0A24                     __end_of_vfprintf:
  8289                           
  8290                           	psect	text4
  8291     04F2                     __ptext4:	
  8292 ;; *************** function _vfpfcnvrt *****************
  8293 ;; Defined at:
  8294 ;;		line 1177 in file "C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c"
  8295 ;; Parameters:    Size  Location     Type
  8296 ;;  fp              2   41[BANK1 ] PTR struct _IO_FILE
  8297 ;;		 -> NULL(0), 
  8298 ;;  fmt             1   43[BANK1 ] PTR PTR unsigned char 
  8299 ;;		 -> vfprintf@cfmt(2), 
  8300 ;;  ap              2   44[BANK1 ] PTR PTR void 
  8301 ;;		 -> printf@ap(1), 
  8302 ;; Auto vars:     Size  Location     Type
  8303 ;;  convarg         4   51[BANK1 ] struct .
  8304 ;;  cp              2   55[BANK1 ] PTR unsigned char 
  8305 ;;		 -> STR_14(17), STR_13(15), STR_12(13), STR_11(13), 
  8306 ;;		 -> STR_10(25), STR_9(3), STR_8(7), STR_7(7), 
  8307 ;;		 -> STR_6(17), STR_5(15), STR_4(11), STR_3(24), 
  8308 ;;		 -> STR_2(8), STR_1(2), 
  8309 ;;  done            1   50[BANK1 ] _Bool 
  8310 ;;  c               1    0        unsigned char 
  8311 ;; Return value:  Size  Location     Type
  8312 ;;                  2   41[BANK1 ] int 
  8313 ;; Registers used:
  8314 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  8315 ;; Tracked objects:
  8316 ;;		On entry : 0/0
  8317 ;;		On exit  : 0/0
  8318 ;;		Unchanged: 0/0
  8319 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8320 ;;      Params:         0       0       5       0       0       0       0       0       0       0       0       0       
      +0       0
  8321 ;;      Locals:         0       0       7       0       0       0       0       0       0       0       0       0       
      +0       0
  8322 ;;      Temps:          0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0
  8323 ;;      Totals:         0       0      16       0       0       0       0       0       0       0       0       0       
      +0       0
  8324 ;;Total ram usage:       16 bytes
  8325 ;; Hardware stack levels used: 1
  8326 ;; Hardware stack levels required when called: 13
  8327 ;; This function calls:
  8328 ;;		_dtoa
  8329 ;;		_fputc
  8330 ;;		_read_prec_or_width
  8331 ;;		_utoa
  8332 ;; This function is called by:
  8333 ;;		_vfprintf
  8334 ;; This function uses a non-reentrant model
  8335 ;;
  8336                           
  8337     04F2                     _vfpfcnvrt:	
  8338                           ;psect for function _vfpfcnvrt
  8339                           
  8340     04F2                     l4503:	
  8341                           ;incstack = 0
  8342 ;; hardware stack exceeded
  8343                           ; Regs used in _vfpfcnvrt: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  8344                           
  8345                           
  8346                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1177: vfpfcnvrt(F
      +                          ILE *fp, char *fmt[], va_list ap);C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\c
      +                          ommon\doprnt.c: 1178: {;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\dopr
      +                          nt.c: 1179:     char c, *cp;;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common
      +                          \doprnt.c: 1180:     _Bool done;;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\co
      +                          mmon\doprnt.c: 1188:  } convarg;;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\co
      +                          mmon\doprnt.c: 1201:     if ((*fmt)[0] == '%') {
  8347     04F2  0021               	movlb	1	; select bank1
  8348     04F3  084B               	movf	vfpfcnvrt@fmt^(0+128),w
  8349     04F4  0086               	movwf	6
  8350     04F5  0187               	clrf	7
  8351     04F6  3F40               	moviw [0]fsr1
  8352     04F7  00CE               	movwf	??_vfpfcnvrt^(0+128)
  8353     04F8  3F41               	moviw [1]fsr1
  8354     04F9  00CF               	movwf	(??_vfpfcnvrt^(0+128)+1)
  8355     04FA  084E               	movf	??_vfpfcnvrt^(0+128),w
  8356     04FB  0084               	movwf	4
  8357     04FC  084F               	movf	(??_vfpfcnvrt+1)^(0+128),w
  8358     04FD  0085               	movwf	5
  8359     04FE  0012               	moviw fsr0++
  8360     04FF  3A25               	xorlw	37
  8361     0500  1D03               	btfss	3,2
  8362     0501  2D03               	goto	u3471
  8363     0502  2D04               	goto	u3470
  8364     0503                     u3471:
  8365     0503  2E3E               	goto	l4583
  8366     0504                     u3470:
  8367     0504                     l4505:
  8368                           
  8369                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1202:         ++*
      +                          fmt;
  8370     0504  084B               	movf	vfpfcnvrt@fmt^(0+128),w
  8371     0505  0086               	movwf	6
  8372     0506  0187               	clrf	7
  8373     0507  3001               	movlw	1
  8374     0508  0781               	addwf	1,f
  8375     0509  3141               	addfsr 1,1
  8376     050A  1803               	skipnc
  8377     050B  0A81               	incf	1,f
  8378     050C                     l4507:
  8379                           
  8380                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1204:         fla
      +                          gs = width = 0;
  8381     050C  01EC               	clrf	_width^(0+128)
  8382     050D  01ED               	clrf	(_width+1)^(0+128)
  8383     050E  3000               	movlw	0
  8384     050F  0020               	movlb	0	; select bank0
  8385     0510  00E5               	movwf	_flags
  8386     0511                     l4509:
  8387                           
  8388                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1205:         pre
      +                          c = -1;
  8389     0511  30FF               	movlw	255
  8390     0512  0022               	movlb	2	; select bank2
  8391     0513  00CA               	movwf	_prec^(0+256)
  8392     0514  30FF               	movlw	255
  8393     0515  00CB               	movwf	(_prec^(0+256)+1)
  8394     0516                     l4511:
  8395                           
  8396                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1209:         don
      +                          e = 0;
  8397     0516  0021               	movlb	1	; select bank1
  8398     0517  01D2               	clrf	vfpfcnvrt@done^(0+128)
  8399                           
  8400                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1210:         whi
      +                          le (!done) {
  8401     0518  2D38               	goto	l4519
  8402     0519                     l1992:	
  8403                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1219:            
      +                               case '0' :
  8404                           
  8405                           
  8406                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1220:            
      +                                   flags |= (1 << 1);
  8407     0519  0020               	movlb	0	; select bank0
  8408     051A  14E5               	bsf	_flags,1
  8409     051B                     l4513:
  8410                           
  8411                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1221:            
      +                                   ++*fmt;
  8412     051B  0021               	movlb	1	; select bank1
  8413     051C  084B               	movf	vfpfcnvrt@fmt^(0+128),w
  8414     051D  0086               	movwf	6
  8415     051E  0187               	clrf	7
  8416     051F  3001               	movlw	1
  8417     0520  0781               	addwf	1,f
  8418     0521  3141               	addfsr 1,1
  8419     0522  1803               	skipnc
  8420     0523  0A81               	incf	1,f
  8421                           
  8422                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1222:            
      +                                   break;
  8423     0524  2D38               	goto	l4519
  8424     0525                     l1994:	
  8425                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1242:            
      +                               default:
  8426                           
  8427                           
  8428                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1243:            
      +                                   done = 1;
  8429     0525  3001               	movlw	1
  8430     0526  00D2               	movwf	vfpfcnvrt@done^(0+128)
  8431                           
  8432                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1244:            
      +                                   break;
  8433     0527  2D38               	goto	l4519
  8434     0528                     l4517:
  8435     0528  084B               	movf	vfpfcnvrt@fmt^(0+128),w
  8436     0529  0086               	movwf	6
  8437     052A  0187               	clrf	7
  8438     052B  3F40               	moviw [0]fsr1
  8439     052C  00CE               	movwf	??_vfpfcnvrt^(0+128)
  8440     052D  3F41               	moviw [1]fsr1
  8441     052E  00CF               	movwf	(??_vfpfcnvrt^(0+128)+1)
  8442     052F  084E               	movf	??_vfpfcnvrt^(0+128),w
  8443     0530  0084               	movwf	4
  8444     0531  084F               	movf	(??_vfpfcnvrt+1)^(0+128),w
  8445     0532  0085               	movwf	5
  8446     0533  0800               	movf	0,w	;code access
  8447                           
  8448                           ; Switch size 1, requested type "simple"
  8449                           ; Number of cases is 1, Range of values is 48 to 48
  8450                           ; switch strategies available:
  8451                           ; Name         Instructions Cycles
  8452                           ; simple_byte            4     3 (average)
  8453                           ; direct_byte           11     9 (fixed)
  8454                           ; jumptable            263     9 (fixed)
  8455                           ;	Chosen strategy is simple_byte
  8456     0534  3A30               	xorlw	48	; case 48
  8457     0535  1903               	skipnz
  8458     0536  2D19               	goto	l1992
  8459     0537  2D25               	goto	l1994
  8460     0538                     l4519:
  8461                           
  8462                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1210:         whi
      +                          le (!done) {
  8463     0538  0852               	movf	vfpfcnvrt@done^(0+128),w
  8464     0539  1903               	btfsc	3,2
  8465     053A  2D3C               	goto	u3481
  8466     053B  2D3D               	goto	u3480
  8467     053C                     u3481:
  8468     053C  2D28               	goto	l4517
  8469     053D                     u3480:
  8470     053D                     l4521:
  8471                           
  8472                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1256:   width = r
      +                          ead_prec_or_width(fmt, ap);
  8473     053D  084B               	movf	vfpfcnvrt@fmt^(0+128),w
  8474     053E  00A6               	movwf	read_prec_or_width@fmt^(0+128)
  8475     053F  084C               	movf	vfpfcnvrt@ap^(0+128),w
  8476     0540  00A7               	movwf	read_prec_or_width@ap^(0+128)
  8477     0541  318D  257E  3184   	fcall	_read_prec_or_width
  8478     0544  0021               	movlb	1	; select bank1
  8479     0545  0827               	movf	(?_read_prec_or_width+1)^(0+128),w
  8480     0546  00ED               	movwf	(_width+1)^(0+128)
  8481     0547  0826               	movf	?_read_prec_or_width^(0+128),w
  8482     0548  00EC               	movwf	_width^(0+128)
  8483     0549                     l4523:
  8484                           
  8485                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1257:   if (width
      +                           < 0) {
  8486     0549  1FED               	btfss	(_width+1)^(0+128),7
  8487     054A  2D4C               	goto	u3491
  8488     054B  2D4D               	goto	u3490
  8489     054C                     u3491:
  8490     054C  2D55               	goto	l4529
  8491     054D                     u3490:
  8492     054D                     l4525:
  8493                           
  8494                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1258:    flags |=
      +                           (1 << 0);
  8495     054D  0020               	movlb	0	; select bank0
  8496     054E  1465               	bsf	_flags,0
  8497     054F                     l4527:
  8498                           
  8499                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1259:    width = 
      +                          -width;
  8500     054F  0021               	movlb	1	; select bank1
  8501     0550  09EC               	comf	_width^(0+128),f
  8502     0551  09ED               	comf	(_width+1)^(0+128),f
  8503     0552  0AEC               	incf	_width^(0+128),f
  8504     0553  1903               	skipnz
  8505     0554  0AED               	incf	(_width+1)^(0+128),f
  8506     0555                     l4529:
  8507                           
  8508                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1291:   cp = *fmt
      +                          ;
  8509     0555  084B               	movf	vfpfcnvrt@fmt^(0+128),w
  8510     0556  0086               	movwf	6
  8511     0557  0187               	clrf	7
  8512     0558  3F40               	moviw [0]fsr1
  8513     0559  00D7               	movwf	vfpfcnvrt@cp^(0+128)
  8514     055A  3F41               	moviw [1]fsr1
  8515     055B  00D8               	movwf	(vfpfcnvrt@cp+1)^(0+128)
  8516     055C                     l4531:
  8517                           
  8518                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1361:   if (*cp =
      +                          = 'd' || *cp == 'i') {
  8519     055C  0857               	movf	vfpfcnvrt@cp^(0+128),w
  8520     055D  0084               	movwf	4
  8521     055E  0858               	movf	(vfpfcnvrt@cp+1)^(0+128),w
  8522     055F  0085               	movwf	5
  8523     0560  0012               	moviw fsr0++
  8524     0561  3A64               	xorlw	100
  8525     0562  1903               	btfsc	3,2
  8526     0563  2D65               	goto	u3501
  8527     0564  2D66               	goto	u3500
  8528     0565                     u3501:
  8529     0565  2D70               	goto	l4535
  8530     0566                     u3500:
  8531     0566                     l4533:
  8532     0566  0857               	movf	vfpfcnvrt@cp^(0+128),w
  8533     0567  0084               	movwf	4
  8534     0568  0858               	movf	(vfpfcnvrt@cp+1)^(0+128),w
  8535     0569  0085               	movwf	5
  8536     056A  0012               	moviw fsr0++
  8537     056B  3A69               	xorlw	105
  8538     056C  1D03               	btfss	3,2
  8539     056D  2D6F               	goto	u3511
  8540     056E  2D70               	goto	u3510
  8541     056F                     u3511:
  8542     056F  2D9B               	goto	l4543
  8543     0570                     u3510:
  8544     0570                     l4535:
  8545                           
  8546                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1404:    convarg.
      +                          sint = (vfpf_sint_t)(int)(*(int *)__va_arg(*(int **)ap, (int)0));
  8547     0570  084C               	movf	vfpfcnvrt@ap^(0+128),w
  8548     0571  0086               	movwf	6
  8549     0572  084D               	movf	(vfpfcnvrt@ap+1)^(0+128),w
  8550     0573  0087               	movwf	7
  8551     0574  0801               	movf	1,w
  8552     0575  0084               	movwf	4
  8553     0576  0185               	clrf	5
  8554     0577  3002               	movlw	2
  8555     0578  0781               	addwf	1,f
  8556     0579  3F00               	moviw [0]fsr0
  8557     057A  00D3               	movwf	vfpfcnvrt@convarg^(0+128)
  8558     057B  3F01               	moviw [1]fsr0
  8559     057C  00D4               	movwf	(vfpfcnvrt@convarg+1)^(0+128)
  8560     057D                     l4537:
  8561                           
  8562                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1406:    *fmt = c
      +                          p+1;
  8563     057D  0857               	movf	vfpfcnvrt@cp^(0+128),w
  8564     057E  3E01               	addlw	1
  8565     057F  00CE               	movwf	??_vfpfcnvrt^(0+128)
  8566     0580  3000               	movlw	0
  8567     0581  3D58               	addwfc	(vfpfcnvrt@cp+1)^(0+128),w
  8568     0582  00CF               	movwf	(??_vfpfcnvrt+1)^(0+128)
  8569     0583  084B               	movf	vfpfcnvrt@fmt^(0+128),w
  8570     0584  0086               	movwf	6
  8571     0585  0187               	clrf	7
  8572     0586  084E               	movf	??_vfpfcnvrt^(0+128),w
  8573     0587  3FC0               	movwi [0]fsr1
  8574     0588  084F               	movf	(??_vfpfcnvrt+1)^(0+128),w
  8575     0589  3FC1               	movwi [1]fsr1
  8576     058A                     l4539:
  8577                           
  8578                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1432:    return (
      +                          int) dtoa(fp, convarg.sint);
  8579     058A  084A               	movf	(vfpfcnvrt@fp+1)^(0+128),w
  8580     058B  00BD               	movwf	(dtoa@fp+1)^(0+128)
  8581     058C  0849               	movf	vfpfcnvrt@fp^(0+128),w
  8582     058D  00BC               	movwf	dtoa@fp^(0+128)
  8583     058E  0854               	movf	(vfpfcnvrt@convarg+1)^(0+128),w
  8584     058F  00BF               	movwf	(dtoa@d+1)^(0+128)
  8585     0590  0853               	movf	vfpfcnvrt@convarg^(0+128),w
  8586     0591  00BE               	movwf	dtoa@d^(0+128)
  8587     0592  318F  274B  3184   	fcall	_dtoa
  8588     0595  0021               	movlb	1	; select bank1
  8589     0596  083D               	movf	(?_dtoa+1)^(0+128),w
  8590     0597  00CA               	movwf	(?_vfpfcnvrt+1)^(0+128)
  8591     0598  083C               	movf	?_dtoa^(0+128),w
  8592     0599  00C9               	movwf	?_vfpfcnvrt^(0+128)
  8593     059A  2E61               	goto	l2000
  8594     059B                     l4543:
  8595     059B  0857               	movf	vfpfcnvrt@cp^(0+128),w
  8596     059C  0084               	movwf	4
  8597     059D  0858               	movf	(vfpfcnvrt@cp+1)^(0+128),w
  8598     059E  0085               	movwf	5
  8599     059F  0012               	moviw fsr0++
  8600     05A0  3A75               	xorlw	117
  8601     05A1  1D03               	btfss	3,2
  8602     05A2  2DA4               	goto	u3521
  8603     05A3  2DA5               	goto	u3520
  8604     05A4                     u3521:
  8605     05A4  2DDA               	goto	l4557
  8606     05A5                     u3520:
  8607     05A5                     l4545:
  8608                           
  8609                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1452:     ) {;C:\
      +                          Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1495:    convarg.uint
      +                           = (vfpf_uint_t)(unsigned int)(*(unsigned int *)__va_arg(*(unsigned int **)ap, (unsigned
      +                           int)0));
  8610     05A5  084C               	movf	vfpfcnvrt@ap^(0+128),w
  8611     05A6  0086               	movwf	6
  8612     05A7  084D               	movf	(vfpfcnvrt@ap+1)^(0+128),w
  8613     05A8  0087               	movwf	7
  8614     05A9  0801               	movf	1,w
  8615     05AA  0084               	movwf	4
  8616     05AB  0185               	clrf	5
  8617     05AC  3002               	movlw	2
  8618     05AD  0781               	addwf	1,f
  8619     05AE  3F00               	moviw [0]fsr0
  8620     05AF  00D3               	movwf	vfpfcnvrt@convarg^(0+128)
  8621     05B0  3F01               	moviw [1]fsr0
  8622     05B1  00D4               	movwf	(vfpfcnvrt@convarg+1)^(0+128)
  8623     05B2                     l4547:
  8624                           
  8625                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1497:    *fmt = c
      +                          p+1;
  8626     05B2  0857               	movf	vfpfcnvrt@cp^(0+128),w
  8627     05B3  3E01               	addlw	1
  8628     05B4  00CE               	movwf	??_vfpfcnvrt^(0+128)
  8629     05B5  3000               	movlw	0
  8630     05B6  3D58               	addwfc	(vfpfcnvrt@cp+1)^(0+128),w
  8631     05B7  00CF               	movwf	(??_vfpfcnvrt+1)^(0+128)
  8632     05B8  084B               	movf	vfpfcnvrt@fmt^(0+128),w
  8633     05B9  0086               	movwf	6
  8634     05BA  0187               	clrf	7
  8635     05BB  084E               	movf	??_vfpfcnvrt^(0+128),w
  8636     05BC  3FC0               	movwi [0]fsr1
  8637     05BD  084F               	movf	(??_vfpfcnvrt+1)^(0+128),w
  8638     05BE  3FC1               	movwi [1]fsr1
  8639                           
  8640                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1498:    switch (
      +                          *cp) {
  8641     05BF  2DD1               	goto	l4555
  8642     05C0                     l4549:
  8643                           
  8644                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1542:      return
      +                           (int) utoa(fp, convarg.uint);
  8645     05C0  084A               	movf	(vfpfcnvrt@fp+1)^(0+128),w
  8646     05C1  00BD               	movwf	(utoa@fp+1)^(0+128)
  8647     05C2  0849               	movf	vfpfcnvrt@fp^(0+128),w
  8648     05C3  00BC               	movwf	utoa@fp^(0+128)
  8649     05C4  0854               	movf	(vfpfcnvrt@convarg+1)^(0+128),w
  8650     05C5  00BF               	movwf	(utoa@d+1)^(0+128)
  8651     05C6  0853               	movf	vfpfcnvrt@convarg^(0+128),w
  8652     05C7  00BE               	movwf	utoa@d^(0+128)
  8653     05C8  3187  276A  3184   	fcall	_utoa
  8654     05CB  0021               	movlb	1	; select bank1
  8655     05CC  083D               	movf	(?_utoa+1)^(0+128),w
  8656     05CD  00CA               	movwf	(?_vfpfcnvrt+1)^(0+128)
  8657     05CE  083C               	movf	?_utoa^(0+128),w
  8658     05CF  00C9               	movwf	?_vfpfcnvrt^(0+128)
  8659     05D0  2E61               	goto	l2000
  8660     05D1                     l4555:
  8661     05D1  0857               	movf	vfpfcnvrt@cp^(0+128),w
  8662     05D2  0084               	movwf	4
  8663     05D3  0858               	movf	(vfpfcnvrt@cp+1)^(0+128),w
  8664     05D4  0085               	movwf	5
  8665     05D5  0800               	movf	0,w	;code access
  8666                           
  8667                           ; Switch size 1, requested type "simple"
  8668                           ; Number of cases is 1, Range of values is 117 to 117
  8669                           ; switch strategies available:
  8670                           ; Name         Instructions Cycles
  8671                           ; simple_byte            4     3 (average)
  8672                           ; direct_byte           11     9 (fixed)
  8673                           ; jumptable            263     9 (fixed)
  8674                           ;	Chosen strategy is simple_byte
  8675     05D6  3A75               	xorlw	117	; case 117
  8676     05D7  1903               	skipnz
  8677     05D8  2DC0               	goto	l4549
  8678     05D9  2DDA               	goto	l4557
  8679     05DA                     l4557:
  8680                           
  8681                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1595:   if (*cp =
      +                          = 'n') {
  8682     05DA  0857               	movf	vfpfcnvrt@cp^(0+128),w
  8683     05DB  0084               	movwf	4
  8684     05DC  0858               	movf	(vfpfcnvrt@cp+1)^(0+128),w
  8685     05DD  0085               	movwf	5
  8686     05DE  0012               	moviw fsr0++
  8687     05DF  3A6E               	xorlw	110
  8688     05E0  1D03               	btfss	3,2
  8689     05E1  2DE3               	goto	u3531
  8690     05E2  2DE4               	goto	u3530
  8691     05E3                     u3531:
  8692     05E3  2E0B               	goto	l4567
  8693     05E4                     u3530:
  8694     05E4                     l4559:
  8695                           
  8696                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1638:    *(*(int*
      +                           *)__va_arg(*(int* **)ap, (int*)0)) = (int) nout;
  8697     05E4  084C               	movf	vfpfcnvrt@ap^(0+128),w
  8698     05E5  0086               	movwf	6
  8699     05E6  084D               	movf	(vfpfcnvrt@ap+1)^(0+128),w
  8700     05E7  0087               	movwf	7
  8701     05E8  0801               	movf	1,w
  8702     05E9  0084               	movwf	4
  8703     05EA  0185               	clrf	5
  8704     05EB  3002               	movlw	2
  8705     05EC  0781               	addwf	1,f
  8706     05ED  3F00               	moviw [0]fsr0
  8707     05EE  00CE               	movwf	??_vfpfcnvrt^(0+128)
  8708     05EF  3F01               	moviw [1]fsr0
  8709     05F0  00CF               	movwf	(??_vfpfcnvrt^(0+128)+1)
  8710     05F1  084E               	movf	??_vfpfcnvrt^(0+128),w
  8711     05F2  0086               	movwf	6
  8712     05F3  084F               	movf	(??_vfpfcnvrt+1)^(0+128),w
  8713     05F4  0087               	movwf	7
  8714     05F5  0022               	movlb	2	; select bank2
  8715     05F6  0848               	movf	_nout^(0+256),w
  8716     05F7  3FC0               	movwi [0]fsr1
  8717     05F8  0849               	movf	(_nout+1)^(0+256),w
  8718     05F9  3FC1               	movwi [1]fsr1
  8719     05FA                     l4561:
  8720                           
  8721                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1640:    *fmt = c
      +                          p+1;
  8722     05FA  0021               	movlb	1	; select bank1
  8723     05FB  0857               	movf	vfpfcnvrt@cp^(0+128),w
  8724     05FC  3E01               	addlw	1
  8725     05FD  00CE               	movwf	??_vfpfcnvrt^(0+128)
  8726     05FE  3000               	movlw	0
  8727     05FF  3D58               	addwfc	(vfpfcnvrt@cp+1)^(0+128),w
  8728     0600  00CF               	movwf	(??_vfpfcnvrt+1)^(0+128)
  8729     0601  084B               	movf	vfpfcnvrt@fmt^(0+128),w
  8730     0602  0086               	movwf	6
  8731     0603  0187               	clrf	7
  8732     0604  084E               	movf	??_vfpfcnvrt^(0+128),w
  8733     0605  3FC0               	movwi [0]fsr1
  8734     0606  084F               	movf	(??_vfpfcnvrt+1)^(0+128),w
  8735     0607  3FC1               	movwi [1]fsr1
  8736     0608                     l4563:
  8737                           
  8738                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1641:    return (
      +                          int) 0;
  8739     0608  01C9               	clrf	?_vfpfcnvrt^(0+128)
  8740     0609  01CA               	clrf	(?_vfpfcnvrt+1)^(0+128)
  8741     060A  2E61               	goto	l2000
  8742     060B                     l4567:
  8743                           
  8744                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1798:         if 
      +                          ((*fmt)[0] == '%') {
  8745     060B  084B               	movf	vfpfcnvrt@fmt^(0+128),w
  8746     060C  0086               	movwf	6
  8747     060D  0187               	clrf	7
  8748     060E  3F40               	moviw [0]fsr1
  8749     060F  00CE               	movwf	??_vfpfcnvrt^(0+128)
  8750     0610  3F41               	moviw [1]fsr1
  8751     0611  00CF               	movwf	(??_vfpfcnvrt^(0+128)+1)
  8752     0612  084E               	movf	??_vfpfcnvrt^(0+128),w
  8753     0613  0084               	movwf	4
  8754     0614  084F               	movf	(??_vfpfcnvrt+1)^(0+128),w
  8755     0615  0085               	movwf	5
  8756     0616  0012               	moviw fsr0++
  8757     0617  3A25               	xorlw	37
  8758     0618  1D03               	btfss	3,2
  8759     0619  2E1B               	goto	u3541
  8760     061A  2E1C               	goto	u3540
  8761     061B                     u3541:
  8762     061B  2E35               	goto	l4577
  8763     061C                     u3540:
  8764     061C                     l4569:
  8765                           
  8766                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1799:            
      +                           ++*fmt;
  8767     061C  084B               	movf	vfpfcnvrt@fmt^(0+128),w
  8768     061D  0086               	movwf	6
  8769     061E  0187               	clrf	7
  8770     061F  3001               	movlw	1
  8771     0620  0781               	addwf	1,f
  8772     0621  3141               	addfsr 1,1
  8773     0622  1803               	skipnc
  8774     0623  0A81               	incf	1,f
  8775     0624                     l4571:
  8776                           
  8777                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1800:            
      +                           fputc((int)'%', fp);
  8778     0624  3025               	movlw	37
  8779     0625  00A3               	movwf	fputc@c^(0+128)
  8780     0626  3000               	movlw	0
  8781     0627  00A4               	movwf	(fputc@c^(0+128)+1)
  8782     0628  084A               	movf	(vfpfcnvrt@fp+1)^(0+128),w
  8783     0629  00A6               	movwf	(fputc@fp+1)^(0+128)
  8784     062A  0849               	movf	vfpfcnvrt@fp^(0+128),w
  8785     062B  00A5               	movwf	fputc@fp^(0+128)
  8786     062C  318D  25DA  3184   	fcall	_fputc
  8787     062F                     l4573:
  8788                           
  8789                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1801:            
      +                           return (int) 1;
  8790     062F  3001               	movlw	1
  8791     0630  0021               	movlb	1	; select bank1
  8792     0631  00C9               	movwf	?_vfpfcnvrt^(0+128)
  8793     0632  3000               	movlw	0
  8794     0633  00CA               	movwf	(?_vfpfcnvrt^(0+128)+1)
  8795     0634  2E61               	goto	l2000
  8796     0635                     l4577:
  8797                           
  8798                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1806:         ++*
      +                          fmt;
  8799     0635  084B               	movf	vfpfcnvrt@fmt^(0+128),w
  8800     0636  0086               	movwf	6
  8801     0637  0187               	clrf	7
  8802     0638  3001               	movlw	1
  8803     0639  0781               	addwf	1,f
  8804     063A  3141               	addfsr 1,1
  8805     063B  1803               	skipnc
  8806     063C  0A81               	incf	1,f
  8807     063D  2E08               	goto	l4563
  8808     063E                     l4583:
  8809                           
  8810                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1811:     fputc((
      +                          int)(*fmt)[0], fp);
  8811     063E  084B               	movf	vfpfcnvrt@fmt^(0+128),w
  8812     063F  0086               	movwf	6
  8813     0640  0187               	clrf	7
  8814     0641  3F40               	moviw [0]fsr1
  8815     0642  00CE               	movwf	??_vfpfcnvrt^(0+128)
  8816     0643  3F41               	moviw [1]fsr1
  8817     0644  00CF               	movwf	(??_vfpfcnvrt^(0+128)+1)
  8818     0645  084E               	movf	??_vfpfcnvrt^(0+128),w
  8819     0646  0084               	movwf	4
  8820     0647  084F               	movf	(??_vfpfcnvrt+1)^(0+128),w
  8821     0648  0085               	movwf	5
  8822     0649  0800               	movf	0,w	;code access
  8823     064A  00D0               	movwf	(??_vfpfcnvrt+2)^(0+128)
  8824     064B  01D1               	clrf	((??_vfpfcnvrt+2)^(0+128)+1)
  8825     064C  0850               	movf	(??_vfpfcnvrt+2)^(0+128),w
  8826     064D  00A3               	movwf	fputc@c^(0+128)
  8827     064E  0851               	movf	(??_vfpfcnvrt+3)^(0+128),w
  8828     064F  00A4               	movwf	(fputc@c+1)^(0+128)
  8829     0650  084A               	movf	(vfpfcnvrt@fp+1)^(0+128),w
  8830     0651  00A6               	movwf	(fputc@fp+1)^(0+128)
  8831     0652  0849               	movf	vfpfcnvrt@fp^(0+128),w
  8832     0653  00A5               	movwf	fputc@fp^(0+128)
  8833     0654  318D  25DA  3184   	fcall	_fputc
  8834     0657                     l4585:
  8835                           
  8836                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1812:     ++*fmt;
  8837     0657  0021               	movlb	1	; select bank1
  8838     0658  084B               	movf	vfpfcnvrt@fmt^(0+128),w
  8839     0659  0086               	movwf	6
  8840     065A  0187               	clrf	7
  8841     065B  3001               	movlw	1
  8842     065C  0781               	addwf	1,f
  8843     065D  3141               	addfsr 1,1
  8844     065E  1803               	skipnc
  8845     065F  0A81               	incf	1,f
  8846     0660  2E2F               	goto	l4573
  8847     0661                     l2000:
  8848     0661  0008               	return
  8849     0662                     __end_of_vfpfcnvrt:
  8850                           
  8851                           	psect	text5
  8852     076A                     __ptext5:	
  8853 ;; *************** function _utoa *****************
  8854 ;; Defined at:
  8855 ;;		line 1001 in file "C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c"
  8856 ;; Parameters:    Size  Location     Type
  8857 ;;  fp              2   28[BANK1 ] PTR struct _IO_FILE
  8858 ;;		 -> NULL(0), 
  8859 ;;  d               2   30[BANK1 ] unsigned int 
  8860 ;; Auto vars:     Size  Location     Type
  8861 ;;  i               2   36[BANK1 ] int 
  8862 ;;  w               2   34[BANK1 ] int 
  8863 ;;  p               1   33[BANK1 ] _Bool 
  8864 ;; Return value:  Size  Location     Type
  8865 ;;                  2   28[BANK1 ] int 
  8866 ;; Registers used:
  8867 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  8868 ;; Tracked objects:
  8869 ;;		On entry : 0/0
  8870 ;;		On exit  : 0/0
  8871 ;;		Unchanged: 0/0
  8872 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8873 ;;      Params:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0
  8874 ;;      Locals:         0       0       5       0       0       0       0       0       0       0       0       0       
      +0       0
  8875 ;;      Temps:          0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0
  8876 ;;      Totals:         0       0      10       0       0       0       0       0       0       0       0       0       
      +0       0
  8877 ;;Total ram usage:       10 bytes
  8878 ;; Hardware stack levels used: 1
  8879 ;; Hardware stack levels required when called: 12
  8880 ;; This function calls:
  8881 ;;		___lwdiv
  8882 ;;		___lwmod
  8883 ;;		_pad
  8884 ;; This function is called by:
  8885 ;;		_vfpfcnvrt
  8886 ;; This function uses a non-reentrant model
  8887 ;;
  8888                           
  8889     076A                     _utoa:	
  8890                           ;psect for function _utoa
  8891                           
  8892     076A                     l4407:	
  8893                           ;incstack = 0
  8894 ;; hardware stack exceeded
  8895                           ; Regs used in _utoa: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  8896                           
  8897                           
  8898                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1001: static int 
      +                          utoa(FILE *fp, vfpf_uint_t d);C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\commo
      +                          n\doprnt.c: 1002: {;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c
      +                          : 1003:     int i, w;;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt
      +                          .c: 1007:  _Bool p = 1;
  8899     076A  3001               	movlw	1
  8900     076B  0021               	movlb	1	; select bank1
  8901     076C  00C1               	movwf	utoa@p^(0+128)
  8902     076D                     l4409:
  8903                           
  8904                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1019:     w = wid
      +                          th;
  8905     076D  086D               	movf	(_width+1)^(0+128),w
  8906     076E  00C3               	movwf	(utoa@w+1)^(0+128)
  8907     076F  086C               	movf	_width^(0+128),w
  8908     0770  00C2               	movwf	utoa@w^(0+128)
  8909                           
  8910                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1022:     i = siz
      +                          eof(dbuf) - 1;
  8911     0771  301F               	movlw	31
  8912     0772  00C4               	movwf	utoa@i^(0+128)
  8913     0773  3000               	movlw	0
  8914     0774  00C5               	movwf	(utoa@i^(0+128)+1)
  8915     0775                     l4411:
  8916                           
  8917                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1023:     dbuf[i]
      +                           = '\0';
  8918     0775  0023               	movlb	3	; select bank3
  8919     0776  01BF               	clrf	(_dbuf^(0+384)+31)
  8920                           
  8921                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1024:     while (
      +                          i && (d != 0
  8922     0777  2FA6               	goto	l4423
  8923     0778                     l4413:
  8924                           
  8925                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1033:     )) {;C:
      +                          \Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1034:         --i;
  8926     0778  30FF               	movlw	255
  8927     0779  0021               	movlb	1	; select bank1
  8928     077A  07C4               	addwf	utoa@i^(0+128),f
  8929     077B  30FF               	movlw	255
  8930     077C  3DC5               	addwfc	(utoa@i+1)^(0+128),f
  8931     077D                     l4415:
  8932                           
  8933                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1035:         dbu
      +                          f[i] = '0' + (d % 10);
  8934     077D  0844               	movf	utoa@i^(0+128),w
  8935     077E  3EA0               	addlw	(low (_dbuf| (0+256)))& (0+255)
  8936     077F  0086               	movwf	6
  8937     0780  3001               	movlw	1	; select bank3/4
  8938     0781  0087               	movwf	7
  8939     0782  300A               	movlw	10
  8940     0783  00A0               	movwf	___lwmod@divisor^(0+128)
  8941     0784  3000               	movlw	0
  8942     0785  00A1               	movwf	(___lwmod@divisor^(0+128)+1)
  8943     0786  083F               	movf	(utoa@d+1)^(0+128),w
  8944     0787  00A3               	movwf	(___lwmod@dividend+1)^(0+128)
  8945     0788  083E               	movf	utoa@d^(0+128),w
  8946     0789  00A2               	movwf	___lwmod@dividend^(0+128)
  8947     078A  318A  2280  3187   	fcall	___lwmod
  8948     078D  0021               	movlb	1	; select bank1
  8949     078E  0820               	movf	?___lwmod^(0+128),w
  8950     078F  3E30               	addlw	48
  8951     0790  0081               	movwf	1
  8952     0791                     l4417:
  8953                           
  8954                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1039:   p = 0;
  8955     0791  01C1               	clrf	utoa@p^(0+128)
  8956     0792                     l4419:
  8957                           
  8958                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1041:         --w
      +                          ;
  8959     0792  30FF               	movlw	255
  8960     0793  07C2               	addwf	utoa@w^(0+128),f
  8961     0794  30FF               	movlw	255
  8962     0795  3DC3               	addwfc	(utoa@w+1)^(0+128),f
  8963     0796                     l4421:
  8964                           
  8965                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1042:         d =
      +                           d / 10;
  8966     0796  300A               	movlw	10
  8967     0797  00A0               	movwf	___lwdiv@divisor^(0+128)
  8968     0798  3000               	movlw	0
  8969     0799  00A1               	movwf	(___lwdiv@divisor^(0+128)+1)
  8970     079A  083F               	movf	(utoa@d+1)^(0+128),w
  8971     079B  00A3               	movwf	(___lwdiv@dividend+1)^(0+128)
  8972     079C  083E               	movf	utoa@d^(0+128),w
  8973     079D  00A2               	movwf	___lwdiv@dividend^(0+128)
  8974     079E  318B  2356  3187   	fcall	___lwdiv
  8975     07A1  0021               	movlb	1	; select bank1
  8976     07A2  0821               	movf	(?___lwdiv+1)^(0+128),w
  8977     07A3  00BF               	movwf	(utoa@d+1)^(0+128)
  8978     07A4  0820               	movf	?___lwdiv^(0+128),w
  8979     07A5  00BE               	movwf	utoa@d^(0+128)
  8980     07A6                     l4423:
  8981                           
  8982                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1024:     while (
      +                          i && (d != 0
  8983     07A6  0021               	movlb	1	; select bank1
  8984     07A7  0844               	movf	utoa@i^(0+128),w
  8985     07A8  0445               	iorwf	(utoa@i+1)^(0+128),w
  8986     07A9  1903               	btfsc	3,2
  8987     07AA  2FAC               	goto	u3371
  8988     07AB  2FAD               	goto	u3370
  8989     07AC                     u3371:
  8990     07AC  2FCA               	goto	l4433
  8991     07AD                     u3370:
  8992     07AD                     l4425:
  8993     07AD  083E               	movf	utoa@d^(0+128),w
  8994     07AE  043F               	iorwf	(utoa@d+1)^(0+128),w
  8995     07AF  1D03               	btfss	3,2
  8996     07B0  2FB2               	goto	u3381
  8997     07B1  2FB3               	goto	u3380
  8998     07B2                     u3381:
  8999     07B2  2F78               	goto	l4413
  9000     07B3                     u3380:
  9001     07B3                     l4427:
  9002     07B3  0841               	movf	utoa@p^(0+128),w
  9003     07B4  1D03               	btfss	3,2
  9004     07B5  2FB7               	goto	u3391
  9005     07B6  2FB8               	goto	u3390
  9006     07B7                     u3391:
  9007     07B7  2F78               	goto	l4413
  9008     07B8                     u3390:
  9009     07B8                     l4429:
  9010     07B8  0843               	movf	(utoa@w+1)^(0+128),w
  9011     07B9  3A80               	xorlw	128
  9012     07BA  00C0               	movwf	??_utoa^(0+128)
  9013     07BB  3080               	movlw	128
  9014     07BC  0240               	subwf	??_utoa^(0+128),w
  9015     07BD  1D03               	skipz
  9016     07BE  2FC1               	goto	u3405
  9017     07BF  3001               	movlw	1
  9018     07C0  0242               	subwf	utoa@w^(0+128),w
  9019     07C1                     u3405:
  9020     07C1  1C03               	skipc
  9021     07C2  2FC4               	goto	u3401
  9022     07C3  2FC5               	goto	u3400
  9023     07C4                     u3401:
  9024     07C4  2FCA               	goto	l4433
  9025     07C5                     u3400:
  9026     07C5                     l4431:
  9027     07C5  0020               	movlb	0	; select bank0
  9028     07C6  18E5               	btfsc	_flags,1
  9029     07C7  2FC9               	goto	u3411
  9030     07C8  2FCA               	goto	u3410
  9031     07C9                     u3411:
  9032     07C9  2F78               	goto	l4413
  9033     07CA                     u3410:
  9034     07CA                     l4433:
  9035                           
  9036                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1046:     return 
      +                          (int) pad(fp, &dbuf[i], w);
  9037     07CA  0021               	movlb	1	; select bank1
  9038     07CB  083D               	movf	(utoa@fp+1)^(0+128),w
  9039     07CC  00B5               	movwf	(pad@fp+1)^(0+128)
  9040     07CD  083C               	movf	utoa@fp^(0+128),w
  9041     07CE  00B4               	movwf	pad@fp^(0+128)
  9042     07CF  0844               	movf	utoa@i^(0+128),w
  9043     07D0  3EA0               	addlw	(low (_dbuf| (0+256)))& (0+255)
  9044     07D1  00B6               	movwf	pad@buf^(0+128)
  9045     07D2  0843               	movf	(utoa@w+1)^(0+128),w
  9046     07D3  00B8               	movwf	(pad@p+1)^(0+128)
  9047     07D4  0842               	movf	utoa@w^(0+128),w
  9048     07D5  00B7               	movwf	pad@p^(0+128)
  9049     07D6  318C  24CD  3187   	fcall	_pad
  9050     07D9  0021               	movlb	1	; select bank1
  9051     07DA  0835               	movf	(?_pad+1)^(0+128),w
  9052     07DB  00BD               	movwf	(?_utoa+1)^(0+128)
  9053     07DC  0834               	movf	?_pad^(0+128),w
  9054     07DD  00BC               	movwf	?_utoa^(0+128)
  9055     07DE                     l1977:
  9056     07DE  0008               	return
  9057     07DF                     __end_of_utoa:
  9058                           
  9059                           	psect	text6
  9060     0A80                     __ptext6:	
  9061 ;; *************** function ___lwmod *****************
  9062 ;; Defined at:
  9063 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\lwmod.c"
  9064 ;; Parameters:    Size  Location     Type
  9065 ;;  divisor         2    0[BANK1 ] unsigned int 
  9066 ;;  dividend        2    2[BANK1 ] unsigned int 
  9067 ;; Auto vars:     Size  Location     Type
  9068 ;;  counter         1    4[BANK1 ] unsigned char 
  9069 ;; Return value:  Size  Location     Type
  9070 ;;                  2    0[BANK1 ] unsigned int 
  9071 ;; Registers used:
  9072 ;;		wreg, status,2, status,0
  9073 ;; Tracked objects:
  9074 ;;		On entry : 0/0
  9075 ;;		On exit  : 0/0
  9076 ;;		Unchanged: 0/0
  9077 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9078 ;;      Params:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0
  9079 ;;      Locals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0
  9080 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9081 ;;      Totals:         0       0       5       0       0       0       0       0       0       0       0       0       
      +0       0
  9082 ;;Total ram usage:        5 bytes
  9083 ;; Hardware stack levels used: 1
  9084 ;; Hardware stack levels required when called: 7
  9085 ;; This function calls:
  9086 ;;		Nothing
  9087 ;; This function is called by:
  9088 ;;		_utoa
  9089 ;; This function uses a non-reentrant model
  9090 ;;
  9091                           
  9092     0A80                     ___lwmod:	
  9093                           ;psect for function ___lwmod
  9094                           
  9095     0A80                     l4297:	
  9096                           ;incstack = 0
  9097                           ; Regs used in ___lwmod: [wreg+status,2+status,0]
  9098                           
  9099     0A80  0021               	movlb	1	; select bank1
  9100     0A81  0820               	movf	___lwmod@divisor^(0+128),w
  9101     0A82  0421               	iorwf	(___lwmod@divisor+1)^(0+128),w
  9102     0A83  1903               	btfsc	3,2
  9103     0A84  2A86               	goto	u3161
  9104     0A85  2A87               	goto	u3160
  9105     0A86                     u3161:
  9106     0A86  2AAE               	goto	l4315
  9107     0A87                     u3160:
  9108     0A87                     l4299:
  9109     0A87  3001               	movlw	1
  9110     0A88  00A4               	movwf	___lwmod@counter^(0+128)
  9111     0A89  2A91               	goto	l4305
  9112     0A8A                     l4301:
  9113     0A8A  3001               	movlw	1
  9114     0A8B                     u3175:
  9115     0A8B  35A0               	lslf	___lwmod@divisor^(0+128),f
  9116     0A8C  0DA1               	rlf	(___lwmod@divisor+1)^(0+128),f
  9117     0A8D  0B89               	decfsz	9,f
  9118     0A8E  2A8B               	goto	u3175
  9119     0A8F                     l4303:
  9120     0A8F  3001               	movlw	1
  9121     0A90  07A4               	addwf	___lwmod@counter^(0+128),f
  9122     0A91                     l4305:
  9123     0A91  1FA1               	btfss	(___lwmod@divisor+1)^(0+128),7
  9124     0A92  2A94               	goto	u3181
  9125     0A93  2A95               	goto	u3180
  9126     0A94                     u3181:
  9127     0A94  2A8A               	goto	l4301
  9128     0A95                     u3180:
  9129     0A95                     l4307:
  9130     0A95  0821               	movf	(___lwmod@divisor+1)^(0+128),w
  9131     0A96  0223               	subwf	(___lwmod@dividend+1)^(0+128),w
  9132     0A97  1D03               	skipz
  9133     0A98  2A9B               	goto	u3195
  9134     0A99  0820               	movf	___lwmod@divisor^(0+128),w
  9135     0A9A  0222               	subwf	___lwmod@dividend^(0+128),w
  9136     0A9B                     u3195:
  9137     0A9B  1C03               	skipc
  9138     0A9C  2A9E               	goto	u3191
  9139     0A9D  2A9F               	goto	u3190
  9140     0A9E                     u3191:
  9141     0A9E  2AA3               	goto	l4311
  9142     0A9F                     u3190:
  9143     0A9F                     l4309:
  9144     0A9F  0820               	movf	___lwmod@divisor^(0+128),w
  9145     0AA0  02A2               	subwf	___lwmod@dividend^(0+128),f
  9146     0AA1  0821               	movf	(___lwmod@divisor+1)^(0+128),w
  9147     0AA2  3BA3               	subwfb	(___lwmod@dividend+1)^(0+128),f
  9148     0AA3                     l4311:
  9149     0AA3  3001               	movlw	1
  9150     0AA4                     u3205:
  9151     0AA4  36A1               	lsrf	(___lwmod@divisor+1)^(0+128),f
  9152     0AA5  0CA0               	rrf	___lwmod@divisor^(0+128),f
  9153     0AA6  0B89               	decfsz	9,f
  9154     0AA7  2AA4               	goto	u3205
  9155     0AA8                     l4313:
  9156     0AA8  3001               	movlw	1
  9157     0AA9  02A4               	subwf	___lwmod@counter^(0+128),f
  9158     0AAA  1D03               	btfss	3,2
  9159     0AAB  2AAD               	goto	u3211
  9160     0AAC  2AAE               	goto	u3210
  9161     0AAD                     u3211:
  9162     0AAD  2A95               	goto	l4307
  9163     0AAE                     u3210:
  9164     0AAE                     l4315:
  9165     0AAE  0823               	movf	(___lwmod@dividend+1)^(0+128),w
  9166     0AAF  00A1               	movwf	(?___lwmod+1)^(0+128)
  9167     0AB0  0822               	movf	___lwmod@dividend^(0+128),w
  9168     0AB1  00A0               	movwf	?___lwmod^(0+128)
  9169     0AB2                     l1733:
  9170     0AB2  0008               	return
  9171     0AB3                     __end_of___lwmod:
  9172                           
  9173                           	psect	text7
  9174     0B56                     __ptext7:	
  9175 ;; *************** function ___lwdiv *****************
  9176 ;; Defined at:
  9177 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\lwdiv.c"
  9178 ;; Parameters:    Size  Location     Type
  9179 ;;  divisor         2    0[BANK1 ] unsigned int 
  9180 ;;  dividend        2    2[BANK1 ] unsigned int 
  9181 ;; Auto vars:     Size  Location     Type
  9182 ;;  quotient        2    4[BANK1 ] unsigned int 
  9183 ;;  counter         1    6[BANK1 ] unsigned char 
  9184 ;; Return value:  Size  Location     Type
  9185 ;;                  2    0[BANK1 ] unsigned int 
  9186 ;; Registers used:
  9187 ;;		wreg, status,2, status,0
  9188 ;; Tracked objects:
  9189 ;;		On entry : 0/0
  9190 ;;		On exit  : 0/0
  9191 ;;		Unchanged: 0/0
  9192 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9193 ;;      Params:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0
  9194 ;;      Locals:         0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0
  9195 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9196 ;;      Totals:         0       0       7       0       0       0       0       0       0       0       0       0       
      +0       0
  9197 ;;Total ram usage:        7 bytes
  9198 ;; Hardware stack levels used: 1
  9199 ;; Hardware stack levels required when called: 7
  9200 ;; This function calls:
  9201 ;;		Nothing
  9202 ;; This function is called by:
  9203 ;;		_utoa
  9204 ;;		_dutycycle_led_strip
  9205 ;; This function uses a non-reentrant model
  9206 ;;
  9207                           
  9208     0B56                     ___lwdiv:	
  9209                           ;psect for function ___lwdiv
  9210                           
  9211     0B56                     l4271:	
  9212                           ;incstack = 0
  9213                           ; Regs used in ___lwdiv: [wreg+status,2+status,0]
  9214                           
  9215     0B56  0021               	movlb	1	; select bank1
  9216     0B57  01A4               	clrf	___lwdiv@quotient^(0+128)
  9217     0B58  01A5               	clrf	(___lwdiv@quotient+1)^(0+128)
  9218     0B59                     l4273:
  9219     0B59  0820               	movf	___lwdiv@divisor^(0+128),w
  9220     0B5A  0421               	iorwf	(___lwdiv@divisor+1)^(0+128),w
  9221     0B5B  1903               	btfsc	3,2
  9222     0B5C  2B5E               	goto	u3091
  9223     0B5D  2B5F               	goto	u3090
  9224     0B5E                     u3091:
  9225     0B5E  2B8C               	goto	l4293
  9226     0B5F                     u3090:
  9227     0B5F                     l4275:
  9228     0B5F  3001               	movlw	1
  9229     0B60  00A6               	movwf	___lwdiv@counter^(0+128)
  9230     0B61  2B69               	goto	l4281
  9231     0B62                     l4277:
  9232     0B62  3001               	movlw	1
  9233     0B63                     u3105:
  9234     0B63  35A0               	lslf	___lwdiv@divisor^(0+128),f
  9235     0B64  0DA1               	rlf	(___lwdiv@divisor+1)^(0+128),f
  9236     0B65  0B89               	decfsz	9,f
  9237     0B66  2B63               	goto	u3105
  9238     0B67                     l4279:
  9239     0B67  3001               	movlw	1
  9240     0B68  07A6               	addwf	___lwdiv@counter^(0+128),f
  9241     0B69                     l4281:
  9242     0B69  1FA1               	btfss	(___lwdiv@divisor+1)^(0+128),7
  9243     0B6A  2B6C               	goto	u3111
  9244     0B6B  2B6D               	goto	u3110
  9245     0B6C                     u3111:
  9246     0B6C  2B62               	goto	l4277
  9247     0B6D                     u3110:
  9248     0B6D                     l4283:
  9249     0B6D  3001               	movlw	1
  9250     0B6E                     u3125:
  9251     0B6E  35A4               	lslf	___lwdiv@quotient^(0+128),f
  9252     0B6F  0DA5               	rlf	(___lwdiv@quotient+1)^(0+128),f
  9253     0B70  0B89               	decfsz	9,f
  9254     0B71  2B6E               	goto	u3125
  9255     0B72  0821               	movf	(___lwdiv@divisor+1)^(0+128),w
  9256     0B73  0223               	subwf	(___lwdiv@dividend+1)^(0+128),w
  9257     0B74  1D03               	skipz
  9258     0B75  2B78               	goto	u3135
  9259     0B76  0820               	movf	___lwdiv@divisor^(0+128),w
  9260     0B77  0222               	subwf	___lwdiv@dividend^(0+128),w
  9261     0B78                     u3135:
  9262     0B78  1C03               	skipc
  9263     0B79  2B7B               	goto	u3131
  9264     0B7A  2B7C               	goto	u3130
  9265     0B7B                     u3131:
  9266     0B7B  2B81               	goto	l4289
  9267     0B7C                     u3130:
  9268     0B7C                     l4285:
  9269     0B7C  0820               	movf	___lwdiv@divisor^(0+128),w
  9270     0B7D  02A2               	subwf	___lwdiv@dividend^(0+128),f
  9271     0B7E  0821               	movf	(___lwdiv@divisor+1)^(0+128),w
  9272     0B7F  3BA3               	subwfb	(___lwdiv@dividend+1)^(0+128),f
  9273     0B80                     l4287:
  9274     0B80  1424               	bsf	___lwdiv@quotient^(0+128),0
  9275     0B81                     l4289:
  9276     0B81  3001               	movlw	1
  9277     0B82                     u3145:
  9278     0B82  36A1               	lsrf	(___lwdiv@divisor+1)^(0+128),f
  9279     0B83  0CA0               	rrf	___lwdiv@divisor^(0+128),f
  9280     0B84  0B89               	decfsz	9,f
  9281     0B85  2B82               	goto	u3145
  9282     0B86                     l4291:
  9283     0B86  3001               	movlw	1
  9284     0B87  02A6               	subwf	___lwdiv@counter^(0+128),f
  9285     0B88  1D03               	btfss	3,2
  9286     0B89  2B8B               	goto	u3151
  9287     0B8A  2B8C               	goto	u3150
  9288     0B8B                     u3151:
  9289     0B8B  2B6D               	goto	l4283
  9290     0B8C                     u3150:
  9291     0B8C                     l4293:
  9292     0B8C  0825               	movf	(___lwdiv@quotient+1)^(0+128),w
  9293     0B8D  00A1               	movwf	(?___lwdiv+1)^(0+128)
  9294     0B8E  0824               	movf	___lwdiv@quotient^(0+128),w
  9295     0B8F  00A0               	movwf	?___lwdiv^(0+128)
  9296     0B90                     l1723:
  9297     0B90  0008               	return
  9298     0B91                     __end_of___lwdiv:
  9299                           
  9300                           	psect	text8
  9301     0D7E                     __ptext8:	
  9302 ;; *************** function _read_prec_or_width *****************
  9303 ;; Defined at:
  9304 ;;		line 1158 in file "C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c"
  9305 ;; Parameters:    Size  Location     Type
  9306 ;;  fmt             1    6[BANK1 ] PTR PTR const unsigned c
  9307 ;;		 -> vfprintf@cfmt(2), 
  9308 ;;  ap              1    7[BANK1 ] PTR PTR void [1]
  9309 ;;		 -> printf@ap(1), 
  9310 ;; Auto vars:     Size  Location     Type
  9311 ;;  c               1   11[BANK1 ] unsigned char 
  9312 ;;  n               2   12[BANK1 ] int 
  9313 ;; Return value:  Size  Location     Type
  9314 ;;                  2    6[BANK1 ] int 
  9315 ;; Registers used:
  9316 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  9317 ;; Tracked objects:
  9318 ;;		On entry : 0/0
  9319 ;;		On exit  : 0/0
  9320 ;;		Unchanged: 0/0
  9321 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9322 ;;      Params:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0
  9323 ;;      Locals:         0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0
  9324 ;;      Temps:          0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0
  9325 ;;      Totals:         0       0       8       0       0       0       0       0       0       0       0       0       
      +0       0
  9326 ;;Total ram usage:        8 bytes
  9327 ;; Hardware stack levels used: 1
  9328 ;; Hardware stack levels required when called: 8
  9329 ;; This function calls:
  9330 ;;		___wmul
  9331 ;; This function is called by:
  9332 ;;		_vfpfcnvrt
  9333 ;; This function uses a non-reentrant model
  9334 ;;
  9335                           
  9336     0D7E                     _read_prec_or_width:	
  9337                           ;psect for function _read_prec_or_width
  9338                           
  9339     0D7E                     l4437:	
  9340                           ;incstack = 0
  9341                           ; Regs used in _read_prec_or_width: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  9342                           
  9343                           
  9344                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1159:     int n =
      +                           0;
  9345     0D7E  0021               	movlb	1	; select bank1
  9346     0D7F  01AC               	clrf	read_prec_or_width@n^(0+128)
  9347     0D80  01AD               	clrf	(read_prec_or_width@n+1)^(0+128)
  9348     0D81                     l4439:
  9349                           
  9350                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1160:     if ((*f
      +                          mt)[0] == '*') {
  9351     0D81  0826               	movf	read_prec_or_width@fmt^(0+128),w
  9352     0D82  0086               	movwf	6
  9353     0D83  0187               	clrf	7
  9354     0D84  3F40               	moviw [0]fsr1
  9355     0D85  00A8               	movwf	??_read_prec_or_width^(0+128)
  9356     0D86  3F41               	moviw [1]fsr1
  9357     0D87  00A9               	movwf	(??_read_prec_or_width^(0+128)+1)
  9358     0D88  0828               	movf	??_read_prec_or_width^(0+128),w
  9359     0D89  0084               	movwf	4
  9360     0D8A  0829               	movf	(??_read_prec_or_width+1)^(0+128),w
  9361     0D8B  0085               	movwf	5
  9362     0D8C  0012               	moviw fsr0++
  9363     0D8D  3A2A               	xorlw	42
  9364     0D8E  1D03               	btfss	3,2
  9365     0D8F  2D91               	goto	u3421
  9366     0D90  2D92               	goto	u3420
  9367     0D91                     u3421:
  9368     0D91  2DC1               	goto	l4449
  9369     0D92                     u3420:
  9370     0D92                     l4441:
  9371                           
  9372                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1161:         ++*
      +                          fmt;
  9373     0D92  0826               	movf	read_prec_or_width@fmt^(0+128),w
  9374     0D93  0086               	movwf	6
  9375     0D94  0187               	clrf	7
  9376     0D95  3001               	movlw	1
  9377     0D96  0781               	addwf	1,f
  9378     0D97  3141               	addfsr 1,1
  9379     0D98  1803               	skipnc
  9380     0D99  0A81               	incf	1,f
  9381     0D9A                     l4443:
  9382                           
  9383                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1162:         n =
      +                           (*(int *)__va_arg(*(int **)*ap, (int)0));
  9384     0D9A  0827               	movf	read_prec_or_width@ap^(0+128),w
  9385     0D9B  0086               	movwf	6
  9386     0D9C  0187               	clrf	7
  9387     0D9D  0801               	movf	1,w
  9388     0D9E  0084               	movwf	4
  9389     0D9F  0185               	clrf	5
  9390     0DA0  3002               	movlw	2
  9391     0DA1  0781               	addwf	1,f
  9392     0DA2  3F00               	moviw [0]fsr0
  9393     0DA3  00AC               	movwf	read_prec_or_width@n^(0+128)
  9394     0DA4  3F01               	moviw [1]fsr0
  9395     0DA5  00AD               	movwf	(read_prec_or_width@n+1)^(0+128)
  9396                           
  9397                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1163:     } else 
      +                          {
  9398     0DA6  2DD5               	goto	l4451
  9399     0DA7                     l4445:
  9400                           
  9401                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1166:            
      +                           n = n * 10 + c;
  9402     0DA7  082D               	movf	(read_prec_or_width@n+1)^(0+128),w
  9403     0DA8  00A1               	movwf	(___wmul@multiplier+1)^(0+128)
  9404     0DA9  082C               	movf	read_prec_or_width@n^(0+128),w
  9405     0DAA  00A0               	movwf	___wmul@multiplier^(0+128)
  9406     0DAB  300A               	movlw	10
  9407     0DAC  00A2               	movwf	___wmul@multiplicand^(0+128)
  9408     0DAD  3000               	movlw	0
  9409     0DAE  00A3               	movwf	(___wmul@multiplicand^(0+128)+1)
  9410     0DAF  3187  27DF  318D   	fcall	___wmul
  9411     0DB2  0021               	movlb	1	; select bank1
  9412     0DB3  082B               	movf	read_prec_or_width@c^(0+128),w
  9413     0DB4  0720               	addwf	?___wmul^(0+128),w
  9414     0DB5  00AC               	movwf	read_prec_or_width@n^(0+128)
  9415     0DB6  3000               	movlw	0
  9416     0DB7  3D21               	addwfc	(?___wmul+1)^(0+128),w
  9417     0DB8  00AD               	movwf	(read_prec_or_width@n+1)^(0+128)
  9418     0DB9                     l4447:
  9419                           
  9420                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1167:            
      +                           ++*fmt;
  9421     0DB9  0826               	movf	read_prec_or_width@fmt^(0+128),w
  9422     0DBA  0086               	movwf	6
  9423     0DBB  0187               	clrf	7
  9424     0DBC  3001               	movlw	1
  9425     0DBD  0781               	addwf	1,f
  9426     0DBE  3141               	addfsr 1,1
  9427     0DBF  1803               	skipnc
  9428     0DC0  0A81               	incf	1,f
  9429     0DC1                     l4449:
  9430                           
  9431                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1165:         whi
      +                          le ((c = ((unsigned)(*fmt)[0]) - '0') < 10) {
  9432     0DC1  0826               	movf	read_prec_or_width@fmt^(0+128),w
  9433     0DC2  0086               	movwf	6
  9434     0DC3  0187               	clrf	7
  9435     0DC4  3F40               	moviw [0]fsr1
  9436     0DC5  00A8               	movwf	??_read_prec_or_width^(0+128)
  9437     0DC6  3F41               	moviw [1]fsr1
  9438     0DC7  00A9               	movwf	(??_read_prec_or_width^(0+128)+1)
  9439     0DC8  0828               	movf	??_read_prec_or_width^(0+128),w
  9440     0DC9  0084               	movwf	4
  9441     0DCA  0829               	movf	(??_read_prec_or_width+1)^(0+128),w
  9442     0DCB  0085               	movwf	5
  9443     0DCC  0800               	movf	0,w	;code access
  9444     0DCD  3ED0               	addlw	208
  9445     0DCE  00AB               	movwf	read_prec_or_width@c^(0+128)
  9446     0DCF  300A               	movlw	10
  9447     0DD0  022B               	subwf	read_prec_or_width@c^(0+128),w
  9448     0DD1  1C03               	skipc
  9449     0DD2  2DD4               	goto	u3431
  9450     0DD3  2DD5               	goto	u3430
  9451     0DD4                     u3431:
  9452     0DD4  2DA7               	goto	l4445
  9453     0DD5                     u3430:
  9454     0DD5                     l4451:
  9455                           
  9456                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1170:     return 
      +                          n;
  9457     0DD5  082D               	movf	(read_prec_or_width@n+1)^(0+128),w
  9458     0DD6  00A7               	movwf	(?_read_prec_or_width+1)^(0+128)
  9459     0DD7  082C               	movf	read_prec_or_width@n^(0+128),w
  9460     0DD8  00A6               	movwf	?_read_prec_or_width^(0+128)
  9461     0DD9                     l1985:
  9462     0DD9  0008               	return
  9463     0DDA                     __end_of_read_prec_or_width:
  9464                           
  9465                           	psect	text9
  9466     07DF                     __ptext9:	
  9467 ;; *************** function ___wmul *****************
  9468 ;; Defined at:
  9469 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\Umul16.c"
  9470 ;; Parameters:    Size  Location     Type
  9471 ;;  multiplier      2    0[BANK1 ] unsigned int 
  9472 ;;  multiplicand    2    2[BANK1 ] unsigned int 
  9473 ;; Auto vars:     Size  Location     Type
  9474 ;;  product         2    4[BANK1 ] unsigned int 
  9475 ;; Return value:  Size  Location     Type
  9476 ;;                  2    0[BANK1 ] unsigned int 
  9477 ;; Registers used:
  9478 ;;		wreg, status,2, status,0
  9479 ;; Tracked objects:
  9480 ;;		On entry : 0/0
  9481 ;;		On exit  : 0/0
  9482 ;;		Unchanged: 0/0
  9483 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9484 ;;      Params:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0
  9485 ;;      Locals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0
  9486 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9487 ;;      Totals:         0       0       6       0       0       0       0       0       0       0       0       0       
      +0       0
  9488 ;;Total ram usage:        6 bytes
  9489 ;; Hardware stack levels used: 1
  9490 ;; Hardware stack levels required when called: 7
  9491 ;; This function calls:
  9492 ;;		Nothing
  9493 ;; This function is called by:
  9494 ;;		_read_prec_or_width
  9495 ;;		_SPI1_Open
  9496 ;;		_dutycycle_led_strip
  9497 ;;		_atoi
  9498 ;; This function uses a non-reentrant model
  9499 ;;
  9500                           
  9501     07DF                     ___wmul:	
  9502                           ;psect for function ___wmul
  9503                           
  9504     07DF                     l4175:	
  9505                           ;incstack = 0
  9506                           ; Regs used in ___wmul: [wreg+status,2+status,0]
  9507                           
  9508     07DF  0021               	movlb	1	; select bank1
  9509     07E0  01A4               	clrf	___wmul@product^(0+128)
  9510     07E1  01A5               	clrf	(___wmul@product+1)^(0+128)
  9511     07E2                     l4177:
  9512     07E2  1C20               	btfss	___wmul@multiplier^(0+128),0
  9513     07E3  2FE5               	goto	u2861
  9514     07E4  2FE6               	goto	u2860
  9515     07E5                     u2861:
  9516     07E5  2FEA               	goto	l1443
  9517     07E6                     u2860:
  9518     07E6                     l4179:
  9519     07E6  0822               	movf	___wmul@multiplicand^(0+128),w
  9520     07E7  07A4               	addwf	___wmul@product^(0+128),f
  9521     07E8  0823               	movf	(___wmul@multiplicand+1)^(0+128),w
  9522     07E9  3DA5               	addwfc	(___wmul@product+1)^(0+128),f
  9523     07EA                     l1443:
  9524     07EA  3001               	movlw	1
  9525     07EB                     u2875:
  9526     07EB  35A2               	lslf	___wmul@multiplicand^(0+128),f
  9527     07EC  0DA3               	rlf	(___wmul@multiplicand+1)^(0+128),f
  9528     07ED  0B89               	decfsz	9,f
  9529     07EE  2FEB               	goto	u2875
  9530     07EF                     l4181:
  9531     07EF  3001               	movlw	1
  9532     07F0                     u2885:
  9533     07F0  36A1               	lsrf	(___wmul@multiplier+1)^(0+128),f
  9534     07F1  0CA0               	rrf	___wmul@multiplier^(0+128),f
  9535     07F2  0B89               	decfsz	9,f
  9536     07F3  2FF0               	goto	u2885
  9537     07F4                     l4183:
  9538     07F4  0820               	movf	___wmul@multiplier^(0+128),w
  9539     07F5  0421               	iorwf	(___wmul@multiplier+1)^(0+128),w
  9540     07F6  1D03               	btfss	3,2
  9541     07F7  2FF9               	goto	u2891
  9542     07F8  2FFA               	goto	u2890
  9543     07F9                     u2891:
  9544     07F9  2FE2               	goto	l4177
  9545     07FA                     u2890:
  9546     07FA                     l4185:
  9547     07FA  0825               	movf	(___wmul@product+1)^(0+128),w
  9548     07FB  00A1               	movwf	(?___wmul+1)^(0+128)
  9549     07FC  0824               	movf	___wmul@product^(0+128),w
  9550     07FD  00A0               	movwf	?___wmul^(0+128)
  9551     07FE                     l1445:
  9552     07FE  0008               	return
  9553     07FF                     __end_of___wmul:
  9554                           
  9555                           	psect	text10
  9556     0F4B                     __ptext10:	
  9557 ;; *************** function _dtoa *****************
  9558 ;; Defined at:
  9559 ;;		line 513 in file "C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c"
  9560 ;; Parameters:    Size  Location     Type
  9561 ;;  fp              2   28[BANK1 ] PTR struct _IO_FILE
  9562 ;;		 -> NULL(0), 
  9563 ;;  d               2   30[BANK1 ] int 
  9564 ;; Auto vars:     Size  Location     Type
  9565 ;;  i               2   39[BANK1 ] int 
  9566 ;;  w               2   36[BANK1 ] int 
  9567 ;;  s               1   38[BANK1 ] unsigned char 
  9568 ;;  p               1   35[BANK1 ] _Bool 
  9569 ;; Return value:  Size  Location     Type
  9570 ;;                  2   28[BANK1 ] int 
  9571 ;; Registers used:
  9572 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  9573 ;; Tracked objects:
  9574 ;;		On entry : 0/0
  9575 ;;		On exit  : 0/0
  9576 ;;		Unchanged: 0/0
  9577 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9578 ;;      Params:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0
  9579 ;;      Locals:         0       0       8       0       0       0       0       0       0       0       0       0       
      +0       0
  9580 ;;      Temps:          0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0
  9581 ;;      Totals:         0       0      13       0       0       0       0       0       0       0       0       0       
      +0       0
  9582 ;;Total ram usage:       13 bytes
  9583 ;; Hardware stack levels used: 1
  9584 ;; Hardware stack levels required when called: 12
  9585 ;; This function calls:
  9586 ;;		___awdiv
  9587 ;;		___awmod
  9588 ;;		_abs
  9589 ;;		_pad
  9590 ;; This function is called by:
  9591 ;;		_vfpfcnvrt
  9592 ;; This function uses a non-reentrant model
  9593 ;;
  9594                           
  9595     0F4B                     _dtoa:	
  9596                           ;psect for function _dtoa
  9597                           
  9598     0F4B                     l4361:	
  9599                           ;incstack = 0
  9600 ;; hardware stack exceeded
  9601                           ; Regs used in _dtoa: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  9602                           
  9603                           
  9604                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 513: static int d
      +                          toa(FILE *fp, vfpf_sint_t d);C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common
      +                          \doprnt.c: 514: {;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 
      +                          515:  char s;;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 516:
      +                               int i, w;;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 520
      +                          :  _Bool p = 1;
  9605     0F4B  3001               	movlw	1
  9606     0F4C  0021               	movlb	1	; select bank1
  9607     0F4D  00C3               	movwf	dtoa@p^(0+128)
  9608     0F4E                     l4363:
  9609                           
  9610                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 524:     s = d < 
      +                          0 ? 1 : 0;
  9611     0F4E  1BBF               	btfsc	(dtoa@d+1)^(0+128),7
  9612     0F4F  2F51               	goto	u3271
  9613     0F50  2F53               	goto	u3270
  9614     0F51                     u3271:
  9615     0F51  3001               	movlw	1
  9616     0F52  2F54               	goto	u3280
  9617     0F53                     u3270:
  9618     0F53  3000               	movlw	0
  9619     0F54                     u3280:
  9620     0F54  00C6               	movwf	dtoa@s^(0+128)
  9621                           
  9622                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 535:     w = widt
      +                          h;
  9623     0F55  086D               	movf	(_width+1)^(0+128),w
  9624     0F56  00C5               	movwf	(dtoa@w+1)^(0+128)
  9625     0F57  086C               	movf	_width^(0+128),w
  9626     0F58  00C4               	movwf	dtoa@w^(0+128)
  9627     0F59                     l4365:
  9628                           
  9629                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 536:     if (s
  9630     0F59  0846               	movf	dtoa@s^(0+128),w
  9631     0F5A  1903               	btfsc	3,2
  9632     0F5B  2F5D               	goto	u3291
  9633     0F5C  2F5E               	goto	u3290
  9634     0F5D                     u3291:
  9635     0F5D  2F72               	goto	l1954
  9636     0F5E                     u3290:
  9637     0F5E                     l4367:
  9638                           
  9639                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 540:     ) {;C:\P
      +                          rogram Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 541:         --w;
  9640     0F5E  30FF               	movlw	255
  9641     0F5F  07C4               	addwf	dtoa@w^(0+128),f
  9642     0F60  30FF               	movlw	255
  9643     0F61  3DC5               	addwfc	(dtoa@w+1)^(0+128),f
  9644     0F62                     l4369:
  9645                           
  9646                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 542:   s = s ? '-
      +                          ' : '+';
  9647     0F62  0846               	movf	dtoa@s^(0+128),w
  9648     0F63  1D03               	btfss	3,2
  9649     0F64  2F66               	goto	u3301
  9650     0F65  2F67               	goto	u3300
  9651     0F66                     u3301:
  9652     0F66  2F6C               	goto	l4373
  9653     0F67                     u3300:
  9654     0F67                     l4371:
  9655     0F67  302B               	movlw	43
  9656     0F68  00C1               	movwf	_dtoa$2634^(0+128)
  9657     0F69  3000               	movlw	0
  9658     0F6A  00C2               	movwf	(_dtoa$2634^(0+128)+1)
  9659     0F6B  2F70               	goto	l1958
  9660     0F6C                     l4373:
  9661     0F6C  302D               	movlw	45
  9662     0F6D  00C1               	movwf	_dtoa$2634^(0+128)
  9663     0F6E  3000               	movlw	0
  9664     0F6F  00C2               	movwf	(_dtoa$2634^(0+128)+1)
  9665     0F70                     l1958:
  9666     0F70  0841               	movf	_dtoa$2634^(0+128),w
  9667     0F71  00C6               	movwf	dtoa@s^(0+128)
  9668     0F72                     l1954:	
  9669                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 543:     }
  9670                           
  9671                           
  9672                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 552:     i = size
      +                          of(dbuf) - 1;
  9673     0F72  301F               	movlw	31
  9674     0F73  00C7               	movwf	dtoa@i^(0+128)
  9675     0F74  3000               	movlw	0
  9676     0F75  00C8               	movwf	(dtoa@i^(0+128)+1)
  9677     0F76                     l4375:
  9678                           
  9679                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 553:     dbuf[i] 
      +                          = '\0';
  9680     0F76  0023               	movlb	3	; select bank3
  9681     0F77  01BF               	clrf	(_dbuf^(0+384)+31)
  9682                           
  9683                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 554:     while (!
      +                          (i < 1) && (d != 0
  9684     0F78  2FAF               	goto	l4387
  9685     0F79                     l4377:
  9686                           
  9687                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 563:     )) {;C:\
      +                          Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 564:         --i;
  9688     0F79  30FF               	movlw	255
  9689     0F7A  0021               	movlb	1	; select bank1
  9690     0F7B  07C7               	addwf	dtoa@i^(0+128),f
  9691     0F7C  30FF               	movlw	255
  9692     0F7D  3DC8               	addwfc	(dtoa@i+1)^(0+128),f
  9693     0F7E                     l4379:
  9694                           
  9695                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 565:         dbuf
      +                          [i] = (char)((int)'0' + abs(d % 10));
  9696     0F7E  0847               	movf	dtoa@i^(0+128),w
  9697     0F7F  3EA0               	addlw	(low (_dbuf| (0+256)))& (0+255)
  9698     0F80  0086               	movwf	6
  9699     0F81  3001               	movlw	1	; select bank3/4
  9700     0F82  0087               	movwf	7
  9701     0F83  300A               	movlw	10
  9702     0F84  00A0               	movwf	___awmod@divisor^(0+128)
  9703     0F85  3000               	movlw	0
  9704     0F86  00A1               	movwf	(___awmod@divisor^(0+128)+1)
  9705     0F87  083F               	movf	(dtoa@d+1)^(0+128),w
  9706     0F88  00A3               	movwf	(___awmod@dividend+1)^(0+128)
  9707     0F89  083E               	movf	dtoa@d^(0+128),w
  9708     0F8A  00A2               	movwf	___awmod@dividend^(0+128)
  9709     0F8B  318C  2427  318F   	fcall	___awmod
  9710     0F8E  0021               	movlb	1	; select bank1
  9711     0F8F  0821               	movf	(?___awmod+1)^(0+128),w
  9712     0F90  00A7               	movwf	(abs@a+1)^(0+128)
  9713     0F91  0820               	movf	?___awmod^(0+128),w
  9714     0F92  00A6               	movwf	abs@a^(0+128)
  9715     0F93  3188  20C8  318F   	fcall	_abs
  9716     0F96  0021               	movlb	1	; select bank1
  9717     0F97  0826               	movf	?_abs^(0+128),w
  9718     0F98  3E30               	addlw	48
  9719     0F99  0081               	movwf	1
  9720     0F9A                     l4381:
  9721                           
  9722                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 569:   p = 0;
  9723     0F9A  01C3               	clrf	dtoa@p^(0+128)
  9724     0F9B                     l4383:
  9725                           
  9726                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 571:         --w;
  9727     0F9B  30FF               	movlw	255
  9728     0F9C  07C4               	addwf	dtoa@w^(0+128),f
  9729     0F9D  30FF               	movlw	255
  9730     0F9E  3DC5               	addwfc	(dtoa@w+1)^(0+128),f
  9731     0F9F                     l4385:
  9732                           
  9733                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 572:         d = 
      +                          d / 10;
  9734     0F9F  300A               	movlw	10
  9735     0FA0  00A0               	movwf	___awdiv@divisor^(0+128)
  9736     0FA1  3000               	movlw	0
  9737     0FA2  00A1               	movwf	(___awdiv@divisor^(0+128)+1)
  9738     0FA3  083F               	movf	(dtoa@d+1)^(0+128),w
  9739     0FA4  00A3               	movwf	(___awdiv@dividend+1)^(0+128)
  9740     0FA5  083E               	movf	dtoa@d^(0+128),w
  9741     0FA6  00A2               	movwf	___awdiv@dividend^(0+128)
  9742     0FA7  318D  2522  318F   	fcall	___awdiv
  9743     0FAA  0021               	movlb	1	; select bank1
  9744     0FAB  0821               	movf	(?___awdiv+1)^(0+128),w
  9745     0FAC  00BF               	movwf	(dtoa@d+1)^(0+128)
  9746     0FAD  0820               	movf	?___awdiv^(0+128),w
  9747     0FAE  00BE               	movwf	dtoa@d^(0+128)
  9748     0FAF                     l4387:
  9749                           
  9750                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 554:     while (!
      +                          (i < 1) && (d != 0
  9751     0FAF  0021               	movlb	1	; select bank1
  9752     0FB0  0848               	movf	(dtoa@i+1)^(0+128),w
  9753     0FB1  3A80               	xorlw	128
  9754     0FB2  00C0               	movwf	??_dtoa^(0+128)
  9755     0FB3  3080               	movlw	128
  9756     0FB4  0240               	subwf	??_dtoa^(0+128),w
  9757     0FB5  1D03               	skipz
  9758     0FB6  2FB9               	goto	u3315
  9759     0FB7  3001               	movlw	1
  9760     0FB8  0247               	subwf	dtoa@i^(0+128),w
  9761     0FB9                     u3315:
  9762     0FB9  1C03               	skipc
  9763     0FBA  2FBC               	goto	u3311
  9764     0FBB  2FBD               	goto	u3310
  9765     0FBC                     u3311:
  9766     0FBC  2FDB               	goto	l4397
  9767     0FBD                     u3310:
  9768     0FBD                     l4389:
  9769     0FBD  0021               	movlb	1	; select bank1
  9770     0FBE  083E               	movf	dtoa@d^(0+128),w
  9771     0FBF  043F               	iorwf	(dtoa@d+1)^(0+128),w
  9772     0FC0  1D03               	btfss	3,2
  9773     0FC1  2FC3               	goto	u3321
  9774     0FC2  2FC4               	goto	u3320
  9775     0FC3                     u3321:
  9776     0FC3  2F79               	goto	l4377
  9777     0FC4                     u3320:
  9778     0FC4                     l4391:
  9779     0FC4  0843               	movf	dtoa@p^(0+128),w
  9780     0FC5  1D03               	btfss	3,2
  9781     0FC6  2FC8               	goto	u3331
  9782     0FC7  2FC9               	goto	u3330
  9783     0FC8                     u3331:
  9784     0FC8  2F79               	goto	l4377
  9785     0FC9                     u3330:
  9786     0FC9                     l4393:
  9787     0FC9  0845               	movf	(dtoa@w+1)^(0+128),w
  9788     0FCA  3A80               	xorlw	128
  9789     0FCB  00C0               	movwf	??_dtoa^(0+128)
  9790     0FCC  3080               	movlw	128
  9791     0FCD  0240               	subwf	??_dtoa^(0+128),w
  9792     0FCE  1D03               	skipz
  9793     0FCF  2FD2               	goto	u3345
  9794     0FD0  3001               	movlw	1
  9795     0FD1  0244               	subwf	dtoa@w^(0+128),w
  9796     0FD2                     u3345:
  9797     0FD2  1C03               	skipc
  9798     0FD3  2FD5               	goto	u3341
  9799     0FD4  2FD6               	goto	u3340
  9800     0FD5                     u3341:
  9801     0FD5  2FDB               	goto	l4397
  9802     0FD6                     u3340:
  9803     0FD6                     l4395:
  9804     0FD6  0020               	movlb	0	; select bank0
  9805     0FD7  18E5               	btfsc	_flags,1
  9806     0FD8  2FDA               	goto	u3351
  9807     0FD9  2FDB               	goto	u3350
  9808     0FDA                     u3351:
  9809     0FDA  2F79               	goto	l4377
  9810     0FDB                     u3350:
  9811     0FDB                     l4397:
  9812                           
  9813                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 576:     if (s !=
      +                           0) {
  9814     0FDB  0021               	movlb	1	; select bank1
  9815     0FDC  0846               	movf	dtoa@s^(0+128),w
  9816     0FDD  1903               	btfsc	3,2
  9817     0FDE  2FE0               	goto	u3361
  9818     0FDF  2FE1               	goto	u3360
  9819     0FE0                     u3361:
  9820     0FE0  2FEC               	goto	l4403
  9821     0FE1                     u3360:
  9822     0FE1                     l4399:
  9823                           
  9824                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 577:         --i;
  9825     0FE1  30FF               	movlw	255
  9826     0FE2  07C7               	addwf	dtoa@i^(0+128),f
  9827     0FE3  30FF               	movlw	255
  9828     0FE4  3DC8               	addwfc	(dtoa@i+1)^(0+128),f
  9829     0FE5                     l4401:
  9830                           
  9831                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 578:         dbuf
      +                          [i] = s;
  9832     0FE5  0847               	movf	dtoa@i^(0+128),w
  9833     0FE6  3EA0               	addlw	(low (_dbuf| (0+256)))& (0+255)
  9834     0FE7  0086               	movwf	6
  9835     0FE8  3001               	movlw	1	; select bank3/4
  9836     0FE9  0087               	movwf	7
  9837     0FEA  0846               	movf	dtoa@s^(0+128),w
  9838     0FEB  0081               	movwf	1
  9839     0FEC                     l4403:
  9840                           
  9841                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 582:     return (
      +                          int) pad(fp, &dbuf[i], w);
  9842     0FEC  083D               	movf	(dtoa@fp+1)^(0+128),w
  9843     0FED  00B5               	movwf	(pad@fp+1)^(0+128)
  9844     0FEE  083C               	movf	dtoa@fp^(0+128),w
  9845     0FEF  00B4               	movwf	pad@fp^(0+128)
  9846     0FF0  0847               	movf	dtoa@i^(0+128),w
  9847     0FF1  3EA0               	addlw	(low (_dbuf| (0+256)))& (0+255)
  9848     0FF2  00B6               	movwf	pad@buf^(0+128)
  9849     0FF3  0845               	movf	(dtoa@w+1)^(0+128),w
  9850     0FF4  00B8               	movwf	(pad@p+1)^(0+128)
  9851     0FF5  0844               	movf	dtoa@w^(0+128),w
  9852     0FF6  00B7               	movwf	pad@p^(0+128)
  9853     0FF7  318C  24CD  318F   	fcall	_pad
  9854     0FFA  0021               	movlb	1	; select bank1
  9855     0FFB  0835               	movf	(?_pad+1)^(0+128),w
  9856     0FFC  00BD               	movwf	(?_dtoa+1)^(0+128)
  9857     0FFD  0834               	movf	?_pad^(0+128),w
  9858     0FFE  00BC               	movwf	?_dtoa^(0+128)
  9859     0FFF                     l1967:
  9860     0FFF  0008               	return
  9861     1000                     __end_of_dtoa:
  9862                           
  9863                           	psect	text11
  9864     0CCD                     __ptext11:	
  9865 ;; *************** function _pad *****************
  9866 ;; Defined at:
  9867 ;;		line 193 in file "C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c"
  9868 ;; Parameters:    Size  Location     Type
  9869 ;;  fp              2   20[BANK1 ] PTR struct _IO_FILE
  9870 ;;		 -> NULL(0), 
  9871 ;;  buf             1   22[BANK1 ] PTR unsigned char 
  9872 ;;		 -> dbuf(32), 
  9873 ;;  p               2   23[BANK1 ] int 
  9874 ;; Auto vars:     Size  Location     Type
  9875 ;;  i               2   26[BANK1 ] int 
  9876 ;; Return value:  Size  Location     Type
  9877 ;;                  2   20[BANK1 ] int 
  9878 ;; Registers used:
  9879 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  9880 ;; Tracked objects:
  9881 ;;		On entry : 0/0
  9882 ;;		On exit  : 0/0
  9883 ;;		Unchanged: 0/0
  9884 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9885 ;;      Params:         0       0       5       0       0       0       0       0       0       0       0       0       
      +0       0
  9886 ;;      Locals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0
  9887 ;;      Temps:          0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0
  9888 ;;      Totals:         0       0       8       0       0       0       0       0       0       0       0       0       
      +0       0
  9889 ;;Total ram usage:        8 bytes
  9890 ;; Hardware stack levels used: 1
  9891 ;; Hardware stack levels required when called: 11
  9892 ;; This function calls:
  9893 ;;		_fputc
  9894 ;;		_fputs
  9895 ;;		_strlen
  9896 ;; This function is called by:
  9897 ;;		_dtoa
  9898 ;;		_utoa
  9899 ;; This function uses a non-reentrant model
  9900 ;;
  9901                           
  9902     0CCD                     _pad:	
  9903                           ;psect for function _pad
  9904                           
  9905     0CCD                     l4319:	
  9906                           ;incstack = 0
  9907 ;; hardware stack exceeded
  9908                           ; Regs used in _pad: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  9909                           
  9910                           
  9911                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 193: static int p
      +                          ad(FILE *fp, char *buf, int p);C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\comm
      +                          on\doprnt.c: 194: {;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c
      +                          : 195:     int i;;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 
      +                          199:     if (flags & (1 << 0)) {
  9912     0CCD  0020               	movlb	0	; select bank0
  9913     0CCE  1C65               	btfss	_flags,0
  9914     0CCF  2CD1               	goto	u3221
  9915     0CD0  2CD2               	goto	u3220
  9916     0CD1                     u3221:
  9917     0CD1  2CDC               	goto	l4323
  9918     0CD2                     u3220:
  9919     0CD2                     l4321:
  9920                           
  9921                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 200:         fput
      +                          s((const char *)buf, fp);
  9922     0CD2  0021               	movlb	1	; select bank1
  9923     0CD3  0836               	movf	pad@buf^(0+128),w
  9924     0CD4  00AC               	movwf	fputs@s^(0+128)
  9925     0CD5  0835               	movf	(pad@fp+1)^(0+128),w
  9926     0CD6  00AE               	movwf	(fputs@fp+1)^(0+128)
  9927     0CD7  0834               	movf	pad@fp^(0+128),w
  9928     0CD8  00AD               	movwf	fputs@fp^(0+128)
  9929     0CD9  3189  21AE  318C   	fcall	_fputs
  9930     0CDC                     l4323:
  9931                           
  9932                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 205:  if (p < 0) 
      +                          {
  9933     0CDC  0021               	movlb	1	; select bank1
  9934     0CDD  1FB8               	btfss	(pad@p+1)^(0+128),7
  9935     0CDE  2CE0               	goto	u3231
  9936     0CDF  2CE1               	goto	u3230
  9937     0CE0                     u3231:
  9938     0CE0  2CE3               	goto	l1946
  9939     0CE1                     u3230:
  9940     0CE1                     l4325:
  9941                           
  9942                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 206:   p = 0;
  9943     0CE1  01B7               	clrf	pad@p^(0+128)
  9944     0CE2  01B8               	clrf	(pad@p+1)^(0+128)
  9945     0CE3                     l1946:	
  9946                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 207:  }
  9947                           
  9948                           
  9949                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 208:     i = 0;
  9950     0CE3  01BA               	clrf	pad@i^(0+128)
  9951     0CE4  01BB               	clrf	(pad@i+1)^(0+128)
  9952                           
  9953                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 209:     while (i
      +                           < p) {
  9954     0CE5  2CF7               	goto	l4331
  9955     0CE6                     l4327:
  9956                           
  9957                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 210:         fput
      +                          c(' ', fp);
  9958     0CE6  3020               	movlw	32
  9959     0CE7  0021               	movlb	1	; select bank1
  9960     0CE8  00A3               	movwf	fputc@c^(0+128)
  9961     0CE9  3000               	movlw	0
  9962     0CEA  00A4               	movwf	(fputc@c^(0+128)+1)
  9963     0CEB  0835               	movf	(pad@fp+1)^(0+128),w
  9964     0CEC  00A6               	movwf	(fputc@fp+1)^(0+128)
  9965     0CED  0834               	movf	pad@fp^(0+128),w
  9966     0CEE  00A5               	movwf	fputc@fp^(0+128)
  9967     0CEF  318D  25DA  318C   	fcall	_fputc
  9968     0CF2                     l4329:
  9969                           
  9970                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 211:         ++i;
  9971     0CF2  3001               	movlw	1
  9972     0CF3  0021               	movlb	1	; select bank1
  9973     0CF4  07BA               	addwf	pad@i^(0+128),f
  9974     0CF5  3000               	movlw	0
  9975     0CF6  3DBB               	addwfc	(pad@i+1)^(0+128),f
  9976     0CF7                     l4331:
  9977                           
  9978                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 209:     while (i
      +                           < p) {
  9979     0CF7  083B               	movf	(pad@i+1)^(0+128),w
  9980     0CF8  3A80               	xorlw	128
  9981     0CF9  00B9               	movwf	??_pad^(0+128)
  9982     0CFA  0838               	movf	(pad@p+1)^(0+128),w
  9983     0CFB  3A80               	xorlw	128
  9984     0CFC  0239               	subwf	??_pad^(0+128),w
  9985     0CFD  1D03               	skipz
  9986     0CFE  2D01               	goto	u3245
  9987     0CFF  0837               	movf	pad@p^(0+128),w
  9988     0D00  023A               	subwf	pad@i^(0+128),w
  9989     0D01                     u3245:
  9990     0D01  1C03               	skipc
  9991     0D02  2D04               	goto	u3241
  9992     0D03  2D05               	goto	u3240
  9993     0D04                     u3241:
  9994     0D04  2CE6               	goto	l4327
  9995     0D05                     u3240:
  9996     0D05                     l1949:
  9997                           
  9998                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 216:     if (!(fl
      +                          ags & (1 << 0))) {
  9999     0D05  0020               	movlb	0	; select bank0
 10000     0D06  1865               	btfsc	_flags,0
 10001     0D07  2D09               	goto	u3251
 10002     0D08  2D0A               	goto	u3250
 10003     0D09                     u3251:
 10004     0D09  2D14               	goto	l4335
 10005     0D0A                     u3250:
 10006     0D0A                     l4333:
 10007                           
 10008                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 218:         fput
      +                          s((const char *)buf, fp);
 10009     0D0A  0021               	movlb	1	; select bank1
 10010     0D0B  0836               	movf	pad@buf^(0+128),w
 10011     0D0C  00AC               	movwf	fputs@s^(0+128)
 10012     0D0D  0835               	movf	(pad@fp+1)^(0+128),w
 10013     0D0E  00AE               	movwf	(fputs@fp+1)^(0+128)
 10014     0D0F  0834               	movf	pad@fp^(0+128),w
 10015     0D10  00AD               	movwf	fputs@fp^(0+128)
 10016     0D11  3189  21AE  318C   	fcall	_fputs
 10017     0D14                     l4335:
 10018                           
 10019                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 224:     return (
      +                          int)(strlen(buf) + (size_t)p);
 10020     0D14  0021               	movlb	1	; select bank1
 10021     0D15  0836               	movf	pad@buf^(0+128),w
 10022     0D16  00A0               	movwf	strlen@s^(0+128)
 10023     0D17  3189  211A  318C   	fcall	_strlen
 10024     0D1A  0021               	movlb	1	; select bank1
 10025     0D1B  0837               	movf	pad@p^(0+128),w
 10026     0D1C  0720               	addwf	?_strlen^(0+128),w
 10027     0D1D  00B4               	movwf	?_pad^(0+128)
 10028     0D1E  0838               	movf	(pad@p+1)^(0+128),w
 10029     0D1F  3D21               	addwfc	(?_strlen+1)^(0+128),w
 10030     0D20  00B5               	movwf	(?_pad+1)^(0+128)
 10031     0D21                     l1951:
 10032     0D21  0008               	return
 10033     0D22                     __end_of_pad:
 10034                           
 10035                           	psect	text12
 10036     091A                     __ptext12:	
 10037 ;; *************** function _strlen *****************
 10038 ;; Defined at:
 10039 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\strlen.c"
 10040 ;; Parameters:    Size  Location     Type
 10041 ;;  s               1    0[BANK1 ] PTR const unsigned char 
 10042 ;;		 -> dbuf(32), 
 10043 ;; Auto vars:     Size  Location     Type
 10044 ;;  a               1    2[BANK1 ] PTR const unsigned char 
 10045 ;;		 -> dbuf(32), 
 10046 ;; Return value:  Size  Location     Type
 10047 ;;                  2    0[BANK1 ] unsigned int 
 10048 ;; Registers used:
 10049 ;;		wreg, fsr1l, fsr1h, status,2, status,0
 10050 ;; Tracked objects:
 10051 ;;		On entry : 0/0
 10052 ;;		On exit  : 0/0
 10053 ;;		Unchanged: 0/0
 10054 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10055 ;;      Params:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0
 10056 ;;      Locals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0
 10057 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10058 ;;      Totals:         0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0
 10059 ;;Total ram usage:        3 bytes
 10060 ;; Hardware stack levels used: 1
 10061 ;; Hardware stack levels required when called: 7
 10062 ;; This function calls:
 10063 ;;		Nothing
 10064 ;; This function is called by:
 10065 ;;		_pad
 10066 ;; This function uses a non-reentrant model
 10067 ;;
 10068                           
 10069     091A                     _strlen:	
 10070                           ;psect for function _strlen
 10071                           
 10072     091A                     l4159:	
 10073                           ;incstack = 0
 10074                           ; Regs used in _strlen: [wreg+fsr1l+fsr1h+status,2+status,0]
 10075                           
 10076     091A  0021               	movlb	1	; select bank1
 10077     091B  0820               	movf	strlen@s^(0+128),w
 10078     091C  00A2               	movwf	strlen@a^(0+128)
 10079     091D  2920               	goto	l4163
 10080     091E                     l4161:
 10081     091E  3001               	movlw	1
 10082     091F  07A0               	addwf	strlen@s^(0+128),f
 10083     0920                     l4163:
 10084     0920  0820               	movf	strlen@s^(0+128),w
 10085     0921  0086               	movwf	6
 10086     0922  3001               	movlw	1	; select bank2/3
 10087     0923  0087               	movwf	7
 10088     0924  0801               	movf	1,w
 10089     0925  1D03               	btfss	3,2
 10090     0926  2928               	goto	u2851
 10091     0927  2929               	goto	u2850
 10092     0928                     u2851:
 10093     0928  291E               	goto	l4161
 10094     0929                     u2850:
 10095     0929                     l4165:
 10096     0929  0822               	movf	strlen@a^(0+128),w
 10097     092A  0220               	subwf	strlen@s^(0+128),w
 10098     092B  00A0               	movwf	?_strlen^(0+128)
 10099     092C  01A1               	clrf	(?_strlen+1)^(0+128)
 10100     092D  1BA0               	btfsc	?_strlen^(0+128),7
 10101     092E  03A1               	decf	(?_strlen+1)^(0+128),f
 10102     092F                     l2047:
 10103     092F  0008               	return
 10104     0930                     __end_of_strlen:
 10105                           
 10106                           	psect	text13
 10107     09AE                     __ptext13:	
 10108 ;; *************** function _fputs *****************
 10109 ;; Defined at:
 10110 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\nf_fputs.c"
 10111 ;; Parameters:    Size  Location     Type
 10112 ;;  s               1   12[BANK1 ] PTR const unsigned char 
 10113 ;;		 -> dbuf(32), 
 10114 ;;  fp              2   13[BANK1 ] PTR struct _IO_FILE
 10115 ;;		 -> NULL(0), 
 10116 ;; Auto vars:     Size  Location     Type
 10117 ;;  i               2   18[BANK1 ] int 
 10118 ;;  c               1   17[BANK1 ] unsigned char 
 10119 ;; Return value:  Size  Location     Type
 10120 ;;                  2   12[BANK1 ] int 
 10121 ;; Registers used:
 10122 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 10123 ;; Tracked objects:
 10124 ;;		On entry : 0/0
 10125 ;;		On exit  : 0/0
 10126 ;;		Unchanged: 0/0
 10127 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10128 ;;      Params:         0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0
 10129 ;;      Locals:         0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0
 10130 ;;      Temps:          0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0
 10131 ;;      Totals:         0       0       8       0       0       0       0       0       0       0       0       0       
      +0       0
 10132 ;;Total ram usage:        8 bytes
 10133 ;; Hardware stack levels used: 1
 10134 ;; Hardware stack levels required when called: 10
 10135 ;; This function calls:
 10136 ;;		_fputc
 10137 ;; This function is called by:
 10138 ;;		_pad
 10139 ;; This function uses a non-reentrant model
 10140 ;;
 10141                           
 10142     09AE                     _fputs:	
 10143                           ;psect for function _fputs
 10144                           
 10145     09AE                     l4151:	
 10146                           ;incstack = 0
 10147 ;; hardware stack exceeded
 10148                           ; Regs used in _fputs: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 10149                           
 10150     09AE  0021               	movlb	1	; select bank1
 10151     09AF  01B2               	clrf	fputs@i^(0+128)
 10152     09B0  01B3               	clrf	(fputs@i+1)^(0+128)
 10153     09B1  29C5               	goto	l4157
 10154     09B2                     l4153:
 10155     09B2  0831               	movf	fputs@c^(0+128),w
 10156     09B3  00AF               	movwf	??_fputs^(0+128)
 10157     09B4  01B0               	clrf	(??_fputs^(0+128)+1)
 10158     09B5  082F               	movf	??_fputs^(0+128),w
 10159     09B6  00A3               	movwf	fputc@c^(0+128)
 10160     09B7  0830               	movf	(??_fputs+1)^(0+128),w
 10161     09B8  00A4               	movwf	(fputc@c+1)^(0+128)
 10162     09B9  082E               	movf	(fputs@fp+1)^(0+128),w
 10163     09BA  00A6               	movwf	(fputc@fp+1)^(0+128)
 10164     09BB  082D               	movf	fputs@fp^(0+128),w
 10165     09BC  00A5               	movwf	fputc@fp^(0+128)
 10166     09BD  318D  25DA  3189   	fcall	_fputc
 10167     09C0                     l4155:
 10168     09C0  3001               	movlw	1
 10169     09C1  0021               	movlb	1	; select bank1
 10170     09C2  07B2               	addwf	fputs@i^(0+128),f
 10171     09C3  3000               	movlw	0
 10172     09C4  3DB3               	addwfc	(fputs@i+1)^(0+128),f
 10173     09C5                     l4157:
 10174     09C5  082C               	movf	fputs@s^(0+128),w
 10175     09C6  0732               	addwf	fputs@i^(0+128),w
 10176     09C7  0086               	movwf	6
 10177     09C8  3001               	movlw	1	; select bank2/3
 10178     09C9  0087               	movwf	7
 10179     09CA  0801               	movf	1,w
 10180     09CB  00B1               	movwf	fputs@c^(0+128)
 10181     09CC  0831               	movf	fputs@c^(0+128),w
 10182     09CD  1D03               	btfss	3,2
 10183     09CE  29D0               	goto	u2841
 10184     09CF  29D1               	goto	u2840
 10185     09D0                     u2841:
 10186     09D0  29B2               	goto	l4153
 10187     09D1                     u2840:
 10188     09D1                     l2041:
 10189     09D1  0008               	return
 10190     09D2                     __end_of_fputs:
 10191                           
 10192                           	psect	text14
 10193     0DDA                     __ptext14:	
 10194 ;; *************** function _fputc *****************
 10195 ;; Defined at:
 10196 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\nf_fputc.c"
 10197 ;; Parameters:    Size  Location     Type
 10198 ;;  c               2    3[BANK1 ] int 
 10199 ;;  fp              2    5[BANK1 ] PTR struct _IO_FILE
 10200 ;;		 -> NULL(0), 
 10201 ;; Auto vars:     Size  Location     Type
 10202 ;;		None
 10203 ;; Return value:  Size  Location     Type
 10204 ;;                  2    3[BANK1 ] int 
 10205 ;; Registers used:
 10206 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 10207 ;; Tracked objects:
 10208 ;;		On entry : 0/0
 10209 ;;		On exit  : 0/0
 10210 ;;		Unchanged: 0/0
 10211 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10212 ;;      Params:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0
 10213 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10214 ;;      Temps:          0       0       5       0       0       0       0       0       0       0       0       0       
      +0       0
 10215 ;;      Totals:         0       0       9       0       0       0       0       0       0       0       0       0       
      +0       0
 10216 ;;Total ram usage:        9 bytes
 10217 ;; Hardware stack levels used: 1
 10218 ;; Hardware stack levels required when called: 9
 10219 ;; This function calls:
 10220 ;;		_putch
 10221 ;; This function is called by:
 10222 ;;		_pad
 10223 ;;		_vfpfcnvrt
 10224 ;;		_fputs
 10225 ;; This function uses a non-reentrant model
 10226 ;;
 10227                           
 10228     0DDA                     _fputc:	
 10229                           ;psect for function _fputc
 10230                           
 10231     0DDA                     l4135:	
 10232                           ;incstack = 0
 10233 ;; hardware stack exceeded
 10234                           ; Regs used in _fputc: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 10235                           
 10236     0DDA  0021               	movlb	1	; select bank1
 10237     0DDB  0825               	movf	fputc@fp^(0+128),w
 10238     0DDC  0426               	iorwf	(fputc@fp+1)^(0+128),w
 10239     0DDD  1903               	btfsc	3,2
 10240     0DDE  2DE0               	goto	u2801
 10241     0DDF  2DE1               	goto	u2800
 10242     0DE0                     u2801:
 10243     0DE0  2DE7               	goto	l4139
 10244     0DE1                     u2800:
 10245     0DE1                     l4137:
 10246     0DE1  0825               	movf	fputc@fp^(0+128),w
 10247     0DE2  0426               	iorwf	(fputc@fp+1)^(0+128),w
 10248     0DE3  1D03               	btfss	3,2
 10249     0DE4  2DE6               	goto	u2811
 10250     0DE5  2DE7               	goto	u2810
 10251     0DE6                     u2811:
 10252     0DE6  2DEC               	goto	l4141
 10253     0DE7                     u2810:
 10254     0DE7                     l4139:
 10255     0DE7  0823               	movf	fputc@c^(0+128),w
 10256     0DE8  3188  20B7  318D   	fcall	_putch
 10257     0DEB  2E37               	goto	l2033
 10258     0DEC                     l4141:
 10259     0DEC  0825               	movf	fputc@fp^(0+128),w
 10260     0DED  0086               	movwf	6
 10261     0DEE  0826               	movf	(fputc@fp+1)^(0+128),w
 10262     0DEF  0087               	movwf	7
 10263     0DF0  3149               	addfsr 1,9
 10264     0DF1  0016               	moviw fsr1++
 10265     0DF2  0401               	iorwf	1,w
 10266     0DF3  1903               	btfsc	3,2
 10267     0DF4  2DF6               	goto	u2821
 10268     0DF5  2DF7               	goto	u2820
 10269     0DF6                     u2821:
 10270     0DF6  2E17               	goto	l4145
 10271     0DF7                     u2820:
 10272     0DF7                     l4143:
 10273     0DF7  0825               	movf	fputc@fp^(0+128),w
 10274     0DF8  0086               	movwf	6
 10275     0DF9  0826               	movf	(fputc@fp+1)^(0+128),w
 10276     0DFA  0087               	movwf	7
 10277     0DFB  3149               	addfsr 1,9
 10278     0DFC  3F40               	moviw [0]fsr1
 10279     0DFD  00A7               	movwf	??_fputc^(0+128)
 10280     0DFE  3F41               	moviw [1]fsr1
 10281     0DFF  00A8               	movwf	(??_fputc^(0+128)+1)
 10282     0E00  0825               	movf	fputc@fp^(0+128),w
 10283     0E01  0086               	movwf	6
 10284     0E02  0826               	movf	(fputc@fp+1)^(0+128),w
 10285     0E03  0087               	movwf	7
 10286     0E04  3142               	addfsr 1,2
 10287     0E05  3F40               	moviw [0]fsr1
 10288     0E06  00A9               	movwf	(??_fputc+2)^(0+128)
 10289     0E07  3F41               	moviw [1]fsr1
 10290     0E08  00AA               	movwf	((??_fputc+2)^(0+128)+1)
 10291     0E09  082A               	movf	(??_fputc+3)^(0+128),w
 10292     0E0A  3A80               	xorlw	128
 10293     0E0B  00AB               	movwf	(??_fputc+4)^(0+128)
 10294     0E0C  0828               	movf	(??_fputc+1)^(0+128),w
 10295     0E0D  3A80               	xorlw	128
 10296     0E0E  022B               	subwf	(??_fputc+4)^(0+128),w
 10297     0E0F  1D03               	skipz
 10298     0E10  2E13               	goto	u2835
 10299     0E11  0827               	movf	??_fputc^(0+128),w
 10300     0E12  0229               	subwf	(??_fputc+2)^(0+128),w
 10301     0E13                     u2835:
 10302     0E13  1803               	skipnc
 10303     0E14  2E16               	goto	u2831
 10304     0E15  2E17               	goto	u2830
 10305     0E16                     u2831:
 10306     0E16  2E37               	goto	l2033
 10307     0E17                     u2830:
 10308     0E17                     l4145:
 10309     0E17  0021               	movlb	1	; select bank1
 10310     0E18  0825               	movf	fputc@fp^(0+128),w
 10311     0E19  0086               	movwf	6
 10312     0E1A  0826               	movf	(fputc@fp+1)^(0+128),w
 10313     0E1B  0087               	movwf	7
 10314     0E1C  3142               	addfsr 1,2
 10315     0E1D  0825               	movf	fputc@fp^(0+128),w
 10316     0E1E  0084               	movwf	4
 10317     0E1F  0826               	movf	(fputc@fp+1)^(0+128),w
 10318     0E20  0085               	movwf	5
 10319     0E21  3F00               	moviw [0]fsr0
 10320     0E22  00A7               	movwf	??_fputc^(0+128)
 10321     0E23  3F01               	moviw [1]fsr0
 10322     0E24  00A8               	movwf	(??_fputc^(0+128)+1)
 10323     0E25  3F40               	moviw [0]fsr1
 10324     0E26  0727               	addwf	??_fputc^(0+128),w
 10325     0E27  0084               	movwf	4
 10326     0E28  3F41               	moviw [1]fsr1
 10327     0E29  3D28               	addwfc	(??_fputc+1)^(0+128),w
 10328     0E2A  0085               	movwf	5
 10329     0E2B  0823               	movf	fputc@c^(0+128),w
 10330     0E2C  0080               	movwf	0
 10331     0E2D                     l4147:
 10332     0E2D  0825               	movf	fputc@fp^(0+128),w
 10333     0E2E  0086               	movwf	6
 10334     0E2F  0826               	movf	(fputc@fp+1)^(0+128),w
 10335     0E30  0087               	movwf	7
 10336     0E31  3142               	addfsr 1,2
 10337     0E32  3001               	movlw	1
 10338     0E33  0781               	addwf	1,f
 10339     0E34  3141               	addfsr 1,1
 10340     0E35  1803               	skipnc
 10341     0E36  0A81               	incf	1,f
 10342     0E37                     l2033:
 10343     0E37  0008               	return
 10344     0E38                     __end_of_fputc:
 10345                           
 10346                           	psect	text15
 10347     08B7                     __ptext15:	
 10348 ;; *************** function _putch *****************
 10349 ;; Defined at:
 10350 ;;		line 409 in file "mcc_generated_files/uart/src/eusart.c"
 10351 ;; Parameters:    Size  Location     Type
 10352 ;;  txData          1    wreg     unsigned char 
 10353 ;; Auto vars:     Size  Location     Type
 10354 ;;  txData          1    2[BANK1 ] unsigned char 
 10355 ;; Return value:  Size  Location     Type
 10356 ;;                  1    wreg      void 
 10357 ;; Registers used:
 10358 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 10359 ;; Tracked objects:
 10360 ;;		On entry : 0/0
 10361 ;;		On exit  : 0/0
 10362 ;;		Unchanged: 0/0
 10363 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10364 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10365 ;;      Locals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0
 10366 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10367 ;;      Totals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0
 10368 ;;Total ram usage:        1 bytes
 10369 ;; Hardware stack levels used: 1
 10370 ;; Hardware stack levels required when called: 8
 10371 ;; This function calls:
 10372 ;;		_EUSART_IsTxReady
 10373 ;;		_EUSART_Write
 10374 ;; This function is called by:
 10375 ;;		_fputc
 10376 ;; This function uses a non-reentrant model
 10377 ;;
 10378                           
 10379     08B7                     _putch:	
 10380                           ;psect for function _putch
 10381                           
 10382                           
 10383                           ;incstack = 0
 10384 ;; hardware stack exceeded
 10385                           ; Regs used in _putch: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
 10386                           ;putch@txData stored from wreg
 10387     08B7  0021               	movlb	1	; select bank1
 10388     08B8  00A2               	movwf	putch@txData^(0+128)
 10389     08B9                     l4127:
 10390     08B9                     l4129:	
 10391                           ;mcc_generated_files/uart/src/eusart.c: 409: void putch(char txData);mcc_generated_files
      +                          /uart/src/eusart.c: 410: {;mcc_generated_files/uart/src/eusart.c: 411:     while(!(EUSAR
      +                          T_IsTxReady()))
 10392                           
 10393                           
 10394                           ;mcc_generated_files/uart/src/eusart.c: 411:     while(!(EUSART_IsTxReady()))
 10395     08B9  3197  27B6  3188   	fcall	_EUSART_IsTxReady
 10396     08BC  3A00               	xorlw	0
 10397     08BD  1903               	skipnz
 10398     08BE  28C0               	goto	u2791
 10399     08BF  28C1               	goto	u2790
 10400     08C0                     u2791:
 10401     08C0  28B9               	goto	l4129
 10402     08C1                     u2790:
 10403     08C1                     l4131:
 10404                           
 10405                           ;mcc_generated_files/uart/src/eusart.c: 415:     return EUSART_Write(txData);;	Return va
      +                          lue of _putch is never used
 10406     08C1  0021               	movlb	1	; select bank1
 10407     08C2  0822               	movf	putch@txData^(0+128),w
 10408     08C3  00A0               	movwf	EUSART_Write@txData^(0+128)
 10409     08C4  3189  21D2  3188   	fcall	_EUSART_Write
 10410     08C7                     l1012:
 10411     08C7  0008               	return
 10412     08C8                     __end_of_putch:
 10413                           
 10414                           	psect	text16
 10415     09D2                     __ptext16:	
 10416 ;; *************** function _EUSART_Write *****************
 10417 ;; Defined at:
 10418 ;;		line 353 in file "mcc_generated_files/uart/src/eusart.c"
 10419 ;; Parameters:    Size  Location     Type
 10420 ;;  txData          1    0[BANK1 ] unsigned char 
 10421 ;; Auto vars:     Size  Location     Type
 10422 ;;  tempTxHead      1    1[BANK1 ] unsigned char 
 10423 ;; Return value:  Size  Location     Type
 10424 ;;                  1    wreg      void 
 10425 ;; Registers used:
 10426 ;;		wreg, fsr1l, fsr1h, status,2, status,0
 10427 ;; Tracked objects:
 10428 ;;		On entry : 0/0
 10429 ;;		On exit  : 0/0
 10430 ;;		Unchanged: 0/0
 10431 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10432 ;;      Params:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0
 10433 ;;      Locals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0
 10434 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10435 ;;      Totals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0
 10436 ;;Total ram usage:        2 bytes
 10437 ;; Hardware stack levels used: 1
 10438 ;; Hardware stack levels required when called: 7
 10439 ;; This function calls:
 10440 ;;		Nothing
 10441 ;; This function is called by:
 10442 ;;		_putch
 10443 ;; This function uses a non-reentrant model
 10444 ;;
 10445                           
 10446     09D2                     _EUSART_Write:	
 10447                           ;psect for function _EUSART_Write
 10448                           
 10449     09D2                     l4111:	
 10450                           ;incstack = 0
 10451 ;; hardware stack exceeded
 10452                           ; Regs used in _EUSART_Write: [wreg+fsr1l+fsr1h+status,2+status,0]
 10453                           
 10454                           
 10455                           ;mcc_generated_files/uart/src/eusart.c: 353: void EUSART_Write(uint8_t txData);mcc_gener
      +                          ated_files/uart/src/eusart.c: 354: {;mcc_generated_files/uart/src/eusart.c: 355:     uin
      +                          t8_t tempTxHead;;mcc_generated_files/uart/src/eusart.c: 357:     if(0 == PIE1bits.TXIE)
 10456     09D2  0021               	movlb	1	; select bank1
 10457     09D3  1A11               	btfsc	17,4	;volatile
 10458     09D4  29D6               	goto	u2771
 10459     09D5  29D7               	goto	u2770
 10460     09D6                     u2771:
 10461     09D6  29DB               	goto	l4115
 10462     09D7                     u2770:
 10463     09D7                     l4113:
 10464                           
 10465                           ;mcc_generated_files/uart/src/eusart.c: 358:     {;mcc_generated_files/uart/src/eusart.c
      +                          : 359:         TX1REG = txData;
 10466     09D7  0820               	movf	EUSART_Write@txData^(0+128),w
 10467     09D8  0023               	movlb	3	; select bank3
 10468     09D9  009A               	movwf	26	;volatile
 10469                           
 10470                           ;mcc_generated_files/uart/src/eusart.c: 360:     }
 10471     09DA  29F7               	goto	l991
 10472     09DB                     l4115:
 10473     09DB  0020               	movlb	0	; select bank0
 10474     09DC  086B               	movf	_eusartTxBufferRemaining,w	;volatile
 10475     09DD  1903               	btfsc	3,2
 10476     09DE  29E0               	goto	u2781
 10477     09DF  29E1               	goto	u2780
 10478     09E0                     u2781:
 10479     09E0  29F7               	goto	l991
 10480     09E1                     u2780:
 10481     09E1                     l4117:
 10482                           
 10483                           ;mcc_generated_files/uart/src/eusart.c: 362:     {;mcc_generated_files/uart/src/eusart.c
      +                          : 363:        eusartTxBuffer[eusartTxHead] = txData;
 10484     09E1  086D               	movf	_eusartTxHead,w
 10485     09E2  3E38               	addlw	(low (_eusartTxBuffer| (0+256)))& (0+255)
 10486     09E3  0086               	movwf	6
 10487     09E4  3001               	movlw	1	; select bank2/3
 10488     09E5  0087               	movwf	7
 10489     09E6  0021               	movlb	1	; select bank1
 10490     09E7  0820               	movf	EUSART_Write@txData^(0+128),w
 10491     09E8  0081               	movwf	1
 10492     09E9                     l4119:
 10493                           
 10494                           ;mcc_generated_files/uart/src/eusart.c: 364:        tempTxHead = (eusartTxHead + 1U) & (
      +                          (8U) - 1U);
 10495     09E9  0020               	movlb	0	; select bank0
 10496     09EA  086D               	movf	_eusartTxHead,w	;volatile
 10497     09EB  3E01               	addlw	1
 10498     09EC  3907               	andlw	7
 10499     09ED  0021               	movlb	1	; select bank1
 10500     09EE  00A1               	movwf	EUSART_Write@tempTxHead^(0+128)
 10501     09EF                     l4121:
 10502                           
 10503                           ;mcc_generated_files/uart/src/eusart.c: 366:        eusartTxHead = tempTxHead;
 10504     09EF  0821               	movf	EUSART_Write@tempTxHead^(0+128),w
 10505     09F0  0020               	movlb	0	; select bank0
 10506     09F1  00ED               	movwf	_eusartTxHead	;volatile
 10507     09F2                     l4123:
 10508                           
 10509                           ;mcc_generated_files/uart/src/eusart.c: 367:        PIE1bits.TXIE = 0;
 10510     09F2  0021               	movlb	1	; select bank1
 10511     09F3  1211               	bcf	17,4	;volatile
 10512     09F4                     l4125:
 10513                           
 10514                           ;mcc_generated_files/uart/src/eusart.c: 368:        eusartTxBufferRemaining--;
 10515     09F4  3001               	movlw	1
 10516     09F5  0020               	movlb	0	; select bank0
 10517     09F6  02EB               	subwf	_eusartTxBufferRemaining,f	;volatile
 10518     09F7                     l991:	
 10519                           ;mcc_generated_files/uart/src/eusart.c: 369:     }
 10520                           
 10521                           
 10522                           ;mcc_generated_files/uart/src/eusart.c: 374:     PIE1bits.TXIE = 1;
 10523     09F7  0021               	movlb	1	; select bank1
 10524     09F8  1611               	bsf	17,4	;volatile
 10525     09F9                     l994:
 10526     09F9  0008               	return
 10527     09FA                     __end_of_EUSART_Write:
 10528                           
 10529                           	psect	text17
 10530     17B6                     __ptext17:	
 10531 ;; *************** function _EUSART_IsTxReady *****************
 10532 ;; Defined at:
 10533 ;;		line 272 in file "mcc_generated_files/uart/src/eusart.c"
 10534 ;; Parameters:    Size  Location     Type
 10535 ;;		None
 10536 ;; Auto vars:     Size  Location     Type
 10537 ;;		None
 10538 ;; Return value:  Size  Location     Type
 10539 ;;                  1    wreg      _Bool 
 10540 ;; Registers used:
 10541 ;;		wreg, status,2, status,0
 10542 ;; Tracked objects:
 10543 ;;		On entry : 0/0
 10544 ;;		On exit  : 0/0
 10545 ;;		Unchanged: 0/0
 10546 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10547 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10548 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10549 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10550 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10551 ;;Total ram usage:        0 bytes
 10552 ;; Hardware stack levels used: 1
 10553 ;; Hardware stack levels required when called: 7
 10554 ;; This function calls:
 10555 ;;		Nothing
 10556 ;; This function is called by:
 10557 ;;		_putch
 10558 ;; This function uses a non-reentrant model
 10559 ;;
 10560                           
 10561     17B6                     _EUSART_IsTxReady:	
 10562                           ;psect for function _EUSART_IsTxReady
 10563                           
 10564     17B6                     l4107:	
 10565                           ;incstack = 0
 10566 ;; hardware stack exceeded
 10567                           ; Regs used in _EUSART_IsTxReady: [wreg+status,2+status,0]
 10568                           
 10569                           
 10570                           ;mcc_generated_files/uart/src/eusart.c: 274:     return (eusartTxBufferRemaining ? 1 : 0
      +                          );
 10571     17B6  0020               	movlb	0	; select bank0
 10572     17B7  086B               	movf	_eusartTxBufferRemaining,w	;volatile
 10573     17B8  1D03               	btfss	3,2
 10574     17B9  2FBB               	goto	u2751
 10575     17BA  2FBD               	goto	u2750
 10576     17BB                     u2751:
 10577     17BB  3001               	movlw	1
 10578     17BC  2FBE               	goto	u2760
 10579     17BD                     u2750:
 10580     17BD  3000               	movlw	0
 10581     17BE                     u2760:
 10582     17BE                     l967:
 10583     17BE  0008               	return
 10584     17BF                     __end_of_EUSART_IsTxReady:
 10585                           
 10586                           	psect	text18
 10587     08C8                     __ptext18:	
 10588 ;; *************** function _abs *****************
 10589 ;; Defined at:
 10590 ;;		line 1 in file "C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\abs.c"
 10591 ;; Parameters:    Size  Location     Type
 10592 ;;  a               2    6[BANK1 ] int 
 10593 ;; Auto vars:     Size  Location     Type
 10594 ;;		None
 10595 ;; Return value:  Size  Location     Type
 10596 ;;                  2    6[BANK1 ] int 
 10597 ;; Registers used:
 10598 ;;		wreg, status,2, status,0
 10599 ;; Tracked objects:
 10600 ;;		On entry : 0/0
 10601 ;;		On exit  : 0/0
 10602 ;;		Unchanged: 0/0
 10603 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10604 ;;      Params:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0
 10605 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10606 ;;      Temps:          0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0
 10607 ;;      Totals:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0
 10608 ;;Total ram usage:        4 bytes
 10609 ;; Hardware stack levels used: 1
 10610 ;; Hardware stack levels required when called: 7
 10611 ;; This function calls:
 10612 ;;		Nothing
 10613 ;; This function is called by:
 10614 ;;		_dtoa
 10615 ;; This function uses a non-reentrant model
 10616 ;;
 10617                           
 10618     08C8                     _abs:	
 10619                           ;psect for function _abs
 10620                           
 10621     08C8                     l4339:	
 10622                           ;incstack = 0
 10623                           ; Regs used in _abs: [wreg+status,2+status,0]
 10624                           
 10625     08C8  0021               	movlb	1	; select bank1
 10626     08C9  1BA7               	btfsc	(abs@a+1)^(0+128),7
 10627     08CA  28CC               	goto	u3261
 10628     08CB  28CD               	goto	u3260
 10629     08CC                     u3261:
 10630     08CC  28CE               	goto	l4343
 10631     08CD                     u3260:
 10632     08CD                     l4341:
 10633     08CD  28D9               	goto	l2021
 10634     08CE                     l4343:
 10635     08CE  0926               	comf	abs@a^(0+128),w
 10636     08CF  00A8               	movwf	??_abs^(0+128)
 10637     08D0  0927               	comf	(abs@a+1)^(0+128),w
 10638     08D1  00A9               	movwf	(??_abs^(0+128)+1)
 10639     08D2  0AA8               	incf	??_abs^(0+128),f
 10640     08D3  1903               	skipnz
 10641     08D4  0AA9               	incf	(??_abs^(0+128)+1),f
 10642     08D5  0828               	movf	??_abs^(0+128),w
 10643     08D6  00A6               	movwf	?_abs^(0+128)
 10644     08D7  0829               	movf	(??_abs+1)^(0+128),w
 10645     08D8  00A7               	movwf	(?_abs+1)^(0+128)
 10646     08D9                     l2021:
 10647     08D9  0008               	return
 10648     08DA                     __end_of_abs:
 10649                           
 10650                           	psect	text19
 10651     0C27                     __ptext19:	
 10652 ;; *************** function ___awmod *****************
 10653 ;; Defined at:
 10654 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\awmod.c"
 10655 ;; Parameters:    Size  Location     Type
 10656 ;;  divisor         2    0[BANK1 ] int 
 10657 ;;  dividend        2    2[BANK1 ] int 
 10658 ;; Auto vars:     Size  Location     Type
 10659 ;;  sign            1    5[BANK1 ] unsigned char 
 10660 ;;  counter         1    4[BANK1 ] unsigned char 
 10661 ;; Return value:  Size  Location     Type
 10662 ;;                  2    0[BANK1 ] int 
 10663 ;; Registers used:
 10664 ;;		wreg, status,2, status,0
 10665 ;; Tracked objects:
 10666 ;;		On entry : 0/0
 10667 ;;		On exit  : 0/0
 10668 ;;		Unchanged: 0/0
 10669 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10670 ;;      Params:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0
 10671 ;;      Locals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0
 10672 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10673 ;;      Totals:         0       0       6       0       0       0       0       0       0       0       0       0       
      +0       0
 10674 ;;Total ram usage:        6 bytes
 10675 ;; Hardware stack levels used: 1
 10676 ;; Hardware stack levels required when called: 7
 10677 ;; This function calls:
 10678 ;;		Nothing
 10679 ;; This function is called by:
 10680 ;;		_dtoa
 10681 ;; This function uses a non-reentrant model
 10682 ;;
 10683                           
 10684     0C27                     ___awmod:	
 10685                           ;psect for function ___awmod
 10686                           
 10687     0C27                     l4233:	
 10688                           ;incstack = 0
 10689                           ; Regs used in ___awmod: [wreg+status,2+status,0]
 10690                           
 10691     0C27  0021               	movlb	1	; select bank1
 10692     0C28  01A5               	clrf	___awmod@sign^(0+128)
 10693     0C29                     l4235:
 10694     0C29  1FA3               	btfss	(___awmod@dividend+1)^(0+128),7
 10695     0C2A  2C2C               	goto	u3001
 10696     0C2B  2C2D               	goto	u3000
 10697     0C2C                     u3001:
 10698     0C2C  2C34               	goto	l4241
 10699     0C2D                     u3000:
 10700     0C2D                     l4237:
 10701     0C2D  09A2               	comf	___awmod@dividend^(0+128),f
 10702     0C2E  09A3               	comf	(___awmod@dividend+1)^(0+128),f
 10703     0C2F  0AA2               	incf	___awmod@dividend^(0+128),f
 10704     0C30  1903               	skipnz
 10705     0C31  0AA3               	incf	(___awmod@dividend+1)^(0+128),f
 10706     0C32                     l4239:
 10707     0C32  3001               	movlw	1
 10708     0C33  00A5               	movwf	___awmod@sign^(0+128)
 10709     0C34                     l4241:
 10710     0C34  1FA1               	btfss	(___awmod@divisor+1)^(0+128),7
 10711     0C35  2C37               	goto	u3011
 10712     0C36  2C38               	goto	u3010
 10713     0C37                     u3011:
 10714     0C37  2C3D               	goto	l4245
 10715     0C38                     u3010:
 10716     0C38                     l4243:
 10717     0C38  09A0               	comf	___awmod@divisor^(0+128),f
 10718     0C39  09A1               	comf	(___awmod@divisor+1)^(0+128),f
 10719     0C3A  0AA0               	incf	___awmod@divisor^(0+128),f
 10720     0C3B  1903               	skipnz
 10721     0C3C  0AA1               	incf	(___awmod@divisor+1)^(0+128),f
 10722     0C3D                     l4245:
 10723     0C3D  0820               	movf	___awmod@divisor^(0+128),w
 10724     0C3E  0421               	iorwf	(___awmod@divisor+1)^(0+128),w
 10725     0C3F  1903               	btfsc	3,2
 10726     0C40  2C42               	goto	u3021
 10727     0C41  2C43               	goto	u3020
 10728     0C42                     u3021:
 10729     0C42  2C6A               	goto	l4263
 10730     0C43                     u3020:
 10731     0C43                     l4247:
 10732     0C43  3001               	movlw	1
 10733     0C44  00A4               	movwf	___awmod@counter^(0+128)
 10734     0C45  2C4D               	goto	l4253
 10735     0C46                     l4249:
 10736     0C46  3001               	movlw	1
 10737     0C47                     u3035:
 10738     0C47  35A0               	lslf	___awmod@divisor^(0+128),f
 10739     0C48  0DA1               	rlf	(___awmod@divisor+1)^(0+128),f
 10740     0C49  0B89               	decfsz	9,f
 10741     0C4A  2C47               	goto	u3035
 10742     0C4B                     l4251:
 10743     0C4B  3001               	movlw	1
 10744     0C4C  07A4               	addwf	___awmod@counter^(0+128),f
 10745     0C4D                     l4253:
 10746     0C4D  1FA1               	btfss	(___awmod@divisor+1)^(0+128),7
 10747     0C4E  2C50               	goto	u3041
 10748     0C4F  2C51               	goto	u3040
 10749     0C50                     u3041:
 10750     0C50  2C46               	goto	l4249
 10751     0C51                     u3040:
 10752     0C51                     l4255:
 10753     0C51  0821               	movf	(___awmod@divisor+1)^(0+128),w
 10754     0C52  0223               	subwf	(___awmod@dividend+1)^(0+128),w
 10755     0C53  1D03               	skipz
 10756     0C54  2C57               	goto	u3055
 10757     0C55  0820               	movf	___awmod@divisor^(0+128),w
 10758     0C56  0222               	subwf	___awmod@dividend^(0+128),w
 10759     0C57                     u3055:
 10760     0C57  1C03               	skipc
 10761     0C58  2C5A               	goto	u3051
 10762     0C59  2C5B               	goto	u3050
 10763     0C5A                     u3051:
 10764     0C5A  2C5F               	goto	l4259
 10765     0C5B                     u3050:
 10766     0C5B                     l4257:
 10767     0C5B  0820               	movf	___awmod@divisor^(0+128),w
 10768     0C5C  02A2               	subwf	___awmod@dividend^(0+128),f
 10769     0C5D  0821               	movf	(___awmod@divisor+1)^(0+128),w
 10770     0C5E  3BA3               	subwfb	(___awmod@dividend+1)^(0+128),f
 10771     0C5F                     l4259:
 10772     0C5F  3001               	movlw	1
 10773     0C60                     u3065:
 10774     0C60  36A1               	lsrf	(___awmod@divisor+1)^(0+128),f
 10775     0C61  0CA0               	rrf	___awmod@divisor^(0+128),f
 10776     0C62  0B89               	decfsz	9,f
 10777     0C63  2C60               	goto	u3065
 10778     0C64                     l4261:
 10779     0C64  3001               	movlw	1
 10780     0C65  02A4               	subwf	___awmod@counter^(0+128),f
 10781     0C66  1D03               	btfss	3,2
 10782     0C67  2C69               	goto	u3071
 10783     0C68  2C6A               	goto	u3070
 10784     0C69                     u3071:
 10785     0C69  2C51               	goto	l4255
 10786     0C6A                     u3070:
 10787     0C6A                     l4263:
 10788     0C6A  0825               	movf	___awmod@sign^(0+128),w
 10789     0C6B  1903               	btfsc	3,2
 10790     0C6C  2C6E               	goto	u3081
 10791     0C6D  2C6F               	goto	u3080
 10792     0C6E                     u3081:
 10793     0C6E  2C74               	goto	l4267
 10794     0C6F                     u3080:
 10795     0C6F                     l4265:
 10796     0C6F  09A2               	comf	___awmod@dividend^(0+128),f
 10797     0C70  09A3               	comf	(___awmod@dividend+1)^(0+128),f
 10798     0C71  0AA2               	incf	___awmod@dividend^(0+128),f
 10799     0C72  1903               	skipnz
 10800     0C73  0AA3               	incf	(___awmod@dividend+1)^(0+128),f
 10801     0C74                     l4267:
 10802     0C74  0823               	movf	(___awmod@dividend+1)^(0+128),w
 10803     0C75  00A1               	movwf	(?___awmod+1)^(0+128)
 10804     0C76  0822               	movf	___awmod@dividend^(0+128),w
 10805     0C77  00A0               	movwf	?___awmod^(0+128)
 10806     0C78                     l1609:
 10807     0C78  0008               	return
 10808     0C79                     __end_of___awmod:
 10809                           
 10810                           	psect	text20
 10811     0D22                     __ptext20:	
 10812 ;; *************** function ___awdiv *****************
 10813 ;; Defined at:
 10814 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\awdiv.c"
 10815 ;; Parameters:    Size  Location     Type
 10816 ;;  divisor         2    0[BANK1 ] int 
 10817 ;;  dividend        2    2[BANK1 ] int 
 10818 ;; Auto vars:     Size  Location     Type
 10819 ;;  quotient        2    6[BANK1 ] int 
 10820 ;;  sign            1    5[BANK1 ] unsigned char 
 10821 ;;  counter         1    4[BANK1 ] unsigned char 
 10822 ;; Return value:  Size  Location     Type
 10823 ;;                  2    0[BANK1 ] int 
 10824 ;; Registers used:
 10825 ;;		wreg, status,2, status,0
 10826 ;; Tracked objects:
 10827 ;;		On entry : 0/0
 10828 ;;		On exit  : 0/0
 10829 ;;		Unchanged: 0/0
 10830 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10831 ;;      Params:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0
 10832 ;;      Locals:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0
 10833 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10834 ;;      Totals:         0       0       8       0       0       0       0       0       0       0       0       0       
      +0       0
 10835 ;;Total ram usage:        8 bytes
 10836 ;; Hardware stack levels used: 1
 10837 ;; Hardware stack levels required when called: 7
 10838 ;; This function calls:
 10839 ;;		Nothing
 10840 ;; This function is called by:
 10841 ;;		_dtoa
 10842 ;; This function uses a non-reentrant model
 10843 ;;
 10844                           
 10845     0D22                     ___awdiv:	
 10846                           ;psect for function ___awdiv
 10847                           
 10848     0D22                     l4189:	
 10849                           ;incstack = 0
 10850                           ; Regs used in ___awdiv: [wreg+status,2+status,0]
 10851                           
 10852     0D22  0021               	movlb	1	; select bank1
 10853     0D23  01A5               	clrf	___awdiv@sign^(0+128)
 10854     0D24                     l4191:
 10855     0D24  1FA1               	btfss	(___awdiv@divisor+1)^(0+128),7
 10856     0D25  2D27               	goto	u2901
 10857     0D26  2D28               	goto	u2900
 10858     0D27                     u2901:
 10859     0D27  2D2F               	goto	l4197
 10860     0D28                     u2900:
 10861     0D28                     l4193:
 10862     0D28  09A0               	comf	___awdiv@divisor^(0+128),f
 10863     0D29  09A1               	comf	(___awdiv@divisor+1)^(0+128),f
 10864     0D2A  0AA0               	incf	___awdiv@divisor^(0+128),f
 10865     0D2B  1903               	skipnz
 10866     0D2C  0AA1               	incf	(___awdiv@divisor+1)^(0+128),f
 10867     0D2D                     l4195:
 10868     0D2D  3001               	movlw	1
 10869     0D2E  00A5               	movwf	___awdiv@sign^(0+128)
 10870     0D2F                     l4197:
 10871     0D2F  1FA3               	btfss	(___awdiv@dividend+1)^(0+128),7
 10872     0D30  2D32               	goto	u2911
 10873     0D31  2D33               	goto	u2910
 10874     0D32                     u2911:
 10875     0D32  2D3A               	goto	l4203
 10876     0D33                     u2910:
 10877     0D33                     l4199:
 10878     0D33  09A2               	comf	___awdiv@dividend^(0+128),f
 10879     0D34  09A3               	comf	(___awdiv@dividend+1)^(0+128),f
 10880     0D35  0AA2               	incf	___awdiv@dividend^(0+128),f
 10881     0D36  1903               	skipnz
 10882     0D37  0AA3               	incf	(___awdiv@dividend+1)^(0+128),f
 10883     0D38                     l4201:
 10884     0D38  3001               	movlw	1
 10885     0D39  06A5               	xorwf	___awdiv@sign^(0+128),f
 10886     0D3A                     l4203:
 10887     0D3A  01A6               	clrf	___awdiv@quotient^(0+128)
 10888     0D3B  01A7               	clrf	(___awdiv@quotient+1)^(0+128)
 10889     0D3C                     l4205:
 10890     0D3C  0820               	movf	___awdiv@divisor^(0+128),w
 10891     0D3D  0421               	iorwf	(___awdiv@divisor+1)^(0+128),w
 10892     0D3E  1903               	btfsc	3,2
 10893     0D3F  2D41               	goto	u2921
 10894     0D40  2D42               	goto	u2920
 10895     0D41                     u2921:
 10896     0D41  2D6F               	goto	l4225
 10897     0D42                     u2920:
 10898     0D42                     l4207:
 10899     0D42  3001               	movlw	1
 10900     0D43  00A4               	movwf	___awdiv@counter^(0+128)
 10901     0D44  2D4C               	goto	l4213
 10902     0D45                     l4209:
 10903     0D45  3001               	movlw	1
 10904     0D46                     u2935:
 10905     0D46  35A0               	lslf	___awdiv@divisor^(0+128),f
 10906     0D47  0DA1               	rlf	(___awdiv@divisor+1)^(0+128),f
 10907     0D48  0B89               	decfsz	9,f
 10908     0D49  2D46               	goto	u2935
 10909     0D4A                     l4211:
 10910     0D4A  3001               	movlw	1
 10911     0D4B  07A4               	addwf	___awdiv@counter^(0+128),f
 10912     0D4C                     l4213:
 10913     0D4C  1FA1               	btfss	(___awdiv@divisor+1)^(0+128),7
 10914     0D4D  2D4F               	goto	u2941
 10915     0D4E  2D50               	goto	u2940
 10916     0D4F                     u2941:
 10917     0D4F  2D45               	goto	l4209
 10918     0D50                     u2940:
 10919     0D50                     l4215:
 10920     0D50  3001               	movlw	1
 10921     0D51                     u2955:
 10922     0D51  35A6               	lslf	___awdiv@quotient^(0+128),f
 10923     0D52  0DA7               	rlf	(___awdiv@quotient+1)^(0+128),f
 10924     0D53  0B89               	decfsz	9,f
 10925     0D54  2D51               	goto	u2955
 10926     0D55  0821               	movf	(___awdiv@divisor+1)^(0+128),w
 10927     0D56  0223               	subwf	(___awdiv@dividend+1)^(0+128),w
 10928     0D57  1D03               	skipz
 10929     0D58  2D5B               	goto	u2965
 10930     0D59  0820               	movf	___awdiv@divisor^(0+128),w
 10931     0D5A  0222               	subwf	___awdiv@dividend^(0+128),w
 10932     0D5B                     u2965:
 10933     0D5B  1C03               	skipc
 10934     0D5C  2D5E               	goto	u2961
 10935     0D5D  2D5F               	goto	u2960
 10936     0D5E                     u2961:
 10937     0D5E  2D64               	goto	l4221
 10938     0D5F                     u2960:
 10939     0D5F                     l4217:
 10940     0D5F  0820               	movf	___awdiv@divisor^(0+128),w
 10941     0D60  02A2               	subwf	___awdiv@dividend^(0+128),f
 10942     0D61  0821               	movf	(___awdiv@divisor+1)^(0+128),w
 10943     0D62  3BA3               	subwfb	(___awdiv@dividend+1)^(0+128),f
 10944     0D63                     l4219:
 10945     0D63  1426               	bsf	___awdiv@quotient^(0+128),0
 10946     0D64                     l4221:
 10947     0D64  3001               	movlw	1
 10948     0D65                     u2975:
 10949     0D65  36A1               	lsrf	(___awdiv@divisor+1)^(0+128),f
 10950     0D66  0CA0               	rrf	___awdiv@divisor^(0+128),f
 10951     0D67  0B89               	decfsz	9,f
 10952     0D68  2D65               	goto	u2975
 10953     0D69                     l4223:
 10954     0D69  3001               	movlw	1
 10955     0D6A  02A4               	subwf	___awdiv@counter^(0+128),f
 10956     0D6B  1D03               	btfss	3,2
 10957     0D6C  2D6E               	goto	u2981
 10958     0D6D  2D6F               	goto	u2980
 10959     0D6E                     u2981:
 10960     0D6E  2D50               	goto	l4215
 10961     0D6F                     u2980:
 10962     0D6F                     l4225:
 10963     0D6F  0825               	movf	___awdiv@sign^(0+128),w
 10964     0D70  1903               	btfsc	3,2
 10965     0D71  2D73               	goto	u2991
 10966     0D72  2D74               	goto	u2990
 10967     0D73                     u2991:
 10968     0D73  2D79               	goto	l4229
 10969     0D74                     u2990:
 10970     0D74                     l4227:
 10971     0D74  09A6               	comf	___awdiv@quotient^(0+128),f
 10972     0D75  09A7               	comf	(___awdiv@quotient+1)^(0+128),f
 10973     0D76  0AA6               	incf	___awdiv@quotient^(0+128),f
 10974     0D77  1903               	skipnz
 10975     0D78  0AA7               	incf	(___awdiv@quotient+1)^(0+128),f
 10976     0D79                     l4229:
 10977     0D79  0827               	movf	(___awdiv@quotient+1)^(0+128),w
 10978     0D7A  00A1               	movwf	(?___awdiv+1)^(0+128)
 10979     0D7B  0826               	movf	___awdiv@quotient^(0+128),w
 10980     0D7C  00A0               	movwf	?___awdiv^(0+128)
 10981     0D7D                     l1596:
 10982     0D7D  0008               	return
 10983     0D7E                     __end_of___awdiv:
 10984                           
 10985                           	psect	text21
 10986     080F                     __ptext21:	
 10987 ;; *************** function _initAdcMultiplexer *****************
 10988 ;; Defined at:
 10989 ;;		line 24 in file "adcMeasurements.c"
 10990 ;; Parameters:    Size  Location     Type
 10991 ;;		None
 10992 ;; Auto vars:     Size  Location     Type
 10993 ;;		None
 10994 ;; Return value:  Size  Location     Type
 10995 ;;                  1    wreg      void 
 10996 ;; Registers used:
 10997 ;;		wreg, status,2, status,0, pclath, cstack
 10998 ;; Tracked objects:
 10999 ;;		On entry : 0/0
 11000 ;;		On exit  : 0/0
 11001 ;;		Unchanged: 0/0
 11002 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 11003 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11004 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11005 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11006 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11007 ;;Total ram usage:        0 bytes
 11008 ;; Hardware stack levels used: 1
 11009 ;; Hardware stack levels required when called: 8
 11010 ;; This function calls:
 11011 ;;		_ADC_SelectChannel
 11012 ;;		_ADC_SetInterruptHandler
 11013 ;; This function is called by:
 11014 ;;		_main
 11015 ;; This function uses a non-reentrant model
 11016 ;;
 11017                           
 11018     080F                     _initAdcMultiplexer:	
 11019                           ;psect for function _initAdcMultiplexer
 11020                           
 11021     080F                     l5523:	
 11022                           ;incstack = 0
 11023                           ; Regs used in _initAdcMultiplexer: [wreg+status,2+status,0+pclath+cstack]
 11024                           
 11025                           
 11026                           ;adcMeasurements.c: 25:     ADC_SelectChannel(potentiometer);
 11027     080F  3010               	movlw	16
 11028     0810  3188  2003  3188   	fcall	_ADC_SelectChannel
 11029                           
 11030                           ;adcMeasurements.c: 26:     ADC_SetInterruptHandler(adcConversionDoneHandler);
 11031     0813  3051               	movlw	low _adcConversionDoneHandler
 11032     0814  0021               	movlb	1	; select bank1
 11033     0815  00A0               	movwf	ADC_SetInterruptHandler@InterruptHandler^(0+128)
 11034     0816  300A               	movlw	high _adcConversionDoneHandler
 11035     0817  00A1               	movwf	(ADC_SetInterruptHandler@InterruptHandler^(0+128)+1)
 11036     0818  3197  279B  3188   	fcall	_ADC_SetInterruptHandler
 11037     081B                     l1082:
 11038     081B  0008               	return
 11039     081C                     __end_of_initAdcMultiplexer:
 11040                           
 11041                           	psect	text22
 11042     0803                     __ptext22:	
 11043 ;; *************** function _ADC_SelectChannel *****************
 11044 ;; Defined at:
 11045 ;;		line 82 in file "mcc_generated_files/adc/src/adc.c"
 11046 ;; Parameters:    Size  Location     Type
 11047 ;;  channel         1    wreg     enum E6663
 11048 ;; Auto vars:     Size  Location     Type
 11049 ;;  channel         1    1[BANK1 ] enum E6663
 11050 ;; Return value:  Size  Location     Type
 11051 ;;                  1    wreg      void 
 11052 ;; Registers used:
 11053 ;;		wreg, status,2, status,0
 11054 ;; Tracked objects:
 11055 ;;		On entry : 0/0
 11056 ;;		On exit  : 0/0
 11057 ;;		Unchanged: 0/0
 11058 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 11059 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11060 ;;      Locals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0
 11061 ;;      Temps:          0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0
 11062 ;;      Totals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0
 11063 ;;Total ram usage:        2 bytes
 11064 ;; Hardware stack levels used: 1
 11065 ;; Hardware stack levels required when called: 7
 11066 ;; This function calls:
 11067 ;;		Nothing
 11068 ;; This function is called by:
 11069 ;;		_initAdcMultiplexer
 11070 ;; This function uses a non-reentrant model
 11071 ;;
 11072                           
 11073     0803                     _ADC_SelectChannel:	
 11074                           ;psect for function _ADC_SelectChannel
 11075                           
 11076                           
 11077                           ;incstack = 0
 11078                           ; Regs used in _ADC_SelectChannel: [wreg+status,2+status,0]
 11079                           ;ADC_SelectChannel@channel stored from wreg
 11080     0803  0021               	movlb	1	; select bank1
 11081     0804  00A1               	movwf	ADC_SelectChannel@channel^(0+128)
 11082     0805                     l5159:
 11083                           
 11084                           ;mcc_generated_files/adc/src/adc.c: 82: void ADC_SelectChannel(adc_channel_t channel);mc
      +                          c_generated_files/adc/src/adc.c: 83: {;mcc_generated_files/adc/src/adc.c: 85:     ADCON0
      +                          bits.CHS = channel;
 11085     0805  0821               	movf	ADC_SelectChannel@channel^(0+128),w
 11086     0806  00A0               	movwf	??_ADC_SelectChannel^(0+128)
 11087     0807  0DA0               	rlf	??_ADC_SelectChannel^(0+128),f
 11088     0808  0DA0               	rlf	??_ADC_SelectChannel^(0+128),f
 11089     0809  081D               	movf	29,w	;volatile
 11090     080A  0620               	xorwf	??_ADC_SelectChannel^(0+128),w
 11091     080B  3903               	andlw	-253
 11092     080C  0620               	xorwf	??_ADC_SelectChannel^(0+128),w
 11093     080D  009D               	movwf	29	;volatile
 11094     080E                     l30:
 11095     080E  0008               	return
 11096     080F                     __end_of_ADC_SelectChannel:
 11097                           
 11098                           	psect	text23
 11099     17AD                     __ptext23:	
 11100 ;; *************** function _TMR4_PeriodMatchCallbackRegister *****************
 11101 ;; Defined at:
 11102 ;;		line 124 in file "mcc_generated_files/timer/src/tmr4.c"
 11103 ;; Parameters:    Size  Location     Type
 11104 ;;  CallbackHand    2    0[BANK1 ] PTR FTN()void 
 11105 ;;		 -> controller(1), 
 11106 ;; Auto vars:     Size  Location     Type
 11107 ;;		None
 11108 ;; Return value:  Size  Location     Type
 11109 ;;                  1    wreg      void 
 11110 ;; Registers used:
 11111 ;;		wreg
 11112 ;; Tracked objects:
 11113 ;;		On entry : 0/0
 11114 ;;		On exit  : 0/0
 11115 ;;		Unchanged: 0/0
 11116 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 11117 ;;      Params:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0
 11118 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11119 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11120 ;;      Totals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0
 11121 ;;Total ram usage:        2 bytes
 11122 ;; Hardware stack levels used: 1
 11123 ;; Hardware stack levels required when called: 7
 11124 ;; This function calls:
 11125 ;;		Nothing
 11126 ;; This function is called by:
 11127 ;;		_main
 11128 ;; This function uses a non-reentrant model
 11129 ;;
 11130                           
 11131     17AD                     _TMR4_PeriodMatchCallbackRegister:	
 11132                           ;psect for function _TMR4_PeriodMatchCallbackRegister
 11133                           
 11134     17AD                     l5473:	
 11135                           ;incstack = 0
 11136                           ; Regs used in _TMR4_PeriodMatchCallbackRegister: [wreg]
 11137                           
 11138                           
 11139                           ;mcc_generated_files/timer/src/tmr4.c: 124: void TMR4_PeriodMatchCallbackRegister(void (
      +                          * CallbackHandler)(void));mcc_generated_files/timer/src/tmr4.c: 125: {;mcc_generated_fil
      +                          es/timer/src/tmr4.c: 126:    TMR4_PeriodMatchCallback = CallbackHandler;
 11140     17AD  0021               	movlb	1	; select bank1
 11141     17AE  0821               	movf	(TMR4_PeriodMatchCallbackRegister@CallbackHandler+1)^(0+128),w
 11142     17AF  0022               	movlb	2	; select bank2
 11143     17B0  00EB               	movwf	(_TMR4_PeriodMatchCallback+1)^(0+256)
 11144     17B1  0021               	movlb	1	; select bank1
 11145     17B2  0820               	movf	TMR4_PeriodMatchCallbackRegister@CallbackHandler^(0+128),w
 11146     17B3  0022               	movlb	2	; select bank2
 11147     17B4  00EA               	movwf	_TMR4_PeriodMatchCallback^(0+256)
 11148     17B5                     l746:
 11149     17B5  0008               	return
 11150     17B6                     __end_of_TMR4_PeriodMatchCallbackRegister:
 11151                           
 11152                           	psect	text24
 11153     0969                     __ptext24:	
 11154 ;; *************** function _SYSTEM_Initialize *****************
 11155 ;; Defined at:
 11156 ;;		line 39 in file "mcc_generated_files/system/src/system.c"
 11157 ;; Parameters:    Size  Location     Type
 11158 ;;		None
 11159 ;; Auto vars:     Size  Location     Type
 11160 ;;		None
 11161 ;; Return value:  Size  Location     Type
 11162 ;;                  1    wreg      void 
 11163 ;; Registers used:
 11164 ;;		wreg, status,2, status,0, pclath, cstack
 11165 ;; Tracked objects:
 11166 ;;		On entry : 0/0
 11167 ;;		On exit  : 0/0
 11168 ;;		Unchanged: 0/0
 11169 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 11170 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11171 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11172 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11173 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11174 ;;Total ram usage:        0 bytes
 11175 ;; Hardware stack levels used: 1
 11176 ;; Hardware stack levels required when called: 9
 11177 ;; This function calls:
 11178 ;;		_ADC_Initialize
 11179 ;;		_CLOCK_Initialize
 11180 ;;		_EUSART_Initialize
 11181 ;;		_I2C2_Initialize
 11182 ;;		_INTERRUPT_Initialize
 11183 ;;		_PIN_MANAGER_Initialize
 11184 ;;		_SPI1_Initialize
 11185 ;;		_TMR2_Initialize
 11186 ;;		_TMR4_Initialize
 11187 ;;		_TMR6_Initialize
 11188 ;;		_pwm_fan_Initialize
 11189 ;; This function is called by:
 11190 ;;		_main
 11191 ;; This function uses a non-reentrant model
 11192 ;;
 11193                           
 11194     0969                     _SYSTEM_Initialize:	
 11195                           ;psect for function _SYSTEM_Initialize
 11196                           
 11197     0969                     l5455:	
 11198                           ;incstack = 0
 11199                           ; Regs used in _SYSTEM_Initialize: [wreg+status,2+status,0+pclath+cstack]
 11200                           
 11201                           
 11202                           ;mcc_generated_files/system/src/system.c: 41:     CLOCK_Initialize();
 11203     0969  3197  27A4  3189   	fcall	_CLOCK_Initialize
 11204                           
 11205                           ;mcc_generated_files/system/src/system.c: 42:     PIN_MANAGER_Initialize();
 11206     096C  318B  2391  3189   	fcall	_PIN_MANAGER_Initialize
 11207     096F                     l5457:
 11208                           
 11209                           ;mcc_generated_files/system/src/system.c: 43:     TMR2_Initialize();
 11210     096F  3188  2095  3189   	fcall	_TMR2_Initialize
 11211     0972                     l5459:
 11212                           
 11213                           ;mcc_generated_files/system/src/system.c: 44:     TMR4_Initialize();
 11214     0972  3188  20A6  3189   	fcall	_TMR4_Initialize
 11215     0975                     l5461:
 11216                           
 11217                           ;mcc_generated_files/system/src/system.c: 45:     TMR6_Initialize();
 11218     0975  3188  2076  3189   	fcall	_TMR6_Initialize
 11219     0978                     l5463:
 11220                           
 11221                           ;mcc_generated_files/system/src/system.c: 46:     ADC_Initialize();
 11222     0978  3189  2104  3189   	fcall	_ADC_Initialize
 11223     097B                     l5465:
 11224                           
 11225                           ;mcc_generated_files/system/src/system.c: 47:     EUSART_Initialize();
 11226     097B  318A  22E6  3189   	fcall	_EUSART_Initialize
 11227     097E                     l5467:
 11228                           
 11229                           ;mcc_generated_files/system/src/system.c: 48:     I2C2_Initialize();
 11230     097E  3188  2067  3189   	fcall	_I2C2_Initialize
 11231                           
 11232                           ;mcc_generated_files/system/src/system.c: 49:     pwm_fan_Initialize();
 11233     0981  3197  27F4  3189   	fcall	_pwm_fan_Initialize
 11234     0984                     l5469:
 11235                           
 11236                           ;mcc_generated_files/system/src/system.c: 50:     SPI1_Initialize();
 11237     0984  3197  27C8  3189   	fcall	_SPI1_Initialize
 11238     0987                     l5471:
 11239                           
 11240                           ;mcc_generated_files/system/src/system.c: 51:     INTERRUPT_Initialize();
 11241     0987  3197  27E8  3189   	fcall	_INTERRUPT_Initialize
 11242     098A                     l631:
 11243     098A  0008               	return
 11244     098B                     __end_of_SYSTEM_Initialize:
 11245                           
 11246                           	psect	text25
 11247     17F4                     __ptext25:	
 11248 ;; *************** function _pwm_fan_Initialize *****************
 11249 ;; Defined at:
 11250 ;;		line 45 in file "mcc_generated_files/pwm/src/pwm5.c"
 11251 ;; Parameters:    Size  Location     Type
 11252 ;;		None
 11253 ;; Auto vars:     Size  Location     Type
 11254 ;;		None
 11255 ;; Return value:  Size  Location     Type
 11256 ;;                  1    wreg      void 
 11257 ;; Registers used:
 11258 ;;		wreg, status,2, status,0
 11259 ;; Tracked objects:
 11260 ;;		On entry : 0/0
 11261 ;;		On exit  : 0/0
 11262 ;;		Unchanged: 0/0
 11263 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 11264 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11265 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11266 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11267 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11268 ;;Total ram usage:        0 bytes
 11269 ;; Hardware stack levels used: 1
 11270 ;; Hardware stack levels required when called: 7
 11271 ;; This function calls:
 11272 ;;		Nothing
 11273 ;; This function is called by:
 11274 ;;		_SYSTEM_Initialize
 11275 ;; This function uses a non-reentrant model
 11276 ;;
 11277                           
 11278     17F4                     _pwm_fan_Initialize:	
 11279                           ;psect for function _pwm_fan_Initialize
 11280                           
 11281     17F4                     l5197:	
 11282                           ;incstack = 0
 11283                           ; Regs used in _pwm_fan_Initialize: [wreg+status,2+status,0]
 11284                           
 11285                           
 11286                           ;mcc_generated_files/pwm/src/pwm5.c: 50:     PWM5CON = 0x80;
 11287     17F4  3080               	movlw	128
 11288     17F5  002C               	movlb	12	; select bank12
 11289     17F6  0099               	movwf	25	;volatile
 11290                           
 11291                           ;mcc_generated_files/pwm/src/pwm5.c: 53:     PWM5DCH = 0x7F;
 11292     17F7  307F               	movlw	127
 11293     17F8  0098               	movwf	24	;volatile
 11294                           
 11295                           ;mcc_generated_files/pwm/src/pwm5.c: 56:     PWM5DCL = 0xC0;
 11296     17F9  30C0               	movlw	192
 11297     17FA  0097               	movwf	23	;volatile
 11298     17FB                     l5199:
 11299                           
 11300                           ;mcc_generated_files/pwm/src/pwm5.c: 60:     PWMTMRSbits.P5TSEL = 0x1;
 11301     17FB  081F               	movf	31,w	;volatile
 11302     17FC  39FC               	andlw	-4
 11303     17FD  3801               	iorlw	1
 11304     17FE  009F               	movwf	31	;volatile
 11305     17FF                     l327:
 11306     17FF  0008               	return
 11307     1800                     __end_of_pwm_fan_Initialize:
 11308                           
 11309                           	psect	text26
 11310     0876                     __ptext26:	
 11311 ;; *************** function _TMR6_Initialize *****************
 11312 ;; Defined at:
 11313 ;;		line 45 in file "mcc_generated_files/timer/src/tmr6.c"
 11314 ;; Parameters:    Size  Location     Type
 11315 ;;		None
 11316 ;; Auto vars:     Size  Location     Type
 11317 ;;		None
 11318 ;; Return value:  Size  Location     Type
 11319 ;;                  1    wreg      void 
 11320 ;; Registers used:
 11321 ;;		wreg, status,2
 11322 ;; Tracked objects:
 11323 ;;		On entry : 0/0
 11324 ;;		On exit  : 0/0
 11325 ;;		Unchanged: 0/0
 11326 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 11327 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11328 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11329 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11330 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11331 ;;Total ram usage:        0 bytes
 11332 ;; Hardware stack levels used: 1
 11333 ;; Hardware stack levels required when called: 7
 11334 ;; This function calls:
 11335 ;;		Nothing
 11336 ;; This function is called by:
 11337 ;;		_SYSTEM_Initialize
 11338 ;; This function uses a non-reentrant model
 11339 ;;
 11340                           
 11341     0876                     _TMR6_Initialize:	
 11342                           ;psect for function _TMR6_Initialize
 11343                           
 11344     0876                     l5279:	
 11345                           ;incstack = 0
 11346                           ; Regs used in _TMR6_Initialize: [wreg+status,2]
 11347                           
 11348                           
 11349                           ;mcc_generated_files/timer/src/tmr6.c: 48:     PR6 = 0xE;
 11350     0876  300E               	movlw	14
 11351     0877  0028               	movlb	8	; select bank8
 11352     0878  009D               	movwf	29	;volatile
 11353     0879                     l5281:
 11354                           
 11355                           ;mcc_generated_files/timer/src/tmr6.c: 49:     TMR6 = 0x0;
 11356     0879  019C               	clrf	28	;volatile
 11357     087A                     l5283:
 11358                           
 11359                           ;mcc_generated_files/timer/src/tmr6.c: 50:     TMR6_PeriodMatchCallback = TMR6_DefaultPe
      +                          riodMatchCallback;
 11360     087A  3000               	movlw	0
 11361     087B  0022               	movlb	2	; select bank2
 11362     087C  00E8               	movwf	_TMR6_PeriodMatchCallback^(0+256)
 11363     087D  3000               	movlw	0
 11364     087E  00E9               	movwf	(_TMR6_PeriodMatchCallback^(0+256)+1)
 11365     087F                     l5285:
 11366                           
 11367                           ;mcc_generated_files/timer/src/tmr6.c: 52:     PIR2bits.TMR6IF = 0;
 11368     087F  0020               	movlb	0	; select bank0
 11369     0880  1392               	bcf	18,7	;volatile
 11370     0881                     l5287:
 11371                           
 11372                           ;mcc_generated_files/timer/src/tmr6.c: 53:     T6CON = (1 << 0x0)
 11373     0881  301D               	movlw	29
 11374     0882  0028               	movlb	8	; select bank8
 11375     0883  009E               	movwf	30	;volatile
 11376     0884                     l768:
 11377     0884  0008               	return
 11378     0885                     __end_of_TMR6_Initialize:
 11379                           
 11380                           	psect	text27
 11381     08A6                     __ptext27:	
 11382 ;; *************** function _TMR4_Initialize *****************
 11383 ;; Defined at:
 11384 ;;		line 45 in file "mcc_generated_files/timer/src/tmr4.c"
 11385 ;; Parameters:    Size  Location     Type
 11386 ;;		None
 11387 ;; Auto vars:     Size  Location     Type
 11388 ;;		None
 11389 ;; Return value:  Size  Location     Type
 11390 ;;                  1    wreg      void 
 11391 ;; Registers used:
 11392 ;;		wreg, status,2
 11393 ;; Tracked objects:
 11394 ;;		On entry : 0/0
 11395 ;;		On exit  : 0/0
 11396 ;;		Unchanged: 0/0
 11397 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 11398 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11399 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11400 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11401 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11402 ;;Total ram usage:        0 bytes
 11403 ;; Hardware stack levels used: 1
 11404 ;; Hardware stack levels required when called: 7
 11405 ;; This function calls:
 11406 ;;		Nothing
 11407 ;; This function is called by:
 11408 ;;		_SYSTEM_Initialize
 11409 ;; This function uses a non-reentrant model
 11410 ;;
 11411                           
 11412     08A6                     _TMR4_Initialize:	
 11413                           ;psect for function _TMR4_Initialize
 11414                           
 11415     08A6                     l5267:	
 11416                           ;incstack = 0
 11417                           ; Regs used in _TMR4_Initialize: [wreg+status,2]
 11418                           
 11419                           
 11420                           ;mcc_generated_files/timer/src/tmr4.c: 48:     PR4 = 0xFF;
 11421     08A6  30FF               	movlw	255
 11422     08A7  0028               	movlb	8	; select bank8
 11423     08A8  0096               	movwf	22	;volatile
 11424     08A9                     l5269:
 11425                           
 11426                           ;mcc_generated_files/timer/src/tmr4.c: 49:     TMR4 = 0x0;
 11427     08A9  0195               	clrf	21	;volatile
 11428     08AA                     l5271:
 11429                           
 11430                           ;mcc_generated_files/timer/src/tmr4.c: 50:     TMR4_PeriodMatchCallback = TMR4_DefaultPe
      +                          riodMatchCallback;
 11431     08AA  30FF               	movlw	low _TMR4_DefaultPeriodMatchCallback
 11432     08AB  0022               	movlb	2	; select bank2
 11433     08AC  00EA               	movwf	_TMR4_PeriodMatchCallback^(0+256)
 11434     08AD  3007               	movlw	high _TMR4_DefaultPeriodMatchCallback
 11435     08AE  00EB               	movwf	(_TMR4_PeriodMatchCallback^(0+256)+1)
 11436     08AF                     l5273:
 11437                           
 11438                           ;mcc_generated_files/timer/src/tmr4.c: 52:     PIR2bits.TMR4IF = 0;
 11439     08AF  0020               	movlb	0	; select bank0
 11440     08B0  1092               	bcf	18,1	;volatile
 11441     08B1                     l5275:
 11442                           
 11443                           ;mcc_generated_files/timer/src/tmr4.c: 53:     PIE2bits.TMR4IE = 1;
 11444     08B1  0021               	movlb	1	; select bank1
 11445     08B2  1492               	bsf	18,1	;volatile
 11446     08B3                     l5277:
 11447                           
 11448                           ;mcc_generated_files/timer/src/tmr4.c: 54:     T4CON = (2 << 0x0)
 11449     08B3  3076               	movlw	118
 11450     08B4  0028               	movlb	8	; select bank8
 11451     08B5  0097               	movwf	23	;volatile
 11452     08B6                     l709:
 11453     08B6  0008               	return
 11454     08B7                     __end_of_TMR4_Initialize:
 11455                           
 11456                           	psect	text28
 11457     0895                     __ptext28:	
 11458 ;; *************** function _TMR2_Initialize *****************
 11459 ;; Defined at:
 11460 ;;		line 45 in file "mcc_generated_files/timer/src/tmr2.c"
 11461 ;; Parameters:    Size  Location     Type
 11462 ;;		None
 11463 ;; Auto vars:     Size  Location     Type
 11464 ;;		None
 11465 ;; Return value:  Size  Location     Type
 11466 ;;                  1    wreg      void 
 11467 ;; Registers used:
 11468 ;;		wreg, status,2
 11469 ;; Tracked objects:
 11470 ;;		On entry : 0/0
 11471 ;;		On exit  : 0/0
 11472 ;;		Unchanged: 0/0
 11473 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 11474 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11475 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11476 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11477 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11478 ;;Total ram usage:        0 bytes
 11479 ;; Hardware stack levels used: 1
 11480 ;; Hardware stack levels required when called: 7
 11481 ;; This function calls:
 11482 ;;		Nothing
 11483 ;; This function is called by:
 11484 ;;		_SYSTEM_Initialize
 11485 ;; This function uses a non-reentrant model
 11486 ;;
 11487                           
 11488     0895                     _TMR2_Initialize:	
 11489                           ;psect for function _TMR2_Initialize
 11490                           
 11491     0895                     l5255:	
 11492                           ;incstack = 0
 11493                           ; Regs used in _TMR2_Initialize: [wreg+status,2]
 11494                           
 11495                           
 11496                           ;mcc_generated_files/timer/src/tmr2.c: 48:     PR2 = 0xFF;
 11497     0895  30FF               	movlw	255
 11498     0896  0020               	movlb	0	; select bank0
 11499     0897  009E               	movwf	30	;volatile
 11500     0898                     l5257:
 11501                           
 11502                           ;mcc_generated_files/timer/src/tmr2.c: 49:     TMR2 = 0x0;
 11503     0898  019D               	clrf	29	;volatile
 11504     0899                     l5259:
 11505                           
 11506                           ;mcc_generated_files/timer/src/tmr2.c: 50:     TMR2_PeriodMatchCallback = TMR2_DefaultPe
      +                          riodMatchCallback;
 11507     0899  3001               	movlw	low _TMR2_DefaultPeriodMatchCallback
 11508     089A  0022               	movlb	2	; select bank2
 11509     089B  00EC               	movwf	_TMR2_PeriodMatchCallback^(0+256)
 11510     089C  3017               	movlw	high _TMR2_DefaultPeriodMatchCallback
 11511     089D  00ED               	movwf	(_TMR2_PeriodMatchCallback^(0+256)+1)
 11512     089E                     l5261:
 11513                           
 11514                           ;mcc_generated_files/timer/src/tmr2.c: 52:     PIR1bits.TMR2IF = 0;
 11515     089E  0020               	movlb	0	; select bank0
 11516     089F  1091               	bcf	17,1	;volatile
 11517     08A0                     l5263:
 11518                           
 11519                           ;mcc_generated_files/timer/src/tmr2.c: 53:     PIE1bits.TMR2IE = 1;
 11520     08A0  0021               	movlb	1	; select bank1
 11521     08A1  1491               	bsf	17,1	;volatile
 11522     08A2                     l5265:
 11523                           
 11524                           ;mcc_generated_files/timer/src/tmr2.c: 54:     T2CON = (1 << 0x0)
 11525     08A2  301D               	movlw	29
 11526     08A3  0020               	movlb	0	; select bank0
 11527     08A4  009F               	movwf	31	;volatile
 11528     08A5                     l650:
 11529     08A5  0008               	return
 11530     08A6                     __end_of_TMR2_Initialize:
 11531                           
 11532                           	psect	text29
 11533     17C8                     __ptext29:	
 11534 ;; *************** function _SPI1_Initialize *****************
 11535 ;; Defined at:
 11536 ;;		line 60 in file "mcc_generated_files/spi/src/mssp1.c"
 11537 ;; Parameters:    Size  Location     Type
 11538 ;;		None
 11539 ;; Auto vars:     Size  Location     Type
 11540 ;;		None
 11541 ;; Return value:  Size  Location     Type
 11542 ;;                  1    wreg      void 
 11543 ;; Registers used:
 11544 ;;		status,2
 11545 ;; Tracked objects:
 11546 ;;		On entry : 0/0
 11547 ;;		On exit  : 0/0
 11548 ;;		Unchanged: 0/0
 11549 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 11550 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11551 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11552 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11553 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11554 ;;Total ram usage:        0 bytes
 11555 ;; Hardware stack levels used: 1
 11556 ;; Hardware stack levels required when called: 7
 11557 ;; This function calls:
 11558 ;;		Nothing
 11559 ;; This function is called by:
 11560 ;;		_SYSTEM_Initialize
 11561 ;; This function uses a non-reentrant model
 11562 ;;
 11563                           
 11564     17C8                     _SPI1_Initialize:	
 11565                           ;psect for function _SPI1_Initialize
 11566                           
 11567     17C8                     l5201:	
 11568                           ;incstack = 0
 11569                           ; Regs used in _SPI1_Initialize: [status,2]
 11570                           
 11571                           
 11572                           ;mcc_generated_files/spi/src/mssp1.c: 63:     PIE1bits.SSP1IE = 0;
 11573     17C8  0021               	movlb	1	; select bank1
 11574     17C9  1191               	bcf	17,3	;volatile
 11575                           
 11576                           ;mcc_generated_files/spi/src/mssp1.c: 64:     PIR1bits.SSP1IF = 0;
 11577     17CA  0020               	movlb	0	; select bank0
 11578     17CB  1191               	bcf	17,3	;volatile
 11579     17CC                     l5203:
 11580                           
 11581                           ;mcc_generated_files/spi/src/mssp1.c: 66:     SSP1STAT = 0x00;
 11582     17CC  0024               	movlb	4	; select bank4
 11583     17CD  0194               	clrf	20	;volatile
 11584                           
 11585                           ;mcc_generated_files/spi/src/mssp1.c: 67:     SSP1CON1 = 0x00;
 11586     17CE  0195               	clrf	21	;volatile
 11587                           
 11588                           ;mcc_generated_files/spi/src/mssp1.c: 68:     SSP1CON3 = 0x00;
 11589     17CF  0197               	clrf	23	;volatile
 11590                           
 11591                           ;mcc_generated_files/spi/src/mssp1.c: 69:     SSP1ADD = 0x00;
 11592     17D0  0192               	clrf	18	;volatile
 11593     17D1                     l377:
 11594     17D1  0008               	return
 11595     17D2                     __end_of_SPI1_Initialize:
 11596                           
 11597                           	psect	text30
 11598     0B91                     __ptext30:	
 11599 ;; *************** function _PIN_MANAGER_Initialize *****************
 11600 ;; Defined at:
 11601 ;;		line 38 in file "mcc_generated_files/system/src/pins.c"
 11602 ;; Parameters:    Size  Location     Type
 11603 ;;		None
 11604 ;; Auto vars:     Size  Location     Type
 11605 ;;		None
 11606 ;; Return value:  Size  Location     Type
 11607 ;;                  1    wreg      void 
 11608 ;; Registers used:
 11609 ;;		status,2
 11610 ;; Tracked objects:
 11611 ;;		On entry : 0/0
 11612 ;;		On exit  : 0/0
 11613 ;;		Unchanged: 0/0
 11614 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 11615 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11616 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11617 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11618 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11619 ;;Total ram usage:        0 bytes
 11620 ;; Hardware stack levels used: 1
 11621 ;; Hardware stack levels required when called: 7
 11622 ;; This function calls:
 11623 ;;		Nothing
 11624 ;; This function is called by:
 11625 ;;		_SYSTEM_Initialize
 11626 ;; This function uses a non-reentrant model
 11627 ;;
 11628                           
 11629     0B91                     _PIN_MANAGER_Initialize:	
 11630                           ;psect for function _PIN_MANAGER_Initialize
 11631                           
 11632     0B91                     l5213:	
 11633                           ;incstack = 0
 11634                           ; Regs used in _PIN_MANAGER_Initialize: [status,2]
 11635                           
 11636                           
 11637                           ;mcc_generated_files/system/src/pins.c: 43:     LATA = 0x0;
 11638     0B91  0022               	movlb	2	; select bank2
 11639     0B92  018C               	clrf	12	;volatile
 11640     0B93                     l5215:
 11641                           
 11642                           ;mcc_generated_files/system/src/pins.c: 44:     LATB = 0x50;
 11643     0B93  3050               	movlw	80
 11644     0B94  008D               	movwf	13	;volatile
 11645                           
 11646                           ;mcc_generated_files/system/src/pins.c: 45:     LATC = 0x0;
 11647     0B95  018E               	clrf	14	;volatile
 11648     0B96                     l5217:
 11649                           
 11650                           ;mcc_generated_files/system/src/pins.c: 50:     TRISA = 0x19;
 11651     0B96  3019               	movlw	25
 11652     0B97  0021               	movlb	1	; select bank1
 11653     0B98  008C               	movwf	12	;volatile
 11654     0B99                     l5219:
 11655                           
 11656                           ;mcc_generated_files/system/src/pins.c: 51:     TRISB = 0xD0;
 11657     0B99  30D0               	movlw	208
 11658     0B9A  008D               	movwf	13	;volatile
 11659     0B9B                     l5221:
 11660                           
 11661                           ;mcc_generated_files/system/src/pins.c: 52:     TRISC = 0xDF;
 11662     0B9B  30DF               	movlw	223
 11663     0B9C  008E               	movwf	14	;volatile
 11664     0B9D                     l5223:
 11665                           
 11666                           ;mcc_generated_files/system/src/pins.c: 57:     ANSELA = 0x10;
 11667     0B9D  3010               	movlw	16
 11668     0B9E  0023               	movlb	3	; select bank3
 11669     0B9F  008C               	movwf	12	;volatile
 11670     0BA0                     l5225:
 11671                           
 11672                           ;mcc_generated_files/system/src/pins.c: 58:     ANSELB = 0x20;
 11673     0BA0  3020               	movlw	32
 11674     0BA1  008D               	movwf	13	;volatile
 11675     0BA2                     l5227:
 11676                           
 11677                           ;mcc_generated_files/system/src/pins.c: 59:     ANSELC = 0xFF;
 11678     0BA2  30FF               	movlw	255
 11679     0BA3  008E               	movwf	14	;volatile
 11680                           
 11681                           ;mcc_generated_files/system/src/pins.c: 64:     WPUA = 0x0;
 11682     0BA4  0024               	movlb	4	; select bank4
 11683     0BA5  018C               	clrf	12	;volatile
 11684                           
 11685                           ;mcc_generated_files/system/src/pins.c: 65:     WPUB = 0x0;
 11686     0BA6  018D               	clrf	13	;volatile
 11687                           
 11688                           ;mcc_generated_files/system/src/pins.c: 66:     WPUC = 0x0;
 11689     0BA7  018E               	clrf	14	;volatile
 11690                           
 11691                           ;mcc_generated_files/system/src/pins.c: 72:     ODCONA = 0x0;
 11692     0BA8  0025               	movlb	5	; select bank5
 11693     0BA9  018C               	clrf	12	;volatile
 11694                           
 11695                           ;mcc_generated_files/system/src/pins.c: 73:     ODCONB = 0x0;
 11696     0BAA  018D               	clrf	13	;volatile
 11697                           
 11698                           ;mcc_generated_files/system/src/pins.c: 74:     ODCONC = 0x0;
 11699     0BAB  018E               	clrf	14	;volatile
 11700     0BAC                     l5229:
 11701                           
 11702                           ;mcc_generated_files/system/src/pins.c: 78:     SLRCONA = 0x37;
 11703     0BAC  3037               	movlw	55
 11704     0BAD  0026               	movlb	6	; select bank6
 11705     0BAE  008C               	movwf	12	;volatile
 11706     0BAF                     l5231:
 11707                           
 11708                           ;mcc_generated_files/system/src/pins.c: 79:     SLRCONB = 0xF0;
 11709     0BAF  30F0               	movlw	240
 11710     0BB0  008D               	movwf	13	;volatile
 11711     0BB1                     l5233:
 11712                           
 11713                           ;mcc_generated_files/system/src/pins.c: 80:     SLRCONC = 0xFF;
 11714     0BB1  30FF               	movlw	255
 11715     0BB2  008E               	movwf	14	;volatile
 11716     0BB3                     l5235:
 11717                           
 11718                           ;mcc_generated_files/system/src/pins.c: 84:     INLVLA = 0x3F;
 11719     0BB3  303F               	movlw	63
 11720     0BB4  0027               	movlb	7	; select bank7
 11721     0BB5  008C               	movwf	12	;volatile
 11722     0BB6                     l5237:
 11723                           
 11724                           ;mcc_generated_files/system/src/pins.c: 85:     INLVLB = 0xF0;
 11725     0BB6  30F0               	movlw	240
 11726     0BB7  008D               	movwf	13	;volatile
 11727     0BB8                     l5239:
 11728                           
 11729                           ;mcc_generated_files/system/src/pins.c: 86:     INLVLC = 0xFF;
 11730     0BB8  30FF               	movlw	255
 11731     0BB9  008E               	movwf	14	;volatile
 11732                           
 11733                           ;mcc_generated_files/system/src/pins.c: 91:     SSP1DATPPS = 0x0;
 11734     0BBA  003C               	movlb	28	; select bank28
 11735     0BBB  01A1               	clrf	33	;volatile
 11736     0BBC                     l5241:
 11737                           
 11738                           ;mcc_generated_files/system/src/pins.c: 92:     RXPPS = 0xF;
 11739     0BBC  300F               	movlw	15
 11740     0BBD  00A4               	movwf	36	;volatile
 11741     0BBE                     l5243:
 11742                           
 11743                           ;mcc_generated_files/system/src/pins.c: 93:     RC5PPS = 2;
 11744     0BBE  3002               	movlw	2
 11745     0BBF  003D               	movlb	29	; select bank29
 11746     0BC0  00A5               	movwf	37	;volatile
 11747     0BC1                     l5245:
 11748                           
 11749                           ;mcc_generated_files/system/src/pins.c: 94:     RB5PPS = 20;
 11750     0BC1  3014               	movlw	20
 11751     0BC2  009D               	movwf	29	;volatile
 11752     0BC3                     l5247:
 11753                           
 11754                           ;mcc_generated_files/system/src/pins.c: 95:     SSP2CLKPPS = 0xE;
 11755     0BC3  300E               	movlw	14
 11756     0BC4  003C               	movlb	28	; select bank28
 11757     0BC5  009D               	movwf	29	;volatile
 11758     0BC6                     l5249:
 11759                           
 11760                           ;mcc_generated_files/system/src/pins.c: 96:     RB6PPS = 26;
 11761     0BC6  301A               	movlw	26
 11762     0BC7  003D               	movlb	29	; select bank29
 11763     0BC8  009E               	movwf	30	;volatile
 11764     0BC9                     l5251:
 11765                           
 11766                           ;mcc_generated_files/system/src/pins.c: 97:     SSP2DATPPS = 0xC;
 11767     0BC9  300C               	movlw	12
 11768     0BCA  003C               	movlb	28	; select bank28
 11769     0BCB  009E               	movwf	30	;volatile
 11770     0BCC                     l5253:
 11771                           
 11772                           ;mcc_generated_files/system/src/pins.c: 98:     RB4PPS = 27;
 11773     0BCC  301B               	movlw	27
 11774     0BCD  003D               	movlb	29	; select bank29
 11775     0BCE  009C               	movwf	28	;volatile
 11776                           
 11777                           ;mcc_generated_files/system/src/pins.c: 107:     IOCAP = 0x0;
 11778     0BCF  0027               	movlb	7	; select bank7
 11779     0BD0  0191               	clrf	17	;volatile
 11780                           
 11781                           ;mcc_generated_files/system/src/pins.c: 108:     IOCAN = 0x0;
 11782     0BD1  0192               	clrf	18	;volatile
 11783                           
 11784                           ;mcc_generated_files/system/src/pins.c: 109:     IOCAF = 0x0;
 11785     0BD2  0193               	clrf	19	;volatile
 11786                           
 11787                           ;mcc_generated_files/system/src/pins.c: 110:     IOCBP = 0x0;
 11788     0BD3  0194               	clrf	20	;volatile
 11789                           
 11790                           ;mcc_generated_files/system/src/pins.c: 111:     IOCBN = 0x0;
 11791     0BD4  0195               	clrf	21	;volatile
 11792                           
 11793                           ;mcc_generated_files/system/src/pins.c: 112:     IOCBF = 0x0;
 11794     0BD5  0196               	clrf	22	;volatile
 11795                           
 11796                           ;mcc_generated_files/system/src/pins.c: 113:     IOCCP = 0x0;
 11797     0BD6  0197               	clrf	23	;volatile
 11798                           
 11799                           ;mcc_generated_files/system/src/pins.c: 114:     IOCCN = 0x0;
 11800     0BD7  0198               	clrf	24	;volatile
 11801                           
 11802                           ;mcc_generated_files/system/src/pins.c: 115:     IOCCF = 0x0;
 11803     0BD8  0199               	clrf	25	;volatile
 11804     0BD9                     l603:
 11805     0BD9  0008               	return
 11806     0BDA                     __end_of_PIN_MANAGER_Initialize:
 11807                           
 11808                           	psect	text31
 11809     17E8                     __ptext31:	
 11810 ;; *************** function _INTERRUPT_Initialize *****************
 11811 ;; Defined at:
 11812 ;;		line 40 in file "mcc_generated_files/system/src/interrupt.c"
 11813 ;; Parameters:    Size  Location     Type
 11814 ;;		None
 11815 ;; Auto vars:     Size  Location     Type
 11816 ;;		None
 11817 ;; Return value:  Size  Location     Type
 11818 ;;                  1    wreg      void 
 11819 ;; Registers used:
 11820 ;;		wreg, status,2, status,0, pclath, cstack
 11821 ;; Tracked objects:
 11822 ;;		On entry : 0/0
 11823 ;;		On exit  : 0/0
 11824 ;;		Unchanged: 0/0
 11825 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 11826 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11827 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11828 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11829 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11830 ;;Total ram usage:        0 bytes
 11831 ;; Hardware stack levels used: 1
 11832 ;; Hardware stack levels required when called: 8
 11833 ;; This function calls:
 11834 ;;		_INT_SetInterruptHandler
 11835 ;; This function is called by:
 11836 ;;		_SYSTEM_Initialize
 11837 ;; This function uses a non-reentrant model
 11838 ;;
 11839                           
 11840     17E8                     _INTERRUPT_Initialize:	
 11841                           ;psect for function _INTERRUPT_Initialize
 11842                           
 11843     17E8                     l5205:	
 11844                           ;incstack = 0
 11845                           ; Regs used in _INTERRUPT_Initialize: [wreg+status,2+status,0+pclath+cstack]
 11846                           
 11847                           
 11848                           ;mcc_generated_files/system/src/interrupt.c: 44:     (PIR0bits.INTF = 0);
 11849     17E8  0020               	movlb	0	; select bank0
 11850     17E9  1010               	bcf	16,0	;volatile
 11851                           
 11852                           ;mcc_generated_files/system/src/interrupt.c: 45:     (INTCONbits.INTEDG = 1);
 11853     17EA  140B               	bsf	11,0	;volatile
 11854     17EB                     l5207:
 11855                           
 11856                           ;mcc_generated_files/system/src/interrupt.c: 47:     INT_SetInterruptHandler(INT_Default
      +                          InterruptHandler);
 11857     17EB  3000               	movlw	0
 11858     17EC  0021               	movlb	1	; select bank1
 11859     17ED  00A0               	movwf	INT_SetInterruptHandler@InterruptHandler^(0+128)
 11860     17EE  3000               	movlw	0
 11861     17EF  00A1               	movwf	(INT_SetInterruptHandler@InterruptHandler^(0+128)+1)
 11862     17F0  3197  2764  3197   	fcall	_INT_SetInterruptHandler
 11863     17F3                     l475:
 11864     17F3  0008               	return
 11865     17F4                     __end_of_INTERRUPT_Initialize:
 11866                           
 11867                           	psect	text32
 11868     1764                     __ptext32:	
 11869 ;; *************** function _INT_SetInterruptHandler *****************
 11870 ;; Defined at:
 11871 ;;		line 121 in file "mcc_generated_files/system/src/interrupt.c"
 11872 ;; Parameters:    Size  Location     Type
 11873 ;;  InterruptHan    2    0[BANK1 ] PTR FTN()void 
 11874 ;;		 -> INT_DefaultInterruptHandler(1), 
 11875 ;; Auto vars:     Size  Location     Type
 11876 ;;		None
 11877 ;; Return value:  Size  Location     Type
 11878 ;;                  1    wreg      void 
 11879 ;; Registers used:
 11880 ;;		wreg
 11881 ;; Tracked objects:
 11882 ;;		On entry : 0/0
 11883 ;;		On exit  : 0/0
 11884 ;;		Unchanged: 0/0
 11885 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 11886 ;;      Params:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0
 11887 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11888 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11889 ;;      Totals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0
 11890 ;;Total ram usage:        2 bytes
 11891 ;; Hardware stack levels used: 1
 11892 ;; Hardware stack levels required when called: 7
 11893 ;; This function calls:
 11894 ;;		Nothing
 11895 ;; This function is called by:
 11896 ;;		_INTERRUPT_Initialize
 11897 ;; This function uses a non-reentrant model
 11898 ;;
 11899                           
 11900     1764                     _INT_SetInterruptHandler:	
 11901                           ;psect for function _INT_SetInterruptHandler
 11902                           
 11903     1764                     l4705:	
 11904                           ;incstack = 0
 11905                           ; Regs used in _INT_SetInterruptHandler: [wreg]
 11906                           
 11907                           
 11908                           ;mcc_generated_files/system/src/interrupt.c: 122:     INT_InterruptHandler = InterruptHa
      +                          ndler;
 11909     1764  0021               	movlb	1	; select bank1
 11910     1765  0821               	movf	(INT_SetInterruptHandler@InterruptHandler+1)^(0+128),w
 11911     1766  00EF               	movwf	(_INT_InterruptHandler+1)^(0+128)
 11912     1767  0820               	movf	INT_SetInterruptHandler@InterruptHandler^(0+128),w
 11913     1768  00EE               	movwf	_INT_InterruptHandler^(0+128)
 11914     1769                     l506:
 11915     1769  0008               	return
 11916     176A                     __end_of_INT_SetInterruptHandler:
 11917                           
 11918                           	psect	text33
 11919     0867                     __ptext33:	
 11920 ;; *************** function _I2C2_Initialize *****************
 11921 ;; Defined at:
 11922 ;;		line 114 in file "mcc_generated_files/i2c_host/src/mssp2.c"
 11923 ;; Parameters:    Size  Location     Type
 11924 ;;		None
 11925 ;; Auto vars:     Size  Location     Type
 11926 ;;		None
 11927 ;; Return value:  Size  Location     Type
 11928 ;;                  1    wreg      void 
 11929 ;; Registers used:
 11930 ;;		status,2, status,0, pclath, cstack
 11931 ;; Tracked objects:
 11932 ;;		On entry : 0/0
 11933 ;;		On exit  : 0/0
 11934 ;;		Unchanged: 0/0
 11935 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 11936 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11937 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11938 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11939 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11940 ;;Total ram usage:        0 bytes
 11941 ;; Hardware stack levels used: 1
 11942 ;; Hardware stack levels required when called: 8
 11943 ;; This function calls:
 11944 ;;		_I2C2_InterruptsEnable
 11945 ;; This function is called by:
 11946 ;;		_SYSTEM_Initialize
 11947 ;;		_I2C_Master_Init
 11948 ;; This function uses a non-reentrant model
 11949 ;;
 11950                           
 11951     0867                     _I2C2_Initialize:	
 11952                           ;psect for function _I2C2_Initialize
 11953                           
 11954     0867                     l5161:	
 11955                           ;incstack = 0
 11956                           ; Regs used in _I2C2_Initialize: [status,2+status,0+pclath+cstack]
 11957                           
 11958                           
 11959                           ;mcc_generated_files/i2c_host/src/mssp2.c: 117:     SSP2STAT = 0x80;
 11960     0867  3080               	movlw	128
 11961     0868  0024               	movlb	4	; select bank4
 11962     0869  009C               	movwf	28	;volatile
 11963                           
 11964                           ;mcc_generated_files/i2c_host/src/mssp2.c: 119:     SSP2CON1 = 0x8;
 11965     086A  3008               	movlw	8
 11966     086B  009D               	movwf	29	;volatile
 11967     086C                     l5163:
 11968                           
 11969                           ;mcc_generated_files/i2c_host/src/mssp2.c: 121:     SSP2CON2 = 0x0;
 11970     086C  019E               	clrf	30	;volatile
 11971                           
 11972                           ;mcc_generated_files/i2c_host/src/mssp2.c: 123:     SSP2CON3 = 0x0;
 11973     086D  019F               	clrf	31	;volatile
 11974     086E                     l5165:
 11975                           
 11976                           ;mcc_generated_files/i2c_host/src/mssp2.c: 125:     SSP2ADD = 0x4F;
 11977     086E  304F               	movlw	79
 11978     086F  009A               	movwf	26	;volatile
 11979     0870                     l5167:
 11980                           
 11981                           ;mcc_generated_files/i2c_host/src/mssp2.c: 126:     I2C2_InterruptsEnable();
 11982     0870  3197  2738  3188   	fcall	_I2C2_InterruptsEnable
 11983     0873                     l5169:
 11984                           
 11985                           ;mcc_generated_files/i2c_host/src/mssp2.c: 127:     SSP2CON1bits.SSPEN = 1;
 11986     0873  0024               	movlb	4	; select bank4
 11987     0874  169D               	bsf	29,5	;volatile
 11988     0875                     l171:
 11989     0875  0008               	return
 11990     0876                     __end_of_I2C2_Initialize:
 11991                           
 11992                           	psect	text34
 11993     1738                     __ptext34:	
 11994 ;; *************** function _I2C2_InterruptsEnable *****************
 11995 ;; Defined at:
 11996 ;;		line 474 in file "mcc_generated_files/i2c_host/src/mssp2.c"
 11997 ;; Parameters:    Size  Location     Type
 11998 ;;		None
 11999 ;; Auto vars:     Size  Location     Type
 12000 ;;		None
 12001 ;; Return value:  Size  Location     Type
 12002 ;;                  1    wreg      void 
 12003 ;; Registers used:
 12004 ;;		None
 12005 ;; Tracked objects:
 12006 ;;		On entry : 0/0
 12007 ;;		On exit  : 0/0
 12008 ;;		Unchanged: 0/0
 12009 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 12010 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12011 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12012 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12013 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12014 ;;Total ram usage:        0 bytes
 12015 ;; Hardware stack levels used: 1
 12016 ;; Hardware stack levels required when called: 7
 12017 ;; This function calls:
 12018 ;;		Nothing
 12019 ;; This function is called by:
 12020 ;;		_I2C2_Initialize
 12021 ;; This function uses a non-reentrant model
 12022 ;;
 12023                           
 12024     1738                     _I2C2_InterruptsEnable:	
 12025                           ;psect for function _I2C2_InterruptsEnable
 12026                           
 12027     1738                     l4597:	
 12028                           ;incstack = 0
 12029                           ; Regs used in _I2C2_InterruptsEnable: []
 12030                           
 12031                           
 12032                           ;mcc_generated_files/i2c_host/src/mssp2.c: 476:     PIE2bits.SSP2IE = 1;
 12033     1738  0021               	movlb	1	; select bank1
 12034     1739  1592               	bsf	18,3	;volatile
 12035                           
 12036                           ;mcc_generated_files/i2c_host/src/mssp2.c: 477:     PIE2bits.BCL2IE = 1;
 12037     173A  1512               	bsf	18,2	;volatile
 12038     173B                     l304:
 12039     173B  0008               	return
 12040     173C                     __end_of_I2C2_InterruptsEnable:
 12041                           
 12042                           	psect	text35
 12043     0AE6                     __ptext35:	
 12044 ;; *************** function _EUSART_Initialize *****************
 12045 ;; Defined at:
 12046 ;;		line 131 in file "mcc_generated_files/uart/src/eusart.c"
 12047 ;; Parameters:    Size  Location     Type
 12048 ;;		None
 12049 ;; Auto vars:     Size  Location     Type
 12050 ;;		None
 12051 ;; Return value:  Size  Location     Type
 12052 ;;                  1    wreg      void 
 12053 ;; Registers used:
 12054 ;;		wreg, status,2, status,0, pclath, cstack
 12055 ;; Tracked objects:
 12056 ;;		On entry : 0/0
 12057 ;;		On exit  : 0/0
 12058 ;;		Unchanged: 0/0
 12059 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 12060 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12061 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12062 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12063 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12064 ;;Total ram usage:        0 bytes
 12065 ;; Hardware stack levels used: 1
 12066 ;; Hardware stack levels required when called: 8
 12067 ;; This function calls:
 12068 ;;		_EUSART_FramingErrorCallbackRegister
 12069 ;;		_EUSART_OverrunErrorCallbackRegister
 12070 ;; This function is called by:
 12071 ;;		_SYSTEM_Initialize
 12072 ;; This function uses a non-reentrant model
 12073 ;;
 12074                           
 12075     0AE6                     _EUSART_Initialize:	
 12076                           ;psect for function _EUSART_Initialize
 12077                           
 12078     0AE6                     l5289:	
 12079                           ;incstack = 0
 12080                           ; Regs used in _EUSART_Initialize: [wreg+status,2+status,0+pclath+cstack]
 12081                           
 12082                           
 12083                           ;mcc_generated_files/uart/src/eusart.c: 133:     PIE1bits.RCIE = 0;
 12084     0AE6  0021               	movlb	1	; select bank1
 12085     0AE7  1291               	bcf	17,5	;volatile
 12086     0AE8                     l5291:
 12087                           
 12088                           ;mcc_generated_files/uart/src/eusart.c: 134:      EUSART_RxInterruptHandler = EUSART_Rec
      +                          eiveISR;
 12089     0AE8  3079               	movlw	low _EUSART_ReceiveISR
 12090     0AE9  0023               	movlb	3	; select bank3
 12091     0AEA  00D4               	movwf	_EUSART_RxInterruptHandler^(0+384)
 12092     0AEB  300C               	movlw	high _EUSART_ReceiveISR
 12093     0AEC  00D5               	movwf	(_EUSART_RxInterruptHandler^(0+384)+1)
 12094     0AED                     l5293:
 12095                           
 12096                           ;mcc_generated_files/uart/src/eusart.c: 136:     PIE1bits.TXIE = 0;
 12097     0AED  0021               	movlb	1	; select bank1
 12098     0AEE  1211               	bcf	17,4	;volatile
 12099                           
 12100                           ;mcc_generated_files/uart/src/eusart.c: 137:     EUSART_TxInterruptHandler = EUSART_Tran
      +                          smitISR;
 12101     0AEF  3030               	movlw	low _EUSART_TransmitISR
 12102     0AF0  0023               	movlb	3	; select bank3
 12103     0AF1  00D6               	movwf	_EUSART_TxInterruptHandler^(0+384)
 12104     0AF2  3009               	movlw	high _EUSART_TransmitISR
 12105     0AF3  00D7               	movwf	(_EUSART_TxInterruptHandler^(0+384)+1)
 12106     0AF4                     l5295:
 12107                           
 12108                           ;mcc_generated_files/uart/src/eusart.c: 142:     BAUD1CON = 0x48;
 12109     0AF4  3048               	movlw	72
 12110     0AF5  009F               	movwf	31	;volatile
 12111     0AF6                     l5297:
 12112                           
 12113                           ;mcc_generated_files/uart/src/eusart.c: 144:     RC1STA = 0x90;
 12114     0AF6  3090               	movlw	144
 12115     0AF7  009D               	movwf	29	;volatile
 12116     0AF8                     l5299:
 12117                           
 12118                           ;mcc_generated_files/uart/src/eusart.c: 146:     TX1STA = 0x26;
 12119     0AF8  3026               	movlw	38
 12120     0AF9  009E               	movwf	30	;volatile
 12121     0AFA                     l5301:
 12122                           
 12123                           ;mcc_generated_files/uart/src/eusart.c: 148:     SP1BRGL = 0x40;
 12124     0AFA  3040               	movlw	64
 12125     0AFB  009B               	movwf	27	;volatile
 12126     0AFC                     l5303:
 12127                           
 12128                           ;mcc_generated_files/uart/src/eusart.c: 150:     SP1BRGH = 0x3;
 12129     0AFC  3003               	movlw	3
 12130     0AFD  009C               	movwf	28	;volatile
 12131     0AFE                     l5305:
 12132                           
 12133                           ;mcc_generated_files/uart/src/eusart.c: 152:     EUSART_FramingErrorCallbackRegister(EUS
      +                          ART_DefaultFramingErrorCallback);
 12134     0AFE  3000               	movlw	low _EUSART_DefaultFramingErrorCallback
 12135     0AFF  0021               	movlb	1	; select bank1
 12136     0B00  00A0               	movwf	EUSART_FramingErrorCallbackRegister@callbackHandler^(0+128)
 12137     0B01  3017               	movlw	high _EUSART_DefaultFramingErrorCallback
 12138     0B02  00A1               	movwf	(EUSART_FramingErrorCallbackRegister@callbackHandler^(0+128)+1)
 12139     0B03  3188  2049  318A   	fcall	_EUSART_FramingErrorCallbackRegister
 12140     0B06                     l5307:
 12141                           
 12142                           ;mcc_generated_files/uart/src/eusart.c: 153:     EUSART_OverrunErrorCallbackRegister(EUS
      +                          ART_DefaultOverrunErrorCallback);
 12143     0B06  3014               	movlw	low _EUSART_DefaultOverrunErrorCallback
 12144     0B07  0021               	movlb	1	; select bank1
 12145     0B08  00A0               	movwf	EUSART_OverrunErrorCallbackRegister@callbackHandler^(0+128)
 12146     0B09  3017               	movlw	high _EUSART_DefaultOverrunErrorCallback
 12147     0B0A  00A1               	movwf	(EUSART_OverrunErrorCallbackRegister@callbackHandler^(0+128)+1)
 12148     0B0B  3188  2058  318A   	fcall	_EUSART_OverrunErrorCallbackRegister
 12149     0B0E                     l5309:
 12150                           
 12151                           ;mcc_generated_files/uart/src/eusart.c: 154:     eusartRxLastError.status = 0;
 12152     0B0E  0022               	movlb	2	; select bank2
 12153     0B0F  01DA               	clrf	_eusartRxLastError^(0+256)	;volatile
 12154     0B10  01DB               	clrf	(_eusartRxLastError+1)^(0+256)	;volatile
 12155     0B11                     l5311:
 12156                           
 12157                           ;mcc_generated_files/uart/src/eusart.c: 156:     eusartTxHead = 0;
 12158     0B11  0020               	movlb	0	; select bank0
 12159     0B12  01ED               	clrf	_eusartTxHead	;volatile
 12160     0B13                     l5313:
 12161                           
 12162                           ;mcc_generated_files/uart/src/eusart.c: 157:     eusartTxTail = 0;
 12163     0B13  01EC               	clrf	_eusartTxTail	;volatile
 12164     0B14                     l5315:
 12165                           
 12166                           ;mcc_generated_files/uart/src/eusart.c: 158:     eusartTxBufferRemaining = sizeof(eusart
      +                          TxBuffer);
 12167     0B14  3008               	movlw	8
 12168     0B15  00EB               	movwf	_eusartTxBufferRemaining	;volatile
 12169     0B16                     l5317:
 12170                           
 12171                           ;mcc_generated_files/uart/src/eusart.c: 160:     eusartRxHead = 0;
 12172     0B16  01EA               	clrf	_eusartRxHead	;volatile
 12173     0B17                     l5319:
 12174                           
 12175                           ;mcc_generated_files/uart/src/eusart.c: 161:     eusartRxTail = 0;
 12176     0B17  01E9               	clrf	_eusartRxTail	;volatile
 12177     0B18                     l5321:
 12178                           
 12179                           ;mcc_generated_files/uart/src/eusart.c: 162:     eusartRxCount = 0;
 12180     0B18  01E8               	clrf	_eusartRxCount	;volatile
 12181     0B19                     l5323:
 12182                           
 12183                           ;mcc_generated_files/uart/src/eusart.c: 164:     PIE1bits.RCIE = 1;
 12184     0B19  0021               	movlb	1	; select bank1
 12185     0B1A  1691               	bsf	17,5	;volatile
 12186     0B1B                     l908:
 12187     0B1B  0008               	return
 12188     0B1C                     __end_of_EUSART_Initialize:
 12189                           
 12190                           	psect	text36
 12191     0858                     __ptext36:	
 12192 ;; *************** function _EUSART_OverrunErrorCallbackRegister *****************
 12193 ;; Defined at:
 12194 ;;		line 438 in file "mcc_generated_files/uart/src/eusart.c"
 12195 ;; Parameters:    Size  Location     Type
 12196 ;;  callbackHand    2    0[BANK1 ] PTR FTN()void 
 12197 ;;		 -> EUSART_DefaultOverrunErrorCallback(1), 
 12198 ;; Auto vars:     Size  Location     Type
 12199 ;;		None
 12200 ;; Return value:  Size  Location     Type
 12201 ;;                  1    wreg      void 
 12202 ;; Registers used:
 12203 ;;		wreg, status,2, status,0
 12204 ;; Tracked objects:
 12205 ;;		On entry : 0/0
 12206 ;;		On exit  : 0/0
 12207 ;;		Unchanged: 0/0
 12208 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 12209 ;;      Params:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0
 12210 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12211 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12212 ;;      Totals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0
 12213 ;;Total ram usage:        2 bytes
 12214 ;; Hardware stack levels used: 1
 12215 ;; Hardware stack levels required when called: 7
 12216 ;; This function calls:
 12217 ;;		Nothing
 12218 ;; This function is called by:
 12219 ;;		_EUSART_Initialize
 12220 ;; This function uses a non-reentrant model
 12221 ;;
 12222                           
 12223     0858                     _EUSART_OverrunErrorCallbackRegister:	
 12224                           ;psect for function _EUSART_OverrunErrorCallbackRegister
 12225                           
 12226     0858                     l4711:	
 12227                           ;incstack = 0
 12228                           ; Regs used in _EUSART_OverrunErrorCallbackRegister: [wreg+status,2+status,0]
 12229                           
 12230                           
 12231                           ;mcc_generated_files/uart/src/eusart.c: 438: void EUSART_OverrunErrorCallbackRegister(vo
      +                          id (* callbackHandler)(void));mcc_generated_files/uart/src/eusart.c: 439: {;mcc_generate
      +                          d_files/uart/src/eusart.c: 440:     if(((void*)0) != callbackHandler)
 12232     0858  0021               	movlb	1	; select bank1
 12233     0859  0820               	movf	EUSART_OverrunErrorCallbackRegister@callbackHandler^(0+128),w
 12234     085A  0421               	iorwf	(EUSART_OverrunErrorCallbackRegister@callbackHandler+1)^(0+128),w
 12235     085B  1903               	btfsc	3,2
 12236     085C  285E               	goto	u3631
 12237     085D  285F               	goto	u3630
 12238     085E                     u3631:
 12239     085E  2866               	goto	l1026
 12240     085F                     u3630:
 12241     085F                     l4713:
 12242                           
 12243                           ;mcc_generated_files/uart/src/eusart.c: 441:     {;mcc_generated_files/uart/src/eusart.c
      +                          : 442:         EUSART_OverrunErrorHandler = callbackHandler;
 12244     085F  0821               	movf	(EUSART_OverrunErrorCallbackRegister@callbackHandler+1)^(0+128),w
 12245     0860  0022               	movlb	2	; select bank2
 12246     0861  00D3               	movwf	(_EUSART_OverrunErrorHandler+1)^(0+256)
 12247     0862  0021               	movlb	1	; select bank1
 12248     0863  0820               	movf	EUSART_OverrunErrorCallbackRegister@callbackHandler^(0+128),w
 12249     0864  0022               	movlb	2	; select bank2
 12250     0865  00D2               	movwf	_EUSART_OverrunErrorHandler^(0+256)
 12251     0866                     l1026:
 12252     0866  0008               	return
 12253     0867                     __end_of_EUSART_OverrunErrorCallbackRegister:
 12254                           
 12255                           	psect	text37
 12256     0849                     __ptext37:	
 12257 ;; *************** function _EUSART_FramingErrorCallbackRegister *****************
 12258 ;; Defined at:
 12259 ;;		line 430 in file "mcc_generated_files/uart/src/eusart.c"
 12260 ;; Parameters:    Size  Location     Type
 12261 ;;  callbackHand    2    0[BANK1 ] PTR FTN()void 
 12262 ;;		 -> EUSART_DefaultFramingErrorCallback(1), 
 12263 ;; Auto vars:     Size  Location     Type
 12264 ;;		None
 12265 ;; Return value:  Size  Location     Type
 12266 ;;                  1    wreg      void 
 12267 ;; Registers used:
 12268 ;;		wreg, status,2, status,0
 12269 ;; Tracked objects:
 12270 ;;		On entry : 0/0
 12271 ;;		On exit  : 0/0
 12272 ;;		Unchanged: 0/0
 12273 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 12274 ;;      Params:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0
 12275 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12276 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12277 ;;      Totals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0
 12278 ;;Total ram usage:        2 bytes
 12279 ;; Hardware stack levels used: 1
 12280 ;; Hardware stack levels required when called: 7
 12281 ;; This function calls:
 12282 ;;		Nothing
 12283 ;; This function is called by:
 12284 ;;		_EUSART_Initialize
 12285 ;; This function uses a non-reentrant model
 12286 ;;
 12287                           
 12288     0849                     _EUSART_FramingErrorCallbackRegister:	
 12289                           ;psect for function _EUSART_FramingErrorCallbackRegister
 12290                           
 12291     0849                     l4707:	
 12292                           ;incstack = 0
 12293                           ; Regs used in _EUSART_FramingErrorCallbackRegister: [wreg+status,2+status,0]
 12294                           
 12295                           
 12296                           ;mcc_generated_files/uart/src/eusart.c: 430: void EUSART_FramingErrorCallbackRegister(vo
      +                          id (* callbackHandler)(void));mcc_generated_files/uart/src/eusart.c: 431: {;mcc_generate
      +                          d_files/uart/src/eusart.c: 432:     if(((void*)0) != callbackHandler)
 12297     0849  0021               	movlb	1	; select bank1
 12298     084A  0820               	movf	EUSART_FramingErrorCallbackRegister@callbackHandler^(0+128),w
 12299     084B  0421               	iorwf	(EUSART_FramingErrorCallbackRegister@callbackHandler+1)^(0+128),w
 12300     084C  1903               	btfsc	3,2
 12301     084D  284F               	goto	u3621
 12302     084E  2850               	goto	u3620
 12303     084F                     u3621:
 12304     084F  2857               	goto	l1022
 12305     0850                     u3620:
 12306     0850                     l4709:
 12307                           
 12308                           ;mcc_generated_files/uart/src/eusart.c: 433:     {;mcc_generated_files/uart/src/eusart.c
      +                          : 434:         EUSART_FramingErrorHandler = callbackHandler;
 12309     0850  0821               	movf	(EUSART_FramingErrorCallbackRegister@callbackHandler+1)^(0+128),w
 12310     0851  0022               	movlb	2	; select bank2
 12311     0852  00D5               	movwf	(_EUSART_FramingErrorHandler+1)^(0+256)
 12312     0853  0021               	movlb	1	; select bank1
 12313     0854  0820               	movf	EUSART_FramingErrorCallbackRegister@callbackHandler^(0+128),w
 12314     0855  0022               	movlb	2	; select bank2
 12315     0856  00D4               	movwf	_EUSART_FramingErrorHandler^(0+256)
 12316     0857                     l1022:
 12317     0857  0008               	return
 12318     0858                     __end_of_EUSART_FramingErrorCallbackRegister:
 12319                           
 12320                           	psect	text38
 12321     17A4                     __ptext38:	
 12322 ;; *************** function _CLOCK_Initialize *****************
 12323 ;; Defined at:
 12324 ;;		line 39 in file "mcc_generated_files/system/src/clock.c"
 12325 ;; Parameters:    Size  Location     Type
 12326 ;;		None
 12327 ;; Auto vars:     Size  Location     Type
 12328 ;;		None
 12329 ;; Return value:  Size  Location     Type
 12330 ;;                  1    wreg      void 
 12331 ;; Registers used:
 12332 ;;		status,2
 12333 ;; Tracked objects:
 12334 ;;		On entry : 0/0
 12335 ;;		On exit  : 0/0
 12336 ;;		Unchanged: 0/0
 12337 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 12338 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12339 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12340 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12341 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12342 ;;Total ram usage:        0 bytes
 12343 ;; Hardware stack levels used: 1
 12344 ;; Hardware stack levels required when called: 7
 12345 ;; This function calls:
 12346 ;;		Nothing
 12347 ;; This function is called by:
 12348 ;;		_SYSTEM_Initialize
 12349 ;; This function uses a non-reentrant model
 12350 ;;
 12351                           
 12352     17A4                     _CLOCK_Initialize:	
 12353                           ;psect for function _CLOCK_Initialize
 12354                           
 12355     17A4                     l5209:	
 12356                           ;incstack = 0
 12357                           ; Regs used in _CLOCK_Initialize: [status,2]
 12358                           
 12359                           
 12360                           ;mcc_generated_files/system/src/clock.c: 42:     OSCCON1 = (0 << 0x0)
 12361     17A4  0032               	movlb	18	; select bank18
 12362     17A5  0199               	clrf	25	;volatile
 12363                           
 12364                           ;mcc_generated_files/system/src/clock.c: 44:     OSCCON3 = (0 << 0x6)
 12365     17A6  019B               	clrf	27	;volatile
 12366                           
 12367                           ;mcc_generated_files/system/src/clock.c: 46:     OSCEN = (0 << 0x7)
 12368     17A7  019D               	clrf	29	;volatile
 12369     17A8                     l5211:
 12370                           
 12371                           ;mcc_generated_files/system/src/clock.c: 51:     OSCFRQ = (6 << 0x0);
 12372     17A8  3006               	movlw	6
 12373     17A9  009F               	movwf	31	;volatile
 12374                           
 12375                           ;mcc_generated_files/system/src/clock.c: 52:     OSCSTAT1 =
 12376     17AA  019E               	clrf	30	;volatile
 12377     17AB  019C               	clrf	28	;volatile
 12378     17AC                     l524:
 12379     17AC  0008               	return
 12380     17AD                     __end_of_CLOCK_Initialize:
 12381                           
 12382                           	psect	text39
 12383     0904                     __ptext39:	
 12384 ;; *************** function _ADC_Initialize *****************
 12385 ;; Defined at:
 12386 ;;		line 55 in file "mcc_generated_files/adc/src/adc.c"
 12387 ;; Parameters:    Size  Location     Type
 12388 ;;		None
 12389 ;; Auto vars:     Size  Location     Type
 12390 ;;		None
 12391 ;; Return value:  Size  Location     Type
 12392 ;;                  1    wreg      void 
 12393 ;; Registers used:
 12394 ;;		wreg, status,2, status,0, pclath, cstack
 12395 ;; Tracked objects:
 12396 ;;		On entry : 0/0
 12397 ;;		On exit  : 0/0
 12398 ;;		Unchanged: 0/0
 12399 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 12400 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12401 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12402 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12403 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12404 ;;Total ram usage:        0 bytes
 12405 ;; Hardware stack levels used: 1
 12406 ;; Hardware stack levels required when called: 8
 12407 ;; This function calls:
 12408 ;;		_ADC_SetInterruptHandler
 12409 ;; This function is called by:
 12410 ;;		_SYSTEM_Initialize
 12411 ;; This function uses a non-reentrant model
 12412 ;;
 12413                           
 12414     0904                     _ADC_Initialize:	
 12415                           ;psect for function _ADC_Initialize
 12416                           
 12417     0904                     l5145:	
 12418                           ;incstack = 0
 12419                           ; Regs used in _ADC_Initialize: [wreg+status,2+status,0+pclath+cstack]
 12420                           
 12421                           
 12422                           ;mcc_generated_files/adc/src/adc.c: 58:     ADCON1 = 0xA0;
 12423     0904  30A0               	movlw	160
 12424     0905  0021               	movlb	1	; select bank1
 12425     0906  009E               	movwf	30	;volatile
 12426     0907                     l5147:
 12427                           
 12428                           ;mcc_generated_files/adc/src/adc.c: 61:     ADRESL = 0x0;
 12429     0907  019B               	clrf	27	;volatile
 12430                           
 12431                           ;mcc_generated_files/adc/src/adc.c: 64:     ADRESH = 0x0;
 12432     0908  019C               	clrf	28	;volatile
 12433     0909                     l5149:
 12434                           
 12435                           ;mcc_generated_files/adc/src/adc.c: 67:     ADACT = 0x5;
 12436     0909  3005               	movlw	5
 12437     090A  009F               	movwf	31	;volatile
 12438     090B                     l5151:
 12439                           
 12440                           ;mcc_generated_files/adc/src/adc.c: 70:     ADCON0 = 0x1;
 12441     090B  3001               	movlw	1
 12442     090C  009D               	movwf	29	;volatile
 12443     090D                     l5153:
 12444                           
 12445                           ;mcc_generated_files/adc/src/adc.c: 73:     PIR1bits.ADIF = 0;
 12446     090D  0020               	movlb	0	; select bank0
 12447     090E  1311               	bcf	17,6	;volatile
 12448     090F                     l5155:
 12449                           
 12450                           ;mcc_generated_files/adc/src/adc.c: 76:     ADC_SetInterruptHandler(ADC_DefaultInterrupt
      +                          Handler);
 12451     090F  30FF               	movlw	low _ADC_DefaultInterruptHandler
 12452     0910  0021               	movlb	1	; select bank1
 12453     0911  00A0               	movwf	ADC_SetInterruptHandler@InterruptHandler^(0+128)
 12454     0912  3016               	movlw	high _ADC_DefaultInterruptHandler
 12455     0913  00A1               	movwf	(ADC_SetInterruptHandler@InterruptHandler^(0+128)+1)
 12456     0914  3197  279B  3189   	fcall	_ADC_SetInterruptHandler
 12457     0917                     l5157:
 12458                           
 12459                           ;mcc_generated_files/adc/src/adc.c: 79:     PIE1bits.ADIE = 1;
 12460     0917  0021               	movlb	1	; select bank1
 12461     0918  1711               	bsf	17,6	;volatile
 12462     0919                     l27:
 12463     0919  0008               	return
 12464     091A                     __end_of_ADC_Initialize:
 12465                           
 12466                           	psect	text40
 12467     179B                     __ptext40:	
 12468 ;; *************** function _ADC_SetInterruptHandler *****************
 12469 ;; Defined at:
 12470 ;;		line 145 in file "mcc_generated_files/adc/src/adc.c"
 12471 ;; Parameters:    Size  Location     Type
 12472 ;;  InterruptHan    2    0[BANK1 ] PTR FTN()void 
 12473 ;;		 -> adcConversionDoneHandler(1), ADC_DefaultInterruptHandler(1), 
 12474 ;; Auto vars:     Size  Location     Type
 12475 ;;		None
 12476 ;; Return value:  Size  Location     Type
 12477 ;;                  1    wreg      void 
 12478 ;; Registers used:
 12479 ;;		wreg
 12480 ;; Tracked objects:
 12481 ;;		On entry : 0/0
 12482 ;;		On exit  : 0/0
 12483 ;;		Unchanged: 0/0
 12484 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 12485 ;;      Params:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0
 12486 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12487 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12488 ;;      Totals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0
 12489 ;;Total ram usage:        2 bytes
 12490 ;; Hardware stack levels used: 1
 12491 ;; Hardware stack levels required when called: 7
 12492 ;; This function calls:
 12493 ;;		Nothing
 12494 ;; This function is called by:
 12495 ;;		_ADC_Initialize
 12496 ;;		_initAdcMultiplexer
 12497 ;; This function uses a non-reentrant model
 12498 ;;
 12499                           
 12500     179B                     _ADC_SetInterruptHandler:	
 12501                           ;psect for function _ADC_SetInterruptHandler
 12502                           
 12503     179B                     l4591:	
 12504                           ;incstack = 0
 12505                           ; Regs used in _ADC_SetInterruptHandler: [wreg]
 12506                           
 12507                           
 12508                           ;mcc_generated_files/adc/src/adc.c: 145: void ADC_SetInterruptHandler(void (* InterruptH
      +                          andler)(void));mcc_generated_files/adc/src/adc.c: 146: {;mcc_generated_files/adc/src/adc
      +                          .c: 147:     ADC_InterruptHandler = InterruptHandler;
 12509     179B  0021               	movlb	1	; select bank1
 12510     179C  0821               	movf	(ADC_SetInterruptHandler@InterruptHandler+1)^(0+128),w
 12511     179D  0022               	movlb	2	; select bank2
 12512     179E  00EF               	movwf	(_ADC_InterruptHandler+1)^(0+256)
 12513     179F  0021               	movlb	1	; select bank1
 12514     17A0  0820               	movf	ADC_SetInterruptHandler@InterruptHandler^(0+128),w
 12515     17A1  0022               	movlb	2	; select bank2
 12516     17A2  00EE               	movwf	_ADC_InterruptHandler^(0+256)
 12517     17A3                     l55:
 12518     17A3  0008               	return
 12519     17A4                     __end_of_ADC_SetInterruptHandler:
 12520                           
 12521                           	psect	intentry
 12522     0004                     __pintentry:	
 12523 ;; *************** function _INTERRUPT_InterruptManager *****************
 12524 ;; Defined at:
 12525 ;;		line 59 in file "mcc_generated_files/system/src/interrupt.c"
 12526 ;; Parameters:    Size  Location     Type
 12527 ;;		None
 12528 ;; Auto vars:     Size  Location     Type
 12529 ;;		None
 12530 ;; Return value:  Size  Location     Type
 12531 ;;                  1    wreg      void 
 12532 ;; Registers used:
 12533 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 12534 ;; Tracked objects:
 12535 ;;		On entry : 0/0
 12536 ;;		On exit  : 0/0
 12537 ;;		Unchanged: 0/0
 12538 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 12539 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12540 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12541 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12542 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12543 ;;Total ram usage:        0 bytes
 12544 ;; Hardware stack levels used: 1
 12545 ;; Hardware stack levels required when called: 6
 12546 ;; This function calls:
 12547 ;;		NULL
 12548 ;;		_ADC_ISR
 12549 ;;		_EUSART_ReceiveISR
 12550 ;;		_EUSART_TransmitISR
 12551 ;;		_I2C2_ERROR_ISR
 12552 ;;		_I2C2_ISR
 12553 ;;		_TMR2_ISR
 12554 ;;		_TMR4_ISR
 12555 ;; This function is called by:
 12556 ;;		Interrupt level 1
 12557 ;; This function uses a non-reentrant model
 12558 ;;
 12559                           
 12560     0004                     _INTERRUPT_InterruptManager:
 12561                           
 12562                           ;incstack = 0
 12563 ;; hardware stack exceeded
 12564     0004  147E               	bsf	int$flags,0	;set compiler interrupt flag (level 1)
 12565                           
 12566                           ; Regs used in _INTERRUPT_InterruptManager: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 12567     0005  3180               	pagesel	$
 12568     0006                     i1l5777:
 12569                           
 12570                           ;mcc_generated_files/system/src/interrupt.c: 62:     if(INTCONbits.PEIE == 1)
 12571     0006  1F0B               	btfss	11,6	;volatile
 12572     0007  2809               	goto	u510_21
 12573     0008  280A               	goto	u510_20
 12574     0009                     u510_21:
 12575     0009  2872               	goto	i1l496
 12576     000A                     u510_20:
 12577     000A                     i1l5779:
 12578                           
 12579                           ;mcc_generated_files/system/src/interrupt.c: 63:     {;mcc_generated_files/system/src/in
      +                          terrupt.c: 64:         if(PIE1bits.TXIE == 1 && PIR1bits.TXIF == 1)
 12580     000A  0021               	movlb	1	; select bank1
 12581     000B  1E11               	btfss	17,4	;volatile
 12582     000C  280E               	goto	u511_21
 12583     000D  280F               	goto	u511_20
 12584     000E                     u511_21:
 12585     000E  281B               	goto	i1l481
 12586     000F                     u511_20:
 12587     000F                     i1l5781:
 12588     000F  0020               	movlb	0	; select bank0
 12589     0010  1E11               	btfss	17,4	;volatile
 12590     0011  2813               	goto	u512_21
 12591     0012  2814               	goto	u512_20
 12592     0013                     u512_21:
 12593     0013  281B               	goto	i1l481
 12594     0014                     u512_20:
 12595     0014                     i1l5783:
 12596                           
 12597                           ;mcc_generated_files/system/src/interrupt.c: 65:         {;mcc_generated_files/system/sr
      +                          c/interrupt.c: 66:             EUSART_TxInterruptHandler();
 12598     0014  0023               	movlb	3	; select bank3
 12599     0015  0857               	movf	(_EUSART_TxInterruptHandler+1)^(0+384),w
 12600     0016  008A               	movwf	10
 12601     0017  0856               	movf	_EUSART_TxInterruptHandler^(0+384),w
 12602     0018  000A               	callw
 12603     0019  3180               	pagesel	$
 12604                           
 12605                           ;mcc_generated_files/system/src/interrupt.c: 67:         }
 12606     001A  2872               	goto	i1l496
 12607     001B                     i1l481:	
 12608                           ;mcc_generated_files/system/src/interrupt.c: 68:         else if(PIE1bits.RCIE == 1 && P
      +                          IR1bits.RCIF == 1)
 12609                           
 12610     001B  0021               	movlb	1	; select bank1
 12611     001C  1E91               	btfss	17,5	;volatile
 12612     001D  281F               	goto	u513_21
 12613     001E  2820               	goto	u513_20
 12614     001F                     u513_21:
 12615     001F  282C               	goto	i1l483
 12616     0020                     u513_20:
 12617     0020                     i1l5785:
 12618     0020  0020               	movlb	0	; select bank0
 12619     0021  1E91               	btfss	17,5	;volatile
 12620     0022  2824               	goto	u514_21
 12621     0023  2825               	goto	u514_20
 12622     0024                     u514_21:
 12623     0024  282C               	goto	i1l483
 12624     0025                     u514_20:
 12625     0025                     i1l5787:
 12626                           
 12627                           ;mcc_generated_files/system/src/interrupt.c: 69:         {;mcc_generated_files/system/sr
      +                          c/interrupt.c: 70:             EUSART_RxInterruptHandler();
 12628     0025  0023               	movlb	3	; select bank3
 12629     0026  0855               	movf	(_EUSART_RxInterruptHandler+1)^(0+384),w
 12630     0027  008A               	movwf	10
 12631     0028  0854               	movf	_EUSART_RxInterruptHandler^(0+384),w
 12632     0029  000A               	callw
 12633     002A  3180               	pagesel	$
 12634                           
 12635                           ;mcc_generated_files/system/src/interrupt.c: 71:         }
 12636     002B  2872               	goto	i1l496
 12637     002C                     i1l483:	
 12638                           ;mcc_generated_files/system/src/interrupt.c: 72:         else if(PIE2bits.TMR4IE == 1 &&
      +                           PIR2bits.TMR4IF == 1)
 12639                           
 12640     002C  0021               	movlb	1	; select bank1
 12641     002D  1C92               	btfss	18,1	;volatile
 12642     002E  2830               	goto	u515_21
 12643     002F  2831               	goto	u515_20
 12644     0030                     u515_21:
 12645     0030  283A               	goto	i1l485
 12646     0031                     u515_20:
 12647     0031                     i1l5789:
 12648     0031  0020               	movlb	0	; select bank0
 12649     0032  1C92               	btfss	18,1	;volatile
 12650     0033  2835               	goto	u516_21
 12651     0034  2836               	goto	u516_20
 12652     0035                     u516_21:
 12653     0035  283A               	goto	i1l485
 12654     0036                     u516_20:
 12655     0036                     i1l5791:
 12656                           
 12657                           ;mcc_generated_files/system/src/interrupt.c: 73:         {;mcc_generated_files/system/sr
      +                          c/interrupt.c: 74:             TMR4_ISR();
 12658     0036  3188  203A  3180   	fcall	_TMR4_ISR
 12659                           
 12660                           ;mcc_generated_files/system/src/interrupt.c: 75:         }
 12661     0039  2872               	goto	i1l496
 12662     003A                     i1l485:	
 12663                           ;mcc_generated_files/system/src/interrupt.c: 76:         else if(PIE2bits.BCL2IE == 1 &&
      +                           PIR2bits.BCL2IF == 1)
 12664                           
 12665     003A  0021               	movlb	1	; select bank1
 12666     003B  1D12               	btfss	18,2	;volatile
 12667     003C  283E               	goto	u517_21
 12668     003D  283F               	goto	u517_20
 12669     003E                     u517_21:
 12670     003E  2848               	goto	i1l487
 12671     003F                     u517_20:
 12672     003F                     i1l5793:
 12673     003F  0020               	movlb	0	; select bank0
 12674     0040  1D12               	btfss	18,2	;volatile
 12675     0041  2843               	goto	u518_21
 12676     0042  2844               	goto	u518_20
 12677     0043                     u518_21:
 12678     0043  2848               	goto	i1l487
 12679     0044                     u518_20:
 12680     0044                     i1l5795:
 12681                           
 12682                           ;mcc_generated_files/system/src/interrupt.c: 77:         {;mcc_generated_files/system/sr
      +                          c/interrupt.c: 78:             I2C2_ERROR_ISR();
 12683     0044  3197  2730  3180   	fcall	_I2C2_ERROR_ISR
 12684                           
 12685                           ;mcc_generated_files/system/src/interrupt.c: 79:         }
 12686     0047  2872               	goto	i1l496
 12687     0048                     i1l487:	
 12688                           ;mcc_generated_files/system/src/interrupt.c: 80:         else if(PIE2bits.SSP2IE == 1 &&
      +                           PIR2bits.SSP2IF == 1)
 12689                           
 12690     0048  0021               	movlb	1	; select bank1
 12691     0049  1D92               	btfss	18,3	;volatile
 12692     004A  284C               	goto	u519_21
 12693     004B  284D               	goto	u519_20
 12694     004C                     u519_21:
 12695     004C  2856               	goto	i1l489
 12696     004D                     u519_20:
 12697     004D                     i1l5797:
 12698     004D  0020               	movlb	0	; select bank0
 12699     004E  1D92               	btfss	18,3	;volatile
 12700     004F  2851               	goto	u520_21
 12701     0050  2852               	goto	u520_20
 12702     0051                     u520_21:
 12703     0051  2856               	goto	i1l489
 12704     0052                     u520_20:
 12705     0052                     i1l5799:
 12706                           
 12707                           ;mcc_generated_files/system/src/interrupt.c: 81:         {;mcc_generated_files/system/sr
      +                          c/interrupt.c: 82:             I2C2_ISR();
 12708     0052  3197  2734  3180   	fcall	_I2C2_ISR
 12709                           
 12710                           ;mcc_generated_files/system/src/interrupt.c: 83:         }
 12711     0055  2872               	goto	i1l496
 12712     0056                     i1l489:	
 12713                           ;mcc_generated_files/system/src/interrupt.c: 84:         else if(PIE1bits.TMR2IE == 1 &&
      +                           PIR1bits.TMR2IF == 1)
 12714                           
 12715     0056  0021               	movlb	1	; select bank1
 12716     0057  1C91               	btfss	17,1	;volatile
 12717     0058  285A               	goto	u521_21
 12718     0059  285B               	goto	u521_20
 12719     005A                     u521_21:
 12720     005A  2864               	goto	i1l491
 12721     005B                     u521_20:
 12722     005B                     i1l5801:
 12723     005B  0020               	movlb	0	; select bank0
 12724     005C  1C91               	btfss	17,1	;volatile
 12725     005D  285F               	goto	u522_21
 12726     005E  2860               	goto	u522_20
 12727     005F                     u522_21:
 12728     005F  2864               	goto	i1l491
 12729     0060                     u522_20:
 12730     0060                     i1l5803:
 12731                           
 12732                           ;mcc_generated_files/system/src/interrupt.c: 85:         {;mcc_generated_files/system/sr
      +                          c/interrupt.c: 86:             TMR2_ISR();
 12733     0060  3188  202B  3180   	fcall	_TMR2_ISR
 12734                           
 12735                           ;mcc_generated_files/system/src/interrupt.c: 87:         }
 12736     0063  2872               	goto	i1l496
 12737     0064                     i1l491:	
 12738                           ;mcc_generated_files/system/src/interrupt.c: 88:         else if(PIE1bits.ADIE == 1 && P
      +                          IR1bits.ADIF == 1)
 12739                           
 12740     0064  0021               	movlb	1	; select bank1
 12741     0065  1F11               	btfss	17,6	;volatile
 12742     0066  2868               	goto	u523_21
 12743     0067  2869               	goto	u523_20
 12744     0068                     u523_21:
 12745     0068  2872               	goto	i1l490
 12746     0069                     u523_20:
 12747     0069                     i1l5805:
 12748     0069  0020               	movlb	0	; select bank0
 12749     006A  1F11               	btfss	17,6	;volatile
 12750     006B  286D               	goto	u524_21
 12751     006C  286E               	goto	u524_20
 12752     006D                     u524_21:
 12753     006D  2872               	goto	i1l490
 12754     006E                     u524_20:
 12755     006E                     i1l5807:
 12756                           
 12757                           ;mcc_generated_files/system/src/interrupt.c: 89:         {;mcc_generated_files/system/sr
      +                          c/interrupt.c: 90:             ADC_ISR();
 12758     006E  3188  201C  3180   	fcall	_ADC_ISR
 12759                           
 12760                           ;mcc_generated_files/system/src/interrupt.c: 91:         }
 12761     0071  2872               	goto	i1l496
 12762     0072                     i1l490:
 12763     0072                     i1l496:
 12764     0072  107E               	bcf	int$flags,0	;clear compiler interrupt flag (level 1)
 12765     0073  0009               	retfie
 12766     0074                     __end_of_INTERRUPT_InterruptManager:
 12767                           
 12768                           	psect	text42
 12769     083A                     __ptext42:	
 12770 ;; *************** function _TMR4_ISR *****************
 12771 ;; Defined at:
 12772 ;;		line 114 in file "mcc_generated_files/timer/src/tmr4.c"
 12773 ;; Parameters:    Size  Location     Type
 12774 ;;		None
 12775 ;; Auto vars:     Size  Location     Type
 12776 ;;		None
 12777 ;; Return value:  Size  Location     Type
 12778 ;;                  1    wreg      void 
 12779 ;; Registers used:
 12780 ;;		wreg, status,2, status,0, pclath, cstack
 12781 ;; Tracked objects:
 12782 ;;		On entry : 0/0
 12783 ;;		On exit  : 0/0
 12784 ;;		Unchanged: 0/0
 12785 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 12786 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12787 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12788 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12789 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12790 ;;Total ram usage:        0 bytes
 12791 ;; Hardware stack levels used: 1
 12792 ;; Hardware stack levels required when called: 3
 12793 ;; This function calls:
 12794 ;;		NULL
 12795 ;;		_TMR4_DefaultPeriodMatchCallback
 12796 ;;		_controller
 12797 ;; This function is called by:
 12798 ;;		_INTERRUPT_InterruptManager
 12799 ;; This function uses a non-reentrant model
 12800 ;;
 12801                           
 12802     083A                     _TMR4_ISR:	
 12803                           ;psect for function _TMR4_ISR
 12804                           
 12805     083A                     i1l5443:	
 12806                           ;incstack = 0
 12807                           ; Regs used in _TMR4_ISR: [wreg+status,2+status,0+pclath+cstack]
 12808                           
 12809                           
 12810                           ;mcc_generated_files/timer/src/tmr4.c: 117:     if(((void*)0) != TMR4_PeriodMatchCallbac
      +                          k)
 12811     083A  0022               	movlb	2	; select bank2
 12812     083B  086A               	movf	_TMR4_PeriodMatchCallback^(0+256),w
 12813     083C  046B               	iorwf	(_TMR4_PeriodMatchCallback+1)^(0+256),w
 12814     083D  1903               	btfsc	3,2
 12815     083E  2840               	goto	u476_21
 12816     083F  2841               	goto	u476_20
 12817     0840                     u476_21:
 12818     0840  2846               	goto	i1l5447
 12819     0841                     u476_20:
 12820     0841                     i1l5445:
 12821                           
 12822                           ;mcc_generated_files/timer/src/tmr4.c: 118:     {;mcc_generated_files/timer/src/tmr4.c: 
      +                          119:         TMR4_PeriodMatchCallback();
 12823     0841  086B               	movf	(_TMR4_PeriodMatchCallback+1)^(0+256),w
 12824     0842  008A               	movwf	10
 12825     0843  086A               	movf	_TMR4_PeriodMatchCallback^(0+256),w
 12826     0844  000A               	callw
 12827     0845  3188               	pagesel	$
 12828     0846                     i1l5447:
 12829                           
 12830                           ;mcc_generated_files/timer/src/tmr4.c: 121:     PIR2bits.TMR4IF = 0;
 12831     0846  0020               	movlb	0	; select bank0
 12832     0847  1092               	bcf	18,1	;volatile
 12833     0848                     i1l743:
 12834     0848  0008               	return
 12835     0849                     __end_of_TMR4_ISR:
 12836                           
 12837                           	psect	text43
 12838     07FF                     __ptext43:	
 12839 ;; *************** function _TMR4_DefaultPeriodMatchCallback *****************
 12840 ;; Defined at:
 12841 ;;		line 129 in file "mcc_generated_files/timer/src/tmr4.c"
 12842 ;; Parameters:    Size  Location     Type
 12843 ;;		None
 12844 ;; Auto vars:     Size  Location     Type
 12845 ;;		None
 12846 ;; Return value:  Size  Location     Type
 12847 ;;                  1    wreg      void 
 12848 ;; Registers used:
 12849 ;;		None
 12850 ;; Tracked objects:
 12851 ;;		On entry : 0/0
 12852 ;;		On exit  : 0/0
 12853 ;;		Unchanged: 0/0
 12854 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 12855 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12856 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12857 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12858 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12859 ;;Total ram usage:        0 bytes
 12860 ;; Hardware stack levels used: 1
 12861 ;; This function calls:
 12862 ;;		Nothing
 12863 ;; This function is called by:
 12864 ;;		_TMR4_Initialize
 12865 ;;		_TMR4_ISR
 12866 ;; This function uses a non-reentrant model
 12867 ;;
 12868                           
 12869     07FF                     _TMR4_DefaultPeriodMatchCallback:	
 12870                           ;psect for function _TMR4_DefaultPeriodMatchCallback
 12871                           
 12872     07FF                     i1l749:	
 12873                           ;incstack = 0
 12874                           ; Regs used in _TMR4_DefaultPeriodMatchCallback: []
 12875                           
 12876     07FF  0008               	return
 12877     0800                     __end_of_TMR4_DefaultPeriodMatchCallback:
 12878                           
 12879                           	psect	text44
 12880     0662                     __ptext44:	
 12881 ;; *************** function _controller *****************
 12882 ;; Defined at:
 12883 ;;		line 13 in file "controller.c"
 12884 ;; Parameters:    Size  Location     Type
 12885 ;;		None
 12886 ;; Auto vars:     Size  Location     Type
 12887 ;;  error           2   51[BANK0 ] short 
 12888 ;;  I               2   49[BANK0 ] short 
 12889 ;;  P               2   47[BANK0 ] short 
 12890 ;; Return value:  Size  Location     Type
 12891 ;;                  1    wreg      void 
 12892 ;; Registers used:
 12893 ;;		wreg, status,2, status,0, pclath, cstack
 12894 ;; Tracked objects:
 12895 ;;		On entry : 0/0
 12896 ;;		On exit  : 0/0
 12897 ;;		Unchanged: 0/0
 12898 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 12899 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12900 ;;      Locals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12901 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12902 ;;      Totals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12903 ;;Total ram usage:        7 bytes
 12904 ;; Hardware stack levels used: 1
 12905 ;; Hardware stack levels required when called: 2
 12906 ;; This function calls:
 12907 ;;		___fladd
 12908 ;;		___flmul
 12909 ;;		___fltol
 12910 ;;		___xxtofl
 12911 ;;		_getHoogtesensor
 12912 ;;		_pwm_fan_LoadDutyValue
 12913 ;; This function is called by:
 12914 ;;		_main
 12915 ;;		_TMR4_ISR
 12916 ;; This function uses a non-reentrant model
 12917 ;;
 12918                           
 12919     0662                     _controller:	
 12920                           ;psect for function _controller
 12921                           
 12922     0662                     i1l5381:	
 12923                           ;incstack = 0
 12924                           ; Regs used in _controller: [wreg+status,2+status,0+pclath+cstack]
 12925                           
 12926                           
 12927                           ;controller.c: 14:     hoogte_bal = getHoogtesensor();
 12928     0662  3197  275E  3186   	fcall	_getHoogtesensor
 12929     0665  0871               	movf	?_getHoogtesensor+1,w
 12930     0666  0022               	movlb	2	; select bank2
 12931     0667  00CD               	movwf	(_hoogte_bal+1)^(0+256)
 12932     0668  0870               	movf	?_getHoogtesensor,w
 12933     0669  00CC               	movwf	_hoogte_bal^(0+256)
 12934     066A                     i1l5383:
 12935                           
 12936                           ;controller.c: 18:     int16_t error = setpoint - hoogte_bal;
 12937     066A  084C               	movf	_hoogte_bal^(0+256),w
 12938     066B  0266               	subwf	_setpoint^(0+256),w
 12939     066C  0020               	movlb	0	; select bank0
 12940     066D  00D3               	movwf	controller@error
 12941     066E  0022               	movlb	2	; select bank2
 12942     066F  084D               	movf	(_hoogte_bal+1)^(0+256),w
 12943     0670  3B67               	subwfb	(_setpoint+1)^(0+256),w
 12944     0671  0020               	movlb	0	; select bank0
 12945     0672  00D4               	movwf	controller@error+1
 12946     0673                     i1l5385:
 12947                           
 12948                           ;controller.c: 20:     integraal += error * 0.0005;
 12949     0673  0853               	movf	controller@error,w
 12950     0674  00F0               	movwf	___xxtofl@val
 12951     0675  0854               	movf	controller@error+1,w
 12952     0676  00F1               	movwf	___xxtofl@val+1
 12953     0677  0D89               	rlf	9,f
 12954     0678  3B89               	subwfb	9,f
 12955     0679  0989               	comf	9,f
 12956     067A  00F2               	movwf	___xxtofl@val+2
 12957     067B  00F3               	movwf	___xxtofl@val+3
 12958     067C  3001               	movlw	1
 12959     067D  318E  26A7  3186   	fcall	___xxtofl
 12960     0680  0873               	movf	?___xxtofl+3,w
 12961     0681  0020               	movlb	0	; select bank0
 12962     0682  00A7               	movwf	___flmul@a+3
 12963     0683  0872               	movf	?___xxtofl+2,w
 12964     0684  00A6               	movwf	___flmul@a+2
 12965     0685  0871               	movf	?___xxtofl+1,w
 12966     0686  00A5               	movwf	___flmul@a+1
 12967     0687  0870               	movf	?___xxtofl,w
 12968     0688  00A4               	movwf	___flmul@a
 12969     0689  303A               	movlw	58
 12970     068A  00A3               	movwf	___flmul@b+3
 12971     068B  3003               	movlw	3
 12972     068C  00A2               	movwf	___flmul@b+2
 12973     068D  3012               	movlw	18
 12974     068E  00A1               	movwf	___flmul@b+1
 12975     068F  306F               	movlw	111
 12976     0690  00A0               	movwf	___flmul@b
 12977     0691  3180  20AB  3186   	fcall	___flmul
 12978     0694  0020               	movlb	0	; select bank0
 12979     0695  0823               	movf	?___flmul+3,w
 12980     0696  00BD               	movwf	___fladd@b+3
 12981     0697  0822               	movf	?___flmul+2,w
 12982     0698  00BC               	movwf	___fladd@b+2
 12983     0699  0821               	movf	?___flmul+1,w
 12984     069A  00BB               	movwf	___fladd@b+1
 12985     069B  0820               	movf	?___flmul,w
 12986     069C  00BA               	movwf	___fladd@b
 12987     069D  0022               	movlb	2	; select bank2
 12988     069E  0847               	movf	(_integraal+3)^(0+256),w
 12989     069F  0020               	movlb	0	; select bank0
 12990     06A0  00C1               	movwf	___fladd@a+3
 12991     06A1  0022               	movlb	2	; select bank2
 12992     06A2  0846               	movf	(_integraal+2)^(0+256),w
 12993     06A3  0020               	movlb	0	; select bank0
 12994     06A4  00C0               	movwf	___fladd@a+2
 12995     06A5  0022               	movlb	2	; select bank2
 12996     06A6  0845               	movf	(_integraal+1)^(0+256),w
 12997     06A7  0020               	movlb	0	; select bank0
 12998     06A8  00BF               	movwf	___fladd@a+1
 12999     06A9  0022               	movlb	2	; select bank2
 13000     06AA  0844               	movf	_integraal^(0+256),w
 13001     06AB  0020               	movlb	0	; select bank0
 13002     06AC  00BE               	movwf	___fladd@a
 13003     06AD  3182  22E6  3186   	fcall	___fladd
 13004     06B0  0020               	movlb	0	; select bank0
 13005     06B1  083D               	movf	?___fladd+3,w
 13006     06B2  0022               	movlb	2	; select bank2
 13007     06B3  00C7               	movwf	(_integraal+3)^(0+256)
 13008     06B4  0020               	movlb	0	; select bank0
 13009     06B5  083C               	movf	?___fladd+2,w
 13010     06B6  0022               	movlb	2	; select bank2
 13011     06B7  00C6               	movwf	(_integraal+2)^(0+256)
 13012     06B8  0020               	movlb	0	; select bank0
 13013     06B9  083B               	movf	?___fladd+1,w
 13014     06BA  0022               	movlb	2	; select bank2
 13015     06BB  00C5               	movwf	(_integraal+1)^(0+256)
 13016     06BC  0020               	movlb	0	; select bank0
 13017     06BD  083A               	movf	?___fladd,w
 13018     06BE  0022               	movlb	2	; select bank2
 13019     06BF  00C4               	movwf	_integraal^(0+256)
 13020     06C0                     i1l5387:
 13021                           
 13022                           ;controller.c: 22:     int16_t P = kp * error;
 13023     06C0  0020               	movlb	0	; select bank0
 13024     06C1  0853               	movf	controller@error,w
 13025     06C2  00F0               	movwf	___xxtofl@val
 13026     06C3  0854               	movf	controller@error+1,w
 13027     06C4  00F1               	movwf	___xxtofl@val+1
 13028     06C5  0D89               	rlf	9,f
 13029     06C6  3B89               	subwfb	9,f
 13030     06C7  0989               	comf	9,f
 13031     06C8  00F2               	movwf	___xxtofl@val+2
 13032     06C9  00F3               	movwf	___xxtofl@val+3
 13033     06CA  3001               	movlw	1
 13034     06CB  318E  26A7  3186   	fcall	___xxtofl
 13035     06CE  0873               	movf	?___xxtofl+3,w
 13036     06CF  0020               	movlb	0	; select bank0
 13037     06D0  00A7               	movwf	___flmul@a+3
 13038     06D1  0872               	movf	?___xxtofl+2,w
 13039     06D2  00A6               	movwf	___flmul@a+2
 13040     06D3  0871               	movf	?___xxtofl+1,w
 13041     06D4  00A5               	movwf	___flmul@a+1
 13042     06D5  0870               	movf	?___xxtofl,w
 13043     06D6  00A4               	movwf	___flmul@a
 13044     06D7  0022               	movlb	2	; select bank2
 13045     06D8  0865               	movf	(_kp+3)^(0+256),w
 13046     06D9  0020               	movlb	0	; select bank0
 13047     06DA  00A3               	movwf	___flmul@b+3
 13048     06DB  0022               	movlb	2	; select bank2
 13049     06DC  0864               	movf	(_kp+2)^(0+256),w
 13050     06DD  0020               	movlb	0	; select bank0
 13051     06DE  00A2               	movwf	___flmul@b+2
 13052     06DF  0022               	movlb	2	; select bank2
 13053     06E0  0863               	movf	(_kp+1)^(0+256),w
 13054     06E1  0020               	movlb	0	; select bank0
 13055     06E2  00A1               	movwf	___flmul@b+1
 13056     06E3  0022               	movlb	2	; select bank2
 13057     06E4  0862               	movf	_kp^(0+256),w
 13058     06E5  0020               	movlb	0	; select bank0
 13059     06E6  00A0               	movwf	___flmul@b
 13060     06E7  3180  20AB  3186   	fcall	___flmul
 13061     06EA  0020               	movlb	0	; select bank0
 13062     06EB  0823               	movf	?___flmul+3,w
 13063     06EC  00BD               	movwf	___fltol@f1+3
 13064     06ED  0822               	movf	?___flmul+2,w
 13065     06EE  00BC               	movwf	___fltol@f1+2
 13066     06EF  0821               	movf	?___flmul+1,w
 13067     06F0  00BB               	movwf	___fltol@f1+1
 13068     06F1  0820               	movf	?___flmul,w
 13069     06F2  00BA               	movwf	___fltol@f1
 13070     06F3  318E  2638  3186   	fcall	___fltol
 13071     06F6  0020               	movlb	0	; select bank0
 13072     06F7  083B               	movf	?___fltol+1,w
 13073     06F8  00D0               	movwf	controller@P+1
 13074     06F9  083A               	movf	?___fltol,w
 13075     06FA  00CF               	movwf	controller@P
 13076     06FB                     i1l5389:
 13077                           
 13078                           ;controller.c: 23:     int16_t I = ki * integraal;
 13079     06FB  0022               	movlb	2	; select bank2
 13080     06FC  0861               	movf	(_ki+3)^(0+256),w
 13081     06FD  0020               	movlb	0	; select bank0
 13082     06FE  00A7               	movwf	___flmul@a+3
 13083     06FF  0022               	movlb	2	; select bank2
 13084     0700  0860               	movf	(_ki+2)^(0+256),w
 13085     0701  0020               	movlb	0	; select bank0
 13086     0702  00A6               	movwf	___flmul@a+2
 13087     0703  0022               	movlb	2	; select bank2
 13088     0704  085F               	movf	(_ki+1)^(0+256),w
 13089     0705  0020               	movlb	0	; select bank0
 13090     0706  00A5               	movwf	___flmul@a+1
 13091     0707  0022               	movlb	2	; select bank2
 13092     0708  085E               	movf	_ki^(0+256),w
 13093     0709  0020               	movlb	0	; select bank0
 13094     070A  00A4               	movwf	___flmul@a
 13095     070B  0022               	movlb	2	; select bank2
 13096     070C  0847               	movf	(_integraal+3)^(0+256),w
 13097     070D  0020               	movlb	0	; select bank0
 13098     070E  00A3               	movwf	___flmul@b+3
 13099     070F  0022               	movlb	2	; select bank2
 13100     0710  0846               	movf	(_integraal+2)^(0+256),w
 13101     0711  0020               	movlb	0	; select bank0
 13102     0712  00A2               	movwf	___flmul@b+2
 13103     0713  0022               	movlb	2	; select bank2
 13104     0714  0845               	movf	(_integraal+1)^(0+256),w
 13105     0715  0020               	movlb	0	; select bank0
 13106     0716  00A1               	movwf	___flmul@b+1
 13107     0717  0022               	movlb	2	; select bank2
 13108     0718  0844               	movf	_integraal^(0+256),w
 13109     0719  0020               	movlb	0	; select bank0
 13110     071A  00A0               	movwf	___flmul@b
 13111     071B  3180  20AB  3186   	fcall	___flmul
 13112     071E  0020               	movlb	0	; select bank0
 13113     071F  0823               	movf	?___flmul+3,w
 13114     0720  00BD               	movwf	___fltol@f1+3
 13115     0721  0822               	movf	?___flmul+2,w
 13116     0722  00BC               	movwf	___fltol@f1+2
 13117     0723  0821               	movf	?___flmul+1,w
 13118     0724  00BB               	movwf	___fltol@f1+1
 13119     0725  0820               	movf	?___flmul,w
 13120     0726  00BA               	movwf	___fltol@f1
 13121     0727  318E  2638  3186   	fcall	___fltol
 13122     072A  0020               	movlb	0	; select bank0
 13123     072B  083B               	movf	?___fltol+1,w
 13124     072C  00D2               	movwf	controller@I+1
 13125     072D  083A               	movf	?___fltol,w
 13126     072E  00D1               	movwf	controller@I
 13127     072F                     i1l5391:
 13128                           
 13129                           ;controller.c: 25:     dutycycle = P + I;
 13130     072F  0851               	movf	controller@I,w
 13131     0730  074F               	addwf	controller@P,w
 13132     0731  00E3               	movwf	_dutycycle
 13133     0732  0852               	movf	controller@I+1,w
 13134     0733  3D50               	addwfc	controller@P+1,w
 13135     0734  00E4               	movwf	_dutycycle+1
 13136     0735                     i1l5393:
 13137                           
 13138                           ;controller.c: 27:     if (dutycycle > 1023 && error > 0) {
 13139     0735  3004               	movlw	4
 13140     0736  0264               	subwf	_dutycycle+1,w
 13141     0737  3000               	movlw	0
 13142     0738  1903               	skipnz
 13143     0739  0263               	subwf	_dutycycle,w
 13144     073A  1C03               	skipc
 13145     073B  2F3D               	goto	u470_21
 13146     073C  2F3E               	goto	u470_20
 13147     073D                     u470_21:
 13148     073D  2F51               	goto	i1l5399
 13149     073E                     u470_20:
 13150     073E                     i1l5395:
 13151     073E  0854               	movf	controller@error+1,w
 13152     073F  3A80               	xorlw	128
 13153     0740  00CE               	movwf	??_controller
 13154     0741  3080               	movlw	128
 13155     0742  024E               	subwf	??_controller,w
 13156     0743  1D03               	skipz
 13157     0744  2F47               	goto	u471_25
 13158     0745  3001               	movlw	1
 13159     0746  0253               	subwf	controller@error,w
 13160     0747                     u471_25:
 13161     0747  1C03               	skipc
 13162     0748  2F4A               	goto	u471_21
 13163     0749  2F4B               	goto	u471_20
 13164     074A                     u471_21:
 13165     074A  2F51               	goto	i1l5399
 13166     074B                     u471_20:
 13167     074B                     i1l5397:
 13168                           
 13169                           ;controller.c: 28:         dutycycle = 1023;
 13170     074B  30FF               	movlw	255
 13171     074C  0020               	movlb	0	; select bank0
 13172     074D  00E3               	movwf	_dutycycle
 13173     074E  3003               	movlw	3
 13174     074F  00E4               	movwf	_dutycycle+1
 13175                           
 13176                           ;controller.c: 29:     } else if (dutycycle > 1023 && error < 0) {
 13177     0750  2F62               	goto	i1l5407
 13178     0751                     i1l5399:
 13179     0751  3004               	movlw	4
 13180     0752  0020               	movlb	0	; select bank0
 13181     0753  0264               	subwf	_dutycycle+1,w
 13182     0754  3000               	movlw	0
 13183     0755  1903               	skipnz
 13184     0756  0263               	subwf	_dutycycle,w
 13185     0757  1C03               	skipc
 13186     0758  2F5A               	goto	u472_21
 13187     0759  2F5B               	goto	u472_20
 13188     075A                     u472_21:
 13189     075A  2F62               	goto	i1l1194
 13190     075B                     u472_20:
 13191     075B                     i1l5401:
 13192     075B  1FD4               	btfss	controller@error+1,7
 13193     075C  2F5E               	goto	u473_21
 13194     075D  2F5F               	goto	u473_20
 13195     075E                     u473_21:
 13196     075E  2F62               	goto	i1l1194
 13197     075F                     u473_20:
 13198     075F                     i1l5403:
 13199                           
 13200                           ;controller.c: 30:         dutycycle = 0;
 13201     075F  01E3               	clrf	_dutycycle
 13202     0760  01E4               	clrf	_dutycycle+1
 13203                           
 13204                           ;controller.c: 31:     } else if (dutycycle < 0) {
 13205     0761  2F62               	goto	i1l5407
 13206     0762                     i1l1194:
 13207     0762                     i1l5407:
 13208                           
 13209                           ;controller.c: 35:     pwm_fan_LoadDutyValue(dutycycle);
 13210     0762  0864               	movf	_dutycycle+1,w
 13211     0763  00F1               	movwf	pwm_fan_LoadDutyValue@dutyValue+1
 13212     0764  0863               	movf	_dutycycle,w
 13213     0765  00F0               	movwf	pwm_fan_LoadDutyValue@dutyValue
 13214     0766  3188  20EF  3186   	fcall	_pwm_fan_LoadDutyValue
 13215     0769                     i1l1196:
 13216     0769  0008               	return
 13217     076A                     __end_of_controller:
 13218                           
 13219                           	psect	text45
 13220     08EF                     __ptext45:	
 13221 ;; *************** function _pwm_fan_LoadDutyValue *****************
 13222 ;; Defined at:
 13223 ;;		line 63 in file "mcc_generated_files/pwm/src/pwm5.c"
 13224 ;; Parameters:    Size  Location     Type
 13225 ;;  dutyValue       2    0[COMMON] unsigned short 
 13226 ;; Auto vars:     Size  Location     Type
 13227 ;;		None
 13228 ;; Return value:  Size  Location     Type
 13229 ;;                  1    wreg      void 
 13230 ;; Registers used:
 13231 ;;		wreg, status,2, status,0
 13232 ;; Tracked objects:
 13233 ;;		On entry : 0/0
 13234 ;;		On exit  : 0/0
 13235 ;;		Unchanged: 0/0
 13236 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 13237 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13238 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13239 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13240 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13241 ;;Total ram usage:        4 bytes
 13242 ;; Hardware stack levels used: 1
 13243 ;; This function calls:
 13244 ;;		Nothing
 13245 ;; This function is called by:
 13246 ;;		_controller
 13247 ;; This function uses a non-reentrant model
 13248 ;;
 13249                           
 13250     08EF                     _pwm_fan_LoadDutyValue:	
 13251                           ;psect for function _pwm_fan_LoadDutyValue
 13252                           
 13253     08EF                     i1l4697:	
 13254                           ;incstack = 0
 13255                           ; Regs used in _pwm_fan_LoadDutyValue: [wreg+status,2+status,0]
 13256                           
 13257                           
 13258                           ;mcc_generated_files/pwm/src/pwm5.c: 63:  void pwm_fan_LoadDutyValue(uint16_t dutyValue)
      +                          ;mcc_generated_files/pwm/src/pwm5.c: 64:  {;mcc_generated_files/pwm/src/pwm5.c: 66:     
      +                           PWM5DCH = (uint8_t) ((dutyValue & 0x03FCu) >> 2);
 13259     08EF  0871               	movf	pwm_fan_LoadDutyValue@dutyValue+1,w
 13260     08F0  00F3               	movwf	??_pwm_fan_LoadDutyValue+1
 13261     08F1  0870               	movf	pwm_fan_LoadDutyValue@dutyValue,w
 13262     08F2  00F2               	movwf	??_pwm_fan_LoadDutyValue
 13263     08F3  36F3               	lsrf	??_pwm_fan_LoadDutyValue+1,f
 13264     08F4  0CF2               	rrf	??_pwm_fan_LoadDutyValue,f
 13265     08F5  36F3               	lsrf	??_pwm_fan_LoadDutyValue+1,f
 13266     08F6  0CF2               	rrf	??_pwm_fan_LoadDutyValue,f
 13267     08F7  0872               	movf	??_pwm_fan_LoadDutyValue,w
 13268     08F8  002C               	movlb	12	; select bank12
 13269     08F9  0098               	movwf	24	;volatile
 13270                           
 13271                           ;mcc_generated_files/pwm/src/pwm5.c: 69:      PWM5DCL = (uint8_t) ((dutyValue & 0x0003u)
      +                           << 6);
 13272     08FA  0870               	movf	pwm_fan_LoadDutyValue@dutyValue,w
 13273     08FB  3903               	andlw	3
 13274     08FC  00F2               	movwf	??_pwm_fan_LoadDutyValue
 13275     08FD  3006               	movlw	6
 13276     08FE                     u360_25:
 13277     08FE  35F2               	lslf	??_pwm_fan_LoadDutyValue,f
 13278     08FF  0B89               	decfsz	9,f
 13279     0900  28FE               	goto	u360_25
 13280     0901  0872               	movf	??_pwm_fan_LoadDutyValue,w
 13281     0902  0097               	movwf	23	;volatile
 13282     0903                     i1l330:
 13283     0903  0008               	return
 13284     0904                     __end_of_pwm_fan_LoadDutyValue:
 13285                           
 13286                           	psect	text46
 13287     175E                     __ptext46:	
 13288 ;; *************** function _getHoogtesensor *****************
 13289 ;; Defined at:
 13290 ;;		line 33 in file "adcMeasurements.c"
 13291 ;; Parameters:    Size  Location     Type
 13292 ;;		None
 13293 ;; Auto vars:     Size  Location     Type
 13294 ;;		None
 13295 ;; Return value:  Size  Location     Type
 13296 ;;                  2    0[COMMON] unsigned short 
 13297 ;; Registers used:
 13298 ;;		wreg
 13299 ;; Tracked objects:
 13300 ;;		On entry : 0/0
 13301 ;;		On exit  : 0/0
 13302 ;;		Unchanged: 0/0
 13303 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 13304 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13305 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13306 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13307 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13308 ;;Total ram usage:        2 bytes
 13309 ;; Hardware stack levels used: 1
 13310 ;; This function calls:
 13311 ;;		Nothing
 13312 ;; This function is called by:
 13313 ;;		_controller
 13314 ;;		_printLogs
 13315 ;;		_position_led_strip
 13316 ;; This function uses a non-reentrant model
 13317 ;;
 13318                           
 13319     175E                     _getHoogtesensor:	
 13320                           ;psect for function _getHoogtesensor
 13321                           
 13322     175E                     i1l4715:	
 13323                           ;incstack = 0
 13324                           ; Regs used in _getHoogtesensor: [wreg]
 13325                           
 13326                           
 13327                           ;adcMeasurements.c: 34:     return ADC_hoogtesensor;
 13328     175E  0022               	movlb	2	; select bank2
 13329     175F  084F               	movf	(_ADC_hoogtesensor+1)^(0+256),w	;volatile
 13330     1760  00F1               	movwf	?_getHoogtesensor+1
 13331     1761  084E               	movf	_ADC_hoogtesensor^(0+256),w	;volatile
 13332     1762  00F0               	movwf	?_getHoogtesensor
 13333     1763                     i1l1088:
 13334     1763  0008               	return
 13335     1764                     __end_of_getHoogtesensor:
 13336                           
 13337                           	psect	text47
 13338     0EA7                     __ptext47:	
 13339 ;; *************** function ___xxtofl *****************
 13340 ;; Defined at:
 13341 ;;		line 10 in file "C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\xxtofl.c"
 13342 ;; Parameters:    Size  Location     Type
 13343 ;;  sign            1    wreg     unsigned char 
 13344 ;;  val             4    0[COMMON] long 
 13345 ;; Auto vars:     Size  Location     Type
 13346 ;;  sign            1    8[COMMON] unsigned char 
 13347 ;;  arg             4   10[COMMON] unsigned long 
 13348 ;;  exp             1    9[COMMON] unsigned char 
 13349 ;; Return value:  Size  Location     Type
 13350 ;;                  4    0[COMMON] unsigned char 
 13351 ;; Registers used:
 13352 ;;		wreg, status,2, status,0
 13353 ;; Tracked objects:
 13354 ;;		On entry : 0/0
 13355 ;;		On exit  : 0/0
 13356 ;;		Unchanged: 0/0
 13357 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 13358 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13359 ;;      Locals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13360 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13361 ;;      Totals:        14       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13362 ;;Total ram usage:       14 bytes
 13363 ;; Hardware stack levels used: 1
 13364 ;; This function calls:
 13365 ;;		Nothing
 13366 ;; This function is called by:
 13367 ;;		_controller
 13368 ;;		_printFloat
 13369 ;;		_str2float
 13370 ;;		_getLedNumber
 13371 ;; This function uses a non-reentrant model
 13372 ;;
 13373                           
 13374     0EA7                     ___xxtofl:	
 13375                           ;psect for function ___xxtofl
 13376                           
 13377                           
 13378                           ;incstack = 0
 13379                           ; Regs used in ___xxtofl: [wreg+status,2+status,0]
 13380                           ;___xxtofl@sign stored from wreg
 13381     0EA7  00F8               	movwf	___xxtofl@sign
 13382     0EA8                     i1l5091:
 13383     0EA8  0878               	movf	___xxtofl@sign,w
 13384     0EA9  1903               	btfsc	3,2
 13385     0EAA  2EAC               	goto	u447_21
 13386     0EAB  2EAD               	goto	u447_20
 13387     0EAC                     u447_21:
 13388     0EAC  2EC1               	goto	i1l5097
 13389     0EAD                     u447_20:
 13390     0EAD                     i1l5093:
 13391     0EAD  1FF3               	btfss	___xxtofl@val+3,7
 13392     0EAE  2EB0               	goto	u448_21
 13393     0EAF  2EB1               	goto	u448_20
 13394     0EB0                     u448_21:
 13395     0EB0  2EC1               	goto	i1l5097
 13396     0EB1                     u448_20:
 13397     0EB1                     i1l5095:
 13398     0EB1  0970               	comf	___xxtofl@val,w
 13399     0EB2  00FA               	movwf	___xxtofl@arg
 13400     0EB3  0971               	comf	___xxtofl@val+1,w
 13401     0EB4  00FB               	movwf	___xxtofl@arg+1
 13402     0EB5  0972               	comf	___xxtofl@val+2,w
 13403     0EB6  00FC               	movwf	___xxtofl@arg+2
 13404     0EB7  0973               	comf	___xxtofl@val+3,w
 13405     0EB8  00FD               	movwf	___xxtofl@arg+3
 13406     0EB9  0AFA               	incf	___xxtofl@arg,f
 13407     0EBA  1903               	skipnz
 13408     0EBB  0AFB               	incf	___xxtofl@arg+1,f
 13409     0EBC  1903               	skipnz
 13410     0EBD  0AFC               	incf	___xxtofl@arg+2,f
 13411     0EBE  1903               	skipnz
 13412     0EBF  0AFD               	incf	___xxtofl@arg+3,f
 13413     0EC0  2EC9               	goto	i1l1884
 13414     0EC1                     i1l5097:
 13415     0EC1  0873               	movf	___xxtofl@val+3,w
 13416     0EC2  00FD               	movwf	___xxtofl@arg+3
 13417     0EC3  0872               	movf	___xxtofl@val+2,w
 13418     0EC4  00FC               	movwf	___xxtofl@arg+2
 13419     0EC5  0871               	movf	___xxtofl@val+1,w
 13420     0EC6  00FB               	movwf	___xxtofl@arg+1
 13421     0EC7  0870               	movf	___xxtofl@val,w
 13422     0EC8  00FA               	movwf	___xxtofl@arg
 13423     0EC9                     i1l1884:
 13424     0EC9  0873               	movf	___xxtofl@val+3,w
 13425     0ECA  0472               	iorwf	___xxtofl@val+2,w
 13426     0ECB  0471               	iorwf	___xxtofl@val+1,w
 13427     0ECC  0470               	iorwf	___xxtofl@val,w
 13428     0ECD  1D03               	skipz
 13429     0ECE  2ED0               	goto	u449_21
 13430     0ECF  2ED1               	goto	u449_20
 13431     0ED0                     u449_21:
 13432     0ED0  2EDA               	goto	i1l1885
 13433     0ED1                     u449_20:
 13434     0ED1                     i1l5099:
 13435     0ED1  3000               	movlw	0
 13436     0ED2  00F3               	movwf	?___xxtofl+3
 13437     0ED3  3000               	movlw	0
 13438     0ED4  00F2               	movwf	?___xxtofl+2
 13439     0ED5  3000               	movlw	0
 13440     0ED6  00F1               	movwf	?___xxtofl+1
 13441     0ED7  3000               	movlw	0
 13442     0ED8  00F0               	movwf	?___xxtofl
 13443     0ED9  2F4A               	goto	i1l1886
 13444     0EDA                     i1l1885:
 13445     0EDA  3096               	movlw	150
 13446     0EDB  00F9               	movwf	___xxtofl@exp
 13447     0EDC  2EE6               	goto	i1l5105
 13448     0EDD                     i1l5103:
 13449     0EDD  3001               	movlw	1
 13450     0EDE  07F9               	addwf	___xxtofl@exp,f
 13451     0EDF  3001               	movlw	1
 13452     0EE0                     u450_25:
 13453     0EE0  36FD               	lsrf	___xxtofl@arg+3,f
 13454     0EE1  0CFC               	rrf	___xxtofl@arg+2,f
 13455     0EE2  0CFB               	rrf	___xxtofl@arg+1,f
 13456     0EE3  0CFA               	rrf	___xxtofl@arg,f
 13457     0EE4  0B89               	decfsz	9,f
 13458     0EE5  2EE0               	goto	u450_25
 13459     0EE6                     i1l5105:
 13460     0EE6  30FE               	movlw	254
 13461     0EE7  057D               	andwf	___xxtofl@arg+3,w
 13462     0EE8  1D03               	btfss	3,2
 13463     0EE9  2EEB               	goto	u451_21
 13464     0EEA  2EEC               	goto	u451_20
 13465     0EEB                     u451_21:
 13466     0EEB  2EDD               	goto	i1l5103
 13467     0EEC                     u451_20:
 13468     0EEC  2EFC               	goto	i1l5109
 13469     0EED                     i1l5107:
 13470     0EED  3001               	movlw	1
 13471     0EEE  07F9               	addwf	___xxtofl@exp,f
 13472     0EEF  3001               	movlw	1
 13473     0EF0  07FA               	addwf	___xxtofl@arg,f
 13474     0EF1  3000               	movlw	0
 13475     0EF2  3DFB               	addwfc	___xxtofl@arg+1,f
 13476     0EF3  3DFC               	addwfc	___xxtofl@arg+2,f
 13477     0EF4  3DFD               	addwfc	___xxtofl@arg+3,f
 13478     0EF5  3001               	movlw	1
 13479     0EF6                     u452_25:
 13480     0EF6  36FD               	lsrf	___xxtofl@arg+3,f
 13481     0EF7  0CFC               	rrf	___xxtofl@arg+2,f
 13482     0EF8  0CFB               	rrf	___xxtofl@arg+1,f
 13483     0EF9  0CFA               	rrf	___xxtofl@arg,f
 13484     0EFA  0B89               	decfsz	9,f
 13485     0EFB  2EF6               	goto	u452_25
 13486     0EFC                     i1l5109:
 13487     0EFC  30FF               	movlw	255
 13488     0EFD  057D               	andwf	___xxtofl@arg+3,w
 13489     0EFE  1D03               	btfss	3,2
 13490     0EFF  2F01               	goto	u453_21
 13491     0F00  2F02               	goto	u453_20
 13492     0F01                     u453_21:
 13493     0F01  2EED               	goto	i1l5107
 13494     0F02                     u453_20:
 13495     0F02  2F0C               	goto	i1l5113
 13496     0F03                     i1l5111:
 13497     0F03  3001               	movlw	1
 13498     0F04  02F9               	subwf	___xxtofl@exp,f
 13499     0F05  3001               	movlw	1
 13500     0F06                     u454_25:
 13501     0F06  35FA               	lslf	___xxtofl@arg,f
 13502     0F07  0DFB               	rlf	___xxtofl@arg+1,f
 13503     0F08  0DFC               	rlf	___xxtofl@arg+2,f
 13504     0F09  0DFD               	rlf	___xxtofl@arg+3,f
 13505     0F0A  0B89               	decfsz	9,f
 13506     0F0B  2F06               	goto	u454_25
 13507     0F0C                     i1l5113:
 13508     0F0C  1BFC               	btfsc	___xxtofl@arg+2,7
 13509     0F0D  2F0F               	goto	u455_21
 13510     0F0E  2F10               	goto	u455_20
 13511     0F0F                     u455_21:
 13512     0F0F  2F16               	goto	i1l1897
 13513     0F10                     u455_20:
 13514     0F10                     i1l5115:
 13515     0F10  3002               	movlw	2
 13516     0F11  0279               	subwf	___xxtofl@exp,w
 13517     0F12  1803               	skipnc
 13518     0F13  2F15               	goto	u456_21
 13519     0F14  2F16               	goto	u456_20
 13520     0F15                     u456_21:
 13521     0F15  2F03               	goto	i1l5111
 13522     0F16                     u456_20:
 13523     0F16                     i1l1897:
 13524     0F16  1879               	btfsc	___xxtofl@exp,0
 13525     0F17  2F19               	goto	u457_21
 13526     0F18  2F1A               	goto	u457_20
 13527     0F19                     u457_21:
 13528     0F19  2F22               	goto	i1l1898
 13529     0F1A                     u457_20:
 13530     0F1A                     i1l5117:
 13531     0F1A  30FF               	movlw	255
 13532     0F1B  05FA               	andwf	___xxtofl@arg,f
 13533     0F1C  30FF               	movlw	255
 13534     0F1D  05FB               	andwf	___xxtofl@arg+1,f
 13535     0F1E  307F               	movlw	127
 13536     0F1F  05FC               	andwf	___xxtofl@arg+2,f
 13537     0F20  30FF               	movlw	255
 13538     0F21  05FD               	andwf	___xxtofl@arg+3,f
 13539     0F22                     i1l1898:
 13540     0F22  1003               	clrc
 13541     0F23  0CF9               	rrf	___xxtofl@exp,f
 13542     0F24                     i1l5119:
 13543     0F24  0879               	movf	___xxtofl@exp,w
 13544     0F25  00F4               	movwf	??___xxtofl
 13545     0F26  01F5               	clrf	??___xxtofl+1
 13546     0F27  01F6               	clrf	??___xxtofl+2
 13547     0F28  01F7               	clrf	??___xxtofl+3
 13548     0F29  3018               	movlw	24
 13549     0F2A                     u458_25:
 13550     0F2A  35F4               	lslf	??___xxtofl,f
 13551     0F2B  0DF5               	rlf	??___xxtofl+1,f
 13552     0F2C  0DF6               	rlf	??___xxtofl+2,f
 13553     0F2D  0DF7               	rlf	??___xxtofl+3,f
 13554     0F2E                     u458_20:
 13555     0F2E  0B89               	decfsz	9,f
 13556     0F2F  2F2A               	goto	u458_25
 13557     0F30  0874               	movf	??___xxtofl,w
 13558     0F31  04FA               	iorwf	___xxtofl@arg,f
 13559     0F32  0875               	movf	??___xxtofl+1,w
 13560     0F33  04FB               	iorwf	___xxtofl@arg+1,f
 13561     0F34  0876               	movf	??___xxtofl+2,w
 13562     0F35  04FC               	iorwf	___xxtofl@arg+2,f
 13563     0F36  0877               	movf	??___xxtofl+3,w
 13564     0F37  04FD               	iorwf	___xxtofl@arg+3,f
 13565     0F38                     i1l5121:
 13566     0F38  0878               	movf	___xxtofl@sign,w
 13567     0F39  1903               	btfsc	3,2
 13568     0F3A  2F3C               	goto	u459_21
 13569     0F3B  2F3D               	goto	u459_20
 13570     0F3C                     u459_21:
 13571     0F3C  2F42               	goto	i1l5127
 13572     0F3D                     u459_20:
 13573     0F3D                     i1l5123:
 13574     0F3D  1FF3               	btfss	___xxtofl@val+3,7
 13575     0F3E  2F40               	goto	u460_21
 13576     0F3F  2F41               	goto	u460_20
 13577     0F40                     u460_21:
 13578     0F40  2F42               	goto	i1l5127
 13579     0F41                     u460_20:
 13580     0F41                     i1l5125:
 13581     0F41  17FD               	bsf	___xxtofl@arg+3,7
 13582     0F42                     i1l5127:
 13583     0F42  087D               	movf	___xxtofl@arg+3,w
 13584     0F43  00F3               	movwf	?___xxtofl+3
 13585     0F44  087C               	movf	___xxtofl@arg+2,w
 13586     0F45  00F2               	movwf	?___xxtofl+2
 13587     0F46  087B               	movf	___xxtofl@arg+1,w
 13588     0F47  00F1               	movwf	?___xxtofl+1
 13589     0F48  087A               	movf	___xxtofl@arg,w
 13590     0F49  00F0               	movwf	?___xxtofl
 13591     0F4A                     i1l1886:
 13592     0F4A  0008               	return
 13593     0F4B                     __end_of___xxtofl:
 13594                           
 13595                           	psect	text48
 13596     0E38                     __ptext48:	
 13597 ;; *************** function ___fltol *****************
 13598 ;; Defined at:
 13599 ;;		line 43 in file "C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\fltol.c"
 13600 ;; Parameters:    Size  Location     Type
 13601 ;;  f1              4   26[BANK0 ] unsigned char 
 13602 ;; Auto vars:     Size  Location     Type
 13603 ;;  exp1            1   35[BANK0 ] unsigned char 
 13604 ;;  sign1           1   34[BANK0 ] unsigned char 
 13605 ;; Return value:  Size  Location     Type
 13606 ;;                  4   26[BANK0 ] long 
 13607 ;; Registers used:
 13608 ;;		wreg, status,2, status,0
 13609 ;; Tracked objects:
 13610 ;;		On entry : 0/0
 13611 ;;		On exit  : 0/0
 13612 ;;		Unchanged: 0/0
 13613 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 13614 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13615 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13616 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13617 ;;      Totals:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13618 ;;Total ram usage:       10 bytes
 13619 ;; Hardware stack levels used: 1
 13620 ;; This function calls:
 13621 ;;		Nothing
 13622 ;; This function is called by:
 13623 ;;		_controller
 13624 ;;		_printFloat
 13625 ;;		_getLedNumber
 13626 ;; This function uses a non-reentrant model
 13627 ;;
 13628                           
 13629     0E38                     ___fltol:	
 13630                           ;psect for function ___fltol
 13631                           
 13632     0E38                     i1l4719:	
 13633                           ;incstack = 0
 13634                           ; Regs used in ___fltol: [wreg+status,2+status,0]
 13635                           
 13636     0E38  1003               	clrc
 13637     0E39  0020               	movlb	0	; select bank0
 13638     0E3A  0D3C               	rlf	___fltol@f1+2,w
 13639     0E3B  0D3D               	rlf	___fltol@f1+3,w
 13640     0E3C  00C3               	movwf	___fltol@exp1
 13641     0E3D  0843               	movf	___fltol@exp1,w
 13642     0E3E  1D03               	btfss	3,2
 13643     0E3F  2E41               	goto	u364_21
 13644     0E40  2E42               	goto	u364_20
 13645     0E41                     u364_21:
 13646     0E41  2E4B               	goto	i1l4725
 13647     0E42                     u364_20:
 13648     0E42                     i1l4721:
 13649     0E42  3000               	movlw	0
 13650     0E43  00BD               	movwf	?___fltol+3
 13651     0E44  3000               	movlw	0
 13652     0E45  00BC               	movwf	?___fltol+2
 13653     0E46  3000               	movlw	0
 13654     0E47  00BB               	movwf	?___fltol+1
 13655     0E48  3000               	movlw	0
 13656     0E49  00BA               	movwf	?___fltol
 13657     0E4A  2EA6               	goto	i1l1637
 13658     0E4B                     i1l4725:
 13659     0E4B  083A               	movf	___fltol@f1,w
 13660     0E4C  00BE               	movwf	??___fltol
 13661     0E4D  083B               	movf	___fltol@f1+1,w
 13662     0E4E  00BF               	movwf	??___fltol+1
 13663     0E4F  083C               	movf	___fltol@f1+2,w
 13664     0E50  00C0               	movwf	??___fltol+2
 13665     0E51  083D               	movf	___fltol@f1+3,w
 13666     0E52  00C1               	movwf	??___fltol+3
 13667     0E53  301F               	movlw	31
 13668     0E54                     u365_25:
 13669     0E54  36C1               	lsrf	??___fltol+3,f
 13670     0E55  0CC0               	rrf	??___fltol+2,f
 13671     0E56  0CBF               	rrf	??___fltol+1,f
 13672     0E57  0CBE               	rrf	??___fltol,f
 13673     0E58                     u365_20:
 13674     0E58  0B89               	decfsz	9,f
 13675     0E59  2E54               	goto	u365_25
 13676     0E5A  083E               	movf	??___fltol,w
 13677     0E5B  00C2               	movwf	___fltol@sign1
 13678     0E5C                     i1l4727:
 13679     0E5C  17BC               	bsf	___fltol@f1+2,7
 13680     0E5D                     i1l4729:
 13681     0E5D  30FF               	movlw	255
 13682     0E5E  05BA               	andwf	___fltol@f1,f
 13683     0E5F  30FF               	movlw	255
 13684     0E60  05BB               	andwf	___fltol@f1+1,f
 13685     0E61  30FF               	movlw	255
 13686     0E62  05BC               	andwf	___fltol@f1+2,f
 13687     0E63  3000               	movlw	0
 13688     0E64  05BD               	andwf	___fltol@f1+3,f
 13689     0E65                     i1l4731:
 13690     0E65  3096               	movlw	150
 13691     0E66  02C3               	subwf	___fltol@exp1,f
 13692     0E67                     i1l4733:
 13693     0E67  1FC3               	btfss	___fltol@exp1,7
 13694     0E68  2E6A               	goto	u366_21
 13695     0E69  2E6B               	goto	u366_20
 13696     0E6A                     u366_21:
 13697     0E6A  2E81               	goto	i1l4743
 13698     0E6B                     u366_20:
 13699     0E6B                     i1l4735:
 13700     0E6B  0843               	movf	___fltol@exp1,w
 13701     0E6C  3A80               	xorlw	128
 13702     0E6D  3E97               	addlw	151
 13703     0E6E  1803               	skipnc
 13704     0E6F  2E71               	goto	u367_21
 13705     0E70  2E72               	goto	u367_20
 13706     0E71                     u367_21:
 13707     0E71  2E73               	goto	i1l4741
 13708     0E72                     u367_20:
 13709     0E72  2E42               	goto	i1l4721
 13710     0E73                     i1l4741:
 13711     0E73  3001               	movlw	1
 13712     0E74                     u368_25:
 13713     0E74  36BD               	lsrf	___fltol@f1+3,f
 13714     0E75  0CBC               	rrf	___fltol@f1+2,f
 13715     0E76  0CBB               	rrf	___fltol@f1+1,f
 13716     0E77  0CBA               	rrf	___fltol@f1,f
 13717     0E78  0B89               	decfsz	9,f
 13718     0E79  2E74               	goto	u368_25
 13719     0E7A  3001               	movlw	1
 13720     0E7B  07C3               	addwf	___fltol@exp1,f
 13721     0E7C  1D03               	btfss	3,2
 13722     0E7D  2E7F               	goto	u369_21
 13723     0E7E  2E80               	goto	u369_20
 13724     0E7F                     u369_21:
 13725     0E7F  2E73               	goto	i1l4741
 13726     0E80                     u369_20:
 13727     0E80  2E96               	goto	i1l4751
 13728     0E81                     i1l4743:
 13729     0E81  3020               	movlw	32
 13730     0E82  0243               	subwf	___fltol@exp1,w
 13731     0E83  1C03               	skipc
 13732     0E84  2E86               	goto	u370_21
 13733     0E85  2E87               	goto	u370_20
 13734     0E86                     u370_21:
 13735     0E86  2E91               	goto	i1l1644
 13736     0E87                     u370_20:
 13737     0E87  2E42               	goto	i1l4721
 13738     0E88                     i1l4749:
 13739     0E88  3001               	movlw	1
 13740     0E89                     u371_25:
 13741     0E89  35BA               	lslf	___fltol@f1,f
 13742     0E8A  0DBB               	rlf	___fltol@f1+1,f
 13743     0E8B  0DBC               	rlf	___fltol@f1+2,f
 13744     0E8C  0DBD               	rlf	___fltol@f1+3,f
 13745     0E8D  0B89               	decfsz	9,f
 13746     0E8E  2E89               	goto	u371_25
 13747     0E8F  3001               	movlw	1
 13748     0E90  02C3               	subwf	___fltol@exp1,f
 13749     0E91                     i1l1644:
 13750     0E91  0843               	movf	___fltol@exp1,w
 13751     0E92  1D03               	btfss	3,2
 13752     0E93  2E95               	goto	u372_21
 13753     0E94  2E96               	goto	u372_20
 13754     0E95                     u372_21:
 13755     0E95  2E88               	goto	i1l4749
 13756     0E96                     u372_20:
 13757     0E96                     i1l4751:
 13758     0E96  0842               	movf	___fltol@sign1,w
 13759     0E97  1903               	btfsc	3,2
 13760     0E98  2E9A               	goto	u373_21
 13761     0E99  2E9B               	goto	u373_20
 13762     0E9A                     u373_21:
 13763     0E9A  2EA6               	goto	i1l1647
 13764     0E9B                     u373_20:
 13765     0E9B                     i1l4753:
 13766     0E9B  09BA               	comf	___fltol@f1,f
 13767     0E9C  09BB               	comf	___fltol@f1+1,f
 13768     0E9D  09BC               	comf	___fltol@f1+2,f
 13769     0E9E  09BD               	comf	___fltol@f1+3,f
 13770     0E9F  0ABA               	incf	___fltol@f1,f
 13771     0EA0  1903               	skipnz
 13772     0EA1  0ABB               	incf	___fltol@f1+1,f
 13773     0EA2  1903               	skipnz
 13774     0EA3  0ABC               	incf	___fltol@f1+2,f
 13775     0EA4  1903               	skipnz
 13776     0EA5  0ABD               	incf	___fltol@f1+3,f
 13777     0EA6                     i1l1647:
 13778     0EA6                     i1l1637:
 13779     0EA6  0008               	return
 13780     0EA7                     __end_of___fltol:
 13781                           
 13782                           	psect	text49
 13783     00AB                     __ptext49:	
 13784 ;; *************** function ___flmul *****************
 13785 ;; Defined at:
 13786 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\sprcmul.c"
 13787 ;; Parameters:    Size  Location     Type
 13788 ;;  b               4    0[BANK0 ] long 
 13789 ;;  a               4    4[BANK0 ] long 
 13790 ;; Auto vars:     Size  Location     Type
 13791 ;;  prod            4   20[BANK0 ] struct .
 13792 ;;  grs             4   14[BANK0 ] unsigned long 
 13793 ;;  temp            2   24[BANK0 ] struct .
 13794 ;;  bexp            1   19[BANK0 ] unsigned char 
 13795 ;;  aexp            1   18[BANK0 ] unsigned char 
 13796 ;;  sign            1   13[BANK0 ] unsigned char 
 13797 ;; Return value:  Size  Location     Type
 13798 ;;                  4    0[BANK0 ] unsigned char 
 13799 ;; Registers used:
 13800 ;;		wreg, status,2, status,0, pclath, cstack
 13801 ;; Tracked objects:
 13802 ;;		On entry : 0/0
 13803 ;;		On exit  : 0/0
 13804 ;;		Unchanged: 0/0
 13805 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 13806 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13807 ;;      Locals:         0      13       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13808 ;;      Temps:          0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13809 ;;      Totals:         0      26       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13810 ;;Total ram usage:       26 bytes
 13811 ;; Hardware stack levels used: 1
 13812 ;; Hardware stack levels required when called: 1
 13813 ;; This function calls:
 13814 ;;		__Umul8_16
 13815 ;; This function is called by:
 13816 ;;		_controller
 13817 ;;		_printFloat
 13818 ;;		_str2float
 13819 ;;		_getLedNumber
 13820 ;; This function uses a non-reentrant model
 13821 ;;
 13822                           
 13823     00AB                     ___flmul:	
 13824                           ;psect for function ___flmul
 13825                           
 13826     00AB                     i1l4951:	
 13827                           ;incstack = 0
 13828                           ; Regs used in ___flmul: [wreg+status,2+status,0+pclath+cstack]
 13829                           
 13830     00AB  0020               	movlb	0	; select bank0
 13831     00AC  0823               	movf	___flmul@b+3,w
 13832     00AD  3980               	andlw	128
 13833     00AE  00AD               	movwf	___flmul@sign
 13834     00AF                     i1l4953:
 13835     00AF  3523               	lslf	___flmul@b+3,w
 13836     00B0  00B3               	movwf	___flmul@bexp
 13837     00B1                     i1l4955:
 13838     00B1  1FA2               	btfss	___flmul@b+2,7
 13839     00B2  28B4               	goto	u420_21
 13840     00B3  28B5               	goto	u420_20
 13841     00B4                     u420_21:
 13842     00B4  28B6               	goto	i1l4959
 13843     00B5                     u420_20:
 13844     00B5                     i1l4957:
 13845     00B5  1433               	bsf	___flmul@bexp,0
 13846     00B6                     i1l4959:
 13847     00B6  0833               	movf	___flmul@bexp,w
 13848     00B7  1903               	btfsc	3,2
 13849     00B8  28BA               	goto	u421_21
 13850     00B9  28BB               	goto	u421_20
 13851     00BA                     u421_21:
 13852     00BA  28CA               	goto	i1l4967
 13853     00BB                     u421_20:
 13854     00BB                     i1l4961:
 13855     00BB  0A33               	incf	___flmul@bexp,w
 13856     00BC  1D03               	btfss	3,2
 13857     00BD  28BF               	goto	u422_21
 13858     00BE  28C0               	goto	u422_20
 13859     00BF                     u422_21:
 13860     00BF  28C8               	goto	i1l4965
 13861     00C0                     u422_20:
 13862     00C0                     i1l4963:
 13863     00C0  3000               	movlw	0
 13864     00C1  00A3               	movwf	___flmul@b+3
 13865     00C2  3000               	movlw	0
 13866     00C3  00A2               	movwf	___flmul@b+2
 13867     00C4  3000               	movlw	0
 13868     00C5  00A1               	movwf	___flmul@b+1
 13869     00C6  3000               	movlw	0
 13870     00C7  00A0               	movwf	___flmul@b
 13871     00C8                     i1l4965:
 13872     00C8  17A2               	bsf	___flmul@b+2,7
 13873     00C9  28D2               	goto	i1l4969
 13874     00CA                     i1l4967:
 13875     00CA  3000               	movlw	0
 13876     00CB  00A3               	movwf	___flmul@b+3
 13877     00CC  3000               	movlw	0
 13878     00CD  00A2               	movwf	___flmul@b+2
 13879     00CE  3000               	movlw	0
 13880     00CF  00A1               	movwf	___flmul@b+1
 13881     00D0  3000               	movlw	0
 13882     00D1  00A0               	movwf	___flmul@b
 13883     00D2                     i1l4969:
 13884     00D2  0827               	movf	___flmul@a+3,w
 13885     00D3  3980               	andlw	128
 13886     00D4  06AD               	xorwf	___flmul@sign,f
 13887     00D5                     i1l4971:
 13888     00D5  3527               	lslf	___flmul@a+3,w
 13889     00D6  00B2               	movwf	___flmul@aexp
 13890     00D7                     i1l4973:
 13891     00D7  1FA6               	btfss	___flmul@a+2,7
 13892     00D8  28DA               	goto	u423_21
 13893     00D9  28DB               	goto	u423_20
 13894     00DA                     u423_21:
 13895     00DA  28DC               	goto	i1l4977
 13896     00DB                     u423_20:
 13897     00DB                     i1l4975:
 13898     00DB  1432               	bsf	___flmul@aexp,0
 13899     00DC                     i1l4977:
 13900     00DC  0832               	movf	___flmul@aexp,w
 13901     00DD  1903               	btfsc	3,2
 13902     00DE  28E0               	goto	u424_21
 13903     00DF  28E1               	goto	u424_20
 13904     00E0                     u424_21:
 13905     00E0  28F0               	goto	i1l4985
 13906     00E1                     u424_20:
 13907     00E1                     i1l4979:
 13908     00E1  0A32               	incf	___flmul@aexp,w
 13909     00E2  1D03               	btfss	3,2
 13910     00E3  28E5               	goto	u425_21
 13911     00E4  28E6               	goto	u425_20
 13912     00E5                     u425_21:
 13913     00E5  28EE               	goto	i1l4983
 13914     00E6                     u425_20:
 13915     00E6                     i1l4981:
 13916     00E6  3000               	movlw	0
 13917     00E7  00A7               	movwf	___flmul@a+3
 13918     00E8  3000               	movlw	0
 13919     00E9  00A6               	movwf	___flmul@a+2
 13920     00EA  3000               	movlw	0
 13921     00EB  00A5               	movwf	___flmul@a+1
 13922     00EC  3000               	movlw	0
 13923     00ED  00A4               	movwf	___flmul@a
 13924     00EE                     i1l4983:
 13925     00EE  17A6               	bsf	___flmul@a+2,7
 13926     00EF  28F8               	goto	i1l4987
 13927     00F0                     i1l4985:
 13928     00F0  3000               	movlw	0
 13929     00F1  00A7               	movwf	___flmul@a+3
 13930     00F2  3000               	movlw	0
 13931     00F3  00A6               	movwf	___flmul@a+2
 13932     00F4  3000               	movlw	0
 13933     00F5  00A5               	movwf	___flmul@a+1
 13934     00F6  3000               	movlw	0
 13935     00F7  00A4               	movwf	___flmul@a
 13936     00F8                     i1l4987:
 13937     00F8  0832               	movf	___flmul@aexp,w
 13938     00F9  1903               	btfsc	3,2
 13939     00FA  28FC               	goto	u426_21
 13940     00FB  28FD               	goto	u426_20
 13941     00FC                     u426_21:
 13942     00FC  2902               	goto	i1l4991
 13943     00FD                     u426_20:
 13944     00FD                     i1l4989:
 13945     00FD  0833               	movf	___flmul@bexp,w
 13946     00FE  1D03               	btfss	3,2
 13947     00FF  2901               	goto	u427_21
 13948     0100  2902               	goto	u427_20
 13949     0101                     u427_21:
 13950     0101  290B               	goto	i1l4995
 13951     0102                     u427_20:
 13952     0102                     i1l4991:
 13953     0102  3000               	movlw	0
 13954     0103  00A3               	movwf	?___flmul+3
 13955     0104  3000               	movlw	0
 13956     0105  00A2               	movwf	?___flmul+2
 13957     0106  3000               	movlw	0
 13958     0107  00A1               	movwf	?___flmul+1
 13959     0108  3000               	movlw	0
 13960     0109  00A0               	movwf	?___flmul
 13961     010A  2AE5               	goto	i1l1840
 13962     010B                     i1l4995:
 13963     010B  0820               	movf	___flmul@b,w
 13964     010C  00F0               	movwf	__Umul8_16@multiplicand
 13965     010D  0826               	movf	___flmul@a+2,w
 13966     010E  3189  218B  3180   	fcall	__Umul8_16
 13967     0111  0871               	movf	?__Umul8_16+1,w
 13968     0112  0020               	movlb	0	; select bank0
 13969     0113  00B9               	movwf	___flmul@temp+1
 13970     0114  0870               	movf	?__Umul8_16,w
 13971     0115  00B8               	movwf	___flmul@temp
 13972     0116                     i1l4997:
 13973     0116  0838               	movf	___flmul@temp,w
 13974     0117  00A8               	movwf	??___flmul
 13975     0118  01A9               	clrf	??___flmul+1
 13976     0119  01AA               	clrf	??___flmul+2
 13977     011A  01AB               	clrf	??___flmul+3
 13978     011B  082B               	movf	??___flmul+3,w
 13979     011C  00B1               	movwf	___flmul@grs+3
 13980     011D  082A               	movf	??___flmul+2,w
 13981     011E  00B0               	movwf	___flmul@grs+2
 13982     011F  0829               	movf	??___flmul+1,w
 13983     0120  00AF               	movwf	___flmul@grs+1
 13984     0121  0828               	movf	??___flmul,w
 13985     0122  00AE               	movwf	___flmul@grs
 13986     0123                     i1l4999:
 13987     0123  0839               	movf	___flmul@temp+1,w
 13988     0124  00A8               	movwf	??___flmul
 13989     0125  01A9               	clrf	??___flmul+1
 13990     0126  01AA               	clrf	??___flmul+2
 13991     0127  01AB               	clrf	??___flmul+3
 13992     0128  082B               	movf	??___flmul+3,w
 13993     0129  00B7               	movwf	___flmul@prod+3
 13994     012A  082A               	movf	??___flmul+2,w
 13995     012B  00B6               	movwf	___flmul@prod+2
 13996     012C  0829               	movf	??___flmul+1,w
 13997     012D  00B5               	movwf	___flmul@prod+1
 13998     012E  0828               	movf	??___flmul,w
 13999     012F  00B4               	movwf	___flmul@prod
 14000     0130  0821               	movf	___flmul@b+1,w
 14001     0131  00F0               	movwf	__Umul8_16@multiplicand
 14002     0132  0825               	movf	___flmul@a+1,w
 14003     0133  3189  218B  3180   	fcall	__Umul8_16
 14004     0136  0871               	movf	?__Umul8_16+1,w
 14005     0137  0020               	movlb	0	; select bank0
 14006     0138  00B9               	movwf	___flmul@temp+1
 14007     0139  0870               	movf	?__Umul8_16,w
 14008     013A  00B8               	movwf	___flmul@temp
 14009     013B                     i1l5001:
 14010     013B  0838               	movf	___flmul@temp,w
 14011     013C  00A8               	movwf	??___flmul
 14012     013D  01A9               	clrf	??___flmul+1
 14013     013E  01AA               	clrf	??___flmul+2
 14014     013F  01AB               	clrf	??___flmul+3
 14015     0140  0828               	movf	??___flmul,w
 14016     0141  07AE               	addwf	___flmul@grs,f
 14017     0142  0829               	movf	??___flmul+1,w
 14018     0143  3DAF               	addwfc	___flmul@grs+1,f
 14019     0144  082A               	movf	??___flmul+2,w
 14020     0145  3DB0               	addwfc	___flmul@grs+2,f
 14021     0146  082B               	movf	??___flmul+3,w
 14022     0147  3DB1               	addwfc	___flmul@grs+3,f
 14023     0148                     i1l5003:
 14024     0148  0839               	movf	___flmul@temp+1,w
 14025     0149  00A8               	movwf	??___flmul
 14026     014A  01A9               	clrf	??___flmul+1
 14027     014B  01AA               	clrf	??___flmul+2
 14028     014C  01AB               	clrf	??___flmul+3
 14029     014D  0828               	movf	??___flmul,w
 14030     014E  07B4               	addwf	___flmul@prod,f
 14031     014F  0829               	movf	??___flmul+1,w
 14032     0150  3DB5               	addwfc	___flmul@prod+1,f
 14033     0151  082A               	movf	??___flmul+2,w
 14034     0152  3DB6               	addwfc	___flmul@prod+2,f
 14035     0153  082B               	movf	??___flmul+3,w
 14036     0154  3DB7               	addwfc	___flmul@prod+3,f
 14037     0155  0822               	movf	___flmul@b+2,w
 14038     0156  00F0               	movwf	__Umul8_16@multiplicand
 14039     0157  0824               	movf	___flmul@a,w
 14040     0158  3189  218B  3180   	fcall	__Umul8_16
 14041     015B  0871               	movf	?__Umul8_16+1,w
 14042     015C  0020               	movlb	0	; select bank0
 14043     015D  00B9               	movwf	___flmul@temp+1
 14044     015E  0870               	movf	?__Umul8_16,w
 14045     015F  00B8               	movwf	___flmul@temp
 14046     0160                     i1l5005:
 14047     0160  0838               	movf	___flmul@temp,w
 14048     0161  00A8               	movwf	??___flmul
 14049     0162  01A9               	clrf	??___flmul+1
 14050     0163  01AA               	clrf	??___flmul+2
 14051     0164  01AB               	clrf	??___flmul+3
 14052     0165  0828               	movf	??___flmul,w
 14053     0166  07AE               	addwf	___flmul@grs,f
 14054     0167  0829               	movf	??___flmul+1,w
 14055     0168  3DAF               	addwfc	___flmul@grs+1,f
 14056     0169  082A               	movf	??___flmul+2,w
 14057     016A  3DB0               	addwfc	___flmul@grs+2,f
 14058     016B  082B               	movf	??___flmul+3,w
 14059     016C  3DB1               	addwfc	___flmul@grs+3,f
 14060     016D                     i1l5007:
 14061     016D  0839               	movf	___flmul@temp+1,w
 14062     016E  00A8               	movwf	??___flmul
 14063     016F  01A9               	clrf	??___flmul+1
 14064     0170  01AA               	clrf	??___flmul+2
 14065     0171  01AB               	clrf	??___flmul+3
 14066     0172  0828               	movf	??___flmul,w
 14067     0173  07B4               	addwf	___flmul@prod,f
 14068     0174  0829               	movf	??___flmul+1,w
 14069     0175  3DB5               	addwfc	___flmul@prod+1,f
 14070     0176  082A               	movf	??___flmul+2,w
 14071     0177  3DB6               	addwfc	___flmul@prod+2,f
 14072     0178  082B               	movf	??___flmul+3,w
 14073     0179  3DB7               	addwfc	___flmul@prod+3,f
 14074     017A                     i1l5009:
 14075     017A  3008               	movlw	8
 14076     017B                     u428_25:
 14077     017B  35AE               	lslf	___flmul@grs,f
 14078     017C  0DAF               	rlf	___flmul@grs+1,f
 14079     017D  0DB0               	rlf	___flmul@grs+2,f
 14080     017E  0DB1               	rlf	___flmul@grs+3,f
 14081     017F  0B89               	decfsz	9,f
 14082     0180  297B               	goto	u428_25
 14083     0181                     i1l5011:
 14084     0181  0821               	movf	___flmul@b+1,w
 14085     0182  00F0               	movwf	__Umul8_16@multiplicand
 14086     0183  0824               	movf	___flmul@a,w
 14087     0184  3189  218B  3180   	fcall	__Umul8_16
 14088     0187  0871               	movf	?__Umul8_16+1,w
 14089     0188  0020               	movlb	0	; select bank0
 14090     0189  00B9               	movwf	___flmul@temp+1
 14091     018A  0870               	movf	?__Umul8_16,w
 14092     018B  00B8               	movwf	___flmul@temp
 14093     018C                     i1l5013:
 14094     018C  0838               	movf	___flmul@temp,w
 14095     018D  07AE               	addwf	___flmul@grs,f
 14096     018E  0839               	movf	___flmul@temp+1,w
 14097     018F  3DAF               	addwfc	___flmul@grs+1,f
 14098     0190  3000               	movlw	0
 14099     0191  3DB0               	addwfc	___flmul@grs+2,f
 14100     0192  3DB1               	addwfc	___flmul@grs+3,f
 14101     0193                     i1l5015:
 14102     0193  0820               	movf	___flmul@b,w
 14103     0194  00F0               	movwf	__Umul8_16@multiplicand
 14104     0195  0825               	movf	___flmul@a+1,w
 14105     0196  3189  218B  3180   	fcall	__Umul8_16
 14106     0199  0871               	movf	?__Umul8_16+1,w
 14107     019A  0020               	movlb	0	; select bank0
 14108     019B  00B9               	movwf	___flmul@temp+1
 14109     019C  0870               	movf	?__Umul8_16,w
 14110     019D  00B8               	movwf	___flmul@temp
 14111     019E                     i1l5017:
 14112     019E  0838               	movf	___flmul@temp,w
 14113     019F  07AE               	addwf	___flmul@grs,f
 14114     01A0  0839               	movf	___flmul@temp+1,w
 14115     01A1  3DAF               	addwfc	___flmul@grs+1,f
 14116     01A2  3000               	movlw	0
 14117     01A3  3DB0               	addwfc	___flmul@grs+2,f
 14118     01A4  3DB1               	addwfc	___flmul@grs+3,f
 14119     01A5                     i1l5019:
 14120     01A5  3008               	movlw	8
 14121     01A6                     u429_25:
 14122     01A6  35AE               	lslf	___flmul@grs,f
 14123     01A7  0DAF               	rlf	___flmul@grs+1,f
 14124     01A8  0DB0               	rlf	___flmul@grs+2,f
 14125     01A9  0DB1               	rlf	___flmul@grs+3,f
 14126     01AA  0B89               	decfsz	9,f
 14127     01AB  29A6               	goto	u429_25
 14128     01AC  0820               	movf	___flmul@b,w
 14129     01AD  00F0               	movwf	__Umul8_16@multiplicand
 14130     01AE  0824               	movf	___flmul@a,w
 14131     01AF  3189  218B  3180   	fcall	__Umul8_16
 14132     01B2  0871               	movf	?__Umul8_16+1,w
 14133     01B3  0020               	movlb	0	; select bank0
 14134     01B4  00B9               	movwf	___flmul@temp+1
 14135     01B5  0870               	movf	?__Umul8_16,w
 14136     01B6  00B8               	movwf	___flmul@temp
 14137     01B7                     i1l5021:
 14138     01B7  0838               	movf	___flmul@temp,w
 14139     01B8  07AE               	addwf	___flmul@grs,f
 14140     01B9  0839               	movf	___flmul@temp+1,w
 14141     01BA  3DAF               	addwfc	___flmul@grs+1,f
 14142     01BB  3000               	movlw	0
 14143     01BC  3DB0               	addwfc	___flmul@grs+2,f
 14144     01BD  3DB1               	addwfc	___flmul@grs+3,f
 14145     01BE                     i1l5023:
 14146     01BE  0821               	movf	___flmul@b+1,w
 14147     01BF  00F0               	movwf	__Umul8_16@multiplicand
 14148     01C0  0826               	movf	___flmul@a+2,w
 14149     01C1  3189  218B  3180   	fcall	__Umul8_16
 14150     01C4  0871               	movf	?__Umul8_16+1,w
 14151     01C5  0020               	movlb	0	; select bank0
 14152     01C6  00B9               	movwf	___flmul@temp+1
 14153     01C7  0870               	movf	?__Umul8_16,w
 14154     01C8  00B8               	movwf	___flmul@temp
 14155     01C9  0838               	movf	___flmul@temp,w
 14156     01CA  07B4               	addwf	___flmul@prod,f
 14157     01CB  0839               	movf	___flmul@temp+1,w
 14158     01CC  3DB5               	addwfc	___flmul@prod+1,f
 14159     01CD  3000               	movlw	0
 14160     01CE  3DB6               	addwfc	___flmul@prod+2,f
 14161     01CF  3DB7               	addwfc	___flmul@prod+3,f
 14162     01D0                     i1l5025:
 14163     01D0  0822               	movf	___flmul@b+2,w
 14164     01D1  00F0               	movwf	__Umul8_16@multiplicand
 14165     01D2  0825               	movf	___flmul@a+1,w
 14166     01D3  3189  218B  3180   	fcall	__Umul8_16
 14167     01D6  0871               	movf	?__Umul8_16+1,w
 14168     01D7  0020               	movlb	0	; select bank0
 14169     01D8  00B9               	movwf	___flmul@temp+1
 14170     01D9  0870               	movf	?__Umul8_16,w
 14171     01DA  00B8               	movwf	___flmul@temp
 14172     01DB                     i1l5027:
 14173     01DB  0838               	movf	___flmul@temp,w
 14174     01DC  07B4               	addwf	___flmul@prod,f
 14175     01DD  0839               	movf	___flmul@temp+1,w
 14176     01DE  3DB5               	addwfc	___flmul@prod+1,f
 14177     01DF  3000               	movlw	0
 14178     01E0  3DB6               	addwfc	___flmul@prod+2,f
 14179     01E1  3DB7               	addwfc	___flmul@prod+3,f
 14180     01E2  0822               	movf	___flmul@b+2,w
 14181     01E3  00F0               	movwf	__Umul8_16@multiplicand
 14182     01E4  0826               	movf	___flmul@a+2,w
 14183     01E5  3189  218B  3180   	fcall	__Umul8_16
 14184     01E8  0871               	movf	?__Umul8_16+1,w
 14185     01E9  0020               	movlb	0	; select bank0
 14186     01EA  00B9               	movwf	___flmul@temp+1
 14187     01EB  0870               	movf	?__Umul8_16,w
 14188     01EC  00B8               	movwf	___flmul@temp
 14189     01ED                     i1l5029:
 14190     01ED  0838               	movf	___flmul@temp,w
 14191     01EE  00A8               	movwf	??___flmul
 14192     01EF  0839               	movf	___flmul@temp+1,w
 14193     01F0  00A9               	movwf	??___flmul+1
 14194     01F1  01AA               	clrf	??___flmul+2
 14195     01F2  01AB               	clrf	??___flmul+3
 14196     01F3  3008               	movlw	8
 14197     01F4                     u430_25:
 14198     01F4  35A8               	lslf	??___flmul,f
 14199     01F5  0DA9               	rlf	??___flmul+1,f
 14200     01F6  0DAA               	rlf	??___flmul+2,f
 14201     01F7  0DAB               	rlf	??___flmul+3,f
 14202     01F8                     u430_20:
 14203     01F8  0B89               	decfsz	9,f
 14204     01F9  29F4               	goto	u430_25
 14205     01FA  0828               	movf	??___flmul,w
 14206     01FB  07B4               	addwf	___flmul@prod,f
 14207     01FC  0829               	movf	??___flmul+1,w
 14208     01FD  3DB5               	addwfc	___flmul@prod+1,f
 14209     01FE  082A               	movf	??___flmul+2,w
 14210     01FF  3DB6               	addwfc	___flmul@prod+2,f
 14211     0200  082B               	movf	??___flmul+3,w
 14212     0201  3DB7               	addwfc	___flmul@prod+3,f
 14213     0202                     i1l5031:
 14214     0202  082E               	movf	___flmul@grs,w
 14215     0203  00A8               	movwf	??___flmul
 14216     0204  082F               	movf	___flmul@grs+1,w
 14217     0205  00A9               	movwf	??___flmul+1
 14218     0206  0830               	movf	___flmul@grs+2,w
 14219     0207  00AA               	movwf	??___flmul+2
 14220     0208  0831               	movf	___flmul@grs+3,w
 14221     0209  00AB               	movwf	??___flmul+3
 14222     020A  3018               	movlw	24
 14223     020B                     u431_25:
 14224     020B  36AB               	lsrf	??___flmul+3,f
 14225     020C  0CAA               	rrf	??___flmul+2,f
 14226     020D  0CA9               	rrf	??___flmul+1,f
 14227     020E  0CA8               	rrf	??___flmul,f
 14228     020F                     u431_20:
 14229     020F  0B89               	decfsz	9,f
 14230     0210  2A0B               	goto	u431_25
 14231     0211  0828               	movf	??___flmul,w
 14232     0212  07B4               	addwf	___flmul@prod,f
 14233     0213  0829               	movf	??___flmul+1,w
 14234     0214  3DB5               	addwfc	___flmul@prod+1,f
 14235     0215  082A               	movf	??___flmul+2,w
 14236     0216  3DB6               	addwfc	___flmul@prod+2,f
 14237     0217  082B               	movf	??___flmul+3,w
 14238     0218  3DB7               	addwfc	___flmul@prod+3,f
 14239     0219                     i1l5033:
 14240     0219  3008               	movlw	8
 14241     021A                     u432_25:
 14242     021A  35AE               	lslf	___flmul@grs,f
 14243     021B  0DAF               	rlf	___flmul@grs+1,f
 14244     021C  0DB0               	rlf	___flmul@grs+2,f
 14245     021D  0DB1               	rlf	___flmul@grs+3,f
 14246     021E  0B89               	decfsz	9,f
 14247     021F  2A1A               	goto	u432_25
 14248     0220                     i1l5035:
 14249     0220  0833               	movf	___flmul@bexp,w
 14250     0221  0732               	addwf	___flmul@aexp,w
 14251     0222  00A8               	movwf	??___flmul
 14252     0223  01A9               	clrf	??___flmul+1
 14253     0224  0DA9               	rlf	??___flmul+1,f
 14254     0225  0828               	movf	??___flmul,w
 14255     0226  3E82               	addlw	130
 14256     0227  00B8               	movwf	___flmul@temp
 14257     0228  30FF               	movlw	255
 14258     0229  3D29               	addwfc	??___flmul+1,w
 14259     022A  00B9               	movwf	___flmul@temp+1
 14260     022B  2A43               	goto	i1l5047
 14261     022C                     i1l5037:
 14262     022C  3001               	movlw	1
 14263     022D                     u433_25:
 14264     022D  35B4               	lslf	___flmul@prod,f
 14265     022E  0DB5               	rlf	___flmul@prod+1,f
 14266     022F  0DB6               	rlf	___flmul@prod+2,f
 14267     0230  0DB7               	rlf	___flmul@prod+3,f
 14268     0231  0B89               	decfsz	9,f
 14269     0232  2A2D               	goto	u433_25
 14270     0233                     i1l5039:
 14271     0233  1FB1               	btfss	___flmul@grs+3,7
 14272     0234  2A36               	goto	u434_21
 14273     0235  2A37               	goto	u434_20
 14274     0236                     u434_21:
 14275     0236  2A38               	goto	i1l5043
 14276     0237                     u434_20:
 14277     0237                     i1l5041:
 14278     0237  1434               	bsf	___flmul@prod,0
 14279     0238                     i1l5043:
 14280     0238  3001               	movlw	1
 14281     0239                     u435_25:
 14282     0239  35AE               	lslf	___flmul@grs,f
 14283     023A  0DAF               	rlf	___flmul@grs+1,f
 14284     023B  0DB0               	rlf	___flmul@grs+2,f
 14285     023C  0DB1               	rlf	___flmul@grs+3,f
 14286     023D  0B89               	decfsz	9,f
 14287     023E  2A39               	goto	u435_25
 14288     023F                     i1l5045:
 14289     023F  30FF               	movlw	255
 14290     0240  07B8               	addwf	___flmul@temp,f
 14291     0241  30FF               	movlw	255
 14292     0242  3DB9               	addwfc	___flmul@temp+1,f
 14293     0243                     i1l5047:
 14294     0243  1FB6               	btfss	___flmul@prod+2,7
 14295     0244  2A46               	goto	u436_21
 14296     0245  2A47               	goto	u436_20
 14297     0246                     u436_21:
 14298     0246  2A2C               	goto	i1l5037
 14299     0247                     u436_20:
 14300     0247                     i1l5049:
 14301     0247  01B2               	clrf	___flmul@aexp
 14302     0248                     i1l5051:
 14303     0248  1FB1               	btfss	___flmul@grs+3,7
 14304     0249  2A4B               	goto	u437_21
 14305     024A  2A4C               	goto	u437_20
 14306     024B                     u437_21:
 14307     024B  2A68               	goto	i1l5059
 14308     024C                     u437_20:
 14309     024C                     i1l5053:
 14310     024C  30FF               	movlw	255
 14311     024D  052E               	andwf	___flmul@grs,w
 14312     024E  00A8               	movwf	??___flmul
 14313     024F  30FF               	movlw	255
 14314     0250  052F               	andwf	___flmul@grs+1,w
 14315     0251  00A9               	movwf	??___flmul+1
 14316     0252  30FF               	movlw	255
 14317     0253  0530               	andwf	___flmul@grs+2,w
 14318     0254  00AA               	movwf	??___flmul+2
 14319     0255  307F               	movlw	127
 14320     0256  0531               	andwf	___flmul@grs+3,w
 14321     0257  00AB               	movwf	??___flmul+3
 14322     0258  082B               	movf	??___flmul+3,w
 14323     0259  042A               	iorwf	??___flmul+2,w
 14324     025A  0429               	iorwf	??___flmul+1,w
 14325     025B  0428               	iorwf	??___flmul,w
 14326     025C  1903               	skipnz
 14327     025D  2A5F               	goto	u438_21
 14328     025E  2A60               	goto	u438_20
 14329     025F                     u438_21:
 14330     025F  2A63               	goto	i1l1846
 14331     0260                     u438_20:
 14332     0260                     i1l5055:
 14333     0260  3001               	movlw	1
 14334     0261  00B2               	movwf	___flmul@aexp
 14335     0262  2A68               	goto	i1l5059
 14336     0263                     i1l1846:
 14337     0263  1C34               	btfss	___flmul@prod,0
 14338     0264  2A66               	goto	u439_21
 14339     0265  2A67               	goto	u439_20
 14340     0266                     u439_21:
 14341     0266  2A68               	goto	i1l5059
 14342     0267                     u439_20:
 14343     0267  2A60               	goto	i1l5055
 14344     0268                     i1l5059:
 14345     0268  0832               	movf	___flmul@aexp,w
 14346     0269  1903               	btfsc	3,2
 14347     026A  2A6C               	goto	u440_21
 14348     026B  2A6D               	goto	u440_20
 14349     026C                     u440_21:
 14350     026C  2A93               	goto	i1l5069
 14351     026D                     u440_20:
 14352     026D                     i1l5061:
 14353     026D  3001               	movlw	1
 14354     026E  07B4               	addwf	___flmul@prod,f
 14355     026F  3000               	movlw	0
 14356     0270  3DB5               	addwfc	___flmul@prod+1,f
 14357     0271  3DB6               	addwfc	___flmul@prod+2,f
 14358     0272  3DB7               	addwfc	___flmul@prod+3,f
 14359     0273                     i1l5063:
 14360     0273  1C37               	btfss	___flmul@prod+3,0
 14361     0274  2A76               	goto	u441_21
 14362     0275  2A77               	goto	u441_20
 14363     0276                     u441_21:
 14364     0276  2A93               	goto	i1l5069
 14365     0277                     u441_20:
 14366     0277                     i1l5065:
 14367     0277  0834               	movf	___flmul@prod,w
 14368     0278  00A8               	movwf	??___flmul
 14369     0279  0835               	movf	___flmul@prod+1,w
 14370     027A  00A9               	movwf	??___flmul+1
 14371     027B  0836               	movf	___flmul@prod+2,w
 14372     027C  00AA               	movwf	??___flmul+2
 14373     027D  0837               	movf	___flmul@prod+3,w
 14374     027E  00AB               	movwf	??___flmul+3
 14375     027F  3001               	movlw	1
 14376     0280  00AC               	movwf	??___flmul+4
 14377     0281                     u442_25:
 14378     0281  37AB               	asrf	??___flmul+3,f
 14379     0282  0CAA               	rrf	??___flmul+2,f
 14380     0283  0CA9               	rrf	??___flmul+1,f
 14381     0284  0CA8               	rrf	??___flmul,f
 14382     0285                     u442_20:
 14383     0285  0BAC               	decfsz	??___flmul+4,f
 14384     0286  2A81               	goto	u442_25
 14385     0287  082B               	movf	??___flmul+3,w
 14386     0288  00B7               	movwf	___flmul@prod+3
 14387     0289  082A               	movf	??___flmul+2,w
 14388     028A  00B6               	movwf	___flmul@prod+2
 14389     028B  0829               	movf	??___flmul+1,w
 14390     028C  00B5               	movwf	___flmul@prod+1
 14391     028D  0828               	movf	??___flmul,w
 14392     028E  00B4               	movwf	___flmul@prod
 14393     028F                     i1l5067:
 14394     028F  3001               	movlw	1
 14395     0290  07B8               	addwf	___flmul@temp,f
 14396     0291  3000               	movlw	0
 14397     0292  3DB9               	addwfc	___flmul@temp+1,f
 14398     0293                     i1l5069:
 14399     0293  0839               	movf	___flmul@temp+1,w
 14400     0294  3A80               	xorlw	128
 14401     0295  00A8               	movwf	??___flmul
 14402     0296  3080               	movlw	128
 14403     0297  0228               	subwf	??___flmul,w
 14404     0298  1D03               	skipz
 14405     0299  2A9C               	goto	u443_25
 14406     029A  30FF               	movlw	255
 14407     029B  0238               	subwf	___flmul@temp,w
 14408     029C                     u443_25:
 14409     029C  1C03               	skipc
 14410     029D  2A9F               	goto	u443_21
 14411     029E  2AA0               	goto	u443_20
 14412     029F                     u443_21:
 14413     029F  2AAA               	goto	i1l5073
 14414     02A0                     u443_20:
 14415     02A0                     i1l5071:
 14416     02A0  307F               	movlw	127
 14417     02A1  0020               	movlb	0	; select bank0
 14418     02A2  00B7               	movwf	___flmul@prod+3
 14419     02A3  3080               	movlw	128
 14420     02A4  00B6               	movwf	___flmul@prod+2
 14421     02A5  3000               	movlw	0
 14422     02A6  00B5               	movwf	___flmul@prod+1
 14423     02A7  3000               	movlw	0
 14424     02A8  00B4               	movwf	___flmul@prod
 14425     02A9  2ADB               	goto	i1l1852
 14426     02AA                     i1l5073:
 14427     02AA  0020               	movlb	0	; select bank0
 14428     02AB  0839               	movf	___flmul@temp+1,w
 14429     02AC  3A80               	xorlw	128
 14430     02AD  00A8               	movwf	??___flmul
 14431     02AE  3080               	movlw	128
 14432     02AF  0228               	subwf	??___flmul,w
 14433     02B0  1D03               	skipz
 14434     02B1  2AB4               	goto	u444_25
 14435     02B2  3001               	movlw	1
 14436     02B3  0238               	subwf	___flmul@temp,w
 14437     02B4                     u444_25:
 14438     02B4  1803               	skipnc
 14439     02B5  2AB7               	goto	u444_21
 14440     02B6  2AB8               	goto	u444_20
 14441     02B7                     u444_21:
 14442     02B7  2AC3               	goto	i1l5079
 14443     02B8                     u444_20:
 14444     02B8                     i1l5075:
 14445     02B8  3000               	movlw	0
 14446     02B9  0020               	movlb	0	; select bank0
 14447     02BA  00B7               	movwf	___flmul@prod+3
 14448     02BB  3000               	movlw	0
 14449     02BC  00B6               	movwf	___flmul@prod+2
 14450     02BD  3000               	movlw	0
 14451     02BE  00B5               	movwf	___flmul@prod+1
 14452     02BF  3000               	movlw	0
 14453     02C0  00B4               	movwf	___flmul@prod
 14454     02C1                     i1l5077:
 14455     02C1  01AD               	clrf	___flmul@sign
 14456     02C2  2ADB               	goto	i1l1852
 14457     02C3                     i1l5079:
 14458     02C3  0020               	movlb	0	; select bank0
 14459     02C4  0838               	movf	___flmul@temp,w
 14460     02C5  00B3               	movwf	___flmul@bexp
 14461     02C6  30FF               	movlw	255
 14462     02C7  05B4               	andwf	___flmul@prod,f
 14463     02C8  30FF               	movlw	255
 14464     02C9  05B5               	andwf	___flmul@prod+1,f
 14465     02CA  307F               	movlw	127
 14466     02CB  05B6               	andwf	___flmul@prod+2,f
 14467     02CC  3000               	movlw	0
 14468     02CD  05B7               	andwf	___flmul@prod+3,f
 14469     02CE                     i1l5081:
 14470     02CE  1C33               	btfss	___flmul@bexp,0
 14471     02CF  2AD1               	goto	u445_21
 14472     02D0  2AD2               	goto	u445_20
 14473     02D1                     u445_21:
 14474     02D1  2AD3               	goto	i1l5085
 14475     02D2                     u445_20:
 14476     02D2                     i1l5083:
 14477     02D2  17B6               	bsf	___flmul@prod+2,7
 14478     02D3                     i1l5085:
 14479     02D3  0833               	movf	___flmul@bexp,w
 14480     02D4  00A8               	movwf	??___flmul
 14481     02D5  3001               	movlw	1
 14482     02D6                     u446_25:
 14483     02D6  36A8               	lsrf	??___flmul,f
 14484     02D7  0B89               	decfsz	9,f
 14485     02D8  2AD6               	goto	u446_25
 14486     02D9  0828               	movf	??___flmul,w
 14487     02DA  00B7               	movwf	___flmul@prod+3
 14488     02DB                     i1l1852:
 14489     02DB  082D               	movf	___flmul@sign,w
 14490     02DC  04B7               	iorwf	___flmul@prod+3,f
 14491     02DD                     i1l5087:
 14492     02DD  0837               	movf	___flmul@prod+3,w
 14493     02DE  00A3               	movwf	?___flmul+3
 14494     02DF  0836               	movf	___flmul@prod+2,w
 14495     02E0  00A2               	movwf	?___flmul+2
 14496     02E1  0835               	movf	___flmul@prod+1,w
 14497     02E2  00A1               	movwf	?___flmul+1
 14498     02E3  0834               	movf	___flmul@prod,w
 14499     02E4  00A0               	movwf	?___flmul
 14500     02E5                     i1l1840:
 14501     02E5  0008               	return
 14502     02E6                     __end_of___flmul:
 14503                           
 14504                           	psect	text50
 14505     098B                     __ptext50:	
 14506 ;; *************** function __Umul8_16 *****************
 14507 ;; Defined at:
 14508 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\Umul8_16.c"
 14509 ;; Parameters:    Size  Location     Type
 14510 ;;  multiplier      1    wreg     unsigned char 
 14511 ;;  multiplicand    1    0[COMMON] unsigned char 
 14512 ;; Auto vars:     Size  Location     Type
 14513 ;;  multiplier      1    8[COMMON] unsigned char 
 14514 ;;  word_mpld       2    6[COMMON] unsigned short 
 14515 ;;  product         2    4[COMMON] unsigned short 
 14516 ;; Return value:  Size  Location     Type
 14517 ;;                  2    0[COMMON] unsigned int 
 14518 ;; Registers used:
 14519 ;;		wreg, status,2, status,0
 14520 ;; Tracked objects:
 14521 ;;		On entry : 0/0
 14522 ;;		On exit  : 0/0
 14523 ;;		Unchanged: 0/0
 14524 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 14525 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14526 ;;      Locals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14527 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14528 ;;      Totals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14529 ;;Total ram usage:        9 bytes
 14530 ;; Hardware stack levels used: 1
 14531 ;; This function calls:
 14532 ;;		Nothing
 14533 ;; This function is called by:
 14534 ;;		___flmul
 14535 ;; This function uses a non-reentrant model
 14536 ;;
 14537                           
 14538     098B                     __Umul8_16:	
 14539                           ;psect for function __Umul8_16
 14540                           
 14541                           
 14542                           ;incstack = 0
 14543                           ; Regs used in __Umul8_16: [wreg+status,2+status,0]
 14544                           ;__Umul8_16@multiplier stored from wreg
 14545     098B  00F8               	movwf	__Umul8_16@multiplier
 14546     098C                     i1l4489:
 14547     098C  01F4               	clrf	__Umul8_16@product
 14548     098D  01F5               	clrf	__Umul8_16@product+1
 14549     098E                     i1l4491:
 14550     098E  0870               	movf	__Umul8_16@multiplicand,w
 14551     098F  00F2               	movwf	??__Umul8_16
 14552     0990  01F3               	clrf	??__Umul8_16+1
 14553     0991  0872               	movf	??__Umul8_16,w
 14554     0992  00F6               	movwf	__Umul8_16@word_mpld
 14555     0993  0873               	movf	??__Umul8_16+1,w
 14556     0994  00F7               	movwf	__Umul8_16@word_mpld+1
 14557     0995                     i1l4493:
 14558     0995  1C78               	btfss	__Umul8_16@multiplier,0
 14559     0996  2998               	goto	u344_21
 14560     0997  2999               	goto	u344_20
 14561     0998                     u344_21:
 14562     0998  299D               	goto	i1l1859
 14563     0999                     u344_20:
 14564     0999                     i1l4495:
 14565     0999  0876               	movf	__Umul8_16@word_mpld,w
 14566     099A  07F4               	addwf	__Umul8_16@product,f
 14567     099B  0877               	movf	__Umul8_16@word_mpld+1,w
 14568     099C  3DF5               	addwfc	__Umul8_16@product+1,f
 14569     099D                     i1l1859:
 14570     099D  3001               	movlw	1
 14571     099E                     u345_25:
 14572     099E  35F6               	lslf	__Umul8_16@word_mpld,f
 14573     099F  0DF7               	rlf	__Umul8_16@word_mpld+1,f
 14574     09A0  0B89               	decfsz	9,f
 14575     09A1  299E               	goto	u345_25
 14576     09A2  1003               	clrc
 14577     09A3  0CF8               	rrf	__Umul8_16@multiplier,f
 14578     09A4                     i1l4497:
 14579     09A4  0878               	movf	__Umul8_16@multiplier,w
 14580     09A5  1D03               	btfss	3,2
 14581     09A6  29A8               	goto	u346_21
 14582     09A7  29A9               	goto	u346_20
 14583     09A8                     u346_21:
 14584     09A8  2995               	goto	i1l4493
 14585     09A9                     u346_20:
 14586     09A9                     i1l4499:
 14587     09A9  0875               	movf	__Umul8_16@product+1,w
 14588     09AA  00F1               	movwf	?__Umul8_16+1
 14589     09AB  0874               	movf	__Umul8_16@product,w
 14590     09AC  00F0               	movwf	?__Umul8_16
 14591     09AD                     i1l1861:
 14592     09AD  0008               	return
 14593     09AE                     __end_of__Umul8_16:
 14594                           
 14595                           	psect	text51
 14596     02E6                     __ptext51:	
 14597 ;; *************** function ___fladd *****************
 14598 ;; Defined at:
 14599 ;;		line 10 in file "C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\sprcadd.c"
 14600 ;; Parameters:    Size  Location     Type
 14601 ;;  b               4   26[BANK0 ] unsigned int 
 14602 ;;  a               4   30[BANK0 ] unsigned int 
 14603 ;; Auto vars:     Size  Location     Type
 14604 ;;  grs             1   45[BANK0 ] unsigned char 
 14605 ;;  bexp            1   44[BANK0 ] unsigned char 
 14606 ;;  aexp            1   43[BANK0 ] unsigned char 
 14607 ;;  signs           1   42[BANK0 ] unsigned char 
 14608 ;; Return value:  Size  Location     Type
 14609 ;;                  4   26[BANK0 ] unsigned char 
 14610 ;; Registers used:
 14611 ;;		wreg, status,2, status,0
 14612 ;; Tracked objects:
 14613 ;;		On entry : 0/0
 14614 ;;		On exit  : 0/0
 14615 ;;		Unchanged: 0/0
 14616 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 14617 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14618 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14619 ;;      Temps:          0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14620 ;;      Totals:         0      20       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14621 ;;Total ram usage:       20 bytes
 14622 ;; Hardware stack levels used: 1
 14623 ;; This function calls:
 14624 ;;		Nothing
 14625 ;; This function is called by:
 14626 ;;		_controller
 14627 ;;		_str2float
 14628 ;;		_getLedNumber
 14629 ;;		___flsub
 14630 ;; This function uses a non-reentrant model
 14631 ;;
 14632                           
 14633     02E6                     ___fladd:	
 14634                           ;psect for function ___fladd
 14635                           
 14636     02E6                     i1l4755:	
 14637                           ;incstack = 0
 14638                           ; Regs used in ___fladd: [wreg+status,2+status,0]
 14639                           
 14640     02E6  0020               	movlb	0	; select bank0
 14641     02E7  083D               	movf	___fladd@b+3,w
 14642     02E8  3980               	andlw	128
 14643     02E9  00CA               	movwf	___fladd@signs
 14644     02EA                     i1l4757:
 14645     02EA  353D               	lslf	___fladd@b+3,w
 14646     02EB  00CC               	movwf	___fladd@bexp
 14647     02EC                     i1l4759:
 14648     02EC  1FBC               	btfss	___fladd@b+2,7
 14649     02ED  2AEF               	goto	u374_21
 14650     02EE  2AF0               	goto	u374_20
 14651     02EF                     u374_21:
 14652     02EF  2AF1               	goto	i1l4763
 14653     02F0                     u374_20:
 14654     02F0                     i1l4761:
 14655     02F0  144C               	bsf	___fladd@bexp,0
 14656     02F1                     i1l4763:
 14657     02F1  084C               	movf	___fladd@bexp,w
 14658     02F2  1903               	btfsc	3,2
 14659     02F3  2AF5               	goto	u375_21
 14660     02F4  2AF6               	goto	u375_20
 14661     02F5                     u375_21:
 14662     02F5  2B06               	goto	i1l4773
 14663     02F6                     u375_20:
 14664     02F6                     i1l4765:
 14665     02F6  0A4C               	incf	___fladd@bexp,w
 14666     02F7  1D03               	btfss	3,2
 14667     02F8  2AFA               	goto	u376_21
 14668     02F9  2AFB               	goto	u376_20
 14669     02FA                     u376_21:
 14670     02FA  2B03               	goto	i1l4769
 14671     02FB                     u376_20:
 14672     02FB                     i1l4767:
 14673     02FB  3000               	movlw	0
 14674     02FC  00BD               	movwf	___fladd@b+3
 14675     02FD  3000               	movlw	0
 14676     02FE  00BC               	movwf	___fladd@b+2
 14677     02FF  3000               	movlw	0
 14678     0300  00BB               	movwf	___fladd@b+1
 14679     0301  3000               	movlw	0
 14680     0302  00BA               	movwf	___fladd@b
 14681     0303                     i1l4769:
 14682     0303  17BC               	bsf	___fladd@b+2,7
 14683     0304                     i1l4771:
 14684     0304  01BD               	clrf	___fladd@b+3
 14685     0305  2B0E               	goto	i1l4775
 14686     0306                     i1l4773:
 14687     0306  3000               	movlw	0
 14688     0307  00BD               	movwf	___fladd@b+3
 14689     0308  3000               	movlw	0
 14690     0309  00BC               	movwf	___fladd@b+2
 14691     030A  3000               	movlw	0
 14692     030B  00BB               	movwf	___fladd@b+1
 14693     030C  3000               	movlw	0
 14694     030D  00BA               	movwf	___fladd@b
 14695     030E                     i1l4775:
 14696     030E  0841               	movf	___fladd@a+3,w
 14697     030F  3980               	andlw	128
 14698     0310  00CB               	movwf	___fladd@aexp
 14699     0311                     i1l4777:
 14700     0311  084B               	movf	___fladd@aexp,w
 14701     0312  064A               	xorwf	___fladd@signs,w
 14702     0313  1903               	skipnz
 14703     0314  2B16               	goto	u377_21
 14704     0315  2B17               	goto	u377_20
 14705     0316                     u377_21:
 14706     0316  2B18               	goto	i1l4781
 14707     0317                     u377_20:
 14708     0317                     i1l4779:
 14709     0317  174A               	bsf	___fladd@signs,6
 14710     0318                     i1l4781:
 14711     0318  3541               	lslf	___fladd@a+3,w
 14712     0319  00CB               	movwf	___fladd@aexp
 14713     031A                     i1l4783:
 14714     031A  1FC0               	btfss	___fladd@a+2,7
 14715     031B  2B1D               	goto	u378_21
 14716     031C  2B1E               	goto	u378_20
 14717     031D                     u378_21:
 14718     031D  2B1F               	goto	i1l4787
 14719     031E                     u378_20:
 14720     031E                     i1l4785:
 14721     031E  144B               	bsf	___fladd@aexp,0
 14722     031F                     i1l4787:
 14723     031F  084B               	movf	___fladd@aexp,w
 14724     0320  1903               	btfsc	3,2
 14725     0321  2B23               	goto	u379_21
 14726     0322  2B24               	goto	u379_20
 14727     0323                     u379_21:
 14728     0323  2B34               	goto	i1l4797
 14729     0324                     u379_20:
 14730     0324                     i1l4789:
 14731     0324  0A4B               	incf	___fladd@aexp,w
 14732     0325  1D03               	btfss	3,2
 14733     0326  2B28               	goto	u380_21
 14734     0327  2B29               	goto	u380_20
 14735     0328                     u380_21:
 14736     0328  2B31               	goto	i1l4793
 14737     0329                     u380_20:
 14738     0329                     i1l4791:
 14739     0329  3000               	movlw	0
 14740     032A  00C1               	movwf	___fladd@a+3
 14741     032B  3000               	movlw	0
 14742     032C  00C0               	movwf	___fladd@a+2
 14743     032D  3000               	movlw	0
 14744     032E  00BF               	movwf	___fladd@a+1
 14745     032F  3000               	movlw	0
 14746     0330  00BE               	movwf	___fladd@a
 14747     0331                     i1l4793:
 14748     0331  17C0               	bsf	___fladd@a+2,7
 14749     0332                     i1l4795:
 14750     0332  01C1               	clrf	___fladd@a+3
 14751     0333  2B3C               	goto	i1l1744
 14752     0334                     i1l4797:
 14753     0334  3000               	movlw	0
 14754     0335  00C1               	movwf	___fladd@a+3
 14755     0336  3000               	movlw	0
 14756     0337  00C0               	movwf	___fladd@a+2
 14757     0338  3000               	movlw	0
 14758     0339  00BF               	movwf	___fladd@a+1
 14759     033A  3000               	movlw	0
 14760     033B  00BE               	movwf	___fladd@a
 14761     033C                     i1l1744:
 14762     033C  084C               	movf	___fladd@bexp,w
 14763     033D  024B               	subwf	___fladd@aexp,w
 14764     033E  1803               	skipnc
 14765     033F  2B41               	goto	u381_21
 14766     0340  2B42               	goto	u381_20
 14767     0341                     u381_21:
 14768     0341  2B66               	goto	i1l4833
 14769     0342                     u381_20:
 14770     0342                     i1l4799:
 14771     0342  1F4A               	btfss	___fladd@signs,6
 14772     0343  2B45               	goto	u382_21
 14773     0344  2B46               	goto	u382_20
 14774     0345                     u382_21:
 14775     0345  2B48               	goto	i1l4803
 14776     0346                     u382_20:
 14777     0346                     i1l4801:
 14778     0346  3080               	movlw	128
 14779     0347  06CA               	xorwf	___fladd@signs,f
 14780     0348                     i1l4803:
 14781     0348  084C               	movf	___fladd@bexp,w
 14782     0349  00CD               	movwf	___fladd@grs
 14783     034A                     i1l4805:
 14784     034A  084B               	movf	___fladd@aexp,w
 14785     034B  00CC               	movwf	___fladd@bexp
 14786     034C                     i1l4807:
 14787     034C  084D               	movf	___fladd@grs,w
 14788     034D  00CB               	movwf	___fladd@aexp
 14789     034E                     i1l4809:
 14790     034E  083A               	movf	___fladd@b,w
 14791     034F  00CD               	movwf	___fladd@grs
 14792     0350                     i1l4811:
 14793     0350  083E               	movf	___fladd@a,w
 14794     0351  00BA               	movwf	___fladd@b
 14795     0352                     i1l4813:
 14796     0352  084D               	movf	___fladd@grs,w
 14797     0353  00BE               	movwf	___fladd@a
 14798     0354                     i1l4815:
 14799     0354  083B               	movf	___fladd@b+1,w
 14800     0355  00CD               	movwf	___fladd@grs
 14801     0356                     i1l4817:
 14802     0356  083F               	movf	___fladd@a+1,w
 14803     0357  00BB               	movwf	___fladd@b+1
 14804     0358                     i1l4819:
 14805     0358  084D               	movf	___fladd@grs,w
 14806     0359  00BF               	movwf	___fladd@a+1
 14807     035A                     i1l4821:
 14808     035A  083C               	movf	___fladd@b+2,w
 14809     035B  00CD               	movwf	___fladd@grs
 14810     035C                     i1l4823:
 14811     035C  0840               	movf	___fladd@a+2,w
 14812     035D  00BC               	movwf	___fladd@b+2
 14813     035E                     i1l4825:
 14814     035E  084D               	movf	___fladd@grs,w
 14815     035F  00C0               	movwf	___fladd@a+2
 14816     0360                     i1l4827:
 14817     0360  083D               	movf	___fladd@b+3,w
 14818     0361  00CD               	movwf	___fladd@grs
 14819     0362                     i1l4829:
 14820     0362  0841               	movf	___fladd@a+3,w
 14821     0363  00BD               	movwf	___fladd@b+3
 14822     0364                     i1l4831:
 14823     0364  084D               	movf	___fladd@grs,w
 14824     0365  00C1               	movwf	___fladd@a+3
 14825     0366                     i1l4833:
 14826     0366  01CD               	clrf	___fladd@grs
 14827     0367                     i1l4835:
 14828     0367  084B               	movf	___fladd@aexp,w
 14829     0368  00C2               	movwf	??___fladd
 14830     0369  01C3               	clrf	??___fladd+1
 14831     036A  0843               	movf	??___fladd+1,w
 14832     036B  00C5               	movwf	??___fladd+3
 14833     036C  084C               	movf	___fladd@bexp,w
 14834     036D  0242               	subwf	??___fladd,w
 14835     036E  00C4               	movwf	??___fladd+2
 14836     036F  1C03               	skipc
 14837     0370  03C5               	decf	??___fladd+3,f
 14838     0371  0845               	movf	??___fladd+3,w
 14839     0372  3A80               	xorlw	128
 14840     0373  00C6               	movwf	??___fladd+4
 14841     0374  3080               	movlw	128
 14842     0375  0246               	subwf	??___fladd+4,w
 14843     0376  1D03               	skipz
 14844     0377  2B7A               	goto	u383_25
 14845     0378  301A               	movlw	26
 14846     0379  0244               	subwf	??___fladd+2,w
 14847     037A                     u383_25:
 14848     037A  1C03               	skipc
 14849     037B  2B7D               	goto	u383_21
 14850     037C  2B7E               	goto	u383_20
 14851     037D                     u383_21:
 14852     037D  2BB4               	goto	i1l4851
 14853     037E                     u383_20:
 14854     037E                     i1l4837:
 14855     037E  0020               	movlb	0	; select bank0
 14856     037F  083D               	movf	___fladd@b+3,w
 14857     0380  043C               	iorwf	___fladd@b+2,w
 14858     0381  043B               	iorwf	___fladd@b+1,w
 14859     0382  043A               	iorwf	___fladd@b,w
 14860     0383  1D03               	skipz
 14861     0384  2B86               	goto	u384_21
 14862     0385  2B88               	goto	u384_20
 14863     0386                     u384_21:
 14864     0386  3001               	movlw	1
 14865     0387  2B89               	goto	u385_20
 14866     0388                     u384_20:
 14867     0388  3000               	movlw	0
 14868     0389                     u385_20:
 14869     0389  00CD               	movwf	___fladd@grs
 14870     038A  3000               	movlw	0
 14871     038B  00BD               	movwf	___fladd@b+3
 14872     038C  3000               	movlw	0
 14873     038D  00BC               	movwf	___fladd@b+2
 14874     038E  3000               	movlw	0
 14875     038F  00BB               	movwf	___fladd@b+1
 14876     0390  3000               	movlw	0
 14877     0391  00BA               	movwf	___fladd@b
 14878     0392  084B               	movf	___fladd@aexp,w
 14879     0393  00CC               	movwf	___fladd@bexp
 14880     0394  2BBB               	goto	i1l1748
 14881     0395                     i1l1750:
 14882     0395  1C4D               	btfss	___fladd@grs,0
 14883     0396  2B98               	goto	u386_21
 14884     0397  2B99               	goto	u386_20
 14885     0398                     u386_21:
 14886     0398  2BA3               	goto	i1l4841
 14887     0399                     u386_20:
 14888     0399                     i1l4839:
 14889     0399  084D               	movf	___fladd@grs,w
 14890     039A  00C2               	movwf	??___fladd
 14891     039B  3001               	movlw	1
 14892     039C                     u387_25:
 14893     039C  36C2               	lsrf	??___fladd,f
 14894     039D  0B89               	decfsz	9,f
 14895     039E  2B9C               	goto	u387_25
 14896     039F  0842               	movf	??___fladd,w
 14897     03A0  3801               	iorlw	1
 14898     03A1  00CD               	movwf	___fladd@grs
 14899     03A2  2BA5               	goto	i1l4843
 14900     03A3                     i1l4841:
 14901     03A3  1003               	clrc
 14902     03A4  0CCD               	rrf	___fladd@grs,f
 14903     03A5                     i1l4843:
 14904     03A5  1C3A               	btfss	___fladd@b,0
 14905     03A6  2BA8               	goto	u388_21
 14906     03A7  2BA9               	goto	u388_20
 14907     03A8                     u388_21:
 14908     03A8  2BAA               	goto	i1l4847
 14909     03A9                     u388_20:
 14910     03A9                     i1l4845:
 14911     03A9  17CD               	bsf	___fladd@grs,7
 14912     03AA                     i1l4847:
 14913     03AA  3001               	movlw	1
 14914     03AB  00C2               	movwf	??___fladd
 14915     03AC                     u389_25:
 14916     03AC  37BD               	asrf	___fladd@b+3,f
 14917     03AD  0CBC               	rrf	___fladd@b+2,f
 14918     03AE  0CBB               	rrf	___fladd@b+1,f
 14919     03AF  0CBA               	rrf	___fladd@b,f
 14920     03B0  0BC2               	decfsz	??___fladd& (0+127),f
 14921     03B1  2BAC               	goto	u389_25
 14922     03B2                     i1l4849:
 14923     03B2  3001               	movlw	1
 14924     03B3  07CC               	addwf	___fladd@bexp,f
 14925     03B4                     i1l4851:
 14926     03B4  0020               	movlb	0	; select bank0
 14927     03B5  084B               	movf	___fladd@aexp,w
 14928     03B6  024C               	subwf	___fladd@bexp,w
 14929     03B7  1C03               	skipc
 14930     03B8  2BBA               	goto	u390_21
 14931     03B9  2BBB               	goto	u390_20
 14932     03BA                     u390_21:
 14933     03BA  2B95               	goto	i1l1750
 14934     03BB                     u390_20:
 14935     03BB                     i1l1748:
 14936     03BB  1B4A               	btfsc	___fladd@signs,6
 14937     03BC  2BBE               	goto	u391_21
 14938     03BD  2BBF               	goto	u391_20
 14939     03BE                     u391_21:
 14940     03BE  2BF9               	goto	i1l4877
 14941     03BF                     u391_20:
 14942     03BF                     i1l4853:
 14943     03BF  084C               	movf	___fladd@bexp,w
 14944     03C0  1D03               	btfss	3,2
 14945     03C1  2BC3               	goto	u392_21
 14946     03C2  2BC4               	goto	u392_20
 14947     03C3                     u392_21:
 14948     03C3  2BCD               	goto	i1l4859
 14949     03C4                     u392_20:
 14950     03C4                     i1l4855:
 14951     03C4  3000               	movlw	0
 14952     03C5  00BD               	movwf	?___fladd+3
 14953     03C6  3000               	movlw	0
 14954     03C7  00BC               	movwf	?___fladd+2
 14955     03C8  3000               	movlw	0
 14956     03C9  00BB               	movwf	?___fladd+1
 14957     03CA  3000               	movlw	0
 14958     03CB  00BA               	movwf	?___fladd
 14959     03CC  2CF1               	goto	i1l1757
 14960     03CD                     i1l4859:
 14961     03CD  083E               	movf	___fladd@a,w
 14962     03CE  07BA               	addwf	___fladd@b,f
 14963     03CF  083F               	movf	___fladd@a+1,w
 14964     03D0  3DBB               	addwfc	___fladd@b+1,f
 14965     03D1  0840               	movf	___fladd@a+2,w
 14966     03D2  3DBC               	addwfc	___fladd@b+2,f
 14967     03D3  0841               	movf	___fladd@a+3,w
 14968     03D4  3DBD               	addwfc	___fladd@b+3,f
 14969     03D5                     i1l4861:
 14970     03D5  1C3D               	btfss	___fladd@b+3,0
 14971     03D6  2BD8               	goto	u393_21
 14972     03D7  2BD9               	goto	u393_20
 14973     03D8                     u393_21:
 14974     03D8  2C83               	goto	i1l4913
 14975     03D9                     u393_20:
 14976     03D9                     i1l4863:
 14977     03D9  1C4D               	btfss	___fladd@grs,0
 14978     03DA  2BDC               	goto	u394_21
 14979     03DB  2BDD               	goto	u394_20
 14980     03DC                     u394_21:
 14981     03DC  2BE7               	goto	i1l4867
 14982     03DD                     u394_20:
 14983     03DD                     i1l4865:
 14984     03DD  084D               	movf	___fladd@grs,w
 14985     03DE  00C2               	movwf	??___fladd
 14986     03DF  3001               	movlw	1
 14987     03E0                     u395_25:
 14988     03E0  36C2               	lsrf	??___fladd,f
 14989     03E1  0B89               	decfsz	9,f
 14990     03E2  2BE0               	goto	u395_25
 14991     03E3  0842               	movf	??___fladd,w
 14992     03E4  3801               	iorlw	1
 14993     03E5  00CD               	movwf	___fladd@grs
 14994     03E6  2BE9               	goto	i1l4869
 14995     03E7                     i1l4867:
 14996     03E7  1003               	clrc
 14997     03E8  0CCD               	rrf	___fladd@grs,f
 14998     03E9                     i1l4869:
 14999     03E9  1C3A               	btfss	___fladd@b,0
 15000     03EA  2BEC               	goto	u396_21
 15001     03EB  2BED               	goto	u396_20
 15002     03EC                     u396_21:
 15003     03EC  2BEE               	goto	i1l4873
 15004     03ED                     u396_20:
 15005     03ED                     i1l4871:
 15006     03ED  17CD               	bsf	___fladd@grs,7
 15007     03EE                     i1l4873:
 15008     03EE  3001               	movlw	1
 15009     03EF  00C2               	movwf	??___fladd
 15010     03F0                     u397_25:
 15011     03F0  37BD               	asrf	___fladd@b+3,f
 15012     03F1  0CBC               	rrf	___fladd@b+2,f
 15013     03F2  0CBB               	rrf	___fladd@b+1,f
 15014     03F3  0CBA               	rrf	___fladd@b,f
 15015     03F4  0BC2               	decfsz	??___fladd& (0+127),f
 15016     03F5  2BF0               	goto	u397_25
 15017     03F6                     i1l4875:
 15018     03F6  3001               	movlw	1
 15019     03F7  07CC               	addwf	___fladd@bexp,f
 15020     03F8  2C83               	goto	i1l4913
 15021     03F9                     i1l4877:
 15022     03F9  083D               	movf	___fladd@b+3,w
 15023     03FA  3A80               	xorlw	128
 15024     03FB  00C2               	movwf	??___fladd
 15025     03FC  0841               	movf	___fladd@a+3,w
 15026     03FD  3A80               	xorlw	128
 15027     03FE  0242               	subwf	??___fladd,w
 15028     03FF  1D03               	skipz
 15029     0400  2C0B               	goto	u398_23
 15030     0401  0840               	movf	___fladd@a+2,w
 15031     0402  023C               	subwf	___fladd@b+2,w
 15032     0403  1D03               	skipz
 15033     0404  2C0B               	goto	u398_23
 15034     0405  083F               	movf	___fladd@a+1,w
 15035     0406  023B               	subwf	___fladd@b+1,w
 15036     0407  1D03               	skipz
 15037     0408  2C0B               	goto	u398_23
 15038     0409  083E               	movf	___fladd@a,w
 15039     040A  023A               	subwf	___fladd@b,w
 15040     040B                     u398_23:
 15041     040B  1803               	skipnc
 15042     040C  2C0E               	goto	u398_21
 15043     040D  2C0F               	goto	u398_20
 15044     040E                     u398_21:
 15045     040E  2C44               	goto	i1l4889
 15046     040F                     u398_20:
 15047     040F                     i1l4879:
 15048     040F  30FF               	movlw	255
 15049     0410  00C2               	movwf	??___fladd
 15050     0411  30FF               	movlw	255
 15051     0412  00C3               	movwf	??___fladd+1
 15052     0413  30FF               	movlw	255
 15053     0414  00C4               	movwf	??___fladd+2
 15054     0415  30FF               	movlw	255
 15055     0416  00C5               	movwf	??___fladd+3
 15056     0417  083A               	movf	___fladd@b,w
 15057     0418  023E               	subwf	___fladd@a,w
 15058     0419  00C6               	movwf	??___fladd+4
 15059     041A  083B               	movf	___fladd@b+1,w
 15060     041B  3B3F               	subwfb	___fladd@a+1,w
 15061     041C  00C7               	movwf	??___fladd+5
 15062     041D  083C               	movf	___fladd@b+2,w
 15063     041E  3B40               	subwfb	___fladd@a+2,w
 15064     041F  00C8               	movwf	??___fladd+6
 15065     0420  083D               	movf	___fladd@b+3,w
 15066     0421  3B41               	subwfb	___fladd@a+3,w
 15067     0422  00C9               	movwf	??___fladd+7
 15068     0423  0846               	movf	??___fladd+4,w
 15069     0424  07C2               	addwf	??___fladd,f
 15070     0425  0847               	movf	??___fladd+5,w
 15071     0426  3DC3               	addwfc	??___fladd+1,f
 15072     0427  0848               	movf	??___fladd+6,w
 15073     0428  3DC4               	addwfc	??___fladd+2,f
 15074     0429  0849               	movf	??___fladd+7,w
 15075     042A  3DC5               	addwfc	??___fladd+3,f
 15076     042B  0845               	movf	??___fladd+3,w
 15077     042C  00BD               	movwf	___fladd@b+3
 15078     042D  0844               	movf	??___fladd+2,w
 15079     042E  00BC               	movwf	___fladd@b+2
 15080     042F  0843               	movf	??___fladd+1,w
 15081     0430  00BB               	movwf	___fladd@b+1
 15082     0431  0842               	movf	??___fladd,w
 15083     0432  00BA               	movwf	___fladd@b
 15084     0433                     i1l4881:
 15085     0433  3080               	movlw	128
 15086     0434  06CA               	xorwf	___fladd@signs,f
 15087     0435                     i1l4883:
 15088     0435  034D               	decf	___fladd@grs,w
 15089     0436  3AFF               	xorlw	255
 15090     0437  00CD               	movwf	___fladd@grs
 15091     0438                     i1l4885:
 15092     0438  084D               	movf	___fladd@grs,w
 15093     0439  1D03               	btfss	3,2
 15094     043A  2C3C               	goto	u399_21
 15095     043B  2C3D               	goto	u399_20
 15096     043C                     u399_21:
 15097     043C  2C4C               	goto	i1l1765
 15098     043D                     u399_20:
 15099     043D                     i1l4887:
 15100     043D  3001               	movlw	1
 15101     043E  07BA               	addwf	___fladd@b,f
 15102     043F  3000               	movlw	0
 15103     0440  3DBB               	addwfc	___fladd@b+1,f
 15104     0441  3DBC               	addwfc	___fladd@b+2,f
 15105     0442  3DBD               	addwfc	___fladd@b+3,f
 15106     0443  2C4C               	goto	i1l1765
 15107     0444                     i1l4889:
 15108     0444  083E               	movf	___fladd@a,w
 15109     0445  02BA               	subwf	___fladd@b,f
 15110     0446  083F               	movf	___fladd@a+1,w
 15111     0447  3BBB               	subwfb	___fladd@b+1,f
 15112     0448  0840               	movf	___fladd@a+2,w
 15113     0449  3BBC               	subwfb	___fladd@b+2,f
 15114     044A  0841               	movf	___fladd@a+3,w
 15115     044B  3BBD               	subwfb	___fladd@b+3,f
 15116     044C                     i1l1765:
 15117     044C  083D               	movf	___fladd@b+3,w
 15118     044D  043C               	iorwf	___fladd@b+2,w
 15119     044E  043B               	iorwf	___fladd@b+1,w
 15120     044F  043A               	iorwf	___fladd@b,w
 15121     0450  1D03               	skipz
 15122     0451  2C53               	goto	u400_21
 15123     0452  2C54               	goto	u400_20
 15124     0453                     u400_21:
 15125     0453  2C7F               	goto	i1l4911
 15126     0454                     u400_20:
 15127     0454                     i1l4891:
 15128     0454  084D               	movf	___fladd@grs,w
 15129     0455  1D03               	btfss	3,2
 15130     0456  2C58               	goto	u401_21
 15131     0457  2C59               	goto	u401_20
 15132     0458                     u401_21:
 15133     0458  2C7F               	goto	i1l4911
 15134     0459                     u401_20:
 15135     0459                     i1l4893:
 15136     0459  3000               	movlw	0
 15137     045A  00BD               	movwf	?___fladd+3
 15138     045B  3000               	movlw	0
 15139     045C  00BC               	movwf	?___fladd+2
 15140     045D  3000               	movlw	0
 15141     045E  00BB               	movwf	?___fladd+1
 15142     045F  3000               	movlw	0
 15143     0460  00BA               	movwf	?___fladd
 15144     0461  2CF1               	goto	i1l1757
 15145     0462                     i1l4897:
 15146     0462  3001               	movlw	1
 15147     0463                     u402_25:
 15148     0463  35BA               	lslf	___fladd@b,f
 15149     0464  0DBB               	rlf	___fladd@b+1,f
 15150     0465  0DBC               	rlf	___fladd@b+2,f
 15151     0466  0DBD               	rlf	___fladd@b+3,f
 15152     0467  0B89               	decfsz	9,f
 15153     0468  2C63               	goto	u402_25
 15154     0469                     i1l4899:
 15155     0469  1FCD               	btfss	___fladd@grs,7
 15156     046A  2C6C               	goto	u403_21
 15157     046B  2C6D               	goto	u403_20
 15158     046C                     u403_21:
 15159     046C  2C6E               	goto	i1l1769
 15160     046D                     u403_20:
 15161     046D                     i1l4901:
 15162     046D  143A               	bsf	___fladd@b,0
 15163     046E                     i1l1769:
 15164     046E  1C4D               	btfss	___fladd@grs,0
 15165     046F  2C71               	goto	u404_21
 15166     0470  2C72               	goto	u404_20
 15167     0471                     u404_21:
 15168     0471  2C76               	goto	i1l4905
 15169     0472                     u404_20:
 15170     0472                     i1l4903:
 15171     0472  1403               	setc
 15172     0473  0D4D               	rlf	___fladd@grs,w
 15173     0474  00CD               	movwf	___fladd@grs
 15174     0475  2C78               	goto	i1l4907
 15175     0476                     i1l4905:
 15176     0476  1003               	clrc
 15177     0477  0DCD               	rlf	___fladd@grs,f
 15178     0478                     i1l4907:
 15179     0478  084C               	movf	___fladd@bexp,w
 15180     0479  1903               	btfsc	3,2
 15181     047A  2C7C               	goto	u405_21
 15182     047B  2C7D               	goto	u405_20
 15183     047C                     u405_21:
 15184     047C  2C7F               	goto	i1l4911
 15185     047D                     u405_20:
 15186     047D                     i1l4909:
 15187     047D  3001               	movlw	1
 15188     047E  02CC               	subwf	___fladd@bexp,f
 15189     047F                     i1l4911:
 15190     047F  1FBC               	btfss	___fladd@b+2,7
 15191     0480  2C82               	goto	u406_21
 15192     0481  2C83               	goto	u406_20
 15193     0482                     u406_21:
 15194     0482  2C62               	goto	i1l4897
 15195     0483                     u406_20:
 15196     0483                     i1l4913:
 15197     0483  01CB               	clrf	___fladd@aexp
 15198     0484                     i1l4915:
 15199     0484  1FCD               	btfss	___fladd@grs,7
 15200     0485  2C87               	goto	u407_21
 15201     0486  2C88               	goto	u407_20
 15202     0487                     u407_21:
 15203     0487  2C96               	goto	i1l4923
 15204     0488                     u407_20:
 15205     0488                     i1l4917:
 15206     0488  084D               	movf	___fladd@grs,w
 15207     0489  397F               	andlw	127
 15208     048A  1903               	btfsc	3,2
 15209     048B  2C8D               	goto	u408_21
 15210     048C  2C8E               	goto	u408_20
 15211     048D                     u408_21:
 15212     048D  2C91               	goto	i1l1775
 15213     048E                     u408_20:
 15214     048E                     i1l4919:
 15215     048E  3001               	movlw	1
 15216     048F  00CB               	movwf	___fladd@aexp
 15217     0490  2C96               	goto	i1l4923
 15218     0491                     i1l1775:
 15219     0491  1C3A               	btfss	___fladd@b,0
 15220     0492  2C94               	goto	u409_21
 15221     0493  2C95               	goto	u409_20
 15222     0494                     u409_21:
 15223     0494  2C96               	goto	i1l4923
 15224     0495                     u409_20:
 15225     0495  2C8E               	goto	i1l4919
 15226     0496                     i1l4923:
 15227     0496  084B               	movf	___fladd@aexp,w
 15228     0497  1903               	btfsc	3,2
 15229     0498  2C9A               	goto	u410_21
 15230     0499  2C9B               	goto	u410_20
 15231     049A                     u410_21:
 15232     049A  2CC4               	goto	i1l1778
 15233     049B                     u410_20:
 15234     049B                     i1l4925:
 15235     049B  3001               	movlw	1
 15236     049C  07BA               	addwf	___fladd@b,f
 15237     049D  3000               	movlw	0
 15238     049E  3DBB               	addwfc	___fladd@b+1,f
 15239     049F  3DBC               	addwfc	___fladd@b+2,f
 15240     04A0  3DBD               	addwfc	___fladd@b+3,f
 15241     04A1                     i1l4927:
 15242     04A1  1C3D               	btfss	___fladd@b+3,0
 15243     04A2  2CA4               	goto	u411_21
 15244     04A3  2CA5               	goto	u411_20
 15245     04A4                     u411_21:
 15246     04A4  2CC4               	goto	i1l1778
 15247     04A5                     u411_20:
 15248     04A5                     i1l4929:
 15249     04A5  083A               	movf	___fladd@b,w
 15250     04A6  00C2               	movwf	??___fladd
 15251     04A7  083B               	movf	___fladd@b+1,w
 15252     04A8  00C3               	movwf	??___fladd+1
 15253     04A9  083C               	movf	___fladd@b+2,w
 15254     04AA  00C4               	movwf	??___fladd+2
 15255     04AB  083D               	movf	___fladd@b+3,w
 15256     04AC  00C5               	movwf	??___fladd+3
 15257     04AD  3001               	movlw	1
 15258     04AE  00C6               	movwf	??___fladd+4
 15259     04AF                     u412_25:
 15260     04AF  37C5               	asrf	??___fladd+3,f
 15261     04B0  0CC4               	rrf	??___fladd+2,f
 15262     04B1  0CC3               	rrf	??___fladd+1,f
 15263     04B2  0CC2               	rrf	??___fladd,f
 15264     04B3                     u412_20:
 15265     04B3  0BC6               	decfsz	??___fladd+4,f
 15266     04B4  2CAF               	goto	u412_25
 15267     04B5  0845               	movf	??___fladd+3,w
 15268     04B6  00BD               	movwf	___fladd@b+3
 15269     04B7  0844               	movf	??___fladd+2,w
 15270     04B8  00BC               	movwf	___fladd@b+2
 15271     04B9  0843               	movf	??___fladd+1,w
 15272     04BA  00BB               	movwf	___fladd@b+1
 15273     04BB  0842               	movf	??___fladd,w
 15274     04BC  00BA               	movwf	___fladd@b
 15275     04BD  0A4C               	incf	___fladd@bexp,w
 15276     04BE  1903               	btfsc	3,2
 15277     04BF  2CC1               	goto	u413_21
 15278     04C0  2CC2               	goto	u413_20
 15279     04C1                     u413_21:
 15280     04C1  2CC4               	goto	i1l1778
 15281     04C2                     u413_20:
 15282     04C2                     i1l4931:
 15283     04C2  3001               	movlw	1
 15284     04C3  07CC               	addwf	___fladd@bexp,f
 15285     04C4                     i1l1778:
 15286     04C4  0A4C               	incf	___fladd@bexp,w
 15287     04C5  1903               	btfsc	3,2
 15288     04C6  2CC8               	goto	u414_21
 15289     04C7  2CC9               	goto	u414_20
 15290     04C8                     u414_21:
 15291     04C8  2CCE               	goto	i1l4935
 15292     04C9                     u414_20:
 15293     04C9                     i1l4933:
 15294     04C9  084C               	movf	___fladd@bexp,w
 15295     04CA  1D03               	btfss	3,2
 15296     04CB  2CCD               	goto	u415_21
 15297     04CC  2CCE               	goto	u415_20
 15298     04CD                     u415_21:
 15299     04CD  2CDC               	goto	i1l4941
 15300     04CE                     u415_20:
 15301     04CE                     i1l4935:
 15302     04CE  3000               	movlw	0
 15303     04CF  00BD               	movwf	___fladd@b+3
 15304     04D0  3000               	movlw	0
 15305     04D1  00BC               	movwf	___fladd@b+2
 15306     04D2  3000               	movlw	0
 15307     04D3  00BB               	movwf	___fladd@b+1
 15308     04D4  3000               	movlw	0
 15309     04D5  00BA               	movwf	___fladd@b
 15310     04D6                     i1l4937:
 15311     04D6  084C               	movf	___fladd@bexp,w
 15312     04D7  1D03               	btfss	3,2
 15313     04D8  2CDA               	goto	u416_21
 15314     04D9  2CDB               	goto	u416_20
 15315     04DA                     u416_21:
 15316     04DA  2CDC               	goto	i1l4941
 15317     04DB                     u416_20:
 15318     04DB                     i1l4939:
 15319     04DB  01CA               	clrf	___fladd@signs
 15320     04DC                     i1l4941:
 15321     04DC  1C4C               	btfss	___fladd@bexp,0
 15322     04DD  2CDF               	goto	u417_21
 15323     04DE  2CE0               	goto	u417_20
 15324     04DF                     u417_21:
 15325     04DF  2CE2               	goto	i1l4945
 15326     04E0                     u417_20:
 15327     04E0                     i1l4943:
 15328     04E0  17BC               	bsf	___fladd@b+2,7
 15329     04E1  2CE4               	goto	i1l1786
 15330     04E2                     i1l4945:
 15331     04E2  307F               	movlw	127
 15332     04E3  05BC               	andwf	___fladd@b+2,f
 15333     04E4                     i1l1786:
 15334     04E4  084C               	movf	___fladd@bexp,w
 15335     04E5  00C2               	movwf	??___fladd
 15336     04E6  3001               	movlw	1
 15337     04E7                     u418_25:
 15338     04E7  36C2               	lsrf	??___fladd,f
 15339     04E8  0B89               	decfsz	9,f
 15340     04E9  2CE7               	goto	u418_25
 15341     04EA  0842               	movf	??___fladd,w
 15342     04EB  00BD               	movwf	___fladd@b+3
 15343     04EC                     i1l4947:
 15344     04EC  1FCA               	btfss	___fladd@signs,7
 15345     04ED  2CEF               	goto	u419_21
 15346     04EE  2CF0               	goto	u419_20
 15347     04EF                     u419_21:
 15348     04EF  2CF1               	goto	i1l1787
 15349     04F0                     u419_20:
 15350     04F0                     i1l4949:
 15351     04F0  17BD               	bsf	___fladd@b+3,7
 15352     04F1                     i1l1787:
 15353     04F1                     i1l1757:
 15354     04F1  0008               	return
 15355     04F2                     __end_of___fladd:
 15356                           
 15357                           	psect	text52
 15358     082B                     __ptext52:	
 15359 ;; *************** function _TMR2_ISR *****************
 15360 ;; Defined at:
 15361 ;;		line 114 in file "mcc_generated_files/timer/src/tmr2.c"
 15362 ;; Parameters:    Size  Location     Type
 15363 ;;		None
 15364 ;; Auto vars:     Size  Location     Type
 15365 ;;		None
 15366 ;; Return value:  Size  Location     Type
 15367 ;;                  1    wreg      void 
 15368 ;; Registers used:
 15369 ;;		wreg, status,2, status,0, pclath, cstack
 15370 ;; Tracked objects:
 15371 ;;		On entry : 0/0
 15372 ;;		On exit  : 0/0
 15373 ;;		Unchanged: 0/0
 15374 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 15375 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15376 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15377 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15378 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15379 ;;Total ram usage:        0 bytes
 15380 ;; Hardware stack levels used: 1
 15381 ;; Hardware stack levels required when called: 1
 15382 ;; This function calls:
 15383 ;;		NULL
 15384 ;;		_TMR2_DefaultPeriodMatchCallback
 15385 ;; This function is called by:
 15386 ;;		_INTERRUPT_InterruptManager
 15387 ;; This function uses a non-reentrant model
 15388 ;;
 15389                           
 15390     082B                     _TMR2_ISR:	
 15391                           ;psect for function _TMR2_ISR
 15392                           
 15393     082B                     i1l5449:	
 15394                           ;incstack = 0
 15395                           ; Regs used in _TMR2_ISR: [wreg+status,2+status,0+pclath+cstack]
 15396                           
 15397                           
 15398                           ;mcc_generated_files/timer/src/tmr2.c: 117:     if(((void*)0) != TMR2_PeriodMatchCallbac
      +                          k)
 15399     082B  0022               	movlb	2	; select bank2
 15400     082C  086C               	movf	_TMR2_PeriodMatchCallback^(0+256),w
 15401     082D  046D               	iorwf	(_TMR2_PeriodMatchCallback+1)^(0+256),w
 15402     082E  1903               	btfsc	3,2
 15403     082F  2831               	goto	u477_21
 15404     0830  2832               	goto	u477_20
 15405     0831                     u477_21:
 15406     0831  2837               	goto	i1l5453
 15407     0832                     u477_20:
 15408     0832                     i1l5451:
 15409                           
 15410                           ;mcc_generated_files/timer/src/tmr2.c: 118:     {;mcc_generated_files/timer/src/tmr2.c: 
      +                          119:         TMR2_PeriodMatchCallback();
 15411     0832  086D               	movf	(_TMR2_PeriodMatchCallback+1)^(0+256),w
 15412     0833  008A               	movwf	10
 15413     0834  086C               	movf	_TMR2_PeriodMatchCallback^(0+256),w
 15414     0835  000A               	callw
 15415     0836  3188               	pagesel	$
 15416     0837                     i1l5453:
 15417                           
 15418                           ;mcc_generated_files/timer/src/tmr2.c: 121:     PIR1bits.TMR2IF = 0;
 15419     0837  0020               	movlb	0	; select bank0
 15420     0838  1091               	bcf	17,1	;volatile
 15421     0839                     i1l684:
 15422     0839  0008               	return
 15423     083A                     __end_of_TMR2_ISR:
 15424                           
 15425                           	psect	text53
 15426     1701                     __ptext53:	
 15427 ;; *************** function _TMR2_DefaultPeriodMatchCallback *****************
 15428 ;; Defined at:
 15429 ;;		line 129 in file "mcc_generated_files/timer/src/tmr2.c"
 15430 ;; Parameters:    Size  Location     Type
 15431 ;;		None
 15432 ;; Auto vars:     Size  Location     Type
 15433 ;;		None
 15434 ;; Return value:  Size  Location     Type
 15435 ;;                  1    wreg      void 
 15436 ;; Registers used:
 15437 ;;		None
 15438 ;; Tracked objects:
 15439 ;;		On entry : 0/0
 15440 ;;		On exit  : 0/0
 15441 ;;		Unchanged: 0/0
 15442 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 15443 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15444 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15445 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15446 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15447 ;;Total ram usage:        0 bytes
 15448 ;; Hardware stack levels used: 1
 15449 ;; This function calls:
 15450 ;;		Nothing
 15451 ;; This function is called by:
 15452 ;;		_TMR2_Initialize
 15453 ;;		_TMR2_ISR
 15454 ;; This function uses a non-reentrant model
 15455 ;;
 15456                           
 15457     1701                     _TMR2_DefaultPeriodMatchCallback:	
 15458                           ;psect for function _TMR2_DefaultPeriodMatchCallback
 15459                           
 15460     1701                     i1l690:	
 15461                           ;incstack = 0
 15462                           ; Regs used in _TMR2_DefaultPeriodMatchCallback: []
 15463                           
 15464     1701  0008               	return
 15465     1702                     __end_of_TMR2_DefaultPeriodMatchCallback:
 15466                           
 15467                           	psect	text54
 15468     1734                     __ptext54:	
 15469 ;; *************** function _I2C2_ISR *****************
 15470 ;; Defined at:
 15471 ;;		line 217 in file "mcc_generated_files/i2c_host/src/mssp2.c"
 15472 ;; Parameters:    Size  Location     Type
 15473 ;;		None
 15474 ;; Auto vars:     Size  Location     Type
 15475 ;;		None
 15476 ;; Return value:  Size  Location     Type
 15477 ;;                  1    wreg      void 
 15478 ;; Registers used:
 15479 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 15480 ;; Tracked objects:
 15481 ;;		On entry : 0/0
 15482 ;;		On exit  : 0/0
 15483 ;;		Unchanged: 0/0
 15484 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 15485 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15486 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15487 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15488 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15489 ;;Total ram usage:        0 bytes
 15490 ;; Hardware stack levels used: 1
 15491 ;; Hardware stack levels required when called: 5
 15492 ;; This function calls:
 15493 ;;		_I2C2_EventHandler
 15494 ;; This function is called by:
 15495 ;;		_INTERRUPT_InterruptManager
 15496 ;; This function uses a non-reentrant model
 15497 ;;
 15498                           
 15499     1734                     _I2C2_ISR:	
 15500                           ;psect for function _I2C2_ISR
 15501                           
 15502     1734                     i1l5425:	
 15503                           ;incstack = 0
 15504 ;; hardware stack exceeded
 15505                           ; Regs used in _I2C2_ISR: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 15506                           
 15507                           
 15508                           ;mcc_generated_files/i2c_host/src/mssp2.c: 219:     I2C2_EventHandler();
 15509     1734  318B  23DA  3197   	fcall	_I2C2_EventHandler
 15510     1737                     i1l199:
 15511     1737  0008               	return
 15512     1738                     __end_of_I2C2_ISR:
 15513                           
 15514                           	psect	text55
 15515     0BDA                     __ptext55:	
 15516 ;; *************** function _I2C2_EventHandler *****************
 15517 ;; Defined at:
 15518 ;;		line 254 in file "mcc_generated_files/i2c_host/src/mssp2.c"
 15519 ;; Parameters:    Size  Location     Type
 15520 ;;		None
 15521 ;; Auto vars:     Size  Location     Type
 15522 ;;		None
 15523 ;; Return value:  Size  Location     Type
 15524 ;;                  1    wreg      void 
 15525 ;; Registers used:
 15526 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 15527 ;; Tracked objects:
 15528 ;;		On entry : 0/0
 15529 ;;		On exit  : 0/0
 15530 ;;		Unchanged: 0/0
 15531 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 15532 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15533 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15534 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15535 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15536 ;;Total ram usage:        2 bytes
 15537 ;; Hardware stack levels used: 1
 15538 ;; Hardware stack levels required when called: 4
 15539 ;; This function calls:
 15540 ;;		_I2C2_Close
 15541 ;;		_I2C2_EVENT_ERROR
 15542 ;;		_I2C2_EVENT_IDLE
 15543 ;;		_I2C2_EVENT_NACK
 15544 ;;		_I2C2_EVENT_RESET
 15545 ;;		_I2C2_EVENT_RX
 15546 ;;		_I2C2_EVENT_SEND_RD_ADDR
 15547 ;;		_I2C2_EVENT_SEND_WR_ADDR
 15548 ;;		_I2C2_EVENT_STOP
 15549 ;;		_I2C2_EVENT_TX
 15550 ;;		_I2C2_InterruptClear
 15551 ;;		_I2C2_IsAddr
 15552 ;;		_I2C2_IsData
 15553 ;;		_I2C2_IsNack
 15554 ;; This function is called by:
 15555 ;;		_I2C2_ISR
 15556 ;; This function uses a non-reentrant model
 15557 ;;
 15558                           
 15559     0BDA                     _I2C2_EventHandler:	
 15560                           ;psect for function _I2C2_EventHandler
 15561                           
 15562     0BDA                     i1l5171:	
 15563                           ;incstack = 0
 15564 ;; hardware stack exceeded
 15565                           ; Regs used in _I2C2_EventHandler: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 15566                           
 15567                           
 15568                           ;mcc_generated_files/i2c_host/src/mssp2.c: 256:     I2C2_InterruptClear();
 15569     0BDA  3197  2705  318B   	fcall	_I2C2_InterruptClear
 15570     0BDD                     i1l5173:
 15571                           
 15572                           ;mcc_generated_files/i2c_host/src/mssp2.c: 257:     if (0U != SSP2STATbits.P)
 15573     0BDD  0024               	movlb	4	; select bank4
 15574     0BDE  1E1C               	btfss	28,4	;volatile
 15575     0BDF  2BE1               	goto	u462_21
 15576     0BE0  2BE2               	goto	u462_20
 15577     0BE1                     u462_21:
 15578     0BE1  2BE6               	goto	i1l5177
 15579     0BE2                     u462_20:
 15580     0BE2                     i1l5175:
 15581                           
 15582                           ;mcc_generated_files/i2c_host/src/mssp2.c: 258:     {;mcc_generated_files/i2c_host/src/m
      +                          ssp2.c: 259:         I2C2_Close();
 15583     0BE2  3188  20DA  318B   	fcall	_I2C2_Close
 15584                           
 15585                           ;mcc_generated_files/i2c_host/src/mssp2.c: 260:     }
 15586     0BE5  2C12               	goto	i1l5189
 15587     0BE6                     i1l5177:
 15588                           
 15589                           ;mcc_generated_files/i2c_host/src/mssp2.c: 262:     {;mcc_generated_files/i2c_host/src/m
      +                          ssp2.c: 263:         if (I2C2_IsAddr() && I2C2_IsNack())
 15590     0BE6  3197  2784  318B   	fcall	_I2C2_IsAddr
 15591     0BE9  3A00               	xorlw	0
 15592     0BEA  1903               	skipnz
 15593     0BEB  2BED               	goto	u463_21
 15594     0BEC  2BEE               	goto	u463_20
 15595     0BED                     u463_21:
 15596     0BED  2BFC               	goto	i1l5183
 15597     0BEE                     u463_20:
 15598     0BEE                     i1l5179:
 15599     0BEE  3197  2758  318B   	fcall	_I2C2_IsNack
 15600     0BF1  3A00               	xorlw	0
 15601     0BF2  1903               	skipnz
 15602     0BF3  2BF5               	goto	u464_21
 15603     0BF4  2BF6               	goto	u464_20
 15604     0BF5                     u464_21:
 15605     0BF5  2BFC               	goto	i1l5183
 15606     0BF6                     u464_20:
 15607     0BF6                     i1l5181:
 15608                           
 15609                           ;mcc_generated_files/i2c_host/src/mssp2.c: 264:         {;mcc_generated_files/i2c_host/s
      +                          rc/mssp2.c: 265:             i2c2Status.state = I2C_STATE_NACK;
 15610     0BF6  3005               	movlw	5
 15611     0BF7  0020               	movlb	0	; select bank0
 15612     0BF8  00E2               	movwf	_i2c2Status+13	;volatile
 15613                           
 15614                           ;mcc_generated_files/i2c_host/src/mssp2.c: 266:             i2c2Status.errorState = I2C_
      +                          ERROR_ADDR_NACK;
 15615     0BF9  3001               	movlw	1
 15616     0BFA  00E1               	movwf	_i2c2Status+12	;volatile
 15617                           
 15618                           ;mcc_generated_files/i2c_host/src/mssp2.c: 267:         }
 15619     0BFB  2C12               	goto	i1l5189
 15620     0BFC                     i1l5183:
 15621     0BFC  3197  2741  318B   	fcall	_I2C2_IsData
 15622     0BFF  3A00               	xorlw	0
 15623     0C00  1903               	skipnz
 15624     0C01  2C03               	goto	u465_21
 15625     0C02  2C04               	goto	u465_20
 15626     0C03                     u465_21:
 15627     0C03  2C12               	goto	i1l217
 15628     0C04                     u465_20:
 15629     0C04                     i1l5185:
 15630     0C04  3197  2758  318B   	fcall	_I2C2_IsNack
 15631     0C07  3A00               	xorlw	0
 15632     0C08  1903               	skipnz
 15633     0C09  2C0B               	goto	u466_21
 15634     0C0A  2C0C               	goto	u466_20
 15635     0C0B                     u466_21:
 15636     0C0B  2C12               	goto	i1l217
 15637     0C0C                     u466_20:
 15638     0C0C                     i1l5187:
 15639                           
 15640                           ;mcc_generated_files/i2c_host/src/mssp2.c: 269:         {;mcc_generated_files/i2c_host/s
      +                          rc/mssp2.c: 270:             i2c2Status.state = I2C_STATE_NACK;
 15641     0C0C  3005               	movlw	5
 15642     0C0D  0020               	movlb	0	; select bank0
 15643     0C0E  00E2               	movwf	_i2c2Status+13	;volatile
 15644                           
 15645                           ;mcc_generated_files/i2c_host/src/mssp2.c: 271:             i2c2Status.errorState = I2C_
      +                          ERROR_DATA_NACK;
 15646     0C0F  3002               	movlw	2
 15647     0C10  00E1               	movwf	_i2c2Status+12	;volatile
 15648                           
 15649                           ;mcc_generated_files/i2c_host/src/mssp2.c: 272:         }
 15650     0C11  2C12               	goto	i1l5189
 15651     0C12                     i1l217:
 15652     0C12                     i1l5189:
 15653                           
 15654                           ;mcc_generated_files/i2c_host/src/mssp2.c: 279:     i2c2Status.state = i2c2_eventTable[i
      +                          2c2Status.state]();
 15655     0C12  0020               	movlb	0	; select bank0
 15656     0C13  0862               	movf	_i2c2Status+13,w	;volatile
 15657     0C14  00F2               	movwf	??_I2C2_EventHandler
 15658     0C15  01F3               	clrf	??_I2C2_EventHandler+1
 15659     0C16  35F2               	lslf	??_I2C2_EventHandler,f
 15660     0C17  0DF3               	rlf	??_I2C2_EventHandler+1,f
 15661     0C18  3091               	movlw	low _i2c2_eventTable
 15662     0C19  0772               	addwf	??_I2C2_EventHandler,w
 15663     0C1A  0084               	movwf	4
 15664     0C1B  3010               	movlw	high _i2c2_eventTable
 15665     0C1C  3D73               	addwfc	??_I2C2_EventHandler+1,w
 15666     0C1D  3880               	iorlw	128
 15667     0C1E  0085               	movwf	5
 15668     0C1F  3F01               	moviw [1]fsr0
 15669     0C20  008A               	movwf	10
 15670     0C21  3F00               	moviw [0]fsr0
 15671     0C22  000A               	callw
 15672     0C23  318B               	pagesel	$
 15673     0C24  0020               	movlb	0	; select bank0
 15674     0C25  00E2               	movwf	_i2c2Status+13	;volatile
 15675     0C26                     i1l220:
 15676     0C26  0008               	return
 15677     0C27                     __end_of_I2C2_EventHandler:
 15678                           
 15679                           	psect	text56
 15680     1758                     __ptext56:	
 15681 ;; *************** function _I2C2_IsNack *****************
 15682 ;; Defined at:
 15683 ;;		line 454 in file "mcc_generated_files/i2c_host/src/mssp2.c"
 15684 ;; Parameters:    Size  Location     Type
 15685 ;;		None
 15686 ;; Auto vars:     Size  Location     Type
 15687 ;;		None
 15688 ;; Return value:  Size  Location     Type
 15689 ;;                  1    wreg      _Bool 
 15690 ;; Registers used:
 15691 ;;		wreg, status,2, status,0
 15692 ;; Tracked objects:
 15693 ;;		On entry : 0/0
 15694 ;;		On exit  : 0/0
 15695 ;;		Unchanged: 0/0
 15696 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 15697 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15698 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15699 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15700 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15701 ;;Total ram usage:        0 bytes
 15702 ;; Hardware stack levels used: 1
 15703 ;; This function calls:
 15704 ;;		Nothing
 15705 ;; This function is called by:
 15706 ;;		_I2C2_EventHandler
 15707 ;; This function uses a non-reentrant model
 15708 ;;
 15709                           
 15710     1758                     _I2C2_IsNack:	
 15711                           ;psect for function _I2C2_IsNack
 15712                           
 15713     1758                     i1l4603:	
 15714                           ;incstack = 0
 15715                           ; Regs used in _I2C2_IsNack: [wreg+status,2+status,0]
 15716                           
 15717                           
 15718                           ;mcc_generated_files/i2c_host/src/mssp2.c: 456:     return SSP2CON2bits.ACKSTAT;
 15719     1758  0024               	movlb	4	; select bank4
 15720     1759  0E1E               	swapf	30,w	;volatile
 15721     175A  0C89               	rrf	9,f
 15722     175B  0C89               	rrf	9,f
 15723     175C  3901               	andlw	1
 15724     175D                     i1l292:
 15725     175D  0008               	return
 15726     175E                     __end_of_I2C2_IsNack:
 15727                           
 15728                           	psect	text57
 15729     1741                     __ptext57:	
 15730 ;; *************** function _I2C2_IsData *****************
 15731 ;; Defined at:
 15732 ;;		line 459 in file "mcc_generated_files/i2c_host/src/mssp2.c"
 15733 ;; Parameters:    Size  Location     Type
 15734 ;;		None
 15735 ;; Auto vars:     Size  Location     Type
 15736 ;;		None
 15737 ;; Return value:  Size  Location     Type
 15738 ;;                  1    wreg      _Bool 
 15739 ;; Registers used:
 15740 ;;		wreg, status,2, status,0
 15741 ;; Tracked objects:
 15742 ;;		On entry : 0/0
 15743 ;;		On exit  : 0/0
 15744 ;;		Unchanged: 0/0
 15745 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 15746 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15747 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15748 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15749 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15750 ;;Total ram usage:        0 bytes
 15751 ;; Hardware stack levels used: 1
 15752 ;; This function calls:
 15753 ;;		Nothing
 15754 ;; This function is called by:
 15755 ;;		_I2C2_EventHandler
 15756 ;; This function uses a non-reentrant model
 15757 ;;
 15758                           
 15759     1741                     _I2C2_IsData:	
 15760                           ;psect for function _I2C2_IsData
 15761                           
 15762     1741                     i1l4607:	
 15763                           ;incstack = 0
 15764                           ; Regs used in _I2C2_IsData: [wreg+status,2+status,0]
 15765                           
 15766                           
 15767                           ;mcc_generated_files/i2c_host/src/mssp2.c: 461:     return (SSP2STATbits.D_nA);
 15768     1741  0024               	movlb	4	; select bank4
 15769     1742  0E1C               	swapf	28,w	;volatile
 15770     1743  0C89               	rrf	9,f
 15771     1744  3901               	andlw	1
 15772     1745                     i1l295:
 15773     1745  0008               	return
 15774     1746                     __end_of_I2C2_IsData:
 15775                           
 15776                           	psect	text58
 15777     1784                     __ptext58:	
 15778 ;; *************** function _I2C2_IsAddr *****************
 15779 ;; Defined at:
 15780 ;;		line 464 in file "mcc_generated_files/i2c_host/src/mssp2.c"
 15781 ;; Parameters:    Size  Location     Type
 15782 ;;		None
 15783 ;; Auto vars:     Size  Location     Type
 15784 ;;		None
 15785 ;; Return value:  Size  Location     Type
 15786 ;;                  1    wreg      _Bool 
 15787 ;; Registers used:
 15788 ;;		wreg, status,0
 15789 ;; Tracked objects:
 15790 ;;		On entry : 0/0
 15791 ;;		On exit  : 0/0
 15792 ;;		Unchanged: 0/0
 15793 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 15794 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15795 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15796 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15797 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15798 ;;Total ram usage:        0 bytes
 15799 ;; Hardware stack levels used: 1
 15800 ;; This function calls:
 15801 ;;		Nothing
 15802 ;; This function is called by:
 15803 ;;		_I2C2_EventHandler
 15804 ;; This function uses a non-reentrant model
 15805 ;;
 15806                           
 15807     1784                     _I2C2_IsAddr:	
 15808                           ;psect for function _I2C2_IsAddr
 15809                           
 15810     1784                     i1l4599:	
 15811                           ;incstack = 0
 15812                           ; Regs used in _I2C2_IsAddr: [wreg+status,0]
 15813                           
 15814                           
 15815                           ;mcc_generated_files/i2c_host/src/mssp2.c: 466:     return !(SSP2STATbits.D_nA);
 15816     1784  1003               	clrc
 15817     1785  0024               	movlb	4	; select bank4
 15818     1786  1E9C               	btfss	28,5	;volatile
 15819     1787  1403               	setc
 15820     1788  3000               	movlw	0
 15821     1789  3D09               	addwfc	9,w
 15822     178A                     i1l298:
 15823     178A  0008               	return
 15824     178B                     __end_of_I2C2_IsAddr:
 15825                           
 15826                           	psect	text59
 15827     1730                     __ptext59:	
 15828 ;; *************** function _I2C2_ERROR_ISR *****************
 15829 ;; Defined at:
 15830 ;;		line 222 in file "mcc_generated_files/i2c_host/src/mssp2.c"
 15831 ;; Parameters:    Size  Location     Type
 15832 ;;		None
 15833 ;; Auto vars:     Size  Location     Type
 15834 ;;		None
 15835 ;; Return value:  Size  Location     Type
 15836 ;;                  1    wreg      void 
 15837 ;; Registers used:
 15838 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 15839 ;; Tracked objects:
 15840 ;;		On entry : 0/0
 15841 ;;		On exit  : 0/0
 15842 ;;		Unchanged: 0/0
 15843 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 15844 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15845 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15846 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15847 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15848 ;;Total ram usage:        0 bytes
 15849 ;; Hardware stack levels used: 1
 15850 ;; Hardware stack levels required when called: 5
 15851 ;; This function calls:
 15852 ;;		_I2C2_ErrorEventHandler
 15853 ;; This function is called by:
 15854 ;;		_INTERRUPT_InterruptManager
 15855 ;; This function uses a non-reentrant model
 15856 ;;
 15857                           
 15858     1730                     _I2C2_ERROR_ISR:	
 15859                           ;psect for function _I2C2_ERROR_ISR
 15860                           
 15861     1730                     i1l5427:	
 15862                           ;incstack = 0
 15863 ;; hardware stack exceeded
 15864                           ; Regs used in _I2C2_ERROR_ISR: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 15865                           
 15866                           
 15867                           ;mcc_generated_files/i2c_host/src/mssp2.c: 224:     I2C2_ErrorEventHandler();
 15868     1730  3189  214C  3197   	fcall	_I2C2_ErrorEventHandler
 15869     1733                     i1l202:
 15870     1733  0008               	return
 15871     1734                     __end_of_I2C2_ERROR_ISR:
 15872                           
 15873                           	psect	text60
 15874     094C                     __ptext60:	
 15875 ;; *************** function _I2C2_ErrorEventHandler *****************
 15876 ;; Defined at:
 15877 ;;		line 282 in file "mcc_generated_files/i2c_host/src/mssp2.c"
 15878 ;; Parameters:    Size  Location     Type
 15879 ;;		None
 15880 ;; Auto vars:     Size  Location     Type
 15881 ;;		None
 15882 ;; Return value:  Size  Location     Type
 15883 ;;                  1    wreg      void 
 15884 ;; Registers used:
 15885 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 15886 ;; Tracked objects:
 15887 ;;		On entry : 0/0
 15888 ;;		On exit  : 0/0
 15889 ;;		Unchanged: 0/0
 15890 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 15891 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15892 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15893 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15894 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15895 ;;Total ram usage:        2 bytes
 15896 ;; Hardware stack levels used: 1
 15897 ;; Hardware stack levels required when called: 4
 15898 ;; This function calls:
 15899 ;;		_I2C2_EVENT_ERROR
 15900 ;;		_I2C2_EVENT_IDLE
 15901 ;;		_I2C2_EVENT_NACK
 15902 ;;		_I2C2_EVENT_RESET
 15903 ;;		_I2C2_EVENT_RX
 15904 ;;		_I2C2_EVENT_SEND_RD_ADDR
 15905 ;;		_I2C2_EVENT_SEND_WR_ADDR
 15906 ;;		_I2C2_EVENT_STOP
 15907 ;;		_I2C2_EVENT_TX
 15908 ;;		_I2C2_ErrorInterruptClear
 15909 ;; This function is called by:
 15910 ;;		_I2C2_ERROR_ISR
 15911 ;; This function uses a non-reentrant model
 15912 ;;
 15913                           
 15914     094C                     _I2C2_ErrorEventHandler:	
 15915                           ;psect for function _I2C2_ErrorEventHandler
 15916                           
 15917     094C                     i1l5191:	
 15918                           ;incstack = 0
 15919 ;; hardware stack exceeded
 15920                           ; Regs used in _I2C2_ErrorEventHandler: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 15921                           
 15922                           
 15923                           ;mcc_generated_files/i2c_host/src/mssp2.c: 284:     i2c2Status.state = I2C_STATE_ERROR;
 15924     094C  3006               	movlw	6
 15925     094D  0020               	movlb	0	; select bank0
 15926     094E  00E2               	movwf	_i2c2Status+13	;volatile
 15927                           
 15928                           ;mcc_generated_files/i2c_host/src/mssp2.c: 285:     i2c2Status.errorState = I2C_ERROR_BU
      +                          S_COLLISION;
 15929     094F  3003               	movlw	3
 15930     0950  00E1               	movwf	_i2c2Status+12	;volatile
 15931     0951                     i1l5193:
 15932                           
 15933                           ;mcc_generated_files/i2c_host/src/mssp2.c: 286:     I2C2_ErrorInterruptClear();
 15934     0951  3197  2702  3189   	fcall	_I2C2_ErrorInterruptClear
 15935     0954                     i1l5195:
 15936                           
 15937                           ;mcc_generated_files/i2c_host/src/mssp2.c: 288:     I2C2_Callback();
 15938     0954  0020               	movlb	0	; select bank0
 15939     0955  0862               	movf	_i2c2Status+13,w	;volatile
 15940     0956  00F2               	movwf	??_I2C2_ErrorEventHandler
 15941     0957  01F3               	clrf	??_I2C2_ErrorEventHandler+1
 15942     0958  35F2               	lslf	??_I2C2_ErrorEventHandler,f
 15943     0959  0DF3               	rlf	??_I2C2_ErrorEventHandler+1,f
 15944     095A  3091               	movlw	low _i2c2_eventTable
 15945     095B  0772               	addwf	??_I2C2_ErrorEventHandler,w
 15946     095C  0084               	movwf	4
 15947     095D  3010               	movlw	high _i2c2_eventTable
 15948     095E  3D73               	addwfc	??_I2C2_ErrorEventHandler+1,w
 15949     095F  3880               	iorlw	128
 15950     0960  0085               	movwf	5
 15951     0961  3F01               	moviw [1]fsr0
 15952     0962  008A               	movwf	10
 15953     0963  3F00               	moviw [0]fsr0
 15954     0964  000A               	callw
 15955     0965  3189               	pagesel	$
 15956     0966  0020               	movlb	0	; select bank0
 15957     0967  00E2               	movwf	_i2c2Status+13	;volatile
 15958     0968                     i1l223:
 15959     0968  0008               	return
 15960     0969                     __end_of_I2C2_ErrorEventHandler:
 15961                           
 15962                           	psect	text61
 15963     177D                     __ptext61:	
 15964 ;; *************** function _I2C2_EVENT_RESET *****************
 15965 ;; Defined at:
 15966 ;;		line 391 in file "mcc_generated_files/i2c_host/src/mssp2.c"
 15967 ;; Parameters:    Size  Location     Type
 15968 ;;		None
 15969 ;; Auto vars:     Size  Location     Type
 15970 ;;		None
 15971 ;; Return value:  Size  Location     Type
 15972 ;;                  1    wreg      enum E6668
 15973 ;; Registers used:
 15974 ;;		wreg, status,2, status,0, pclath, cstack
 15975 ;; Tracked objects:
 15976 ;;		On entry : 0/0
 15977 ;;		On exit  : 0/0
 15978 ;;		Unchanged: 0/0
 15979 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 15980 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15981 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15982 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15983 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15984 ;;Total ram usage:        0 bytes
 15985 ;; Hardware stack levels used: 1
 15986 ;; Hardware stack levels required when called: 1
 15987 ;; This function calls:
 15988 ;;		_I2C2_BusReset
 15989 ;; This function is called by:
 15990 ;;		_I2C2_EVENT_ERROR
 15991 ;;		_I2C2_EventHandler
 15992 ;;		_I2C2_ErrorEventHandler
 15993 ;; This function uses a non-reentrant model
 15994 ;;
 15995                           
 15996     177D                     _I2C2_EVENT_RESET:	
 15997                           ;psect for function _I2C2_EVENT_RESET
 15998                           
 15999     177D                     i1l4481:	
 16000                           ;incstack = 0
 16001                           ; Regs used in _I2C2_EVENT_RESET: [wreg+status,2+status,0+pclath+cstack]
 16002                           
 16003                           
 16004                           ;mcc_generated_files/i2c_host/src/mssp2.c: 393:     I2C2_BusReset();
 16005     177D  3197  2718  3197   	fcall	_I2C2_BusReset
 16006     1780                     i1l4483:
 16007                           
 16008                           ;mcc_generated_files/i2c_host/src/mssp2.c: 394:     i2c2Status.busy = 0;
 16009     1780  0020               	movlb	0	; select bank0
 16010     1781  01D5               	clrf	_i2c2Status	;volatile
 16011     1782                     i1l4485:
 16012                           
 16013                           ;mcc_generated_files/i2c_host/src/mssp2.c: 395:     return I2C_STATE_IDLE;
 16014     1782  3000               	movlw	0
 16015     1783                     i1l259:
 16016     1783  0008               	return
 16017     1784                     __end_of_I2C2_EVENT_RESET:
 16018                           
 16019                           	psect	text62
 16020     1793                     __ptext62:	
 16021 ;; *************** function _I2C2_EVENT_STOP *****************
 16022 ;; Defined at:
 16023 ;;		line 384 in file "mcc_generated_files/i2c_host/src/mssp2.c"
 16024 ;; Parameters:    Size  Location     Type
 16025 ;;		None
 16026 ;; Auto vars:     Size  Location     Type
 16027 ;;		None
 16028 ;; Return value:  Size  Location     Type
 16029 ;;                  1    wreg      enum E6668
 16030 ;; Registers used:
 16031 ;;		wreg, status,2, status,0, pclath, cstack
 16032 ;; Tracked objects:
 16033 ;;		On entry : 0/0
 16034 ;;		On exit  : 0/0
 16035 ;;		Unchanged: 0/0
 16036 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 16037 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16038 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16039 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16040 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16041 ;;Total ram usage:        0 bytes
 16042 ;; Hardware stack levels used: 1
 16043 ;; Hardware stack levels required when called: 2
 16044 ;; This function calls:
 16045 ;;		_I2C2_Close
 16046 ;;		_I2C2_StopSend
 16047 ;; This function is called by:
 16048 ;;		_I2C2_EVENT_TX
 16049 ;;		_I2C2_EVENT_NACK
 16050 ;;		_I2C2_EventHandler
 16051 ;;		_I2C2_ErrorEventHandler
 16052 ;; This function uses a non-reentrant model
 16053 ;;
 16054                           
 16055     1793                     _I2C2_EVENT_STOP:	
 16056                           ;psect for function _I2C2_EVENT_STOP
 16057                           
 16058     1793                     i1l4459:	
 16059                           ;incstack = 0
 16060 ;; hardware stack exceeded
 16061                           ; Regs used in _I2C2_EVENT_STOP: [wreg+status,2+status,0+pclath+cstack]
 16062                           
 16063                           
 16064                           ;mcc_generated_files/i2c_host/src/mssp2.c: 386:     I2C2_StopSend();
 16065     1793  3197  2708  3197   	fcall	_I2C2_StopSend
 16066                           
 16067                           ;mcc_generated_files/i2c_host/src/mssp2.c: 387:     I2C2_Close();
 16068     1796  3188  20DA  3197   	fcall	_I2C2_Close
 16069     1799                     i1l4461:
 16070                           
 16071                           ;mcc_generated_files/i2c_host/src/mssp2.c: 388:     return I2C_STATE_IDLE;
 16072     1799  3000               	movlw	0
 16073     179A                     i1l256:
 16074     179A  0008               	return
 16075     179B                     __end_of_I2C2_EVENT_STOP:
 16076                           
 16077                           	psect	text63
 16078     1752                     __ptext63:	
 16079 ;; *************** function _I2C2_EVENT_ERROR *****************
 16080 ;; Defined at:
 16081 ;;		line 377 in file "mcc_generated_files/i2c_host/src/mssp2.c"
 16082 ;; Parameters:    Size  Location     Type
 16083 ;;		None
 16084 ;; Auto vars:     Size  Location     Type
 16085 ;;  retEventStat    1    0[COMMON] enum E6668
 16086 ;; Return value:  Size  Location     Type
 16087 ;;                  1    wreg      enum E6668
 16088 ;; Registers used:
 16089 ;;		wreg, status,2, status,0, pclath, cstack
 16090 ;; Tracked objects:
 16091 ;;		On entry : 0/0
 16092 ;;		On exit  : 0/0
 16093 ;;		Unchanged: 0/0
 16094 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 16095 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16096 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16097 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16098 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16099 ;;Total ram usage:        1 bytes
 16100 ;; Hardware stack levels used: 1
 16101 ;; Hardware stack levels required when called: 2
 16102 ;; This function calls:
 16103 ;;		_I2C2_EVENT_RESET
 16104 ;; This function is called by:
 16105 ;;		_I2C2_EventHandler
 16106 ;;		_I2C2_ErrorEventHandler
 16107 ;; This function uses a non-reentrant model
 16108 ;;
 16109                           
 16110     1752                     _I2C2_EVENT_ERROR:	
 16111                           ;psect for function _I2C2_EVENT_ERROR
 16112                           
 16113     1752                     i1l4689:	
 16114                           ;incstack = 0
 16115                           ; Regs used in _I2C2_EVENT_ERROR: [wreg+status,2+status,0+pclath+cstack]
 16116                           
 16117     1752                     i1l4691:
 16118                           
 16119                           ;mcc_generated_files/i2c_host/src/mssp2.c: 380:     retEventState = I2C2_EVENT_RESET();
 16120     1752  3197  277D  3197   	fcall	_I2C2_EVENT_RESET
 16121     1755  00F0               	movwf	I2C2_EVENT_ERROR@retEventState
 16122     1756                     i1l4693:
 16123                           
 16124                           ;mcc_generated_files/i2c_host/src/mssp2.c: 381:     return retEventState;
 16125     1756  0870               	movf	I2C2_EVENT_ERROR@retEventState,w
 16126     1757                     i1l253:
 16127     1757  0008               	return
 16128     1758                     __end_of_I2C2_EVENT_ERROR:
 16129                           
 16130                           	psect	text64
 16131     174C                     __ptext64:	
 16132 ;; *************** function _I2C2_EVENT_NACK *****************
 16133 ;; Defined at:
 16134 ;;		line 370 in file "mcc_generated_files/i2c_host/src/mssp2.c"
 16135 ;; Parameters:    Size  Location     Type
 16136 ;;		None
 16137 ;; Auto vars:     Size  Location     Type
 16138 ;;  retEventStat    1    0[COMMON] enum E6668
 16139 ;; Return value:  Size  Location     Type
 16140 ;;                  1    wreg      enum E6668
 16141 ;; Registers used:
 16142 ;;		wreg, status,2, status,0, pclath, cstack
 16143 ;; Tracked objects:
 16144 ;;		On entry : 0/0
 16145 ;;		On exit  : 0/0
 16146 ;;		Unchanged: 0/0
 16147 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 16148 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16149 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16150 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16151 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16152 ;;Total ram usage:        1 bytes
 16153 ;; Hardware stack levels used: 1
 16154 ;; Hardware stack levels required when called: 3
 16155 ;; This function calls:
 16156 ;;		_I2C2_EVENT_STOP
 16157 ;; This function is called by:
 16158 ;;		_I2C2_EventHandler
 16159 ;;		_I2C2_ErrorEventHandler
 16160 ;; This function uses a non-reentrant model
 16161 ;;
 16162                           
 16163     174C                     _I2C2_EVENT_NACK:	
 16164                           ;psect for function _I2C2_EVENT_NACK
 16165                           
 16166     174C                     i1l4681:	
 16167                           ;incstack = 0
 16168 ;; hardware stack exceeded
 16169                           ; Regs used in _I2C2_EVENT_NACK: [wreg+status,2+status,0+pclath+cstack]
 16170                           
 16171     174C                     i1l4683:
 16172                           
 16173                           ;mcc_generated_files/i2c_host/src/mssp2.c: 373:     retEventState = I2C2_EVENT_STOP();
 16174     174C  3197  2793  3197   	fcall	_I2C2_EVENT_STOP
 16175     174F  00F0               	movwf	I2C2_EVENT_NACK@retEventState
 16176     1750                     i1l4685:
 16177                           
 16178                           ;mcc_generated_files/i2c_host/src/mssp2.c: 374:     return retEventState;
 16179     1750  0870               	movf	I2C2_EVENT_NACK@retEventState,w
 16180     1751                     i1l250:
 16181     1751  0008               	return
 16182     1752                     __end_of_I2C2_EVENT_NACK:
 16183                           
 16184                           	psect	text65
 16185     0B1C                     __ptext65:	
 16186 ;; *************** function _I2C2_EVENT_RX *****************
 16187 ;; Defined at:
 16188 ;;		line 337 in file "mcc_generated_files/i2c_host/src/mssp2.c"
 16189 ;; Parameters:    Size  Location     Type
 16190 ;;		None
 16191 ;; Auto vars:     Size  Location     Type
 16192 ;;  retEventStat    1    0[COMMON] enum E6668
 16193 ;; Return value:  Size  Location     Type
 16194 ;;                  1    wreg      enum E6668
 16195 ;; Registers used:
 16196 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 16197 ;; Tracked objects:
 16198 ;;		On entry : 0/0
 16199 ;;		On exit  : 0/0
 16200 ;;		Unchanged: 0/0
 16201 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 16202 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16203 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16204 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16205 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16206 ;;Total ram usage:        1 bytes
 16207 ;; Hardware stack levels used: 1
 16208 ;; Hardware stack levels required when called: 1
 16209 ;; This function calls:
 16210 ;;		_I2C2_AckSend
 16211 ;;		_I2C2_DataReceive
 16212 ;;		_I2C2_IsRxBufFull
 16213 ;;		_I2C2_NackSend
 16214 ;;		_I2C2_ReceiveEnable
 16215 ;;		_I2C2_RestartDisable
 16216 ;; This function is called by:
 16217 ;;		_I2C2_EventHandler
 16218 ;;		_I2C2_ErrorEventHandler
 16219 ;; This function uses a non-reentrant model
 16220 ;;
 16221                           
 16222     0B1C                     _I2C2_EVENT_RX:	
 16223                           ;psect for function _I2C2_EVENT_RX
 16224                           
 16225     0B1C                     i1l4655:	
 16226                           ;incstack = 0
 16227                           ; Regs used in _I2C2_EVENT_RX: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
 16228                           
 16229                           
 16230                           ;mcc_generated_files/i2c_host/src/mssp2.c: 339:     i2c_host_event_states_t retEventStat
      +                          e = I2C_STATE_RX;
 16231     0B1C  3004               	movlw	4
 16232     0B1D  00F0               	movwf	I2C2_EVENT_RX@retEventState
 16233     0B1E                     i1l4657:
 16234                           
 16235                           ;mcc_generated_files/i2c_host/src/mssp2.c: 341:     if (I2C2_IsRxBufFull())
 16236     0B1E  3197  2724  318B   	fcall	_I2C2_IsRxBufFull
 16237     0B21  3A00               	xorlw	0
 16238     0B22  1903               	skipnz
 16239     0B23  2B25               	goto	u357_21
 16240     0B24  2B26               	goto	u357_20
 16241     0B25                     u357_21:
 16242     0B25  2B51               	goto	i1l4675
 16243     0B26                     u357_20:
 16244     0B26                     i1l4659:
 16245                           
 16246                           ;mcc_generated_files/i2c_host/src/mssp2.c: 342:     {;mcc_generated_files/i2c_host/src/m
      +                          ssp2.c: 343:         if (i2c2Status.readLength > 0U)
 16247     0B26  0020               	movlb	0	; select bank0
 16248     0B27  085E               	movf	_i2c2Status+9,w	;volatile
 16249     0B28  045F               	iorwf	_i2c2Status+10,w	;volatile
 16250     0B29  1903               	btfsc	3,2
 16251     0B2A  2B2C               	goto	u358_21
 16252     0B2B  2B2D               	goto	u358_20
 16253     0B2C                     u358_21:
 16254     0B2C  2B3E               	goto	i1l4667
 16255     0B2D                     u358_20:
 16256     0B2D                     i1l4661:
 16257                           
 16258                           ;mcc_generated_files/i2c_host/src/mssp2.c: 344:         {;mcc_generated_files/i2c_host/s
      +                          rc/mssp2.c: 345:             *i2c2Status.readPtr = I2C2_DataReceive();
 16259     0B2D  085C               	movf	_i2c2Status+7,w	;volatile
 16260     0B2E  0086               	movwf	6
 16261     0B2F  085D               	movf	_i2c2Status+8,w	;volatile
 16262     0B30  0087               	movwf	7
 16263     0B31  3197  270B  318B   	fcall	_I2C2_DataReceive
 16264     0B34  0081               	movwf	1
 16265     0B35                     i1l4663:
 16266                           
 16267                           ;mcc_generated_files/i2c_host/src/mssp2.c: 346:             i2c2Status.readPtr++;
 16268     0B35  3001               	movlw	1
 16269     0B36  0020               	movlb	0	; select bank0
 16270     0B37  07DC               	addwf	_i2c2Status+7,f	;volatile
 16271     0B38  3000               	movlw	0
 16272     0B39  3DDD               	addwfc	_i2c2Status+8,f	;volatile
 16273     0B3A                     i1l4665:
 16274                           
 16275                           ;mcc_generated_files/i2c_host/src/mssp2.c: 347:             i2c2Status.readLength--;
 16276     0B3A  3001               	movlw	1
 16277     0B3B  02DE               	subwf	_i2c2Status+9,f	;volatile
 16278     0B3C  3000               	movlw	0
 16279     0B3D  3BDF               	subwfb	_i2c2Status+10,f	;volatile
 16280     0B3E                     i1l4667:
 16281                           
 16282                           ;mcc_generated_files/i2c_host/src/mssp2.c: 351:         if (i2c2Status.readLength > 0U)
 16283     0B3E  085E               	movf	_i2c2Status+9,w	;volatile
 16284     0B3F  045F               	iorwf	_i2c2Status+10,w	;volatile
 16285     0B40  1903               	btfsc	3,2
 16286     0B41  2B43               	goto	u359_21
 16287     0B42  2B44               	goto	u359_20
 16288     0B43                     u359_21:
 16289     0B43  2B48               	goto	i1l4671
 16290     0B44                     u359_20:
 16291     0B44                     i1l4669:
 16292                           
 16293                           ;mcc_generated_files/i2c_host/src/mssp2.c: 352:         {;mcc_generated_files/i2c_host/s
      +                          rc/mssp2.c: 353:             I2C2_AckSend();
 16294     0B44  3197  2720  318B   	fcall	_I2C2_AckSend
 16295                           
 16296                           ;mcc_generated_files/i2c_host/src/mssp2.c: 354:         }
 16297     0B47  2B54               	goto	i1l4677
 16298     0B48                     i1l4671:
 16299                           
 16300                           ;mcc_generated_files/i2c_host/src/mssp2.c: 356:         {;mcc_generated_files/i2c_host/s
      +                          rc/mssp2.c: 357:             I2C2_RestartDisable();
 16301     0B48  3197  2711  318B   	fcall	_I2C2_RestartDisable
 16302                           
 16303                           ;mcc_generated_files/i2c_host/src/mssp2.c: 358:             I2C2_NackSend();
 16304     0B4B  3197  2728  318B   	fcall	_I2C2_NackSend
 16305     0B4E                     i1l4673:
 16306                           
 16307                           ;mcc_generated_files/i2c_host/src/mssp2.c: 359:             retEventState = I2C_STATE_ST
      +                          OP;
 16308     0B4E  3007               	movlw	7
 16309     0B4F  00F0               	movwf	I2C2_EVENT_RX@retEventState
 16310     0B50  2B54               	goto	i1l4677
 16311     0B51                     i1l4675:
 16312                           
 16313                           ;mcc_generated_files/i2c_host/src/mssp2.c: 364:     {;mcc_generated_files/i2c_host/src/m
      +                          ssp2.c: 365:         I2C2_ReceiveEnable();
 16314     0B51  3197  270E  318B   	fcall	_I2C2_ReceiveEnable
 16315     0B54                     i1l4677:
 16316                           
 16317                           ;mcc_generated_files/i2c_host/src/mssp2.c: 367:     return retEventState;
 16318     0B54  0870               	movf	I2C2_EVENT_RX@retEventState,w
 16319     0B55                     i1l247:
 16320     0B55  0008               	return
 16321     0B56                     __end_of_I2C2_EVENT_RX:
 16322                           
 16323                           	psect	text66
 16324     1776                     __ptext66:	
 16325 ;; *************** function _I2C2_EVENT_SEND_WR_ADDR *****************
 16326 ;; Defined at:
 16327 ;;		line 304 in file "mcc_generated_files/i2c_host/src/mssp2.c"
 16328 ;; Parameters:    Size  Location     Type
 16329 ;;		None
 16330 ;; Auto vars:     Size  Location     Type
 16331 ;;		None
 16332 ;; Return value:  Size  Location     Type
 16333 ;;                  1    wreg      enum E6668
 16334 ;; Registers used:
 16335 ;;		wreg, status,2, status,0, pclath, cstack
 16336 ;; Tracked objects:
 16337 ;;		On entry : 0/0
 16338 ;;		On exit  : 0/0
 16339 ;;		Unchanged: 0/0
 16340 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 16341 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16342 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16343 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16344 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16345 ;;Total ram usage:        0 bytes
 16346 ;; Hardware stack levels used: 1
 16347 ;; Hardware stack levels required when called: 1
 16348 ;; This function calls:
 16349 ;;		_I2C2_DataTransmit
 16350 ;; This function is called by:
 16351 ;;		_I2C2_EventHandler
 16352 ;;		_I2C2_ErrorEventHandler
 16353 ;; This function uses a non-reentrant model
 16354 ;;
 16355                           
 16356     1776                     _I2C2_EVENT_SEND_WR_ADDR:	
 16357                           ;psect for function _I2C2_EVENT_SEND_WR_ADDR
 16358                           
 16359     1776                     i1l4623:	
 16360                           ;incstack = 0
 16361                           ; Regs used in _I2C2_EVENT_SEND_WR_ADDR: [wreg+status,2+status,0+pclath+cstack]
 16362                           
 16363                           
 16364                           ;mcc_generated_files/i2c_host/src/mssp2.c: 306:     I2C2_DataTransmit((uint8_t) (i2c2Sta
      +                          tus.address << 1));
 16365     1776  0020               	movlb	0	; select bank0
 16366     1777  3556               	lslf	_i2c2Status+1,w	;volatile
 16367     1778  3197  273C  3197   	fcall	_I2C2_DataTransmit
 16368     177B                     i1l4625:
 16369                           
 16370                           ;mcc_generated_files/i2c_host/src/mssp2.c: 307:     return I2C_STATE_TX;
 16371     177B  3003               	movlw	3
 16372     177C                     i1l232:
 16373     177C  0008               	return
 16374     177D                     __end_of_I2C2_EVENT_SEND_WR_ADDR:
 16375                           
 16376                           	psect	text67
 16377     178B                     __ptext67:	
 16378 ;; *************** function _I2C2_EVENT_SEND_RD_ADDR *****************
 16379 ;; Defined at:
 16380 ;;		line 298 in file "mcc_generated_files/i2c_host/src/mssp2.c"
 16381 ;; Parameters:    Size  Location     Type
 16382 ;;		None
 16383 ;; Auto vars:     Size  Location     Type
 16384 ;;		None
 16385 ;; Return value:  Size  Location     Type
 16386 ;;                  1    wreg      enum E6668
 16387 ;; Registers used:
 16388 ;;		wreg, status,2, status,0, pclath, cstack
 16389 ;; Tracked objects:
 16390 ;;		On entry : 0/0
 16391 ;;		On exit  : 0/0
 16392 ;;		Unchanged: 0/0
 16393 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 16394 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16395 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16396 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16397 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16398 ;;Total ram usage:        0 bytes
 16399 ;; Hardware stack levels used: 1
 16400 ;; Hardware stack levels required when called: 1
 16401 ;; This function calls:
 16402 ;;		_I2C2_DataTransmit
 16403 ;; This function is called by:
 16404 ;;		_I2C2_EventHandler
 16405 ;;		_I2C2_ErrorEventHandler
 16406 ;; This function uses a non-reentrant model
 16407 ;;
 16408                           
 16409     178B                     _I2C2_EVENT_SEND_RD_ADDR:	
 16410                           ;psect for function _I2C2_EVENT_SEND_RD_ADDR
 16411                           
 16412     178B                     i1l4617:	
 16413                           ;incstack = 0
 16414                           ; Regs used in _I2C2_EVENT_SEND_RD_ADDR: [wreg+status,2+status,0+pclath+cstack]
 16415                           
 16416                           
 16417                           ;mcc_generated_files/i2c_host/src/mssp2.c: 300:     I2C2_DataTransmit((uint8_t) ((i2c2St
      +                          atus.address << 1) | 1U));
 16418     178B  1403               	setc
 16419     178C  0020               	movlb	0	; select bank0
 16420     178D  0D56               	rlf	_i2c2Status+1,w	;volatile
 16421     178E  3197  273C  3197   	fcall	_I2C2_DataTransmit
 16422     1791                     i1l4619:
 16423                           
 16424                           ;mcc_generated_files/i2c_host/src/mssp2.c: 301:     return I2C_STATE_RX;
 16425     1791  3004               	movlw	4
 16426     1792                     i1l229:
 16427     1792  0008               	return
 16428     1793                     __end_of_I2C2_EVENT_SEND_RD_ADDR:
 16429                           
 16430                           	psect	text68
 16431     172C                     __ptext68:	
 16432 ;; *************** function _I2C2_EVENT_IDLE *****************
 16433 ;; Defined at:
 16434 ;;		line 292 in file "mcc_generated_files/i2c_host/src/mssp2.c"
 16435 ;; Parameters:    Size  Location     Type
 16436 ;;		None
 16437 ;; Auto vars:     Size  Location     Type
 16438 ;;		None
 16439 ;; Return value:  Size  Location     Type
 16440 ;;                  1    wreg      enum E6668
 16441 ;; Registers used:
 16442 ;;		wreg, status,2
 16443 ;; Tracked objects:
 16444 ;;		On entry : 0/0
 16445 ;;		On exit  : 0/0
 16446 ;;		Unchanged: 0/0
 16447 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 16448 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16449 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16450 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16451 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16452 ;;Total ram usage:        0 bytes
 16453 ;; Hardware stack levels used: 1
 16454 ;; This function calls:
 16455 ;;		Nothing
 16456 ;; This function is called by:
 16457 ;;		_I2C2_EventHandler
 16458 ;;		_I2C2_ErrorEventHandler
 16459 ;; This function uses a non-reentrant model
 16460 ;;
 16461                           
 16462     172C                     _I2C2_EVENT_IDLE:	
 16463                           ;psect for function _I2C2_EVENT_IDLE
 16464                           
 16465     172C                     i1l4611:	
 16466                           ;incstack = 0
 16467                           ; Regs used in _I2C2_EVENT_IDLE: [wreg+status,2]
 16468                           
 16469                           
 16470                           ;mcc_generated_files/i2c_host/src/mssp2.c: 294:     i2c2Status.busy = 0;
 16471     172C  0020               	movlb	0	; select bank0
 16472     172D  01D5               	clrf	_i2c2Status	;volatile
 16473     172E                     i1l4613:
 16474                           
 16475                           ;mcc_generated_files/i2c_host/src/mssp2.c: 295:     return I2C_STATE_RESET;
 16476     172E  3008               	movlw	8
 16477     172F                     i1l226:
 16478     172F  0008               	return
 16479     1730                     __end_of_I2C2_EVENT_IDLE:
 16480                           
 16481                           	psect	text69
 16482     0A24                     __ptext69:	
 16483 ;; *************** function _I2C2_EVENT_TX *****************
 16484 ;; Defined at:
 16485 ;;		line 310 in file "mcc_generated_files/i2c_host/src/mssp2.c"
 16486 ;; Parameters:    Size  Location     Type
 16487 ;;		None
 16488 ;; Auto vars:     Size  Location     Type
 16489 ;;  retEventStat    1    1[COMMON] enum E6668
 16490 ;; Return value:  Size  Location     Type
 16491 ;;                  1    wreg      enum E6668
 16492 ;; Registers used:
 16493 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 16494 ;; Tracked objects:
 16495 ;;		On entry : 0/0
 16496 ;;		On exit  : 0/0
 16497 ;;		Unchanged: 0/0
 16498 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 16499 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16500 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16501 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16502 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16503 ;;Total ram usage:        1 bytes
 16504 ;; Hardware stack levels used: 1
 16505 ;; Hardware stack levels required when called: 3
 16506 ;; This function calls:
 16507 ;;		_I2C2_DataTransmit
 16508 ;;		_I2C2_EVENT_STOP
 16509 ;;		_I2C2_RestartEnable
 16510 ;; This function is called by:
 16511 ;;		_I2C2_EventHandler
 16512 ;;		_I2C2_ErrorEventHandler
 16513 ;; This function uses a non-reentrant model
 16514 ;;
 16515                           
 16516     0A24                     _I2C2_EVENT_TX:	
 16517                           ;psect for function _I2C2_EVENT_TX
 16518                           
 16519     0A24                     i1l4629:	
 16520                           ;incstack = 0
 16521 ;; hardware stack exceeded
 16522                           ; Regs used in _I2C2_EVENT_TX: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
 16523                           
 16524     0A24                     i1l4631:
 16525                           
 16526                           ;mcc_generated_files/i2c_host/src/mssp2.c: 313:     if (0U != i2c2Status.writeLength)
 16527     0A24  0020               	movlb	0	; select bank0
 16528     0A25  085A               	movf	_i2c2Status+5,w	;volatile
 16529     0A26  045B               	iorwf	_i2c2Status+6,w	;volatile
 16530     0A27  1903               	btfsc	3,2
 16531     0A28  2A2A               	goto	u355_21
 16532     0A29  2A2B               	goto	u355_20
 16533     0A2A                     u355_21:
 16534     0A2A  2A3F               	goto	i1l4641
 16535     0A2B                     u355_20:
 16536     0A2B                     i1l4633:
 16537                           
 16538                           ;mcc_generated_files/i2c_host/src/mssp2.c: 314:     {;mcc_generated_files/i2c_host/src/m
      +                          ssp2.c: 315:         i2c2Status.writeLength--;
 16539     0A2B  3001               	movlw	1
 16540     0A2C  02DA               	subwf	_i2c2Status+5,f	;volatile
 16541     0A2D  3000               	movlw	0
 16542     0A2E  3BDB               	subwfb	_i2c2Status+6,f	;volatile
 16543     0A2F                     i1l4635:
 16544                           
 16545                           ;mcc_generated_files/i2c_host/src/mssp2.c: 316:         I2C2_DataTransmit(*i2c2Status.wr
      +                          itePtr);
 16546     0A2F  0858               	movf	_i2c2Status+3,w	;volatile
 16547     0A30  0086               	movwf	6
 16548     0A31  0859               	movf	_i2c2Status+4,w	;volatile
 16549     0A32  0087               	movwf	7
 16550     0A33  0801               	movf	1,w
 16551     0A34  3197  273C  318A   	fcall	_I2C2_DataTransmit
 16552     0A37                     i1l4637:
 16553                           
 16554                           ;mcc_generated_files/i2c_host/src/mssp2.c: 317:         i2c2Status.writePtr++;
 16555     0A37  3001               	movlw	1
 16556     0A38  0020               	movlb	0	; select bank0
 16557     0A39  07D8               	addwf	_i2c2Status+3,f	;volatile
 16558     0A3A  3000               	movlw	0
 16559     0A3B  3DD9               	addwfc	_i2c2Status+4,f	;volatile
 16560     0A3C                     i1l4639:
 16561                           
 16562                           ;mcc_generated_files/i2c_host/src/mssp2.c: 318:         retEventState = I2C_STATE_TX;
 16563     0A3C  3003               	movlw	3
 16564     0A3D  00F1               	movwf	I2C2_EVENT_TX@retEventState
 16565                           
 16566                           ;mcc_generated_files/i2c_host/src/mssp2.c: 319:     }
 16567     0A3E  2A4F               	goto	i1l4651
 16568     0A3F                     i1l4641:
 16569                           
 16570                           ;mcc_generated_files/i2c_host/src/mssp2.c: 321:     {;mcc_generated_files/i2c_host/src/m
      +                          ssp2.c: 322:         if (i2c2Status.switchToRead)
 16571     0A3F  0860               	movf	_i2c2Status+11,w	;volatile
 16572     0A40  1903               	btfsc	3,2
 16573     0A41  2A43               	goto	u356_21
 16574     0A42  2A44               	goto	u356_20
 16575     0A43                     u356_21:
 16576     0A43  2A4B               	goto	i1l4649
 16577     0A44                     u356_20:
 16578     0A44                     i1l4643:
 16579                           
 16580                           ;mcc_generated_files/i2c_host/src/mssp2.c: 323:         {;mcc_generated_files/i2c_host/s
      +                          rc/mssp2.c: 324:             i2c2Status.switchToRead = 0;
 16581     0A44  01E0               	clrf	_i2c2Status+11	;volatile
 16582     0A45                     i1l4645:
 16583                           
 16584                           ;mcc_generated_files/i2c_host/src/mssp2.c: 325:             I2C2_RestartEnable();
 16585     0A45  3188  2000  318A   	fcall	_I2C2_RestartEnable
 16586     0A48                     i1l4647:
 16587                           
 16588                           ;mcc_generated_files/i2c_host/src/mssp2.c: 326:             retEventState = I2C_STATE_SE
      +                          ND_RD_ADDR;
 16589     0A48  3001               	movlw	1
 16590     0A49  00F1               	movwf	I2C2_EVENT_TX@retEventState
 16591                           
 16592                           ;mcc_generated_files/i2c_host/src/mssp2.c: 327:         }
 16593     0A4A  2A4F               	goto	i1l4651
 16594     0A4B                     i1l4649:
 16595                           
 16596                           ;mcc_generated_files/i2c_host/src/mssp2.c: 329:         {;mcc_generated_files/i2c_host/s
      +                          rc/mssp2.c: 330:             retEventState = I2C2_EVENT_STOP();
 16597     0A4B  3197  2793  318A   	fcall	_I2C2_EVENT_STOP
 16598     0A4E  00F1               	movwf	I2C2_EVENT_TX@retEventState
 16599     0A4F                     i1l4651:
 16600                           
 16601                           ;mcc_generated_files/i2c_host/src/mssp2.c: 334:     return retEventState;
 16602     0A4F  0871               	movf	I2C2_EVENT_TX@retEventState,w
 16603     0A50                     i1l239:
 16604     0A50  0008               	return
 16605     0A51                     __end_of_I2C2_EVENT_TX:
 16606                           
 16607                           	psect	text70
 16608     0800                     __ptext70:	
 16609 ;; *************** function _I2C2_RestartEnable *****************
 16610 ;; Defined at:
 16611 ;;		line 422 in file "mcc_generated_files/i2c_host/src/mssp2.c"
 16612 ;; Parameters:    Size  Location     Type
 16613 ;;		None
 16614 ;; Auto vars:     Size  Location     Type
 16615 ;;		None
 16616 ;; Return value:  Size  Location     Type
 16617 ;;                  1    wreg      void 
 16618 ;; Registers used:
 16619 ;;		None
 16620 ;; Tracked objects:
 16621 ;;		On entry : 0/0
 16622 ;;		On exit  : 0/0
 16623 ;;		Unchanged: 0/0
 16624 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 16625 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16626 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16627 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16628 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16629 ;;Total ram usage:        0 bytes
 16630 ;; Hardware stack levels used: 1
 16631 ;; This function calls:
 16632 ;;		Nothing
 16633 ;; This function is called by:
 16634 ;;		_I2C2_EVENT_TX
 16635 ;; This function uses a non-reentrant model
 16636 ;;
 16637                           
 16638     0800                     _I2C2_RestartEnable:	
 16639                           ;psect for function _I2C2_RestartEnable
 16640                           
 16641     0800                     i1l4457:	
 16642                           ;incstack = 0
 16643                           ; Regs used in _I2C2_RestartEnable: []
 16644                           
 16645                           
 16646                           ;mcc_generated_files/i2c_host/src/mssp2.c: 424:     SSP2CON2bits.RSEN = 1;
 16647     0800  0024               	movlb	4	; select bank4
 16648     0801  149E               	bsf	30,1	;volatile
 16649     0802                     i1l274:
 16650     0802  0008               	return
 16651     0803                     __end_of_I2C2_RestartEnable:
 16652                           
 16653                           	psect	text71
 16654     173C                     __ptext71:	
 16655 ;; *************** function _I2C2_DataTransmit *****************
 16656 ;; Defined at:
 16657 ;;		line 406 in file "mcc_generated_files/i2c_host/src/mssp2.c"
 16658 ;; Parameters:    Size  Location     Type
 16659 ;;  data            1    wreg     unsigned char 
 16660 ;; Auto vars:     Size  Location     Type
 16661 ;;  data            1    0[COMMON] unsigned char 
 16662 ;; Return value:  Size  Location     Type
 16663 ;;                  1    wreg      void 
 16664 ;; Registers used:
 16665 ;;		wreg
 16666 ;; Tracked objects:
 16667 ;;		On entry : 0/0
 16668 ;;		On exit  : 0/0
 16669 ;;		Unchanged: 0/0
 16670 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 16671 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16672 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16673 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16674 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16675 ;;Total ram usage:        1 bytes
 16676 ;; Hardware stack levels used: 1
 16677 ;; This function calls:
 16678 ;;		Nothing
 16679 ;; This function is called by:
 16680 ;;		_I2C2_EVENT_SEND_RD_ADDR
 16681 ;;		_I2C2_EVENT_SEND_WR_ADDR
 16682 ;;		_I2C2_EVENT_TX
 16683 ;; This function uses a non-reentrant model
 16684 ;;
 16685                           
 16686     173C                     _I2C2_DataTransmit:	
 16687                           ;psect for function _I2C2_DataTransmit
 16688                           
 16689                           
 16690                           ;incstack = 0
 16691                           ; Regs used in _I2C2_DataTransmit: [wreg]
 16692                           ;I2C2_DataTransmit@data stored from wreg
 16693     173C  00F0               	movwf	I2C2_DataTransmit@data
 16694     173D                     i1l4455:
 16695                           
 16696                           ;mcc_generated_files/i2c_host/src/mssp2.c: 406: static void I2C2_DataTransmit(uint8_t da
      +                          ta);mcc_generated_files/i2c_host/src/mssp2.c: 407: {;mcc_generated_files/i2c_host/src/ms
      +                          sp2.c: 408:     SSP2BUF = data;
 16697     173D  0870               	movf	I2C2_DataTransmit@data,w
 16698     173E  0024               	movlb	4	; select bank4
 16699     173F  0099               	movwf	25	;volatile
 16700     1740                     i1l265:
 16701     1740  0008               	return
 16702     1741                     __end_of_I2C2_DataTransmit:
 16703                           
 16704                           	psect	text72
 16705     1711                     __ptext72:	
 16706 ;; *************** function _I2C2_RestartDisable *****************
 16707 ;; Defined at:
 16708 ;;		line 427 in file "mcc_generated_files/i2c_host/src/mssp2.c"
 16709 ;; Parameters:    Size  Location     Type
 16710 ;;		None
 16711 ;; Auto vars:     Size  Location     Type
 16712 ;;		None
 16713 ;; Return value:  Size  Location     Type
 16714 ;;                  1    wreg      void 
 16715 ;; Registers used:
 16716 ;;		None
 16717 ;; Tracked objects:
 16718 ;;		On entry : 0/0
 16719 ;;		On exit  : 0/0
 16720 ;;		Unchanged: 0/0
 16721 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 16722 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16723 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16724 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16725 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16726 ;;Total ram usage:        0 bytes
 16727 ;; Hardware stack levels used: 1
 16728 ;; This function calls:
 16729 ;;		Nothing
 16730 ;; This function is called by:
 16731 ;;		_I2C2_EVENT_RX
 16732 ;; This function uses a non-reentrant model
 16733 ;;
 16734                           
 16735     1711                     _I2C2_RestartDisable:	
 16736                           ;psect for function _I2C2_RestartDisable
 16737                           
 16738     1711                     i1l4475:	
 16739                           ;incstack = 0
 16740                           ; Regs used in _I2C2_RestartDisable: []
 16741                           
 16742                           
 16743                           ;mcc_generated_files/i2c_host/src/mssp2.c: 429:     SSP2CON2bits.RSEN = 0;
 16744     1711  0024               	movlb	4	; select bank4
 16745     1712  109E               	bcf	30,1	;volatile
 16746     1713                     i1l277:
 16747     1713  0008               	return
 16748     1714                     __end_of_I2C2_RestartDisable:
 16749                           
 16750                           	psect	text73
 16751     170E                     __ptext73:	
 16752 ;; *************** function _I2C2_ReceiveEnable *****************
 16753 ;; Defined at:
 16754 ;;		line 417 in file "mcc_generated_files/i2c_host/src/mssp2.c"
 16755 ;; Parameters:    Size  Location     Type
 16756 ;;		None
 16757 ;; Auto vars:     Size  Location     Type
 16758 ;;		None
 16759 ;; Return value:  Size  Location     Type
 16760 ;;                  1    wreg      void 
 16761 ;; Registers used:
 16762 ;;		None
 16763 ;; Tracked objects:
 16764 ;;		On entry : 0/0
 16765 ;;		On exit  : 0/0
 16766 ;;		Unchanged: 0/0
 16767 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 16768 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16769 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16770 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16771 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16772 ;;Total ram usage:        0 bytes
 16773 ;; Hardware stack levels used: 1
 16774 ;; This function calls:
 16775 ;;		Nothing
 16776 ;; This function is called by:
 16777 ;;		_I2C2_EVENT_RX
 16778 ;; This function uses a non-reentrant model
 16779 ;;
 16780                           
 16781     170E                     _I2C2_ReceiveEnable:	
 16782                           ;psect for function _I2C2_ReceiveEnable
 16783                           
 16784     170E                     i1l4479:	
 16785                           ;incstack = 0
 16786                           ; Regs used in _I2C2_ReceiveEnable: []
 16787                           
 16788                           
 16789                           ;mcc_generated_files/i2c_host/src/mssp2.c: 419:     SSP2CON2bits.RCEN = 1;
 16790     170E  0024               	movlb	4	; select bank4
 16791     170F  159E               	bsf	30,3	;volatile
 16792     1710                     i1l271:
 16793     1710  0008               	return
 16794     1711                     __end_of_I2C2_ReceiveEnable:
 16795                           
 16796                           	psect	text74
 16797     1728                     __ptext74:	
 16798 ;; *************** function _I2C2_NackSend *****************
 16799 ;; Defined at:
 16800 ;;		line 448 in file "mcc_generated_files/i2c_host/src/mssp2.c"
 16801 ;; Parameters:    Size  Location     Type
 16802 ;;		None
 16803 ;; Auto vars:     Size  Location     Type
 16804 ;;		None
 16805 ;; Return value:  Size  Location     Type
 16806 ;;                  1    wreg      void 
 16807 ;; Registers used:
 16808 ;;		None
 16809 ;; Tracked objects:
 16810 ;;		On entry : 0/0
 16811 ;;		On exit  : 0/0
 16812 ;;		Unchanged: 0/0
 16813 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 16814 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16815 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16816 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16817 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16818 ;;Total ram usage:        0 bytes
 16819 ;; Hardware stack levels used: 1
 16820 ;; This function calls:
 16821 ;;		Nothing
 16822 ;; This function is called by:
 16823 ;;		_I2C2_EVENT_RX
 16824 ;; This function uses a non-reentrant model
 16825 ;;
 16826                           
 16827     1728                     _I2C2_NackSend:	
 16828                           ;psect for function _I2C2_NackSend
 16829                           
 16830     1728                     i1l4477:	
 16831                           ;incstack = 0
 16832                           ; Regs used in _I2C2_NackSend: []
 16833                           
 16834                           
 16835                           ;mcc_generated_files/i2c_host/src/mssp2.c: 450:     SSP2CON2bits.ACKDT = 1;
 16836     1728  0024               	movlb	4	; select bank4
 16837     1729  169E               	bsf	30,5	;volatile
 16838                           
 16839                           ;mcc_generated_files/i2c_host/src/mssp2.c: 451:     SSP2CON2bits.ACKEN = 1;
 16840     172A  161E               	bsf	30,4	;volatile
 16841     172B                     i1l289:
 16842     172B  0008               	return
 16843     172C                     __end_of_I2C2_NackSend:
 16844                           
 16845                           	psect	text75
 16846     1724                     __ptext75:	
 16847 ;; *************** function _I2C2_IsRxBufFull *****************
 16848 ;; Defined at:
 16849 ;;		line 469 in file "mcc_generated_files/i2c_host/src/mssp2.c"
 16850 ;; Parameters:    Size  Location     Type
 16851 ;;		None
 16852 ;; Auto vars:     Size  Location     Type
 16853 ;;		None
 16854 ;; Return value:  Size  Location     Type
 16855 ;;                  1    wreg      _Bool 
 16856 ;; Registers used:
 16857 ;;		wreg, status,2, status,0
 16858 ;; Tracked objects:
 16859 ;;		On entry : 0/0
 16860 ;;		On exit  : 0/0
 16861 ;;		Unchanged: 0/0
 16862 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 16863 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16864 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16865 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16866 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16867 ;;Total ram usage:        0 bytes
 16868 ;; Hardware stack levels used: 1
 16869 ;; This function calls:
 16870 ;;		Nothing
 16871 ;; This function is called by:
 16872 ;;		_I2C2_EVENT_RX
 16873 ;; This function uses a non-reentrant model
 16874 ;;
 16875                           
 16876     1724                     _I2C2_IsRxBufFull:	
 16877                           ;psect for function _I2C2_IsRxBufFull
 16878                           
 16879     1724                     i1l4465:	
 16880                           ;incstack = 0
 16881                           ; Regs used in _I2C2_IsRxBufFull: [wreg+status,2+status,0]
 16882                           
 16883                           
 16884                           ;mcc_generated_files/i2c_host/src/mssp2.c: 471:     return SSP2STATbits.BF;
 16885     1724  0024               	movlb	4	; select bank4
 16886     1725  081C               	movf	28,w	;volatile
 16887     1726  3901               	andlw	1
 16888     1727                     i1l301:
 16889     1727  0008               	return
 16890     1728                     __end_of_I2C2_IsRxBufFull:
 16891                           
 16892                           	psect	text76
 16893     170B                     __ptext76:	
 16894 ;; *************** function _I2C2_DataReceive *****************
 16895 ;; Defined at:
 16896 ;;		line 401 in file "mcc_generated_files/i2c_host/src/mssp2.c"
 16897 ;; Parameters:    Size  Location     Type
 16898 ;;		None
 16899 ;; Auto vars:     Size  Location     Type
 16900 ;;		None
 16901 ;; Return value:  Size  Location     Type
 16902 ;;                  1    wreg      unsigned char 
 16903 ;; Registers used:
 16904 ;;		wreg
 16905 ;; Tracked objects:
 16906 ;;		On entry : 0/0
 16907 ;;		On exit  : 0/0
 16908 ;;		Unchanged: 0/0
 16909 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 16910 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16911 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16912 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16913 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16914 ;;Total ram usage:        0 bytes
 16915 ;; Hardware stack levels used: 1
 16916 ;; This function calls:
 16917 ;;		Nothing
 16918 ;; This function is called by:
 16919 ;;		_I2C2_EVENT_RX
 16920 ;; This function uses a non-reentrant model
 16921 ;;
 16922                           
 16923     170B                     _I2C2_DataReceive:	
 16924                           ;psect for function _I2C2_DataReceive
 16925                           
 16926     170B                     i1l4469:	
 16927                           ;incstack = 0
 16928                           ; Regs used in _I2C2_DataReceive: [wreg]
 16929                           
 16930                           
 16931                           ;mcc_generated_files/i2c_host/src/mssp2.c: 403:     return SSP2BUF;
 16932     170B  0024               	movlb	4	; select bank4
 16933     170C  0819               	movf	25,w	;volatile
 16934     170D                     i1l262:
 16935     170D  0008               	return
 16936     170E                     __end_of_I2C2_DataReceive:
 16937                           
 16938                           	psect	text77
 16939     1720                     __ptext77:	
 16940 ;; *************** function _I2C2_AckSend *****************
 16941 ;; Defined at:
 16942 ;;		line 442 in file "mcc_generated_files/i2c_host/src/mssp2.c"
 16943 ;; Parameters:    Size  Location     Type
 16944 ;;		None
 16945 ;; Auto vars:     Size  Location     Type
 16946 ;;		None
 16947 ;; Return value:  Size  Location     Type
 16948 ;;                  1    wreg      void 
 16949 ;; Registers used:
 16950 ;;		None
 16951 ;; Tracked objects:
 16952 ;;		On entry : 0/0
 16953 ;;		On exit  : 0/0
 16954 ;;		Unchanged: 0/0
 16955 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 16956 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16957 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16958 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16959 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16960 ;;Total ram usage:        0 bytes
 16961 ;; Hardware stack levels used: 1
 16962 ;; This function calls:
 16963 ;;		Nothing
 16964 ;; This function is called by:
 16965 ;;		_I2C2_EVENT_RX
 16966 ;; This function uses a non-reentrant model
 16967 ;;
 16968                           
 16969     1720                     _I2C2_AckSend:	
 16970                           ;psect for function _I2C2_AckSend
 16971                           
 16972     1720                     i1l4473:	
 16973                           ;incstack = 0
 16974                           ; Regs used in _I2C2_AckSend: []
 16975                           
 16976                           
 16977                           ;mcc_generated_files/i2c_host/src/mssp2.c: 444:     SSP2CON2bits.ACKDT = 0;
 16978     1720  0024               	movlb	4	; select bank4
 16979     1721  129E               	bcf	30,5	;volatile
 16980                           
 16981                           ;mcc_generated_files/i2c_host/src/mssp2.c: 445:     SSP2CON2bits.ACKEN = 1;
 16982     1722  161E               	bsf	30,4	;volatile
 16983     1723                     i1l286:
 16984     1723  0008               	return
 16985     1724                     __end_of_I2C2_AckSend:
 16986                           
 16987                           	psect	text78
 16988     1708                     __ptext78:	
 16989 ;; *************** function _I2C2_StopSend *****************
 16990 ;; Defined at:
 16991 ;;		line 437 in file "mcc_generated_files/i2c_host/src/mssp2.c"
 16992 ;; Parameters:    Size  Location     Type
 16993 ;;		None
 16994 ;; Auto vars:     Size  Location     Type
 16995 ;;		None
 16996 ;; Return value:  Size  Location     Type
 16997 ;;                  1    wreg      void 
 16998 ;; Registers used:
 16999 ;;		None
 17000 ;; Tracked objects:
 17001 ;;		On entry : 0/0
 17002 ;;		On exit  : 0/0
 17003 ;;		Unchanged: 0/0
 17004 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 17005 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17006 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17007 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17008 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17009 ;;Total ram usage:        0 bytes
 17010 ;; Hardware stack levels used: 1
 17011 ;; This function calls:
 17012 ;;		Nothing
 17013 ;; This function is called by:
 17014 ;;		_I2C2_EVENT_STOP
 17015 ;; This function uses a non-reentrant model
 17016 ;;
 17017                           
 17018     1708                     _I2C2_StopSend:	
 17019                           ;psect for function _I2C2_StopSend
 17020                           
 17021     1708                     i1l4357:	
 17022                           ;incstack = 0
 17023                           ; Regs used in _I2C2_StopSend: []
 17024                           
 17025                           
 17026                           ;mcc_generated_files/i2c_host/src/mssp2.c: 439:     SSP2CON2bits.PEN = 1;
 17027     1708  0024               	movlb	4	; select bank4
 17028     1709  151E               	bsf	30,2	;volatile
 17029     170A                     i1l283:
 17030     170A  0008               	return
 17031     170B                     __end_of_I2C2_StopSend:
 17032                           
 17033                           	psect	text79
 17034     08DA                     __ptext79:	
 17035 ;; *************** function _I2C2_Close *****************
 17036 ;; Defined at:
 17037 ;;		line 242 in file "mcc_generated_files/i2c_host/src/mssp2.c"
 17038 ;; Parameters:    Size  Location     Type
 17039 ;;		None
 17040 ;; Auto vars:     Size  Location     Type
 17041 ;;		None
 17042 ;; Return value:  Size  Location     Type
 17043 ;;                  1    wreg      void 
 17044 ;; Registers used:
 17045 ;;		status,2, status,0, pclath, cstack
 17046 ;; Tracked objects:
 17047 ;;		On entry : 0/0
 17048 ;;		On exit  : 0/0
 17049 ;;		Unchanged: 0/0
 17050 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 17051 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17052 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17053 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17054 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17055 ;;Total ram usage:        0 bytes
 17056 ;; Hardware stack levels used: 1
 17057 ;; Hardware stack levels required when called: 1
 17058 ;; This function calls:
 17059 ;;		_I2C2_ErrorInterruptClear
 17060 ;;		_I2C2_InterruptClear
 17061 ;;		_I2C2_StatusFlagsClear
 17062 ;; This function is called by:
 17063 ;;		_I2C2_EventHandler
 17064 ;;		_I2C2_EVENT_STOP
 17065 ;; This function uses a non-reentrant model
 17066 ;;
 17067                           
 17068     08DA                     _I2C2_Close:	
 17069                           ;psect for function _I2C2_Close
 17070                           
 17071     08DA                     i1l4347:	
 17072                           ;incstack = 0
 17073 ;; hardware stack exceeded
 17074                           ; Regs used in _I2C2_Close: [status,2+status,0+pclath+cstack]
 17075                           
 17076                           
 17077                           ;mcc_generated_files/i2c_host/src/mssp2.c: 244:     i2c2Status.busy = 0;
 17078     08DA  0020               	movlb	0	; select bank0
 17079     08DB  01D5               	clrf	_i2c2Status	;volatile
 17080     08DC                     i1l4349:
 17081                           
 17082                           ;mcc_generated_files/i2c_host/src/mssp2.c: 245:     i2c2Status.address = 0xFF;
 17083     08DC  3000               	movlw	0
 17084     08DD  00D7               	movwf	_i2c2Status+2	;volatile
 17085     08DE  30FF               	movlw	255
 17086     08DF  00D6               	movwf	_i2c2Status+1	;volatile
 17087                           
 17088                           ;mcc_generated_files/i2c_host/src/mssp2.c: 246:     i2c2Status.writePtr = ((void*)0);
 17089     08E0  01D8               	clrf	_i2c2Status+3	;volatile
 17090     08E1  01D9               	clrf	_i2c2Status+4	;volatile
 17091                           
 17092                           ;mcc_generated_files/i2c_host/src/mssp2.c: 247:     i2c2Status.readPtr = ((void*)0);
 17093     08E2  01DC               	clrf	_i2c2Status+7	;volatile
 17094     08E3  01DD               	clrf	_i2c2Status+8	;volatile
 17095                           
 17096                           ;mcc_generated_files/i2c_host/src/mssp2.c: 248:     i2c2Status.state = I2C_STATE_IDLE;
 17097     08E4  01E2               	clrf	_i2c2Status+13	;volatile
 17098     08E5                     i1l4351:
 17099                           
 17100                           ;mcc_generated_files/i2c_host/src/mssp2.c: 249:     I2C2_InterruptClear();
 17101     08E5  3197  2705  3188   	fcall	_I2C2_InterruptClear
 17102     08E8                     i1l4353:
 17103                           
 17104                           ;mcc_generated_files/i2c_host/src/mssp2.c: 250:     I2C2_ErrorInterruptClear();
 17105     08E8  3197  2702  3188   	fcall	_I2C2_ErrorInterruptClear
 17106     08EB                     i1l4355:
 17107                           
 17108                           ;mcc_generated_files/i2c_host/src/mssp2.c: 251:     I2C2_StatusFlagsClear();
 17109     08EB  3197  271C  3188   	fcall	_I2C2_StatusFlagsClear
 17110     08EE                     i1l211:
 17111     08EE  0008               	return
 17112     08EF                     __end_of_I2C2_Close:
 17113                           
 17114                           	psect	text80
 17115     171C                     __ptext80:	
 17116 ;; *************** function _I2C2_StatusFlagsClear *****************
 17117 ;; Defined at:
 17118 ;;		line 496 in file "mcc_generated_files/i2c_host/src/mssp2.c"
 17119 ;; Parameters:    Size  Location     Type
 17120 ;;		None
 17121 ;; Auto vars:     Size  Location     Type
 17122 ;;		None
 17123 ;; Return value:  Size  Location     Type
 17124 ;;                  1    wreg      void 
 17125 ;; Registers used:
 17126 ;;		None
 17127 ;; Tracked objects:
 17128 ;;		On entry : 0/0
 17129 ;;		On exit  : 0/0
 17130 ;;		Unchanged: 0/0
 17131 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 17132 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17133 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17134 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17135 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17136 ;;Total ram usage:        0 bytes
 17137 ;; Hardware stack levels used: 1
 17138 ;; This function calls:
 17139 ;;		Nothing
 17140 ;; This function is called by:
 17141 ;;		_I2C2_Close
 17142 ;; This function uses a non-reentrant model
 17143 ;;
 17144                           
 17145     171C                     _I2C2_StatusFlagsClear:	
 17146                           ;psect for function _I2C2_StatusFlagsClear
 17147                           
 17148     171C                     i1l4173:	
 17149                           ;incstack = 0
 17150 ;; hardware stack exceeded
 17151                           ; Regs used in _I2C2_StatusFlagsClear: []
 17152                           
 17153                           
 17154                           ;mcc_generated_files/i2c_host/src/mssp2.c: 498:     SSP2CON1bits.WCOL = 0;
 17155     171C  0024               	movlb	4	; select bank4
 17156     171D  139D               	bcf	29,7	;volatile
 17157                           
 17158                           ;mcc_generated_files/i2c_host/src/mssp2.c: 499:     SSP2CON1bits.SSPOV = 0;
 17159     171E  131D               	bcf	29,6	;volatile
 17160     171F                     i1l316:
 17161     171F  0008               	return
 17162     1720                     __end_of_I2C2_StatusFlagsClear:
 17163                           
 17164                           	psect	text81
 17165     1705                     __ptext81:	
 17166 ;; *************** function _I2C2_InterruptClear *****************
 17167 ;; Defined at:
 17168 ;;		line 486 in file "mcc_generated_files/i2c_host/src/mssp2.c"
 17169 ;; Parameters:    Size  Location     Type
 17170 ;;		None
 17171 ;; Auto vars:     Size  Location     Type
 17172 ;;		None
 17173 ;; Return value:  Size  Location     Type
 17174 ;;                  1    wreg      void 
 17175 ;; Registers used:
 17176 ;;		None
 17177 ;; Tracked objects:
 17178 ;;		On entry : 0/0
 17179 ;;		On exit  : 0/0
 17180 ;;		Unchanged: 0/0
 17181 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 17182 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17183 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17184 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17185 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17186 ;;Total ram usage:        0 bytes
 17187 ;; Hardware stack levels used: 1
 17188 ;; This function calls:
 17189 ;;		Nothing
 17190 ;; This function is called by:
 17191 ;;		_I2C2_Close
 17192 ;;		_I2C2_EventHandler
 17193 ;; This function uses a non-reentrant model
 17194 ;;
 17195                           
 17196     1705                     _I2C2_InterruptClear:	
 17197                           ;psect for function _I2C2_InterruptClear
 17198                           
 17199     1705                     i1l4169:	
 17200                           ;incstack = 0
 17201                           ; Regs used in _I2C2_InterruptClear: []
 17202                           
 17203                           
 17204                           ;mcc_generated_files/i2c_host/src/mssp2.c: 488:     PIR2bits.SSP2IF = 0;
 17205     1705  0020               	movlb	0	; select bank0
 17206     1706  1192               	bcf	18,3	;volatile
 17207     1707                     i1l310:
 17208     1707  0008               	return
 17209     1708                     __end_of_I2C2_InterruptClear:
 17210                           
 17211                           	psect	text82
 17212     1702                     __ptext82:	
 17213 ;; *************** function _I2C2_ErrorInterruptClear *****************
 17214 ;; Defined at:
 17215 ;;		line 491 in file "mcc_generated_files/i2c_host/src/mssp2.c"
 17216 ;; Parameters:    Size  Location     Type
 17217 ;;		None
 17218 ;; Auto vars:     Size  Location     Type
 17219 ;;		None
 17220 ;; Return value:  Size  Location     Type
 17221 ;;                  1    wreg      void 
 17222 ;; Registers used:
 17223 ;;		None
 17224 ;; Tracked objects:
 17225 ;;		On entry : 0/0
 17226 ;;		On exit  : 0/0
 17227 ;;		Unchanged: 0/0
 17228 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 17229 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17230 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17231 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17232 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17233 ;;Total ram usage:        0 bytes
 17234 ;; Hardware stack levels used: 1
 17235 ;; This function calls:
 17236 ;;		Nothing
 17237 ;; This function is called by:
 17238 ;;		_I2C2_Close
 17239 ;;		_I2C2_ErrorEventHandler
 17240 ;; This function uses a non-reentrant model
 17241 ;;
 17242                           
 17243     1702                     _I2C2_ErrorInterruptClear:	
 17244                           ;psect for function _I2C2_ErrorInterruptClear
 17245                           
 17246     1702                     i1l4171:	
 17247                           ;incstack = 0
 17248 ;; hardware stack exceeded
 17249                           ; Regs used in _I2C2_ErrorInterruptClear: []
 17250                           
 17251                           
 17252                           ;mcc_generated_files/i2c_host/src/mssp2.c: 493:     PIR2bits.BCL2IF = 0;
 17253     1702  0020               	movlb	0	; select bank0
 17254     1703  1112               	bcf	18,2	;volatile
 17255     1704                     i1l313:
 17256     1704  0008               	return
 17257     1705                     __end_of_I2C2_ErrorInterruptClear:
 17258                           
 17259                           	psect	text83
 17260     1718                     __ptext83:	
 17261 ;; *************** function _I2C2_BusReset *****************
 17262 ;; Defined at:
 17263 ;;		line 411 in file "mcc_generated_files/i2c_host/src/mssp2.c"
 17264 ;; Parameters:    Size  Location     Type
 17265 ;;		None
 17266 ;; Auto vars:     Size  Location     Type
 17267 ;;		None
 17268 ;; Return value:  Size  Location     Type
 17269 ;;                  1    wreg      void 
 17270 ;; Registers used:
 17271 ;;		None
 17272 ;; Tracked objects:
 17273 ;;		On entry : 0/0
 17274 ;;		On exit  : 0/0
 17275 ;;		Unchanged: 0/0
 17276 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 17277 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17278 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17279 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17280 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17281 ;;Total ram usage:        0 bytes
 17282 ;; Hardware stack levels used: 1
 17283 ;; This function calls:
 17284 ;;		Nothing
 17285 ;; This function is called by:
 17286 ;;		_I2C2_EVENT_RESET
 17287 ;; This function uses a non-reentrant model
 17288 ;;
 17289                           
 17290     1718                     _I2C2_BusReset:	
 17291                           ;psect for function _I2C2_BusReset
 17292                           
 17293     1718                     i1l4359:	
 17294                           ;incstack = 0
 17295                           ; Regs used in _I2C2_BusReset: []
 17296                           
 17297                           
 17298                           ;mcc_generated_files/i2c_host/src/mssp2.c: 413:     SSP2CON1bits.SSPEN = 0;
 17299     1718  0024               	movlb	4	; select bank4
 17300     1719  129D               	bcf	29,5	;volatile
 17301                           
 17302                           ;mcc_generated_files/i2c_host/src/mssp2.c: 414:     SSP2CON1bits.SSPEN = 1;
 17303     171A  169D               	bsf	29,5	;volatile
 17304     171B                     i1l268:
 17305     171B  0008               	return
 17306     171C                     __end_of_I2C2_BusReset:
 17307                           
 17308                           	psect	text84
 17309     0930                     __ptext84:	
 17310 ;; *************** function _EUSART_TransmitISR *****************
 17311 ;; Defined at:
 17312 ;;		line 377 in file "mcc_generated_files/uart/src/eusart.c"
 17313 ;; Parameters:    Size  Location     Type
 17314 ;;		None
 17315 ;; Auto vars:     Size  Location     Type
 17316 ;;  tempTxTail      1    0[COMMON] unsigned char 
 17317 ;; Return value:  Size  Location     Type
 17318 ;;                  1    wreg      void 
 17319 ;; Registers used:
 17320 ;;		wreg, fsr1l, fsr1h, status,2, status,0
 17321 ;; Tracked objects:
 17322 ;;		On entry : 0/0
 17323 ;;		On exit  : 0/0
 17324 ;;		Unchanged: 0/0
 17325 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 17326 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17327 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17328 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17329 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17330 ;;Total ram usage:        1 bytes
 17331 ;; Hardware stack levels used: 1
 17332 ;; This function calls:
 17333 ;;		Nothing
 17334 ;; This function is called by:
 17335 ;;		_EUSART_Initialize
 17336 ;;		_INTERRUPT_InterruptManager
 17337 ;; This function uses a non-reentrant model
 17338 ;;
 17339                           
 17340     0930                     _EUSART_TransmitISR:	
 17341                           ;psect for function _EUSART_TransmitISR
 17342                           
 17343     0930                     i1l5511:	
 17344                           ;incstack = 0
 17345                           ; Regs used in _EUSART_TransmitISR: [wreg+fsr1l+fsr1h+status,2+status,0]
 17346                           
 17347                           
 17348                           ;mcc_generated_files/uart/src/eusart.c: 379:     uint8_t tempTxTail;;mcc_generated_files
      +                          /uart/src/eusart.c: 381:     if(sizeof(eusartTxBuffer) > eusartTxBufferRemaining)
 17349     0930  3008               	movlw	8
 17350     0931  0020               	movlb	0	; select bank0
 17351     0932  026B               	subwf	_eusartTxBufferRemaining,w	;volatile
 17352     0933  1803               	skipnc
 17353     0934  2936               	goto	u483_21
 17354     0935  2937               	goto	u483_20
 17355     0936                     u483_21:
 17356     0936  2949               	goto	i1l997
 17357     0937                     u483_20:
 17358     0937                     i1l5513:
 17359                           
 17360                           ;mcc_generated_files/uart/src/eusart.c: 382:     {;mcc_generated_files/uart/src/eusart.c
      +                          : 383:        TX1REG = eusartTxBuffer[eusartTxTail];
 17361     0937  086C               	movf	_eusartTxTail,w
 17362     0938  3E38               	addlw	(low (_eusartTxBuffer| (0+256)))& (0+255)
 17363     0939  0086               	movwf	6
 17364     093A  3001               	movlw	1	; select bank2/3
 17365     093B  0087               	movwf	7
 17366     093C  0801               	movf	1,w
 17367     093D  0023               	movlb	3	; select bank3
 17368     093E  009A               	movwf	26	;volatile
 17369     093F                     i1l5515:
 17370                           
 17371                           ;mcc_generated_files/uart/src/eusart.c: 384:        tempTxTail = (eusartTxTail + 1U) & (
      +                          (8U) - 1U);
 17372     093F  0020               	movlb	0	; select bank0
 17373     0940  086C               	movf	_eusartTxTail,w	;volatile
 17374     0941  3E01               	addlw	1
 17375     0942  3907               	andlw	7
 17376     0943  00F0               	movwf	EUSART_TransmitISR@tempTxTail
 17377     0944                     i1l5517:
 17378                           
 17379                           ;mcc_generated_files/uart/src/eusart.c: 386:        eusartTxTail = tempTxTail;
 17380     0944  0870               	movf	EUSART_TransmitISR@tempTxTail,w
 17381     0945  00EC               	movwf	_eusartTxTail	;volatile
 17382     0946                     i1l5519:
 17383                           
 17384                           ;mcc_generated_files/uart/src/eusart.c: 387:        eusartTxBufferRemaining++;
 17385     0946  3001               	movlw	1
 17386     0947  07EB               	addwf	_eusartTxBufferRemaining,f	;volatile
 17387                           
 17388                           ;mcc_generated_files/uart/src/eusart.c: 388:     }
 17389     0948  294B               	goto	i1l1000
 17390     0949                     i1l997:	
 17391                           ;mcc_generated_files/uart/src/eusart.c: 389:     else
 17392                           
 17393                           
 17394                           ;mcc_generated_files/uart/src/eusart.c: 390:     {;mcc_generated_files/uart/src/eusart.c
      +                          : 391:         PIE1bits.TXIE = 0;
 17395     0949  0021               	movlb	1	; select bank1
 17396     094A  1211               	bcf	17,4	;volatile
 17397     094B                     i1l1000:
 17398     094B  0008               	return
 17399     094C                     __end_of_EUSART_TransmitISR:
 17400                           
 17401                           	psect	text85
 17402     0C79                     __ptext85:	
 17403 ;; *************** function _EUSART_ReceiveISR *****************
 17404 ;; Defined at:
 17405 ;;		line 308 in file "mcc_generated_files/uart/src/eusart.c"
 17406 ;; Parameters:    Size  Location     Type
 17407 ;;		None
 17408 ;; Auto vars:     Size  Location     Type
 17409 ;;  tempRxHead      1    1[COMMON] unsigned char 
 17410 ;;  regValue        1    0[COMMON] unsigned char 
 17411 ;; Return value:  Size  Location     Type
 17412 ;;                  1    wreg      void 
 17413 ;; Registers used:
 17414 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 17415 ;; Tracked objects:
 17416 ;;		On entry : 0/0
 17417 ;;		On exit  : 0/0
 17418 ;;		Unchanged: 0/0
 17419 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 17420 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17421 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17422 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17423 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17424 ;;Total ram usage:        2 bytes
 17425 ;; Hardware stack levels used: 1
 17426 ;; Hardware stack levels required when called: 1
 17427 ;; This function calls:
 17428 ;;		NULL
 17429 ;;		_EUSART_DefaultFramingErrorCallback
 17430 ;;		_EUSART_DefaultOverrunErrorCallback
 17431 ;; This function is called by:
 17432 ;;		_EUSART_Initialize
 17433 ;;		_INTERRUPT_InterruptManager
 17434 ;; This function uses a non-reentrant model
 17435 ;;
 17436                           
 17437     0C79                     _EUSART_ReceiveISR:	
 17438                           ;psect for function _EUSART_ReceiveISR
 17439                           
 17440     0C79                     i1l5477:	
 17441                           ;incstack = 0
 17442                           ; Regs used in _EUSART_ReceiveISR: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
 17443                           
 17444                           
 17445                           ;mcc_generated_files/uart/src/eusart.c: 310:     uint8_t regValue;;mcc_generated_files/u
      +                          art/src/eusart.c: 311:  uint8_t tempRxHead;;mcc_generated_files/uart/src/eusart.c: 314: 
      +                              eusartRxStatusBuffer[eusartRxHead].status = 0;
 17446     0C79  0020               	movlb	0	; select bank0
 17447     0C7A  356A               	lslf	_eusartRxHead,w	;volatile
 17448     0C7B  3E20               	addlw	(low (_eusartRxStatusBuffer| (0+256)))& (0+255)
 17449     0C7C  0086               	movwf	6
 17450     0C7D  3001               	movlw	1	; select bank2/3
 17451     0C7E  0087               	movwf	7
 17452     0C7F  3000               	movlw	0
 17453     0C80  3FC0               	movwi [0]fsr1
 17454     0C81  3FC1               	movwi [1]fsr1
 17455     0C82                     i1l5479:
 17456                           
 17457                           ;mcc_generated_files/uart/src/eusart.c: 316:     if(1 == RC1STAbits.OERR)
 17458     0C82  0023               	movlb	3	; select bank3
 17459     0C83  1C9D               	btfss	29,1	;volatile
 17460     0C84  2C86               	goto	u478_21
 17461     0C85  2C87               	goto	u478_20
 17462     0C86                     u478_21:
 17463     0C86  2C9A               	goto	i1l5487
 17464     0C87                     u478_20:
 17465     0C87                     i1l5481:
 17466                           
 17467                           ;mcc_generated_files/uart/src/eusart.c: 317:     {;mcc_generated_files/uart/src/eusart.c
      +                          : 318:         eusartRxStatusBuffer[eusartRxHead].oerr = 1;
 17468     0C87  0020               	movlb	0	; select bank0
 17469     0C88  356A               	lslf	_eusartRxHead,w	;volatile
 17470     0C89  3E20               	addlw	(low (_eusartRxStatusBuffer| (0+256)))& (0+255)
 17471     0C8A  0086               	movwf	6
 17472     0C8B  3001               	movlw	1	; select bank2/3
 17473     0C8C  0087               	movwf	7
 17474     0C8D  1501               	bsf	1,2
 17475     0C8E                     i1l5483:
 17476                           
 17477                           ;mcc_generated_files/uart/src/eusart.c: 319:         if(((void*)0) != EUSART_OverrunErro
      +                          rHandler)
 17478     0C8E  0022               	movlb	2	; select bank2
 17479     0C8F  0852               	movf	_EUSART_OverrunErrorHandler^(0+256),w
 17480     0C90  0453               	iorwf	(_EUSART_OverrunErrorHandler+1)^(0+256),w
 17481     0C91  1903               	btfsc	3,2
 17482     0C92  2C94               	goto	u479_21
 17483     0C93  2C95               	goto	u479_20
 17484     0C94                     u479_21:
 17485     0C94  2C9A               	goto	i1l5487
 17486     0C95                     u479_20:
 17487     0C95                     i1l5485:
 17488                           
 17489                           ;mcc_generated_files/uart/src/eusart.c: 320:         {;mcc_generated_files/uart/src/eusa
      +                          rt.c: 321:             EUSART_OverrunErrorHandler();
 17490     0C95  0853               	movf	(_EUSART_OverrunErrorHandler+1)^(0+256),w
 17491     0C96  008A               	movwf	10
 17492     0C97  0852               	movf	_EUSART_OverrunErrorHandler^(0+256),w
 17493     0C98  000A               	callw
 17494     0C99  318C               	pagesel	$
 17495     0C9A                     i1l5487:
 17496                           
 17497                           ;mcc_generated_files/uart/src/eusart.c: 324:     if(1 == RC1STAbits.FERR)
 17498     0C9A  0023               	movlb	3	; select bank3
 17499     0C9B  1D1D               	btfss	29,2	;volatile
 17500     0C9C  2C9E               	goto	u480_21
 17501     0C9D  2C9F               	goto	u480_20
 17502     0C9E                     u480_21:
 17503     0C9E  2CB2               	goto	i1l5495
 17504     0C9F                     u480_20:
 17505     0C9F                     i1l5489:
 17506                           
 17507                           ;mcc_generated_files/uart/src/eusart.c: 325:     {;mcc_generated_files/uart/src/eusart.c
      +                          : 326:         eusartRxStatusBuffer[eusartRxHead].ferr = 1;
 17508     0C9F  0020               	movlb	0	; select bank0
 17509     0CA0  356A               	lslf	_eusartRxHead,w	;volatile
 17510     0CA1  3E20               	addlw	(low (_eusartRxStatusBuffer| (0+256)))& (0+255)
 17511     0CA2  0086               	movwf	6
 17512     0CA3  3001               	movlw	1	; select bank2/3
 17513     0CA4  0087               	movwf	7
 17514     0CA5  1481               	bsf	1,1
 17515     0CA6                     i1l5491:
 17516                           
 17517                           ;mcc_generated_files/uart/src/eusart.c: 327:         if(((void*)0) != EUSART_FramingErro
      +                          rHandler)
 17518     0CA6  0022               	movlb	2	; select bank2
 17519     0CA7  0854               	movf	_EUSART_FramingErrorHandler^(0+256),w
 17520     0CA8  0455               	iorwf	(_EUSART_FramingErrorHandler+1)^(0+256),w
 17521     0CA9  1903               	btfsc	3,2
 17522     0CAA  2CAC               	goto	u481_21
 17523     0CAB  2CAD               	goto	u481_20
 17524     0CAC                     u481_21:
 17525     0CAC  2CB2               	goto	i1l5495
 17526     0CAD                     u481_20:
 17527     0CAD                     i1l5493:
 17528                           
 17529                           ;mcc_generated_files/uart/src/eusart.c: 328:         {;mcc_generated_files/uart/src/eusa
      +                          rt.c: 329:             EUSART_FramingErrorHandler();
 17530     0CAD  0855               	movf	(_EUSART_FramingErrorHandler+1)^(0+256),w
 17531     0CAE  008A               	movwf	10
 17532     0CAF  0854               	movf	_EUSART_FramingErrorHandler^(0+256),w
 17533     0CB0  000A               	callw
 17534     0CB1  318C               	pagesel	$
 17535     0CB2                     i1l5495:
 17536                           
 17537                           ;mcc_generated_files/uart/src/eusart.c: 333:     regValue = RC1REG;
 17538     0CB2  0023               	movlb	3	; select bank3
 17539     0CB3  0819               	movf	25,w	;volatile
 17540     0CB4  00F0               	movwf	EUSART_ReceiveISR@regValue
 17541     0CB5                     i1l5497:
 17542                           
 17543                           ;mcc_generated_files/uart/src/eusart.c: 335:     tempRxHead = (eusartRxHead + 1U) & ((8U
      +                          ) - 1U);
 17544     0CB5  0020               	movlb	0	; select bank0
 17545     0CB6  086A               	movf	_eusartRxHead,w	;volatile
 17546     0CB7  3E01               	addlw	1
 17547     0CB8  3907               	andlw	7
 17548     0CB9  00F1               	movwf	EUSART_ReceiveISR@tempRxHead
 17549     0CBA                     i1l5499:
 17550                           
 17551                           ;mcc_generated_files/uart/src/eusart.c: 336:     if (tempRxHead == eusartRxTail)
 17552     0CBA  0871               	movf	EUSART_ReceiveISR@tempRxHead,w
 17553     0CBB  0669               	xorwf	_eusartRxTail,w	;volatile
 17554     0CBC  1D03               	skipz
 17555     0CBD  2CBF               	goto	u482_21
 17556     0CBE  2CC0               	goto	u482_20
 17557     0CBF                     u482_21:
 17558     0CBF  2CC1               	goto	i1l5503
 17559     0CC0                     u482_20:
 17560     0CC0  2CCC               	goto	i1l987
 17561     0CC1                     i1l5503:
 17562                           
 17563                           ;mcc_generated_files/uart/src/eusart.c: 341:     {;mcc_generated_files/uart/src/eusart.c
      +                          : 342:         eusartRxBuffer[eusartRxHead] = regValue;
 17564     0CC1  086A               	movf	_eusartRxHead,w
 17565     0CC2  3E30               	addlw	(low (_eusartRxBuffer| (0+256)))& (0+255)
 17566     0CC3  0086               	movwf	6
 17567     0CC4  3001               	movlw	1	; select bank2/3
 17568     0CC5  0087               	movwf	7
 17569     0CC6  0870               	movf	EUSART_ReceiveISR@regValue,w
 17570     0CC7  0081               	movwf	1
 17571     0CC8                     i1l5505:
 17572                           
 17573                           ;mcc_generated_files/uart/src/eusart.c: 343:   eusartRxHead = tempRxHead;
 17574     0CC8  0871               	movf	EUSART_ReceiveISR@tempRxHead,w
 17575     0CC9  00EA               	movwf	_eusartRxHead	;volatile
 17576     0CCA                     i1l5507:
 17577                           
 17578                           ;mcc_generated_files/uart/src/eusart.c: 344:   eusartRxCount++;
 17579     0CCA  3001               	movlw	1
 17580     0CCB  07E8               	addwf	_eusartRxCount,f	;volatile
 17581     0CCC                     i1l987:
 17582     0CCC  0008               	return
 17583     0CCD                     __end_of_EUSART_ReceiveISR:
 17584                           
 17585                           	psect	text86
 17586     1714                     __ptext86:	
 17587 ;; *************** function _EUSART_DefaultOverrunErrorCallback *****************
 17588 ;; Defined at:
 17589 ;;		line 423 in file "mcc_generated_files/uart/src/eusart.c"
 17590 ;; Parameters:    Size  Location     Type
 17591 ;;		None
 17592 ;; Auto vars:     Size  Location     Type
 17593 ;;		None
 17594 ;; Return value:  Size  Location     Type
 17595 ;;                  1    wreg      void 
 17596 ;; Registers used:
 17597 ;;		None
 17598 ;; Tracked objects:
 17599 ;;		On entry : 0/0
 17600 ;;		On exit  : 0/0
 17601 ;;		Unchanged: 0/0
 17602 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 17603 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17604 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17605 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17606 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17607 ;;Total ram usage:        0 bytes
 17608 ;; Hardware stack levels used: 1
 17609 ;; This function calls:
 17610 ;;		Nothing
 17611 ;; This function is called by:
 17612 ;;		_EUSART_Initialize
 17613 ;;		_EUSART_ReceiveISR
 17614 ;; This function uses a non-reentrant model
 17615 ;;
 17616                           
 17617     1714                     _EUSART_DefaultOverrunErrorCallback:	
 17618                           ;psect for function _EUSART_DefaultOverrunErrorCallback
 17619                           
 17620     1714                     i1l5349:	
 17621                           ;incstack = 0
 17622                           ; Regs used in _EUSART_DefaultOverrunErrorCallback: []
 17623                           
 17624                           
 17625                           ;mcc_generated_files/uart/src/eusart.c: 426:     RC1STAbits.CREN = 0;
 17626     1714  0023               	movlb	3	; select bank3
 17627     1715  121D               	bcf	29,4	;volatile
 17628                           
 17629                           ;mcc_generated_files/uart/src/eusart.c: 427:     RC1STAbits.CREN = 1;
 17630     1716  161D               	bsf	29,4	;volatile
 17631     1717                     i1l1018:
 17632     1717  0008               	return
 17633     1718                     __end_of_EUSART_DefaultOverrunErrorCallback:
 17634                           
 17635                           	psect	text87
 17636     1700                     __ptext87:	
 17637 ;; *************** function _EUSART_DefaultFramingErrorCallback *****************
 17638 ;; Defined at:
 17639 ;;		line 418 in file "mcc_generated_files/uart/src/eusart.c"
 17640 ;; Parameters:    Size  Location     Type
 17641 ;;		None
 17642 ;; Auto vars:     Size  Location     Type
 17643 ;;		None
 17644 ;; Return value:  Size  Location     Type
 17645 ;;                  1    wreg      void 
 17646 ;; Registers used:
 17647 ;;		None
 17648 ;; Tracked objects:
 17649 ;;		On entry : 0/0
 17650 ;;		On exit  : 0/0
 17651 ;;		Unchanged: 0/0
 17652 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 17653 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17654 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17655 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17656 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17657 ;;Total ram usage:        0 bytes
 17658 ;; Hardware stack levels used: 1
 17659 ;; This function calls:
 17660 ;;		Nothing
 17661 ;; This function is called by:
 17662 ;;		_EUSART_Initialize
 17663 ;;		_EUSART_ReceiveISR
 17664 ;; This function uses a non-reentrant model
 17665 ;;
 17666                           
 17667     1700                     _EUSART_DefaultFramingErrorCallback:	
 17668                           ;psect for function _EUSART_DefaultFramingErrorCallback
 17669                           
 17670     1700                     i1l1015:	
 17671                           ;incstack = 0
 17672                           ; Regs used in _EUSART_DefaultFramingErrorCallback: []
 17673                           
 17674     1700  0008               	return
 17675     1701                     __end_of_EUSART_DefaultFramingErrorCallback:
 17676                           
 17677                           	psect	text88
 17678     081C                     __ptext88:	
 17679 ;; *************** function _ADC_ISR *****************
 17680 ;; Defined at:
 17681 ;;		line 134 in file "mcc_generated_files/adc/src/adc.c"
 17682 ;; Parameters:    Size  Location     Type
 17683 ;;		None
 17684 ;; Auto vars:     Size  Location     Type
 17685 ;;		None
 17686 ;; Return value:  Size  Location     Type
 17687 ;;                  1    wreg      void 
 17688 ;; Registers used:
 17689 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
 17690 ;; Tracked objects:
 17691 ;;		On entry : 0/0
 17692 ;;		On exit  : 0/0
 17693 ;;		Unchanged: 0/0
 17694 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 17695 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17696 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17697 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17698 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17699 ;;Total ram usage:        0 bytes
 17700 ;; Hardware stack levels used: 1
 17701 ;; Hardware stack levels required when called: 2
 17702 ;; This function calls:
 17703 ;;		NULL
 17704 ;;		_ADC_DefaultInterruptHandler
 17705 ;;		_adcConversionDoneHandler
 17706 ;; This function is called by:
 17707 ;;		_INTERRUPT_InterruptManager
 17708 ;; This function uses a non-reentrant model
 17709 ;;
 17710                           
 17711     081C                     _ADC_ISR:	
 17712                           ;psect for function _ADC_ISR
 17713                           
 17714     081C                     i1l5419:	
 17715                           ;incstack = 0
 17716                           ; Regs used in _ADC_ISR: [wreg-fsr0h+status,2+status,0+pclath+cstack]
 17717                           
 17718                           
 17719                           ;mcc_generated_files/adc/src/adc.c: 137:     PIR1bits.ADIF = 0;
 17720     081C  0020               	movlb	0	; select bank0
 17721     081D  1311               	bcf	17,6	;volatile
 17722     081E                     i1l5421:
 17723                           
 17724                           ;mcc_generated_files/adc/src/adc.c: 139:  if(ADC_InterruptHandler)
 17725     081E  0022               	movlb	2	; select bank2
 17726     081F  086E               	movf	_ADC_InterruptHandler^(0+256),w
 17727     0820  046F               	iorwf	(_ADC_InterruptHandler+1)^(0+256),w
 17728     0821  1903               	btfsc	3,2
 17729     0822  2824               	goto	u474_21
 17730     0823  2825               	goto	u474_20
 17731     0824                     u474_21:
 17732     0824  282A               	goto	i1l52
 17733     0825                     u474_20:
 17734     0825                     i1l5423:
 17735                           
 17736                           ;mcc_generated_files/adc/src/adc.c: 140:     {;mcc_generated_files/adc/src/adc.c: 141:  
      +                                 ADC_InterruptHandler();
 17737     0825  086F               	movf	(_ADC_InterruptHandler+1)^(0+256),w
 17738     0826  008A               	movwf	10
 17739     0827  086E               	movf	_ADC_InterruptHandler^(0+256),w
 17740     0828  000A               	callw
 17741     0829  3188               	pagesel	$
 17742     082A                     i1l52:
 17743     082A  0008               	return
 17744     082B                     __end_of_ADC_ISR:
 17745                           
 17746                           	psect	text89
 17747     16FF                     __ptext89:	
 17748 ;; *************** function _ADC_DefaultInterruptHandler *****************
 17749 ;; Defined at:
 17750 ;;		line 150 in file "mcc_generated_files/adc/src/adc.c"
 17751 ;; Parameters:    Size  Location     Type
 17752 ;;		None
 17753 ;; Auto vars:     Size  Location     Type
 17754 ;;		None
 17755 ;; Return value:  Size  Location     Type
 17756 ;;                  1    wreg      void 
 17757 ;; Registers used:
 17758 ;;		None
 17759 ;; Tracked objects:
 17760 ;;		On entry : 0/0
 17761 ;;		On exit  : 0/0
 17762 ;;		Unchanged: 0/0
 17763 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 17764 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17765 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17766 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17767 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17768 ;;Total ram usage:        0 bytes
 17769 ;; Hardware stack levels used: 1
 17770 ;; This function calls:
 17771 ;;		Nothing
 17772 ;; This function is called by:
 17773 ;;		_ADC_Initialize
 17774 ;;		_ADC_ISR
 17775 ;; This function uses a non-reentrant model
 17776 ;;
 17777                           
 17778     16FF                     _ADC_DefaultInterruptHandler:	
 17779                           ;psect for function _ADC_DefaultInterruptHandler
 17780                           
 17781     16FF                     i1l58:	
 17782                           ;incstack = 0
 17783                           ; Regs used in _ADC_DefaultInterruptHandler: []
 17784                           
 17785     16FF  0008               	return
 17786     1700                     __end_of_ADC_DefaultInterruptHandler:
 17787                           
 17788                           	psect	text90
 17789     0A51                     __ptext90:	
 17790 ;; *************** function _adcConversionDoneHandler *****************
 17791 ;; Defined at:
 17792 ;;		line 5 in file "adcMeasurements.c"
 17793 ;; Parameters:    Size  Location     Type
 17794 ;;		None
 17795 ;; Auto vars:     Size  Location     Type
 17796 ;;		None
 17797 ;; Return value:  Size  Location     Type
 17798 ;;                  1    wreg      void 
 17799 ;; Registers used:
 17800 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
 17801 ;; Tracked objects:
 17802 ;;		On entry : 0/0
 17803 ;;		On exit  : 0/0
 17804 ;;		Unchanged: 0/0
 17805 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 17806 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17807 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17808 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17809 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17810 ;;Total ram usage:        2 bytes
 17811 ;; Hardware stack levels used: 1
 17812 ;; Hardware stack levels required when called: 1
 17813 ;; This function calls:
 17814 ;;		_ADC_GetConversionResult
 17815 ;;		i1_ADC_SelectChannel
 17816 ;; This function is called by:
 17817 ;;		_initAdcMultiplexer
 17818 ;;		_ADC_ISR
 17819 ;; This function uses a non-reentrant model
 17820 ;;
 17821                           
 17822     0A51                     _adcConversionDoneHandler:	
 17823                           ;psect for function _adcConversionDoneHandler
 17824                           
 17825     0A51                     i1l5351:	
 17826                           ;incstack = 0
 17827                           ; Regs used in _adcConversionDoneHandler: [wreg-fsr0h+status,2+status,0+pclath+cstack]
 17828                           
 17829                           
 17830                           ;adcMeasurements.c: 10:     static adc_channel_t new_channel = potentiometer;;adcMeasure
      +                          ments.c: 11:     switch (new_channel) {
 17831     0A51  2A6A               	goto	i1l5363
 17832     0A52                     i1l5353:
 17833                           
 17834                           ;adcMeasurements.c: 13:             ADC_potentiometer = ADC_GetConversionResult();
 17835     0A52  3197  2746  318A   	fcall	_ADC_GetConversionResult
 17836     0A55  0871               	movf	?_ADC_GetConversionResult+1,w
 17837     0A56  0022               	movlb	2	; select bank2
 17838     0A57  00D1               	movwf	(_ADC_potentiometer+1)^(0+256)	;volatile
 17839     0A58  0870               	movf	?_ADC_GetConversionResult,w
 17840     0A59  00D0               	movwf	_ADC_potentiometer^(0+256)	;volatile
 17841     0A5A                     i1l5355:
 17842                           
 17843                           ;adcMeasurements.c: 14:             new_channel = hoogtesensor;
 17844     0A5A  3012               	movlw	18
 17845     0A5B  0020               	movlb	0	; select bank0
 17846     0A5C  00EF               	movwf	adcConversionDoneHandler@new_channel
 17847                           
 17848                           ;adcMeasurements.c: 15:             break;
 17849     0A5D  2A7B               	goto	i1l5365
 17850     0A5E                     i1l5357:
 17851                           
 17852                           ;adcMeasurements.c: 17:             ADC_hoogtesensor = ADC_GetConversionResult();
 17853     0A5E  3197  2746  318A   	fcall	_ADC_GetConversionResult
 17854     0A61  0871               	movf	?_ADC_GetConversionResult+1,w
 17855     0A62  0022               	movlb	2	; select bank2
 17856     0A63  00CF               	movwf	(_ADC_hoogtesensor+1)^(0+256)	;volatile
 17857     0A64  0870               	movf	?_ADC_GetConversionResult,w
 17858     0A65  00CE               	movwf	_ADC_hoogtesensor^(0+256)	;volatile
 17859     0A66                     i1l5359:
 17860                           
 17861                           ;adcMeasurements.c: 18:             new_channel = potentiometer;
 17862     0A66  3010               	movlw	16
 17863     0A67  0020               	movlb	0	; select bank0
 17864     0A68  00EF               	movwf	adcConversionDoneHandler@new_channel
 17865                           
 17866                           ;adcMeasurements.c: 19:             break;
 17867     0A69  2A7B               	goto	i1l5365
 17868     0A6A                     i1l5363:
 17869     0A6A  0020               	movlb	0	; select bank0
 17870     0A6B  086F               	movf	adcConversionDoneHandler@new_channel,w
 17871     0A6C  00F2               	movwf	??_adcConversionDoneHandler
 17872     0A6D  01F3               	clrf	??_adcConversionDoneHandler+1
 17873                           
 17874                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 17875                           ; Switch size 1, requested type "simple"
 17876                           ; Number of cases is 1, Range of values is 0 to 0
 17877                           ; switch strategies available:
 17878                           ; Name         Instructions Cycles
 17879                           ; simple_byte            4     3 (average)
 17880                           ; direct_byte            8     6 (fixed)
 17881                           ; jumptable            260     6 (fixed)
 17882                           ;	Chosen strategy is simple_byte
 17883     0A6E  0873               	movf	??_adcConversionDoneHandler+1,w
 17884     0A6F  3A00               	xorlw	0	; case 0
 17885     0A70  1903               	skipnz
 17886     0A71  2A73               	goto	i1l6131
 17887     0A72  2A7B               	goto	i1l5365
 17888     0A73                     i1l6131:
 17889                           
 17890                           ; Switch size 1, requested type "simple"
 17891                           ; Number of cases is 2, Range of values is 16 to 18
 17892                           ; switch strategies available:
 17893                           ; Name         Instructions Cycles
 17894                           ; simple_byte            7     4 (average)
 17895                           ; direct_byte           15     9 (fixed)
 17896                           ; jumptable            263     9 (fixed)
 17897                           ;	Chosen strategy is simple_byte
 17898     0A73  0872               	movf	??_adcConversionDoneHandler,w
 17899     0A74  3A10               	xorlw	16	; case 16
 17900     0A75  1903               	skipnz
 17901     0A76  2A52               	goto	i1l5353
 17902     0A77  3A02               	xorlw	2	; case 18
 17903     0A78  1903               	skipnz
 17904     0A79  2A5E               	goto	i1l5357
 17905     0A7A  2A7B               	goto	i1l5365
 17906     0A7B                     i1l5365:
 17907                           
 17908                           ;adcMeasurements.c: 21:     ADC_SelectChannel(new_channel);
 17909     0A7B  086F               	movf	adcConversionDoneHandler@new_channel,w
 17910     0A7C  3197  27DC  318A   	fcall	i1_ADC_SelectChannel
 17911     0A7F                     i1l1079:
 17912     0A7F  0008               	return
 17913     0A80                     __end_of_adcConversionDoneHandler:
 17914                           
 17915                           	psect	text91
 17916     17DC                     __ptext91:	
 17917 ;; *************** function i1_ADC_SelectChannel *****************
 17918 ;; Defined at:
 17919 ;;		line 82 in file "mcc_generated_files/adc/src/adc.c"
 17920 ;; Parameters:    Size  Location     Type
 17921 ;;  channel         1    wreg     enum E6663
 17922 ;; Auto vars:     Size  Location     Type
 17923 ;;  channel         1    1[COMMON] enum E6663
 17924 ;; Return value:  Size  Location     Type
 17925 ;;                  1    wreg      void 
 17926 ;; Registers used:
 17927 ;;		wreg, status,2, status,0
 17928 ;; Tracked objects:
 17929 ;;		On entry : 0/0
 17930 ;;		On exit  : 0/0
 17931 ;;		Unchanged: 0/0
 17932 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 17933 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17934 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17935 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17936 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17937 ;;Total ram usage:        2 bytes
 17938 ;; Hardware stack levels used: 1
 17939 ;; This function calls:
 17940 ;;		Nothing
 17941 ;; This function is called by:
 17942 ;;		_adcConversionDoneHandler
 17943 ;; This function uses a non-reentrant model
 17944 ;;
 17945                           
 17946     17DC                     i1_ADC_SelectChannel:	
 17947                           ;psect for function i1_ADC_SelectChannel
 17948                           
 17949                           
 17950                           ;incstack = 0
 17951                           ; Regs used in i1_ADC_SelectChannel: [wreg+status,2+status,0]
 17952                           ;i1ADC_SelectChannel@channel stored from wreg
 17953     17DC  00F1               	movwf	i1ADC_SelectChannel@channel
 17954     17DD                     i1l5143:
 17955                           
 17956                           ;mcc_generated_files/adc/src/adc.c: 82: void ADC_SelectChannel(adc_channel_t channel);mc
      +                          c_generated_files/adc/src/adc.c: 83: {;mcc_generated_files/adc/src/adc.c: 85:     ADCON0
      +                          bits.CHS = channel;
 17957     17DD  0871               	movf	i1ADC_SelectChannel@channel,w
 17958     17DE  00F0               	movwf	??i1_ADC_SelectChannel
 17959     17DF  0DF0               	rlf	??i1_ADC_SelectChannel,f
 17960     17E0  0DF0               	rlf	??i1_ADC_SelectChannel,f
 17961     17E1  0021               	movlb	1	; select bank1
 17962     17E2  081D               	movf	29,w	;volatile
 17963     17E3  0670               	xorwf	??i1_ADC_SelectChannel,w
 17964     17E4  3903               	andlw	-253
 17965     17E5  0670               	xorwf	??i1_ADC_SelectChannel,w
 17966     17E6  009D               	movwf	29	;volatile
 17967     17E7                     i1l30:
 17968     17E7  0008               	return
 17969     17E8                     __end_ofi1_ADC_SelectChannel:
 17970                           
 17971                           	psect	text92
 17972     1746                     __ptext92:	
 17973 ;; *************** function _ADC_GetConversionResult *****************
 17974 ;; Defined at:
 17975 ;;		line 100 in file "mcc_generated_files/adc/src/adc.c"
 17976 ;; Parameters:    Size  Location     Type
 17977 ;;		None
 17978 ;; Auto vars:     Size  Location     Type
 17979 ;;		None
 17980 ;; Return value:  Size  Location     Type
 17981 ;;                  2    0[COMMON] unsigned short 
 17982 ;; Registers used:
 17983 ;;		wreg
 17984 ;; Tracked objects:
 17985 ;;		On entry : 0/0
 17986 ;;		On exit  : 0/0
 17987 ;;		Unchanged: 0/0
 17988 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 17989 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17990 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17991 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17992 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17993 ;;Total ram usage:        2 bytes
 17994 ;; Hardware stack levels used: 1
 17995 ;; This function calls:
 17996 ;;		Nothing
 17997 ;; This function is called by:
 17998 ;;		_adcConversionDoneHandler
 17999 ;; This function uses a non-reentrant model
 18000 ;;
 18001                           
 18002     1746                     _ADC_GetConversionResult:	
 18003                           ;psect for function _ADC_GetConversionResult
 18004                           
 18005     1746                     i1l4593:	
 18006                           ;incstack = 0
 18007                           ; Regs used in _ADC_GetConversionResult: [wreg]
 18008                           
 18009                           
 18010                           ;mcc_generated_files/adc/src/adc.c: 103:     return ((adc_result_t)((ADRESH << 8) + ADRE
      +                          SL));
 18011     1746  0021               	movlb	1	; select bank1
 18012     1747  081C               	movf	28,w	;volatile
 18013     1748  00F1               	movwf	?_ADC_GetConversionResult+1
 18014     1749  081B               	movf	27,w	;volatile
 18015     174A  00F0               	movwf	?_ADC_GetConversionResult
 18016     174B                     i1l39:
 18017     174B  0008               	return
 18018     174C                     __end_of_ADC_GetConversionResult:
 18019     0002                     ___latbits      equ	2
 18020     007E                     btemp           set	126	;btemp
 18021     007E                     int$flags       set	126
 18022     007E                     wtemp0          set	126
 18023                           
 18024                           	psect	config
 18025                           
 18026                           ;Config register CONFIG1 @ 0x8007
 18027                           ;	FEXTOSC External Oscillator mode Selection bits
 18028                           ;	FEXTOSC = OFF, Oscillator not enabled
 18029                           ;	Power-up default value for COSC bits
 18030                           ;	RSTOSC = HFINT32, HFINTOSC with 2x PLL (32MHz)
 18031                           ;	Clock Out Enable bit
 18032                           ;	CLKOUTEN = OFF, CLKOUT function is disabled; I/O or oscillator function on OSC2
 18033                           ;	Clock Switch Enable bit
 18034                           ;	CSWEN = ON, Writing to NOSC and NDIV is allowed
 18035                           ;	Fail-Safe Clock Monitor Enable
 18036                           ;	FCMEN = ON, Fail-Safe Clock Monitor is enabled
 18037     8007                     	org	32775
 18038     8007  3F8C               	dw	16268
 18039                           
 18040                           ;Config register CONFIG2 @ 0x8008
 18041                           ;	Master Clear Enable bit
 18042                           ;	MCLRE = ON, MCLR/VPP pin function is MCLR; Weak pull-up enabled
 18043                           ;	Power-up Timer Enable bit
 18044                           ;	PWRTE = OFF, PWRT disabled
 18045                           ;	Watchdog Timer Enable bits
 18046                           ;	WDTE = OFF, WDT disabled; SWDTEN is ignored
 18047                           ;	Low-power BOR enable bit
 18048                           ;	LPBOREN = OFF, ULPBOR disabled
 18049                           ;	Brown-out Reset Enable bits
 18050                           ;	BOREN = ON, Brown-out Reset enabled, SBOREN bit ignored
 18051                           ;	Brown-out Reset Voltage selection bit
 18052                           ;	BORV = LOW, Brown-out voltage (Vbor) set to 2.45V
 18053                           ;	PPSLOCK bit One-Way Set Enable bit
 18054                           ;	PPS1WAY = ON, The PPSLOCK bit can be cleared and set only once; PPS registers remain l
      +                          ocked after one clear/set cycle
 18055                           ;	Stack Overflow/Underflow Reset Enable bit
 18056                           ;	STVREN = ON, Stack Overflow or Underflow will cause a Reset
 18057                           ;	Debugger enable bit
 18058                           ;	DEBUG = 0x1, unprogrammed default
 18059     8008                     	org	32776
 18060     8008  3FF3               	dw	16371
 18061                           
 18062                           ;Config register CONFIG3 @ 0x8009
 18063                           ;	User NVM self-write protection bits
 18064                           ;	WRT = OFF, Write protection off
 18065                           ;	Low Voltage Programming Enable bit
 18066                           ;	LVP = ON, Low Voltage programming enabled. MCLR/VPP pin function is MCLR. MCLRE config
      +                          uration bit is ignored.
 18067     8009                     	org	32777
 18068     8009  3FFF               	dw	16383
 18069                           
 18070                           ;Config register CONFIG4 @ 0x800A
 18071                           ;	User NVM Program Memory Code Protection bit
 18072                           ;	CP = OFF, User NVM code protection disabled
 18073                           ;	Data NVM Memory Code Protection bit
 18074                           ;	CPD = OFF, Data NVM code protection disabled
 18075     800A                     	org	32778
 18076     800A  3FFF               	dw	16383

Data Sizes:
    Strings     174
    Constant    124
    Data        12
    BSS         143
    Persistent  44
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     14      14
    BANK0            80     53      80
    BANK1            80     76      80
    BANK2            80      0      80
    BANK3            80      0      56
    BANK4            80      0       0
    BANK5            80      0       0
    BANK6            80      0       0
    BANK7            80      0       0
    BANK8            80      0       0
    BANK9            80      0       0
    BANK10           80      0       0
    BANK11           80      0       0
    BANK12           48      0       0

Pointer List with Targets:

    ADC_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> ADC_DefaultInterruptHandler(), adcConversionDoneHandler(), NULL(), 

    ADC_SetInterruptHandler@InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> ADC_DefaultInterruptHandler(), adcConversionDoneHandler(), 

    dtoa@fp	PTR struct _IO_FILE size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    EUSART_FramingErrorCallbackRegister@callbackHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART_DefaultFramingErrorCallback(), 

    EUSART_FramingErrorHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART_DefaultFramingErrorCallback(), NULL(), 

    EUSART_OverrunErrorCallbackRegister@callbackHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART_DefaultOverrunErrorCallback(), 

    EUSART_OverrunErrorHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART_DefaultOverrunErrorCallback(), NULL(), 

    EUSART_RxCompleteInterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> NULL(), 

    EUSART_RxInterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART_ReceiveISR(), NULL(), 

    EUSART_TxCompleteInterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> NULL(), 

    EUSART_TxInterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART_TransmitISR(), NULL(), 

    fputc@fp	PTR struct _IO_FILE size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    fputc@fp$.$buffer	PTR unsigned char  size(2) Largest target is 0

    fputc@fp$.$source	PTR const unsigned char  size(2) Largest target is 0

    fputs@fp	PTR struct _IO_FILE size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    fputs@s	PTR const unsigned char  size(1) Largest target is 32
		 -> dbuf(BANK3[32]), 

    I2C2_Callback	PTR FTN()void  size(2) Largest target is 1
		 -> NULL(), 

    i2c2_eventTable	const PTR FTN()enum E6668[9] size(2) Largest target is 1
		 -> I2C2_EVENT_ERROR(), I2C2_EVENT_IDLE(), I2C2_EVENT_NACK(), I2C2_EVENT_RESET(), 
		 -> I2C2_EVENT_RX(), I2C2_EVENT_SEND_RD_ADDR(), I2C2_EVENT_SEND_WR_ADDR(), I2C2_EVENT_STOP(), 
		 -> I2C2_EVENT_TX(), 

    I2C2_Host$CallbackRegister	PTR FTN(PTR FTN()void ,)void  size(2) Largest target is 1
		 -> I2C2_CallbackRegister(), 

    I2C2_Host$Deinitialize	PTR FTN()void  size(2) Largest target is 1
		 -> I2C2_Deinitialize(), 

    I2C2_Host$ErrorGet	PTR FTN()enum E6659 size(2) Largest target is 1
		 -> I2C2_ErrorGet(), 

    I2C2_Host$Initialize	PTR FTN()void  size(2) Largest target is 1
		 -> I2C2_Initialize(), 

    I2C2_Host$IsBusy	PTR FTN()_Bool  size(2) Largest target is 1
		 -> I2C2_IsBusy(), 

    I2C2_Host$Read	PTR FTN(unsigned short ,PTR unsigned char ,unsigned int ,)_Bool  size(2) Largest target is 1
		 -> I2C2_Read(), 

    I2C2_Host$Tasks	PTR FTN()void  size(2) Largest target is 1
		 -> NULL(), 

    I2C2_Host$TransferSetup	PTR FTN(PTR struct i2c_transfer_setup,unsigned long ,)_Bool  size(2) Largest target is 1
		 -> NULL(), 

    I2C2_Host$Write	PTR FTN(unsigned short ,PTR unsigned char ,unsigned int ,)_Bool  size(2) Largest target is 1
		 -> I2C2_Write(), 

    I2C2_Host$WriteRead	PTR FTN(unsigned short ,PTR unsigned char ,unsigned int ,PTR unsigned char ,unsigned int ,)_Bool  size(2) Largest target is 1
		 -> I2C2_WriteRead(), 

    i2c2Status$readPtr	PTR unsigned char  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    i2c2Status$writePtr	PTR unsigned char  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    INT_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> INT_DefaultInterruptHandler(), NULL(), 

    INT_SetInterruptHandler@InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> INT_DefaultInterruptHandler(), 

    ledstrip$BufferExchange	PTR FTN(PTR void ,unsigned int ,)void  size(2) Largest target is 1
		 -> SPI1_BufferExchange(), 

    ledstrip$BufferRead	PTR FTN(PTR void ,unsigned int ,)void  size(2) Largest target is 1
		 -> SPI1_BufferRead(), 

    ledstrip$BufferWrite	PTR FTN(PTR void ,unsigned int ,)void  size(2) Largest target is 1
		 -> SPI1_BufferWrite(), 

    ledstrip$ByteExchange	PTR FTN(unsigned char ,)unsigned char  size(2) Largest target is 1
		 -> SPI1_ByteExchange(), 

    ledstrip$ByteRead	PTR FTN()unsigned char  size(2) Largest target is 1
		 -> SPI1_ByteRead(), 

    ledstrip$ByteWrite	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> SPI1_ByteWrite(), 

    ledstrip$Close	PTR FTN()void  size(2) Largest target is 1
		 -> SPI1_Close(), 

    ledstrip$Deinitialize	PTR FTN()void  size(2) Largest target is 1
		 -> SPI1_Deinitialize(), 

    ledstrip$Initialize	PTR FTN()void  size(2) Largest target is 1
		 -> SPI1_Initialize(), 

    ledstrip$IsRxReady	PTR FTN()_Bool  size(2) Largest target is 1
		 -> SPI1_IsRxReady(), 

    ledstrip$IsTxReady	PTR FTN()_Bool  size(2) Largest target is 1
		 -> SPI1_IsTxReady(), 

    ledstrip$Open	PTR FTN(unsigned char ,)_Bool  size(2) Largest target is 1
		 -> SPI1_Open(), 

    ledstrip$RxCompleteCallbackRegister	PTR FTN(PTR FTN()void ,)void  size(2) Largest target is 1
		 -> NULL(), 

    ledstrip$TxCompleteCallbackRegister	PTR FTN(PTR FTN()void ,)void  size(2) Largest target is 1
		 -> NULL(), 

    pad@buf	PTR unsigned char  size(1) Largest target is 32
		 -> dbuf(BANK3[32]), 

    pad@fp	PTR struct _IO_FILE size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    printf@ap	PTR void [1] size(1) Largest target is 2
		 -> ?_printf(BANK1[2]), 

    printf@fmt	PTR const unsigned char  size(2) Largest target is 25
		 -> STR_1(CODE[2]), STR_10(CODE[25]), STR_11(CODE[13]), STR_12(CODE[13]), 
		 -> STR_13(CODE[15]), STR_14(CODE[17]), STR_2(CODE[8]), STR_3(CODE[24]), 
		 -> STR_4(CODE[11]), STR_5(CODE[15]), STR_6(CODE[17]), STR_7(CODE[7]), 
		 -> STR_8(CODE[7]), STR_9(CODE[3]), 

    printOut@str	PTR unsigned char  size(2) Largest target is 2
		 -> STR_1(CODE[2]), 

    read_prec_or_width@ap	PTR PTR void [1] size(1) Largest target is 1
		 -> printf@ap(BANK1[1]), 

    read_prec_or_width@fmt	PTR PTR const unsigned char  size(1) Largest target is 2
		 -> vfprintf@cfmt(BANK1[2]), 

    S1481$17$0	PTR FTN()void  size(2) Largest target is 0

    S1481$18$0	PTR FTN()void  size(2) Largest target is 0

    S1481$20$0	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART_DefaultFramingErrorCallback(), 

    S1481$21$0	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART_DefaultOverrunErrorCallback(), 

    S1481$AutoBaudEventEnableGet	PTR FTN()_Bool  size(2) Largest target is 1
		 -> NULL(), 

    S1481$AutoBaudQuery	PTR FTN()_Bool  size(2) Largest target is 1
		 -> EUSART_AutoBaudQuery(), 

    S1481$AutoBaudSet	PTR FTN(_Bool ,)void  size(2) Largest target is 1
		 -> EUSART_AutoBaudSet(), 

    S1481$BaudRateGet	PTR FTN()unsigned long  size(2) Largest target is 1
		 -> NULL(), 

    S1481$BaudRateSet	PTR FTN(unsigned long ,)void  size(2) Largest target is 1
		 -> NULL(), 

    S1481$BRGCountGet	PTR FTN()unsigned long  size(2) Largest target is 1
		 -> NULL(), 

    S1481$BRGCountSet	PTR FTN(unsigned long ,)void  size(2) Largest target is 1
		 -> NULL(), 

    S1481$Deinitialize	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART_Deinitialize(), 

    S1481$ErrorGet	PTR FTN()unsigned int  size(2) Largest target is 2
		 -> EUSART_ErrorGet(), 

    S1481$EventCallbackRegister	PTR FTN(PTR FTN()void ,)void  size(2) Largest target is 1
		 -> NULL(), 

    S1481$FramingErrorCallbackRegister	PTR FTN(PTR FTN()void ,)void  size(2) Largest target is 1
		 -> EUSART_FramingErrorCallbackRegister(), 

    S1481$Initialize	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART_Initialize(), 

    S1481$IsRxReady	PTR FTN()_Bool  size(2) Largest target is 1
		 -> EUSART_IsRxReady(), 

    S1481$IsTxDone	PTR FTN()_Bool  size(2) Largest target is 1
		 -> EUSART_IsTxDone(), 

    S1481$IsTxReady	PTR FTN()_Bool  size(2) Largest target is 1
		 -> EUSART_IsTxReady(), 

    S1481$OverrunErrorCallbackRegister	PTR FTN(PTR FTN()void ,)void  size(2) Largest target is 1
		 -> EUSART_OverrunErrorCallbackRegister(), 

    S1481$ParityErrorCallbackRegister	PTR FTN(PTR FTN()void ,)void  size(2) Largest target is 1
		 -> NULL(), 

    S1481$Read	PTR FTN()unsigned char  size(2) Largest target is 1
		 -> EUSART_Read(), 

    S1481$RxCompleteCallbackRegister	PTR FTN(PTR FTN()void ,)void  size(2) Largest target is 1
		 -> EUSART_RxCompleteCallbackRegister(), 

    S1481$TransmitDisable	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART_TransmitDisable(), 

    S1481$TransmitEnable	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART_TransmitEnable(), 

    S1481$TxCollisionCallbackRegister	PTR FTN(PTR FTN()void ,)void  size(2) Largest target is 1
		 -> NULL(), 

    S1481$TxCompleteCallbackRegister	PTR FTN(PTR FTN()void ,)void  size(2) Largest target is 1
		 -> EUSART_TxCompleteCallbackRegister(), 

    S1481$Write	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> EUSART_Write(), 

    S197$2$1	PTR unsigned char  size(2) Largest target is 0

    S197$3$1	PTR unsigned char  size(2) Largest target is 0

    S197$4$1	PTR unsigned char  size(2) Largest target is 0

    S197$4$3	PTR unsigned char  size(2) Largest target is 0

    S197$8$0	PTR FTN()void  size(2) Largest target is 0

    S197$CallbackRegister	PTR FTN(PTR FTN()void ,)void  size(2) Largest target is 1
		 -> I2C2_CallbackRegister(), 

    S197$Deinitialize	PTR FTN()void  size(2) Largest target is 1
		 -> I2C2_Deinitialize(), 

    S197$ErrorGet	PTR FTN()enum E6659 size(2) Largest target is 1
		 -> I2C2_ErrorGet(), 

    S197$Initialize	PTR FTN()void  size(2) Largest target is 1
		 -> I2C2_Initialize(), 

    S197$IsBusy	PTR FTN()_Bool  size(2) Largest target is 1
		 -> I2C2_IsBusy(), 

    S197$Read	PTR FTN(unsigned short ,PTR unsigned char ,unsigned int ,)_Bool  size(2) Largest target is 1
		 -> I2C2_Read(), 

    S197$Tasks	PTR FTN()void  size(2) Largest target is 1
		 -> NULL(), 

    S197$TransferSetup	PTR FTN(PTR struct i2c_transfer_setup,unsigned long ,)_Bool  size(2) Largest target is 1
		 -> NULL(), 

    S197$Write	PTR FTN(unsigned short ,PTR unsigned char ,unsigned int ,)_Bool  size(2) Largest target is 1
		 -> I2C2_Write(), 

    S197$WriteRead	PTR FTN(unsigned short ,PTR unsigned char ,unsigned int ,PTR unsigned char ,unsigned int ,)_Bool  size(2) Largest target is 1
		 -> I2C2_WriteRead(), 

    S2563$buffer	PTR unsigned char  size(2) Largest target is 0

    S2563$source	PTR const unsigned char  size(2) Largest target is 0

    S296$readPtr	PTR unsigned char  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    S296$writePtr	PTR unsigned char  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    S758$4$0	PTR void  size(2) Largest target is 0

    S758$5$0	PTR void  size(2) Largest target is 0

    S758$6$0	PTR void  size(2) Largest target is 0

    S758SPI_INTERFACE$BufferExchange	PTR FTN(PTR void ,unsigned int ,)void  size(2) Largest target is 1
		 -> SPI1_BufferExchange(), 

    S758SPI_INTERFACE$BufferRead	PTR FTN(PTR void ,unsigned int ,)void  size(2) Largest target is 1
		 -> SPI1_BufferRead(), 

    S758SPI_INTERFACE$BufferWrite	PTR FTN(PTR void ,unsigned int ,)void  size(2) Largest target is 1
		 -> SPI1_BufferWrite(), 

    S758SPI_INTERFACE$ByteExchange	PTR FTN(unsigned char ,)unsigned char  size(2) Largest target is 1
		 -> SPI1_ByteExchange(), 

    S758SPI_INTERFACE$ByteRead	PTR FTN()unsigned char  size(2) Largest target is 1
		 -> SPI1_ByteRead(), 

    S758SPI_INTERFACE$ByteWrite	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> SPI1_ByteWrite(), 

    S758SPI_INTERFACE$Close	PTR FTN()void  size(2) Largest target is 1
		 -> SPI1_Close(), 

    S758SPI_INTERFACE$Deinitialize	PTR FTN()void  size(2) Largest target is 1
		 -> SPI1_Deinitialize(), 

    S758SPI_INTERFACE$Initialize	PTR FTN()void  size(2) Largest target is 1
		 -> SPI1_Initialize(), 

    S758SPI_INTERFACE$IsRxReady	PTR FTN()_Bool  size(2) Largest target is 1
		 -> SPI1_IsRxReady(), 

    S758SPI_INTERFACE$IsTxReady	PTR FTN()_Bool  size(2) Largest target is 1
		 -> SPI1_IsTxReady(), 

    S758SPI_INTERFACE$Open	PTR FTN(unsigned char ,)_Bool  size(2) Largest target is 1
		 -> SPI1_Open(), 

    S758SPI_INTERFACE$RxCompleteCallbackRegister	PTR FTN(PTR FTN()void ,)void  size(2) Largest target is 1
		 -> NULL(), 

    S758SPI_INTERFACE$TxCompleteCallbackRegister	PTR FTN(PTR FTN()void ,)void  size(2) Largest target is 1
		 -> NULL(), 

    sp__readLine	PTR unsigned char  size(1) Largest target is 20
		 -> line(BANK3[20]), 

    strlen@a	PTR const unsigned char  size(1) Largest target is 32
		 -> dbuf(BANK3[32]), 

    strlen@s	PTR const unsigned char  size(1) Largest target is 32
		 -> dbuf(BANK3[32]), 

    TMR2_PeriodMatchCallback	PTR FTN()void  size(2) Largest target is 1
		 -> TMR2_DefaultPeriodMatchCallback(), NULL(), 

    TMR4_PeriodMatchCallback	PTR FTN()void  size(2) Largest target is 1
		 -> controller(), TMR4_DefaultPeriodMatchCallback(), NULL(), 

    TMR4_PeriodMatchCallbackRegister@CallbackHandler	PTR FTN()void  size(2) Largest target is 1
		 -> controller(), 

    TMR6_PeriodMatchCallback	PTR FTN()void  size(2) Largest target is 1
		 -> TMR6_DefaultPeriodMatchCallback(), updateLedstripAnimation(), NULL(), 

    UART1$AutoBaudEventEnableGet	PTR FTN()_Bool  size(2) Largest target is 1
		 -> NULL(), 

    UART1$AutoBaudQuery	PTR FTN()_Bool  size(2) Largest target is 1
		 -> EUSART_AutoBaudQuery(), 

    UART1$AutoBaudSet	PTR FTN(_Bool ,)void  size(2) Largest target is 1
		 -> EUSART_AutoBaudSet(), 

    UART1$BaudRateGet	PTR FTN()unsigned long  size(2) Largest target is 1
		 -> NULL(), 

    UART1$BaudRateSet	PTR FTN(unsigned long ,)void  size(2) Largest target is 1
		 -> NULL(), 

    UART1$BRGCountGet	PTR FTN()unsigned long  size(2) Largest target is 1
		 -> NULL(), 

    UART1$BRGCountSet	PTR FTN(unsigned long ,)void  size(2) Largest target is 1
		 -> NULL(), 

    UART1$Deinitialize	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART_Deinitialize(), 

    UART1$ErrorGet	PTR FTN()unsigned int  size(2) Largest target is 2
		 -> EUSART_ErrorGet(), 

    UART1$EventCallbackRegister	PTR FTN(PTR FTN()void ,)void  size(2) Largest target is 1
		 -> NULL(), 

    UART1$FramingErrorCallbackRegister	PTR FTN(PTR FTN()void ,)void  size(2) Largest target is 1
		 -> EUSART_FramingErrorCallbackRegister(), 

    UART1$Initialize	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART_Initialize(), 

    UART1$IsRxReady	PTR FTN()_Bool  size(2) Largest target is 1
		 -> EUSART_IsRxReady(), 

    UART1$IsTxDone	PTR FTN()_Bool  size(2) Largest target is 1
		 -> EUSART_IsTxDone(), 

    UART1$IsTxReady	PTR FTN()_Bool  size(2) Largest target is 1
		 -> EUSART_IsTxReady(), 

    UART1$OverrunErrorCallbackRegister	PTR FTN(PTR FTN()void ,)void  size(2) Largest target is 1
		 -> EUSART_OverrunErrorCallbackRegister(), 

    UART1$ParityErrorCallbackRegister	PTR FTN(PTR FTN()void ,)void  size(2) Largest target is 1
		 -> NULL(), 

    UART1$Read	PTR FTN()unsigned char  size(2) Largest target is 1
		 -> EUSART_Read(), 

    UART1$RxCompleteCallbackRegister	PTR FTN(PTR FTN()void ,)void  size(2) Largest target is 1
		 -> EUSART_RxCompleteCallbackRegister(), 

    UART1$TransmitDisable	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART_TransmitDisable(), 

    UART1$TransmitEnable	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART_TransmitEnable(), 

    UART1$TxCollisionCallbackRegister	PTR FTN(PTR FTN()void ,)void  size(2) Largest target is 1
		 -> NULL(), 

    UART1$TxCompleteCallbackRegister	PTR FTN(PTR FTN()void ,)void  size(2) Largest target is 1
		 -> EUSART_TxCompleteCallbackRegister(), 

    UART1$Write	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> EUSART_Write(), 

    utoa@fp	PTR struct _IO_FILE size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    vfpfcnvrt@ap	PTR PTR void  size(2) Largest target is 1
		 -> printf@ap(BANK1[1]), 

    vfpfcnvrt@cp	PTR unsigned char  size(2) Largest target is 25
		 -> STR_1(CODE[2]), STR_10(CODE[25]), STR_11(CODE[13]), STR_12(CODE[13]), 
		 -> STR_13(CODE[15]), STR_14(CODE[17]), STR_2(CODE[8]), STR_3(CODE[24]), 
		 -> STR_4(CODE[11]), STR_5(CODE[15]), STR_6(CODE[17]), STR_7(CODE[7]), 
		 -> STR_8(CODE[7]), STR_9(CODE[3]), 

    vfpfcnvrt@fmt	PTR PTR unsigned char  size(1) Largest target is 2
		 -> vfprintf@cfmt(BANK1[2]), 

    vfpfcnvrt@fp	PTR struct _IO_FILE size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    vfprintf@ap	PTR PTR void  size(1) Largest target is 1
		 -> printf@ap(BANK1[1]), 

    vfprintf@cfmt	PTR unsigned char  size(2) Largest target is 25
		 -> STR_1(CODE[2]), STR_10(CODE[25]), STR_11(CODE[13]), STR_12(CODE[13]), 
		 -> STR_13(CODE[15]), STR_14(CODE[17]), STR_2(CODE[8]), STR_3(CODE[24]), 
		 -> STR_4(CODE[11]), STR_5(CODE[15]), STR_6(CODE[17]), STR_7(CODE[7]), 
		 -> STR_8(CODE[7]), STR_9(CODE[3]), 

    vfprintf@fmt	PTR const unsigned char  size(2) Largest target is 25
		 -> STR_1(CODE[2]), STR_10(CODE[25]), STR_11(CODE[13]), STR_12(CODE[13]), 
		 -> STR_13(CODE[15]), STR_14(CODE[17]), STR_2(CODE[8]), STR_3(CODE[24]), 
		 -> STR_4(CODE[11]), STR_5(CODE[15]), STR_6(CODE[17]), STR_7(CODE[7]), 
		 -> STR_8(CODE[7]), STR_9(CODE[3]), 

    vfprintf@fp	PTR struct _IO_FILE size(2) Largest target is 0
		 -> NULL(NULL[0]), 


Critical Paths under _main in COMMON

    None.

Critical Paths under _INTERRUPT_InterruptManager in COMMON

    _controller->___xxtofl
    ___fltol->___xxtofl
    ___flmul->___xxtofl
    ___fladd->___xxtofl
    _I2C2_ISR->_I2C2_EventHandler
    _I2C2_EventHandler->_I2C2_EVENT_TX
    _I2C2_ERROR_ISR->_I2C2_ErrorEventHandler
    _I2C2_ErrorEventHandler->_I2C2_EVENT_TX
    _I2C2_EVENT_TX->_I2C2_DataTransmit
    _I2C2_EVENT_SEND_WR_ADDR->_I2C2_DataTransmit
    _ADC_ISR->_adcConversionDoneHandler
    _adcConversionDoneHandler->_ADC_GetConversionResult
    _adcConversionDoneHandler->i1_ADC_SelectChannel

Critical Paths under _main in BANK0

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK0

    _TMR4_ISR->_controller
    _controller->___fladd
    ___fltol->___flmul
    ___fladd->___flmul

Critical Paths under _main in BANK1

    _main->_printOut
    _printOut->_printf
    _printf->_vfprintf
    _vfprintf->_vfpfcnvrt
    _vfpfcnvrt->_dtoa
    _utoa->_pad
    _read_prec_or_width->___wmul
    _dtoa->_pad
    _pad->_fputs
    _fputs->_fputc
    _fputc->_putch
    _putch->_EUSART_Write
    _abs->___awmod
    _initAdcMultiplexer->_ADC_SelectChannel
    _initAdcMultiplexer->_ADC_SetInterruptHandler
    _INTERRUPT_Initialize->_INT_SetInterruptHandler
    _EUSART_Initialize->_EUSART_FramingErrorCallbackRegister
    _EUSART_Initialize->_EUSART_OverrunErrorCallbackRegister
    _ADC_Initialize->_ADC_SetInterruptHandler

Critical Paths under _INTERRUPT_InterruptManager in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK12

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 2     2      0    5624
                                             74 BANK1      2     2      0
                  _SYSTEM_Initialize
   _TMR4_PeriodMatchCallbackRegister
                 _initAdcMultiplexer
                           _printOut
 ---------------------------------------------------------------------------------
 (1) _printOut                                             2     0      2    5411
                                             72 BANK1      2     0      2
                             _printf
 ---------------------------------------------------------------------------------
 (2) _printf                                               9     3      6    5388
                                             65 BANK1      7     1      6
                           _vfprintf
 ---------------------------------------------------------------------------------
 (3) _vfprintf                                             8     3      5    5314
                                             57 BANK1      8     3      5
                          _vfpfcnvrt
 ---------------------------------------------------------------------------------
 (4) _vfpfcnvrt                                           17    12      5    5173
                                             41 BANK1     16    11      5
                               _dtoa
                              _fputc
                 _read_prec_or_width
                               _utoa
 ---------------------------------------------------------------------------------
 (5) _utoa                                                10     6      4    1661
                                             28 BANK1     10     6      4
                            ___lwdiv
                            ___lwmod
                                _pad
 ---------------------------------------------------------------------------------
 (6) ___lwmod                                              5     1      4     161
                                              0 BANK1      5     1      4
 ---------------------------------------------------------------------------------
 (6) ___lwdiv                                              7     3      4     166
                                              0 BANK1      7     3      4
 ---------------------------------------------------------------------------------
 (5) _read_prec_or_width                                   8     6      2     286
                                              6 BANK1      8     6      2
                             ___wmul
 ---------------------------------------------------------------------------------
 (6) ___wmul                                               6     2      4     104
                                              0 BANK1      6     2      4
 ---------------------------------------------------------------------------------
 (5) _dtoa                                                13     9      4    2161
                                             28 BANK1     13     9      4
                            ___awdiv
                            ___awmod
                                _abs
                                _pad
 ---------------------------------------------------------------------------------
 (6) _pad                                                  8     3      5    1083
                                             20 BANK1      8     3      5
                              _fputc
                              _fputs
                             _strlen
 ---------------------------------------------------------------------------------
 (7) _strlen                                               3     1      2      91
                                              0 BANK1      3     1      2
 ---------------------------------------------------------------------------------
 (7) _fputs                                                8     5      3     432
                                             12 BANK1      8     5      3
                              _fputc
 ---------------------------------------------------------------------------------
 (8) _fputc                                                9     5      4     331
                                              3 BANK1      9     5      4
                              _putch
 ---------------------------------------------------------------------------------
 (9) _putch                                                1     1      0      97
                                              2 BANK1      1     1      0
                   _EUSART_IsTxReady
                       _EUSART_Write
 ---------------------------------------------------------------------------------
 (10) _EUSART_Write                                        2     1      1      68
                                              0 BANK1      2     1      1
 ---------------------------------------------------------------------------------
 (10) _EUSART_IsTxReady                                    0     0      0       0
 ---------------------------------------------------------------------------------
 (6) _abs                                                  4     2      2      67
                                              6 BANK1      4     2      2
                            ___awmod (ARG)
 ---------------------------------------------------------------------------------
 (6) ___awmod                                              6     2      4     298
                                              0 BANK1      6     2      4
 ---------------------------------------------------------------------------------
 (6) ___awdiv                                              8     4      4     302
                                              0 BANK1      8     4      4
 ---------------------------------------------------------------------------------
 (1) _initAdcMultiplexer                                   0     0      0      53
                  _ADC_SelectChannel
            _ADC_SetInterruptHandler
 ---------------------------------------------------------------------------------
 (2) _ADC_SelectChannel                                    2     2      0      29
                                              0 BANK1      2     2      0
 ---------------------------------------------------------------------------------
 (1) _TMR4_PeriodMatchCallbackRegister                     2     0      2      23
                                              0 BANK1      2     0      2
 ---------------------------------------------------------------------------------
 (1) _SYSTEM_Initialize                                    0     0      0     137
                     _ADC_Initialize
                   _CLOCK_Initialize
                  _EUSART_Initialize
                    _I2C2_Initialize
               _INTERRUPT_Initialize
             _PIN_MANAGER_Initialize
                    _SPI1_Initialize
                    _TMR2_Initialize
                    _TMR4_Initialize
                    _TMR6_Initialize
                 _pwm_fan_Initialize
 ---------------------------------------------------------------------------------
 (2) _pwm_fan_Initialize                                   0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _TMR6_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _TMR4_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _TMR2_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _SPI1_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _PIN_MANAGER_Initialize                               0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _INTERRUPT_Initialize                                 0     0      0      23
            _INT_SetInterruptHandler
 ---------------------------------------------------------------------------------
 (3) _INT_SetInterruptHandler                              2     0      2      23
                                              0 BANK1      2     0      2
 ---------------------------------------------------------------------------------
 (2) _I2C2_Initialize                                      0     0      0       0
              _I2C2_InterruptsEnable
 ---------------------------------------------------------------------------------
 (3) _I2C2_InterruptsEnable                                0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _EUSART_Initialize                                    0     0      0      90
_EUSART_FramingErrorCallbackRegister
_EUSART_OverrunErrorCallbackRegister
 ---------------------------------------------------------------------------------
 (3) _EUSART_OverrunErrorCallbackRegister                  2     0      2      45
                                              0 BANK1      2     0      2
 ---------------------------------------------------------------------------------
 (3) _EUSART_FramingErrorCallbackRegister                  2     0      2      45
                                              0 BANK1      2     0      2
 ---------------------------------------------------------------------------------
 (2) _CLOCK_Initialize                                     0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _ADC_Initialize                                       0     0      0      24
            _ADC_SetInterruptHandler
 ---------------------------------------------------------------------------------
 (2) _ADC_SetInterruptHandler                              2     0      2      24
                                              0 BANK1      2     0      2
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 10
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (11) _INTERRUPT_InterruptManager                          0     0      0    4852
                                NULL *
                            _ADC_ISR
                  _EUSART_ReceiveISR *
                 _EUSART_TransmitISR *
                     _I2C2_ERROR_ISR
                           _I2C2_ISR
                           _TMR2_ISR
                           _TMR4_ISR
 ---------------------------------------------------------------------------------
 (12) _TMR4_ISR                                            0     0      0    4362
                                NULL *
    _TMR4_DefaultPeriodMatchCallback *
                         _controller *
 ---------------------------------------------------------------------------------
 (13) _controller                                          7     7      0    4362
                                             46 BANK0      7     7      0
                            ___fladd
                            ___flmul
                            ___fltol
                           ___xxtofl
                    _getHoogtesensor
              _pwm_fan_LoadDutyValue
 ---------------------------------------------------------------------------------
 (14) _pwm_fan_LoadDutyValue                               4     2      2      45
                                              0 COMMON     4     2      2
 ---------------------------------------------------------------------------------
 (14) _getHoogtesensor                                     2     0      2       0
                                              0 COMMON     2     0      2
 ---------------------------------------------------------------------------------
 (14) ___xxtofl                                           14    10      4     341
                                              0 COMMON    14    10      4
 ---------------------------------------------------------------------------------
 (14) ___fltol                                            10     6      4     234
                                             26 BANK0     10     6      4
                            ___flmul (ARG)
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (14) ___flmul                                            26    18      8    1617
                                              0 BANK0     26    18      8
                          __Umul8_16
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (15) __Umul8_16                                           9     7      2     139
                                              0 COMMON     9     7      2
 ---------------------------------------------------------------------------------
 (14) ___fladd                                            20    12      8    1990
                                             26 BANK0     20    12      8
                            ___flmul (ARG)
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (13) _TMR4_DefaultPeriodMatchCallback                     0     0      0       0
 ---------------------------------------------------------------------------------
 (12) _TMR2_ISR                                            0     0      0       0
                                NULL *
    _TMR2_DefaultPeriodMatchCallback *
 ---------------------------------------------------------------------------------
 (13) _TMR2_DefaultPeriodMatchCallback                     0     0      0       0
 ---------------------------------------------------------------------------------
 (12) _I2C2_ISR                                            0     0      0     185
                  _I2C2_EventHandler
 ---------------------------------------------------------------------------------
 (13) _I2C2_EventHandler                                   2     2      0     185
                                              2 COMMON     2     2      0
                         _I2C2_Close
                   _I2C2_EVENT_ERROR *
                    _I2C2_EVENT_IDLE *
                    _I2C2_EVENT_NACK *
                   _I2C2_EVENT_RESET *
                      _I2C2_EVENT_RX *
            _I2C2_EVENT_SEND_RD_ADDR *
            _I2C2_EVENT_SEND_WR_ADDR *
                    _I2C2_EVENT_STOP *
                      _I2C2_EVENT_TX *
                _I2C2_InterruptClear
                        _I2C2_IsAddr
                        _I2C2_IsData
                        _I2C2_IsNack
 ---------------------------------------------------------------------------------
 (14) _I2C2_IsNack                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (14) _I2C2_IsData                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (14) _I2C2_IsAddr                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (12) _I2C2_ERROR_ISR                                      0     0      0     185
             _I2C2_ErrorEventHandler
 ---------------------------------------------------------------------------------
 (13) _I2C2_ErrorEventHandler                              2     2      0     185
                                              2 COMMON     2     2      0
                   _I2C2_EVENT_ERROR *
                    _I2C2_EVENT_IDLE *
                    _I2C2_EVENT_NACK *
                   _I2C2_EVENT_RESET *
                      _I2C2_EVENT_RX *
            _I2C2_EVENT_SEND_RD_ADDR *
            _I2C2_EVENT_SEND_WR_ADDR *
                    _I2C2_EVENT_STOP *
                      _I2C2_EVENT_TX *
           _I2C2_ErrorInterruptClear
 ---------------------------------------------------------------------------------
 (14) _I2C2_EVENT_TX                                       1     1      0      55
                                              1 COMMON     1     1      0
                  _I2C2_DataTransmit
                    _I2C2_EVENT_STOP
                 _I2C2_RestartEnable
 ---------------------------------------------------------------------------------
 (15) _I2C2_RestartEnable                                  0     0      0       0
 ---------------------------------------------------------------------------------
 (14) _I2C2_EVENT_SEND_WR_ADDR                             0     0      0      29
                  _I2C2_DataTransmit
 ---------------------------------------------------------------------------------
 (14) _I2C2_EVENT_SEND_RD_ADDR                             0     0      0      29
                  _I2C2_DataTransmit
 ---------------------------------------------------------------------------------
 (15) _I2C2_DataTransmit                                   1     1      0      29
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (14) _I2C2_EVENT_RX                                       1     1      0      24
                                              0 COMMON     1     1      0
                       _I2C2_AckSend
                   _I2C2_DataReceive
                   _I2C2_IsRxBufFull
                      _I2C2_NackSend
                 _I2C2_ReceiveEnable
                _I2C2_RestartDisable
 ---------------------------------------------------------------------------------
 (15) _I2C2_RestartDisable                                 0     0      0       0
 ---------------------------------------------------------------------------------
 (15) _I2C2_ReceiveEnable                                  0     0      0       0
 ---------------------------------------------------------------------------------
 (15) _I2C2_NackSend                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (15) _I2C2_IsRxBufFull                                    0     0      0       0
 ---------------------------------------------------------------------------------
 (15) _I2C2_DataReceive                                    0     0      0       0
 ---------------------------------------------------------------------------------
 (15) _I2C2_AckSend                                        0     0      0       0
 ---------------------------------------------------------------------------------
 (14) _I2C2_EVENT_NACK                                     1     1      0      24
                                              0 COMMON     1     1      0
                    _I2C2_EVENT_STOP
 ---------------------------------------------------------------------------------
 (15) _I2C2_EVENT_STOP                                     0     0      0       0
                         _I2C2_Close
                      _I2C2_StopSend
 ---------------------------------------------------------------------------------
 (16) _I2C2_StopSend                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (16) _I2C2_Close                                          0     0      0       0
           _I2C2_ErrorInterruptClear
                _I2C2_InterruptClear
              _I2C2_StatusFlagsClear
 ---------------------------------------------------------------------------------
 (17) _I2C2_StatusFlagsClear                               0     0      0       0
 ---------------------------------------------------------------------------------
 (14) _I2C2_InterruptClear                                 0     0      0       0
 ---------------------------------------------------------------------------------
 (17) _I2C2_ErrorInterruptClear                            0     0      0       0
 ---------------------------------------------------------------------------------
 (14) _I2C2_EVENT_IDLE                                     0     0      0       0
 ---------------------------------------------------------------------------------
 (14) _I2C2_EVENT_ERROR                                    1     1      0      24
                                              0 COMMON     1     1      0
                   _I2C2_EVENT_RESET
 ---------------------------------------------------------------------------------
 (14) _I2C2_EVENT_RESET                                    0     0      0       0
                      _I2C2_BusReset
 ---------------------------------------------------------------------------------
 (15) _I2C2_BusReset                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (12) _EUSART_TransmitISR                                  1     1      0      23
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (12) _EUSART_ReceiveISR                                   2     2      0      68
                                              0 COMMON     2     2      0
                                NULL *
 _EUSART_DefaultFramingErrorCallback *
 _EUSART_DefaultOverrunErrorCallback *
 ---------------------------------------------------------------------------------
 (13) _EUSART_DefaultOverrunErrorCallback                  0     0      0       0
 ---------------------------------------------------------------------------------
 (13) _EUSART_DefaultFramingErrorCallback                  0     0      0       0
 ---------------------------------------------------------------------------------
 (12) _ADC_ISR                                             0     0      0      29
                                NULL *
        _ADC_DefaultInterruptHandler *
           _adcConversionDoneHandler *
 ---------------------------------------------------------------------------------
 (13) _adcConversionDoneHandler                            2     2      0      29
                                              2 COMMON     2     2      0
            _ADC_GetConversionResult
                i1_ADC_SelectChannel
 ---------------------------------------------------------------------------------
 (14) i1_ADC_SelectChannel                                 2     2      0      29
                                              0 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 (14) _ADC_GetConversionResult                             2     0      2       0
                                              0 COMMON     2     0      2
 ---------------------------------------------------------------------------------
 (13) _ADC_DefaultInterruptHandler                         0     0      0       0
 ---------------------------------------------------------------------------------
 (13) NULL(Fake)                                           0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 17
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _SYSTEM_Initialize
     _ADC_Initialize
       _ADC_SetInterruptHandler
     _CLOCK_Initialize
     _EUSART_Initialize
       _EUSART_FramingErrorCallbackRegister
       _EUSART_OverrunErrorCallbackRegister
     _I2C2_Initialize
       _I2C2_InterruptsEnable
     _INTERRUPT_Initialize
       _INT_SetInterruptHandler
     _PIN_MANAGER_Initialize
     _SPI1_Initialize
     _TMR2_Initialize
     _TMR4_Initialize
     _TMR6_Initialize
     _pwm_fan_Initialize
   _TMR4_PeriodMatchCallbackRegister
   _initAdcMultiplexer
     _ADC_SelectChannel
     _ADC_SetInterruptHandler
   _printOut
     _printf
       _vfprintf
         _vfpfcnvrt
           _dtoa
             ___awdiv
             ___awmod
             _abs
               ___awmod (ARG)
             _pad
               _fputc
                 _putch
                   _EUSART_IsTxReady
                   _EUSART_Write
               _fputs
                 _fputc
               _strlen
           _fputc
           _read_prec_or_width
             ___wmul
           _utoa
             ___lwdiv
             ___lwmod
             _pad

 _INTERRUPT_InterruptManager (ROOT)
   NULL(Fake) *
   _ADC_ISR *
     NULL(Fake) *
     _ADC_DefaultInterruptHandler *
     _adcConversionDoneHandler *
       _ADC_GetConversionResult
       i1_ADC_SelectChannel
   _EUSART_ReceiveISR *
     NULL(Fake) *
     _EUSART_DefaultFramingErrorCallback *
     _EUSART_DefaultOverrunErrorCallback *
   _EUSART_TransmitISR *
   _I2C2_ERROR_ISR *
     _I2C2_ErrorEventHandler
       _I2C2_EVENT_ERROR *
         _I2C2_EVENT_RESET
           _I2C2_BusReset
       _I2C2_EVENT_IDLE *
       _I2C2_EVENT_NACK *
         _I2C2_EVENT_STOP
           _I2C2_Close
             _I2C2_ErrorInterruptClear
             _I2C2_InterruptClear
             _I2C2_StatusFlagsClear
           _I2C2_StopSend
       _I2C2_EVENT_RESET *
       _I2C2_EVENT_RX *
         _I2C2_AckSend
         _I2C2_DataReceive
         _I2C2_IsRxBufFull
         _I2C2_NackSend
         _I2C2_ReceiveEnable
         _I2C2_RestartDisable
       _I2C2_EVENT_SEND_RD_ADDR *
         _I2C2_DataTransmit
       _I2C2_EVENT_SEND_WR_ADDR *
         _I2C2_DataTransmit
       _I2C2_EVENT_STOP *
       _I2C2_EVENT_TX *
         _I2C2_DataTransmit
         _I2C2_EVENT_STOP
         _I2C2_RestartEnable
       _I2C2_ErrorInterruptClear *
   _I2C2_ISR *
     _I2C2_EventHandler
       _I2C2_Close
       _I2C2_EVENT_ERROR *
       _I2C2_EVENT_IDLE *
       _I2C2_EVENT_NACK *
       _I2C2_EVENT_RESET *
       _I2C2_EVENT_RX *
       _I2C2_EVENT_SEND_RD_ADDR *
       _I2C2_EVENT_SEND_WR_ADDR *
       _I2C2_EVENT_STOP *
       _I2C2_EVENT_TX *
       _I2C2_InterruptClear *
       _I2C2_IsAddr *
       _I2C2_IsData *
       _I2C2_IsNack *
   _TMR2_ISR *
     NULL(Fake) *
     _TMR2_DefaultPeriodMatchCallback *
   _TMR4_ISR *
     NULL(Fake) *
     _TMR4_DefaultPeriodMatchCallback *
     _controller *
       ___fladd
         ___flmul (ARG)
           __Umul8_16
           ___xxtofl (ARG)
         ___xxtofl (ARG)
       ___flmul
       ___fltol
         ___flmul (ARG)
         ___xxtofl (ARG)
       ___xxtofl
       _getHoogtesensor
       _pwm_fan_LoadDutyValue

Address spaces:
Name               Size   Autos  Total    Usage
BITCOMMON           14      0       0      0.0%
BITBANK0            80      0       0      0.0%
BITBANK1            80      0       0      0.0%
BITBANK2            80      0       0      0.0%
BITBANK3            80      0       0      0.0%
BITBANK4            80      0       0      0.0%
BITBANK5            80      0       0      0.0%
BITBANK6            80      0       0      0.0%
BITBANK7            80      0       0      0.0%
BITBANK8            80      0       0      0.0%
BITBANK9            80      0       0      0.0%
BITBANK10           80      0       0      0.0%
BITBANK11           80      0       0      0.0%
BITBANK12           48      0       0      0.0%
BIGRAM            1008      0       0      0.0%
COMMON              14     14      14    100.0%
BANK0               80     53      80    100.0%
BANK1               80     76      80    100.0%
BANK2               80      0      80    100.0%
BANK3               80      0      56     70.0%
BANK4               80      0       0      0.0%
BANK5               80      0       0      0.0%
BANK6               80      0       0      0.0%
BANK7               80      0       0      0.0%
BANK8               80      0       0      0.0%
BANK9               80      0       0      0.0%
BANK10              80      0       0      0.0%
BANK11              80      0       0      0.0%
BANK12              48      0       0      0.0%
STACK                0      0       0      0.0%
DATA                 0      0     310      0.0%


Microchip Technology PIC Macro Assembler V3.00 build 20241204225717 
Symbol Table                                                                                   Wed Feb 26 10:06:56 2025

           __end_of_TMR4_DefaultPeriodMatchCallback 0800                   ??_TMR4_DefaultPeriodMatchCallback 0070  
                  ?_TMR4_DefaultPeriodMatchCallback 0070                     _TMR4_DefaultPeriodMatchCallback 07FF  
                                 _SPI1_ByteExchange 0000                          __end_of_pwm_fan_Initialize 1800  
                                                l30 080E                                                  l27 0919  
                                                l55 17A3                                        ___awdiv@sign 00A5  
       __end_of_EUSART_OverrunErrorCallbackRegister 0867               ??_EUSART_OverrunErrorCallbackRegister 00A2  
              ?_EUSART_OverrunErrorCallbackRegister 00A0                 _EUSART_OverrunErrorCallbackRegister 0858  
                                                _ki 015E                                                  _kp 0162  
                               ___wmul@multiplicand 00A2                      __end_of_I2C2_ErrorEventHandler 0969  
                               __Umul8_16@word_mpld 0076                                                 l304 173B  
                                               l171 0875                                                 l327 17FF  
                                   ??_I2C2_NackSend 0070                                                 l506 1769  
                                               l603 0BD9                                                 l524 17AC  
                                               l631 098A                                                 l377 17D1  
                                               l650 08A5                                                 l475 17F3  
                                               l709 08B6                                                 l746 17B5  
                                               l908 0B1B                                                 l768 0884  
                                               l967 17BE                                                 l991 09F7  
                                               l994 09F9                                     ??_I2C2_BusReset 0070  
                                               _PR2 001E                                                 _PR4 0416  
                                               _PR6 041D                                                 _abs 08C8  
                                               _pad 0CCD                                     __end_of_ADC_ISR 082B  
                   __end_of_ADC_SetInterruptHandler 17A4                                        ___awmod@sign 00A5  
                                   _TMR2_Initialize 0895                                                 wreg 0009  
                                      ___flmul@aexp 0032                                        ___flmul@bexp 0033  
                      ?_ADC_DefaultInterruptHandler 0070                                        ___flmul@sign 002D  
                                      ___flmul@temp 0038                                        ___flmul@prod 0034  
                               i1_ADC_SelectChannel 17DC                                        _BAUD1CONbits 019F  
                                  __end_of_I2C2_ISR 1738                                        ___fltol@exp1 0043  
                                              l1012 08C7                                                l1022 0857  
                                              l2000 0661                                                l1026 0866  
                                              ?_abs 00A6                                                l2021 08D9  
                                              l2014 0A23                                                l2033 0E37  
                                              l2041 09D1                                                l1082 081B  
                                              l1157 17C7                                                l2047 092F  
                                              l1443 07EA                                                l1445 07FE  
                                              l4111 09D2                                                l4201 0D38  
                                              l1609 0C78                                                l4121 09EF  
                                              l4113 09D7                                                l4211 0D4A  
                                              l4203 0D3A                                                l4107 17B6  
                                              l4123 09F2                                                l4115 09DB  
                                              l4131 08C1                                                l1723 0B90  
                                              l4221 0D64                                                l4213 0D4C  
                                              l4205 0D3C                                                l4125 09F4  
                                              l4117 09E1                                                l4141 0DEC  
                                              l1733 0AB2                                                l4301 0A8A  
                                              l4223 0D69                                                l4215 0D50  
                                              l4207 0D42                                                l4119 09E9  
                                              l4127 08B9                                                l4143 0DF7  
                                              l4135 0DDA                                                l4151 09AE  
                                              l4311 0AA3                                                l4303 0A8F  
                                              l5201 17C8                                                l4217 0D5F  
                                              l4209 0D45                                                l4225 0D6F  
                                              l4241 0C34                                                l4233 0C27  
                                              l4129 08B9                                                l4145 0E17  
                                              l4137 0DE1                                                l4153 09B2  
                                              l4161 091E                                                l4321 0CD2  
                                              l4401 0FE5                                                l4313 0AA8  
                                              l4305 0A91                                                l1922 0894  
                                              l5211 17A8                                                l5203 17CC  
                                              l4227 0D74                                                l4219 0D63  
                                              l4251 0C4B                                                l4243 0C38  
                                              l4235 0C29                                                l4147 0E2D  
                                              l4139 0DE7                                                l4155 09C0  
                                              l4163 0920                                                l4331 0CF7  
                                              l4323 0CDC                                                l4403 0FEC  
                                              l4307 0A95                                                l4315 0AAE  
                                              l4411 0775                                                l5131 09FA  
                                              l1596 0D7D                                                l5301 0AFA  
                                              l5205 17E8                                                l5221 0B9B  
                                              l5213 0B91                                                l4229 0D79  
                                              l4261 0C64                                                l4253 0C4D  
                                              l4245 0C3D                                                l4237 0C2D  
                                              l4341 08CD                                                l4157 09C5  
                                              l4165 0929                                                l4333 0D0A  
                                              l4325 0CE1                                                l4181 07EF  
                                              l4309 0A9F                                                l4421 0796  
                                              l4413 0778                                                l5133 09FF  
                                              l5151 090B                                                l5311 0B11  
                                              l5303 0AFC                                                l5207 17EB  
                                              l5231 0BAF                                                l5223 0B9D  
                                              l5215 0B93                                                l4191 0D24  
                                              l4255 0C51                                                l4247 0C43  
                                              l4263 0C6A                                                l4239 0C32  
                                              l4343 08CE                                                l4159 091A  
                                              l1951 0D21                                                l4335 0D14  
                                              l4327 0CE6                                                l4319 0CCD  
                                              l4183 07F4                                                l4175 07DF  
                                              l4271 0B56                                                l4431 07C5  
                                              l4415 077D                                                l4423 07A6  
                                              l4407 076A                                                l4511 0516  
                                              l4503 04F2                                                l5135 0A03  
                                              l5153 090D                                                l5145 0904  
                                              l5209 17A4                                                l5321 0B18  
                                              l5313 0B13                                                l5305 0AFE  
                                              l5161 0867                                                l5241 0BBC  
                                              l5233 0BB1                                                l5225 0BA0  
                                              l5217 0B96                                                l4193 0D28  
                                              l4265 0C6F                                                l4257 0C5B  
                                              l4249 0C46                                                l4329 0CF2  
                                              l4361 0F4B                                                l4185 07FA  
                                              l4177 07E2                                                l4441 0D92  
                                              l4281 0B69                                                l4273 0B59  
                                              l4425 07AD                                                l4433 07CA  
                                              l4417 0791                                                l4409 076D  
                                              l4521 053D                                                l4513 051B  
                                              l4505 0504                                                l5137 0A17  
                                              l1946 0CE3                                                l1954 0F72  
                                              l5155 090F                                                l5147 0907  
                                              l5323 0B19                                                l5315 0B14  
                                              l5307 0B06                                                l5163 086C  
                                              l5251 0BC9                                                l5243 0BBE  
                                              l5235 0BB3                                                l5227 0BA2  
                                              l5219 0B99                                                l4195 0D2D  
                                              l4267 0C74                                                l4259 0C5F  
                                              l4339 08C8                                                l4371 0F67  
                                              l4363 0F4E                                                l4179 07E6  
                                              l4451 0DD5                                                l4443 0D9A  
                                              l4291 0B86                                                l4283 0B6D  
                                              l4275 0B5F                                                l4427 07B3  
                                              l4419 0792                                                l4531 055C  
                                              l4523 0549                                                l4507 050C  
                                              l5139 0A21                                                l5157 0917  
                                              l5149 0909                                                l5317 0B16  
                                              l5309 0B0E                                                l5165 086E  
                                              l5253 0BCC                                                l5245 0BC1  
                                              l5237 0BB6                                                l5229 0BAC  
                                              l5261 089E                                                l4197 0D2F  
                                              l4189 0D22                                                l1949 0D05  
                                              l4381 0F9A                                                l4373 0F6C  
                                              l4365 0F59                                                l4445 0DA7  
                                              l4437 0D7E                                                l4285 0B7C  
                                              l4277 0B62                                                l4293 0B8C  
                                              l4429 07B8                                                l4533 0566  
                                              l4525 054D                                                l4517 0528  
                                              l4509 0511                                                l1958 0F70  
                                              ?_pad 00B4                                                l4711 0858  
                                              l5319 0B17                                                l5167 0870  
                                              l5247 0BC3                                                l5239 0BB8  
                                              l5263 08A0                                                l5255 0895  
                                              l5271 08AA                                                l5159 0805  
                                              l4199 0D33                                                l1967 0FFF  
                                              l4391 0FC4                                                l4383 0F9B  
                                              l4375 0F76                                                l4367 0F5E  
                                              l4447 0DB9                                                l4439 0D81  
                                              l4287 0B80                                                l4279 0B67  
                                              l4543 059B                                                l4535 0570  
                                              l4527 054F                                                l4519 0538  
                                              l1992 0519                                                l4713 085F  
                                              l5169 0873                                                l4705 1764  
                                              l5249 0BC6                                                l5265 08A2  
                                              l5257 0898                                                l5273 08AF  
                                              l5281 0879                                                l4393 0FC9  
                                              l4385 0F9F                                                l4377 0F79  
                                              l4369 0F62                                                l1985 0DD9  
                                              l4449 0DC1                                                l4289 0B81  
                                              l4297 0A80                                                l1977 07DE  
                                              l4561 05FA                                                l4545 05A5  
                                              l4537 057D                                                l4529 0555  
                                              l1994 0525                                                l4707 0849  
                                              l5291 0AE8                                                l5259 0899  
                                              l5275 08B1                                                l5267 08A6  
                                              l5283 087A                                                l5523 080F  
                                              l4395 0FD6                                                l4379 0F7E  
                                              l4387 0FAF                                                l4299 0A87  
                                              l4571 0624                                                l4563 0608  
                                              l4555 05D1                                                l4547 05B2  
                                              l4539 058A                                                l5371 0885  
                                              l4709 0850                                                l5293 0AED  
                                              l5277 08B3                                                l5269 08A9  
                                              l5285 087F                                                l5197 17F4  
                                              l5461 0975                                                l4389 0FBD  
                                              l4397 0FDB                                                l4573 062F  
                                              l4549 05C0                                                l4557 05DA  
                                              l5373 0888                                                l5525 17BF  
                                              l4591 179B                                                l5295 0AF4  
                                              l5287 0881                                                l5279 0876  
                                              l5199 17FB                                                l5471 0987  
                                              l5463 0978                                                l5455 0969  
                                              l4399 0FE1                                                l4559 05E4  
                                              l4567 060B                                                l4583 063E  
                                              l5297 0AF6                                                l5289 0AE6  
                                              l5465 097B                                                l5457 096F  
                                              l5473 17AD                                                l4585 0657  
                                              l4569 061C                                                l4577 0635  
                                              l5299 0AF8                                                l5467 097E  
                                              l5459 0972                                                l4597 1738  
                                              l5469 0984                                                l5851 0AB7  
                                              l5853 0AC3                                                l5855 0ACF  
                                              l5847 0AB3                                                l5857 0ADB  
                                              l5849 0AB6                                                STR_1 182B  
                                              STR_2 1815                                                STR_3 1065  
                                              STR_4 1800                                                STR_5 10D4  
                                              STR_6 10B4                                                STR_7 1824  
                                              STR_8 181D                                                u3000 0C2D  
                                              u3001 0C2C                                                u3010 0C38  
                                              u3011 0C37                                                u3020 0C43  
                                              u3021 0C42                                                _LATA 010C  
                                              u3110 0B6D                                                _LATB 010D  
                                              u3111 0B6C                                                _LATC 010E  
                                              u3040 0C51                                                u3041 0C50  
                                              u3105 0B63                                                u3050 0C5B  
                                              u3130 0B7C                                                u3210 0AAE  
                                              u3051 0C5A                                                u3035 0C47  
                                              u3131 0B7B                                                u3211 0AAD  
                                              u3220 0CD2                                                u3300 0F67  
                                              u3221 0CD1                                                u3301 0F66  
                                              u3125 0B6E                                                u3205 0AA4  
                                              u3070 0C6A                                                u3230 0CE1  
                                              u3310 0FBD                                                u3150 0B8C  
                                              u3071 0C69                                                u3055 0C57  
                                              u3231 0CE0                                                u3311 0FBC  
                                              u3151 0B8B                                                u3135 0B78  
                                              u3080 0C6F                                                u3240 0D05  
                                              u3320 0FC4                                                u3160 0A87  
                                              u3400 07C5                                                u3081 0C6E  
                                              u3065 0C60                                                u3241 0D04  
                                              u3321 0FC3                                                u3145 0B82  
                                              u3161 0A86                                                u3401 07C4  
                                              u3250 0D0A                                                u3330 0FC9  
                                              u3090 0B5F                                                u3410 07CA  
                                              u3251 0D09                                                u3331 0FC8  
                                              u3315 0FB9                                                u3091 0B5E  
                                              u3411 07C9                                                u3260 08CD  
                                              u3340 0FD6                                                u3420 0D92  
                                              u3180 0A95                                                u3500 0566  
                                              u3261 08CC                                                u3245 0D01  
                                              u3341 0FD5                                                u3421 0D91  
                                              u3181 0A94                                                u3405 07C1  
                                              u3501 0565                                                u3350 0FDB  
                                              u3270 0F53                                                u3430 0DD5  
                                              u3190 0A9F                                                u3510 0570  
                                              u3351 0FDA                                                u3271 0F51  
                                              u3431 0DD4                                                u3191 0A9E  
                                              u3175 0A8B                                                u3511 056F  
                                              u2800 0DE1                                                u3360 0FE1  
                                              u3280 0F54                                                u3520 05A5  
                                              u2801 0DE0                                                u3361 0FE0  
                                              u3345 0FD2                                                u3521 05A4  
                                              u2810 0DE7                                                u3290 0F5E  
                                              u3370 07AD                                                u3530 05E4  
                                              u2811 0DE6                                                u3291 0F5D  
                                              u3195 0A9B                                                u3371 07AC  
                                              u3531 05E3                                                u3620 0850  
                                              u2900 0D28                                                u2820 0DF7  
                                              u3380 07B3                                                u3540 061C  
                                              u3621 084F                                                u2901 0D27  
                                              u2821 0DF6                                                u3381 07B2  
                                              u3541 061B                                                u3630 085F  
                                              u2910 0D33                                                u2750 17BD  
                                              u2830 0E17                                                u3390 07B8  
                                              u3470 0504                                                u5310 0ACD  
                                              u3631 085E                                                u2911 0D32  
                                              u2751 17BB                                                u2831 0E16  
                                              u3391 07B7                                                u3471 0503  
                                              u5311 0ACA                                                u2920 0D42  
                                              u2760 17BE                                                u2840 09D1  
                                              u3480 053D                                                u2921 0D41  
                                              u2841 09D0                                                u3481 053C  
                                              u2770 09D7                                                u2850 0929  
                                              u3490 054D                                                u4610 0A21  
                                              u2771 09D6                                                u2835 0E13  
                                              u2851 0928                                                u3491 054C  
                                              u4611 0A20                                                u2940 0D50  
                                              u2780 09E1                                                u2860 07E6  
                                              u5324 0ACF                                                u2941 0D4F  
                                              u2781 09E0                                                u2861 07E5  
                                              i1l30 17E7                                                u2790 08C1  
                                              u2935 0D46                                                u2791 08C0  
                                              u2960 0D5F                                                u2961 0D5E  
                                              u2890 07FA                                   ?_I2C2_DataReceive 0070  
                                              u2955 0D51                                                u2891 07F9  
                                              u2875 07EB                                                i1l52 082A  
                                              u2980 0D6F                                                u2981 0D6E  
                                              u2965 0D5B                                                u2885 07F0  
                                              u2990 0D74                                                i1l39 174B  
                                              u2991 0D73                                                u2975 0D65  
                                              i1l58 16FF                                                u5747 0AD5  
                                              _TMR2 001D                                                _TMR4 0415  
                                              _TMR6 041C                                                _WPUA 020C  
                                              _WPUB 020D                                                _WPUC 020E  
                         EUSART_ReceiveISR@regValue 0070                                     _getHoogtesensor 175E  
                                              abs@a 00A6                                                _data 0140  
                                              _dbuf 01A0                                                _main 0AB3  
                                              _dtoa 0F4B                                                _line 01C0  
                                ??_I2C2_DataReceive 0070                                                _prec 014A  
                                              _nout 0148                                                pad@i 00BA  
                                              pad@p 00B7                                                fsr0h 0005  
                                              fsr1h 0007                                                indf0 0000  
                                              fsr0l 0004                                                indf1 0001  
                                              fsr1l 0006                                                btemp 007E  
                                              _utoa 076A                         _INT_DefaultInterruptHandler 0000  
                  __end_of_adcConversionDoneHandler 0A80                                                start 0074  
        __end_of_EUSART_DefaultOverrunErrorCallback 1718                ??_EUSART_DefaultOverrunErrorCallback 0070  
               ?_EUSART_DefaultOverrunErrorCallback 0070                  _EUSART_DefaultOverrunErrorCallback 1714  
                                   ??_I2C2_StopSend 0070                     __end_of_INT_SetInterruptHandler 176A  
                     I2C2_EVENT_ERROR@retEventState 0070                               ??_I2C2_RestartDisable 0070  
                              ?i1_ADC_SelectChannel 0070                                          _i2c2Status 0055  
                                             ??_abs 00A8                                               ??_pad 00B9  
                                     ?_EUSART_Write 00A0                                       ___fltol@sign1 0042  
                                             _ADACT 009F                                   __end_of_I2C2_Host 1091  
                                   __end_of___fladd 04F2                                               ?_main 0070  
                                             ?_dtoa 00BC                                     __end_of___awdiv 0D7E  
                                             STR_10 104C                                               STR_11 10F0  
                                             STR_12 10E3                                               STR_13 10C5  
                                             STR_14 10A3                                     __end_of___awmod 0C79  
                                   __end_of___flmul 02E6                                     __end_of___fltol 0EA7  
                                             ?_utoa 00BC                                     ___awdiv@divisor 00A0  
                                             _T2CON 001F                                               _T4CON 0417  
                                             _IOCAF 0393                                               _IOCBF 0396  
                                             _IOCCF 0399                                               _IOCAN 0392  
                                             _IOCAP 0391                                               _IOCBN 0395  
                                             _T6CON 041E                                               _IOCBP 0394  
                                             _IOCCN 0398                                               _IOCCP 0397  
                                   __end_of___lwdiv 0B91                                               i1l202 1733  
                                             i1l211 08EE                                               i1l220 0C26  
                                             i1l301 1727                                               i1l310 1707  
                                             i1l223 0968                                               i1l232 177C  
                                             i1l313 1704                                               i1l217 0C12  
                                             i1l226 172F                                               i1l250 1751  
                                             i1l330 0903                                               i1l316 171F  
                                             i1l229 1792                                               i1l253 1757  
                                             i1l262 170D                                               i1l271 1710  
                                             i1l239 0A50                                               i1l247 0B55  
                                             i1l256 179A                                               i1l265 1740  
                                   __end_of___lwmod 0AB3                                               i1l274 0802  
                                             i1l283 170A                                               i1l259 1783  
                                             i1l268 171B                                               i1l292 175D  
                                             i1l277 1713                                               i1l286 1723  
                                             i1l295 1745                                               i1l199 1737  
                                             i1l289 172B                                               i1l481 001B  
                                             i1l298 178A                                               i1l490 0072  
                                             i1l491 0064                                               i1l483 002C  
                                             i1l485 003A                                               i1l743 0848  
                                             i1l487 0048                                               i1l496 0072  
                                             i1l489 0056                                               i1l690 1701  
                                             i1l684 0839                                               i1l749 07FF  
                                             i1l987 0CCC                                               i1l997 0949  
                                   ___awdiv@counter 00A4                                               _OSCEN 091D  
                                             _UART1 1000                                        vfpfcnvrt@fmt 00CB  
                                             _TRISA 008C                                               _TRISB 008D  
                                             _TRISC 008E                                               _RXPPS 0E24  
                                   _TMR4_Initialize 08A6                                    __end_of_TMR2_ISR 083A  
                                  __end_of_TMR4_ISR 0849                                   _I2C2_DataTransmit 173C  
                                             _flags 0065                                  _EUSART_TransmitISR 0930  
                                   _I2C2_EVENT_IDLE 172C                                     _I2C2_EVENT_NACK 174C  
                               read_prec_or_width@c 00AB                                 read_prec_or_width@n 00AC  
                                             _fputc 0DDA                                               _fputs 09AE  
                                   _I2C2_EVENT_STOP 1793                                               pad@fp 00B4  
                                             _width 00EC                                               _putch 08B7  
                                             dtoa@d 00BE                                               dtoa@i 00C7  
                                             dtoa@p 00C3                                               dtoa@s 00C6  
                                             dtoa@w 00C4                                  ?_I2C2_DataTransmit 0070  
                                _I2C2_ReceiveEnable 170E                                               pclath 000A  
                                             utoa@d 00BE                                               utoa@i 00C4  
                                             utoa@p 00C1                                               utoa@w 00C2  
                                             status 0003                                               wtemp0 007E  
                               ?_EUSART_TransmitISR 0070                                         controller@I 0051  
                                       controller@P 004F                                        ??_I2C2_Close 0070  
                               ??_I2C2_DataTransmit 0070                                 ?_I2C2_ReceiveEnable 0070  
                             ??i1_ADC_SelectChannel 0070                                   ??_I2C2_Initialize 00A0  
                                   __initialization 0076                                        __end_of_main 0AE6  
                                      __end_of_dtoa 1000                                        __end_of_utoa 07DF  
                                    ??_EUSART_Write 00A1                   _EUSART_TxCompleteInterruptHandler 0158  
                           __end_of_TMR2_Initialize 08A6                                           ??_ADC_ISR 0074  
                       ?_INTERRUPT_InterruptManager 0070                       __end_of_I2C2_StatusFlagsClear 1720  
                              ??_EUSART_TransmitISR 0070                                              ??_main 00EA  
                                            ??_dtoa 00C0                                              ??_utoa 00C0  
                              ??_I2C2_ReceiveEnable 0070                           __end_of_I2C2_DataTransmit 1741  
                        __end_of_read_prec_or_width 0DDA                                     _TMR6_Initialize 0876  
EUSART_OverrunErrorCallbackRegister@callbackHandler 00A0  EUSART_FramingErrorCallbackRegister@callbackHandler 00A0  
                           __end_of_getHoogtesensor 1764                                  __end_of_I2C2_Close 08EF  
                                            _ADCON0 009D                                              _ADCON1 009E  
                        _EUSART_OverrunErrorHandler 0152                                              ?_fputc 00A3  
                                            ?_fputs 00AC                                              _ADRESH 009C  
                                            _ADRESL 009B                                    ___awdiv@dividend 00A2  
                                 ?_I2C2_IsRxBufFull 0070                                              _ANSELA 018C  
                                            ?_putch 0070                                              _ANSELB 018D  
                                            _ANSELC 018E                                              _RC1REG 0199  
                                            _RC1STA 019D                                              _RB4PPS 0E9C  
                                            i1l1000 094B                                              _RB5PPS 0E9D  
                                            i1l1015 1700                                              i1l1018 1717  
                                            _RB6PPS 0E9E                                              _RC5PPS 0EA5  
                                            i1l1079 0A7F                                              i1l1088 1763  
                                            _ODCONA 028C                                              i1l1194 0762  
                                            _ODCONB 028D                                              _ODCONC 028E  
                                            i1l1196 0769                                   _I2C2_Deinitialize 0000  
                                            i1l5001 013B                                              i1l5011 0181  
                                            i1l5003 0148                                              i1l1644 0E91  
                                            i1l5021 01B7                                              i1l5013 018C  
                                            i1l5005 0160                                              i1l1637 0EA6  
                                            i1l1750 0395                                              i1l5031 0202  
                                            i1l5023 01BE                                              i1l5015 0193  
                                            i1l5007 016D                                              i1l1647 0EA6  
                                            i1l5111 0F03                                              i1l5103 0EDD  
                                            i1l1744 033C                                              i1l1840 02E5  
                                            i1l5041 0237                                              i1l5033 0219  
                                            i1l5025 01D0                                              i1l5017 019E  
                                            i1l5009 017A                                              i1l5121 0F38  
                                            i1l5113 0F0C                                              i1l5105 0EE6  
                                            i1l4171 1702                                              i1l5051 0248  
                                            i1l5043 0238                                              i1l5035 0220  
                                            i1l5027 01DB                                              i1l5019 01A5  
                                            i1l5123 0F3D                                              i1l5115 0F10  
                                            i1l5107 0EED                                              i1l1748 03BB  
                                            i1l1852 02DB                                              i1l4173 171C  
                                            i1l1765 044C                                              i1l1757 04F1  
                                            i1l1861 09AD                                              i1l5061 026D  
                                            i1l5053 024C                                              i1l5045 023F  
                                            i1l5037 022C                                              i1l5029 01ED  
                                            i1l5125 0F41                                              i1l5117 0F1A  
                                            i1l5109 0EFC                                              i1l1846 0263  
                                            i1l5143 17DD                                              i1l4351 08E5  
                                            i1l1775 0491                                              i1l5071 02A0  
                                            i1l5063 0273                                              i1l5055 0260  
                                            i1l5039 0233                                              i1l5047 0243  
                                            i1l5127 0F42                                              i1l5119 0F24  
                                            i1l4169 1705                                              i1l4353 08E8  
                                            i1l1769 046E                                              i1l5081 02CE  
                                            i1l5073 02AA                                              i1l5065 0277  
                                            i1l5049 0247                                              i1l5401 075B  
                                            i1l1786 04E4                                              i1l1778 04C4  
                                            i1l6131 0A73                                              i1l4355 08EB  
                                            i1l4347 08DA                                              i1l4611 172C  
                                            i1l4603 1758                                              i1l5171 0BDA  
                                            i1l1787 04F1                                              i1l1859 099D  
                                            i1l5083 02D2                                              i1l5075 02B8  
                                            i1l5067 028F                                              i1l5059 0268  
                                            i1l5091 0EA8                                              i1l5403 075F  
                                            i1l1884 0EC9                                              i1l5421 081E  
                                            i1l4349 08DC                                              i1l4357 1708  
                                            i1l4613 172E                                              i1l4461 1799  
                                            i1l5181 0BF6                                              i1l5173 0BDD  
                                            i1l5085 02D3                                              i1l5077 02C1  
                                            i1l5069 0293                                              i1l1885 0EDA  
                                            i1l5093 0EAD                                              i1l1886 0F4A  
                                            i1l5351 0A51                                              i1l5423 0825  
                                            i1l5503 0CC1                                              i1l5511 0930  
                                            i1l4359 1718                                              i1l4455 173D  
                                            i1l4631 0A24                                              i1l4623 1776  
                                            i1l5191 094C                                              i1l4607 1741  
                                            i1l5183 0BFC                                              i1l5175 0BE2  
                                            i1l5087 02DD                                              i1l5079 02C3  
                                            i1l5095 0EB1                                              i1l5407 0762  
                                            i1l5353 0A52                                              i1l5505 0CC8  
                                            i1l5513 0937                                              i1l4473 1720  
                                            i1l4465 1724                                              i1l4457 0800  
                                            i1l4633 0A2B                                              i1l4641 0A3F  
                                            i1l4617 178B                                              i1l4625 177B  
                                            i1l4481 177D                                              i1l5193 0951  
                                            i1l5185 0C04                                              i1l5177 0BE6  
                                            i1l5425 1734                                              i1l4801 0346  
                                            i1l4721 0E42                                              i1l1897 0F16  
                                            i1l5097 0EC1                                              i1l1898 0F22  
                                            i1l5355 0A5A                                              i1l5363 0A6A  
                                            i1l5419 081C                                              i1l5507 0CCA  
                                            i1l5515 093F                                              i1l4475 1711  
                                            i1l4643 0A44                                              i1l4651 0A4F  
                                            i1l4635 0A2F                                              i1l4619 1791  
                                            i1l4459 1793                                              i1l4483 1780  
                                            i1l5195 0954                                              i1l5427 1730  
                                            i1l5187 0C0C                                              i1l5179 0BEE  
                                            i1l5451 0832                                              i1l4811 0350  
                                            i1l4803 0348                                              i1l4491 098E  
                                            i1l4731 0E65                                              i1l5099 0ED1  
                                            i1l4715 175E                                              i1l5443 083A  
                                            i1l5357 0A5E                                              i1l5365 0A7B  
                                            i1l5349 1714                                              i1l5517 0944  
                                            i1l4469 170B                                              i1l4477 1728  
                                            i1l4645 0A45                                              i1l4637 0A37  
                                            i1l4629 0A24                                              i1l4661 0B2D  
                                            i1l4485 1782                                              i1l5189 0C12  
                                            i1l5453 0837                                              i1l4901 046D  
                                            i1l4821 035A                                              i1l4813 0352  
                                            i1l4805 034A                                              i1l4493 0995  
                                            i1l4741 0E73                                              i1l4733 0E67  
                                            i1l4725 0E4B                                              i1l5381 0662  
                                            i1l5445 0841                                              i1l5359 0A66  
                                            i1l5519 0946                                              i1l4479 170E  
                                            i1l4647 0A48                                              i1l4639 0A3C  
                                            i1l4671 0B48                                              i1l4663 0B35  
                                            i1l4655 0B1C                                              i1l4903 0472  
                                            i1l4911 047F                                              i1l4831 0364  
                                            i1l4823 035C                                              i1l4815 0354  
                                            i1l4807 034C                                              i1l4495 0999  
                                            i1l4751 0E96                                              i1l4735 0E6B  
                                            i1l4743 0E81                                              i1l4727 0E5C  
                                            i1l4719 0E38                                              i1l5391 072F  
                                            i1l5383 066A                                              i1l5447 0846  
                                            i1l4593 1746                                              i1l5481 0C87  
                                            i1l4649 0A4B                                              i1l4673 0B4E  
                                            i1l4665 0B3A                                              i1l4657 0B1E  
                                            i1l4681 174C                                              i1l5449 082B  
                                            i1l4905 0476                                              i1l4913 0483  
                                            i1l4841 03A3                                              i1l4825 035E  
                                            i1l4817 0356                                              i1l4809 034E  
                                            i1l4833 0366                                              i1l4761 02F0  
                                            i1l4497 09A4                                              i1l4489 098C  
                                            i1l4753 0E9B                                              i1l4729 0E5D  
                                            i1l5393 0735                                              i1l5385 0673  
                                            i1l5801 005B                                              i1l5491 0CA6  
                                            i1l5483 0C8E                                              i1l4667 0B3E  
                                            i1l4659 0B26                                              i1l4675 0B51  
                                            i1l4683 174C                                              i1l4691 1752  
                                            i1l4931 04C2                                              i1l4923 0496  
                                            i1l4915 0484                                              i1l4907 0478  
                                            i1l4843 03A5                                              i1l4851 03B4  
                                            i1l4835 0367                                              i1l4827 0360  
                                            i1l4819 0358                                              i1l4771 0304  
                                            i1l4763 02F1                                              i1l4755 02E6  
                                            i1l4499 09A9                                              i1l5395 073E  
                                            i1l5387 06C0                                              i1l5803 0060  
                                            i1l5493 0CAD                                              i1l5485 0C95  
                                            i1l5477 0C79                                              i1l4677 0B54  
                                            i1l4669 0B44                                              i1l4685 1750  
                                            i1l4693 1756                                              i1l4941 04DC  
                                            i1l4933 04C9                                              i1l4925 049B  
                                            i1l4917 0488                                              i1l4909 047D  
                                            i1l4861 03D5                                              i1l4853 03BF  
                                            i1l4845 03A9                                              i1l4837 037E  
                                            i1l4829 0362                                              i1l4781 0318  
                                            i1l4765 02F6                                              i1l4773 0306  
                                            i1l4757 02EA                                              i1l4749 0E88  
                                            i1l5397 074B                                              i1l5389 06FB  
                                            i1l5805 0069                                              i1l5495 0CB2  
                                            i1l5487 0C9A                                              i1l5479 0C82  
                                            i1l4599 1784                                              i1l4943 04E0  
                                            i1l4935 04CE                                              i1l4927 04A1  
                                            i1l4919 048E                                              i1l4871 03ED  
                                            i1l4863 03D9                                              i1l4855 03C4  
                                            i1l4847 03AA                                              i1l4839 0399  
                                            i1l4791 0329                                              i1l4783 031A  
                                            i1l4775 030E                                              i1l4767 02FB  
                                            i1l4759 02EC                                              i1l4951 00AB  
                                            i1l5399 0751                                              i1l5807 006E  
                                            i1l5497 0CB5                                              i1l5489 0C9F  
                                            i1l4689 1752                                              i1l4945 04E2  
                                            i1l4937 04D6                                              i1l4929 04A5  
                                            i1l4881 0433                                              i1l4873 03EE  
                                            i1l4865 03DD                                              i1l4849 03B2  
                                            i1l4793 0331                                              i1l4785 031E  
                                            i1l4777 0311                                              i1l4769 0303  
                                            i1l4961 00BB                                              i1l4953 00AF  
                                            i1l4697 08EF                                              i1l5499 0CBA  
                                            i1l4947 04EC                                              i1l4939 04DB  
                                            i1l4891 0454                                              i1l4883 0435  
                                            i1l4875 03F6                                              i1l4867 03E7  
                                            i1l4859 03CD                                              i1l4795 0332  
                                            i1l4787 031F                                              i1l4779 0317  
                                            i1l4971 00D5                                              i1l4963 00C0  
                                            i1l4955 00B1                                              i1l4949 04F0  
                                            i1l4893 0459                                              i1l4885 0438  
                                            i1l4869 03E9                                              i1l4877 03F9  
                                            i1l4789 0324                                              i1l4797 0334  
                                            i1l4981 00E6                                              i1l4973 00D7  
                                            i1l4965 00C8                                              i1l4957 00B5  
                                            i1l5781 000F                                              i1l4887 043D  
                                            i1l4879 040F                                              i1l4799 0342  
                                            i1l4991 0102                                              i1l4983 00EE  
                                            i1l4975 00DB                                              i1l4967 00CA  
                                            i1l4959 00B6                                              i1l5791 0036  
                                            i1l5783 0014                                              i1l4897 0462  
                                            i1l4889 0444                                              i1l4985 00F0  
                                            i1l4977 00DC                                              i1l4969 00D2  
                                            i1l5793 003F                                              i1l5785 0020  
                                            i1l5777 0006                                              i1l4899 0469  
                                            i1l4995 010B                                              i1l4987 00F8  
                                            i1l4979 00E1                                              i1l5795 0044  
                                            i1l5787 0025                                              i1l5779 000A  
                                            i1l4997 0116                                              i1l4989 00FD  
                                            i1l5797 004D                                              i1l5789 0031  
                                            i1l4999 0123                                              i1l5799 0052  
                                            u400_20 0454                                              u400_21 0453  
                                            _INLVLA 038C                                              _INLVLB 038D  
                                            _INLVLC 038E                                              u401_20 0459  
                                            u401_21 0458                                              u410_20 049B  
                                            u410_21 049A                                              u402_25 0463  
                                            u411_20 04A5                                              u403_20 046D  
                                            u411_21 04A4                                              u403_21 046C  
                                            u412_20 04B3                                              u404_20 0472  
                                            u420_20 00B5                                              u404_21 0471  
                                            u420_21 00B4                                              u412_25 04AF  
                                            u413_20 04C2                                              u405_20 047D  
                                            u421_20 00BB                                              u413_21 04C1  
                                            u405_21 047C                                              u421_21 00BA  
                                            u414_20 04C9                                              u406_20 0483  
                                            u430_20 01F8                                              u422_20 00C0  
                                            u510_20 000A                                              u414_21 04C8  
                                            u406_21 0482                                              u422_21 00BF  
                                            u510_21 0009                                              u430_25 01F4  
                                            u415_20 04CE                                              u407_20 0488  
                                            u431_20 020F                                              u423_20 00DB  
                                            u511_20 000F                                              u415_21 04CD  
                                            u407_21 0487                                              u423_21 00DA  
                                            u511_21 000E                                              u431_25 020B  
                                            u416_20 04DB                                              u408_20 048E  
                                            u344_20 0999                                              u440_20 026D  
                                            u424_20 00E1                                              u520_20 0052  
                                            u512_20 0014                                              u416_21 04DA  
                                            u408_21 048D                                              u344_21 0998  
                                            u440_21 026C                                              u424_21 00E0  
                                            u520_21 0051                                              u512_21 0013  
                                            u432_25 021A                                              u360_25 08FE  
                                            u417_20 04E0                                              u409_20 0495  
                                            u441_20 0277                                              u425_20 00E6  
                                            u521_20 005B                                              u513_20 0020  
                                            u417_21 04DF                                              u409_21 0494  
                                            u441_21 0276                                              u425_21 00E5  
                                            u521_21 005A                                              u513_21 001F  
                                            u345_25 099E                                              u433_25 022D  
                                            u346_20 09A9                                              u442_20 0285  
                                            u434_20 0237                                              u426_20 00FD  
                                            u370_20 0E87                                              u522_20 0060  
                                            u514_20 0025                                              u346_21 09A8  
                                            u434_21 0236                                              u426_21 00FC  
                                            u370_21 0E86                                              u522_21 005F  
                                            u514_21 0024                                              u418_25 04E7  
                                            u442_25 0281                                              u450_25 0EE0  
                                            u355_20 0A2B                                              u419_20 04F0  
                                            u443_20 02A0                                              u427_20 0102  
                                            u451_20 0EEC                                              u523_20 0069  
                                            u515_20 0031                                              u355_21 0A2A  
                                            u419_21 04EF                                              u443_21 029F  
                                            u427_21 0101                                              u451_21 0EEB  
                                            u523_21 0068                                              u515_21 0030  
                                            u443_25 029C                                              u435_25 0239  
                                            u371_25 0E89                                              u356_20 0A44  
                                            u380_20 0329                                              u444_20 02B8  
                                            u436_20 0247                                              u372_20 0E96  
                                            u364_20 0E42                                              u460_20 0F41  
                                            u524_20 006E                                              u516_20 0036  
                                            u356_21 0A43                                              u380_21 0328  
                                            u444_21 02B7                                              u436_21 0246  
                                            u372_21 0E95                                              u364_21 0E41  
                                            u460_21 0F40                                              u524_21 006D  
                                            u516_21 0035                                              u444_25 02B4  
                                            u428_25 017B                                              u452_25 0EF6  
                                            u357_20 0B26                                              u381_20 0342  
                                            u445_20 02D2                                              u437_20 024C  
                                            u373_20 0E9B                                              u365_20 0E58  
                                            u453_20 0F02                                              u517_20 003F  
                                            u357_21 0B25                                              u381_21 0341  
                                            u445_21 02D1                                              u437_21 024B  
                                            u373_21 0E9A                                              u453_21 0F01  
                                            u517_21 003E                                              u429_25 01A6  
                                            u365_25 0E54                                              u358_20 0B2D  
                                            u462_20 0BE2                                              u390_20 03BB  
                                            u382_20 0346                                              u374_20 02F0  
                                            u438_20 0260                                              u366_20 0E6B  
                                            u470_20 073E                                              u518_20 0044  
                                            u358_21 0B2C                                              u462_21 0BE1  
                                            u390_21 03BA                                              u382_21 0345  
                                            u374_21 02EF                                              u438_21 025F  
                                            u366_21 0E6A                                              u470_21 073D  
                                            u518_21 0043                                              u446_25 02D6  
                                            u454_25 0F06                                              u359_20 0B44  
                                            u463_20 0BEE                                              u391_20 03BF  
                                            u383_20 037E                                              u375_20 02F6  
                                            u439_20 0267                                              u367_20 0E72  
                                            u455_20 0F10                                              u447_20 0EAD  
                                            u471_20 074B                                              u519_20 004D  
                                            u359_21 0B43                                              u463_21 0BED  
                                            u391_21 03BE                                              u383_21 037D  
                                            u375_21 02F5                                              u439_21 0266  
                                            u367_21 0E71                                              u455_21 0F0F  
                                            u447_21 0EAC                                              u471_21 074A  
                                            u519_21 004C                                              u383_25 037A  
                                            u471_25 0747                                              u480_20 0C9F  
                                            u464_20 0BF6                                              u392_20 03C4  
                                            u384_20 0388                                              u376_20 02FB  
                                            u456_20 0F16                                              u448_20 0EB1  
                                            u472_20 075B                                              u480_21 0C9E  
                                            u464_21 0BF5                                              u392_21 03C3  
                                            u384_21 0386                                              u376_21 02FA  
                                            u456_21 0F15                                              u448_21 0EB0  
                                            u472_21 075A                                              u368_25 0E74  
                                            u481_20 0CAD                                              u465_20 0C04  
                                            u393_20 03D9                                              u385_20 0389  
                                            u377_20 0317                                              u369_20 0E80  
                                            u457_20 0F1A                                              u449_20 0ED1  
                                            u473_20 075F                                              u481_21 0CAC  
                                            u465_21 0C03                                              u393_21 03D8  
                                            u377_21 0316                                              u369_21 0E7F  
                                            u457_21 0F19                                              u449_21 0ED0  
                                            u473_21 075E                                              u474_20 0825  
                                            u482_20 0CC0                                              u466_20 0C0C  
                                            u394_20 03DD                                              u386_20 0399  
                                            u378_20 031E                                              u458_20 0F2E  
                                            u474_21 0824                                              u482_21 0CBF  
                                            u466_21 0C0B                                              u394_21 03DC  
                                            u386_21 0398                                              u378_21 031D  
                                            u458_25 0F2A                                              u483_20 0937  
                                            u379_20 0324                                              u459_20 0F3D  
                                            u483_21 0936                                              u379_21 0323  
                                            u459_21 0F3C                                              u395_25 03E0  
                                            u387_25 039C                                              u396_20 03ED  
                                            u388_20 03A9                                              u476_20 0841  
                                            u396_21 03EC                                              u388_21 03A8  
                                            u476_21 0840                                              _OSCFRQ 091F  
                                            u477_20 0832                                              u477_21 0831  
                                            u397_25 03F0                                              u389_25 03AC  
                                            u478_20 0C87                                              u398_20 040F  
                                            u478_21 0C86                                              u398_21 040E  
                                            u398_23 040B                                              u479_20 0C95  
                                            u399_20 043D                                              u479_21 0C94  
                                            u399_21 043C                                       vfpfcnvrt@done 00D2  
                                ??_I2C2_IsRxBufFull 0070                                              _TX1REG 019A  
                                            _TX1STA 019E                                    __end_of___xxtofl 0F4B  
                        __end_of_I2C2_RestartEnable 0803                                   _ADC_potentiometer 0150  
                                      vfprintf@cfmt 00DF                                           ??___fladd 0042  
                                            ___wmul 07DF                             _updateLedstripAnimation 0000  
                                         ??___awdiv 00A4                                           ??___awmod 00A4  
                                         ??___flmul 0028                                           ??___fltol 003E  
                                         ??___lwdiv 00A4                                           ??___lwmod 00A4  
                                  __end_of_ledstrip 104C                                    _I2C2_EVENT_ERROR 1752  
                                  _I2C2_EVENT_RESET 177D                                read_prec_or_width@ap 00A7  
                           __end_of_TMR4_Initialize 08B7                                           ?_I2C2_ISR 0070  
                                  ___awdiv@quotient 00A6                                     ___awmod@divisor 00A0  
                                 ?_EUSART_IsTxReady 0070                    __end_of_I2C2_ErrorInterruptClear 1705  
                                   ___awmod@counter 00A4                                              _printf 0885  
                                            pad@buf 00B6                                   ?_CLOCK_Initialize 0070  
                                            dtoa@fp 00BC                                              _strlen 091A  
                           __end_of_I2C2_EVENT_IDLE 1730                             __end_of_I2C2_EVENT_NACK 1752  
                           __end_of_I2C2_EVENT_STOP 179B                                              fputc@c 00A3  
                                ??_EUSART_IsTxReady 00A0                                              fputs@c 00B1  
                                            fputs@i 00B2                                              fputs@s 00AC  
                         ?_adcConversionDoneHandler 0070                                  ??_CLOCK_Initialize 00A0  
                                  __end_of_printOut 17C8                         EUSART_ReceiveISR@tempRxHead 0071  
                                  __end_of_vfprintf 0A24                               _pwm_fan_LoadDutyValue 08EF  
                                            utoa@fp 00BC             INT_SetInterruptHandler@InterruptHandler 00A0  
           ADC_SetInterruptHandler@InterruptHandler 00A0                                      _SPI1_IsRxReady 0000  
                                    _SPI1_IsTxReady 0000                                        ___xxtofl@arg 007A  
                                      ___xxtofl@exp 0079                                   _SYSTEM_Initialize 0969  
                                      ___xxtofl@val 0070                             __end_of__initialization 00A7  
                           _I2C2_EVENT_SEND_RD_ADDR 178B                                       ??_I2C2_IsAddr 0070  
                                     ??_I2C2_IsData 0070                                       ??_I2C2_IsNack 0070  
                                    _SPI1_ByteWrite 0000                                  ?_SYSTEM_Initialize 0070  
                                        ___fltol@f1 003A                                       __end_of_UART1 1030  
                           _I2C2_EVENT_SEND_WR_ADDR 1776                                      __pcstackCOMMON 0070  
                                      __pidataBANK0 0002                                        __pidataBANK2 17D2  
                               ??_SYSTEM_Initialize 00A2                                           ?_TMR2_ISR 0070  
                                         ?_TMR4_ISR 0070                                       __end_of_fputc 0E38  
                                     __end_of_fputs 09D2                                   ??_SPI1_Initialize 00A0  
                                     __end_of_putch 08C8                                          ??_I2C2_ISR 0074  
                                  ?_TMR2_Initialize 0070                             __end_of_TMR6_Initialize 0885  
                           _ADC_GetConversionResult 1746                                  _spi1_configuration 180B  
                              _eusartRxStatusBuffer 0120                                    _ADC_hoogtesensor 014E  
                                _pwm_fan_Initialize 17F4                                    ?_getHoogtesensor 0070  
                             __end_of_I2C2_EVENT_RX 0B56                               __end_of_I2C2_EVENT_TX 0A51  
                                           ??_fputc 00A7                           __end_of_SYSTEM_Initialize 098B  
                                           ??_fputs 00AF                                             ??_putch 00A2  
                                        __pbssBANK0 0055                                          __pbssBANK1 00EC  
                                        __pbssBANK2 0120                                          __pbssBANK3 01A0  
                               ?_pwm_fan_Initialize 0070                                __end_of_EUSART_Write 09FA  
                               _I2C2_InterruptClear 1705                                   __end_of__Umul8_16 09AE  
                          _TMR6_PeriodMatchCallback 0168                                          __pmaintext 0AB3  
                               __end_of_I2C2_IsAddr 178B                                 __end_of_I2C2_IsData 1746  
                             _I2C2_InterruptsEnable 1738                                             ?___wmul 00A0  
                               __end_of_I2C2_IsNack 175E                                          ??_TMR2_ISR 0070  
                                        ??_TMR4_ISR 007E                                          __pintentry 0004  
                              _EUSART_AutoBaudQuery 0000                                ??_pwm_fan_Initialize 00A0  
                                           _ADC_ISR 081C                                    ?_TMR4_Initialize 0070  
                                           ?_printf 00E1                                             ?_strlen 00A0  
                                   _EUSART_IsTxDone 0000                                    ?_I2C2_EVENT_IDLE 0070  
                                  ?_I2C2_EVENT_NACK 0070                                       _eusartRxCount 0068  
                              ?_I2C2_InterruptClear 0070                   _EUSART_RxCompleteCallbackRegister 0000  
                                  ?_I2C2_EVENT_STOP 0070                                           ?___xxtofl 0070  
                             __end_of_I2C2_NackSend 172C                               __end_of_I2C2_BusReset 171C  
                                   _EUSART_ErrorGet 0000                                             _SP1BRGH 019C  
                                           _SP1BRGL 019B                            _I2C2_ErrorInterruptClear 1702  
                                         _I2C2_Read 0000                                             _OSCCON1 0919  
                                           _OSCCON3 091B                                           _I2C2_Host 107D  
                            ?_pwm_fan_LoadDutyValue 0070                                             _OSCTUNE 091E  
                                           _PWM5DCH 0618                                             _PWM5DCL 0617  
                                           _PWM5CON 0619                                             _SSP1ADD 0212  
                                           _SSP2ADD 021A                                             _SLRCONA 030C  
                                           _SLRCONB 030D                                             _SLRCONC 030E  
                                           _SSP1BUF 0211                                             _SSP2BUF 0219  
                         ??_I2C2_EVENT_SEND_RD_ADDR 0070                                     _I2C2_Initialize 0867  
                       __end_of_I2C2_RestartDisable 1714                           ??_I2C2_EVENT_SEND_WR_ADDR 0071  
                                        _controller 0662                                _ADC_InterruptHandler 016E  
                           _ADC_SetInterruptHandler 179B                               __end_of_I2C2_StopSend 170B  
                                         ?_printOut 00E8                                             ___fladd 02E6  
                                           ___awdiv 0D22                                             ___awmod 0C27  
                                           ___flmul 00AB                                             ___fltol 0E38  
               adcConversionDoneHandler@new_channel 006F                                             ___lwdiv 0B56  
                                           ___lwmod 0A80                                           ?_vfprintf 00D9  
                         ??_ADC_GetConversionResult 0072                                          _hoogte_bal 014C  
                                  ?_TMR6_Initialize 0070                                             __ptext1 17BF  
                                           __ptext2 0885                                             __ptext3 09FA  
                                           __ptext4 04F2                                             __ptext5 076A  
                                           __ptext6 0A80                                             __ptext7 0B56  
                                           __ptext8 0D7E                                             __ptext9 07DF  
                             ??_I2C2_InterruptClear 0070                                           _T2CONbits 001F  
                             read_prec_or_width@fmt 00A6                                          ??___xxtofl 0074  
                                  ___awmod@dividend 00A2                                           _T4CONbits 0417  
                          ??_PIN_MANAGER_Initialize 00A0                             _INT_SetInterruptHandler 1764  
                                         _T6CONbits 041E                                       ?_I2C2_AckSend 0070  
                                           clrloop0 176B                                   _I2C2_EventHandler 0BDA  
                              end_of_initialization 00A7                            __end_of_I2C2_EVENT_ERROR 1758  
                          __end_of_I2C2_EVENT_RESET 1784                               I2C2_DataTransmit@data 0070  
                      I2C2_EVENT_NACK@retEventState 0070                                  ?_I2C2_EventHandler 0070  
                                           fputc@fp 00A5                         __end_ofi1_ADC_SelectChannel 17E8  
                                           init_ram 1770                                             fputs@fp 00AD  
                                           initloop 1771                                  _read_prec_or_width 0D7E  
                                       _I2C2_IsAddr 1784                                         _I2C2_IsData 1741  
                                       _I2C2_IsNack 1758                                         _I2C2_IsBusy 0000  
                                 _EUSART_Initialize 0AE6                                 ??_I2C2_EventHandler 0072  
                   _TMR6_DefaultPeriodMatchCallback 0000                                  ?_EUSART_Initialize 0070  
                            ?_I2C2_InterruptsEnable 0070                                     _i2c2_eventTable 1091  
                                 __end_of_vfpfcnvrt 0662                            ??_I2C2_ErrorEventHandler 0072  
                                   _SPI1_BufferRead 0000                                   _EUSART_ReceiveISR 0C79  
                               ?_read_prec_or_width 00A6                                          ??_printOut 00EA  
                                  vfpfcnvrt@convarg 00D3                                          ??_vfprintf 00DE  
                                ?_EUSART_ReceiveISR 0070                                           _SPI1_Open 0000  
                                           strlen@a 00A2                                             strlen@s 00A0  
                               ??_EUSART_Initialize 00A2                                  _I2C2_RestartEnable 0800  
                               _SPI1_BufferExchange 0000                               _I2C2_StatusFlagsClear 171C  
                                       ___fladd@grs 004D                                 ??_EUSART_ReceiveISR 0070  
                           __end_of_I2C2_Initialize 0876                 __end_of_ADC_DefaultInterruptHandler 1700  
                       _ADC_DefaultInterruptHandler 16FF                                       ___xxtofl@sign 0078  
   TMR4_PeriodMatchCallbackRegister@CallbackHandler 00A0                                      ??_I2C2_AckSend 0070  
                               ?_I2C2_RestartEnable 0070                           __end_of_I2C2_EventHandler 0C27  
                              ??_read_prec_or_width 00A8                                 _EUSART_Deinitialize 0000  
                        __end_of_initAdcMultiplexer 081C                                         ___flmul@grs 002E  
                         __end_of_EUSART_Initialize 0B1C                       ??_ADC_DefaultInterruptHandler 0070  
                         ??_ADC_SetInterruptHandler 00A2                                         printOut@str 00E8  
                                   _SPI1_Initialize 17C8                                         ?_controller 0070  
                         __end_of_EUSART_ReceiveISR 0CCD                                ??_I2C2_RestartEnable 0070  
           __end_of_TMR2_DefaultPeriodMatchCallback 1702                   ??_TMR2_DefaultPeriodMatchCallback 0070  
                  ?_TMR2_DefaultPeriodMatchCallback 0070                     _TMR2_DefaultPeriodMatchCallback 1701  
                      __end_of_INTERRUPT_Initialize 17F4                                    _I2C2_DataReceive 170B  
                                       vfpfcnvrt@ap 00CC                                         vfpfcnvrt@cp 00D7  
                                       vfpfcnvrt@fp 00C9                                      __end_of___wmul 07FF  
                                      _EUSART_Write 09D2                                      _ADC_Initialize 0904  
                         ??_INT_SetInterruptHandler 00A2                                      __end_of_printf 0895  
                                    _I2C2_ERROR_ISR 1730                                      __end_of_strlen 0930  
                               start_initialization 0076                                         __end_of_abs 08DA  
                                       __end_of_pad 0D22            __end_of_TMR4_PeriodMatchCallbackRegister 17B6  
                ??_TMR4_PeriodMatchCallbackRegister 00A2                   ?_TMR4_PeriodMatchCallbackRegister 00A0  
                  _TMR4_PeriodMatchCallbackRegister 17AD                                         putch@txData 00A2  
                        I2C2_EVENT_RX@retEventState 0070                             __end_of_i2c2_eventTable 10A3  
                         _EUSART_RxInterruptHandler 01D4                                         vfprintf@fmt 00DB  
                        _EUSART_FramingErrorHandler 0154                                            ??___wmul 00A4  
                            __end_of_ADC_Initialize 091A                                           __Umul8_16 098B  
                                       __pdataBANK0 006E                                         __pdataBANK2 015E  
                        ??_I2C2_ErrorInterruptClear 0070                                            ?_ADC_ISR 0070  
                          _adcConversionDoneHandler 0A51                              ?_I2C2_StatusFlagsClear 0070  
                            __end_of_I2C2_ERROR_ISR 1734                                            ??_printf 00E7  
                                          ??_strlen 00A2                             ??_pwm_fan_LoadDutyValue 0072  
                                         ___fladd@a 003E                                           ___fladd@b 003A  
                                     _SPI1_ByteRead 0000                                           ___flmul@a 0024  
                                         ___flmul@b 0020                                    ?_I2C2_Initialize 0070  
                                         ___latbits 0002                                       __pcstackBANK0 0020  
                                     __pcstackBANK1 00A0                             __end_of_SPI1_Initialize 17D2  
                            EUSART_Write@tempTxHead 00A1                                        _is_on_target 0066  
                                         __pnvBANK2 0168                                           __pnvBANK3 01D4  
                        I2C2_EVENT_TX@retEventState 0071                                    ___lwdiv@dividend 00A2  
                            _PIN_MANAGER_Initialize 0B91                            _TMR4_PeriodMatchCallback 016A  
                                         _dtoa$2634 00C1                                __end_of_I2C2_AckSend 1724  
                                 _ADC_SelectChannel 0803                                    _I2C2_IsRxBufFull 1724  
                                          ?___fladd 003A                                            ?___awdiv 00A0  
                                          ?___awmod 00A0                                            ?___flmul 0020  
                                          ?___fltol 003A                                          ?__Umul8_16 0070  
                                          ?___lwdiv 00A0                                            ?___lwmod 00A0  
                                   ?_ADC_Initialize 0070                                        _eusartRxHead 006A  
                                ?_ADC_SelectChannel 0070                                        _eusartTxHead 006D  
                                      _eusartRxTail 0069                                        _eusartTxTail 006C  
                                          _I2C2_ISR 1734                        ??_INTERRUPT_InterruptManager 007E  
                                   ?_I2C2_ERROR_ISR 0070                        EUSART_TransmitISR@tempTxTail 0070  
                           _eusartTxBufferRemaining 006B                                            _BAUD1CON 019F  
                            _EUSART_TransmitDisable 0000                                 ??_ADC_SelectChannel 00A0  
                            _I2C2_ErrorEventHandler 094C                                    ___lwdiv@quotient 00A4  
                                  _EUSART_IsRxReady 0000                                _INTERRUPT_Initialize 17E8  
                                         _integraal 0144                                    _EUSART_IsTxReady 17B6  
                                    _eusartRxBuffer 0130                                   ?_I2C2_EVENT_ERROR 0070  
                                  _CLOCK_Initialize 17A4                                   ?_I2C2_EVENT_RESET 0070  
                                         _dutycycle 0063                                      _eusartTxBuffer 0138  
                                    ___wmul@product 00A4                                            _LATAbits 010C  
                                      ?_I2C2_IsAddr 0070                                        ?_I2C2_IsData 0070  
                           ??_I2C2_InterruptsEnable 00A0                                        ?_I2C2_IsNack 0070  
                                ??_I2C2_EVENT_ERROR 0070                                           clear_ram0 176A  
                                ??_I2C2_EVENT_RESET 0070                                            _PIE1bits 0091  
                 _EUSART_TxCompleteCallbackRegister 0000                                            _PIE2bits 0092  
                                 _eusartRxLastError 015A                                          _I2C2_Close 08DA  
                         __end_of_ADC_SelectChannel 080F                                            _PIR0bits 0010  
                                          _PIR1bits 0011                                            _PIR2bits 0012  
                                        _I2C2_Write 0000                                            _OSCSTAT1 091C  
                                          _SSP1CON1 0215                                            _SSP1CON3 0217  
                                          _SSP2CON1 021D                                            _SSP2CON2 021E  
                                          _SSP2CON3 021F                                            _TMR2_ISR 082B  
                       __end_of_I2C2_InterruptClear 1708                                            _TMR4_ISR 083A  
                                          _SSP1STAT 0214                                            _SSP2STAT 021C  
                                         _vfpfcnvrt 04F2                                      _I2C2_WriteRead 0000  
                                        _ADCON0bits 009D                                   _SPI1_Deinitialize 0000  
                                 ___wmul@multiplier 00A0                            ADC_SelectChannel@channel 00A1  
                          ?_I2C2_EVENT_SEND_RD_ADDR 0070                                       readLine@index 0067  
                                       _EUSART_Read 0000                                    ?_SPI1_Initialize 0070  
                          __end_of_I2C2_DataReceive 170E                               ?_INTERRUPT_Initialize 0070  
                          ?_I2C2_EVENT_SEND_WR_ADDR 0070                                       _I2C2_EVENT_RX 0B1C  
                                     _I2C2_EVENT_TX 0A24                   _EUSART_RxCompleteInterruptHandler 0156  
                                 ??_TMR2_Initialize 00A0                                        ??_controller 004E  
                                _initAdcMultiplexer 080F                                          vfprintf@ap 00DD  
                                        vfprintf@fp 00D9                            ?_ADC_GetConversionResult 0070  
                        i1ADC_SelectChannel@channel 0071                                   ??_getHoogtesensor 0072  
                                       ??__Umul8_16 0072                          __end_of_EUSART_TransmitISR 094C  
                               ?_initAdcMultiplexer 0070                                          ?_vfpfcnvrt 00C9  
                                     _I2C2_Callback 015C                          __end_of_I2C2_ReceiveEnable 1711  
                                          ___xxtofl 0EA7                                  __end_of_controller 076A  
                                     _I2C2_NackSend 1728                                     ___lwdiv@divisor 00A0  
                                     _I2C2_BusReset 1718                                  _EUSART_AutoBaudSet 0000  
                                   ___lwdiv@counter 00A6                                            __ptext10 0F4B  
                                          __ptext11 0CCD                                            __ptext20 0D22  
                                          __ptext12 091A                                            __ptext21 080F  
                                          __ptext13 09AE                                            __ptext30 0B91  
                                          __ptext22 0803                                            __ptext14 0DDA  
                                          __ptext31 17E8                                            __ptext23 17AD  
                                          __ptext15 08B7                                            __ptext40 179B  
                                          __ptext32 1764                                            __ptext24 0969  
                                          __ptext16 09D2                                            __ptext33 0867  
                                          __ptext25 17F4                                            __ptext17 17B6  
                                          __ptext50 098B                                            __ptext42 083A  
                                          __ptext34 1738                                            __ptext26 0876  
                                          __ptext18 08C8                                            __ptext51 02E6  
                                          __ptext43 07FF                                            __ptext35 0AE6  
                                          __ptext27 08A6                                            __ptext19 0C27  
                                          __ptext60 094C                                            __ptext52 082B  
                                          __ptext44 0662                                            __ptext36 0858  
                                          __ptext28 0895                                            __ptext61 177D  
                                          __ptext53 1701                                            __ptext45 08EF  
                                          __ptext37 0849                                            __ptext29 17C8  
                                          __ptext70 0800                                            __ptext62 1793  
                                          __ptext54 1734                                            __ptext46 175E  
                                          __ptext38 17A4                                            __ptext71 173C  
                                          __ptext63 1752                                            __ptext55 0BDA  
                                          __ptext47 0EA7                                            __ptext39 0904  
                                          __ptext80 171C                                            __ptext72 1711  
                                          __ptext64 174C                                            __ptext56 1758  
                                          __ptext48 0E38                                            __ptext81 1705  
                                          __ptext73 170E                                            __ptext65 0B1C  
                                          __ptext57 1741                                            __ptext49 00AB  
                                          __ptext90 0A51                                            __ptext82 1702  
                                          __ptext74 1728                                            __ptext66 1776  
                                          __ptext58 1784                                            __ptext91 17DC  
                                          __ptext83 1718                                            __ptext75 1724  
                                          __ptext67 178B                                            __ptext59 1730  
                                          __ptext92 1746                                            __ptext84 0930  
                                          __ptext76 170B                                            __ptext68 172C  
                                          __ptext85 0C79                                            __ptext77 1720  
                                          __ptext69 0A24                                            __ptext86 1714  
                                          __ptext78 1708                                            __ptext87 1700  
                                          __ptext79 08DA                                            __ptext88 081C  
                                          __ptext89 16FF                                        _SSP1CON1bits 0215  
                                    ?_I2C2_EVENT_RX 0070                                      ?_I2C2_EVENT_TX 0070  
                                     _I2C2_ErrorGet 0000                                        _SSP2CON1bits 021D  
                                      _SSP2CON2bits 021E                                ??_initAdcMultiplexer 00A2  
                             _EUSART_TransmitEnable 0000                                            _ledstrip 1030  
                                 ??_TMR4_Initialize 00A0                                   ??_I2C2_EVENT_IDLE 0070  
                        ??_adcConversionDoneHandler 0072                                   ??_I2C2_EVENT_NACK 0070  
                                       ?_I2C2_Close 0070                                   ??_I2C2_EVENT_STOP 0070  
                                        _RC1STAbits 019D                                       _I2C2_StopSend 1708  
                                          _setpoint 0166                                            _printOut 17BF  
                           ??_I2C2_StatusFlagsClear 0070                                            int$flags 007E  
                                          _vfprintf 09FA                  __end_of_INTERRUPT_InterruptManager 0074  
                        _INTERRUPT_InterruptManager 0004         __end_of_EUSART_FramingErrorCallbackRegister 0858  
             ??_EUSART_FramingErrorCallbackRegister 00A2                ?_EUSART_FramingErrorCallbackRegister 00A0  
               _EUSART_FramingErrorCallbackRegister 0849                                           printf@fmt 00E1  
                   __end_of_I2C2_EVENT_SEND_RD_ADDR 1793                                        _SSP2STATbits 021C  
                             _I2C2_CallbackRegister 0000                      pwm_fan_LoadDutyValue@dutyValue 0070  
                                        _INTCONbits 000B                       __end_of_pwm_fan_LoadDutyValue 0904  
                                    ?_I2C2_NackSend 0070                     __end_of_I2C2_EVENT_SEND_WR_ADDR 177D  
                                    ?_I2C2_BusReset 0070                                _INT_InterruptHandler 00EE  
                                    __pstringtext10 10C5                                      __pstringtext11 10D4  
                                    __pstringtext12 10E3                                      __pstringtext13 10F0  
                                    __pstringtext14 1800                                      __pstringtext15 1815  
                                    __pstringtext16 181D                                      __pstringtext17 1824  
                                    __pstringtext18 182B                                      __pstringtext19 0000  
                            ??_INTERRUPT_Initialize 00A2                                        _I2C2_AckSend 1720  
                          __end_of_I2C2_IsRxBufFull 1728                            ?_ADC_SetInterruptHandler 00A0  
                                          intlevel1 0000                                    ___lwmod@dividend 00A2  
                         _EUSART_TxInterruptHandler 01D6                             ?_PIN_MANAGER_Initialize 0070  
                                 ??_TMR6_Initialize 00A0          __end_of_EUSART_DefaultFramingErrorCallback 1701  
              ??_EUSART_DefaultFramingErrorCallback 0070                 ?_EUSART_DefaultFramingErrorCallback 0070  
                _EUSART_DefaultFramingErrorCallback 1700                     __end_of_ADC_GetConversionResult 174C  
                                  ??_ADC_Initialize 00A2                                      ?_I2C2_StopSend 0070  
                                  ??_I2C2_ERROR_ISR 0074                                       _mustPrintLogs 006E  
                                          printf@ap 00E7                                    _SPI1_BufferWrite 0000  
                          ?_INT_SetInterruptHandler 00A0                                         ??_vfpfcnvrt 00CE  
                          __end_of_EUSART_IsTxReady 17BF                            __end_of_CLOCK_Initialize 17AD  
                                     __pstringtext1 1000                                       __pstringtext2 1030  
                                     __pstringtext3 107D                                       __pstringtext4 1091  
                                     __pstringtext5 180B                                       __pstringtext6 104C  
                                     __pstringtext7 1065                                       __pstringtext8 10A3  
                                     __pstringtext9 10B4                                          _SPI1_Close 0000  
                            __Umul8_16@multiplicand 0070                             ?_I2C2_ErrorEventHandler 0070  
                                        _SSP1DATPPS 0E21                                          _SSP2DATPPS 0E1E  
                                        _SSP2CLKPPS 0E1D                                     ___lwmod@divisor 00A0  
                                   ___lwmod@counter 00A4                                     ??_I2C2_EVENT_RX 0070  
                                   ??_I2C2_EVENT_TX 0071                                 _I2C2_RestartDisable 1711  
                                        _TX1STAbits 019E                                       ___fladd@signs 004A  
                                   controller@error 0053                           ?_I2C2_ErrorInterruptClear 0070  
                                EUSART_Write@txData 00A0                      __end_of_PIN_MANAGER_Initialize 0BDA  
                                       _PWMTMRSbits 061F                                        ___fladd@aexp 004B  
                                      ___fladd@bexp 004C                                __Umul8_16@multiplier 0078  
                     __end_of_I2C2_InterruptsEnable 173C                            _TMR2_PeriodMatchCallback 016C  
                        __end_of_spi1_configuration 1815                                   __Umul8_16@product 0074  
                              ?_I2C2_RestartDisable 0070  
