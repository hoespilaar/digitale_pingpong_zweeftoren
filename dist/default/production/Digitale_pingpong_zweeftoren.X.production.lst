

Microchip MPLAB XC8 Assembler V3.00 build 20241204225717 
                                                                                               Wed Feb 19 16:25:57 2025

Microchip MPLAB XC8 C Compiler v3.00 (Free license) build 20241204225717 Og1 
     1                           	processor	16F18345
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	idataBANK0,global,class=CODE,space=0,delta=2,noexec
     5                           	psect	idataBANK2,global,class=CODE,space=0,delta=2,noexec
     6                           	psect	stringtext1,global,class=STRCODE,space=0,delta=2,noexec
     7                           	psect	stringtext2,global,class=STRCODE,space=0,delta=2,noexec
     8                           	psect	stringtext3,global,class=STRCODE,space=0,delta=2,noexec
     9                           	psect	stringtext4,global,class=STRCODE,space=0,delta=2,noexec
    10                           	psect	stringtext5,global,class=STRCODE,space=0,delta=2,noexec
    11                           	psect	nvBANK2,global,class=BANK2,space=1,delta=1,noexec
    12                           	psect	nvBANK3,global,class=BANK3,space=1,delta=1,noexec
    13                           	psect	stringtext6,global,class=STRCODE,space=0,delta=2,noexec
    14                           	psect	stringtext7,global,class=STRCODE,space=0,delta=2,noexec
    15                           	psect	stringtext8,global,class=STRCODE,space=0,delta=2,noexec
    16                           	psect	stringtext9,global,class=STRCODE,space=0,delta=2,noexec
    17                           	psect	stringtext10,global,class=STRCODE,space=0,delta=2,noexec
    18                           	psect	stringtext11,global,class=STRCODE,space=0,delta=2,noexec
    19                           	psect	stringtext12,global,class=STRCODE,space=0,delta=2,noexec
    20                           	psect	stringtext13,global,class=STRCODE,space=0,delta=2,noexec
    21                           	psect	stringtext14,global,class=STRCODE,space=0,delta=2,noexec
    22                           	psect	stringtext15,global,class=STRCODE,space=0,delta=2,noexec
    23                           	psect	stringtext16,global,class=STRCODE,space=0,delta=2,noexec
    24                           	psect	stringtext17,global,class=STRCODE,space=0,delta=2,noexec
    25                           	psect	stringtext18,global,class=STRCODE,space=0,delta=2,noexec
    26                           	psect	stringtext19,global,class=STRCODE,space=0,delta=2,noexec
    27                           	psect	cinit,global,class=CODE,space=0,merge=1,delta=2
    28                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,noexec
    29                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,noexec
    30                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1,noexec
    31                           	psect	bssBANK2,global,class=BANK2,space=1,delta=1,noexec
    32                           	psect	dataBANK2,global,class=BANK2,space=1,delta=1,noexec
    33                           	psect	bssBANK3,global,class=BANK3,space=1,delta=1,noexec
    34                           	psect	inittext,global,class=CODE,space=0,delta=2
    35                           	psect	clrtext,global,class=CODE,space=0,delta=2
    36                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1,noexec
    37                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
    38                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    39                           	psect	maintext,global,class=CODE,space=0,merge=1,split=1,delta=2
    40                           	psect	text1,local,class=CODE,space=0,merge=1,delta=2
    41                           	psect	text2,local,class=CODE,space=0,merge=1,delta=2
    42                           	psect	text3,local,class=CODE,space=0,merge=1,delta=2,group=2
    43                           	psect	text4,local,class=CODE,space=0,merge=1,delta=2,group=2
    44                           	psect	text5,local,class=CODE,space=0,merge=1,delta=2,group=2
    45                           	psect	text6,local,class=CODE,space=0,merge=1,delta=2,group=2
    46                           	psect	text7,local,class=CODE,space=0,merge=1,delta=2,group=2
    47                           	psect	text8,local,class=CODE,space=0,merge=1,delta=2
    48                           	psect	text9,local,class=CODE,space=0,merge=1,delta=2
    49                           	psect	text10,local,class=CODE,space=0,merge=1,delta=2
    50                           	psect	text11,local,class=CODE,space=0,merge=1,delta=2
    51                           	psect	text12,local,class=CODE,space=0,merge=1,delta=2
    52                           	psect	text13,local,class=CODE,space=0,merge=1,delta=2
    53                           	psect	text14,local,class=CODE,space=0,merge=1,delta=2,group=3
    54                           	psect	text15,local,class=CODE,space=0,merge=1,delta=2
    55                           	psect	text16,local,class=CODE,space=0,merge=1,delta=2,group=3
    56                           	psect	text17,local,class=CODE,space=0,merge=1,delta=2,group=1
    57                           	psect	text18,local,class=CODE,space=0,merge=1,delta=2,group=1
    58                           	psect	text19,local,class=CODE,space=0,merge=1,delta=2,group=1
    59                           	psect	text20,local,class=CODE,space=0,merge=1,delta=2,group=2
    60                           	psect	text21,local,class=CODE,space=0,merge=1,delta=2,group=2
    61                           	psect	text22,local,class=CODE,space=0,merge=1,delta=2,group=1
    62                           	psect	text23,local,class=CODE,space=0,merge=1,delta=2,group=2
    63                           	psect	text24,local,class=CODE,space=0,merge=1,delta=2,group=1
    64                           	psect	text25,local,class=CODE,space=0,merge=1,delta=2,group=1
    65                           	psect	text26,local,class=CODE,space=0,merge=1,delta=2,group=3
    66                           	psect	text27,local,class=CODE,space=0,merge=1,delta=2,group=3
    67                           	psect	text28,local,class=CODE,space=0,merge=1,delta=2,group=3
    68                           	psect	text29,local,class=CODE,space=0,merge=1,delta=2
    69                           	psect	text30,local,class=CODE,space=0,merge=1,delta=2
    70                           	psect	text31,local,class=CODE,space=0,merge=1,delta=2
    71                           	psect	text32,local,class=CODE,space=0,merge=1,delta=2,group=3
    72                           	psect	text33,local,class=CODE,space=0,merge=1,delta=2,group=2
    73                           	psect	text34,local,class=CODE,space=0,merge=1,delta=2,group=2
    74                           	psect	text35,local,class=CODE,space=0,merge=1,delta=2
    75                           	psect	text36,local,class=CODE,space=0,merge=1,delta=2
    76                           	psect	text37,local,class=CODE,space=0,merge=1,delta=2
    77                           	psect	text38,local,class=CODE,space=0,merge=1,delta=2
    78                           	psect	text39,local,class=CODE,space=0,merge=1,delta=2
    79                           	psect	text40,local,class=CODE,space=0,merge=1,delta=2
    80                           	psect	text41,local,class=CODE,space=0,merge=1,delta=2
    81                           	psect	text42,local,class=CODE,space=0,merge=1,delta=2
    82                           	psect	text43,local,class=CODE,space=0,merge=1,delta=2
    83                           	psect	text44,local,class=CODE,space=0,merge=1,delta=2
    84                           	psect	text45,local,class=CODE,space=0,merge=1,delta=2
    85                           	psect	text46,local,class=CODE,space=0,merge=1,delta=2
    86                           	psect	text47,local,class=CODE,space=0,merge=1,delta=2
    87                           	psect	text48,local,class=CODE,space=0,merge=1,delta=2
    88                           	psect	text49,local,class=CODE,space=0,merge=1,delta=2
    89                           	psect	text50,local,class=CODE,space=0,merge=1,delta=2
    90                           	psect	text51,local,class=CODE,space=0,merge=1,delta=2
    91                           	psect	text52,local,class=CODE,space=0,merge=1,delta=2
    92                           	psect	text53,local,class=CODE,space=0,merge=1,delta=2
    93                           	psect	text54,local,class=CODE,space=0,merge=1,delta=2
    94                           	psect	text55,local,class=CODE,space=0,merge=1,inline,delta=2
    95                           	psect	intentry,global,class=CODE,space=0,delta=2
    96                           	psect	text57,local,class=CODE,space=0,merge=1,delta=2
    97                           	psect	text58,local,class=CODE,space=0,merge=1,delta=2
    98                           	psect	text59,local,class=CODE,space=0,merge=1,delta=2
    99                           	psect	text60,local,class=CODE,space=0,merge=1,delta=2
   100                           	psect	text61,local,class=CODE,space=0,merge=1,delta=2
   101                           	psect	text62,local,class=CODE,space=0,merge=1,delta=2
   102                           	psect	text63,local,class=CODE,space=0,merge=1,delta=2
   103                           	psect	text64,local,class=CODE,space=0,merge=1,delta=2
   104                           	psect	text65,local,class=CODE,space=0,merge=1,delta=2
   105                           	psect	text66,local,class=CODE,space=0,merge=1,delta=2,group=2
   106                           	psect	text67,local,class=CODE,space=0,merge=1,delta=2
   107                           	psect	text68,local,class=CODE,space=0,merge=1,delta=2
   108                           	psect	text69,local,class=CODE,space=0,merge=1,delta=2
   109                           	psect	text70,local,class=CODE,space=0,merge=1,delta=2
   110                           	psect	text71,local,class=CODE,space=0,merge=1,delta=2
   111                           	psect	text72,local,class=CODE,space=0,merge=1,delta=2
   112                           	psect	text73,local,class=CODE,space=0,merge=1,delta=2
   113                           	psect	text74,local,class=CODE,space=0,merge=1,delta=2
   114                           	psect	text75,local,class=CODE,space=0,merge=1,delta=2
   115                           	psect	text76,local,class=CODE,space=0,merge=1,delta=2
   116                           	psect	text77,local,class=CODE,space=0,merge=1,delta=2
   117                           	psect	text78,local,class=CODE,space=0,merge=1,delta=2
   118                           	psect	text79,local,class=CODE,space=0,merge=1,delta=2
   119                           	psect	text80,local,class=CODE,space=0,merge=1,delta=2
   120                           	psect	text81,local,class=CODE,space=0,merge=1,delta=2
   121                           	psect	text82,local,class=CODE,space=0,merge=1,delta=2
   122                           	psect	text83,local,class=CODE,space=0,merge=1,delta=2
   123                           	psect	text84,local,class=CODE,space=0,merge=1,delta=2
   124                           	psect	text85,local,class=CODE,space=0,merge=1,inline,delta=2
   125                           	psect	text86,local,class=CODE,space=0,merge=1,delta=2
   126                           	psect	text87,local,class=CODE,space=0,merge=1,inline,delta=2
   127                           	psect	text88,local,class=CODE,space=0,merge=1,inline,delta=2
   128                           	psect	text89,local,class=CODE,space=0,merge=1,inline,delta=2
   129                           	psect	text90,local,class=CODE,space=0,merge=1,delta=2
   130                           	psect	text91,local,class=CODE,space=0,merge=1,delta=2
   131                           	psect	text92,local,class=CODE,space=0,merge=1,inline,delta=2
   132                           	psect	text93,local,class=CODE,space=0,merge=1,inline,delta=2
   133                           	psect	text94,local,class=CODE,space=0,merge=1,delta=2
   134                           	psect	text95,local,class=CODE,space=0,merge=1,inline,delta=2
   135                           	psect	text96,local,class=CODE,space=0,merge=1,inline,delta=2
   136                           	psect	text97,local,class=CODE,space=0,merge=1,inline,delta=2
   137                           	psect	text98,local,class=CODE,space=0,merge=1,inline,delta=2
   138                           	psect	text99,local,class=CODE,space=0,merge=1,delta=2
   139                           	psect	text100,local,class=CODE,space=0,merge=1,delta=2
   140                           	psect	text101,local,class=CODE,space=0,merge=1,delta=2
   141                           	psect	text102,local,class=CODE,space=0,merge=1,delta=2
   142                           	psect	text103,local,class=CODE,space=0,merge=1,delta=2
   143                           	psect	text104,local,class=CODE,space=0,merge=1,delta=2
   144                           	psect	text105,local,class=CODE,space=0,merge=1,delta=2
   145                           	psect	text106,local,class=CODE,space=0,merge=1,delta=2
   146                           	psect	text107,local,class=CODE,space=0,merge=1,delta=2
   147                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
   148                           	dabs	1,0x7E,2
   149     0000                     
   150                           ; Generated 11/01/2024 GMT
   151                           ; 
   152                           ; Copyright © 2024, Microchip Technology Inc. and its subsidiaries ("Microchip")
   153                           ; All rights reserved.
   154                           ; 
   155                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
   156                           ; 
   157                           ; Redistribution and use in source and binary forms, with or without modification, are
   158                           ; permitted provided that the following conditions are met:
   159                           ; 
   160                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
   161                           ;        conditions and the following disclaimer.
   162                           ; 
   163                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
   164                           ;        of conditions and the following disclaimer in the documentation and/or other
   165                           ;        materials provided with the distribution. Publication is not required when
   166                           ;        this file is used in an embedded application.
   167                           ; 
   168                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
   169                           ;        software without specific prior written permission.
   170                           ; 
   171                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
   172                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
   173                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
   174                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
   175                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
   176                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
   177                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
   178                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
   179                           ; 
   180                           ; 
   181                           ; Code-generator required, PIC16F18345 Definitions
   182                           ; 
   183                           ; SFR Addresses
   184     0008                     bsr             equ	8
   185     0005                     fsr0h           equ	5
   186     0004                     fsr0l           equ	4
   187     0007                     fsr1h           equ	7
   188     0006                     fsr1l           equ	6
   189     0000                     indf            equ	0
   190     0000                     indf0           equ	0
   191     0001                     indf1           equ	1
   192     000B                     intcon          equ	11
   193     0002                     pc              equ	2
   194     0002                     pcl             equ	2
   195     000A                     pclath          equ	10
   196     0003                     status          equ	3
   197     0009                     wreg            equ	9
   198     0000                     INDF0           equ	0	;# 
   199     0001                     INDF1           equ	1	;# 
   200     0002                     PCL             equ	2	;# 
   201     0003                     STATUS          equ	3	;# 
   202     0004                     FSR0L           equ	4	;# 
   203     0005                     FSR0H           equ	5	;# 
   204     0006                     FSR1L           equ	6	;# 
   205     0007                     FSR1H           equ	7	;# 
   206     0008                     BSR             equ	8	;# 
   207     0009                     WREG            equ	9	;# 
   208     000A                     PCLATH          equ	10	;# 
   209     000B                     INTCON          equ	11	;# 
   210     000C                     PORTA           equ	12	;# 
   211     000D                     PORTB           equ	13	;# 
   212     000E                     PORTC           equ	14	;# 
   213     0010                     PIR0            equ	16	;# 
   214     0011                     PIR1            equ	17	;# 
   215     0012                     PIR2            equ	18	;# 
   216     0013                     PIR3            equ	19	;# 
   217     0014                     PIR4            equ	20	;# 
   218     0015                     TMR0L           equ	21	;# 
   219     0015                     TMR0            equ	21	;# 
   220     0016                     TMR0H           equ	22	;# 
   221     0016                     PR0             equ	22	;# 
   222     0017                     T0CON0          equ	23	;# 
   223     0018                     T0CON1          equ	24	;# 
   224     0019                     TMR1            equ	25	;# 
   225     0019                     TMR1L           equ	25	;# 
   226     001A                     TMR1H           equ	26	;# 
   227     001B                     T1CON           equ	27	;# 
   228     001C                     T1GCON          equ	28	;# 
   229     001D                     TMR2            equ	29	;# 
   230     001E                     PR2             equ	30	;# 
   231     001F                     T2CON           equ	31	;# 
   232     008C                     TRISA           equ	140	;# 
   233     008D                     TRISB           equ	141	;# 
   234     008E                     TRISC           equ	142	;# 
   235     0090                     PIE0            equ	144	;# 
   236     0091                     PIE1            equ	145	;# 
   237     0092                     PIE2            equ	146	;# 
   238     0093                     PIE3            equ	147	;# 
   239     0094                     PIE4            equ	148	;# 
   240     0097                     WDTCON          equ	151	;# 
   241     009B                     ADRES           equ	155	;# 
   242     009B                     ADRESL          equ	155	;# 
   243     009C                     ADRESH          equ	156	;# 
   244     009D                     ADCON0          equ	157	;# 
   245     009E                     ADCON1          equ	158	;# 
   246     009F                     ADACT           equ	159	;# 
   247     010C                     LATA            equ	268	;# 
   248     010D                     LATB            equ	269	;# 
   249     010E                     LATC            equ	270	;# 
   250     0111                     CM1CON0         equ	273	;# 
   251     0112                     CM1CON1         equ	274	;# 
   252     0113                     CM2CON0         equ	275	;# 
   253     0114                     CM2CON1         equ	276	;# 
   254     0115                     CMOUT           equ	277	;# 
   255     0116                     BORCON          equ	278	;# 
   256     0117                     FVRCON          equ	279	;# 
   257     0118                     DACCON0         equ	280	;# 
   258     0119                     DACCON1         equ	281	;# 
   259     018C                     ANSELA          equ	396	;# 
   260     018D                     ANSELB          equ	397	;# 
   261     018E                     ANSELC          equ	398	;# 
   262     0197                     VREGCON         equ	407	;# 
   263     0199                     RC1REG          equ	409	;# 
   264     0199                     RCREG           equ	409	;# 
   265     0199                     RCREG1          equ	409	;# 
   266     019A                     TX1REG          equ	410	;# 
   267     019A                     TXREG1          equ	410	;# 
   268     019A                     TXREG           equ	410	;# 
   269     019B                     SP1BRG          equ	411	;# 
   270     019B                     SPBRG           equ	411	;# 
   271     019B                     SP1BRGL         equ	411	;# 
   272     019B                     SPBRG1          equ	411	;# 
   273     019B                     SPBRGL          equ	411	;# 
   274     019C                     SP1BRGH         equ	412	;# 
   275     019C                     SPBRGH          equ	412	;# 
   276     019C                     SPBRGH1         equ	412	;# 
   277     019D                     RC1STA          equ	413	;# 
   278     019D                     RCSTA1          equ	413	;# 
   279     019D                     RCSTA           equ	413	;# 
   280     019E                     TX1STA          equ	414	;# 
   281     019E                     TXSTA1          equ	414	;# 
   282     019E                     TXSTA           equ	414	;# 
   283     019F                     BAUD1CON        equ	415	;# 
   284     019F                     BAUDCON1        equ	415	;# 
   285     019F                     BAUDCTL1        equ	415	;# 
   286     019F                     BAUDCON         equ	415	;# 
   287     019F                     BAUDCTL         equ	415	;# 
   288     020C                     WPUA            equ	524	;# 
   289     020D                     WPUB            equ	525	;# 
   290     020E                     WPUC            equ	526	;# 
   291     0211                     SSP1BUF         equ	529	;# 
   292     0211                     SSPBUF          equ	529	;# 
   293     0212                     SSP1ADD         equ	530	;# 
   294     0212                     SSPADD          equ	530	;# 
   295     0213                     SSP1MSK         equ	531	;# 
   296     0213                     SSPMSK          equ	531	;# 
   297     0214                     SSP1STAT        equ	532	;# 
   298     0214                     SSPSTAT         equ	532	;# 
   299     0215                     SSP1CON1        equ	533	;# 
   300     0215                     SSPCON          equ	533	;# 
   301     0215                     SSPCON1         equ	533	;# 
   302     0215                     SSP1CON         equ	533	;# 
   303     0216                     SSP1CON2        equ	534	;# 
   304     0216                     SSPCON2         equ	534	;# 
   305     0217                     SSP1CON3        equ	535	;# 
   306     0217                     SSPCON3         equ	535	;# 
   307     0219                     SSP2BUF         equ	537	;# 
   308     021A                     SSP2ADD         equ	538	;# 
   309     021B                     SSP2MSK         equ	539	;# 
   310     021C                     SSP2STAT        equ	540	;# 
   311     021D                     SSP2CON1        equ	541	;# 
   312     021D                     SSP2CON         equ	541	;# 
   313     021E                     SSP2CON2        equ	542	;# 
   314     021F                     SSP2CON3        equ	543	;# 
   315     028C                     ODCONA          equ	652	;# 
   316     028D                     ODCONB          equ	653	;# 
   317     028E                     ODCONC          equ	654	;# 
   318     0291                     CCPR1           equ	657	;# 
   319     0291                     CCPR1L          equ	657	;# 
   320     0292                     CCPR1H          equ	658	;# 
   321     0293                     CCP1CON         equ	659	;# 
   322     0294                     CCP1CAP         equ	660	;# 
   323     0295                     CCPR2           equ	661	;# 
   324     0295                     CCPR2L          equ	661	;# 
   325     0296                     CCPR2H          equ	662	;# 
   326     0297                     CCP2CON         equ	663	;# 
   327     0298                     CCP2CAP         equ	664	;# 
   328     029F                     CCPTMRS         equ	671	;# 
   329     030C                     SLRCONA         equ	780	;# 
   330     030D                     SLRCONB         equ	781	;# 
   331     030E                     SLRCONC         equ	782	;# 
   332     0311                     CCPR3           equ	785	;# 
   333     0311                     CCPR3L          equ	785	;# 
   334     0312                     CCPR3H          equ	786	;# 
   335     0313                     CCP3CON         equ	787	;# 
   336     0314                     CCP3CAP         equ	788	;# 
   337     0315                     CCPR4           equ	789	;# 
   338     0315                     CCPR4L          equ	789	;# 
   339     0316                     CCPR4H          equ	790	;# 
   340     0317                     CCP4CON         equ	791	;# 
   341     0318                     CCP4CAP         equ	792	;# 
   342     038C                     INLVLA          equ	908	;# 
   343     038D                     INLVLB          equ	909	;# 
   344     038E                     INLVLC          equ	910	;# 
   345     0391                     IOCAP           equ	913	;# 
   346     0392                     IOCAN           equ	914	;# 
   347     0393                     IOCAF           equ	915	;# 
   348     0394                     IOCBP           equ	916	;# 
   349     0395                     IOCBN           equ	917	;# 
   350     0396                     IOCBF           equ	918	;# 
   351     0397                     IOCCP           equ	919	;# 
   352     0398                     IOCCN           equ	920	;# 
   353     0399                     IOCCF           equ	921	;# 
   354     039A                     CLKRCON         equ	922	;# 
   355     039C                     MDCON           equ	924	;# 
   356     039D                     MDSRC           equ	925	;# 
   357     039E                     MDCARH          equ	926	;# 
   358     039F                     MDCARL          equ	927	;# 
   359     0411                     TMR3            equ	1041	;# 
   360     0411                     TMR3L           equ	1041	;# 
   361     0412                     TMR3H           equ	1042	;# 
   362     0413                     T3CON           equ	1043	;# 
   363     0414                     T3GCON          equ	1044	;# 
   364     0415                     TMR4            equ	1045	;# 
   365     0416                     PR4             equ	1046	;# 
   366     0417                     T4CON           equ	1047	;# 
   367     0418                     TMR5            equ	1048	;# 
   368     0418                     TMR5L           equ	1048	;# 
   369     0419                     TMR5H           equ	1049	;# 
   370     041A                     T5CON           equ	1050	;# 
   371     041B                     T5GCON          equ	1051	;# 
   372     041C                     TMR6            equ	1052	;# 
   373     041D                     PR6             equ	1053	;# 
   374     041E                     T6CON           equ	1054	;# 
   375     041F                     CCDCON          equ	1055	;# 
   376     0498                     NCO1ACC         equ	1176	;# 
   377     0498                     NCO1ACCL        equ	1176	;# 
   378     0499                     NCO1ACCH        equ	1177	;# 
   379     049A                     NCO1ACCU        equ	1178	;# 
   380     049B                     NCO1INC         equ	1179	;# 
   381     049B                     NCO1INCL        equ	1179	;# 
   382     049C                     NCO1INCH        equ	1180	;# 
   383     049D                     NCO1INCU        equ	1181	;# 
   384     049E                     NCO1CON         equ	1182	;# 
   385     049F                     NCO1CLK         equ	1183	;# 
   386     0617                     PWM5DCL         equ	1559	;# 
   387     0618                     PWM5DCH         equ	1560	;# 
   388     0619                     PWM5CON         equ	1561	;# 
   389     0619                     PWM5CON0        equ	1561	;# 
   390     061A                     PWM6DCL         equ	1562	;# 
   391     061B                     PWM6DCH         equ	1563	;# 
   392     061C                     PWM6CON         equ	1564	;# 
   393     061C                     PWM6CON0        equ	1564	;# 
   394     061F                     PWMTMRS         equ	1567	;# 
   395     0691                     CWG1CLKCON      equ	1681	;# 
   396     0692                     CWG1DAT         equ	1682	;# 
   397     0693                     CWG1DBR         equ	1683	;# 
   398     0694                     CWG1DBF         equ	1684	;# 
   399     0695                     CWG1CON0        equ	1685	;# 
   400     0696                     CWG1CON1        equ	1686	;# 
   401     0697                     CWG1AS0         equ	1687	;# 
   402     0698                     CWG1AS1         equ	1688	;# 
   403     0699                     CWG1STR         equ	1689	;# 
   404     0711                     CWG2CLKCON      equ	1809	;# 
   405     0712                     CWG2DAT         equ	1810	;# 
   406     0713                     CWG2DBR         equ	1811	;# 
   407     0714                     CWG2DBF         equ	1812	;# 
   408     0715                     CWG2CON0        equ	1813	;# 
   409     0716                     CWG2CON1        equ	1814	;# 
   410     0717                     CWG2AS0         equ	1815	;# 
   411     0718                     CWG2AS1         equ	1816	;# 
   412     0719                     CWG2STR         equ	1817	;# 
   413     0891                     NVMADR          equ	2193	;# 
   414     0891                     EEADR           equ	2193	;# 
   415     0891                     PMADR           equ	2193	;# 
   416     0891                     NVMADRL         equ	2193	;# 
   417     0891                     EEADRL          equ	2193	;# 
   418     0891                     PMADRL          equ	2193	;# 
   419     0892                     NVMADRH         equ	2194	;# 
   420     0892                     EEADRH          equ	2194	;# 
   421     0892                     PMADRH          equ	2194	;# 
   422     0893                     NVMDAT          equ	2195	;# 
   423     0893                     EEDAT           equ	2195	;# 
   424     0893                     PMDAT           equ	2195	;# 
   425     0893                     NVMDATL         equ	2195	;# 
   426     0893                     EEDATL          equ	2195	;# 
   427     0893                     PMDATL          equ	2195	;# 
   428     0894                     NVMDATH         equ	2196	;# 
   429     0894                     EEDATH          equ	2196	;# 
   430     0894                     PMDATH          equ	2196	;# 
   431     0895                     NVMCON1         equ	2197	;# 
   432     0895                     EECON1          equ	2197	;# 
   433     0895                     PMCON1          equ	2197	;# 
   434     0896                     NVMCON2         equ	2198	;# 
   435     0896                     EECON2          equ	2198	;# 
   436     0896                     PMCON2          equ	2198	;# 
   437     089B                     PCON0           equ	2203	;# 
   438     0911                     PMD0            equ	2321	;# 
   439     0912                     PMD1            equ	2322	;# 
   440     0913                     PMD2            equ	2323	;# 
   441     0914                     PMD3            equ	2324	;# 
   442     0915                     PMD4            equ	2325	;# 
   443     0916                     PMD5            equ	2326	;# 
   444     0918                     CPUDOZE         equ	2328	;# 
   445     0919                     OSCCON1         equ	2329	;# 
   446     091A                     OSCCON2         equ	2330	;# 
   447     091B                     OSCCON3         equ	2331	;# 
   448     091C                     OSCSTAT1        equ	2332	;# 
   449     091D                     OSCEN           equ	2333	;# 
   450     091E                     OSCTUNE         equ	2334	;# 
   451     091F                     OSCFRQ          equ	2335	;# 
   452     0E0F                     PPSLOCK         equ	3599	;# 
   453     0E10                     INTPPS          equ	3600	;# 
   454     0E11                     T0CKIPPS        equ	3601	;# 
   455     0E12                     T1CKIPPS        equ	3602	;# 
   456     0E13                     T1GPPS          equ	3603	;# 
   457     0E14                     CCP1PPS         equ	3604	;# 
   458     0E15                     CCP2PPS         equ	3605	;# 
   459     0E16                     CCP3PPS         equ	3606	;# 
   460     0E17                     CCP4PPS         equ	3607	;# 
   461     0E18                     CWG1PPS         equ	3608	;# 
   462     0E19                     CWG2PPS         equ	3609	;# 
   463     0E1A                     MDCIN1PPS       equ	3610	;# 
   464     0E1B                     MDCIN2PPS       equ	3611	;# 
   465     0E1C                     MDMINPPS        equ	3612	;# 
   466     0E1D                     SSP2CLKPPS      equ	3613	;# 
   467     0E1E                     SSP2DATPPS      equ	3614	;# 
   468     0E1F                     SSP2SSPPS       equ	3615	;# 
   469     0E20                     SSP1CLKPPS      equ	3616	;# 
   470     0E21                     SSP1DATPPS      equ	3617	;# 
   471     0E22                     SSP1SSPPS       equ	3618	;# 
   472     0E24                     RXPPS           equ	3620	;# 
   473     0E25                     TXPPS           equ	3621	;# 
   474     0E28                     CLCIN0PPS       equ	3624	;# 
   475     0E29                     CLCIN1PPS       equ	3625	;# 
   476     0E2A                     CLCIN2PPS       equ	3626	;# 
   477     0E2B                     CLCIN3PPS       equ	3627	;# 
   478     0E2C                     T3CKIPPS        equ	3628	;# 
   479     0E2D                     T3GPPS          equ	3629	;# 
   480     0E2E                     T5CKIPPS        equ	3630	;# 
   481     0E2F                     T5GPPS          equ	3631	;# 
   482     0E90                     RA0PPS          equ	3728	;# 
   483     0E91                     RA1PPS          equ	3729	;# 
   484     0E92                     RA2PPS          equ	3730	;# 
   485     0E94                     RA4PPS          equ	3732	;# 
   486     0E95                     RA5PPS          equ	3733	;# 
   487     0E9C                     RB4PPS          equ	3740	;# 
   488     0E9D                     RB5PPS          equ	3741	;# 
   489     0E9E                     RB6PPS          equ	3742	;# 
   490     0E9F                     RB7PPS          equ	3743	;# 
   491     0EA0                     RC0PPS          equ	3744	;# 
   492     0EA1                     RC1PPS          equ	3745	;# 
   493     0EA2                     RC2PPS          equ	3746	;# 
   494     0EA3                     RC3PPS          equ	3747	;# 
   495     0EA4                     RC4PPS          equ	3748	;# 
   496     0EA5                     RC5PPS          equ	3749	;# 
   497     0EA6                     RC6PPS          equ	3750	;# 
   498     0EA7                     RC7PPS          equ	3751	;# 
   499     0F0F                     CLCDATA         equ	3855	;# 
   500     0F10                     CLC1CON         equ	3856	;# 
   501     0F11                     CLC1POL         equ	3857	;# 
   502     0F12                     CLC1SEL0        equ	3858	;# 
   503     0F13                     CLC1SEL1        equ	3859	;# 
   504     0F14                     CLC1SEL2        equ	3860	;# 
   505     0F15                     CLC1SEL3        equ	3861	;# 
   506     0F16                     CLC1GLS0        equ	3862	;# 
   507     0F17                     CLC1GLS1        equ	3863	;# 
   508     0F18                     CLC1GLS2        equ	3864	;# 
   509     0F19                     CLC1GLS3        equ	3865	;# 
   510     0F1A                     CLC2CON         equ	3866	;# 
   511     0F1B                     CLC2POL         equ	3867	;# 
   512     0F1C                     CLC2SEL0        equ	3868	;# 
   513     0F1D                     CLC2SEL1        equ	3869	;# 
   514     0F1E                     CLC2SEL2        equ	3870	;# 
   515     0F1F                     CLC2SEL3        equ	3871	;# 
   516     0F20                     CLC2GLS0        equ	3872	;# 
   517     0F21                     CLC2GLS1        equ	3873	;# 
   518     0F22                     CLC2GLS2        equ	3874	;# 
   519     0F23                     CLC2GLS3        equ	3875	;# 
   520     0F24                     CLC3CON         equ	3876	;# 
   521     0F25                     CLC3POL         equ	3877	;# 
   522     0F26                     CLC3SEL0        equ	3878	;# 
   523     0F27                     CLC3SEL1        equ	3879	;# 
   524     0F28                     CLC3SEL2        equ	3880	;# 
   525     0F29                     CLC3SEL3        equ	3881	;# 
   526     0F2A                     CLC3GLS0        equ	3882	;# 
   527     0F2B                     CLC3GLS1        equ	3883	;# 
   528     0F2C                     CLC3GLS2        equ	3884	;# 
   529     0F2D                     CLC3GLS3        equ	3885	;# 
   530     0F2E                     CLC4CON         equ	3886	;# 
   531     0F2F                     CLC4POL         equ	3887	;# 
   532     0F30                     CLC4SEL0        equ	3888	;# 
   533     0F31                     CLC4SEL1        equ	3889	;# 
   534     0F32                     CLC4SEL2        equ	3890	;# 
   535     0F33                     CLC4SEL3        equ	3891	;# 
   536     0F34                     CLC4GLS0        equ	3892	;# 
   537     0F35                     CLC4GLS1        equ	3893	;# 
   538     0F36                     CLC4GLS2        equ	3894	;# 
   539     0F37                     CLC4GLS3        equ	3895	;# 
   540     0FE4                     STATUS_SHAD     equ	4068	;# 
   541     0FE5                     WREG_SHAD       equ	4069	;# 
   542     0FE6                     BSR_SHAD        equ	4070	;# 
   543     0FE7                     PCLATH_SHAD     equ	4071	;# 
   544     0FE8                     FSR0L_SHAD      equ	4072	;# 
   545     0FE9                     FSR0H_SHAD      equ	4073	;# 
   546     0FEA                     FSR1L_SHAD      equ	4074	;# 
   547     0FEB                     FSR1H_SHAD      equ	4075	;# 
   548     0FED                     STKPTR          equ	4077	;# 
   549     0FEE                     TOSL            equ	4078	;# 
   550     0FEF                     TOSH            equ	4079	;# 
   551     0000                     INDF0           equ	0	;# 
   552     0001                     INDF1           equ	1	;# 
   553     0002                     PCL             equ	2	;# 
   554     0003                     STATUS          equ	3	;# 
   555     0004                     FSR0L           equ	4	;# 
   556     0005                     FSR0H           equ	5	;# 
   557     0006                     FSR1L           equ	6	;# 
   558     0007                     FSR1H           equ	7	;# 
   559     0008                     BSR             equ	8	;# 
   560     0009                     WREG            equ	9	;# 
   561     000A                     PCLATH          equ	10	;# 
   562     000B                     INTCON          equ	11	;# 
   563     000C                     PORTA           equ	12	;# 
   564     000D                     PORTB           equ	13	;# 
   565     000E                     PORTC           equ	14	;# 
   566     0010                     PIR0            equ	16	;# 
   567     0011                     PIR1            equ	17	;# 
   568     0012                     PIR2            equ	18	;# 
   569     0013                     PIR3            equ	19	;# 
   570     0014                     PIR4            equ	20	;# 
   571     0015                     TMR0L           equ	21	;# 
   572     0015                     TMR0            equ	21	;# 
   573     0016                     TMR0H           equ	22	;# 
   574     0016                     PR0             equ	22	;# 
   575     0017                     T0CON0          equ	23	;# 
   576     0018                     T0CON1          equ	24	;# 
   577     0019                     TMR1            equ	25	;# 
   578     0019                     TMR1L           equ	25	;# 
   579     001A                     TMR1H           equ	26	;# 
   580     001B                     T1CON           equ	27	;# 
   581     001C                     T1GCON          equ	28	;# 
   582     001D                     TMR2            equ	29	;# 
   583     001E                     PR2             equ	30	;# 
   584     001F                     T2CON           equ	31	;# 
   585     008C                     TRISA           equ	140	;# 
   586     008D                     TRISB           equ	141	;# 
   587     008E                     TRISC           equ	142	;# 
   588     0090                     PIE0            equ	144	;# 
   589     0091                     PIE1            equ	145	;# 
   590     0092                     PIE2            equ	146	;# 
   591     0093                     PIE3            equ	147	;# 
   592     0094                     PIE4            equ	148	;# 
   593     0097                     WDTCON          equ	151	;# 
   594     009B                     ADRES           equ	155	;# 
   595     009B                     ADRESL          equ	155	;# 
   596     009C                     ADRESH          equ	156	;# 
   597     009D                     ADCON0          equ	157	;# 
   598     009E                     ADCON1          equ	158	;# 
   599     009F                     ADACT           equ	159	;# 
   600     010C                     LATA            equ	268	;# 
   601     010D                     LATB            equ	269	;# 
   602     010E                     LATC            equ	270	;# 
   603     0111                     CM1CON0         equ	273	;# 
   604     0112                     CM1CON1         equ	274	;# 
   605     0113                     CM2CON0         equ	275	;# 
   606     0114                     CM2CON1         equ	276	;# 
   607     0115                     CMOUT           equ	277	;# 
   608     0116                     BORCON          equ	278	;# 
   609     0117                     FVRCON          equ	279	;# 
   610     0118                     DACCON0         equ	280	;# 
   611     0119                     DACCON1         equ	281	;# 
   612     018C                     ANSELA          equ	396	;# 
   613     018D                     ANSELB          equ	397	;# 
   614     018E                     ANSELC          equ	398	;# 
   615     0197                     VREGCON         equ	407	;# 
   616     0199                     RC1REG          equ	409	;# 
   617     0199                     RCREG           equ	409	;# 
   618     0199                     RCREG1          equ	409	;# 
   619     019A                     TX1REG          equ	410	;# 
   620     019A                     TXREG1          equ	410	;# 
   621     019A                     TXREG           equ	410	;# 
   622     019B                     SP1BRG          equ	411	;# 
   623     019B                     SPBRG           equ	411	;# 
   624     019B                     SP1BRGL         equ	411	;# 
   625     019B                     SPBRG1          equ	411	;# 
   626     019B                     SPBRGL          equ	411	;# 
   627     019C                     SP1BRGH         equ	412	;# 
   628     019C                     SPBRGH          equ	412	;# 
   629     019C                     SPBRGH1         equ	412	;# 
   630     019D                     RC1STA          equ	413	;# 
   631     019D                     RCSTA1          equ	413	;# 
   632     019D                     RCSTA           equ	413	;# 
   633     019E                     TX1STA          equ	414	;# 
   634     019E                     TXSTA1          equ	414	;# 
   635     019E                     TXSTA           equ	414	;# 
   636     019F                     BAUD1CON        equ	415	;# 
   637     019F                     BAUDCON1        equ	415	;# 
   638     019F                     BAUDCTL1        equ	415	;# 
   639     019F                     BAUDCON         equ	415	;# 
   640     019F                     BAUDCTL         equ	415	;# 
   641     020C                     WPUA            equ	524	;# 
   642     020D                     WPUB            equ	525	;# 
   643     020E                     WPUC            equ	526	;# 
   644     0211                     SSP1BUF         equ	529	;# 
   645     0211                     SSPBUF          equ	529	;# 
   646     0212                     SSP1ADD         equ	530	;# 
   647     0212                     SSPADD          equ	530	;# 
   648     0213                     SSP1MSK         equ	531	;# 
   649     0213                     SSPMSK          equ	531	;# 
   650     0214                     SSP1STAT        equ	532	;# 
   651     0214                     SSPSTAT         equ	532	;# 
   652     0215                     SSP1CON1        equ	533	;# 
   653     0215                     SSPCON          equ	533	;# 
   654     0215                     SSPCON1         equ	533	;# 
   655     0215                     SSP1CON         equ	533	;# 
   656     0216                     SSP1CON2        equ	534	;# 
   657     0216                     SSPCON2         equ	534	;# 
   658     0217                     SSP1CON3        equ	535	;# 
   659     0217                     SSPCON3         equ	535	;# 
   660     0219                     SSP2BUF         equ	537	;# 
   661     021A                     SSP2ADD         equ	538	;# 
   662     021B                     SSP2MSK         equ	539	;# 
   663     021C                     SSP2STAT        equ	540	;# 
   664     021D                     SSP2CON1        equ	541	;# 
   665     021D                     SSP2CON         equ	541	;# 
   666     021E                     SSP2CON2        equ	542	;# 
   667     021F                     SSP2CON3        equ	543	;# 
   668     028C                     ODCONA          equ	652	;# 
   669     028D                     ODCONB          equ	653	;# 
   670     028E                     ODCONC          equ	654	;# 
   671     0291                     CCPR1           equ	657	;# 
   672     0291                     CCPR1L          equ	657	;# 
   673     0292                     CCPR1H          equ	658	;# 
   674     0293                     CCP1CON         equ	659	;# 
   675     0294                     CCP1CAP         equ	660	;# 
   676     0295                     CCPR2           equ	661	;# 
   677     0295                     CCPR2L          equ	661	;# 
   678     0296                     CCPR2H          equ	662	;# 
   679     0297                     CCP2CON         equ	663	;# 
   680     0298                     CCP2CAP         equ	664	;# 
   681     029F                     CCPTMRS         equ	671	;# 
   682     030C                     SLRCONA         equ	780	;# 
   683     030D                     SLRCONB         equ	781	;# 
   684     030E                     SLRCONC         equ	782	;# 
   685     0311                     CCPR3           equ	785	;# 
   686     0311                     CCPR3L          equ	785	;# 
   687     0312                     CCPR3H          equ	786	;# 
   688     0313                     CCP3CON         equ	787	;# 
   689     0314                     CCP3CAP         equ	788	;# 
   690     0315                     CCPR4           equ	789	;# 
   691     0315                     CCPR4L          equ	789	;# 
   692     0316                     CCPR4H          equ	790	;# 
   693     0317                     CCP4CON         equ	791	;# 
   694     0318                     CCP4CAP         equ	792	;# 
   695     038C                     INLVLA          equ	908	;# 
   696     038D                     INLVLB          equ	909	;# 
   697     038E                     INLVLC          equ	910	;# 
   698     0391                     IOCAP           equ	913	;# 
   699     0392                     IOCAN           equ	914	;# 
   700     0393                     IOCAF           equ	915	;# 
   701     0394                     IOCBP           equ	916	;# 
   702     0395                     IOCBN           equ	917	;# 
   703     0396                     IOCBF           equ	918	;# 
   704     0397                     IOCCP           equ	919	;# 
   705     0398                     IOCCN           equ	920	;# 
   706     0399                     IOCCF           equ	921	;# 
   707     039A                     CLKRCON         equ	922	;# 
   708     039C                     MDCON           equ	924	;# 
   709     039D                     MDSRC           equ	925	;# 
   710     039E                     MDCARH          equ	926	;# 
   711     039F                     MDCARL          equ	927	;# 
   712     0411                     TMR3            equ	1041	;# 
   713     0411                     TMR3L           equ	1041	;# 
   714     0412                     TMR3H           equ	1042	;# 
   715     0413                     T3CON           equ	1043	;# 
   716     0414                     T3GCON          equ	1044	;# 
   717     0415                     TMR4            equ	1045	;# 
   718     0416                     PR4             equ	1046	;# 
   719     0417                     T4CON           equ	1047	;# 
   720     0418                     TMR5            equ	1048	;# 
   721     0418                     TMR5L           equ	1048	;# 
   722     0419                     TMR5H           equ	1049	;# 
   723     041A                     T5CON           equ	1050	;# 
   724     041B                     T5GCON          equ	1051	;# 
   725     041C                     TMR6            equ	1052	;# 
   726     041D                     PR6             equ	1053	;# 
   727     041E                     T6CON           equ	1054	;# 
   728     041F                     CCDCON          equ	1055	;# 
   729     0498                     NCO1ACC         equ	1176	;# 
   730     0498                     NCO1ACCL        equ	1176	;# 
   731     0499                     NCO1ACCH        equ	1177	;# 
   732     049A                     NCO1ACCU        equ	1178	;# 
   733     049B                     NCO1INC         equ	1179	;# 
   734     049B                     NCO1INCL        equ	1179	;# 
   735     049C                     NCO1INCH        equ	1180	;# 
   736     049D                     NCO1INCU        equ	1181	;# 
   737     049E                     NCO1CON         equ	1182	;# 
   738     049F                     NCO1CLK         equ	1183	;# 
   739     0617                     PWM5DCL         equ	1559	;# 
   740     0618                     PWM5DCH         equ	1560	;# 
   741     0619                     PWM5CON         equ	1561	;# 
   742     0619                     PWM5CON0        equ	1561	;# 
   743     061A                     PWM6DCL         equ	1562	;# 
   744     061B                     PWM6DCH         equ	1563	;# 
   745     061C                     PWM6CON         equ	1564	;# 
   746     061C                     PWM6CON0        equ	1564	;# 
   747     061F                     PWMTMRS         equ	1567	;# 
   748     0691                     CWG1CLKCON      equ	1681	;# 
   749     0692                     CWG1DAT         equ	1682	;# 
   750     0693                     CWG1DBR         equ	1683	;# 
   751     0694                     CWG1DBF         equ	1684	;# 
   752     0695                     CWG1CON0        equ	1685	;# 
   753     0696                     CWG1CON1        equ	1686	;# 
   754     0697                     CWG1AS0         equ	1687	;# 
   755     0698                     CWG1AS1         equ	1688	;# 
   756     0699                     CWG1STR         equ	1689	;# 
   757     0711                     CWG2CLKCON      equ	1809	;# 
   758     0712                     CWG2DAT         equ	1810	;# 
   759     0713                     CWG2DBR         equ	1811	;# 
   760     0714                     CWG2DBF         equ	1812	;# 
   761     0715                     CWG2CON0        equ	1813	;# 
   762     0716                     CWG2CON1        equ	1814	;# 
   763     0717                     CWG2AS0         equ	1815	;# 
   764     0718                     CWG2AS1         equ	1816	;# 
   765     0719                     CWG2STR         equ	1817	;# 
   766     0891                     NVMADR          equ	2193	;# 
   767     0891                     EEADR           equ	2193	;# 
   768     0891                     PMADR           equ	2193	;# 
   769     0891                     NVMADRL         equ	2193	;# 
   770     0891                     EEADRL          equ	2193	;# 
   771     0891                     PMADRL          equ	2193	;# 
   772     0892                     NVMADRH         equ	2194	;# 
   773     0892                     EEADRH          equ	2194	;# 
   774     0892                     PMADRH          equ	2194	;# 
   775     0893                     NVMDAT          equ	2195	;# 
   776     0893                     EEDAT           equ	2195	;# 
   777     0893                     PMDAT           equ	2195	;# 
   778     0893                     NVMDATL         equ	2195	;# 
   779     0893                     EEDATL          equ	2195	;# 
   780     0893                     PMDATL          equ	2195	;# 
   781     0894                     NVMDATH         equ	2196	;# 
   782     0894                     EEDATH          equ	2196	;# 
   783     0894                     PMDATH          equ	2196	;# 
   784     0895                     NVMCON1         equ	2197	;# 
   785     0895                     EECON1          equ	2197	;# 
   786     0895                     PMCON1          equ	2197	;# 
   787     0896                     NVMCON2         equ	2198	;# 
   788     0896                     EECON2          equ	2198	;# 
   789     0896                     PMCON2          equ	2198	;# 
   790     089B                     PCON0           equ	2203	;# 
   791     0911                     PMD0            equ	2321	;# 
   792     0912                     PMD1            equ	2322	;# 
   793     0913                     PMD2            equ	2323	;# 
   794     0914                     PMD3            equ	2324	;# 
   795     0915                     PMD4            equ	2325	;# 
   796     0916                     PMD5            equ	2326	;# 
   797     0918                     CPUDOZE         equ	2328	;# 
   798     0919                     OSCCON1         equ	2329	;# 
   799     091A                     OSCCON2         equ	2330	;# 
   800     091B                     OSCCON3         equ	2331	;# 
   801     091C                     OSCSTAT1        equ	2332	;# 
   802     091D                     OSCEN           equ	2333	;# 
   803     091E                     OSCTUNE         equ	2334	;# 
   804     091F                     OSCFRQ          equ	2335	;# 
   805     0E0F                     PPSLOCK         equ	3599	;# 
   806     0E10                     INTPPS          equ	3600	;# 
   807     0E11                     T0CKIPPS        equ	3601	;# 
   808     0E12                     T1CKIPPS        equ	3602	;# 
   809     0E13                     T1GPPS          equ	3603	;# 
   810     0E14                     CCP1PPS         equ	3604	;# 
   811     0E15                     CCP2PPS         equ	3605	;# 
   812     0E16                     CCP3PPS         equ	3606	;# 
   813     0E17                     CCP4PPS         equ	3607	;# 
   814     0E18                     CWG1PPS         equ	3608	;# 
   815     0E19                     CWG2PPS         equ	3609	;# 
   816     0E1A                     MDCIN1PPS       equ	3610	;# 
   817     0E1B                     MDCIN2PPS       equ	3611	;# 
   818     0E1C                     MDMINPPS        equ	3612	;# 
   819     0E1D                     SSP2CLKPPS      equ	3613	;# 
   820     0E1E                     SSP2DATPPS      equ	3614	;# 
   821     0E1F                     SSP2SSPPS       equ	3615	;# 
   822     0E20                     SSP1CLKPPS      equ	3616	;# 
   823     0E21                     SSP1DATPPS      equ	3617	;# 
   824     0E22                     SSP1SSPPS       equ	3618	;# 
   825     0E24                     RXPPS           equ	3620	;# 
   826     0E25                     TXPPS           equ	3621	;# 
   827     0E28                     CLCIN0PPS       equ	3624	;# 
   828     0E29                     CLCIN1PPS       equ	3625	;# 
   829     0E2A                     CLCIN2PPS       equ	3626	;# 
   830     0E2B                     CLCIN3PPS       equ	3627	;# 
   831     0E2C                     T3CKIPPS        equ	3628	;# 
   832     0E2D                     T3GPPS          equ	3629	;# 
   833     0E2E                     T5CKIPPS        equ	3630	;# 
   834     0E2F                     T5GPPS          equ	3631	;# 
   835     0E90                     RA0PPS          equ	3728	;# 
   836     0E91                     RA1PPS          equ	3729	;# 
   837     0E92                     RA2PPS          equ	3730	;# 
   838     0E94                     RA4PPS          equ	3732	;# 
   839     0E95                     RA5PPS          equ	3733	;# 
   840     0E9C                     RB4PPS          equ	3740	;# 
   841     0E9D                     RB5PPS          equ	3741	;# 
   842     0E9E                     RB6PPS          equ	3742	;# 
   843     0E9F                     RB7PPS          equ	3743	;# 
   844     0EA0                     RC0PPS          equ	3744	;# 
   845     0EA1                     RC1PPS          equ	3745	;# 
   846     0EA2                     RC2PPS          equ	3746	;# 
   847     0EA3                     RC3PPS          equ	3747	;# 
   848     0EA4                     RC4PPS          equ	3748	;# 
   849     0EA5                     RC5PPS          equ	3749	;# 
   850     0EA6                     RC6PPS          equ	3750	;# 
   851     0EA7                     RC7PPS          equ	3751	;# 
   852     0F0F                     CLCDATA         equ	3855	;# 
   853     0F10                     CLC1CON         equ	3856	;# 
   854     0F11                     CLC1POL         equ	3857	;# 
   855     0F12                     CLC1SEL0        equ	3858	;# 
   856     0F13                     CLC1SEL1        equ	3859	;# 
   857     0F14                     CLC1SEL2        equ	3860	;# 
   858     0F15                     CLC1SEL3        equ	3861	;# 
   859     0F16                     CLC1GLS0        equ	3862	;# 
   860     0F17                     CLC1GLS1        equ	3863	;# 
   861     0F18                     CLC1GLS2        equ	3864	;# 
   862     0F19                     CLC1GLS3        equ	3865	;# 
   863     0F1A                     CLC2CON         equ	3866	;# 
   864     0F1B                     CLC2POL         equ	3867	;# 
   865     0F1C                     CLC2SEL0        equ	3868	;# 
   866     0F1D                     CLC2SEL1        equ	3869	;# 
   867     0F1E                     CLC2SEL2        equ	3870	;# 
   868     0F1F                     CLC2SEL3        equ	3871	;# 
   869     0F20                     CLC2GLS0        equ	3872	;# 
   870     0F21                     CLC2GLS1        equ	3873	;# 
   871     0F22                     CLC2GLS2        equ	3874	;# 
   872     0F23                     CLC2GLS3        equ	3875	;# 
   873     0F24                     CLC3CON         equ	3876	;# 
   874     0F25                     CLC3POL         equ	3877	;# 
   875     0F26                     CLC3SEL0        equ	3878	;# 
   876     0F27                     CLC3SEL1        equ	3879	;# 
   877     0F28                     CLC3SEL2        equ	3880	;# 
   878     0F29                     CLC3SEL3        equ	3881	;# 
   879     0F2A                     CLC3GLS0        equ	3882	;# 
   880     0F2B                     CLC3GLS1        equ	3883	;# 
   881     0F2C                     CLC3GLS2        equ	3884	;# 
   882     0F2D                     CLC3GLS3        equ	3885	;# 
   883     0F2E                     CLC4CON         equ	3886	;# 
   884     0F2F                     CLC4POL         equ	3887	;# 
   885     0F30                     CLC4SEL0        equ	3888	;# 
   886     0F31                     CLC4SEL1        equ	3889	;# 
   887     0F32                     CLC4SEL2        equ	3890	;# 
   888     0F33                     CLC4SEL3        equ	3891	;# 
   889     0F34                     CLC4GLS0        equ	3892	;# 
   890     0F35                     CLC4GLS1        equ	3893	;# 
   891     0F36                     CLC4GLS2        equ	3894	;# 
   892     0F37                     CLC4GLS3        equ	3895	;# 
   893     0FE4                     STATUS_SHAD     equ	4068	;# 
   894     0FE5                     WREG_SHAD       equ	4069	;# 
   895     0FE6                     BSR_SHAD        equ	4070	;# 
   896     0FE7                     PCLATH_SHAD     equ	4071	;# 
   897     0FE8                     FSR0L_SHAD      equ	4072	;# 
   898     0FE9                     FSR0H_SHAD      equ	4073	;# 
   899     0FEA                     FSR1L_SHAD      equ	4074	;# 
   900     0FEB                     FSR1H_SHAD      equ	4075	;# 
   901     0FED                     STKPTR          equ	4077	;# 
   902     0FEE                     TOSL            equ	4078	;# 
   903     0FEF                     TOSH            equ	4079	;# 
   904     0000                     INDF0           equ	0	;# 
   905     0001                     INDF1           equ	1	;# 
   906     0002                     PCL             equ	2	;# 
   907     0003                     STATUS          equ	3	;# 
   908     0004                     FSR0L           equ	4	;# 
   909     0005                     FSR0H           equ	5	;# 
   910     0006                     FSR1L           equ	6	;# 
   911     0007                     FSR1H           equ	7	;# 
   912     0008                     BSR             equ	8	;# 
   913     0009                     WREG            equ	9	;# 
   914     000A                     PCLATH          equ	10	;# 
   915     000B                     INTCON          equ	11	;# 
   916     000C                     PORTA           equ	12	;# 
   917     000D                     PORTB           equ	13	;# 
   918     000E                     PORTC           equ	14	;# 
   919     0010                     PIR0            equ	16	;# 
   920     0011                     PIR1            equ	17	;# 
   921     0012                     PIR2            equ	18	;# 
   922     0013                     PIR3            equ	19	;# 
   923     0014                     PIR4            equ	20	;# 
   924     0015                     TMR0L           equ	21	;# 
   925     0015                     TMR0            equ	21	;# 
   926     0016                     TMR0H           equ	22	;# 
   927     0016                     PR0             equ	22	;# 
   928     0017                     T0CON0          equ	23	;# 
   929     0018                     T0CON1          equ	24	;# 
   930     0019                     TMR1            equ	25	;# 
   931     0019                     TMR1L           equ	25	;# 
   932     001A                     TMR1H           equ	26	;# 
   933     001B                     T1CON           equ	27	;# 
   934     001C                     T1GCON          equ	28	;# 
   935     001D                     TMR2            equ	29	;# 
   936     001E                     PR2             equ	30	;# 
   937     001F                     T2CON           equ	31	;# 
   938     008C                     TRISA           equ	140	;# 
   939     008D                     TRISB           equ	141	;# 
   940     008E                     TRISC           equ	142	;# 
   941     0090                     PIE0            equ	144	;# 
   942     0091                     PIE1            equ	145	;# 
   943     0092                     PIE2            equ	146	;# 
   944     0093                     PIE3            equ	147	;# 
   945     0094                     PIE4            equ	148	;# 
   946     0097                     WDTCON          equ	151	;# 
   947     009B                     ADRES           equ	155	;# 
   948     009B                     ADRESL          equ	155	;# 
   949     009C                     ADRESH          equ	156	;# 
   950     009D                     ADCON0          equ	157	;# 
   951     009E                     ADCON1          equ	158	;# 
   952     009F                     ADACT           equ	159	;# 
   953     010C                     LATA            equ	268	;# 
   954     010D                     LATB            equ	269	;# 
   955     010E                     LATC            equ	270	;# 
   956     0111                     CM1CON0         equ	273	;# 
   957     0112                     CM1CON1         equ	274	;# 
   958     0113                     CM2CON0         equ	275	;# 
   959     0114                     CM2CON1         equ	276	;# 
   960     0115                     CMOUT           equ	277	;# 
   961     0116                     BORCON          equ	278	;# 
   962     0117                     FVRCON          equ	279	;# 
   963     0118                     DACCON0         equ	280	;# 
   964     0119                     DACCON1         equ	281	;# 
   965     018C                     ANSELA          equ	396	;# 
   966     018D                     ANSELB          equ	397	;# 
   967     018E                     ANSELC          equ	398	;# 
   968     0197                     VREGCON         equ	407	;# 
   969     0199                     RC1REG          equ	409	;# 
   970     0199                     RCREG           equ	409	;# 
   971     0199                     RCREG1          equ	409	;# 
   972     019A                     TX1REG          equ	410	;# 
   973     019A                     TXREG1          equ	410	;# 
   974     019A                     TXREG           equ	410	;# 
   975     019B                     SP1BRG          equ	411	;# 
   976     019B                     SPBRG           equ	411	;# 
   977     019B                     SP1BRGL         equ	411	;# 
   978     019B                     SPBRG1          equ	411	;# 
   979     019B                     SPBRGL          equ	411	;# 
   980     019C                     SP1BRGH         equ	412	;# 
   981     019C                     SPBRGH          equ	412	;# 
   982     019C                     SPBRGH1         equ	412	;# 
   983     019D                     RC1STA          equ	413	;# 
   984     019D                     RCSTA1          equ	413	;# 
   985     019D                     RCSTA           equ	413	;# 
   986     019E                     TX1STA          equ	414	;# 
   987     019E                     TXSTA1          equ	414	;# 
   988     019E                     TXSTA           equ	414	;# 
   989     019F                     BAUD1CON        equ	415	;# 
   990     019F                     BAUDCON1        equ	415	;# 
   991     019F                     BAUDCTL1        equ	415	;# 
   992     019F                     BAUDCON         equ	415	;# 
   993     019F                     BAUDCTL         equ	415	;# 
   994     020C                     WPUA            equ	524	;# 
   995     020D                     WPUB            equ	525	;# 
   996     020E                     WPUC            equ	526	;# 
   997     0211                     SSP1BUF         equ	529	;# 
   998     0211                     SSPBUF          equ	529	;# 
   999     0212                     SSP1ADD         equ	530	;# 
  1000     0212                     SSPADD          equ	530	;# 
  1001     0213                     SSP1MSK         equ	531	;# 
  1002     0213                     SSPMSK          equ	531	;# 
  1003     0214                     SSP1STAT        equ	532	;# 
  1004     0214                     SSPSTAT         equ	532	;# 
  1005     0215                     SSP1CON1        equ	533	;# 
  1006     0215                     SSPCON          equ	533	;# 
  1007     0215                     SSPCON1         equ	533	;# 
  1008     0215                     SSP1CON         equ	533	;# 
  1009     0216                     SSP1CON2        equ	534	;# 
  1010     0216                     SSPCON2         equ	534	;# 
  1011     0217                     SSP1CON3        equ	535	;# 
  1012     0217                     SSPCON3         equ	535	;# 
  1013     0219                     SSP2BUF         equ	537	;# 
  1014     021A                     SSP2ADD         equ	538	;# 
  1015     021B                     SSP2MSK         equ	539	;# 
  1016     021C                     SSP2STAT        equ	540	;# 
  1017     021D                     SSP2CON1        equ	541	;# 
  1018     021D                     SSP2CON         equ	541	;# 
  1019     021E                     SSP2CON2        equ	542	;# 
  1020     021F                     SSP2CON3        equ	543	;# 
  1021     028C                     ODCONA          equ	652	;# 
  1022     028D                     ODCONB          equ	653	;# 
  1023     028E                     ODCONC          equ	654	;# 
  1024     0291                     CCPR1           equ	657	;# 
  1025     0291                     CCPR1L          equ	657	;# 
  1026     0292                     CCPR1H          equ	658	;# 
  1027     0293                     CCP1CON         equ	659	;# 
  1028     0294                     CCP1CAP         equ	660	;# 
  1029     0295                     CCPR2           equ	661	;# 
  1030     0295                     CCPR2L          equ	661	;# 
  1031     0296                     CCPR2H          equ	662	;# 
  1032     0297                     CCP2CON         equ	663	;# 
  1033     0298                     CCP2CAP         equ	664	;# 
  1034     029F                     CCPTMRS         equ	671	;# 
  1035     030C                     SLRCONA         equ	780	;# 
  1036     030D                     SLRCONB         equ	781	;# 
  1037     030E                     SLRCONC         equ	782	;# 
  1038     0311                     CCPR3           equ	785	;# 
  1039     0311                     CCPR3L          equ	785	;# 
  1040     0312                     CCPR3H          equ	786	;# 
  1041     0313                     CCP3CON         equ	787	;# 
  1042     0314                     CCP3CAP         equ	788	;# 
  1043     0315                     CCPR4           equ	789	;# 
  1044     0315                     CCPR4L          equ	789	;# 
  1045     0316                     CCPR4H          equ	790	;# 
  1046     0317                     CCP4CON         equ	791	;# 
  1047     0318                     CCP4CAP         equ	792	;# 
  1048     038C                     INLVLA          equ	908	;# 
  1049     038D                     INLVLB          equ	909	;# 
  1050     038E                     INLVLC          equ	910	;# 
  1051     0391                     IOCAP           equ	913	;# 
  1052     0392                     IOCAN           equ	914	;# 
  1053     0393                     IOCAF           equ	915	;# 
  1054     0394                     IOCBP           equ	916	;# 
  1055     0395                     IOCBN           equ	917	;# 
  1056     0396                     IOCBF           equ	918	;# 
  1057     0397                     IOCCP           equ	919	;# 
  1058     0398                     IOCCN           equ	920	;# 
  1059     0399                     IOCCF           equ	921	;# 
  1060     039A                     CLKRCON         equ	922	;# 
  1061     039C                     MDCON           equ	924	;# 
  1062     039D                     MDSRC           equ	925	;# 
  1063     039E                     MDCARH          equ	926	;# 
  1064     039F                     MDCARL          equ	927	;# 
  1065     0411                     TMR3            equ	1041	;# 
  1066     0411                     TMR3L           equ	1041	;# 
  1067     0412                     TMR3H           equ	1042	;# 
  1068     0413                     T3CON           equ	1043	;# 
  1069     0414                     T3GCON          equ	1044	;# 
  1070     0415                     TMR4            equ	1045	;# 
  1071     0416                     PR4             equ	1046	;# 
  1072     0417                     T4CON           equ	1047	;# 
  1073     0418                     TMR5            equ	1048	;# 
  1074     0418                     TMR5L           equ	1048	;# 
  1075     0419                     TMR5H           equ	1049	;# 
  1076     041A                     T5CON           equ	1050	;# 
  1077     041B                     T5GCON          equ	1051	;# 
  1078     041C                     TMR6            equ	1052	;# 
  1079     041D                     PR6             equ	1053	;# 
  1080     041E                     T6CON           equ	1054	;# 
  1081     041F                     CCDCON          equ	1055	;# 
  1082     0498                     NCO1ACC         equ	1176	;# 
  1083     0498                     NCO1ACCL        equ	1176	;# 
  1084     0499                     NCO1ACCH        equ	1177	;# 
  1085     049A                     NCO1ACCU        equ	1178	;# 
  1086     049B                     NCO1INC         equ	1179	;# 
  1087     049B                     NCO1INCL        equ	1179	;# 
  1088     049C                     NCO1INCH        equ	1180	;# 
  1089     049D                     NCO1INCU        equ	1181	;# 
  1090     049E                     NCO1CON         equ	1182	;# 
  1091     049F                     NCO1CLK         equ	1183	;# 
  1092     0617                     PWM5DCL         equ	1559	;# 
  1093     0618                     PWM5DCH         equ	1560	;# 
  1094     0619                     PWM5CON         equ	1561	;# 
  1095     0619                     PWM5CON0        equ	1561	;# 
  1096     061A                     PWM6DCL         equ	1562	;# 
  1097     061B                     PWM6DCH         equ	1563	;# 
  1098     061C                     PWM6CON         equ	1564	;# 
  1099     061C                     PWM6CON0        equ	1564	;# 
  1100     061F                     PWMTMRS         equ	1567	;# 
  1101     0691                     CWG1CLKCON      equ	1681	;# 
  1102     0692                     CWG1DAT         equ	1682	;# 
  1103     0693                     CWG1DBR         equ	1683	;# 
  1104     0694                     CWG1DBF         equ	1684	;# 
  1105     0695                     CWG1CON0        equ	1685	;# 
  1106     0696                     CWG1CON1        equ	1686	;# 
  1107     0697                     CWG1AS0         equ	1687	;# 
  1108     0698                     CWG1AS1         equ	1688	;# 
  1109     0699                     CWG1STR         equ	1689	;# 
  1110     0711                     CWG2CLKCON      equ	1809	;# 
  1111     0712                     CWG2DAT         equ	1810	;# 
  1112     0713                     CWG2DBR         equ	1811	;# 
  1113     0714                     CWG2DBF         equ	1812	;# 
  1114     0715                     CWG2CON0        equ	1813	;# 
  1115     0716                     CWG2CON1        equ	1814	;# 
  1116     0717                     CWG2AS0         equ	1815	;# 
  1117     0718                     CWG2AS1         equ	1816	;# 
  1118     0719                     CWG2STR         equ	1817	;# 
  1119     0891                     NVMADR          equ	2193	;# 
  1120     0891                     EEADR           equ	2193	;# 
  1121     0891                     PMADR           equ	2193	;# 
  1122     0891                     NVMADRL         equ	2193	;# 
  1123     0891                     EEADRL          equ	2193	;# 
  1124     0891                     PMADRL          equ	2193	;# 
  1125     0892                     NVMADRH         equ	2194	;# 
  1126     0892                     EEADRH          equ	2194	;# 
  1127     0892                     PMADRH          equ	2194	;# 
  1128     0893                     NVMDAT          equ	2195	;# 
  1129     0893                     EEDAT           equ	2195	;# 
  1130     0893                     PMDAT           equ	2195	;# 
  1131     0893                     NVMDATL         equ	2195	;# 
  1132     0893                     EEDATL          equ	2195	;# 
  1133     0893                     PMDATL          equ	2195	;# 
  1134     0894                     NVMDATH         equ	2196	;# 
  1135     0894                     EEDATH          equ	2196	;# 
  1136     0894                     PMDATH          equ	2196	;# 
  1137     0895                     NVMCON1         equ	2197	;# 
  1138     0895                     EECON1          equ	2197	;# 
  1139     0895                     PMCON1          equ	2197	;# 
  1140     0896                     NVMCON2         equ	2198	;# 
  1141     0896                     EECON2          equ	2198	;# 
  1142     0896                     PMCON2          equ	2198	;# 
  1143     089B                     PCON0           equ	2203	;# 
  1144     0911                     PMD0            equ	2321	;# 
  1145     0912                     PMD1            equ	2322	;# 
  1146     0913                     PMD2            equ	2323	;# 
  1147     0914                     PMD3            equ	2324	;# 
  1148     0915                     PMD4            equ	2325	;# 
  1149     0916                     PMD5            equ	2326	;# 
  1150     0918                     CPUDOZE         equ	2328	;# 
  1151     0919                     OSCCON1         equ	2329	;# 
  1152     091A                     OSCCON2         equ	2330	;# 
  1153     091B                     OSCCON3         equ	2331	;# 
  1154     091C                     OSCSTAT1        equ	2332	;# 
  1155     091D                     OSCEN           equ	2333	;# 
  1156     091E                     OSCTUNE         equ	2334	;# 
  1157     091F                     OSCFRQ          equ	2335	;# 
  1158     0E0F                     PPSLOCK         equ	3599	;# 
  1159     0E10                     INTPPS          equ	3600	;# 
  1160     0E11                     T0CKIPPS        equ	3601	;# 
  1161     0E12                     T1CKIPPS        equ	3602	;# 
  1162     0E13                     T1GPPS          equ	3603	;# 
  1163     0E14                     CCP1PPS         equ	3604	;# 
  1164     0E15                     CCP2PPS         equ	3605	;# 
  1165     0E16                     CCP3PPS         equ	3606	;# 
  1166     0E17                     CCP4PPS         equ	3607	;# 
  1167     0E18                     CWG1PPS         equ	3608	;# 
  1168     0E19                     CWG2PPS         equ	3609	;# 
  1169     0E1A                     MDCIN1PPS       equ	3610	;# 
  1170     0E1B                     MDCIN2PPS       equ	3611	;# 
  1171     0E1C                     MDMINPPS        equ	3612	;# 
  1172     0E1D                     SSP2CLKPPS      equ	3613	;# 
  1173     0E1E                     SSP2DATPPS      equ	3614	;# 
  1174     0E1F                     SSP2SSPPS       equ	3615	;# 
  1175     0E20                     SSP1CLKPPS      equ	3616	;# 
  1176     0E21                     SSP1DATPPS      equ	3617	;# 
  1177     0E22                     SSP1SSPPS       equ	3618	;# 
  1178     0E24                     RXPPS           equ	3620	;# 
  1179     0E25                     TXPPS           equ	3621	;# 
  1180     0E28                     CLCIN0PPS       equ	3624	;# 
  1181     0E29                     CLCIN1PPS       equ	3625	;# 
  1182     0E2A                     CLCIN2PPS       equ	3626	;# 
  1183     0E2B                     CLCIN3PPS       equ	3627	;# 
  1184     0E2C                     T3CKIPPS        equ	3628	;# 
  1185     0E2D                     T3GPPS          equ	3629	;# 
  1186     0E2E                     T5CKIPPS        equ	3630	;# 
  1187     0E2F                     T5GPPS          equ	3631	;# 
  1188     0E90                     RA0PPS          equ	3728	;# 
  1189     0E91                     RA1PPS          equ	3729	;# 
  1190     0E92                     RA2PPS          equ	3730	;# 
  1191     0E94                     RA4PPS          equ	3732	;# 
  1192     0E95                     RA5PPS          equ	3733	;# 
  1193     0E9C                     RB4PPS          equ	3740	;# 
  1194     0E9D                     RB5PPS          equ	3741	;# 
  1195     0E9E                     RB6PPS          equ	3742	;# 
  1196     0E9F                     RB7PPS          equ	3743	;# 
  1197     0EA0                     RC0PPS          equ	3744	;# 
  1198     0EA1                     RC1PPS          equ	3745	;# 
  1199     0EA2                     RC2PPS          equ	3746	;# 
  1200     0EA3                     RC3PPS          equ	3747	;# 
  1201     0EA4                     RC4PPS          equ	3748	;# 
  1202     0EA5                     RC5PPS          equ	3749	;# 
  1203     0EA6                     RC6PPS          equ	3750	;# 
  1204     0EA7                     RC7PPS          equ	3751	;# 
  1205     0F0F                     CLCDATA         equ	3855	;# 
  1206     0F10                     CLC1CON         equ	3856	;# 
  1207     0F11                     CLC1POL         equ	3857	;# 
  1208     0F12                     CLC1SEL0        equ	3858	;# 
  1209     0F13                     CLC1SEL1        equ	3859	;# 
  1210     0F14                     CLC1SEL2        equ	3860	;# 
  1211     0F15                     CLC1SEL3        equ	3861	;# 
  1212     0F16                     CLC1GLS0        equ	3862	;# 
  1213     0F17                     CLC1GLS1        equ	3863	;# 
  1214     0F18                     CLC1GLS2        equ	3864	;# 
  1215     0F19                     CLC1GLS3        equ	3865	;# 
  1216     0F1A                     CLC2CON         equ	3866	;# 
  1217     0F1B                     CLC2POL         equ	3867	;# 
  1218     0F1C                     CLC2SEL0        equ	3868	;# 
  1219     0F1D                     CLC2SEL1        equ	3869	;# 
  1220     0F1E                     CLC2SEL2        equ	3870	;# 
  1221     0F1F                     CLC2SEL3        equ	3871	;# 
  1222     0F20                     CLC2GLS0        equ	3872	;# 
  1223     0F21                     CLC2GLS1        equ	3873	;# 
  1224     0F22                     CLC2GLS2        equ	3874	;# 
  1225     0F23                     CLC2GLS3        equ	3875	;# 
  1226     0F24                     CLC3CON         equ	3876	;# 
  1227     0F25                     CLC3POL         equ	3877	;# 
  1228     0F26                     CLC3SEL0        equ	3878	;# 
  1229     0F27                     CLC3SEL1        equ	3879	;# 
  1230     0F28                     CLC3SEL2        equ	3880	;# 
  1231     0F29                     CLC3SEL3        equ	3881	;# 
  1232     0F2A                     CLC3GLS0        equ	3882	;# 
  1233     0F2B                     CLC3GLS1        equ	3883	;# 
  1234     0F2C                     CLC3GLS2        equ	3884	;# 
  1235     0F2D                     CLC3GLS3        equ	3885	;# 
  1236     0F2E                     CLC4CON         equ	3886	;# 
  1237     0F2F                     CLC4POL         equ	3887	;# 
  1238     0F30                     CLC4SEL0        equ	3888	;# 
  1239     0F31                     CLC4SEL1        equ	3889	;# 
  1240     0F32                     CLC4SEL2        equ	3890	;# 
  1241     0F33                     CLC4SEL3        equ	3891	;# 
  1242     0F34                     CLC4GLS0        equ	3892	;# 
  1243     0F35                     CLC4GLS1        equ	3893	;# 
  1244     0F36                     CLC4GLS2        equ	3894	;# 
  1245     0F37                     CLC4GLS3        equ	3895	;# 
  1246     0FE4                     STATUS_SHAD     equ	4068	;# 
  1247     0FE5                     WREG_SHAD       equ	4069	;# 
  1248     0FE6                     BSR_SHAD        equ	4070	;# 
  1249     0FE7                     PCLATH_SHAD     equ	4071	;# 
  1250     0FE8                     FSR0L_SHAD      equ	4072	;# 
  1251     0FE9                     FSR0H_SHAD      equ	4073	;# 
  1252     0FEA                     FSR1L_SHAD      equ	4074	;# 
  1253     0FEB                     FSR1H_SHAD      equ	4075	;# 
  1254     0FED                     STKPTR          equ	4077	;# 
  1255     0FEE                     TOSL            equ	4078	;# 
  1256     0FEF                     TOSH            equ	4079	;# 
  1257     0000                     INDF0           equ	0	;# 
  1258     0001                     INDF1           equ	1	;# 
  1259     0002                     PCL             equ	2	;# 
  1260     0003                     STATUS          equ	3	;# 
  1261     0004                     FSR0L           equ	4	;# 
  1262     0005                     FSR0H           equ	5	;# 
  1263     0006                     FSR1L           equ	6	;# 
  1264     0007                     FSR1H           equ	7	;# 
  1265     0008                     BSR             equ	8	;# 
  1266     0009                     WREG            equ	9	;# 
  1267     000A                     PCLATH          equ	10	;# 
  1268     000B                     INTCON          equ	11	;# 
  1269     000C                     PORTA           equ	12	;# 
  1270     000D                     PORTB           equ	13	;# 
  1271     000E                     PORTC           equ	14	;# 
  1272     0010                     PIR0            equ	16	;# 
  1273     0011                     PIR1            equ	17	;# 
  1274     0012                     PIR2            equ	18	;# 
  1275     0013                     PIR3            equ	19	;# 
  1276     0014                     PIR4            equ	20	;# 
  1277     0015                     TMR0L           equ	21	;# 
  1278     0015                     TMR0            equ	21	;# 
  1279     0016                     TMR0H           equ	22	;# 
  1280     0016                     PR0             equ	22	;# 
  1281     0017                     T0CON0          equ	23	;# 
  1282     0018                     T0CON1          equ	24	;# 
  1283     0019                     TMR1            equ	25	;# 
  1284     0019                     TMR1L           equ	25	;# 
  1285     001A                     TMR1H           equ	26	;# 
  1286     001B                     T1CON           equ	27	;# 
  1287     001C                     T1GCON          equ	28	;# 
  1288     001D                     TMR2            equ	29	;# 
  1289     001E                     PR2             equ	30	;# 
  1290     001F                     T2CON           equ	31	;# 
  1291     008C                     TRISA           equ	140	;# 
  1292     008D                     TRISB           equ	141	;# 
  1293     008E                     TRISC           equ	142	;# 
  1294     0090                     PIE0            equ	144	;# 
  1295     0091                     PIE1            equ	145	;# 
  1296     0092                     PIE2            equ	146	;# 
  1297     0093                     PIE3            equ	147	;# 
  1298     0094                     PIE4            equ	148	;# 
  1299     0097                     WDTCON          equ	151	;# 
  1300     009B                     ADRES           equ	155	;# 
  1301     009B                     ADRESL          equ	155	;# 
  1302     009C                     ADRESH          equ	156	;# 
  1303     009D                     ADCON0          equ	157	;# 
  1304     009E                     ADCON1          equ	158	;# 
  1305     009F                     ADACT           equ	159	;# 
  1306     010C                     LATA            equ	268	;# 
  1307     010D                     LATB            equ	269	;# 
  1308     010E                     LATC            equ	270	;# 
  1309     0111                     CM1CON0         equ	273	;# 
  1310     0112                     CM1CON1         equ	274	;# 
  1311     0113                     CM2CON0         equ	275	;# 
  1312     0114                     CM2CON1         equ	276	;# 
  1313     0115                     CMOUT           equ	277	;# 
  1314     0116                     BORCON          equ	278	;# 
  1315     0117                     FVRCON          equ	279	;# 
  1316     0118                     DACCON0         equ	280	;# 
  1317     0119                     DACCON1         equ	281	;# 
  1318     018C                     ANSELA          equ	396	;# 
  1319     018D                     ANSELB          equ	397	;# 
  1320     018E                     ANSELC          equ	398	;# 
  1321     0197                     VREGCON         equ	407	;# 
  1322     0199                     RC1REG          equ	409	;# 
  1323     0199                     RCREG           equ	409	;# 
  1324     0199                     RCREG1          equ	409	;# 
  1325     019A                     TX1REG          equ	410	;# 
  1326     019A                     TXREG1          equ	410	;# 
  1327     019A                     TXREG           equ	410	;# 
  1328     019B                     SP1BRG          equ	411	;# 
  1329     019B                     SPBRG           equ	411	;# 
  1330     019B                     SP1BRGL         equ	411	;# 
  1331     019B                     SPBRG1          equ	411	;# 
  1332     019B                     SPBRGL          equ	411	;# 
  1333     019C                     SP1BRGH         equ	412	;# 
  1334     019C                     SPBRGH          equ	412	;# 
  1335     019C                     SPBRGH1         equ	412	;# 
  1336     019D                     RC1STA          equ	413	;# 
  1337     019D                     RCSTA1          equ	413	;# 
  1338     019D                     RCSTA           equ	413	;# 
  1339     019E                     TX1STA          equ	414	;# 
  1340     019E                     TXSTA1          equ	414	;# 
  1341     019E                     TXSTA           equ	414	;# 
  1342     019F                     BAUD1CON        equ	415	;# 
  1343     019F                     BAUDCON1        equ	415	;# 
  1344     019F                     BAUDCTL1        equ	415	;# 
  1345     019F                     BAUDCON         equ	415	;# 
  1346     019F                     BAUDCTL         equ	415	;# 
  1347     020C                     WPUA            equ	524	;# 
  1348     020D                     WPUB            equ	525	;# 
  1349     020E                     WPUC            equ	526	;# 
  1350     0211                     SSP1BUF         equ	529	;# 
  1351     0211                     SSPBUF          equ	529	;# 
  1352     0212                     SSP1ADD         equ	530	;# 
  1353     0212                     SSPADD          equ	530	;# 
  1354     0213                     SSP1MSK         equ	531	;# 
  1355     0213                     SSPMSK          equ	531	;# 
  1356     0214                     SSP1STAT        equ	532	;# 
  1357     0214                     SSPSTAT         equ	532	;# 
  1358     0215                     SSP1CON1        equ	533	;# 
  1359     0215                     SSPCON          equ	533	;# 
  1360     0215                     SSPCON1         equ	533	;# 
  1361     0215                     SSP1CON         equ	533	;# 
  1362     0216                     SSP1CON2        equ	534	;# 
  1363     0216                     SSPCON2         equ	534	;# 
  1364     0217                     SSP1CON3        equ	535	;# 
  1365     0217                     SSPCON3         equ	535	;# 
  1366     0219                     SSP2BUF         equ	537	;# 
  1367     021A                     SSP2ADD         equ	538	;# 
  1368     021B                     SSP2MSK         equ	539	;# 
  1369     021C                     SSP2STAT        equ	540	;# 
  1370     021D                     SSP2CON1        equ	541	;# 
  1371     021D                     SSP2CON         equ	541	;# 
  1372     021E                     SSP2CON2        equ	542	;# 
  1373     021F                     SSP2CON3        equ	543	;# 
  1374     028C                     ODCONA          equ	652	;# 
  1375     028D                     ODCONB          equ	653	;# 
  1376     028E                     ODCONC          equ	654	;# 
  1377     0291                     CCPR1           equ	657	;# 
  1378     0291                     CCPR1L          equ	657	;# 
  1379     0292                     CCPR1H          equ	658	;# 
  1380     0293                     CCP1CON         equ	659	;# 
  1381     0294                     CCP1CAP         equ	660	;# 
  1382     0295                     CCPR2           equ	661	;# 
  1383     0295                     CCPR2L          equ	661	;# 
  1384     0296                     CCPR2H          equ	662	;# 
  1385     0297                     CCP2CON         equ	663	;# 
  1386     0298                     CCP2CAP         equ	664	;# 
  1387     029F                     CCPTMRS         equ	671	;# 
  1388     030C                     SLRCONA         equ	780	;# 
  1389     030D                     SLRCONB         equ	781	;# 
  1390     030E                     SLRCONC         equ	782	;# 
  1391     0311                     CCPR3           equ	785	;# 
  1392     0311                     CCPR3L          equ	785	;# 
  1393     0312                     CCPR3H          equ	786	;# 
  1394     0313                     CCP3CON         equ	787	;# 
  1395     0314                     CCP3CAP         equ	788	;# 
  1396     0315                     CCPR4           equ	789	;# 
  1397     0315                     CCPR4L          equ	789	;# 
  1398     0316                     CCPR4H          equ	790	;# 
  1399     0317                     CCP4CON         equ	791	;# 
  1400     0318                     CCP4CAP         equ	792	;# 
  1401     038C                     INLVLA          equ	908	;# 
  1402     038D                     INLVLB          equ	909	;# 
  1403     038E                     INLVLC          equ	910	;# 
  1404     0391                     IOCAP           equ	913	;# 
  1405     0392                     IOCAN           equ	914	;# 
  1406     0393                     IOCAF           equ	915	;# 
  1407     0394                     IOCBP           equ	916	;# 
  1408     0395                     IOCBN           equ	917	;# 
  1409     0396                     IOCBF           equ	918	;# 
  1410     0397                     IOCCP           equ	919	;# 
  1411     0398                     IOCCN           equ	920	;# 
  1412     0399                     IOCCF           equ	921	;# 
  1413     039A                     CLKRCON         equ	922	;# 
  1414     039C                     MDCON           equ	924	;# 
  1415     039D                     MDSRC           equ	925	;# 
  1416     039E                     MDCARH          equ	926	;# 
  1417     039F                     MDCARL          equ	927	;# 
  1418     0411                     TMR3            equ	1041	;# 
  1419     0411                     TMR3L           equ	1041	;# 
  1420     0412                     TMR3H           equ	1042	;# 
  1421     0413                     T3CON           equ	1043	;# 
  1422     0414                     T3GCON          equ	1044	;# 
  1423     0415                     TMR4            equ	1045	;# 
  1424     0416                     PR4             equ	1046	;# 
  1425     0417                     T4CON           equ	1047	;# 
  1426     0418                     TMR5            equ	1048	;# 
  1427     0418                     TMR5L           equ	1048	;# 
  1428     0419                     TMR5H           equ	1049	;# 
  1429     041A                     T5CON           equ	1050	;# 
  1430     041B                     T5GCON          equ	1051	;# 
  1431     041C                     TMR6            equ	1052	;# 
  1432     041D                     PR6             equ	1053	;# 
  1433     041E                     T6CON           equ	1054	;# 
  1434     041F                     CCDCON          equ	1055	;# 
  1435     0498                     NCO1ACC         equ	1176	;# 
  1436     0498                     NCO1ACCL        equ	1176	;# 
  1437     0499                     NCO1ACCH        equ	1177	;# 
  1438     049A                     NCO1ACCU        equ	1178	;# 
  1439     049B                     NCO1INC         equ	1179	;# 
  1440     049B                     NCO1INCL        equ	1179	;# 
  1441     049C                     NCO1INCH        equ	1180	;# 
  1442     049D                     NCO1INCU        equ	1181	;# 
  1443     049E                     NCO1CON         equ	1182	;# 
  1444     049F                     NCO1CLK         equ	1183	;# 
  1445     0617                     PWM5DCL         equ	1559	;# 
  1446     0618                     PWM5DCH         equ	1560	;# 
  1447     0619                     PWM5CON         equ	1561	;# 
  1448     0619                     PWM5CON0        equ	1561	;# 
  1449     061A                     PWM6DCL         equ	1562	;# 
  1450     061B                     PWM6DCH         equ	1563	;# 
  1451     061C                     PWM6CON         equ	1564	;# 
  1452     061C                     PWM6CON0        equ	1564	;# 
  1453     061F                     PWMTMRS         equ	1567	;# 
  1454     0691                     CWG1CLKCON      equ	1681	;# 
  1455     0692                     CWG1DAT         equ	1682	;# 
  1456     0693                     CWG1DBR         equ	1683	;# 
  1457     0694                     CWG1DBF         equ	1684	;# 
  1458     0695                     CWG1CON0        equ	1685	;# 
  1459     0696                     CWG1CON1        equ	1686	;# 
  1460     0697                     CWG1AS0         equ	1687	;# 
  1461     0698                     CWG1AS1         equ	1688	;# 
  1462     0699                     CWG1STR         equ	1689	;# 
  1463     0711                     CWG2CLKCON      equ	1809	;# 
  1464     0712                     CWG2DAT         equ	1810	;# 
  1465     0713                     CWG2DBR         equ	1811	;# 
  1466     0714                     CWG2DBF         equ	1812	;# 
  1467     0715                     CWG2CON0        equ	1813	;# 
  1468     0716                     CWG2CON1        equ	1814	;# 
  1469     0717                     CWG2AS0         equ	1815	;# 
  1470     0718                     CWG2AS1         equ	1816	;# 
  1471     0719                     CWG2STR         equ	1817	;# 
  1472     0891                     NVMADR          equ	2193	;# 
  1473     0891                     EEADR           equ	2193	;# 
  1474     0891                     PMADR           equ	2193	;# 
  1475     0891                     NVMADRL         equ	2193	;# 
  1476     0891                     EEADRL          equ	2193	;# 
  1477     0891                     PMADRL          equ	2193	;# 
  1478     0892                     NVMADRH         equ	2194	;# 
  1479     0892                     EEADRH          equ	2194	;# 
  1480     0892                     PMADRH          equ	2194	;# 
  1481     0893                     NVMDAT          equ	2195	;# 
  1482     0893                     EEDAT           equ	2195	;# 
  1483     0893                     PMDAT           equ	2195	;# 
  1484     0893                     NVMDATL         equ	2195	;# 
  1485     0893                     EEDATL          equ	2195	;# 
  1486     0893                     PMDATL          equ	2195	;# 
  1487     0894                     NVMDATH         equ	2196	;# 
  1488     0894                     EEDATH          equ	2196	;# 
  1489     0894                     PMDATH          equ	2196	;# 
  1490     0895                     NVMCON1         equ	2197	;# 
  1491     0895                     EECON1          equ	2197	;# 
  1492     0895                     PMCON1          equ	2197	;# 
  1493     0896                     NVMCON2         equ	2198	;# 
  1494     0896                     EECON2          equ	2198	;# 
  1495     0896                     PMCON2          equ	2198	;# 
  1496     089B                     PCON0           equ	2203	;# 
  1497     0911                     PMD0            equ	2321	;# 
  1498     0912                     PMD1            equ	2322	;# 
  1499     0913                     PMD2            equ	2323	;# 
  1500     0914                     PMD3            equ	2324	;# 
  1501     0915                     PMD4            equ	2325	;# 
  1502     0916                     PMD5            equ	2326	;# 
  1503     0918                     CPUDOZE         equ	2328	;# 
  1504     0919                     OSCCON1         equ	2329	;# 
  1505     091A                     OSCCON2         equ	2330	;# 
  1506     091B                     OSCCON3         equ	2331	;# 
  1507     091C                     OSCSTAT1        equ	2332	;# 
  1508     091D                     OSCEN           equ	2333	;# 
  1509     091E                     OSCTUNE         equ	2334	;# 
  1510     091F                     OSCFRQ          equ	2335	;# 
  1511     0E0F                     PPSLOCK         equ	3599	;# 
  1512     0E10                     INTPPS          equ	3600	;# 
  1513     0E11                     T0CKIPPS        equ	3601	;# 
  1514     0E12                     T1CKIPPS        equ	3602	;# 
  1515     0E13                     T1GPPS          equ	3603	;# 
  1516     0E14                     CCP1PPS         equ	3604	;# 
  1517     0E15                     CCP2PPS         equ	3605	;# 
  1518     0E16                     CCP3PPS         equ	3606	;# 
  1519     0E17                     CCP4PPS         equ	3607	;# 
  1520     0E18                     CWG1PPS         equ	3608	;# 
  1521     0E19                     CWG2PPS         equ	3609	;# 
  1522     0E1A                     MDCIN1PPS       equ	3610	;# 
  1523     0E1B                     MDCIN2PPS       equ	3611	;# 
  1524     0E1C                     MDMINPPS        equ	3612	;# 
  1525     0E1D                     SSP2CLKPPS      equ	3613	;# 
  1526     0E1E                     SSP2DATPPS      equ	3614	;# 
  1527     0E1F                     SSP2SSPPS       equ	3615	;# 
  1528     0E20                     SSP1CLKPPS      equ	3616	;# 
  1529     0E21                     SSP1DATPPS      equ	3617	;# 
  1530     0E22                     SSP1SSPPS       equ	3618	;# 
  1531     0E24                     RXPPS           equ	3620	;# 
  1532     0E25                     TXPPS           equ	3621	;# 
  1533     0E28                     CLCIN0PPS       equ	3624	;# 
  1534     0E29                     CLCIN1PPS       equ	3625	;# 
  1535     0E2A                     CLCIN2PPS       equ	3626	;# 
  1536     0E2B                     CLCIN3PPS       equ	3627	;# 
  1537     0E2C                     T3CKIPPS        equ	3628	;# 
  1538     0E2D                     T3GPPS          equ	3629	;# 
  1539     0E2E                     T5CKIPPS        equ	3630	;# 
  1540     0E2F                     T5GPPS          equ	3631	;# 
  1541     0E90                     RA0PPS          equ	3728	;# 
  1542     0E91                     RA1PPS          equ	3729	;# 
  1543     0E92                     RA2PPS          equ	3730	;# 
  1544     0E94                     RA4PPS          equ	3732	;# 
  1545     0E95                     RA5PPS          equ	3733	;# 
  1546     0E9C                     RB4PPS          equ	3740	;# 
  1547     0E9D                     RB5PPS          equ	3741	;# 
  1548     0E9E                     RB6PPS          equ	3742	;# 
  1549     0E9F                     RB7PPS          equ	3743	;# 
  1550     0EA0                     RC0PPS          equ	3744	;# 
  1551     0EA1                     RC1PPS          equ	3745	;# 
  1552     0EA2                     RC2PPS          equ	3746	;# 
  1553     0EA3                     RC3PPS          equ	3747	;# 
  1554     0EA4                     RC4PPS          equ	3748	;# 
  1555     0EA5                     RC5PPS          equ	3749	;# 
  1556     0EA6                     RC6PPS          equ	3750	;# 
  1557     0EA7                     RC7PPS          equ	3751	;# 
  1558     0F0F                     CLCDATA         equ	3855	;# 
  1559     0F10                     CLC1CON         equ	3856	;# 
  1560     0F11                     CLC1POL         equ	3857	;# 
  1561     0F12                     CLC1SEL0        equ	3858	;# 
  1562     0F13                     CLC1SEL1        equ	3859	;# 
  1563     0F14                     CLC1SEL2        equ	3860	;# 
  1564     0F15                     CLC1SEL3        equ	3861	;# 
  1565     0F16                     CLC1GLS0        equ	3862	;# 
  1566     0F17                     CLC1GLS1        equ	3863	;# 
  1567     0F18                     CLC1GLS2        equ	3864	;# 
  1568     0F19                     CLC1GLS3        equ	3865	;# 
  1569     0F1A                     CLC2CON         equ	3866	;# 
  1570     0F1B                     CLC2POL         equ	3867	;# 
  1571     0F1C                     CLC2SEL0        equ	3868	;# 
  1572     0F1D                     CLC2SEL1        equ	3869	;# 
  1573     0F1E                     CLC2SEL2        equ	3870	;# 
  1574     0F1F                     CLC2SEL3        equ	3871	;# 
  1575     0F20                     CLC2GLS0        equ	3872	;# 
  1576     0F21                     CLC2GLS1        equ	3873	;# 
  1577     0F22                     CLC2GLS2        equ	3874	;# 
  1578     0F23                     CLC2GLS3        equ	3875	;# 
  1579     0F24                     CLC3CON         equ	3876	;# 
  1580     0F25                     CLC3POL         equ	3877	;# 
  1581     0F26                     CLC3SEL0        equ	3878	;# 
  1582     0F27                     CLC3SEL1        equ	3879	;# 
  1583     0F28                     CLC3SEL2        equ	3880	;# 
  1584     0F29                     CLC3SEL3        equ	3881	;# 
  1585     0F2A                     CLC3GLS0        equ	3882	;# 
  1586     0F2B                     CLC3GLS1        equ	3883	;# 
  1587     0F2C                     CLC3GLS2        equ	3884	;# 
  1588     0F2D                     CLC3GLS3        equ	3885	;# 
  1589     0F2E                     CLC4CON         equ	3886	;# 
  1590     0F2F                     CLC4POL         equ	3887	;# 
  1591     0F30                     CLC4SEL0        equ	3888	;# 
  1592     0F31                     CLC4SEL1        equ	3889	;# 
  1593     0F32                     CLC4SEL2        equ	3890	;# 
  1594     0F33                     CLC4SEL3        equ	3891	;# 
  1595     0F34                     CLC4GLS0        equ	3892	;# 
  1596     0F35                     CLC4GLS1        equ	3893	;# 
  1597     0F36                     CLC4GLS2        equ	3894	;# 
  1598     0F37                     CLC4GLS3        equ	3895	;# 
  1599     0FE4                     STATUS_SHAD     equ	4068	;# 
  1600     0FE5                     WREG_SHAD       equ	4069	;# 
  1601     0FE6                     BSR_SHAD        equ	4070	;# 
  1602     0FE7                     PCLATH_SHAD     equ	4071	;# 
  1603     0FE8                     FSR0L_SHAD      equ	4072	;# 
  1604     0FE9                     FSR0H_SHAD      equ	4073	;# 
  1605     0FEA                     FSR1L_SHAD      equ	4074	;# 
  1606     0FEB                     FSR1H_SHAD      equ	4075	;# 
  1607     0FED                     STKPTR          equ	4077	;# 
  1608     0FEE                     TOSL            equ	4078	;# 
  1609     0FEF                     TOSH            equ	4079	;# 
  1610     0000                     INDF0           equ	0	;# 
  1611     0001                     INDF1           equ	1	;# 
  1612     0002                     PCL             equ	2	;# 
  1613     0003                     STATUS          equ	3	;# 
  1614     0004                     FSR0L           equ	4	;# 
  1615     0005                     FSR0H           equ	5	;# 
  1616     0006                     FSR1L           equ	6	;# 
  1617     0007                     FSR1H           equ	7	;# 
  1618     0008                     BSR             equ	8	;# 
  1619     0009                     WREG            equ	9	;# 
  1620     000A                     PCLATH          equ	10	;# 
  1621     000B                     INTCON          equ	11	;# 
  1622     000C                     PORTA           equ	12	;# 
  1623     000D                     PORTB           equ	13	;# 
  1624     000E                     PORTC           equ	14	;# 
  1625     0010                     PIR0            equ	16	;# 
  1626     0011                     PIR1            equ	17	;# 
  1627     0012                     PIR2            equ	18	;# 
  1628     0013                     PIR3            equ	19	;# 
  1629     0014                     PIR4            equ	20	;# 
  1630     0015                     TMR0L           equ	21	;# 
  1631     0015                     TMR0            equ	21	;# 
  1632     0016                     TMR0H           equ	22	;# 
  1633     0016                     PR0             equ	22	;# 
  1634     0017                     T0CON0          equ	23	;# 
  1635     0018                     T0CON1          equ	24	;# 
  1636     0019                     TMR1            equ	25	;# 
  1637     0019                     TMR1L           equ	25	;# 
  1638     001A                     TMR1H           equ	26	;# 
  1639     001B                     T1CON           equ	27	;# 
  1640     001C                     T1GCON          equ	28	;# 
  1641     001D                     TMR2            equ	29	;# 
  1642     001E                     PR2             equ	30	;# 
  1643     001F                     T2CON           equ	31	;# 
  1644     008C                     TRISA           equ	140	;# 
  1645     008D                     TRISB           equ	141	;# 
  1646     008E                     TRISC           equ	142	;# 
  1647     0090                     PIE0            equ	144	;# 
  1648     0091                     PIE1            equ	145	;# 
  1649     0092                     PIE2            equ	146	;# 
  1650     0093                     PIE3            equ	147	;# 
  1651     0094                     PIE4            equ	148	;# 
  1652     0097                     WDTCON          equ	151	;# 
  1653     009B                     ADRES           equ	155	;# 
  1654     009B                     ADRESL          equ	155	;# 
  1655     009C                     ADRESH          equ	156	;# 
  1656     009D                     ADCON0          equ	157	;# 
  1657     009E                     ADCON1          equ	158	;# 
  1658     009F                     ADACT           equ	159	;# 
  1659     010C                     LATA            equ	268	;# 
  1660     010D                     LATB            equ	269	;# 
  1661     010E                     LATC            equ	270	;# 
  1662     0111                     CM1CON0         equ	273	;# 
  1663     0112                     CM1CON1         equ	274	;# 
  1664     0113                     CM2CON0         equ	275	;# 
  1665     0114                     CM2CON1         equ	276	;# 
  1666     0115                     CMOUT           equ	277	;# 
  1667     0116                     BORCON          equ	278	;# 
  1668     0117                     FVRCON          equ	279	;# 
  1669     0118                     DACCON0         equ	280	;# 
  1670     0119                     DACCON1         equ	281	;# 
  1671     018C                     ANSELA          equ	396	;# 
  1672     018D                     ANSELB          equ	397	;# 
  1673     018E                     ANSELC          equ	398	;# 
  1674     0197                     VREGCON         equ	407	;# 
  1675     0199                     RC1REG          equ	409	;# 
  1676     0199                     RCREG           equ	409	;# 
  1677     0199                     RCREG1          equ	409	;# 
  1678     019A                     TX1REG          equ	410	;# 
  1679     019A                     TXREG1          equ	410	;# 
  1680     019A                     TXREG           equ	410	;# 
  1681     019B                     SP1BRG          equ	411	;# 
  1682     019B                     SPBRG           equ	411	;# 
  1683     019B                     SP1BRGL         equ	411	;# 
  1684     019B                     SPBRG1          equ	411	;# 
  1685     019B                     SPBRGL          equ	411	;# 
  1686     019C                     SP1BRGH         equ	412	;# 
  1687     019C                     SPBRGH          equ	412	;# 
  1688     019C                     SPBRGH1         equ	412	;# 
  1689     019D                     RC1STA          equ	413	;# 
  1690     019D                     RCSTA1          equ	413	;# 
  1691     019D                     RCSTA           equ	413	;# 
  1692     019E                     TX1STA          equ	414	;# 
  1693     019E                     TXSTA1          equ	414	;# 
  1694     019E                     TXSTA           equ	414	;# 
  1695     019F                     BAUD1CON        equ	415	;# 
  1696     019F                     BAUDCON1        equ	415	;# 
  1697     019F                     BAUDCTL1        equ	415	;# 
  1698     019F                     BAUDCON         equ	415	;# 
  1699     019F                     BAUDCTL         equ	415	;# 
  1700     020C                     WPUA            equ	524	;# 
  1701     020D                     WPUB            equ	525	;# 
  1702     020E                     WPUC            equ	526	;# 
  1703     0211                     SSP1BUF         equ	529	;# 
  1704     0211                     SSPBUF          equ	529	;# 
  1705     0212                     SSP1ADD         equ	530	;# 
  1706     0212                     SSPADD          equ	530	;# 
  1707     0213                     SSP1MSK         equ	531	;# 
  1708     0213                     SSPMSK          equ	531	;# 
  1709     0214                     SSP1STAT        equ	532	;# 
  1710     0214                     SSPSTAT         equ	532	;# 
  1711     0215                     SSP1CON1        equ	533	;# 
  1712     0215                     SSPCON          equ	533	;# 
  1713     0215                     SSPCON1         equ	533	;# 
  1714     0215                     SSP1CON         equ	533	;# 
  1715     0216                     SSP1CON2        equ	534	;# 
  1716     0216                     SSPCON2         equ	534	;# 
  1717     0217                     SSP1CON3        equ	535	;# 
  1718     0217                     SSPCON3         equ	535	;# 
  1719     0219                     SSP2BUF         equ	537	;# 
  1720     021A                     SSP2ADD         equ	538	;# 
  1721     021B                     SSP2MSK         equ	539	;# 
  1722     021C                     SSP2STAT        equ	540	;# 
  1723     021D                     SSP2CON1        equ	541	;# 
  1724     021D                     SSP2CON         equ	541	;# 
  1725     021E                     SSP2CON2        equ	542	;# 
  1726     021F                     SSP2CON3        equ	543	;# 
  1727     028C                     ODCONA          equ	652	;# 
  1728     028D                     ODCONB          equ	653	;# 
  1729     028E                     ODCONC          equ	654	;# 
  1730     0291                     CCPR1           equ	657	;# 
  1731     0291                     CCPR1L          equ	657	;# 
  1732     0292                     CCPR1H          equ	658	;# 
  1733     0293                     CCP1CON         equ	659	;# 
  1734     0294                     CCP1CAP         equ	660	;# 
  1735     0295                     CCPR2           equ	661	;# 
  1736     0295                     CCPR2L          equ	661	;# 
  1737     0296                     CCPR2H          equ	662	;# 
  1738     0297                     CCP2CON         equ	663	;# 
  1739     0298                     CCP2CAP         equ	664	;# 
  1740     029F                     CCPTMRS         equ	671	;# 
  1741     030C                     SLRCONA         equ	780	;# 
  1742     030D                     SLRCONB         equ	781	;# 
  1743     030E                     SLRCONC         equ	782	;# 
  1744     0311                     CCPR3           equ	785	;# 
  1745     0311                     CCPR3L          equ	785	;# 
  1746     0312                     CCPR3H          equ	786	;# 
  1747     0313                     CCP3CON         equ	787	;# 
  1748     0314                     CCP3CAP         equ	788	;# 
  1749     0315                     CCPR4           equ	789	;# 
  1750     0315                     CCPR4L          equ	789	;# 
  1751     0316                     CCPR4H          equ	790	;# 
  1752     0317                     CCP4CON         equ	791	;# 
  1753     0318                     CCP4CAP         equ	792	;# 
  1754     038C                     INLVLA          equ	908	;# 
  1755     038D                     INLVLB          equ	909	;# 
  1756     038E                     INLVLC          equ	910	;# 
  1757     0391                     IOCAP           equ	913	;# 
  1758     0392                     IOCAN           equ	914	;# 
  1759     0393                     IOCAF           equ	915	;# 
  1760     0394                     IOCBP           equ	916	;# 
  1761     0395                     IOCBN           equ	917	;# 
  1762     0396                     IOCBF           equ	918	;# 
  1763     0397                     IOCCP           equ	919	;# 
  1764     0398                     IOCCN           equ	920	;# 
  1765     0399                     IOCCF           equ	921	;# 
  1766     039A                     CLKRCON         equ	922	;# 
  1767     039C                     MDCON           equ	924	;# 
  1768     039D                     MDSRC           equ	925	;# 
  1769     039E                     MDCARH          equ	926	;# 
  1770     039F                     MDCARL          equ	927	;# 
  1771     0411                     TMR3            equ	1041	;# 
  1772     0411                     TMR3L           equ	1041	;# 
  1773     0412                     TMR3H           equ	1042	;# 
  1774     0413                     T3CON           equ	1043	;# 
  1775     0414                     T3GCON          equ	1044	;# 
  1776     0415                     TMR4            equ	1045	;# 
  1777     0416                     PR4             equ	1046	;# 
  1778     0417                     T4CON           equ	1047	;# 
  1779     0418                     TMR5            equ	1048	;# 
  1780     0418                     TMR5L           equ	1048	;# 
  1781     0419                     TMR5H           equ	1049	;# 
  1782     041A                     T5CON           equ	1050	;# 
  1783     041B                     T5GCON          equ	1051	;# 
  1784     041C                     TMR6            equ	1052	;# 
  1785     041D                     PR6             equ	1053	;# 
  1786     041E                     T6CON           equ	1054	;# 
  1787     041F                     CCDCON          equ	1055	;# 
  1788     0498                     NCO1ACC         equ	1176	;# 
  1789     0498                     NCO1ACCL        equ	1176	;# 
  1790     0499                     NCO1ACCH        equ	1177	;# 
  1791     049A                     NCO1ACCU        equ	1178	;# 
  1792     049B                     NCO1INC         equ	1179	;# 
  1793     049B                     NCO1INCL        equ	1179	;# 
  1794     049C                     NCO1INCH        equ	1180	;# 
  1795     049D                     NCO1INCU        equ	1181	;# 
  1796     049E                     NCO1CON         equ	1182	;# 
  1797     049F                     NCO1CLK         equ	1183	;# 
  1798     0617                     PWM5DCL         equ	1559	;# 
  1799     0618                     PWM5DCH         equ	1560	;# 
  1800     0619                     PWM5CON         equ	1561	;# 
  1801     0619                     PWM5CON0        equ	1561	;# 
  1802     061A                     PWM6DCL         equ	1562	;# 
  1803     061B                     PWM6DCH         equ	1563	;# 
  1804     061C                     PWM6CON         equ	1564	;# 
  1805     061C                     PWM6CON0        equ	1564	;# 
  1806     061F                     PWMTMRS         equ	1567	;# 
  1807     0691                     CWG1CLKCON      equ	1681	;# 
  1808     0692                     CWG1DAT         equ	1682	;# 
  1809     0693                     CWG1DBR         equ	1683	;# 
  1810     0694                     CWG1DBF         equ	1684	;# 
  1811     0695                     CWG1CON0        equ	1685	;# 
  1812     0696                     CWG1CON1        equ	1686	;# 
  1813     0697                     CWG1AS0         equ	1687	;# 
  1814     0698                     CWG1AS1         equ	1688	;# 
  1815     0699                     CWG1STR         equ	1689	;# 
  1816     0711                     CWG2CLKCON      equ	1809	;# 
  1817     0712                     CWG2DAT         equ	1810	;# 
  1818     0713                     CWG2DBR         equ	1811	;# 
  1819     0714                     CWG2DBF         equ	1812	;# 
  1820     0715                     CWG2CON0        equ	1813	;# 
  1821     0716                     CWG2CON1        equ	1814	;# 
  1822     0717                     CWG2AS0         equ	1815	;# 
  1823     0718                     CWG2AS1         equ	1816	;# 
  1824     0719                     CWG2STR         equ	1817	;# 
  1825     0891                     NVMADR          equ	2193	;# 
  1826     0891                     EEADR           equ	2193	;# 
  1827     0891                     PMADR           equ	2193	;# 
  1828     0891                     NVMADRL         equ	2193	;# 
  1829     0891                     EEADRL          equ	2193	;# 
  1830     0891                     PMADRL          equ	2193	;# 
  1831     0892                     NVMADRH         equ	2194	;# 
  1832     0892                     EEADRH          equ	2194	;# 
  1833     0892                     PMADRH          equ	2194	;# 
  1834     0893                     NVMDAT          equ	2195	;# 
  1835     0893                     EEDAT           equ	2195	;# 
  1836     0893                     PMDAT           equ	2195	;# 
  1837     0893                     NVMDATL         equ	2195	;# 
  1838     0893                     EEDATL          equ	2195	;# 
  1839     0893                     PMDATL          equ	2195	;# 
  1840     0894                     NVMDATH         equ	2196	;# 
  1841     0894                     EEDATH          equ	2196	;# 
  1842     0894                     PMDATH          equ	2196	;# 
  1843     0895                     NVMCON1         equ	2197	;# 
  1844     0895                     EECON1          equ	2197	;# 
  1845     0895                     PMCON1          equ	2197	;# 
  1846     0896                     NVMCON2         equ	2198	;# 
  1847     0896                     EECON2          equ	2198	;# 
  1848     0896                     PMCON2          equ	2198	;# 
  1849     089B                     PCON0           equ	2203	;# 
  1850     0911                     PMD0            equ	2321	;# 
  1851     0912                     PMD1            equ	2322	;# 
  1852     0913                     PMD2            equ	2323	;# 
  1853     0914                     PMD3            equ	2324	;# 
  1854     0915                     PMD4            equ	2325	;# 
  1855     0916                     PMD5            equ	2326	;# 
  1856     0918                     CPUDOZE         equ	2328	;# 
  1857     0919                     OSCCON1         equ	2329	;# 
  1858     091A                     OSCCON2         equ	2330	;# 
  1859     091B                     OSCCON3         equ	2331	;# 
  1860     091C                     OSCSTAT1        equ	2332	;# 
  1861     091D                     OSCEN           equ	2333	;# 
  1862     091E                     OSCTUNE         equ	2334	;# 
  1863     091F                     OSCFRQ          equ	2335	;# 
  1864     0E0F                     PPSLOCK         equ	3599	;# 
  1865     0E10                     INTPPS          equ	3600	;# 
  1866     0E11                     T0CKIPPS        equ	3601	;# 
  1867     0E12                     T1CKIPPS        equ	3602	;# 
  1868     0E13                     T1GPPS          equ	3603	;# 
  1869     0E14                     CCP1PPS         equ	3604	;# 
  1870     0E15                     CCP2PPS         equ	3605	;# 
  1871     0E16                     CCP3PPS         equ	3606	;# 
  1872     0E17                     CCP4PPS         equ	3607	;# 
  1873     0E18                     CWG1PPS         equ	3608	;# 
  1874     0E19                     CWG2PPS         equ	3609	;# 
  1875     0E1A                     MDCIN1PPS       equ	3610	;# 
  1876     0E1B                     MDCIN2PPS       equ	3611	;# 
  1877     0E1C                     MDMINPPS        equ	3612	;# 
  1878     0E1D                     SSP2CLKPPS      equ	3613	;# 
  1879     0E1E                     SSP2DATPPS      equ	3614	;# 
  1880     0E1F                     SSP2SSPPS       equ	3615	;# 
  1881     0E20                     SSP1CLKPPS      equ	3616	;# 
  1882     0E21                     SSP1DATPPS      equ	3617	;# 
  1883     0E22                     SSP1SSPPS       equ	3618	;# 
  1884     0E24                     RXPPS           equ	3620	;# 
  1885     0E25                     TXPPS           equ	3621	;# 
  1886     0E28                     CLCIN0PPS       equ	3624	;# 
  1887     0E29                     CLCIN1PPS       equ	3625	;# 
  1888     0E2A                     CLCIN2PPS       equ	3626	;# 
  1889     0E2B                     CLCIN3PPS       equ	3627	;# 
  1890     0E2C                     T3CKIPPS        equ	3628	;# 
  1891     0E2D                     T3GPPS          equ	3629	;# 
  1892     0E2E                     T5CKIPPS        equ	3630	;# 
  1893     0E2F                     T5GPPS          equ	3631	;# 
  1894     0E90                     RA0PPS          equ	3728	;# 
  1895     0E91                     RA1PPS          equ	3729	;# 
  1896     0E92                     RA2PPS          equ	3730	;# 
  1897     0E94                     RA4PPS          equ	3732	;# 
  1898     0E95                     RA5PPS          equ	3733	;# 
  1899     0E9C                     RB4PPS          equ	3740	;# 
  1900     0E9D                     RB5PPS          equ	3741	;# 
  1901     0E9E                     RB6PPS          equ	3742	;# 
  1902     0E9F                     RB7PPS          equ	3743	;# 
  1903     0EA0                     RC0PPS          equ	3744	;# 
  1904     0EA1                     RC1PPS          equ	3745	;# 
  1905     0EA2                     RC2PPS          equ	3746	;# 
  1906     0EA3                     RC3PPS          equ	3747	;# 
  1907     0EA4                     RC4PPS          equ	3748	;# 
  1908     0EA5                     RC5PPS          equ	3749	;# 
  1909     0EA6                     RC6PPS          equ	3750	;# 
  1910     0EA7                     RC7PPS          equ	3751	;# 
  1911     0F0F                     CLCDATA         equ	3855	;# 
  1912     0F10                     CLC1CON         equ	3856	;# 
  1913     0F11                     CLC1POL         equ	3857	;# 
  1914     0F12                     CLC1SEL0        equ	3858	;# 
  1915     0F13                     CLC1SEL1        equ	3859	;# 
  1916     0F14                     CLC1SEL2        equ	3860	;# 
  1917     0F15                     CLC1SEL3        equ	3861	;# 
  1918     0F16                     CLC1GLS0        equ	3862	;# 
  1919     0F17                     CLC1GLS1        equ	3863	;# 
  1920     0F18                     CLC1GLS2        equ	3864	;# 
  1921     0F19                     CLC1GLS3        equ	3865	;# 
  1922     0F1A                     CLC2CON         equ	3866	;# 
  1923     0F1B                     CLC2POL         equ	3867	;# 
  1924     0F1C                     CLC2SEL0        equ	3868	;# 
  1925     0F1D                     CLC2SEL1        equ	3869	;# 
  1926     0F1E                     CLC2SEL2        equ	3870	;# 
  1927     0F1F                     CLC2SEL3        equ	3871	;# 
  1928     0F20                     CLC2GLS0        equ	3872	;# 
  1929     0F21                     CLC2GLS1        equ	3873	;# 
  1930     0F22                     CLC2GLS2        equ	3874	;# 
  1931     0F23                     CLC2GLS3        equ	3875	;# 
  1932     0F24                     CLC3CON         equ	3876	;# 
  1933     0F25                     CLC3POL         equ	3877	;# 
  1934     0F26                     CLC3SEL0        equ	3878	;# 
  1935     0F27                     CLC3SEL1        equ	3879	;# 
  1936     0F28                     CLC3SEL2        equ	3880	;# 
  1937     0F29                     CLC3SEL3        equ	3881	;# 
  1938     0F2A                     CLC3GLS0        equ	3882	;# 
  1939     0F2B                     CLC3GLS1        equ	3883	;# 
  1940     0F2C                     CLC3GLS2        equ	3884	;# 
  1941     0F2D                     CLC3GLS3        equ	3885	;# 
  1942     0F2E                     CLC4CON         equ	3886	;# 
  1943     0F2F                     CLC4POL         equ	3887	;# 
  1944     0F30                     CLC4SEL0        equ	3888	;# 
  1945     0F31                     CLC4SEL1        equ	3889	;# 
  1946     0F32                     CLC4SEL2        equ	3890	;# 
  1947     0F33                     CLC4SEL3        equ	3891	;# 
  1948     0F34                     CLC4GLS0        equ	3892	;# 
  1949     0F35                     CLC4GLS1        equ	3893	;# 
  1950     0F36                     CLC4GLS2        equ	3894	;# 
  1951     0F37                     CLC4GLS3        equ	3895	;# 
  1952     0FE4                     STATUS_SHAD     equ	4068	;# 
  1953     0FE5                     WREG_SHAD       equ	4069	;# 
  1954     0FE6                     BSR_SHAD        equ	4070	;# 
  1955     0FE7                     PCLATH_SHAD     equ	4071	;# 
  1956     0FE8                     FSR0L_SHAD      equ	4072	;# 
  1957     0FE9                     FSR0H_SHAD      equ	4073	;# 
  1958     0FEA                     FSR1L_SHAD      equ	4074	;# 
  1959     0FEB                     FSR1H_SHAD      equ	4075	;# 
  1960     0FED                     STKPTR          equ	4077	;# 
  1961     0FEE                     TOSL            equ	4078	;# 
  1962     0FEF                     TOSH            equ	4079	;# 
  1963     0000                     INDF0           equ	0	;# 
  1964     0001                     INDF1           equ	1	;# 
  1965     0002                     PCL             equ	2	;# 
  1966     0003                     STATUS          equ	3	;# 
  1967     0004                     FSR0L           equ	4	;# 
  1968     0005                     FSR0H           equ	5	;# 
  1969     0006                     FSR1L           equ	6	;# 
  1970     0007                     FSR1H           equ	7	;# 
  1971     0008                     BSR             equ	8	;# 
  1972     0009                     WREG            equ	9	;# 
  1973     000A                     PCLATH          equ	10	;# 
  1974     000B                     INTCON          equ	11	;# 
  1975     000C                     PORTA           equ	12	;# 
  1976     000D                     PORTB           equ	13	;# 
  1977     000E                     PORTC           equ	14	;# 
  1978     0010                     PIR0            equ	16	;# 
  1979     0011                     PIR1            equ	17	;# 
  1980     0012                     PIR2            equ	18	;# 
  1981     0013                     PIR3            equ	19	;# 
  1982     0014                     PIR4            equ	20	;# 
  1983     0015                     TMR0L           equ	21	;# 
  1984     0015                     TMR0            equ	21	;# 
  1985     0016                     TMR0H           equ	22	;# 
  1986     0016                     PR0             equ	22	;# 
  1987     0017                     T0CON0          equ	23	;# 
  1988     0018                     T0CON1          equ	24	;# 
  1989     0019                     TMR1            equ	25	;# 
  1990     0019                     TMR1L           equ	25	;# 
  1991     001A                     TMR1H           equ	26	;# 
  1992     001B                     T1CON           equ	27	;# 
  1993     001C                     T1GCON          equ	28	;# 
  1994     001D                     TMR2            equ	29	;# 
  1995     001E                     PR2             equ	30	;# 
  1996     001F                     T2CON           equ	31	;# 
  1997     008C                     TRISA           equ	140	;# 
  1998     008D                     TRISB           equ	141	;# 
  1999     008E                     TRISC           equ	142	;# 
  2000     0090                     PIE0            equ	144	;# 
  2001     0091                     PIE1            equ	145	;# 
  2002     0092                     PIE2            equ	146	;# 
  2003     0093                     PIE3            equ	147	;# 
  2004     0094                     PIE4            equ	148	;# 
  2005     0097                     WDTCON          equ	151	;# 
  2006     009B                     ADRES           equ	155	;# 
  2007     009B                     ADRESL          equ	155	;# 
  2008     009C                     ADRESH          equ	156	;# 
  2009     009D                     ADCON0          equ	157	;# 
  2010     009E                     ADCON1          equ	158	;# 
  2011     009F                     ADACT           equ	159	;# 
  2012     010C                     LATA            equ	268	;# 
  2013     010D                     LATB            equ	269	;# 
  2014     010E                     LATC            equ	270	;# 
  2015     0111                     CM1CON0         equ	273	;# 
  2016     0112                     CM1CON1         equ	274	;# 
  2017     0113                     CM2CON0         equ	275	;# 
  2018     0114                     CM2CON1         equ	276	;# 
  2019     0115                     CMOUT           equ	277	;# 
  2020     0116                     BORCON          equ	278	;# 
  2021     0117                     FVRCON          equ	279	;# 
  2022     0118                     DACCON0         equ	280	;# 
  2023     0119                     DACCON1         equ	281	;# 
  2024     018C                     ANSELA          equ	396	;# 
  2025     018D                     ANSELB          equ	397	;# 
  2026     018E                     ANSELC          equ	398	;# 
  2027     0197                     VREGCON         equ	407	;# 
  2028     0199                     RC1REG          equ	409	;# 
  2029     0199                     RCREG           equ	409	;# 
  2030     0199                     RCREG1          equ	409	;# 
  2031     019A                     TX1REG          equ	410	;# 
  2032     019A                     TXREG1          equ	410	;# 
  2033     019A                     TXREG           equ	410	;# 
  2034     019B                     SP1BRG          equ	411	;# 
  2035     019B                     SPBRG           equ	411	;# 
  2036     019B                     SP1BRGL         equ	411	;# 
  2037     019B                     SPBRG1          equ	411	;# 
  2038     019B                     SPBRGL          equ	411	;# 
  2039     019C                     SP1BRGH         equ	412	;# 
  2040     019C                     SPBRGH          equ	412	;# 
  2041     019C                     SPBRGH1         equ	412	;# 
  2042     019D                     RC1STA          equ	413	;# 
  2043     019D                     RCSTA1          equ	413	;# 
  2044     019D                     RCSTA           equ	413	;# 
  2045     019E                     TX1STA          equ	414	;# 
  2046     019E                     TXSTA1          equ	414	;# 
  2047     019E                     TXSTA           equ	414	;# 
  2048     019F                     BAUD1CON        equ	415	;# 
  2049     019F                     BAUDCON1        equ	415	;# 
  2050     019F                     BAUDCTL1        equ	415	;# 
  2051     019F                     BAUDCON         equ	415	;# 
  2052     019F                     BAUDCTL         equ	415	;# 
  2053     020C                     WPUA            equ	524	;# 
  2054     020D                     WPUB            equ	525	;# 
  2055     020E                     WPUC            equ	526	;# 
  2056     0211                     SSP1BUF         equ	529	;# 
  2057     0211                     SSPBUF          equ	529	;# 
  2058     0212                     SSP1ADD         equ	530	;# 
  2059     0212                     SSPADD          equ	530	;# 
  2060     0213                     SSP1MSK         equ	531	;# 
  2061     0213                     SSPMSK          equ	531	;# 
  2062     0214                     SSP1STAT        equ	532	;# 
  2063     0214                     SSPSTAT         equ	532	;# 
  2064     0215                     SSP1CON1        equ	533	;# 
  2065     0215                     SSPCON          equ	533	;# 
  2066     0215                     SSPCON1         equ	533	;# 
  2067     0215                     SSP1CON         equ	533	;# 
  2068     0216                     SSP1CON2        equ	534	;# 
  2069     0216                     SSPCON2         equ	534	;# 
  2070     0217                     SSP1CON3        equ	535	;# 
  2071     0217                     SSPCON3         equ	535	;# 
  2072     0219                     SSP2BUF         equ	537	;# 
  2073     021A                     SSP2ADD         equ	538	;# 
  2074     021B                     SSP2MSK         equ	539	;# 
  2075     021C                     SSP2STAT        equ	540	;# 
  2076     021D                     SSP2CON1        equ	541	;# 
  2077     021D                     SSP2CON         equ	541	;# 
  2078     021E                     SSP2CON2        equ	542	;# 
  2079     021F                     SSP2CON3        equ	543	;# 
  2080     028C                     ODCONA          equ	652	;# 
  2081     028D                     ODCONB          equ	653	;# 
  2082     028E                     ODCONC          equ	654	;# 
  2083     0291                     CCPR1           equ	657	;# 
  2084     0291                     CCPR1L          equ	657	;# 
  2085     0292                     CCPR1H          equ	658	;# 
  2086     0293                     CCP1CON         equ	659	;# 
  2087     0294                     CCP1CAP         equ	660	;# 
  2088     0295                     CCPR2           equ	661	;# 
  2089     0295                     CCPR2L          equ	661	;# 
  2090     0296                     CCPR2H          equ	662	;# 
  2091     0297                     CCP2CON         equ	663	;# 
  2092     0298                     CCP2CAP         equ	664	;# 
  2093     029F                     CCPTMRS         equ	671	;# 
  2094     030C                     SLRCONA         equ	780	;# 
  2095     030D                     SLRCONB         equ	781	;# 
  2096     030E                     SLRCONC         equ	782	;# 
  2097     0311                     CCPR3           equ	785	;# 
  2098     0311                     CCPR3L          equ	785	;# 
  2099     0312                     CCPR3H          equ	786	;# 
  2100     0313                     CCP3CON         equ	787	;# 
  2101     0314                     CCP3CAP         equ	788	;# 
  2102     0315                     CCPR4           equ	789	;# 
  2103     0315                     CCPR4L          equ	789	;# 
  2104     0316                     CCPR4H          equ	790	;# 
  2105     0317                     CCP4CON         equ	791	;# 
  2106     0318                     CCP4CAP         equ	792	;# 
  2107     038C                     INLVLA          equ	908	;# 
  2108     038D                     INLVLB          equ	909	;# 
  2109     038E                     INLVLC          equ	910	;# 
  2110     0391                     IOCAP           equ	913	;# 
  2111     0392                     IOCAN           equ	914	;# 
  2112     0393                     IOCAF           equ	915	;# 
  2113     0394                     IOCBP           equ	916	;# 
  2114     0395                     IOCBN           equ	917	;# 
  2115     0396                     IOCBF           equ	918	;# 
  2116     0397                     IOCCP           equ	919	;# 
  2117     0398                     IOCCN           equ	920	;# 
  2118     0399                     IOCCF           equ	921	;# 
  2119     039A                     CLKRCON         equ	922	;# 
  2120     039C                     MDCON           equ	924	;# 
  2121     039D                     MDSRC           equ	925	;# 
  2122     039E                     MDCARH          equ	926	;# 
  2123     039F                     MDCARL          equ	927	;# 
  2124     0411                     TMR3            equ	1041	;# 
  2125     0411                     TMR3L           equ	1041	;# 
  2126     0412                     TMR3H           equ	1042	;# 
  2127     0413                     T3CON           equ	1043	;# 
  2128     0414                     T3GCON          equ	1044	;# 
  2129     0415                     TMR4            equ	1045	;# 
  2130     0416                     PR4             equ	1046	;# 
  2131     0417                     T4CON           equ	1047	;# 
  2132     0418                     TMR5            equ	1048	;# 
  2133     0418                     TMR5L           equ	1048	;# 
  2134     0419                     TMR5H           equ	1049	;# 
  2135     041A                     T5CON           equ	1050	;# 
  2136     041B                     T5GCON          equ	1051	;# 
  2137     041C                     TMR6            equ	1052	;# 
  2138     041D                     PR6             equ	1053	;# 
  2139     041E                     T6CON           equ	1054	;# 
  2140     041F                     CCDCON          equ	1055	;# 
  2141     0498                     NCO1ACC         equ	1176	;# 
  2142     0498                     NCO1ACCL        equ	1176	;# 
  2143     0499                     NCO1ACCH        equ	1177	;# 
  2144     049A                     NCO1ACCU        equ	1178	;# 
  2145     049B                     NCO1INC         equ	1179	;# 
  2146     049B                     NCO1INCL        equ	1179	;# 
  2147     049C                     NCO1INCH        equ	1180	;# 
  2148     049D                     NCO1INCU        equ	1181	;# 
  2149     049E                     NCO1CON         equ	1182	;# 
  2150     049F                     NCO1CLK         equ	1183	;# 
  2151     0617                     PWM5DCL         equ	1559	;# 
  2152     0618                     PWM5DCH         equ	1560	;# 
  2153     0619                     PWM5CON         equ	1561	;# 
  2154     0619                     PWM5CON0        equ	1561	;# 
  2155     061A                     PWM6DCL         equ	1562	;# 
  2156     061B                     PWM6DCH         equ	1563	;# 
  2157     061C                     PWM6CON         equ	1564	;# 
  2158     061C                     PWM6CON0        equ	1564	;# 
  2159     061F                     PWMTMRS         equ	1567	;# 
  2160     0691                     CWG1CLKCON      equ	1681	;# 
  2161     0692                     CWG1DAT         equ	1682	;# 
  2162     0693                     CWG1DBR         equ	1683	;# 
  2163     0694                     CWG1DBF         equ	1684	;# 
  2164     0695                     CWG1CON0        equ	1685	;# 
  2165     0696                     CWG1CON1        equ	1686	;# 
  2166     0697                     CWG1AS0         equ	1687	;# 
  2167     0698                     CWG1AS1         equ	1688	;# 
  2168     0699                     CWG1STR         equ	1689	;# 
  2169     0711                     CWG2CLKCON      equ	1809	;# 
  2170     0712                     CWG2DAT         equ	1810	;# 
  2171     0713                     CWG2DBR         equ	1811	;# 
  2172     0714                     CWG2DBF         equ	1812	;# 
  2173     0715                     CWG2CON0        equ	1813	;# 
  2174     0716                     CWG2CON1        equ	1814	;# 
  2175     0717                     CWG2AS0         equ	1815	;# 
  2176     0718                     CWG2AS1         equ	1816	;# 
  2177     0719                     CWG2STR         equ	1817	;# 
  2178     0891                     NVMADR          equ	2193	;# 
  2179     0891                     EEADR           equ	2193	;# 
  2180     0891                     PMADR           equ	2193	;# 
  2181     0891                     NVMADRL         equ	2193	;# 
  2182     0891                     EEADRL          equ	2193	;# 
  2183     0891                     PMADRL          equ	2193	;# 
  2184     0892                     NVMADRH         equ	2194	;# 
  2185     0892                     EEADRH          equ	2194	;# 
  2186     0892                     PMADRH          equ	2194	;# 
  2187     0893                     NVMDAT          equ	2195	;# 
  2188     0893                     EEDAT           equ	2195	;# 
  2189     0893                     PMDAT           equ	2195	;# 
  2190     0893                     NVMDATL         equ	2195	;# 
  2191     0893                     EEDATL          equ	2195	;# 
  2192     0893                     PMDATL          equ	2195	;# 
  2193     0894                     NVMDATH         equ	2196	;# 
  2194     0894                     EEDATH          equ	2196	;# 
  2195     0894                     PMDATH          equ	2196	;# 
  2196     0895                     NVMCON1         equ	2197	;# 
  2197     0895                     EECON1          equ	2197	;# 
  2198     0895                     PMCON1          equ	2197	;# 
  2199     0896                     NVMCON2         equ	2198	;# 
  2200     0896                     EECON2          equ	2198	;# 
  2201     0896                     PMCON2          equ	2198	;# 
  2202     089B                     PCON0           equ	2203	;# 
  2203     0911                     PMD0            equ	2321	;# 
  2204     0912                     PMD1            equ	2322	;# 
  2205     0913                     PMD2            equ	2323	;# 
  2206     0914                     PMD3            equ	2324	;# 
  2207     0915                     PMD4            equ	2325	;# 
  2208     0916                     PMD5            equ	2326	;# 
  2209     0918                     CPUDOZE         equ	2328	;# 
  2210     0919                     OSCCON1         equ	2329	;# 
  2211     091A                     OSCCON2         equ	2330	;# 
  2212     091B                     OSCCON3         equ	2331	;# 
  2213     091C                     OSCSTAT1        equ	2332	;# 
  2214     091D                     OSCEN           equ	2333	;# 
  2215     091E                     OSCTUNE         equ	2334	;# 
  2216     091F                     OSCFRQ          equ	2335	;# 
  2217     0E0F                     PPSLOCK         equ	3599	;# 
  2218     0E10                     INTPPS          equ	3600	;# 
  2219     0E11                     T0CKIPPS        equ	3601	;# 
  2220     0E12                     T1CKIPPS        equ	3602	;# 
  2221     0E13                     T1GPPS          equ	3603	;# 
  2222     0E14                     CCP1PPS         equ	3604	;# 
  2223     0E15                     CCP2PPS         equ	3605	;# 
  2224     0E16                     CCP3PPS         equ	3606	;# 
  2225     0E17                     CCP4PPS         equ	3607	;# 
  2226     0E18                     CWG1PPS         equ	3608	;# 
  2227     0E19                     CWG2PPS         equ	3609	;# 
  2228     0E1A                     MDCIN1PPS       equ	3610	;# 
  2229     0E1B                     MDCIN2PPS       equ	3611	;# 
  2230     0E1C                     MDMINPPS        equ	3612	;# 
  2231     0E1D                     SSP2CLKPPS      equ	3613	;# 
  2232     0E1E                     SSP2DATPPS      equ	3614	;# 
  2233     0E1F                     SSP2SSPPS       equ	3615	;# 
  2234     0E20                     SSP1CLKPPS      equ	3616	;# 
  2235     0E21                     SSP1DATPPS      equ	3617	;# 
  2236     0E22                     SSP1SSPPS       equ	3618	;# 
  2237     0E24                     RXPPS           equ	3620	;# 
  2238     0E25                     TXPPS           equ	3621	;# 
  2239     0E28                     CLCIN0PPS       equ	3624	;# 
  2240     0E29                     CLCIN1PPS       equ	3625	;# 
  2241     0E2A                     CLCIN2PPS       equ	3626	;# 
  2242     0E2B                     CLCIN3PPS       equ	3627	;# 
  2243     0E2C                     T3CKIPPS        equ	3628	;# 
  2244     0E2D                     T3GPPS          equ	3629	;# 
  2245     0E2E                     T5CKIPPS        equ	3630	;# 
  2246     0E2F                     T5GPPS          equ	3631	;# 
  2247     0E90                     RA0PPS          equ	3728	;# 
  2248     0E91                     RA1PPS          equ	3729	;# 
  2249     0E92                     RA2PPS          equ	3730	;# 
  2250     0E94                     RA4PPS          equ	3732	;# 
  2251     0E95                     RA5PPS          equ	3733	;# 
  2252     0E9C                     RB4PPS          equ	3740	;# 
  2253     0E9D                     RB5PPS          equ	3741	;# 
  2254     0E9E                     RB6PPS          equ	3742	;# 
  2255     0E9F                     RB7PPS          equ	3743	;# 
  2256     0EA0                     RC0PPS          equ	3744	;# 
  2257     0EA1                     RC1PPS          equ	3745	;# 
  2258     0EA2                     RC2PPS          equ	3746	;# 
  2259     0EA3                     RC3PPS          equ	3747	;# 
  2260     0EA4                     RC4PPS          equ	3748	;# 
  2261     0EA5                     RC5PPS          equ	3749	;# 
  2262     0EA6                     RC6PPS          equ	3750	;# 
  2263     0EA7                     RC7PPS          equ	3751	;# 
  2264     0F0F                     CLCDATA         equ	3855	;# 
  2265     0F10                     CLC1CON         equ	3856	;# 
  2266     0F11                     CLC1POL         equ	3857	;# 
  2267     0F12                     CLC1SEL0        equ	3858	;# 
  2268     0F13                     CLC1SEL1        equ	3859	;# 
  2269     0F14                     CLC1SEL2        equ	3860	;# 
  2270     0F15                     CLC1SEL3        equ	3861	;# 
  2271     0F16                     CLC1GLS0        equ	3862	;# 
  2272     0F17                     CLC1GLS1        equ	3863	;# 
  2273     0F18                     CLC1GLS2        equ	3864	;# 
  2274     0F19                     CLC1GLS3        equ	3865	;# 
  2275     0F1A                     CLC2CON         equ	3866	;# 
  2276     0F1B                     CLC2POL         equ	3867	;# 
  2277     0F1C                     CLC2SEL0        equ	3868	;# 
  2278     0F1D                     CLC2SEL1        equ	3869	;# 
  2279     0F1E                     CLC2SEL2        equ	3870	;# 
  2280     0F1F                     CLC2SEL3        equ	3871	;# 
  2281     0F20                     CLC2GLS0        equ	3872	;# 
  2282     0F21                     CLC2GLS1        equ	3873	;# 
  2283     0F22                     CLC2GLS2        equ	3874	;# 
  2284     0F23                     CLC2GLS3        equ	3875	;# 
  2285     0F24                     CLC3CON         equ	3876	;# 
  2286     0F25                     CLC3POL         equ	3877	;# 
  2287     0F26                     CLC3SEL0        equ	3878	;# 
  2288     0F27                     CLC3SEL1        equ	3879	;# 
  2289     0F28                     CLC3SEL2        equ	3880	;# 
  2290     0F29                     CLC3SEL3        equ	3881	;# 
  2291     0F2A                     CLC3GLS0        equ	3882	;# 
  2292     0F2B                     CLC3GLS1        equ	3883	;# 
  2293     0F2C                     CLC3GLS2        equ	3884	;# 
  2294     0F2D                     CLC3GLS3        equ	3885	;# 
  2295     0F2E                     CLC4CON         equ	3886	;# 
  2296     0F2F                     CLC4POL         equ	3887	;# 
  2297     0F30                     CLC4SEL0        equ	3888	;# 
  2298     0F31                     CLC4SEL1        equ	3889	;# 
  2299     0F32                     CLC4SEL2        equ	3890	;# 
  2300     0F33                     CLC4SEL3        equ	3891	;# 
  2301     0F34                     CLC4GLS0        equ	3892	;# 
  2302     0F35                     CLC4GLS1        equ	3893	;# 
  2303     0F36                     CLC4GLS2        equ	3894	;# 
  2304     0F37                     CLC4GLS3        equ	3895	;# 
  2305     0FE4                     STATUS_SHAD     equ	4068	;# 
  2306     0FE5                     WREG_SHAD       equ	4069	;# 
  2307     0FE6                     BSR_SHAD        equ	4070	;# 
  2308     0FE7                     PCLATH_SHAD     equ	4071	;# 
  2309     0FE8                     FSR0L_SHAD      equ	4072	;# 
  2310     0FE9                     FSR0H_SHAD      equ	4073	;# 
  2311     0FEA                     FSR1L_SHAD      equ	4074	;# 
  2312     0FEB                     FSR1H_SHAD      equ	4075	;# 
  2313     0FED                     STKPTR          equ	4077	;# 
  2314     0FEE                     TOSL            equ	4078	;# 
  2315     0FEF                     TOSH            equ	4079	;# 
  2316     0000                     INDF0           equ	0	;# 
  2317     0001                     INDF1           equ	1	;# 
  2318     0002                     PCL             equ	2	;# 
  2319     0003                     STATUS          equ	3	;# 
  2320     0004                     FSR0L           equ	4	;# 
  2321     0005                     FSR0H           equ	5	;# 
  2322     0006                     FSR1L           equ	6	;# 
  2323     0007                     FSR1H           equ	7	;# 
  2324     0008                     BSR             equ	8	;# 
  2325     0009                     WREG            equ	9	;# 
  2326     000A                     PCLATH          equ	10	;# 
  2327     000B                     INTCON          equ	11	;# 
  2328     000C                     PORTA           equ	12	;# 
  2329     000D                     PORTB           equ	13	;# 
  2330     000E                     PORTC           equ	14	;# 
  2331     0010                     PIR0            equ	16	;# 
  2332     0011                     PIR1            equ	17	;# 
  2333     0012                     PIR2            equ	18	;# 
  2334     0013                     PIR3            equ	19	;# 
  2335     0014                     PIR4            equ	20	;# 
  2336     0015                     TMR0L           equ	21	;# 
  2337     0015                     TMR0            equ	21	;# 
  2338     0016                     TMR0H           equ	22	;# 
  2339     0016                     PR0             equ	22	;# 
  2340     0017                     T0CON0          equ	23	;# 
  2341     0018                     T0CON1          equ	24	;# 
  2342     0019                     TMR1            equ	25	;# 
  2343     0019                     TMR1L           equ	25	;# 
  2344     001A                     TMR1H           equ	26	;# 
  2345     001B                     T1CON           equ	27	;# 
  2346     001C                     T1GCON          equ	28	;# 
  2347     001D                     TMR2            equ	29	;# 
  2348     001E                     PR2             equ	30	;# 
  2349     001F                     T2CON           equ	31	;# 
  2350     008C                     TRISA           equ	140	;# 
  2351     008D                     TRISB           equ	141	;# 
  2352     008E                     TRISC           equ	142	;# 
  2353     0090                     PIE0            equ	144	;# 
  2354     0091                     PIE1            equ	145	;# 
  2355     0092                     PIE2            equ	146	;# 
  2356     0093                     PIE3            equ	147	;# 
  2357     0094                     PIE4            equ	148	;# 
  2358     0097                     WDTCON          equ	151	;# 
  2359     009B                     ADRES           equ	155	;# 
  2360     009B                     ADRESL          equ	155	;# 
  2361     009C                     ADRESH          equ	156	;# 
  2362     009D                     ADCON0          equ	157	;# 
  2363     009E                     ADCON1          equ	158	;# 
  2364     009F                     ADACT           equ	159	;# 
  2365     010C                     LATA            equ	268	;# 
  2366     010D                     LATB            equ	269	;# 
  2367     010E                     LATC            equ	270	;# 
  2368     0111                     CM1CON0         equ	273	;# 
  2369     0112                     CM1CON1         equ	274	;# 
  2370     0113                     CM2CON0         equ	275	;# 
  2371     0114                     CM2CON1         equ	276	;# 
  2372     0115                     CMOUT           equ	277	;# 
  2373     0116                     BORCON          equ	278	;# 
  2374     0117                     FVRCON          equ	279	;# 
  2375     0118                     DACCON0         equ	280	;# 
  2376     0119                     DACCON1         equ	281	;# 
  2377     018C                     ANSELA          equ	396	;# 
  2378     018D                     ANSELB          equ	397	;# 
  2379     018E                     ANSELC          equ	398	;# 
  2380     0197                     VREGCON         equ	407	;# 
  2381     0199                     RC1REG          equ	409	;# 
  2382     0199                     RCREG           equ	409	;# 
  2383     0199                     RCREG1          equ	409	;# 
  2384     019A                     TX1REG          equ	410	;# 
  2385     019A                     TXREG1          equ	410	;# 
  2386     019A                     TXREG           equ	410	;# 
  2387     019B                     SP1BRG          equ	411	;# 
  2388     019B                     SPBRG           equ	411	;# 
  2389     019B                     SP1BRGL         equ	411	;# 
  2390     019B                     SPBRG1          equ	411	;# 
  2391     019B                     SPBRGL          equ	411	;# 
  2392     019C                     SP1BRGH         equ	412	;# 
  2393     019C                     SPBRGH          equ	412	;# 
  2394     019C                     SPBRGH1         equ	412	;# 
  2395     019D                     RC1STA          equ	413	;# 
  2396     019D                     RCSTA1          equ	413	;# 
  2397     019D                     RCSTA           equ	413	;# 
  2398     019E                     TX1STA          equ	414	;# 
  2399     019E                     TXSTA1          equ	414	;# 
  2400     019E                     TXSTA           equ	414	;# 
  2401     019F                     BAUD1CON        equ	415	;# 
  2402     019F                     BAUDCON1        equ	415	;# 
  2403     019F                     BAUDCTL1        equ	415	;# 
  2404     019F                     BAUDCON         equ	415	;# 
  2405     019F                     BAUDCTL         equ	415	;# 
  2406     020C                     WPUA            equ	524	;# 
  2407     020D                     WPUB            equ	525	;# 
  2408     020E                     WPUC            equ	526	;# 
  2409     0211                     SSP1BUF         equ	529	;# 
  2410     0211                     SSPBUF          equ	529	;# 
  2411     0212                     SSP1ADD         equ	530	;# 
  2412     0212                     SSPADD          equ	530	;# 
  2413     0213                     SSP1MSK         equ	531	;# 
  2414     0213                     SSPMSK          equ	531	;# 
  2415     0214                     SSP1STAT        equ	532	;# 
  2416     0214                     SSPSTAT         equ	532	;# 
  2417     0215                     SSP1CON1        equ	533	;# 
  2418     0215                     SSPCON          equ	533	;# 
  2419     0215                     SSPCON1         equ	533	;# 
  2420     0215                     SSP1CON         equ	533	;# 
  2421     0216                     SSP1CON2        equ	534	;# 
  2422     0216                     SSPCON2         equ	534	;# 
  2423     0217                     SSP1CON3        equ	535	;# 
  2424     0217                     SSPCON3         equ	535	;# 
  2425     0219                     SSP2BUF         equ	537	;# 
  2426     021A                     SSP2ADD         equ	538	;# 
  2427     021B                     SSP2MSK         equ	539	;# 
  2428     021C                     SSP2STAT        equ	540	;# 
  2429     021D                     SSP2CON1        equ	541	;# 
  2430     021D                     SSP2CON         equ	541	;# 
  2431     021E                     SSP2CON2        equ	542	;# 
  2432     021F                     SSP2CON3        equ	543	;# 
  2433     028C                     ODCONA          equ	652	;# 
  2434     028D                     ODCONB          equ	653	;# 
  2435     028E                     ODCONC          equ	654	;# 
  2436     0291                     CCPR1           equ	657	;# 
  2437     0291                     CCPR1L          equ	657	;# 
  2438     0292                     CCPR1H          equ	658	;# 
  2439     0293                     CCP1CON         equ	659	;# 
  2440     0294                     CCP1CAP         equ	660	;# 
  2441     0295                     CCPR2           equ	661	;# 
  2442     0295                     CCPR2L          equ	661	;# 
  2443     0296                     CCPR2H          equ	662	;# 
  2444     0297                     CCP2CON         equ	663	;# 
  2445     0298                     CCP2CAP         equ	664	;# 
  2446     029F                     CCPTMRS         equ	671	;# 
  2447     030C                     SLRCONA         equ	780	;# 
  2448     030D                     SLRCONB         equ	781	;# 
  2449     030E                     SLRCONC         equ	782	;# 
  2450     0311                     CCPR3           equ	785	;# 
  2451     0311                     CCPR3L          equ	785	;# 
  2452     0312                     CCPR3H          equ	786	;# 
  2453     0313                     CCP3CON         equ	787	;# 
  2454     0314                     CCP3CAP         equ	788	;# 
  2455     0315                     CCPR4           equ	789	;# 
  2456     0315                     CCPR4L          equ	789	;# 
  2457     0316                     CCPR4H          equ	790	;# 
  2458     0317                     CCP4CON         equ	791	;# 
  2459     0318                     CCP4CAP         equ	792	;# 
  2460     038C                     INLVLA          equ	908	;# 
  2461     038D                     INLVLB          equ	909	;# 
  2462     038E                     INLVLC          equ	910	;# 
  2463     0391                     IOCAP           equ	913	;# 
  2464     0392                     IOCAN           equ	914	;# 
  2465     0393                     IOCAF           equ	915	;# 
  2466     0394                     IOCBP           equ	916	;# 
  2467     0395                     IOCBN           equ	917	;# 
  2468     0396                     IOCBF           equ	918	;# 
  2469     0397                     IOCCP           equ	919	;# 
  2470     0398                     IOCCN           equ	920	;# 
  2471     0399                     IOCCF           equ	921	;# 
  2472     039A                     CLKRCON         equ	922	;# 
  2473     039C                     MDCON           equ	924	;# 
  2474     039D                     MDSRC           equ	925	;# 
  2475     039E                     MDCARH          equ	926	;# 
  2476     039F                     MDCARL          equ	927	;# 
  2477     0411                     TMR3            equ	1041	;# 
  2478     0411                     TMR3L           equ	1041	;# 
  2479     0412                     TMR3H           equ	1042	;# 
  2480     0413                     T3CON           equ	1043	;# 
  2481     0414                     T3GCON          equ	1044	;# 
  2482     0415                     TMR4            equ	1045	;# 
  2483     0416                     PR4             equ	1046	;# 
  2484     0417                     T4CON           equ	1047	;# 
  2485     0418                     TMR5            equ	1048	;# 
  2486     0418                     TMR5L           equ	1048	;# 
  2487     0419                     TMR5H           equ	1049	;# 
  2488     041A                     T5CON           equ	1050	;# 
  2489     041B                     T5GCON          equ	1051	;# 
  2490     041C                     TMR6            equ	1052	;# 
  2491     041D                     PR6             equ	1053	;# 
  2492     041E                     T6CON           equ	1054	;# 
  2493     041F                     CCDCON          equ	1055	;# 
  2494     0498                     NCO1ACC         equ	1176	;# 
  2495     0498                     NCO1ACCL        equ	1176	;# 
  2496     0499                     NCO1ACCH        equ	1177	;# 
  2497     049A                     NCO1ACCU        equ	1178	;# 
  2498     049B                     NCO1INC         equ	1179	;# 
  2499     049B                     NCO1INCL        equ	1179	;# 
  2500     049C                     NCO1INCH        equ	1180	;# 
  2501     049D                     NCO1INCU        equ	1181	;# 
  2502     049E                     NCO1CON         equ	1182	;# 
  2503     049F                     NCO1CLK         equ	1183	;# 
  2504     0617                     PWM5DCL         equ	1559	;# 
  2505     0618                     PWM5DCH         equ	1560	;# 
  2506     0619                     PWM5CON         equ	1561	;# 
  2507     0619                     PWM5CON0        equ	1561	;# 
  2508     061A                     PWM6DCL         equ	1562	;# 
  2509     061B                     PWM6DCH         equ	1563	;# 
  2510     061C                     PWM6CON         equ	1564	;# 
  2511     061C                     PWM6CON0        equ	1564	;# 
  2512     061F                     PWMTMRS         equ	1567	;# 
  2513     0691                     CWG1CLKCON      equ	1681	;# 
  2514     0692                     CWG1DAT         equ	1682	;# 
  2515     0693                     CWG1DBR         equ	1683	;# 
  2516     0694                     CWG1DBF         equ	1684	;# 
  2517     0695                     CWG1CON0        equ	1685	;# 
  2518     0696                     CWG1CON1        equ	1686	;# 
  2519     0697                     CWG1AS0         equ	1687	;# 
  2520     0698                     CWG1AS1         equ	1688	;# 
  2521     0699                     CWG1STR         equ	1689	;# 
  2522     0711                     CWG2CLKCON      equ	1809	;# 
  2523     0712                     CWG2DAT         equ	1810	;# 
  2524     0713                     CWG2DBR         equ	1811	;# 
  2525     0714                     CWG2DBF         equ	1812	;# 
  2526     0715                     CWG2CON0        equ	1813	;# 
  2527     0716                     CWG2CON1        equ	1814	;# 
  2528     0717                     CWG2AS0         equ	1815	;# 
  2529     0718                     CWG2AS1         equ	1816	;# 
  2530     0719                     CWG2STR         equ	1817	;# 
  2531     0891                     NVMADR          equ	2193	;# 
  2532     0891                     EEADR           equ	2193	;# 
  2533     0891                     PMADR           equ	2193	;# 
  2534     0891                     NVMADRL         equ	2193	;# 
  2535     0891                     EEADRL          equ	2193	;# 
  2536     0891                     PMADRL          equ	2193	;# 
  2537     0892                     NVMADRH         equ	2194	;# 
  2538     0892                     EEADRH          equ	2194	;# 
  2539     0892                     PMADRH          equ	2194	;# 
  2540     0893                     NVMDAT          equ	2195	;# 
  2541     0893                     EEDAT           equ	2195	;# 
  2542     0893                     PMDAT           equ	2195	;# 
  2543     0893                     NVMDATL         equ	2195	;# 
  2544     0893                     EEDATL          equ	2195	;# 
  2545     0893                     PMDATL          equ	2195	;# 
  2546     0894                     NVMDATH         equ	2196	;# 
  2547     0894                     EEDATH          equ	2196	;# 
  2548     0894                     PMDATH          equ	2196	;# 
  2549     0895                     NVMCON1         equ	2197	;# 
  2550     0895                     EECON1          equ	2197	;# 
  2551     0895                     PMCON1          equ	2197	;# 
  2552     0896                     NVMCON2         equ	2198	;# 
  2553     0896                     EECON2          equ	2198	;# 
  2554     0896                     PMCON2          equ	2198	;# 
  2555     089B                     PCON0           equ	2203	;# 
  2556     0911                     PMD0            equ	2321	;# 
  2557     0912                     PMD1            equ	2322	;# 
  2558     0913                     PMD2            equ	2323	;# 
  2559     0914                     PMD3            equ	2324	;# 
  2560     0915                     PMD4            equ	2325	;# 
  2561     0916                     PMD5            equ	2326	;# 
  2562     0918                     CPUDOZE         equ	2328	;# 
  2563     0919                     OSCCON1         equ	2329	;# 
  2564     091A                     OSCCON2         equ	2330	;# 
  2565     091B                     OSCCON3         equ	2331	;# 
  2566     091C                     OSCSTAT1        equ	2332	;# 
  2567     091D                     OSCEN           equ	2333	;# 
  2568     091E                     OSCTUNE         equ	2334	;# 
  2569     091F                     OSCFRQ          equ	2335	;# 
  2570     0E0F                     PPSLOCK         equ	3599	;# 
  2571     0E10                     INTPPS          equ	3600	;# 
  2572     0E11                     T0CKIPPS        equ	3601	;# 
  2573     0E12                     T1CKIPPS        equ	3602	;# 
  2574     0E13                     T1GPPS          equ	3603	;# 
  2575     0E14                     CCP1PPS         equ	3604	;# 
  2576     0E15                     CCP2PPS         equ	3605	;# 
  2577     0E16                     CCP3PPS         equ	3606	;# 
  2578     0E17                     CCP4PPS         equ	3607	;# 
  2579     0E18                     CWG1PPS         equ	3608	;# 
  2580     0E19                     CWG2PPS         equ	3609	;# 
  2581     0E1A                     MDCIN1PPS       equ	3610	;# 
  2582     0E1B                     MDCIN2PPS       equ	3611	;# 
  2583     0E1C                     MDMINPPS        equ	3612	;# 
  2584     0E1D                     SSP2CLKPPS      equ	3613	;# 
  2585     0E1E                     SSP2DATPPS      equ	3614	;# 
  2586     0E1F                     SSP2SSPPS       equ	3615	;# 
  2587     0E20                     SSP1CLKPPS      equ	3616	;# 
  2588     0E21                     SSP1DATPPS      equ	3617	;# 
  2589     0E22                     SSP1SSPPS       equ	3618	;# 
  2590     0E24                     RXPPS           equ	3620	;# 
  2591     0E25                     TXPPS           equ	3621	;# 
  2592     0E28                     CLCIN0PPS       equ	3624	;# 
  2593     0E29                     CLCIN1PPS       equ	3625	;# 
  2594     0E2A                     CLCIN2PPS       equ	3626	;# 
  2595     0E2B                     CLCIN3PPS       equ	3627	;# 
  2596     0E2C                     T3CKIPPS        equ	3628	;# 
  2597     0E2D                     T3GPPS          equ	3629	;# 
  2598     0E2E                     T5CKIPPS        equ	3630	;# 
  2599     0E2F                     T5GPPS          equ	3631	;# 
  2600     0E90                     RA0PPS          equ	3728	;# 
  2601     0E91                     RA1PPS          equ	3729	;# 
  2602     0E92                     RA2PPS          equ	3730	;# 
  2603     0E94                     RA4PPS          equ	3732	;# 
  2604     0E95                     RA5PPS          equ	3733	;# 
  2605     0E9C                     RB4PPS          equ	3740	;# 
  2606     0E9D                     RB5PPS          equ	3741	;# 
  2607     0E9E                     RB6PPS          equ	3742	;# 
  2608     0E9F                     RB7PPS          equ	3743	;# 
  2609     0EA0                     RC0PPS          equ	3744	;# 
  2610     0EA1                     RC1PPS          equ	3745	;# 
  2611     0EA2                     RC2PPS          equ	3746	;# 
  2612     0EA3                     RC3PPS          equ	3747	;# 
  2613     0EA4                     RC4PPS          equ	3748	;# 
  2614     0EA5                     RC5PPS          equ	3749	;# 
  2615     0EA6                     RC6PPS          equ	3750	;# 
  2616     0EA7                     RC7PPS          equ	3751	;# 
  2617     0F0F                     CLCDATA         equ	3855	;# 
  2618     0F10                     CLC1CON         equ	3856	;# 
  2619     0F11                     CLC1POL         equ	3857	;# 
  2620     0F12                     CLC1SEL0        equ	3858	;# 
  2621     0F13                     CLC1SEL1        equ	3859	;# 
  2622     0F14                     CLC1SEL2        equ	3860	;# 
  2623     0F15                     CLC1SEL3        equ	3861	;# 
  2624     0F16                     CLC1GLS0        equ	3862	;# 
  2625     0F17                     CLC1GLS1        equ	3863	;# 
  2626     0F18                     CLC1GLS2        equ	3864	;# 
  2627     0F19                     CLC1GLS3        equ	3865	;# 
  2628     0F1A                     CLC2CON         equ	3866	;# 
  2629     0F1B                     CLC2POL         equ	3867	;# 
  2630     0F1C                     CLC2SEL0        equ	3868	;# 
  2631     0F1D                     CLC2SEL1        equ	3869	;# 
  2632     0F1E                     CLC2SEL2        equ	3870	;# 
  2633     0F1F                     CLC2SEL3        equ	3871	;# 
  2634     0F20                     CLC2GLS0        equ	3872	;# 
  2635     0F21                     CLC2GLS1        equ	3873	;# 
  2636     0F22                     CLC2GLS2        equ	3874	;# 
  2637     0F23                     CLC2GLS3        equ	3875	;# 
  2638     0F24                     CLC3CON         equ	3876	;# 
  2639     0F25                     CLC3POL         equ	3877	;# 
  2640     0F26                     CLC3SEL0        equ	3878	;# 
  2641     0F27                     CLC3SEL1        equ	3879	;# 
  2642     0F28                     CLC3SEL2        equ	3880	;# 
  2643     0F29                     CLC3SEL3        equ	3881	;# 
  2644     0F2A                     CLC3GLS0        equ	3882	;# 
  2645     0F2B                     CLC3GLS1        equ	3883	;# 
  2646     0F2C                     CLC3GLS2        equ	3884	;# 
  2647     0F2D                     CLC3GLS3        equ	3885	;# 
  2648     0F2E                     CLC4CON         equ	3886	;# 
  2649     0F2F                     CLC4POL         equ	3887	;# 
  2650     0F30                     CLC4SEL0        equ	3888	;# 
  2651     0F31                     CLC4SEL1        equ	3889	;# 
  2652     0F32                     CLC4SEL2        equ	3890	;# 
  2653     0F33                     CLC4SEL3        equ	3891	;# 
  2654     0F34                     CLC4GLS0        equ	3892	;# 
  2655     0F35                     CLC4GLS1        equ	3893	;# 
  2656     0F36                     CLC4GLS2        equ	3894	;# 
  2657     0F37                     CLC4GLS3        equ	3895	;# 
  2658     0FE4                     STATUS_SHAD     equ	4068	;# 
  2659     0FE5                     WREG_SHAD       equ	4069	;# 
  2660     0FE6                     BSR_SHAD        equ	4070	;# 
  2661     0FE7                     PCLATH_SHAD     equ	4071	;# 
  2662     0FE8                     FSR0L_SHAD      equ	4072	;# 
  2663     0FE9                     FSR0H_SHAD      equ	4073	;# 
  2664     0FEA                     FSR1L_SHAD      equ	4074	;# 
  2665     0FEB                     FSR1H_SHAD      equ	4075	;# 
  2666     0FED                     STKPTR          equ	4077	;# 
  2667     0FEE                     TOSL            equ	4078	;# 
  2668     0FEF                     TOSH            equ	4079	;# 
  2669     0000                     INDF0           equ	0	;# 
  2670     0001                     INDF1           equ	1	;# 
  2671     0002                     PCL             equ	2	;# 
  2672     0003                     STATUS          equ	3	;# 
  2673     0004                     FSR0L           equ	4	;# 
  2674     0005                     FSR0H           equ	5	;# 
  2675     0006                     FSR1L           equ	6	;# 
  2676     0007                     FSR1H           equ	7	;# 
  2677     0008                     BSR             equ	8	;# 
  2678     0009                     WREG            equ	9	;# 
  2679     000A                     PCLATH          equ	10	;# 
  2680     000B                     INTCON          equ	11	;# 
  2681     000C                     PORTA           equ	12	;# 
  2682     000D                     PORTB           equ	13	;# 
  2683     000E                     PORTC           equ	14	;# 
  2684     0010                     PIR0            equ	16	;# 
  2685     0011                     PIR1            equ	17	;# 
  2686     0012                     PIR2            equ	18	;# 
  2687     0013                     PIR3            equ	19	;# 
  2688     0014                     PIR4            equ	20	;# 
  2689     0015                     TMR0L           equ	21	;# 
  2690     0015                     TMR0            equ	21	;# 
  2691     0016                     TMR0H           equ	22	;# 
  2692     0016                     PR0             equ	22	;# 
  2693     0017                     T0CON0          equ	23	;# 
  2694     0018                     T0CON1          equ	24	;# 
  2695     0019                     TMR1            equ	25	;# 
  2696     0019                     TMR1L           equ	25	;# 
  2697     001A                     TMR1H           equ	26	;# 
  2698     001B                     T1CON           equ	27	;# 
  2699     001C                     T1GCON          equ	28	;# 
  2700     001D                     TMR2            equ	29	;# 
  2701     001E                     PR2             equ	30	;# 
  2702     001F                     T2CON           equ	31	;# 
  2703     008C                     TRISA           equ	140	;# 
  2704     008D                     TRISB           equ	141	;# 
  2705     008E                     TRISC           equ	142	;# 
  2706     0090                     PIE0            equ	144	;# 
  2707     0091                     PIE1            equ	145	;# 
  2708     0092                     PIE2            equ	146	;# 
  2709     0093                     PIE3            equ	147	;# 
  2710     0094                     PIE4            equ	148	;# 
  2711     0097                     WDTCON          equ	151	;# 
  2712     009B                     ADRES           equ	155	;# 
  2713     009B                     ADRESL          equ	155	;# 
  2714     009C                     ADRESH          equ	156	;# 
  2715     009D                     ADCON0          equ	157	;# 
  2716     009E                     ADCON1          equ	158	;# 
  2717     009F                     ADACT           equ	159	;# 
  2718     010C                     LATA            equ	268	;# 
  2719     010D                     LATB            equ	269	;# 
  2720     010E                     LATC            equ	270	;# 
  2721     0111                     CM1CON0         equ	273	;# 
  2722     0112                     CM1CON1         equ	274	;# 
  2723     0113                     CM2CON0         equ	275	;# 
  2724     0114                     CM2CON1         equ	276	;# 
  2725     0115                     CMOUT           equ	277	;# 
  2726     0116                     BORCON          equ	278	;# 
  2727     0117                     FVRCON          equ	279	;# 
  2728     0118                     DACCON0         equ	280	;# 
  2729     0119                     DACCON1         equ	281	;# 
  2730     018C                     ANSELA          equ	396	;# 
  2731     018D                     ANSELB          equ	397	;# 
  2732     018E                     ANSELC          equ	398	;# 
  2733     0197                     VREGCON         equ	407	;# 
  2734     0199                     RC1REG          equ	409	;# 
  2735     0199                     RCREG           equ	409	;# 
  2736     0199                     RCREG1          equ	409	;# 
  2737     019A                     TX1REG          equ	410	;# 
  2738     019A                     TXREG1          equ	410	;# 
  2739     019A                     TXREG           equ	410	;# 
  2740     019B                     SP1BRG          equ	411	;# 
  2741     019B                     SPBRG           equ	411	;# 
  2742     019B                     SP1BRGL         equ	411	;# 
  2743     019B                     SPBRG1          equ	411	;# 
  2744     019B                     SPBRGL          equ	411	;# 
  2745     019C                     SP1BRGH         equ	412	;# 
  2746     019C                     SPBRGH          equ	412	;# 
  2747     019C                     SPBRGH1         equ	412	;# 
  2748     019D                     RC1STA          equ	413	;# 
  2749     019D                     RCSTA1          equ	413	;# 
  2750     019D                     RCSTA           equ	413	;# 
  2751     019E                     TX1STA          equ	414	;# 
  2752     019E                     TXSTA1          equ	414	;# 
  2753     019E                     TXSTA           equ	414	;# 
  2754     019F                     BAUD1CON        equ	415	;# 
  2755     019F                     BAUDCON1        equ	415	;# 
  2756     019F                     BAUDCTL1        equ	415	;# 
  2757     019F                     BAUDCON         equ	415	;# 
  2758     019F                     BAUDCTL         equ	415	;# 
  2759     020C                     WPUA            equ	524	;# 
  2760     020D                     WPUB            equ	525	;# 
  2761     020E                     WPUC            equ	526	;# 
  2762     0211                     SSP1BUF         equ	529	;# 
  2763     0211                     SSPBUF          equ	529	;# 
  2764     0212                     SSP1ADD         equ	530	;# 
  2765     0212                     SSPADD          equ	530	;# 
  2766     0213                     SSP1MSK         equ	531	;# 
  2767     0213                     SSPMSK          equ	531	;# 
  2768     0214                     SSP1STAT        equ	532	;# 
  2769     0214                     SSPSTAT         equ	532	;# 
  2770     0215                     SSP1CON1        equ	533	;# 
  2771     0215                     SSPCON          equ	533	;# 
  2772     0215                     SSPCON1         equ	533	;# 
  2773     0215                     SSP1CON         equ	533	;# 
  2774     0216                     SSP1CON2        equ	534	;# 
  2775     0216                     SSPCON2         equ	534	;# 
  2776     0217                     SSP1CON3        equ	535	;# 
  2777     0217                     SSPCON3         equ	535	;# 
  2778     0219                     SSP2BUF         equ	537	;# 
  2779     021A                     SSP2ADD         equ	538	;# 
  2780     021B                     SSP2MSK         equ	539	;# 
  2781     021C                     SSP2STAT        equ	540	;# 
  2782     021D                     SSP2CON1        equ	541	;# 
  2783     021D                     SSP2CON         equ	541	;# 
  2784     021E                     SSP2CON2        equ	542	;# 
  2785     021F                     SSP2CON3        equ	543	;# 
  2786     028C                     ODCONA          equ	652	;# 
  2787     028D                     ODCONB          equ	653	;# 
  2788     028E                     ODCONC          equ	654	;# 
  2789     0291                     CCPR1           equ	657	;# 
  2790     0291                     CCPR1L          equ	657	;# 
  2791     0292                     CCPR1H          equ	658	;# 
  2792     0293                     CCP1CON         equ	659	;# 
  2793     0294                     CCP1CAP         equ	660	;# 
  2794     0295                     CCPR2           equ	661	;# 
  2795     0295                     CCPR2L          equ	661	;# 
  2796     0296                     CCPR2H          equ	662	;# 
  2797     0297                     CCP2CON         equ	663	;# 
  2798     0298                     CCP2CAP         equ	664	;# 
  2799     029F                     CCPTMRS         equ	671	;# 
  2800     030C                     SLRCONA         equ	780	;# 
  2801     030D                     SLRCONB         equ	781	;# 
  2802     030E                     SLRCONC         equ	782	;# 
  2803     0311                     CCPR3           equ	785	;# 
  2804     0311                     CCPR3L          equ	785	;# 
  2805     0312                     CCPR3H          equ	786	;# 
  2806     0313                     CCP3CON         equ	787	;# 
  2807     0314                     CCP3CAP         equ	788	;# 
  2808     0315                     CCPR4           equ	789	;# 
  2809     0315                     CCPR4L          equ	789	;# 
  2810     0316                     CCPR4H          equ	790	;# 
  2811     0317                     CCP4CON         equ	791	;# 
  2812     0318                     CCP4CAP         equ	792	;# 
  2813     038C                     INLVLA          equ	908	;# 
  2814     038D                     INLVLB          equ	909	;# 
  2815     038E                     INLVLC          equ	910	;# 
  2816     0391                     IOCAP           equ	913	;# 
  2817     0392                     IOCAN           equ	914	;# 
  2818     0393                     IOCAF           equ	915	;# 
  2819     0394                     IOCBP           equ	916	;# 
  2820     0395                     IOCBN           equ	917	;# 
  2821     0396                     IOCBF           equ	918	;# 
  2822     0397                     IOCCP           equ	919	;# 
  2823     0398                     IOCCN           equ	920	;# 
  2824     0399                     IOCCF           equ	921	;# 
  2825     039A                     CLKRCON         equ	922	;# 
  2826     039C                     MDCON           equ	924	;# 
  2827     039D                     MDSRC           equ	925	;# 
  2828     039E                     MDCARH          equ	926	;# 
  2829     039F                     MDCARL          equ	927	;# 
  2830     0411                     TMR3            equ	1041	;# 
  2831     0411                     TMR3L           equ	1041	;# 
  2832     0412                     TMR3H           equ	1042	;# 
  2833     0413                     T3CON           equ	1043	;# 
  2834     0414                     T3GCON          equ	1044	;# 
  2835     0415                     TMR4            equ	1045	;# 
  2836     0416                     PR4             equ	1046	;# 
  2837     0417                     T4CON           equ	1047	;# 
  2838     0418                     TMR5            equ	1048	;# 
  2839     0418                     TMR5L           equ	1048	;# 
  2840     0419                     TMR5H           equ	1049	;# 
  2841     041A                     T5CON           equ	1050	;# 
  2842     041B                     T5GCON          equ	1051	;# 
  2843     041C                     TMR6            equ	1052	;# 
  2844     041D                     PR6             equ	1053	;# 
  2845     041E                     T6CON           equ	1054	;# 
  2846     041F                     CCDCON          equ	1055	;# 
  2847     0498                     NCO1ACC         equ	1176	;# 
  2848     0498                     NCO1ACCL        equ	1176	;# 
  2849     0499                     NCO1ACCH        equ	1177	;# 
  2850     049A                     NCO1ACCU        equ	1178	;# 
  2851     049B                     NCO1INC         equ	1179	;# 
  2852     049B                     NCO1INCL        equ	1179	;# 
  2853     049C                     NCO1INCH        equ	1180	;# 
  2854     049D                     NCO1INCU        equ	1181	;# 
  2855     049E                     NCO1CON         equ	1182	;# 
  2856     049F                     NCO1CLK         equ	1183	;# 
  2857     0617                     PWM5DCL         equ	1559	;# 
  2858     0618                     PWM5DCH         equ	1560	;# 
  2859     0619                     PWM5CON         equ	1561	;# 
  2860     0619                     PWM5CON0        equ	1561	;# 
  2861     061A                     PWM6DCL         equ	1562	;# 
  2862     061B                     PWM6DCH         equ	1563	;# 
  2863     061C                     PWM6CON         equ	1564	;# 
  2864     061C                     PWM6CON0        equ	1564	;# 
  2865     061F                     PWMTMRS         equ	1567	;# 
  2866     0691                     CWG1CLKCON      equ	1681	;# 
  2867     0692                     CWG1DAT         equ	1682	;# 
  2868     0693                     CWG1DBR         equ	1683	;# 
  2869     0694                     CWG1DBF         equ	1684	;# 
  2870     0695                     CWG1CON0        equ	1685	;# 
  2871     0696                     CWG1CON1        equ	1686	;# 
  2872     0697                     CWG1AS0         equ	1687	;# 
  2873     0698                     CWG1AS1         equ	1688	;# 
  2874     0699                     CWG1STR         equ	1689	;# 
  2875     0711                     CWG2CLKCON      equ	1809	;# 
  2876     0712                     CWG2DAT         equ	1810	;# 
  2877     0713                     CWG2DBR         equ	1811	;# 
  2878     0714                     CWG2DBF         equ	1812	;# 
  2879     0715                     CWG2CON0        equ	1813	;# 
  2880     0716                     CWG2CON1        equ	1814	;# 
  2881     0717                     CWG2AS0         equ	1815	;# 
  2882     0718                     CWG2AS1         equ	1816	;# 
  2883     0719                     CWG2STR         equ	1817	;# 
  2884     0891                     NVMADR          equ	2193	;# 
  2885     0891                     EEADR           equ	2193	;# 
  2886     0891                     PMADR           equ	2193	;# 
  2887     0891                     NVMADRL         equ	2193	;# 
  2888     0891                     EEADRL          equ	2193	;# 
  2889     0891                     PMADRL          equ	2193	;# 
  2890     0892                     NVMADRH         equ	2194	;# 
  2891     0892                     EEADRH          equ	2194	;# 
  2892     0892                     PMADRH          equ	2194	;# 
  2893     0893                     NVMDAT          equ	2195	;# 
  2894     0893                     EEDAT           equ	2195	;# 
  2895     0893                     PMDAT           equ	2195	;# 
  2896     0893                     NVMDATL         equ	2195	;# 
  2897     0893                     EEDATL          equ	2195	;# 
  2898     0893                     PMDATL          equ	2195	;# 
  2899     0894                     NVMDATH         equ	2196	;# 
  2900     0894                     EEDATH          equ	2196	;# 
  2901     0894                     PMDATH          equ	2196	;# 
  2902     0895                     NVMCON1         equ	2197	;# 
  2903     0895                     EECON1          equ	2197	;# 
  2904     0895                     PMCON1          equ	2197	;# 
  2905     0896                     NVMCON2         equ	2198	;# 
  2906     0896                     EECON2          equ	2198	;# 
  2907     0896                     PMCON2          equ	2198	;# 
  2908     089B                     PCON0           equ	2203	;# 
  2909     0911                     PMD0            equ	2321	;# 
  2910     0912                     PMD1            equ	2322	;# 
  2911     0913                     PMD2            equ	2323	;# 
  2912     0914                     PMD3            equ	2324	;# 
  2913     0915                     PMD4            equ	2325	;# 
  2914     0916                     PMD5            equ	2326	;# 
  2915     0918                     CPUDOZE         equ	2328	;# 
  2916     0919                     OSCCON1         equ	2329	;# 
  2917     091A                     OSCCON2         equ	2330	;# 
  2918     091B                     OSCCON3         equ	2331	;# 
  2919     091C                     OSCSTAT1        equ	2332	;# 
  2920     091D                     OSCEN           equ	2333	;# 
  2921     091E                     OSCTUNE         equ	2334	;# 
  2922     091F                     OSCFRQ          equ	2335	;# 
  2923     0E0F                     PPSLOCK         equ	3599	;# 
  2924     0E10                     INTPPS          equ	3600	;# 
  2925     0E11                     T0CKIPPS        equ	3601	;# 
  2926     0E12                     T1CKIPPS        equ	3602	;# 
  2927     0E13                     T1GPPS          equ	3603	;# 
  2928     0E14                     CCP1PPS         equ	3604	;# 
  2929     0E15                     CCP2PPS         equ	3605	;# 
  2930     0E16                     CCP3PPS         equ	3606	;# 
  2931     0E17                     CCP4PPS         equ	3607	;# 
  2932     0E18                     CWG1PPS         equ	3608	;# 
  2933     0E19                     CWG2PPS         equ	3609	;# 
  2934     0E1A                     MDCIN1PPS       equ	3610	;# 
  2935     0E1B                     MDCIN2PPS       equ	3611	;# 
  2936     0E1C                     MDMINPPS        equ	3612	;# 
  2937     0E1D                     SSP2CLKPPS      equ	3613	;# 
  2938     0E1E                     SSP2DATPPS      equ	3614	;# 
  2939     0E1F                     SSP2SSPPS       equ	3615	;# 
  2940     0E20                     SSP1CLKPPS      equ	3616	;# 
  2941     0E21                     SSP1DATPPS      equ	3617	;# 
  2942     0E22                     SSP1SSPPS       equ	3618	;# 
  2943     0E24                     RXPPS           equ	3620	;# 
  2944     0E25                     TXPPS           equ	3621	;# 
  2945     0E28                     CLCIN0PPS       equ	3624	;# 
  2946     0E29                     CLCIN1PPS       equ	3625	;# 
  2947     0E2A                     CLCIN2PPS       equ	3626	;# 
  2948     0E2B                     CLCIN3PPS       equ	3627	;# 
  2949     0E2C                     T3CKIPPS        equ	3628	;# 
  2950     0E2D                     T3GPPS          equ	3629	;# 
  2951     0E2E                     T5CKIPPS        equ	3630	;# 
  2952     0E2F                     T5GPPS          equ	3631	;# 
  2953     0E90                     RA0PPS          equ	3728	;# 
  2954     0E91                     RA1PPS          equ	3729	;# 
  2955     0E92                     RA2PPS          equ	3730	;# 
  2956     0E94                     RA4PPS          equ	3732	;# 
  2957     0E95                     RA5PPS          equ	3733	;# 
  2958     0E9C                     RB4PPS          equ	3740	;# 
  2959     0E9D                     RB5PPS          equ	3741	;# 
  2960     0E9E                     RB6PPS          equ	3742	;# 
  2961     0E9F                     RB7PPS          equ	3743	;# 
  2962     0EA0                     RC0PPS          equ	3744	;# 
  2963     0EA1                     RC1PPS          equ	3745	;# 
  2964     0EA2                     RC2PPS          equ	3746	;# 
  2965     0EA3                     RC3PPS          equ	3747	;# 
  2966     0EA4                     RC4PPS          equ	3748	;# 
  2967     0EA5                     RC5PPS          equ	3749	;# 
  2968     0EA6                     RC6PPS          equ	3750	;# 
  2969     0EA7                     RC7PPS          equ	3751	;# 
  2970     0F0F                     CLCDATA         equ	3855	;# 
  2971     0F10                     CLC1CON         equ	3856	;# 
  2972     0F11                     CLC1POL         equ	3857	;# 
  2973     0F12                     CLC1SEL0        equ	3858	;# 
  2974     0F13                     CLC1SEL1        equ	3859	;# 
  2975     0F14                     CLC1SEL2        equ	3860	;# 
  2976     0F15                     CLC1SEL3        equ	3861	;# 
  2977     0F16                     CLC1GLS0        equ	3862	;# 
  2978     0F17                     CLC1GLS1        equ	3863	;# 
  2979     0F18                     CLC1GLS2        equ	3864	;# 
  2980     0F19                     CLC1GLS3        equ	3865	;# 
  2981     0F1A                     CLC2CON         equ	3866	;# 
  2982     0F1B                     CLC2POL         equ	3867	;# 
  2983     0F1C                     CLC2SEL0        equ	3868	;# 
  2984     0F1D                     CLC2SEL1        equ	3869	;# 
  2985     0F1E                     CLC2SEL2        equ	3870	;# 
  2986     0F1F                     CLC2SEL3        equ	3871	;# 
  2987     0F20                     CLC2GLS0        equ	3872	;# 
  2988     0F21                     CLC2GLS1        equ	3873	;# 
  2989     0F22                     CLC2GLS2        equ	3874	;# 
  2990     0F23                     CLC2GLS3        equ	3875	;# 
  2991     0F24                     CLC3CON         equ	3876	;# 
  2992     0F25                     CLC3POL         equ	3877	;# 
  2993     0F26                     CLC3SEL0        equ	3878	;# 
  2994     0F27                     CLC3SEL1        equ	3879	;# 
  2995     0F28                     CLC3SEL2        equ	3880	;# 
  2996     0F29                     CLC3SEL3        equ	3881	;# 
  2997     0F2A                     CLC3GLS0        equ	3882	;# 
  2998     0F2B                     CLC3GLS1        equ	3883	;# 
  2999     0F2C                     CLC3GLS2        equ	3884	;# 
  3000     0F2D                     CLC3GLS3        equ	3885	;# 
  3001     0F2E                     CLC4CON         equ	3886	;# 
  3002     0F2F                     CLC4POL         equ	3887	;# 
  3003     0F30                     CLC4SEL0        equ	3888	;# 
  3004     0F31                     CLC4SEL1        equ	3889	;# 
  3005     0F32                     CLC4SEL2        equ	3890	;# 
  3006     0F33                     CLC4SEL3        equ	3891	;# 
  3007     0F34                     CLC4GLS0        equ	3892	;# 
  3008     0F35                     CLC4GLS1        equ	3893	;# 
  3009     0F36                     CLC4GLS2        equ	3894	;# 
  3010     0F37                     CLC4GLS3        equ	3895	;# 
  3011     0FE4                     STATUS_SHAD     equ	4068	;# 
  3012     0FE5                     WREG_SHAD       equ	4069	;# 
  3013     0FE6                     BSR_SHAD        equ	4070	;# 
  3014     0FE7                     PCLATH_SHAD     equ	4071	;# 
  3015     0FE8                     FSR0L_SHAD      equ	4072	;# 
  3016     0FE9                     FSR0H_SHAD      equ	4073	;# 
  3017     0FEA                     FSR1L_SHAD      equ	4074	;# 
  3018     0FEB                     FSR1H_SHAD      equ	4075	;# 
  3019     0FED                     STKPTR          equ	4077	;# 
  3020     0FEE                     TOSL            equ	4078	;# 
  3021     0FEF                     TOSH            equ	4079	;# 
  3022     0000                     INDF0           equ	0	;# 
  3023     0001                     INDF1           equ	1	;# 
  3024     0002                     PCL             equ	2	;# 
  3025     0003                     STATUS          equ	3	;# 
  3026     0004                     FSR0L           equ	4	;# 
  3027     0005                     FSR0H           equ	5	;# 
  3028     0006                     FSR1L           equ	6	;# 
  3029     0007                     FSR1H           equ	7	;# 
  3030     0008                     BSR             equ	8	;# 
  3031     0009                     WREG            equ	9	;# 
  3032     000A                     PCLATH          equ	10	;# 
  3033     000B                     INTCON          equ	11	;# 
  3034     000C                     PORTA           equ	12	;# 
  3035     000D                     PORTB           equ	13	;# 
  3036     000E                     PORTC           equ	14	;# 
  3037     0010                     PIR0            equ	16	;# 
  3038     0011                     PIR1            equ	17	;# 
  3039     0012                     PIR2            equ	18	;# 
  3040     0013                     PIR3            equ	19	;# 
  3041     0014                     PIR4            equ	20	;# 
  3042     0015                     TMR0L           equ	21	;# 
  3043     0015                     TMR0            equ	21	;# 
  3044     0016                     TMR0H           equ	22	;# 
  3045     0016                     PR0             equ	22	;# 
  3046     0017                     T0CON0          equ	23	;# 
  3047     0018                     T0CON1          equ	24	;# 
  3048     0019                     TMR1            equ	25	;# 
  3049     0019                     TMR1L           equ	25	;# 
  3050     001A                     TMR1H           equ	26	;# 
  3051     001B                     T1CON           equ	27	;# 
  3052     001C                     T1GCON          equ	28	;# 
  3053     001D                     TMR2            equ	29	;# 
  3054     001E                     PR2             equ	30	;# 
  3055     001F                     T2CON           equ	31	;# 
  3056     008C                     TRISA           equ	140	;# 
  3057     008D                     TRISB           equ	141	;# 
  3058     008E                     TRISC           equ	142	;# 
  3059     0090                     PIE0            equ	144	;# 
  3060     0091                     PIE1            equ	145	;# 
  3061     0092                     PIE2            equ	146	;# 
  3062     0093                     PIE3            equ	147	;# 
  3063     0094                     PIE4            equ	148	;# 
  3064     0097                     WDTCON          equ	151	;# 
  3065     009B                     ADRES           equ	155	;# 
  3066     009B                     ADRESL          equ	155	;# 
  3067     009C                     ADRESH          equ	156	;# 
  3068     009D                     ADCON0          equ	157	;# 
  3069     009E                     ADCON1          equ	158	;# 
  3070     009F                     ADACT           equ	159	;# 
  3071     010C                     LATA            equ	268	;# 
  3072     010D                     LATB            equ	269	;# 
  3073     010E                     LATC            equ	270	;# 
  3074     0111                     CM1CON0         equ	273	;# 
  3075     0112                     CM1CON1         equ	274	;# 
  3076     0113                     CM2CON0         equ	275	;# 
  3077     0114                     CM2CON1         equ	276	;# 
  3078     0115                     CMOUT           equ	277	;# 
  3079     0116                     BORCON          equ	278	;# 
  3080     0117                     FVRCON          equ	279	;# 
  3081     0118                     DACCON0         equ	280	;# 
  3082     0119                     DACCON1         equ	281	;# 
  3083     018C                     ANSELA          equ	396	;# 
  3084     018D                     ANSELB          equ	397	;# 
  3085     018E                     ANSELC          equ	398	;# 
  3086     0197                     VREGCON         equ	407	;# 
  3087     0199                     RC1REG          equ	409	;# 
  3088     0199                     RCREG           equ	409	;# 
  3089     0199                     RCREG1          equ	409	;# 
  3090     019A                     TX1REG          equ	410	;# 
  3091     019A                     TXREG1          equ	410	;# 
  3092     019A                     TXREG           equ	410	;# 
  3093     019B                     SP1BRG          equ	411	;# 
  3094     019B                     SPBRG           equ	411	;# 
  3095     019B                     SP1BRGL         equ	411	;# 
  3096     019B                     SPBRG1          equ	411	;# 
  3097     019B                     SPBRGL          equ	411	;# 
  3098     019C                     SP1BRGH         equ	412	;# 
  3099     019C                     SPBRGH          equ	412	;# 
  3100     019C                     SPBRGH1         equ	412	;# 
  3101     019D                     RC1STA          equ	413	;# 
  3102     019D                     RCSTA1          equ	413	;# 
  3103     019D                     RCSTA           equ	413	;# 
  3104     019E                     TX1STA          equ	414	;# 
  3105     019E                     TXSTA1          equ	414	;# 
  3106     019E                     TXSTA           equ	414	;# 
  3107     019F                     BAUD1CON        equ	415	;# 
  3108     019F                     BAUDCON1        equ	415	;# 
  3109     019F                     BAUDCTL1        equ	415	;# 
  3110     019F                     BAUDCON         equ	415	;# 
  3111     019F                     BAUDCTL         equ	415	;# 
  3112     020C                     WPUA            equ	524	;# 
  3113     020D                     WPUB            equ	525	;# 
  3114     020E                     WPUC            equ	526	;# 
  3115     0211                     SSP1BUF         equ	529	;# 
  3116     0211                     SSPBUF          equ	529	;# 
  3117     0212                     SSP1ADD         equ	530	;# 
  3118     0212                     SSPADD          equ	530	;# 
  3119     0213                     SSP1MSK         equ	531	;# 
  3120     0213                     SSPMSK          equ	531	;# 
  3121     0214                     SSP1STAT        equ	532	;# 
  3122     0214                     SSPSTAT         equ	532	;# 
  3123     0215                     SSP1CON1        equ	533	;# 
  3124     0215                     SSPCON          equ	533	;# 
  3125     0215                     SSPCON1         equ	533	;# 
  3126     0215                     SSP1CON         equ	533	;# 
  3127     0216                     SSP1CON2        equ	534	;# 
  3128     0216                     SSPCON2         equ	534	;# 
  3129     0217                     SSP1CON3        equ	535	;# 
  3130     0217                     SSPCON3         equ	535	;# 
  3131     0219                     SSP2BUF         equ	537	;# 
  3132     021A                     SSP2ADD         equ	538	;# 
  3133     021B                     SSP2MSK         equ	539	;# 
  3134     021C                     SSP2STAT        equ	540	;# 
  3135     021D                     SSP2CON1        equ	541	;# 
  3136     021D                     SSP2CON         equ	541	;# 
  3137     021E                     SSP2CON2        equ	542	;# 
  3138     021F                     SSP2CON3        equ	543	;# 
  3139     028C                     ODCONA          equ	652	;# 
  3140     028D                     ODCONB          equ	653	;# 
  3141     028E                     ODCONC          equ	654	;# 
  3142     0291                     CCPR1           equ	657	;# 
  3143     0291                     CCPR1L          equ	657	;# 
  3144     0292                     CCPR1H          equ	658	;# 
  3145     0293                     CCP1CON         equ	659	;# 
  3146     0294                     CCP1CAP         equ	660	;# 
  3147     0295                     CCPR2           equ	661	;# 
  3148     0295                     CCPR2L          equ	661	;# 
  3149     0296                     CCPR2H          equ	662	;# 
  3150     0297                     CCP2CON         equ	663	;# 
  3151     0298                     CCP2CAP         equ	664	;# 
  3152     029F                     CCPTMRS         equ	671	;# 
  3153     030C                     SLRCONA         equ	780	;# 
  3154     030D                     SLRCONB         equ	781	;# 
  3155     030E                     SLRCONC         equ	782	;# 
  3156     0311                     CCPR3           equ	785	;# 
  3157     0311                     CCPR3L          equ	785	;# 
  3158     0312                     CCPR3H          equ	786	;# 
  3159     0313                     CCP3CON         equ	787	;# 
  3160     0314                     CCP3CAP         equ	788	;# 
  3161     0315                     CCPR4           equ	789	;# 
  3162     0315                     CCPR4L          equ	789	;# 
  3163     0316                     CCPR4H          equ	790	;# 
  3164     0317                     CCP4CON         equ	791	;# 
  3165     0318                     CCP4CAP         equ	792	;# 
  3166     038C                     INLVLA          equ	908	;# 
  3167     038D                     INLVLB          equ	909	;# 
  3168     038E                     INLVLC          equ	910	;# 
  3169     0391                     IOCAP           equ	913	;# 
  3170     0392                     IOCAN           equ	914	;# 
  3171     0393                     IOCAF           equ	915	;# 
  3172     0394                     IOCBP           equ	916	;# 
  3173     0395                     IOCBN           equ	917	;# 
  3174     0396                     IOCBF           equ	918	;# 
  3175     0397                     IOCCP           equ	919	;# 
  3176     0398                     IOCCN           equ	920	;# 
  3177     0399                     IOCCF           equ	921	;# 
  3178     039A                     CLKRCON         equ	922	;# 
  3179     039C                     MDCON           equ	924	;# 
  3180     039D                     MDSRC           equ	925	;# 
  3181     039E                     MDCARH          equ	926	;# 
  3182     039F                     MDCARL          equ	927	;# 
  3183     0411                     TMR3            equ	1041	;# 
  3184     0411                     TMR3L           equ	1041	;# 
  3185     0412                     TMR3H           equ	1042	;# 
  3186     0413                     T3CON           equ	1043	;# 
  3187     0414                     T3GCON          equ	1044	;# 
  3188     0415                     TMR4            equ	1045	;# 
  3189     0416                     PR4             equ	1046	;# 
  3190     0417                     T4CON           equ	1047	;# 
  3191     0418                     TMR5            equ	1048	;# 
  3192     0418                     TMR5L           equ	1048	;# 
  3193     0419                     TMR5H           equ	1049	;# 
  3194     041A                     T5CON           equ	1050	;# 
  3195     041B                     T5GCON          equ	1051	;# 
  3196     041C                     TMR6            equ	1052	;# 
  3197     041D                     PR6             equ	1053	;# 
  3198     041E                     T6CON           equ	1054	;# 
  3199     041F                     CCDCON          equ	1055	;# 
  3200     0498                     NCO1ACC         equ	1176	;# 
  3201     0498                     NCO1ACCL        equ	1176	;# 
  3202     0499                     NCO1ACCH        equ	1177	;# 
  3203     049A                     NCO1ACCU        equ	1178	;# 
  3204     049B                     NCO1INC         equ	1179	;# 
  3205     049B                     NCO1INCL        equ	1179	;# 
  3206     049C                     NCO1INCH        equ	1180	;# 
  3207     049D                     NCO1INCU        equ	1181	;# 
  3208     049E                     NCO1CON         equ	1182	;# 
  3209     049F                     NCO1CLK         equ	1183	;# 
  3210     0617                     PWM5DCL         equ	1559	;# 
  3211     0618                     PWM5DCH         equ	1560	;# 
  3212     0619                     PWM5CON         equ	1561	;# 
  3213     0619                     PWM5CON0        equ	1561	;# 
  3214     061A                     PWM6DCL         equ	1562	;# 
  3215     061B                     PWM6DCH         equ	1563	;# 
  3216     061C                     PWM6CON         equ	1564	;# 
  3217     061C                     PWM6CON0        equ	1564	;# 
  3218     061F                     PWMTMRS         equ	1567	;# 
  3219     0691                     CWG1CLKCON      equ	1681	;# 
  3220     0692                     CWG1DAT         equ	1682	;# 
  3221     0693                     CWG1DBR         equ	1683	;# 
  3222     0694                     CWG1DBF         equ	1684	;# 
  3223     0695                     CWG1CON0        equ	1685	;# 
  3224     0696                     CWG1CON1        equ	1686	;# 
  3225     0697                     CWG1AS0         equ	1687	;# 
  3226     0698                     CWG1AS1         equ	1688	;# 
  3227     0699                     CWG1STR         equ	1689	;# 
  3228     0711                     CWG2CLKCON      equ	1809	;# 
  3229     0712                     CWG2DAT         equ	1810	;# 
  3230     0713                     CWG2DBR         equ	1811	;# 
  3231     0714                     CWG2DBF         equ	1812	;# 
  3232     0715                     CWG2CON0        equ	1813	;# 
  3233     0716                     CWG2CON1        equ	1814	;# 
  3234     0717                     CWG2AS0         equ	1815	;# 
  3235     0718                     CWG2AS1         equ	1816	;# 
  3236     0719                     CWG2STR         equ	1817	;# 
  3237     0891                     NVMADR          equ	2193	;# 
  3238     0891                     EEADR           equ	2193	;# 
  3239     0891                     PMADR           equ	2193	;# 
  3240     0891                     NVMADRL         equ	2193	;# 
  3241     0891                     EEADRL          equ	2193	;# 
  3242     0891                     PMADRL          equ	2193	;# 
  3243     0892                     NVMADRH         equ	2194	;# 
  3244     0892                     EEADRH          equ	2194	;# 
  3245     0892                     PMADRH          equ	2194	;# 
  3246     0893                     NVMDAT          equ	2195	;# 
  3247     0893                     EEDAT           equ	2195	;# 
  3248     0893                     PMDAT           equ	2195	;# 
  3249     0893                     NVMDATL         equ	2195	;# 
  3250     0893                     EEDATL          equ	2195	;# 
  3251     0893                     PMDATL          equ	2195	;# 
  3252     0894                     NVMDATH         equ	2196	;# 
  3253     0894                     EEDATH          equ	2196	;# 
  3254     0894                     PMDATH          equ	2196	;# 
  3255     0895                     NVMCON1         equ	2197	;# 
  3256     0895                     EECON1          equ	2197	;# 
  3257     0895                     PMCON1          equ	2197	;# 
  3258     0896                     NVMCON2         equ	2198	;# 
  3259     0896                     EECON2          equ	2198	;# 
  3260     0896                     PMCON2          equ	2198	;# 
  3261     089B                     PCON0           equ	2203	;# 
  3262     0911                     PMD0            equ	2321	;# 
  3263     0912                     PMD1            equ	2322	;# 
  3264     0913                     PMD2            equ	2323	;# 
  3265     0914                     PMD3            equ	2324	;# 
  3266     0915                     PMD4            equ	2325	;# 
  3267     0916                     PMD5            equ	2326	;# 
  3268     0918                     CPUDOZE         equ	2328	;# 
  3269     0919                     OSCCON1         equ	2329	;# 
  3270     091A                     OSCCON2         equ	2330	;# 
  3271     091B                     OSCCON3         equ	2331	;# 
  3272     091C                     OSCSTAT1        equ	2332	;# 
  3273     091D                     OSCEN           equ	2333	;# 
  3274     091E                     OSCTUNE         equ	2334	;# 
  3275     091F                     OSCFRQ          equ	2335	;# 
  3276     0E0F                     PPSLOCK         equ	3599	;# 
  3277     0E10                     INTPPS          equ	3600	;# 
  3278     0E11                     T0CKIPPS        equ	3601	;# 
  3279     0E12                     T1CKIPPS        equ	3602	;# 
  3280     0E13                     T1GPPS          equ	3603	;# 
  3281     0E14                     CCP1PPS         equ	3604	;# 
  3282     0E15                     CCP2PPS         equ	3605	;# 
  3283     0E16                     CCP3PPS         equ	3606	;# 
  3284     0E17                     CCP4PPS         equ	3607	;# 
  3285     0E18                     CWG1PPS         equ	3608	;# 
  3286     0E19                     CWG2PPS         equ	3609	;# 
  3287     0E1A                     MDCIN1PPS       equ	3610	;# 
  3288     0E1B                     MDCIN2PPS       equ	3611	;# 
  3289     0E1C                     MDMINPPS        equ	3612	;# 
  3290     0E1D                     SSP2CLKPPS      equ	3613	;# 
  3291     0E1E                     SSP2DATPPS      equ	3614	;# 
  3292     0E1F                     SSP2SSPPS       equ	3615	;# 
  3293     0E20                     SSP1CLKPPS      equ	3616	;# 
  3294     0E21                     SSP1DATPPS      equ	3617	;# 
  3295     0E22                     SSP1SSPPS       equ	3618	;# 
  3296     0E24                     RXPPS           equ	3620	;# 
  3297     0E25                     TXPPS           equ	3621	;# 
  3298     0E28                     CLCIN0PPS       equ	3624	;# 
  3299     0E29                     CLCIN1PPS       equ	3625	;# 
  3300     0E2A                     CLCIN2PPS       equ	3626	;# 
  3301     0E2B                     CLCIN3PPS       equ	3627	;# 
  3302     0E2C                     T3CKIPPS        equ	3628	;# 
  3303     0E2D                     T3GPPS          equ	3629	;# 
  3304     0E2E                     T5CKIPPS        equ	3630	;# 
  3305     0E2F                     T5GPPS          equ	3631	;# 
  3306     0E90                     RA0PPS          equ	3728	;# 
  3307     0E91                     RA1PPS          equ	3729	;# 
  3308     0E92                     RA2PPS          equ	3730	;# 
  3309     0E94                     RA4PPS          equ	3732	;# 
  3310     0E95                     RA5PPS          equ	3733	;# 
  3311     0E9C                     RB4PPS          equ	3740	;# 
  3312     0E9D                     RB5PPS          equ	3741	;# 
  3313     0E9E                     RB6PPS          equ	3742	;# 
  3314     0E9F                     RB7PPS          equ	3743	;# 
  3315     0EA0                     RC0PPS          equ	3744	;# 
  3316     0EA1                     RC1PPS          equ	3745	;# 
  3317     0EA2                     RC2PPS          equ	3746	;# 
  3318     0EA3                     RC3PPS          equ	3747	;# 
  3319     0EA4                     RC4PPS          equ	3748	;# 
  3320     0EA5                     RC5PPS          equ	3749	;# 
  3321     0EA6                     RC6PPS          equ	3750	;# 
  3322     0EA7                     RC7PPS          equ	3751	;# 
  3323     0F0F                     CLCDATA         equ	3855	;# 
  3324     0F10                     CLC1CON         equ	3856	;# 
  3325     0F11                     CLC1POL         equ	3857	;# 
  3326     0F12                     CLC1SEL0        equ	3858	;# 
  3327     0F13                     CLC1SEL1        equ	3859	;# 
  3328     0F14                     CLC1SEL2        equ	3860	;# 
  3329     0F15                     CLC1SEL3        equ	3861	;# 
  3330     0F16                     CLC1GLS0        equ	3862	;# 
  3331     0F17                     CLC1GLS1        equ	3863	;# 
  3332     0F18                     CLC1GLS2        equ	3864	;# 
  3333     0F19                     CLC1GLS3        equ	3865	;# 
  3334     0F1A                     CLC2CON         equ	3866	;# 
  3335     0F1B                     CLC2POL         equ	3867	;# 
  3336     0F1C                     CLC2SEL0        equ	3868	;# 
  3337     0F1D                     CLC2SEL1        equ	3869	;# 
  3338     0F1E                     CLC2SEL2        equ	3870	;# 
  3339     0F1F                     CLC2SEL3        equ	3871	;# 
  3340     0F20                     CLC2GLS0        equ	3872	;# 
  3341     0F21                     CLC2GLS1        equ	3873	;# 
  3342     0F22                     CLC2GLS2        equ	3874	;# 
  3343     0F23                     CLC2GLS3        equ	3875	;# 
  3344     0F24                     CLC3CON         equ	3876	;# 
  3345     0F25                     CLC3POL         equ	3877	;# 
  3346     0F26                     CLC3SEL0        equ	3878	;# 
  3347     0F27                     CLC3SEL1        equ	3879	;# 
  3348     0F28                     CLC3SEL2        equ	3880	;# 
  3349     0F29                     CLC3SEL3        equ	3881	;# 
  3350     0F2A                     CLC3GLS0        equ	3882	;# 
  3351     0F2B                     CLC3GLS1        equ	3883	;# 
  3352     0F2C                     CLC3GLS2        equ	3884	;# 
  3353     0F2D                     CLC3GLS3        equ	3885	;# 
  3354     0F2E                     CLC4CON         equ	3886	;# 
  3355     0F2F                     CLC4POL         equ	3887	;# 
  3356     0F30                     CLC4SEL0        equ	3888	;# 
  3357     0F31                     CLC4SEL1        equ	3889	;# 
  3358     0F32                     CLC4SEL2        equ	3890	;# 
  3359     0F33                     CLC4SEL3        equ	3891	;# 
  3360     0F34                     CLC4GLS0        equ	3892	;# 
  3361     0F35                     CLC4GLS1        equ	3893	;# 
  3362     0F36                     CLC4GLS2        equ	3894	;# 
  3363     0F37                     CLC4GLS3        equ	3895	;# 
  3364     0FE4                     STATUS_SHAD     equ	4068	;# 
  3365     0FE5                     WREG_SHAD       equ	4069	;# 
  3366     0FE6                     BSR_SHAD        equ	4070	;# 
  3367     0FE7                     PCLATH_SHAD     equ	4071	;# 
  3368     0FE8                     FSR0L_SHAD      equ	4072	;# 
  3369     0FE9                     FSR0H_SHAD      equ	4073	;# 
  3370     0FEA                     FSR1L_SHAD      equ	4074	;# 
  3371     0FEB                     FSR1H_SHAD      equ	4075	;# 
  3372     0FED                     STKPTR          equ	4077	;# 
  3373     0FEE                     TOSL            equ	4078	;# 
  3374     0FEF                     TOSH            equ	4079	;# 
  3375     0000                     INDF0           equ	0	;# 
  3376     0001                     INDF1           equ	1	;# 
  3377     0002                     PCL             equ	2	;# 
  3378     0003                     STATUS          equ	3	;# 
  3379     0004                     FSR0L           equ	4	;# 
  3380     0005                     FSR0H           equ	5	;# 
  3381     0006                     FSR1L           equ	6	;# 
  3382     0007                     FSR1H           equ	7	;# 
  3383     0008                     BSR             equ	8	;# 
  3384     0009                     WREG            equ	9	;# 
  3385     000A                     PCLATH          equ	10	;# 
  3386     000B                     INTCON          equ	11	;# 
  3387     000C                     PORTA           equ	12	;# 
  3388     000D                     PORTB           equ	13	;# 
  3389     000E                     PORTC           equ	14	;# 
  3390     0010                     PIR0            equ	16	;# 
  3391     0011                     PIR1            equ	17	;# 
  3392     0012                     PIR2            equ	18	;# 
  3393     0013                     PIR3            equ	19	;# 
  3394     0014                     PIR4            equ	20	;# 
  3395     0015                     TMR0L           equ	21	;# 
  3396     0015                     TMR0            equ	21	;# 
  3397     0016                     TMR0H           equ	22	;# 
  3398     0016                     PR0             equ	22	;# 
  3399     0017                     T0CON0          equ	23	;# 
  3400     0018                     T0CON1          equ	24	;# 
  3401     0019                     TMR1            equ	25	;# 
  3402     0019                     TMR1L           equ	25	;# 
  3403     001A                     TMR1H           equ	26	;# 
  3404     001B                     T1CON           equ	27	;# 
  3405     001C                     T1GCON          equ	28	;# 
  3406     001D                     TMR2            equ	29	;# 
  3407     001E                     PR2             equ	30	;# 
  3408     001F                     T2CON           equ	31	;# 
  3409     008C                     TRISA           equ	140	;# 
  3410     008D                     TRISB           equ	141	;# 
  3411     008E                     TRISC           equ	142	;# 
  3412     0090                     PIE0            equ	144	;# 
  3413     0091                     PIE1            equ	145	;# 
  3414     0092                     PIE2            equ	146	;# 
  3415     0093                     PIE3            equ	147	;# 
  3416     0094                     PIE4            equ	148	;# 
  3417     0097                     WDTCON          equ	151	;# 
  3418     009B                     ADRES           equ	155	;# 
  3419     009B                     ADRESL          equ	155	;# 
  3420     009C                     ADRESH          equ	156	;# 
  3421     009D                     ADCON0          equ	157	;# 
  3422     009E                     ADCON1          equ	158	;# 
  3423     009F                     ADACT           equ	159	;# 
  3424     010C                     LATA            equ	268	;# 
  3425     010D                     LATB            equ	269	;# 
  3426     010E                     LATC            equ	270	;# 
  3427     0111                     CM1CON0         equ	273	;# 
  3428     0112                     CM1CON1         equ	274	;# 
  3429     0113                     CM2CON0         equ	275	;# 
  3430     0114                     CM2CON1         equ	276	;# 
  3431     0115                     CMOUT           equ	277	;# 
  3432     0116                     BORCON          equ	278	;# 
  3433     0117                     FVRCON          equ	279	;# 
  3434     0118                     DACCON0         equ	280	;# 
  3435     0119                     DACCON1         equ	281	;# 
  3436     018C                     ANSELA          equ	396	;# 
  3437     018D                     ANSELB          equ	397	;# 
  3438     018E                     ANSELC          equ	398	;# 
  3439     0197                     VREGCON         equ	407	;# 
  3440     0199                     RC1REG          equ	409	;# 
  3441     0199                     RCREG           equ	409	;# 
  3442     0199                     RCREG1          equ	409	;# 
  3443     019A                     TX1REG          equ	410	;# 
  3444     019A                     TXREG1          equ	410	;# 
  3445     019A                     TXREG           equ	410	;# 
  3446     019B                     SP1BRG          equ	411	;# 
  3447     019B                     SPBRG           equ	411	;# 
  3448     019B                     SP1BRGL         equ	411	;# 
  3449     019B                     SPBRG1          equ	411	;# 
  3450     019B                     SPBRGL          equ	411	;# 
  3451     019C                     SP1BRGH         equ	412	;# 
  3452     019C                     SPBRGH          equ	412	;# 
  3453     019C                     SPBRGH1         equ	412	;# 
  3454     019D                     RC1STA          equ	413	;# 
  3455     019D                     RCSTA1          equ	413	;# 
  3456     019D                     RCSTA           equ	413	;# 
  3457     019E                     TX1STA          equ	414	;# 
  3458     019E                     TXSTA1          equ	414	;# 
  3459     019E                     TXSTA           equ	414	;# 
  3460     019F                     BAUD1CON        equ	415	;# 
  3461     019F                     BAUDCON1        equ	415	;# 
  3462     019F                     BAUDCTL1        equ	415	;# 
  3463     019F                     BAUDCON         equ	415	;# 
  3464     019F                     BAUDCTL         equ	415	;# 
  3465     020C                     WPUA            equ	524	;# 
  3466     020D                     WPUB            equ	525	;# 
  3467     020E                     WPUC            equ	526	;# 
  3468     0211                     SSP1BUF         equ	529	;# 
  3469     0211                     SSPBUF          equ	529	;# 
  3470     0212                     SSP1ADD         equ	530	;# 
  3471     0212                     SSPADD          equ	530	;# 
  3472     0213                     SSP1MSK         equ	531	;# 
  3473     0213                     SSPMSK          equ	531	;# 
  3474     0214                     SSP1STAT        equ	532	;# 
  3475     0214                     SSPSTAT         equ	532	;# 
  3476     0215                     SSP1CON1        equ	533	;# 
  3477     0215                     SSPCON          equ	533	;# 
  3478     0215                     SSPCON1         equ	533	;# 
  3479     0215                     SSP1CON         equ	533	;# 
  3480     0216                     SSP1CON2        equ	534	;# 
  3481     0216                     SSPCON2         equ	534	;# 
  3482     0217                     SSP1CON3        equ	535	;# 
  3483     0217                     SSPCON3         equ	535	;# 
  3484     0219                     SSP2BUF         equ	537	;# 
  3485     021A                     SSP2ADD         equ	538	;# 
  3486     021B                     SSP2MSK         equ	539	;# 
  3487     021C                     SSP2STAT        equ	540	;# 
  3488     021D                     SSP2CON1        equ	541	;# 
  3489     021D                     SSP2CON         equ	541	;# 
  3490     021E                     SSP2CON2        equ	542	;# 
  3491     021F                     SSP2CON3        equ	543	;# 
  3492     028C                     ODCONA          equ	652	;# 
  3493     028D                     ODCONB          equ	653	;# 
  3494     028E                     ODCONC          equ	654	;# 
  3495     0291                     CCPR1           equ	657	;# 
  3496     0291                     CCPR1L          equ	657	;# 
  3497     0292                     CCPR1H          equ	658	;# 
  3498     0293                     CCP1CON         equ	659	;# 
  3499     0294                     CCP1CAP         equ	660	;# 
  3500     0295                     CCPR2           equ	661	;# 
  3501     0295                     CCPR2L          equ	661	;# 
  3502     0296                     CCPR2H          equ	662	;# 
  3503     0297                     CCP2CON         equ	663	;# 
  3504     0298                     CCP2CAP         equ	664	;# 
  3505     029F                     CCPTMRS         equ	671	;# 
  3506     030C                     SLRCONA         equ	780	;# 
  3507     030D                     SLRCONB         equ	781	;# 
  3508     030E                     SLRCONC         equ	782	;# 
  3509     0311                     CCPR3           equ	785	;# 
  3510     0311                     CCPR3L          equ	785	;# 
  3511     0312                     CCPR3H          equ	786	;# 
  3512     0313                     CCP3CON         equ	787	;# 
  3513     0314                     CCP3CAP         equ	788	;# 
  3514     0315                     CCPR4           equ	789	;# 
  3515     0315                     CCPR4L          equ	789	;# 
  3516     0316                     CCPR4H          equ	790	;# 
  3517     0317                     CCP4CON         equ	791	;# 
  3518     0318                     CCP4CAP         equ	792	;# 
  3519     038C                     INLVLA          equ	908	;# 
  3520     038D                     INLVLB          equ	909	;# 
  3521     038E                     INLVLC          equ	910	;# 
  3522     0391                     IOCAP           equ	913	;# 
  3523     0392                     IOCAN           equ	914	;# 
  3524     0393                     IOCAF           equ	915	;# 
  3525     0394                     IOCBP           equ	916	;# 
  3526     0395                     IOCBN           equ	917	;# 
  3527     0396                     IOCBF           equ	918	;# 
  3528     0397                     IOCCP           equ	919	;# 
  3529     0398                     IOCCN           equ	920	;# 
  3530     0399                     IOCCF           equ	921	;# 
  3531     039A                     CLKRCON         equ	922	;# 
  3532     039C                     MDCON           equ	924	;# 
  3533     039D                     MDSRC           equ	925	;# 
  3534     039E                     MDCARH          equ	926	;# 
  3535     039F                     MDCARL          equ	927	;# 
  3536     0411                     TMR3            equ	1041	;# 
  3537     0411                     TMR3L           equ	1041	;# 
  3538     0412                     TMR3H           equ	1042	;# 
  3539     0413                     T3CON           equ	1043	;# 
  3540     0414                     T3GCON          equ	1044	;# 
  3541     0415                     TMR4            equ	1045	;# 
  3542     0416                     PR4             equ	1046	;# 
  3543     0417                     T4CON           equ	1047	;# 
  3544     0418                     TMR5            equ	1048	;# 
  3545     0418                     TMR5L           equ	1048	;# 
  3546     0419                     TMR5H           equ	1049	;# 
  3547     041A                     T5CON           equ	1050	;# 
  3548     041B                     T5GCON          equ	1051	;# 
  3549     041C                     TMR6            equ	1052	;# 
  3550     041D                     PR6             equ	1053	;# 
  3551     041E                     T6CON           equ	1054	;# 
  3552     041F                     CCDCON          equ	1055	;# 
  3553     0498                     NCO1ACC         equ	1176	;# 
  3554     0498                     NCO1ACCL        equ	1176	;# 
  3555     0499                     NCO1ACCH        equ	1177	;# 
  3556     049A                     NCO1ACCU        equ	1178	;# 
  3557     049B                     NCO1INC         equ	1179	;# 
  3558     049B                     NCO1INCL        equ	1179	;# 
  3559     049C                     NCO1INCH        equ	1180	;# 
  3560     049D                     NCO1INCU        equ	1181	;# 
  3561     049E                     NCO1CON         equ	1182	;# 
  3562     049F                     NCO1CLK         equ	1183	;# 
  3563     0617                     PWM5DCL         equ	1559	;# 
  3564     0618                     PWM5DCH         equ	1560	;# 
  3565     0619                     PWM5CON         equ	1561	;# 
  3566     0619                     PWM5CON0        equ	1561	;# 
  3567     061A                     PWM6DCL         equ	1562	;# 
  3568     061B                     PWM6DCH         equ	1563	;# 
  3569     061C                     PWM6CON         equ	1564	;# 
  3570     061C                     PWM6CON0        equ	1564	;# 
  3571     061F                     PWMTMRS         equ	1567	;# 
  3572     0691                     CWG1CLKCON      equ	1681	;# 
  3573     0692                     CWG1DAT         equ	1682	;# 
  3574     0693                     CWG1DBR         equ	1683	;# 
  3575     0694                     CWG1DBF         equ	1684	;# 
  3576     0695                     CWG1CON0        equ	1685	;# 
  3577     0696                     CWG1CON1        equ	1686	;# 
  3578     0697                     CWG1AS0         equ	1687	;# 
  3579     0698                     CWG1AS1         equ	1688	;# 
  3580     0699                     CWG1STR         equ	1689	;# 
  3581     0711                     CWG2CLKCON      equ	1809	;# 
  3582     0712                     CWG2DAT         equ	1810	;# 
  3583     0713                     CWG2DBR         equ	1811	;# 
  3584     0714                     CWG2DBF         equ	1812	;# 
  3585     0715                     CWG2CON0        equ	1813	;# 
  3586     0716                     CWG2CON1        equ	1814	;# 
  3587     0717                     CWG2AS0         equ	1815	;# 
  3588     0718                     CWG2AS1         equ	1816	;# 
  3589     0719                     CWG2STR         equ	1817	;# 
  3590     0891                     NVMADR          equ	2193	;# 
  3591     0891                     EEADR           equ	2193	;# 
  3592     0891                     PMADR           equ	2193	;# 
  3593     0891                     NVMADRL         equ	2193	;# 
  3594     0891                     EEADRL          equ	2193	;# 
  3595     0891                     PMADRL          equ	2193	;# 
  3596     0892                     NVMADRH         equ	2194	;# 
  3597     0892                     EEADRH          equ	2194	;# 
  3598     0892                     PMADRH          equ	2194	;# 
  3599     0893                     NVMDAT          equ	2195	;# 
  3600     0893                     EEDAT           equ	2195	;# 
  3601     0893                     PMDAT           equ	2195	;# 
  3602     0893                     NVMDATL         equ	2195	;# 
  3603     0893                     EEDATL          equ	2195	;# 
  3604     0893                     PMDATL          equ	2195	;# 
  3605     0894                     NVMDATH         equ	2196	;# 
  3606     0894                     EEDATH          equ	2196	;# 
  3607     0894                     PMDATH          equ	2196	;# 
  3608     0895                     NVMCON1         equ	2197	;# 
  3609     0895                     EECON1          equ	2197	;# 
  3610     0895                     PMCON1          equ	2197	;# 
  3611     0896                     NVMCON2         equ	2198	;# 
  3612     0896                     EECON2          equ	2198	;# 
  3613     0896                     PMCON2          equ	2198	;# 
  3614     089B                     PCON0           equ	2203	;# 
  3615     0911                     PMD0            equ	2321	;# 
  3616     0912                     PMD1            equ	2322	;# 
  3617     0913                     PMD2            equ	2323	;# 
  3618     0914                     PMD3            equ	2324	;# 
  3619     0915                     PMD4            equ	2325	;# 
  3620     0916                     PMD5            equ	2326	;# 
  3621     0918                     CPUDOZE         equ	2328	;# 
  3622     0919                     OSCCON1         equ	2329	;# 
  3623     091A                     OSCCON2         equ	2330	;# 
  3624     091B                     OSCCON3         equ	2331	;# 
  3625     091C                     OSCSTAT1        equ	2332	;# 
  3626     091D                     OSCEN           equ	2333	;# 
  3627     091E                     OSCTUNE         equ	2334	;# 
  3628     091F                     OSCFRQ          equ	2335	;# 
  3629     0E0F                     PPSLOCK         equ	3599	;# 
  3630     0E10                     INTPPS          equ	3600	;# 
  3631     0E11                     T0CKIPPS        equ	3601	;# 
  3632     0E12                     T1CKIPPS        equ	3602	;# 
  3633     0E13                     T1GPPS          equ	3603	;# 
  3634     0E14                     CCP1PPS         equ	3604	;# 
  3635     0E15                     CCP2PPS         equ	3605	;# 
  3636     0E16                     CCP3PPS         equ	3606	;# 
  3637     0E17                     CCP4PPS         equ	3607	;# 
  3638     0E18                     CWG1PPS         equ	3608	;# 
  3639     0E19                     CWG2PPS         equ	3609	;# 
  3640     0E1A                     MDCIN1PPS       equ	3610	;# 
  3641     0E1B                     MDCIN2PPS       equ	3611	;# 
  3642     0E1C                     MDMINPPS        equ	3612	;# 
  3643     0E1D                     SSP2CLKPPS      equ	3613	;# 
  3644     0E1E                     SSP2DATPPS      equ	3614	;# 
  3645     0E1F                     SSP2SSPPS       equ	3615	;# 
  3646     0E20                     SSP1CLKPPS      equ	3616	;# 
  3647     0E21                     SSP1DATPPS      equ	3617	;# 
  3648     0E22                     SSP1SSPPS       equ	3618	;# 
  3649     0E24                     RXPPS           equ	3620	;# 
  3650     0E25                     TXPPS           equ	3621	;# 
  3651     0E28                     CLCIN0PPS       equ	3624	;# 
  3652     0E29                     CLCIN1PPS       equ	3625	;# 
  3653     0E2A                     CLCIN2PPS       equ	3626	;# 
  3654     0E2B                     CLCIN3PPS       equ	3627	;# 
  3655     0E2C                     T3CKIPPS        equ	3628	;# 
  3656     0E2D                     T3GPPS          equ	3629	;# 
  3657     0E2E                     T5CKIPPS        equ	3630	;# 
  3658     0E2F                     T5GPPS          equ	3631	;# 
  3659     0E90                     RA0PPS          equ	3728	;# 
  3660     0E91                     RA1PPS          equ	3729	;# 
  3661     0E92                     RA2PPS          equ	3730	;# 
  3662     0E94                     RA4PPS          equ	3732	;# 
  3663     0E95                     RA5PPS          equ	3733	;# 
  3664     0E9C                     RB4PPS          equ	3740	;# 
  3665     0E9D                     RB5PPS          equ	3741	;# 
  3666     0E9E                     RB6PPS          equ	3742	;# 
  3667     0E9F                     RB7PPS          equ	3743	;# 
  3668     0EA0                     RC0PPS          equ	3744	;# 
  3669     0EA1                     RC1PPS          equ	3745	;# 
  3670     0EA2                     RC2PPS          equ	3746	;# 
  3671     0EA3                     RC3PPS          equ	3747	;# 
  3672     0EA4                     RC4PPS          equ	3748	;# 
  3673     0EA5                     RC5PPS          equ	3749	;# 
  3674     0EA6                     RC6PPS          equ	3750	;# 
  3675     0EA7                     RC7PPS          equ	3751	;# 
  3676     0F0F                     CLCDATA         equ	3855	;# 
  3677     0F10                     CLC1CON         equ	3856	;# 
  3678     0F11                     CLC1POL         equ	3857	;# 
  3679     0F12                     CLC1SEL0        equ	3858	;# 
  3680     0F13                     CLC1SEL1        equ	3859	;# 
  3681     0F14                     CLC1SEL2        equ	3860	;# 
  3682     0F15                     CLC1SEL3        equ	3861	;# 
  3683     0F16                     CLC1GLS0        equ	3862	;# 
  3684     0F17                     CLC1GLS1        equ	3863	;# 
  3685     0F18                     CLC1GLS2        equ	3864	;# 
  3686     0F19                     CLC1GLS3        equ	3865	;# 
  3687     0F1A                     CLC2CON         equ	3866	;# 
  3688     0F1B                     CLC2POL         equ	3867	;# 
  3689     0F1C                     CLC2SEL0        equ	3868	;# 
  3690     0F1D                     CLC2SEL1        equ	3869	;# 
  3691     0F1E                     CLC2SEL2        equ	3870	;# 
  3692     0F1F                     CLC2SEL3        equ	3871	;# 
  3693     0F20                     CLC2GLS0        equ	3872	;# 
  3694     0F21                     CLC2GLS1        equ	3873	;# 
  3695     0F22                     CLC2GLS2        equ	3874	;# 
  3696     0F23                     CLC2GLS3        equ	3875	;# 
  3697     0F24                     CLC3CON         equ	3876	;# 
  3698     0F25                     CLC3POL         equ	3877	;# 
  3699     0F26                     CLC3SEL0        equ	3878	;# 
  3700     0F27                     CLC3SEL1        equ	3879	;# 
  3701     0F28                     CLC3SEL2        equ	3880	;# 
  3702     0F29                     CLC3SEL3        equ	3881	;# 
  3703     0F2A                     CLC3GLS0        equ	3882	;# 
  3704     0F2B                     CLC3GLS1        equ	3883	;# 
  3705     0F2C                     CLC3GLS2        equ	3884	;# 
  3706     0F2D                     CLC3GLS3        equ	3885	;# 
  3707     0F2E                     CLC4CON         equ	3886	;# 
  3708     0F2F                     CLC4POL         equ	3887	;# 
  3709     0F30                     CLC4SEL0        equ	3888	;# 
  3710     0F31                     CLC4SEL1        equ	3889	;# 
  3711     0F32                     CLC4SEL2        equ	3890	;# 
  3712     0F33                     CLC4SEL3        equ	3891	;# 
  3713     0F34                     CLC4GLS0        equ	3892	;# 
  3714     0F35                     CLC4GLS1        equ	3893	;# 
  3715     0F36                     CLC4GLS2        equ	3894	;# 
  3716     0F37                     CLC4GLS3        equ	3895	;# 
  3717     0FE4                     STATUS_SHAD     equ	4068	;# 
  3718     0FE5                     WREG_SHAD       equ	4069	;# 
  3719     0FE6                     BSR_SHAD        equ	4070	;# 
  3720     0FE7                     PCLATH_SHAD     equ	4071	;# 
  3721     0FE8                     FSR0L_SHAD      equ	4072	;# 
  3722     0FE9                     FSR0H_SHAD      equ	4073	;# 
  3723     0FEA                     FSR1L_SHAD      equ	4074	;# 
  3724     0FEB                     FSR1H_SHAD      equ	4075	;# 
  3725     0FED                     STKPTR          equ	4077	;# 
  3726     0FEE                     TOSL            equ	4078	;# 
  3727     0FEF                     TOSH            equ	4079	;# 
  3728     0000                     INDF0           equ	0	;# 
  3729     0001                     INDF1           equ	1	;# 
  3730     0002                     PCL             equ	2	;# 
  3731     0003                     STATUS          equ	3	;# 
  3732     0004                     FSR0L           equ	4	;# 
  3733     0005                     FSR0H           equ	5	;# 
  3734     0006                     FSR1L           equ	6	;# 
  3735     0007                     FSR1H           equ	7	;# 
  3736     0008                     BSR             equ	8	;# 
  3737     0009                     WREG            equ	9	;# 
  3738     000A                     PCLATH          equ	10	;# 
  3739     000B                     INTCON          equ	11	;# 
  3740     000C                     PORTA           equ	12	;# 
  3741     000D                     PORTB           equ	13	;# 
  3742     000E                     PORTC           equ	14	;# 
  3743     0010                     PIR0            equ	16	;# 
  3744     0011                     PIR1            equ	17	;# 
  3745     0012                     PIR2            equ	18	;# 
  3746     0013                     PIR3            equ	19	;# 
  3747     0014                     PIR4            equ	20	;# 
  3748     0015                     TMR0L           equ	21	;# 
  3749     0015                     TMR0            equ	21	;# 
  3750     0016                     TMR0H           equ	22	;# 
  3751     0016                     PR0             equ	22	;# 
  3752     0017                     T0CON0          equ	23	;# 
  3753     0018                     T0CON1          equ	24	;# 
  3754     0019                     TMR1            equ	25	;# 
  3755     0019                     TMR1L           equ	25	;# 
  3756     001A                     TMR1H           equ	26	;# 
  3757     001B                     T1CON           equ	27	;# 
  3758     001C                     T1GCON          equ	28	;# 
  3759     001D                     TMR2            equ	29	;# 
  3760     001E                     PR2             equ	30	;# 
  3761     001F                     T2CON           equ	31	;# 
  3762     008C                     TRISA           equ	140	;# 
  3763     008D                     TRISB           equ	141	;# 
  3764     008E                     TRISC           equ	142	;# 
  3765     0090                     PIE0            equ	144	;# 
  3766     0091                     PIE1            equ	145	;# 
  3767     0092                     PIE2            equ	146	;# 
  3768     0093                     PIE3            equ	147	;# 
  3769     0094                     PIE4            equ	148	;# 
  3770     0097                     WDTCON          equ	151	;# 
  3771     009B                     ADRES           equ	155	;# 
  3772     009B                     ADRESL          equ	155	;# 
  3773     009C                     ADRESH          equ	156	;# 
  3774     009D                     ADCON0          equ	157	;# 
  3775     009E                     ADCON1          equ	158	;# 
  3776     009F                     ADACT           equ	159	;# 
  3777     010C                     LATA            equ	268	;# 
  3778     010D                     LATB            equ	269	;# 
  3779     010E                     LATC            equ	270	;# 
  3780     0111                     CM1CON0         equ	273	;# 
  3781     0112                     CM1CON1         equ	274	;# 
  3782     0113                     CM2CON0         equ	275	;# 
  3783     0114                     CM2CON1         equ	276	;# 
  3784     0115                     CMOUT           equ	277	;# 
  3785     0116                     BORCON          equ	278	;# 
  3786     0117                     FVRCON          equ	279	;# 
  3787     0118                     DACCON0         equ	280	;# 
  3788     0119                     DACCON1         equ	281	;# 
  3789     018C                     ANSELA          equ	396	;# 
  3790     018D                     ANSELB          equ	397	;# 
  3791     018E                     ANSELC          equ	398	;# 
  3792     0197                     VREGCON         equ	407	;# 
  3793     0199                     RC1REG          equ	409	;# 
  3794     0199                     RCREG           equ	409	;# 
  3795     0199                     RCREG1          equ	409	;# 
  3796     019A                     TX1REG          equ	410	;# 
  3797     019A                     TXREG1          equ	410	;# 
  3798     019A                     TXREG           equ	410	;# 
  3799     019B                     SP1BRG          equ	411	;# 
  3800     019B                     SPBRG           equ	411	;# 
  3801     019B                     SP1BRGL         equ	411	;# 
  3802     019B                     SPBRG1          equ	411	;# 
  3803     019B                     SPBRGL          equ	411	;# 
  3804     019C                     SP1BRGH         equ	412	;# 
  3805     019C                     SPBRGH          equ	412	;# 
  3806     019C                     SPBRGH1         equ	412	;# 
  3807     019D                     RC1STA          equ	413	;# 
  3808     019D                     RCSTA1          equ	413	;# 
  3809     019D                     RCSTA           equ	413	;# 
  3810     019E                     TX1STA          equ	414	;# 
  3811     019E                     TXSTA1          equ	414	;# 
  3812     019E                     TXSTA           equ	414	;# 
  3813     019F                     BAUD1CON        equ	415	;# 
  3814     019F                     BAUDCON1        equ	415	;# 
  3815     019F                     BAUDCTL1        equ	415	;# 
  3816     019F                     BAUDCON         equ	415	;# 
  3817     019F                     BAUDCTL         equ	415	;# 
  3818     020C                     WPUA            equ	524	;# 
  3819     020D                     WPUB            equ	525	;# 
  3820     020E                     WPUC            equ	526	;# 
  3821     0211                     SSP1BUF         equ	529	;# 
  3822     0211                     SSPBUF          equ	529	;# 
  3823     0212                     SSP1ADD         equ	530	;# 
  3824     0212                     SSPADD          equ	530	;# 
  3825     0213                     SSP1MSK         equ	531	;# 
  3826     0213                     SSPMSK          equ	531	;# 
  3827     0214                     SSP1STAT        equ	532	;# 
  3828     0214                     SSPSTAT         equ	532	;# 
  3829     0215                     SSP1CON1        equ	533	;# 
  3830     0215                     SSPCON          equ	533	;# 
  3831     0215                     SSPCON1         equ	533	;# 
  3832     0215                     SSP1CON         equ	533	;# 
  3833     0216                     SSP1CON2        equ	534	;# 
  3834     0216                     SSPCON2         equ	534	;# 
  3835     0217                     SSP1CON3        equ	535	;# 
  3836     0217                     SSPCON3         equ	535	;# 
  3837     0219                     SSP2BUF         equ	537	;# 
  3838     021A                     SSP2ADD         equ	538	;# 
  3839     021B                     SSP2MSK         equ	539	;# 
  3840     021C                     SSP2STAT        equ	540	;# 
  3841     021D                     SSP2CON1        equ	541	;# 
  3842     021D                     SSP2CON         equ	541	;# 
  3843     021E                     SSP2CON2        equ	542	;# 
  3844     021F                     SSP2CON3        equ	543	;# 
  3845     028C                     ODCONA          equ	652	;# 
  3846     028D                     ODCONB          equ	653	;# 
  3847     028E                     ODCONC          equ	654	;# 
  3848     0291                     CCPR1           equ	657	;# 
  3849     0291                     CCPR1L          equ	657	;# 
  3850     0292                     CCPR1H          equ	658	;# 
  3851     0293                     CCP1CON         equ	659	;# 
  3852     0294                     CCP1CAP         equ	660	;# 
  3853     0295                     CCPR2           equ	661	;# 
  3854     0295                     CCPR2L          equ	661	;# 
  3855     0296                     CCPR2H          equ	662	;# 
  3856     0297                     CCP2CON         equ	663	;# 
  3857     0298                     CCP2CAP         equ	664	;# 
  3858     029F                     CCPTMRS         equ	671	;# 
  3859     030C                     SLRCONA         equ	780	;# 
  3860     030D                     SLRCONB         equ	781	;# 
  3861     030E                     SLRCONC         equ	782	;# 
  3862     0311                     CCPR3           equ	785	;# 
  3863     0311                     CCPR3L          equ	785	;# 
  3864     0312                     CCPR3H          equ	786	;# 
  3865     0313                     CCP3CON         equ	787	;# 
  3866     0314                     CCP3CAP         equ	788	;# 
  3867     0315                     CCPR4           equ	789	;# 
  3868     0315                     CCPR4L          equ	789	;# 
  3869     0316                     CCPR4H          equ	790	;# 
  3870     0317                     CCP4CON         equ	791	;# 
  3871     0318                     CCP4CAP         equ	792	;# 
  3872     038C                     INLVLA          equ	908	;# 
  3873     038D                     INLVLB          equ	909	;# 
  3874     038E                     INLVLC          equ	910	;# 
  3875     0391                     IOCAP           equ	913	;# 
  3876     0392                     IOCAN           equ	914	;# 
  3877     0393                     IOCAF           equ	915	;# 
  3878     0394                     IOCBP           equ	916	;# 
  3879     0395                     IOCBN           equ	917	;# 
  3880     0396                     IOCBF           equ	918	;# 
  3881     0397                     IOCCP           equ	919	;# 
  3882     0398                     IOCCN           equ	920	;# 
  3883     0399                     IOCCF           equ	921	;# 
  3884     039A                     CLKRCON         equ	922	;# 
  3885     039C                     MDCON           equ	924	;# 
  3886     039D                     MDSRC           equ	925	;# 
  3887     039E                     MDCARH          equ	926	;# 
  3888     039F                     MDCARL          equ	927	;# 
  3889     0411                     TMR3            equ	1041	;# 
  3890     0411                     TMR3L           equ	1041	;# 
  3891     0412                     TMR3H           equ	1042	;# 
  3892     0413                     T3CON           equ	1043	;# 
  3893     0414                     T3GCON          equ	1044	;# 
  3894     0415                     TMR4            equ	1045	;# 
  3895     0416                     PR4             equ	1046	;# 
  3896     0417                     T4CON           equ	1047	;# 
  3897     0418                     TMR5            equ	1048	;# 
  3898     0418                     TMR5L           equ	1048	;# 
  3899     0419                     TMR5H           equ	1049	;# 
  3900     041A                     T5CON           equ	1050	;# 
  3901     041B                     T5GCON          equ	1051	;# 
  3902     041C                     TMR6            equ	1052	;# 
  3903     041D                     PR6             equ	1053	;# 
  3904     041E                     T6CON           equ	1054	;# 
  3905     041F                     CCDCON          equ	1055	;# 
  3906     0498                     NCO1ACC         equ	1176	;# 
  3907     0498                     NCO1ACCL        equ	1176	;# 
  3908     0499                     NCO1ACCH        equ	1177	;# 
  3909     049A                     NCO1ACCU        equ	1178	;# 
  3910     049B                     NCO1INC         equ	1179	;# 
  3911     049B                     NCO1INCL        equ	1179	;# 
  3912     049C                     NCO1INCH        equ	1180	;# 
  3913     049D                     NCO1INCU        equ	1181	;# 
  3914     049E                     NCO1CON         equ	1182	;# 
  3915     049F                     NCO1CLK         equ	1183	;# 
  3916     0617                     PWM5DCL         equ	1559	;# 
  3917     0618                     PWM5DCH         equ	1560	;# 
  3918     0619                     PWM5CON         equ	1561	;# 
  3919     0619                     PWM5CON0        equ	1561	;# 
  3920     061A                     PWM6DCL         equ	1562	;# 
  3921     061B                     PWM6DCH         equ	1563	;# 
  3922     061C                     PWM6CON         equ	1564	;# 
  3923     061C                     PWM6CON0        equ	1564	;# 
  3924     061F                     PWMTMRS         equ	1567	;# 
  3925     0691                     CWG1CLKCON      equ	1681	;# 
  3926     0692                     CWG1DAT         equ	1682	;# 
  3927     0693                     CWG1DBR         equ	1683	;# 
  3928     0694                     CWG1DBF         equ	1684	;# 
  3929     0695                     CWG1CON0        equ	1685	;# 
  3930     0696                     CWG1CON1        equ	1686	;# 
  3931     0697                     CWG1AS0         equ	1687	;# 
  3932     0698                     CWG1AS1         equ	1688	;# 
  3933     0699                     CWG1STR         equ	1689	;# 
  3934     0711                     CWG2CLKCON      equ	1809	;# 
  3935     0712                     CWG2DAT         equ	1810	;# 
  3936     0713                     CWG2DBR         equ	1811	;# 
  3937     0714                     CWG2DBF         equ	1812	;# 
  3938     0715                     CWG2CON0        equ	1813	;# 
  3939     0716                     CWG2CON1        equ	1814	;# 
  3940     0717                     CWG2AS0         equ	1815	;# 
  3941     0718                     CWG2AS1         equ	1816	;# 
  3942     0719                     CWG2STR         equ	1817	;# 
  3943     0891                     NVMADR          equ	2193	;# 
  3944     0891                     EEADR           equ	2193	;# 
  3945     0891                     PMADR           equ	2193	;# 
  3946     0891                     NVMADRL         equ	2193	;# 
  3947     0891                     EEADRL          equ	2193	;# 
  3948     0891                     PMADRL          equ	2193	;# 
  3949     0892                     NVMADRH         equ	2194	;# 
  3950     0892                     EEADRH          equ	2194	;# 
  3951     0892                     PMADRH          equ	2194	;# 
  3952     0893                     NVMDAT          equ	2195	;# 
  3953     0893                     EEDAT           equ	2195	;# 
  3954     0893                     PMDAT           equ	2195	;# 
  3955     0893                     NVMDATL         equ	2195	;# 
  3956     0893                     EEDATL          equ	2195	;# 
  3957     0893                     PMDATL          equ	2195	;# 
  3958     0894                     NVMDATH         equ	2196	;# 
  3959     0894                     EEDATH          equ	2196	;# 
  3960     0894                     PMDATH          equ	2196	;# 
  3961     0895                     NVMCON1         equ	2197	;# 
  3962     0895                     EECON1          equ	2197	;# 
  3963     0895                     PMCON1          equ	2197	;# 
  3964     0896                     NVMCON2         equ	2198	;# 
  3965     0896                     EECON2          equ	2198	;# 
  3966     0896                     PMCON2          equ	2198	;# 
  3967     089B                     PCON0           equ	2203	;# 
  3968     0911                     PMD0            equ	2321	;# 
  3969     0912                     PMD1            equ	2322	;# 
  3970     0913                     PMD2            equ	2323	;# 
  3971     0914                     PMD3            equ	2324	;# 
  3972     0915                     PMD4            equ	2325	;# 
  3973     0916                     PMD5            equ	2326	;# 
  3974     0918                     CPUDOZE         equ	2328	;# 
  3975     0919                     OSCCON1         equ	2329	;# 
  3976     091A                     OSCCON2         equ	2330	;# 
  3977     091B                     OSCCON3         equ	2331	;# 
  3978     091C                     OSCSTAT1        equ	2332	;# 
  3979     091D                     OSCEN           equ	2333	;# 
  3980     091E                     OSCTUNE         equ	2334	;# 
  3981     091F                     OSCFRQ          equ	2335	;# 
  3982     0E0F                     PPSLOCK         equ	3599	;# 
  3983     0E10                     INTPPS          equ	3600	;# 
  3984     0E11                     T0CKIPPS        equ	3601	;# 
  3985     0E12                     T1CKIPPS        equ	3602	;# 
  3986     0E13                     T1GPPS          equ	3603	;# 
  3987     0E14                     CCP1PPS         equ	3604	;# 
  3988     0E15                     CCP2PPS         equ	3605	;# 
  3989     0E16                     CCP3PPS         equ	3606	;# 
  3990     0E17                     CCP4PPS         equ	3607	;# 
  3991     0E18                     CWG1PPS         equ	3608	;# 
  3992     0E19                     CWG2PPS         equ	3609	;# 
  3993     0E1A                     MDCIN1PPS       equ	3610	;# 
  3994     0E1B                     MDCIN2PPS       equ	3611	;# 
  3995     0E1C                     MDMINPPS        equ	3612	;# 
  3996     0E1D                     SSP2CLKPPS      equ	3613	;# 
  3997     0E1E                     SSP2DATPPS      equ	3614	;# 
  3998     0E1F                     SSP2SSPPS       equ	3615	;# 
  3999     0E20                     SSP1CLKPPS      equ	3616	;# 
  4000     0E21                     SSP1DATPPS      equ	3617	;# 
  4001     0E22                     SSP1SSPPS       equ	3618	;# 
  4002     0E24                     RXPPS           equ	3620	;# 
  4003     0E25                     TXPPS           equ	3621	;# 
  4004     0E28                     CLCIN0PPS       equ	3624	;# 
  4005     0E29                     CLCIN1PPS       equ	3625	;# 
  4006     0E2A                     CLCIN2PPS       equ	3626	;# 
  4007     0E2B                     CLCIN3PPS       equ	3627	;# 
  4008     0E2C                     T3CKIPPS        equ	3628	;# 
  4009     0E2D                     T3GPPS          equ	3629	;# 
  4010     0E2E                     T5CKIPPS        equ	3630	;# 
  4011     0E2F                     T5GPPS          equ	3631	;# 
  4012     0E90                     RA0PPS          equ	3728	;# 
  4013     0E91                     RA1PPS          equ	3729	;# 
  4014     0E92                     RA2PPS          equ	3730	;# 
  4015     0E94                     RA4PPS          equ	3732	;# 
  4016     0E95                     RA5PPS          equ	3733	;# 
  4017     0E9C                     RB4PPS          equ	3740	;# 
  4018     0E9D                     RB5PPS          equ	3741	;# 
  4019     0E9E                     RB6PPS          equ	3742	;# 
  4020     0E9F                     RB7PPS          equ	3743	;# 
  4021     0EA0                     RC0PPS          equ	3744	;# 
  4022     0EA1                     RC1PPS          equ	3745	;# 
  4023     0EA2                     RC2PPS          equ	3746	;# 
  4024     0EA3                     RC3PPS          equ	3747	;# 
  4025     0EA4                     RC4PPS          equ	3748	;# 
  4026     0EA5                     RC5PPS          equ	3749	;# 
  4027     0EA6                     RC6PPS          equ	3750	;# 
  4028     0EA7                     RC7PPS          equ	3751	;# 
  4029     0F0F                     CLCDATA         equ	3855	;# 
  4030     0F10                     CLC1CON         equ	3856	;# 
  4031     0F11                     CLC1POL         equ	3857	;# 
  4032     0F12                     CLC1SEL0        equ	3858	;# 
  4033     0F13                     CLC1SEL1        equ	3859	;# 
  4034     0F14                     CLC1SEL2        equ	3860	;# 
  4035     0F15                     CLC1SEL3        equ	3861	;# 
  4036     0F16                     CLC1GLS0        equ	3862	;# 
  4037     0F17                     CLC1GLS1        equ	3863	;# 
  4038     0F18                     CLC1GLS2        equ	3864	;# 
  4039     0F19                     CLC1GLS3        equ	3865	;# 
  4040     0F1A                     CLC2CON         equ	3866	;# 
  4041     0F1B                     CLC2POL         equ	3867	;# 
  4042     0F1C                     CLC2SEL0        equ	3868	;# 
  4043     0F1D                     CLC2SEL1        equ	3869	;# 
  4044     0F1E                     CLC2SEL2        equ	3870	;# 
  4045     0F1F                     CLC2SEL3        equ	3871	;# 
  4046     0F20                     CLC2GLS0        equ	3872	;# 
  4047     0F21                     CLC2GLS1        equ	3873	;# 
  4048     0F22                     CLC2GLS2        equ	3874	;# 
  4049     0F23                     CLC2GLS3        equ	3875	;# 
  4050     0F24                     CLC3CON         equ	3876	;# 
  4051     0F25                     CLC3POL         equ	3877	;# 
  4052     0F26                     CLC3SEL0        equ	3878	;# 
  4053     0F27                     CLC3SEL1        equ	3879	;# 
  4054     0F28                     CLC3SEL2        equ	3880	;# 
  4055     0F29                     CLC3SEL3        equ	3881	;# 
  4056     0F2A                     CLC3GLS0        equ	3882	;# 
  4057     0F2B                     CLC3GLS1        equ	3883	;# 
  4058     0F2C                     CLC3GLS2        equ	3884	;# 
  4059     0F2D                     CLC3GLS3        equ	3885	;# 
  4060     0F2E                     CLC4CON         equ	3886	;# 
  4061     0F2F                     CLC4POL         equ	3887	;# 
  4062     0F30                     CLC4SEL0        equ	3888	;# 
  4063     0F31                     CLC4SEL1        equ	3889	;# 
  4064     0F32                     CLC4SEL2        equ	3890	;# 
  4065     0F33                     CLC4SEL3        equ	3891	;# 
  4066     0F34                     CLC4GLS0        equ	3892	;# 
  4067     0F35                     CLC4GLS1        equ	3893	;# 
  4068     0F36                     CLC4GLS2        equ	3894	;# 
  4069     0F37                     CLC4GLS3        equ	3895	;# 
  4070     0FE4                     STATUS_SHAD     equ	4068	;# 
  4071     0FE5                     WREG_SHAD       equ	4069	;# 
  4072     0FE6                     BSR_SHAD        equ	4070	;# 
  4073     0FE7                     PCLATH_SHAD     equ	4071	;# 
  4074     0FE8                     FSR0L_SHAD      equ	4072	;# 
  4075     0FE9                     FSR0H_SHAD      equ	4073	;# 
  4076     0FEA                     FSR1L_SHAD      equ	4074	;# 
  4077     0FEB                     FSR1H_SHAD      equ	4075	;# 
  4078     0FED                     STKPTR          equ	4077	;# 
  4079     0FEE                     TOSL            equ	4078	;# 
  4080     0FEF                     TOSH            equ	4079	;# 
  4081     0000                     INDF0           equ	0	;# 
  4082     0001                     INDF1           equ	1	;# 
  4083     0002                     PCL             equ	2	;# 
  4084     0003                     STATUS          equ	3	;# 
  4085     0004                     FSR0L           equ	4	;# 
  4086     0005                     FSR0H           equ	5	;# 
  4087     0006                     FSR1L           equ	6	;# 
  4088     0007                     FSR1H           equ	7	;# 
  4089     0008                     BSR             equ	8	;# 
  4090     0009                     WREG            equ	9	;# 
  4091     000A                     PCLATH          equ	10	;# 
  4092     000B                     INTCON          equ	11	;# 
  4093     000C                     PORTA           equ	12	;# 
  4094     000D                     PORTB           equ	13	;# 
  4095     000E                     PORTC           equ	14	;# 
  4096     0010                     PIR0            equ	16	;# 
  4097     0011                     PIR1            equ	17	;# 
  4098     0012                     PIR2            equ	18	;# 
  4099     0013                     PIR3            equ	19	;# 
  4100     0014                     PIR4            equ	20	;# 
  4101     0015                     TMR0L           equ	21	;# 
  4102     0015                     TMR0            equ	21	;# 
  4103     0016                     TMR0H           equ	22	;# 
  4104     0016                     PR0             equ	22	;# 
  4105     0017                     T0CON0          equ	23	;# 
  4106     0018                     T0CON1          equ	24	;# 
  4107     0019                     TMR1            equ	25	;# 
  4108     0019                     TMR1L           equ	25	;# 
  4109     001A                     TMR1H           equ	26	;# 
  4110     001B                     T1CON           equ	27	;# 
  4111     001C                     T1GCON          equ	28	;# 
  4112     001D                     TMR2            equ	29	;# 
  4113     001E                     PR2             equ	30	;# 
  4114     001F                     T2CON           equ	31	;# 
  4115     008C                     TRISA           equ	140	;# 
  4116     008D                     TRISB           equ	141	;# 
  4117     008E                     TRISC           equ	142	;# 
  4118     0090                     PIE0            equ	144	;# 
  4119     0091                     PIE1            equ	145	;# 
  4120     0092                     PIE2            equ	146	;# 
  4121     0093                     PIE3            equ	147	;# 
  4122     0094                     PIE4            equ	148	;# 
  4123     0097                     WDTCON          equ	151	;# 
  4124     009B                     ADRES           equ	155	;# 
  4125     009B                     ADRESL          equ	155	;# 
  4126     009C                     ADRESH          equ	156	;# 
  4127     009D                     ADCON0          equ	157	;# 
  4128     009E                     ADCON1          equ	158	;# 
  4129     009F                     ADACT           equ	159	;# 
  4130     010C                     LATA            equ	268	;# 
  4131     010D                     LATB            equ	269	;# 
  4132     010E                     LATC            equ	270	;# 
  4133     0111                     CM1CON0         equ	273	;# 
  4134     0112                     CM1CON1         equ	274	;# 
  4135     0113                     CM2CON0         equ	275	;# 
  4136     0114                     CM2CON1         equ	276	;# 
  4137     0115                     CMOUT           equ	277	;# 
  4138     0116                     BORCON          equ	278	;# 
  4139     0117                     FVRCON          equ	279	;# 
  4140     0118                     DACCON0         equ	280	;# 
  4141     0119                     DACCON1         equ	281	;# 
  4142     018C                     ANSELA          equ	396	;# 
  4143     018D                     ANSELB          equ	397	;# 
  4144     018E                     ANSELC          equ	398	;# 
  4145     0197                     VREGCON         equ	407	;# 
  4146     0199                     RC1REG          equ	409	;# 
  4147     0199                     RCREG           equ	409	;# 
  4148     0199                     RCREG1          equ	409	;# 
  4149     019A                     TX1REG          equ	410	;# 
  4150     019A                     TXREG1          equ	410	;# 
  4151     019A                     TXREG           equ	410	;# 
  4152     019B                     SP1BRG          equ	411	;# 
  4153     019B                     SPBRG           equ	411	;# 
  4154     019B                     SP1BRGL         equ	411	;# 
  4155     019B                     SPBRG1          equ	411	;# 
  4156     019B                     SPBRGL          equ	411	;# 
  4157     019C                     SP1BRGH         equ	412	;# 
  4158     019C                     SPBRGH          equ	412	;# 
  4159     019C                     SPBRGH1         equ	412	;# 
  4160     019D                     RC1STA          equ	413	;# 
  4161     019D                     RCSTA1          equ	413	;# 
  4162     019D                     RCSTA           equ	413	;# 
  4163     019E                     TX1STA          equ	414	;# 
  4164     019E                     TXSTA1          equ	414	;# 
  4165     019E                     TXSTA           equ	414	;# 
  4166     019F                     BAUD1CON        equ	415	;# 
  4167     019F                     BAUDCON1        equ	415	;# 
  4168     019F                     BAUDCTL1        equ	415	;# 
  4169     019F                     BAUDCON         equ	415	;# 
  4170     019F                     BAUDCTL         equ	415	;# 
  4171     020C                     WPUA            equ	524	;# 
  4172     020D                     WPUB            equ	525	;# 
  4173     020E                     WPUC            equ	526	;# 
  4174     0211                     SSP1BUF         equ	529	;# 
  4175     0211                     SSPBUF          equ	529	;# 
  4176     0212                     SSP1ADD         equ	530	;# 
  4177     0212                     SSPADD          equ	530	;# 
  4178     0213                     SSP1MSK         equ	531	;# 
  4179     0213                     SSPMSK          equ	531	;# 
  4180     0214                     SSP1STAT        equ	532	;# 
  4181     0214                     SSPSTAT         equ	532	;# 
  4182     0215                     SSP1CON1        equ	533	;# 
  4183     0215                     SSPCON          equ	533	;# 
  4184     0215                     SSPCON1         equ	533	;# 
  4185     0215                     SSP1CON         equ	533	;# 
  4186     0216                     SSP1CON2        equ	534	;# 
  4187     0216                     SSPCON2         equ	534	;# 
  4188     0217                     SSP1CON3        equ	535	;# 
  4189     0217                     SSPCON3         equ	535	;# 
  4190     0219                     SSP2BUF         equ	537	;# 
  4191     021A                     SSP2ADD         equ	538	;# 
  4192     021B                     SSP2MSK         equ	539	;# 
  4193     021C                     SSP2STAT        equ	540	;# 
  4194     021D                     SSP2CON1        equ	541	;# 
  4195     021D                     SSP2CON         equ	541	;# 
  4196     021E                     SSP2CON2        equ	542	;# 
  4197     021F                     SSP2CON3        equ	543	;# 
  4198     028C                     ODCONA          equ	652	;# 
  4199     028D                     ODCONB          equ	653	;# 
  4200     028E                     ODCONC          equ	654	;# 
  4201     0291                     CCPR1           equ	657	;# 
  4202     0291                     CCPR1L          equ	657	;# 
  4203     0292                     CCPR1H          equ	658	;# 
  4204     0293                     CCP1CON         equ	659	;# 
  4205     0294                     CCP1CAP         equ	660	;# 
  4206     0295                     CCPR2           equ	661	;# 
  4207     0295                     CCPR2L          equ	661	;# 
  4208     0296                     CCPR2H          equ	662	;# 
  4209     0297                     CCP2CON         equ	663	;# 
  4210     0298                     CCP2CAP         equ	664	;# 
  4211     029F                     CCPTMRS         equ	671	;# 
  4212     030C                     SLRCONA         equ	780	;# 
  4213     030D                     SLRCONB         equ	781	;# 
  4214     030E                     SLRCONC         equ	782	;# 
  4215     0311                     CCPR3           equ	785	;# 
  4216     0311                     CCPR3L          equ	785	;# 
  4217     0312                     CCPR3H          equ	786	;# 
  4218     0313                     CCP3CON         equ	787	;# 
  4219     0314                     CCP3CAP         equ	788	;# 
  4220     0315                     CCPR4           equ	789	;# 
  4221     0315                     CCPR4L          equ	789	;# 
  4222     0316                     CCPR4H          equ	790	;# 
  4223     0317                     CCP4CON         equ	791	;# 
  4224     0318                     CCP4CAP         equ	792	;# 
  4225     038C                     INLVLA          equ	908	;# 
  4226     038D                     INLVLB          equ	909	;# 
  4227     038E                     INLVLC          equ	910	;# 
  4228     0391                     IOCAP           equ	913	;# 
  4229     0392                     IOCAN           equ	914	;# 
  4230     0393                     IOCAF           equ	915	;# 
  4231     0394                     IOCBP           equ	916	;# 
  4232     0395                     IOCBN           equ	917	;# 
  4233     0396                     IOCBF           equ	918	;# 
  4234     0397                     IOCCP           equ	919	;# 
  4235     0398                     IOCCN           equ	920	;# 
  4236     0399                     IOCCF           equ	921	;# 
  4237     039A                     CLKRCON         equ	922	;# 
  4238     039C                     MDCON           equ	924	;# 
  4239     039D                     MDSRC           equ	925	;# 
  4240     039E                     MDCARH          equ	926	;# 
  4241     039F                     MDCARL          equ	927	;# 
  4242     0411                     TMR3            equ	1041	;# 
  4243     0411                     TMR3L           equ	1041	;# 
  4244     0412                     TMR3H           equ	1042	;# 
  4245     0413                     T3CON           equ	1043	;# 
  4246     0414                     T3GCON          equ	1044	;# 
  4247     0415                     TMR4            equ	1045	;# 
  4248     0416                     PR4             equ	1046	;# 
  4249     0417                     T4CON           equ	1047	;# 
  4250     0418                     TMR5            equ	1048	;# 
  4251     0418                     TMR5L           equ	1048	;# 
  4252     0419                     TMR5H           equ	1049	;# 
  4253     041A                     T5CON           equ	1050	;# 
  4254     041B                     T5GCON          equ	1051	;# 
  4255     041C                     TMR6            equ	1052	;# 
  4256     041D                     PR6             equ	1053	;# 
  4257     041E                     T6CON           equ	1054	;# 
  4258     041F                     CCDCON          equ	1055	;# 
  4259     0498                     NCO1ACC         equ	1176	;# 
  4260     0498                     NCO1ACCL        equ	1176	;# 
  4261     0499                     NCO1ACCH        equ	1177	;# 
  4262     049A                     NCO1ACCU        equ	1178	;# 
  4263     049B                     NCO1INC         equ	1179	;# 
  4264     049B                     NCO1INCL        equ	1179	;# 
  4265     049C                     NCO1INCH        equ	1180	;# 
  4266     049D                     NCO1INCU        equ	1181	;# 
  4267     049E                     NCO1CON         equ	1182	;# 
  4268     049F                     NCO1CLK         equ	1183	;# 
  4269     0617                     PWM5DCL         equ	1559	;# 
  4270     0618                     PWM5DCH         equ	1560	;# 
  4271     0619                     PWM5CON         equ	1561	;# 
  4272     0619                     PWM5CON0        equ	1561	;# 
  4273     061A                     PWM6DCL         equ	1562	;# 
  4274     061B                     PWM6DCH         equ	1563	;# 
  4275     061C                     PWM6CON         equ	1564	;# 
  4276     061C                     PWM6CON0        equ	1564	;# 
  4277     061F                     PWMTMRS         equ	1567	;# 
  4278     0691                     CWG1CLKCON      equ	1681	;# 
  4279     0692                     CWG1DAT         equ	1682	;# 
  4280     0693                     CWG1DBR         equ	1683	;# 
  4281     0694                     CWG1DBF         equ	1684	;# 
  4282     0695                     CWG1CON0        equ	1685	;# 
  4283     0696                     CWG1CON1        equ	1686	;# 
  4284     0697                     CWG1AS0         equ	1687	;# 
  4285     0698                     CWG1AS1         equ	1688	;# 
  4286     0699                     CWG1STR         equ	1689	;# 
  4287     0711                     CWG2CLKCON      equ	1809	;# 
  4288     0712                     CWG2DAT         equ	1810	;# 
  4289     0713                     CWG2DBR         equ	1811	;# 
  4290     0714                     CWG2DBF         equ	1812	;# 
  4291     0715                     CWG2CON0        equ	1813	;# 
  4292     0716                     CWG2CON1        equ	1814	;# 
  4293     0717                     CWG2AS0         equ	1815	;# 
  4294     0718                     CWG2AS1         equ	1816	;# 
  4295     0719                     CWG2STR         equ	1817	;# 
  4296     0891                     NVMADR          equ	2193	;# 
  4297     0891                     EEADR           equ	2193	;# 
  4298     0891                     PMADR           equ	2193	;# 
  4299     0891                     NVMADRL         equ	2193	;# 
  4300     0891                     EEADRL          equ	2193	;# 
  4301     0891                     PMADRL          equ	2193	;# 
  4302     0892                     NVMADRH         equ	2194	;# 
  4303     0892                     EEADRH          equ	2194	;# 
  4304     0892                     PMADRH          equ	2194	;# 
  4305     0893                     NVMDAT          equ	2195	;# 
  4306     0893                     EEDAT           equ	2195	;# 
  4307     0893                     PMDAT           equ	2195	;# 
  4308     0893                     NVMDATL         equ	2195	;# 
  4309     0893                     EEDATL          equ	2195	;# 
  4310     0893                     PMDATL          equ	2195	;# 
  4311     0894                     NVMDATH         equ	2196	;# 
  4312     0894                     EEDATH          equ	2196	;# 
  4313     0894                     PMDATH          equ	2196	;# 
  4314     0895                     NVMCON1         equ	2197	;# 
  4315     0895                     EECON1          equ	2197	;# 
  4316     0895                     PMCON1          equ	2197	;# 
  4317     0896                     NVMCON2         equ	2198	;# 
  4318     0896                     EECON2          equ	2198	;# 
  4319     0896                     PMCON2          equ	2198	;# 
  4320     089B                     PCON0           equ	2203	;# 
  4321     0911                     PMD0            equ	2321	;# 
  4322     0912                     PMD1            equ	2322	;# 
  4323     0913                     PMD2            equ	2323	;# 
  4324     0914                     PMD3            equ	2324	;# 
  4325     0915                     PMD4            equ	2325	;# 
  4326     0916                     PMD5            equ	2326	;# 
  4327     0918                     CPUDOZE         equ	2328	;# 
  4328     0919                     OSCCON1         equ	2329	;# 
  4329     091A                     OSCCON2         equ	2330	;# 
  4330     091B                     OSCCON3         equ	2331	;# 
  4331     091C                     OSCSTAT1        equ	2332	;# 
  4332     091D                     OSCEN           equ	2333	;# 
  4333     091E                     OSCTUNE         equ	2334	;# 
  4334     091F                     OSCFRQ          equ	2335	;# 
  4335     0E0F                     PPSLOCK         equ	3599	;# 
  4336     0E10                     INTPPS          equ	3600	;# 
  4337     0E11                     T0CKIPPS        equ	3601	;# 
  4338     0E12                     T1CKIPPS        equ	3602	;# 
  4339     0E13                     T1GPPS          equ	3603	;# 
  4340     0E14                     CCP1PPS         equ	3604	;# 
  4341     0E15                     CCP2PPS         equ	3605	;# 
  4342     0E16                     CCP3PPS         equ	3606	;# 
  4343     0E17                     CCP4PPS         equ	3607	;# 
  4344     0E18                     CWG1PPS         equ	3608	;# 
  4345     0E19                     CWG2PPS         equ	3609	;# 
  4346     0E1A                     MDCIN1PPS       equ	3610	;# 
  4347     0E1B                     MDCIN2PPS       equ	3611	;# 
  4348     0E1C                     MDMINPPS        equ	3612	;# 
  4349     0E1D                     SSP2CLKPPS      equ	3613	;# 
  4350     0E1E                     SSP2DATPPS      equ	3614	;# 
  4351     0E1F                     SSP2SSPPS       equ	3615	;# 
  4352     0E20                     SSP1CLKPPS      equ	3616	;# 
  4353     0E21                     SSP1DATPPS      equ	3617	;# 
  4354     0E22                     SSP1SSPPS       equ	3618	;# 
  4355     0E24                     RXPPS           equ	3620	;# 
  4356     0E25                     TXPPS           equ	3621	;# 
  4357     0E28                     CLCIN0PPS       equ	3624	;# 
  4358     0E29                     CLCIN1PPS       equ	3625	;# 
  4359     0E2A                     CLCIN2PPS       equ	3626	;# 
  4360     0E2B                     CLCIN3PPS       equ	3627	;# 
  4361     0E2C                     T3CKIPPS        equ	3628	;# 
  4362     0E2D                     T3GPPS          equ	3629	;# 
  4363     0E2E                     T5CKIPPS        equ	3630	;# 
  4364     0E2F                     T5GPPS          equ	3631	;# 
  4365     0E90                     RA0PPS          equ	3728	;# 
  4366     0E91                     RA1PPS          equ	3729	;# 
  4367     0E92                     RA2PPS          equ	3730	;# 
  4368     0E94                     RA4PPS          equ	3732	;# 
  4369     0E95                     RA5PPS          equ	3733	;# 
  4370     0E9C                     RB4PPS          equ	3740	;# 
  4371     0E9D                     RB5PPS          equ	3741	;# 
  4372     0E9E                     RB6PPS          equ	3742	;# 
  4373     0E9F                     RB7PPS          equ	3743	;# 
  4374     0EA0                     RC0PPS          equ	3744	;# 
  4375     0EA1                     RC1PPS          equ	3745	;# 
  4376     0EA2                     RC2PPS          equ	3746	;# 
  4377     0EA3                     RC3PPS          equ	3747	;# 
  4378     0EA4                     RC4PPS          equ	3748	;# 
  4379     0EA5                     RC5PPS          equ	3749	;# 
  4380     0EA6                     RC6PPS          equ	3750	;# 
  4381     0EA7                     RC7PPS          equ	3751	;# 
  4382     0F0F                     CLCDATA         equ	3855	;# 
  4383     0F10                     CLC1CON         equ	3856	;# 
  4384     0F11                     CLC1POL         equ	3857	;# 
  4385     0F12                     CLC1SEL0        equ	3858	;# 
  4386     0F13                     CLC1SEL1        equ	3859	;# 
  4387     0F14                     CLC1SEL2        equ	3860	;# 
  4388     0F15                     CLC1SEL3        equ	3861	;# 
  4389     0F16                     CLC1GLS0        equ	3862	;# 
  4390     0F17                     CLC1GLS1        equ	3863	;# 
  4391     0F18                     CLC1GLS2        equ	3864	;# 
  4392     0F19                     CLC1GLS3        equ	3865	;# 
  4393     0F1A                     CLC2CON         equ	3866	;# 
  4394     0F1B                     CLC2POL         equ	3867	;# 
  4395     0F1C                     CLC2SEL0        equ	3868	;# 
  4396     0F1D                     CLC2SEL1        equ	3869	;# 
  4397     0F1E                     CLC2SEL2        equ	3870	;# 
  4398     0F1F                     CLC2SEL3        equ	3871	;# 
  4399     0F20                     CLC2GLS0        equ	3872	;# 
  4400     0F21                     CLC2GLS1        equ	3873	;# 
  4401     0F22                     CLC2GLS2        equ	3874	;# 
  4402     0F23                     CLC2GLS3        equ	3875	;# 
  4403     0F24                     CLC3CON         equ	3876	;# 
  4404     0F25                     CLC3POL         equ	3877	;# 
  4405     0F26                     CLC3SEL0        equ	3878	;# 
  4406     0F27                     CLC3SEL1        equ	3879	;# 
  4407     0F28                     CLC3SEL2        equ	3880	;# 
  4408     0F29                     CLC3SEL3        equ	3881	;# 
  4409     0F2A                     CLC3GLS0        equ	3882	;# 
  4410     0F2B                     CLC3GLS1        equ	3883	;# 
  4411     0F2C                     CLC3GLS2        equ	3884	;# 
  4412     0F2D                     CLC3GLS3        equ	3885	;# 
  4413     0F2E                     CLC4CON         equ	3886	;# 
  4414     0F2F                     CLC4POL         equ	3887	;# 
  4415     0F30                     CLC4SEL0        equ	3888	;# 
  4416     0F31                     CLC4SEL1        equ	3889	;# 
  4417     0F32                     CLC4SEL2        equ	3890	;# 
  4418     0F33                     CLC4SEL3        equ	3891	;# 
  4419     0F34                     CLC4GLS0        equ	3892	;# 
  4420     0F35                     CLC4GLS1        equ	3893	;# 
  4421     0F36                     CLC4GLS2        equ	3894	;# 
  4422     0F37                     CLC4GLS3        equ	3895	;# 
  4423     0FE4                     STATUS_SHAD     equ	4068	;# 
  4424     0FE5                     WREG_SHAD       equ	4069	;# 
  4425     0FE6                     BSR_SHAD        equ	4070	;# 
  4426     0FE7                     PCLATH_SHAD     equ	4071	;# 
  4427     0FE8                     FSR0L_SHAD      equ	4072	;# 
  4428     0FE9                     FSR0H_SHAD      equ	4073	;# 
  4429     0FEA                     FSR1L_SHAD      equ	4074	;# 
  4430     0FEB                     FSR1H_SHAD      equ	4075	;# 
  4431     0FED                     STKPTR          equ	4077	;# 
  4432     0FEE                     TOSL            equ	4078	;# 
  4433     0FEF                     TOSH            equ	4079	;# 
  4434     0000                     INDF0           equ	0	;# 
  4435     0001                     INDF1           equ	1	;# 
  4436     0002                     PCL             equ	2	;# 
  4437     0003                     STATUS          equ	3	;# 
  4438     0004                     FSR0L           equ	4	;# 
  4439     0005                     FSR0H           equ	5	;# 
  4440     0006                     FSR1L           equ	6	;# 
  4441     0007                     FSR1H           equ	7	;# 
  4442     0008                     BSR             equ	8	;# 
  4443     0009                     WREG            equ	9	;# 
  4444     000A                     PCLATH          equ	10	;# 
  4445     000B                     INTCON          equ	11	;# 
  4446     000C                     PORTA           equ	12	;# 
  4447     000D                     PORTB           equ	13	;# 
  4448     000E                     PORTC           equ	14	;# 
  4449     0010                     PIR0            equ	16	;# 
  4450     0011                     PIR1            equ	17	;# 
  4451     0012                     PIR2            equ	18	;# 
  4452     0013                     PIR3            equ	19	;# 
  4453     0014                     PIR4            equ	20	;# 
  4454     0015                     TMR0L           equ	21	;# 
  4455     0015                     TMR0            equ	21	;# 
  4456     0016                     TMR0H           equ	22	;# 
  4457     0016                     PR0             equ	22	;# 
  4458     0017                     T0CON0          equ	23	;# 
  4459     0018                     T0CON1          equ	24	;# 
  4460     0019                     TMR1            equ	25	;# 
  4461     0019                     TMR1L           equ	25	;# 
  4462     001A                     TMR1H           equ	26	;# 
  4463     001B                     T1CON           equ	27	;# 
  4464     001C                     T1GCON          equ	28	;# 
  4465     001D                     TMR2            equ	29	;# 
  4466     001E                     PR2             equ	30	;# 
  4467     001F                     T2CON           equ	31	;# 
  4468     008C                     TRISA           equ	140	;# 
  4469     008D                     TRISB           equ	141	;# 
  4470     008E                     TRISC           equ	142	;# 
  4471     0090                     PIE0            equ	144	;# 
  4472     0091                     PIE1            equ	145	;# 
  4473     0092                     PIE2            equ	146	;# 
  4474     0093                     PIE3            equ	147	;# 
  4475     0094                     PIE4            equ	148	;# 
  4476     0097                     WDTCON          equ	151	;# 
  4477     009B                     ADRES           equ	155	;# 
  4478     009B                     ADRESL          equ	155	;# 
  4479     009C                     ADRESH          equ	156	;# 
  4480     009D                     ADCON0          equ	157	;# 
  4481     009E                     ADCON1          equ	158	;# 
  4482     009F                     ADACT           equ	159	;# 
  4483     010C                     LATA            equ	268	;# 
  4484     010D                     LATB            equ	269	;# 
  4485     010E                     LATC            equ	270	;# 
  4486     0111                     CM1CON0         equ	273	;# 
  4487     0112                     CM1CON1         equ	274	;# 
  4488     0113                     CM2CON0         equ	275	;# 
  4489     0114                     CM2CON1         equ	276	;# 
  4490     0115                     CMOUT           equ	277	;# 
  4491     0116                     BORCON          equ	278	;# 
  4492     0117                     FVRCON          equ	279	;# 
  4493     0118                     DACCON0         equ	280	;# 
  4494     0119                     DACCON1         equ	281	;# 
  4495     018C                     ANSELA          equ	396	;# 
  4496     018D                     ANSELB          equ	397	;# 
  4497     018E                     ANSELC          equ	398	;# 
  4498     0197                     VREGCON         equ	407	;# 
  4499     0199                     RC1REG          equ	409	;# 
  4500     0199                     RCREG           equ	409	;# 
  4501     0199                     RCREG1          equ	409	;# 
  4502     019A                     TX1REG          equ	410	;# 
  4503     019A                     TXREG1          equ	410	;# 
  4504     019A                     TXREG           equ	410	;# 
  4505     019B                     SP1BRG          equ	411	;# 
  4506     019B                     SPBRG           equ	411	;# 
  4507     019B                     SP1BRGL         equ	411	;# 
  4508     019B                     SPBRG1          equ	411	;# 
  4509     019B                     SPBRGL          equ	411	;# 
  4510     019C                     SP1BRGH         equ	412	;# 
  4511     019C                     SPBRGH          equ	412	;# 
  4512     019C                     SPBRGH1         equ	412	;# 
  4513     019D                     RC1STA          equ	413	;# 
  4514     019D                     RCSTA1          equ	413	;# 
  4515     019D                     RCSTA           equ	413	;# 
  4516     019E                     TX1STA          equ	414	;# 
  4517     019E                     TXSTA1          equ	414	;# 
  4518     019E                     TXSTA           equ	414	;# 
  4519     019F                     BAUD1CON        equ	415	;# 
  4520     019F                     BAUDCON1        equ	415	;# 
  4521     019F                     BAUDCTL1        equ	415	;# 
  4522     019F                     BAUDCON         equ	415	;# 
  4523     019F                     BAUDCTL         equ	415	;# 
  4524     020C                     WPUA            equ	524	;# 
  4525     020D                     WPUB            equ	525	;# 
  4526     020E                     WPUC            equ	526	;# 
  4527     0211                     SSP1BUF         equ	529	;# 
  4528     0211                     SSPBUF          equ	529	;# 
  4529     0212                     SSP1ADD         equ	530	;# 
  4530     0212                     SSPADD          equ	530	;# 
  4531     0213                     SSP1MSK         equ	531	;# 
  4532     0213                     SSPMSK          equ	531	;# 
  4533     0214                     SSP1STAT        equ	532	;# 
  4534     0214                     SSPSTAT         equ	532	;# 
  4535     0215                     SSP1CON1        equ	533	;# 
  4536     0215                     SSPCON          equ	533	;# 
  4537     0215                     SSPCON1         equ	533	;# 
  4538     0215                     SSP1CON         equ	533	;# 
  4539     0216                     SSP1CON2        equ	534	;# 
  4540     0216                     SSPCON2         equ	534	;# 
  4541     0217                     SSP1CON3        equ	535	;# 
  4542     0217                     SSPCON3         equ	535	;# 
  4543     0219                     SSP2BUF         equ	537	;# 
  4544     021A                     SSP2ADD         equ	538	;# 
  4545     021B                     SSP2MSK         equ	539	;# 
  4546     021C                     SSP2STAT        equ	540	;# 
  4547     021D                     SSP2CON1        equ	541	;# 
  4548     021D                     SSP2CON         equ	541	;# 
  4549     021E                     SSP2CON2        equ	542	;# 
  4550     021F                     SSP2CON3        equ	543	;# 
  4551     028C                     ODCONA          equ	652	;# 
  4552     028D                     ODCONB          equ	653	;# 
  4553     028E                     ODCONC          equ	654	;# 
  4554     0291                     CCPR1           equ	657	;# 
  4555     0291                     CCPR1L          equ	657	;# 
  4556     0292                     CCPR1H          equ	658	;# 
  4557     0293                     CCP1CON         equ	659	;# 
  4558     0294                     CCP1CAP         equ	660	;# 
  4559     0295                     CCPR2           equ	661	;# 
  4560     0295                     CCPR2L          equ	661	;# 
  4561     0296                     CCPR2H          equ	662	;# 
  4562     0297                     CCP2CON         equ	663	;# 
  4563     0298                     CCP2CAP         equ	664	;# 
  4564     029F                     CCPTMRS         equ	671	;# 
  4565     030C                     SLRCONA         equ	780	;# 
  4566     030D                     SLRCONB         equ	781	;# 
  4567     030E                     SLRCONC         equ	782	;# 
  4568     0311                     CCPR3           equ	785	;# 
  4569     0311                     CCPR3L          equ	785	;# 
  4570     0312                     CCPR3H          equ	786	;# 
  4571     0313                     CCP3CON         equ	787	;# 
  4572     0314                     CCP3CAP         equ	788	;# 
  4573     0315                     CCPR4           equ	789	;# 
  4574     0315                     CCPR4L          equ	789	;# 
  4575     0316                     CCPR4H          equ	790	;# 
  4576     0317                     CCP4CON         equ	791	;# 
  4577     0318                     CCP4CAP         equ	792	;# 
  4578     038C                     INLVLA          equ	908	;# 
  4579     038D                     INLVLB          equ	909	;# 
  4580     038E                     INLVLC          equ	910	;# 
  4581     0391                     IOCAP           equ	913	;# 
  4582     0392                     IOCAN           equ	914	;# 
  4583     0393                     IOCAF           equ	915	;# 
  4584     0394                     IOCBP           equ	916	;# 
  4585     0395                     IOCBN           equ	917	;# 
  4586     0396                     IOCBF           equ	918	;# 
  4587     0397                     IOCCP           equ	919	;# 
  4588     0398                     IOCCN           equ	920	;# 
  4589     0399                     IOCCF           equ	921	;# 
  4590     039A                     CLKRCON         equ	922	;# 
  4591     039C                     MDCON           equ	924	;# 
  4592     039D                     MDSRC           equ	925	;# 
  4593     039E                     MDCARH          equ	926	;# 
  4594     039F                     MDCARL          equ	927	;# 
  4595     0411                     TMR3            equ	1041	;# 
  4596     0411                     TMR3L           equ	1041	;# 
  4597     0412                     TMR3H           equ	1042	;# 
  4598     0413                     T3CON           equ	1043	;# 
  4599     0414                     T3GCON          equ	1044	;# 
  4600     0415                     TMR4            equ	1045	;# 
  4601     0416                     PR4             equ	1046	;# 
  4602     0417                     T4CON           equ	1047	;# 
  4603     0418                     TMR5            equ	1048	;# 
  4604     0418                     TMR5L           equ	1048	;# 
  4605     0419                     TMR5H           equ	1049	;# 
  4606     041A                     T5CON           equ	1050	;# 
  4607     041B                     T5GCON          equ	1051	;# 
  4608     041C                     TMR6            equ	1052	;# 
  4609     041D                     PR6             equ	1053	;# 
  4610     041E                     T6CON           equ	1054	;# 
  4611     041F                     CCDCON          equ	1055	;# 
  4612     0498                     NCO1ACC         equ	1176	;# 
  4613     0498                     NCO1ACCL        equ	1176	;# 
  4614     0499                     NCO1ACCH        equ	1177	;# 
  4615     049A                     NCO1ACCU        equ	1178	;# 
  4616     049B                     NCO1INC         equ	1179	;# 
  4617     049B                     NCO1INCL        equ	1179	;# 
  4618     049C                     NCO1INCH        equ	1180	;# 
  4619     049D                     NCO1INCU        equ	1181	;# 
  4620     049E                     NCO1CON         equ	1182	;# 
  4621     049F                     NCO1CLK         equ	1183	;# 
  4622     0617                     PWM5DCL         equ	1559	;# 
  4623     0618                     PWM5DCH         equ	1560	;# 
  4624     0619                     PWM5CON         equ	1561	;# 
  4625     0619                     PWM5CON0        equ	1561	;# 
  4626     061A                     PWM6DCL         equ	1562	;# 
  4627     061B                     PWM6DCH         equ	1563	;# 
  4628     061C                     PWM6CON         equ	1564	;# 
  4629     061C                     PWM6CON0        equ	1564	;# 
  4630     061F                     PWMTMRS         equ	1567	;# 
  4631     0691                     CWG1CLKCON      equ	1681	;# 
  4632     0692                     CWG1DAT         equ	1682	;# 
  4633     0693                     CWG1DBR         equ	1683	;# 
  4634     0694                     CWG1DBF         equ	1684	;# 
  4635     0695                     CWG1CON0        equ	1685	;# 
  4636     0696                     CWG1CON1        equ	1686	;# 
  4637     0697                     CWG1AS0         equ	1687	;# 
  4638     0698                     CWG1AS1         equ	1688	;# 
  4639     0699                     CWG1STR         equ	1689	;# 
  4640     0711                     CWG2CLKCON      equ	1809	;# 
  4641     0712                     CWG2DAT         equ	1810	;# 
  4642     0713                     CWG2DBR         equ	1811	;# 
  4643     0714                     CWG2DBF         equ	1812	;# 
  4644     0715                     CWG2CON0        equ	1813	;# 
  4645     0716                     CWG2CON1        equ	1814	;# 
  4646     0717                     CWG2AS0         equ	1815	;# 
  4647     0718                     CWG2AS1         equ	1816	;# 
  4648     0719                     CWG2STR         equ	1817	;# 
  4649     0891                     NVMADR          equ	2193	;# 
  4650     0891                     EEADR           equ	2193	;# 
  4651     0891                     PMADR           equ	2193	;# 
  4652     0891                     NVMADRL         equ	2193	;# 
  4653     0891                     EEADRL          equ	2193	;# 
  4654     0891                     PMADRL          equ	2193	;# 
  4655     0892                     NVMADRH         equ	2194	;# 
  4656     0892                     EEADRH          equ	2194	;# 
  4657     0892                     PMADRH          equ	2194	;# 
  4658     0893                     NVMDAT          equ	2195	;# 
  4659     0893                     EEDAT           equ	2195	;# 
  4660     0893                     PMDAT           equ	2195	;# 
  4661     0893                     NVMDATL         equ	2195	;# 
  4662     0893                     EEDATL          equ	2195	;# 
  4663     0893                     PMDATL          equ	2195	;# 
  4664     0894                     NVMDATH         equ	2196	;# 
  4665     0894                     EEDATH          equ	2196	;# 
  4666     0894                     PMDATH          equ	2196	;# 
  4667     0895                     NVMCON1         equ	2197	;# 
  4668     0895                     EECON1          equ	2197	;# 
  4669     0895                     PMCON1          equ	2197	;# 
  4670     0896                     NVMCON2         equ	2198	;# 
  4671     0896                     EECON2          equ	2198	;# 
  4672     0896                     PMCON2          equ	2198	;# 
  4673     089B                     PCON0           equ	2203	;# 
  4674     0911                     PMD0            equ	2321	;# 
  4675     0912                     PMD1            equ	2322	;# 
  4676     0913                     PMD2            equ	2323	;# 
  4677     0914                     PMD3            equ	2324	;# 
  4678     0915                     PMD4            equ	2325	;# 
  4679     0916                     PMD5            equ	2326	;# 
  4680     0918                     CPUDOZE         equ	2328	;# 
  4681     0919                     OSCCON1         equ	2329	;# 
  4682     091A                     OSCCON2         equ	2330	;# 
  4683     091B                     OSCCON3         equ	2331	;# 
  4684     091C                     OSCSTAT1        equ	2332	;# 
  4685     091D                     OSCEN           equ	2333	;# 
  4686     091E                     OSCTUNE         equ	2334	;# 
  4687     091F                     OSCFRQ          equ	2335	;# 
  4688     0E0F                     PPSLOCK         equ	3599	;# 
  4689     0E10                     INTPPS          equ	3600	;# 
  4690     0E11                     T0CKIPPS        equ	3601	;# 
  4691     0E12                     T1CKIPPS        equ	3602	;# 
  4692     0E13                     T1GPPS          equ	3603	;# 
  4693     0E14                     CCP1PPS         equ	3604	;# 
  4694     0E15                     CCP2PPS         equ	3605	;# 
  4695     0E16                     CCP3PPS         equ	3606	;# 
  4696     0E17                     CCP4PPS         equ	3607	;# 
  4697     0E18                     CWG1PPS         equ	3608	;# 
  4698     0E19                     CWG2PPS         equ	3609	;# 
  4699     0E1A                     MDCIN1PPS       equ	3610	;# 
  4700     0E1B                     MDCIN2PPS       equ	3611	;# 
  4701     0E1C                     MDMINPPS        equ	3612	;# 
  4702     0E1D                     SSP2CLKPPS      equ	3613	;# 
  4703     0E1E                     SSP2DATPPS      equ	3614	;# 
  4704     0E1F                     SSP2SSPPS       equ	3615	;# 
  4705     0E20                     SSP1CLKPPS      equ	3616	;# 
  4706     0E21                     SSP1DATPPS      equ	3617	;# 
  4707     0E22                     SSP1SSPPS       equ	3618	;# 
  4708     0E24                     RXPPS           equ	3620	;# 
  4709     0E25                     TXPPS           equ	3621	;# 
  4710     0E28                     CLCIN0PPS       equ	3624	;# 
  4711     0E29                     CLCIN1PPS       equ	3625	;# 
  4712     0E2A                     CLCIN2PPS       equ	3626	;# 
  4713     0E2B                     CLCIN3PPS       equ	3627	;# 
  4714     0E2C                     T3CKIPPS        equ	3628	;# 
  4715     0E2D                     T3GPPS          equ	3629	;# 
  4716     0E2E                     T5CKIPPS        equ	3630	;# 
  4717     0E2F                     T5GPPS          equ	3631	;# 
  4718     0E90                     RA0PPS          equ	3728	;# 
  4719     0E91                     RA1PPS          equ	3729	;# 
  4720     0E92                     RA2PPS          equ	3730	;# 
  4721     0E94                     RA4PPS          equ	3732	;# 
  4722     0E95                     RA5PPS          equ	3733	;# 
  4723     0E9C                     RB4PPS          equ	3740	;# 
  4724     0E9D                     RB5PPS          equ	3741	;# 
  4725     0E9E                     RB6PPS          equ	3742	;# 
  4726     0E9F                     RB7PPS          equ	3743	;# 
  4727     0EA0                     RC0PPS          equ	3744	;# 
  4728     0EA1                     RC1PPS          equ	3745	;# 
  4729     0EA2                     RC2PPS          equ	3746	;# 
  4730     0EA3                     RC3PPS          equ	3747	;# 
  4731     0EA4                     RC4PPS          equ	3748	;# 
  4732     0EA5                     RC5PPS          equ	3749	;# 
  4733     0EA6                     RC6PPS          equ	3750	;# 
  4734     0EA7                     RC7PPS          equ	3751	;# 
  4735     0F0F                     CLCDATA         equ	3855	;# 
  4736     0F10                     CLC1CON         equ	3856	;# 
  4737     0F11                     CLC1POL         equ	3857	;# 
  4738     0F12                     CLC1SEL0        equ	3858	;# 
  4739     0F13                     CLC1SEL1        equ	3859	;# 
  4740     0F14                     CLC1SEL2        equ	3860	;# 
  4741     0F15                     CLC1SEL3        equ	3861	;# 
  4742     0F16                     CLC1GLS0        equ	3862	;# 
  4743     0F17                     CLC1GLS1        equ	3863	;# 
  4744     0F18                     CLC1GLS2        equ	3864	;# 
  4745     0F19                     CLC1GLS3        equ	3865	;# 
  4746     0F1A                     CLC2CON         equ	3866	;# 
  4747     0F1B                     CLC2POL         equ	3867	;# 
  4748     0F1C                     CLC2SEL0        equ	3868	;# 
  4749     0F1D                     CLC2SEL1        equ	3869	;# 
  4750     0F1E                     CLC2SEL2        equ	3870	;# 
  4751     0F1F                     CLC2SEL3        equ	3871	;# 
  4752     0F20                     CLC2GLS0        equ	3872	;# 
  4753     0F21                     CLC2GLS1        equ	3873	;# 
  4754     0F22                     CLC2GLS2        equ	3874	;# 
  4755     0F23                     CLC2GLS3        equ	3875	;# 
  4756     0F24                     CLC3CON         equ	3876	;# 
  4757     0F25                     CLC3POL         equ	3877	;# 
  4758     0F26                     CLC3SEL0        equ	3878	;# 
  4759     0F27                     CLC3SEL1        equ	3879	;# 
  4760     0F28                     CLC3SEL2        equ	3880	;# 
  4761     0F29                     CLC3SEL3        equ	3881	;# 
  4762     0F2A                     CLC3GLS0        equ	3882	;# 
  4763     0F2B                     CLC3GLS1        equ	3883	;# 
  4764     0F2C                     CLC3GLS2        equ	3884	;# 
  4765     0F2D                     CLC3GLS3        equ	3885	;# 
  4766     0F2E                     CLC4CON         equ	3886	;# 
  4767     0F2F                     CLC4POL         equ	3887	;# 
  4768     0F30                     CLC4SEL0        equ	3888	;# 
  4769     0F31                     CLC4SEL1        equ	3889	;# 
  4770     0F32                     CLC4SEL2        equ	3890	;# 
  4771     0F33                     CLC4SEL3        equ	3891	;# 
  4772     0F34                     CLC4GLS0        equ	3892	;# 
  4773     0F35                     CLC4GLS1        equ	3893	;# 
  4774     0F36                     CLC4GLS2        equ	3894	;# 
  4775     0F37                     CLC4GLS3        equ	3895	;# 
  4776     0FE4                     STATUS_SHAD     equ	4068	;# 
  4777     0FE5                     WREG_SHAD       equ	4069	;# 
  4778     0FE6                     BSR_SHAD        equ	4070	;# 
  4779     0FE7                     PCLATH_SHAD     equ	4071	;# 
  4780     0FE8                     FSR0L_SHAD      equ	4072	;# 
  4781     0FE9                     FSR0H_SHAD      equ	4073	;# 
  4782     0FEA                     FSR1L_SHAD      equ	4074	;# 
  4783     0FEB                     FSR1H_SHAD      equ	4075	;# 
  4784     0FED                     STKPTR          equ	4077	;# 
  4785     0FEE                     TOSL            equ	4078	;# 
  4786     0FEF                     TOSH            equ	4079	;# 
  4787     0000                     INDF0           equ	0	;# 
  4788     0001                     INDF1           equ	1	;# 
  4789     0002                     PCL             equ	2	;# 
  4790     0003                     STATUS          equ	3	;# 
  4791     0004                     FSR0L           equ	4	;# 
  4792     0005                     FSR0H           equ	5	;# 
  4793     0006                     FSR1L           equ	6	;# 
  4794     0007                     FSR1H           equ	7	;# 
  4795     0008                     BSR             equ	8	;# 
  4796     0009                     WREG            equ	9	;# 
  4797     000A                     PCLATH          equ	10	;# 
  4798     000B                     INTCON          equ	11	;# 
  4799     000C                     PORTA           equ	12	;# 
  4800     000D                     PORTB           equ	13	;# 
  4801     000E                     PORTC           equ	14	;# 
  4802     0010                     PIR0            equ	16	;# 
  4803     0011                     PIR1            equ	17	;# 
  4804     0012                     PIR2            equ	18	;# 
  4805     0013                     PIR3            equ	19	;# 
  4806     0014                     PIR4            equ	20	;# 
  4807     0015                     TMR0L           equ	21	;# 
  4808     0015                     TMR0            equ	21	;# 
  4809     0016                     TMR0H           equ	22	;# 
  4810     0016                     PR0             equ	22	;# 
  4811     0017                     T0CON0          equ	23	;# 
  4812     0018                     T0CON1          equ	24	;# 
  4813     0019                     TMR1            equ	25	;# 
  4814     0019                     TMR1L           equ	25	;# 
  4815     001A                     TMR1H           equ	26	;# 
  4816     001B                     T1CON           equ	27	;# 
  4817     001C                     T1GCON          equ	28	;# 
  4818     001D                     TMR2            equ	29	;# 
  4819     001E                     PR2             equ	30	;# 
  4820     001F                     T2CON           equ	31	;# 
  4821     008C                     TRISA           equ	140	;# 
  4822     008D                     TRISB           equ	141	;# 
  4823     008E                     TRISC           equ	142	;# 
  4824     0090                     PIE0            equ	144	;# 
  4825     0091                     PIE1            equ	145	;# 
  4826     0092                     PIE2            equ	146	;# 
  4827     0093                     PIE3            equ	147	;# 
  4828     0094                     PIE4            equ	148	;# 
  4829     0097                     WDTCON          equ	151	;# 
  4830     009B                     ADRES           equ	155	;# 
  4831     009B                     ADRESL          equ	155	;# 
  4832     009C                     ADRESH          equ	156	;# 
  4833     009D                     ADCON0          equ	157	;# 
  4834     009E                     ADCON1          equ	158	;# 
  4835     009F                     ADACT           equ	159	;# 
  4836     010C                     LATA            equ	268	;# 
  4837     010D                     LATB            equ	269	;# 
  4838     010E                     LATC            equ	270	;# 
  4839     0111                     CM1CON0         equ	273	;# 
  4840     0112                     CM1CON1         equ	274	;# 
  4841     0113                     CM2CON0         equ	275	;# 
  4842     0114                     CM2CON1         equ	276	;# 
  4843     0115                     CMOUT           equ	277	;# 
  4844     0116                     BORCON          equ	278	;# 
  4845     0117                     FVRCON          equ	279	;# 
  4846     0118                     DACCON0         equ	280	;# 
  4847     0119                     DACCON1         equ	281	;# 
  4848     018C                     ANSELA          equ	396	;# 
  4849     018D                     ANSELB          equ	397	;# 
  4850     018E                     ANSELC          equ	398	;# 
  4851     0197                     VREGCON         equ	407	;# 
  4852     0199                     RC1REG          equ	409	;# 
  4853     0199                     RCREG           equ	409	;# 
  4854     0199                     RCREG1          equ	409	;# 
  4855     019A                     TX1REG          equ	410	;# 
  4856     019A                     TXREG1          equ	410	;# 
  4857     019A                     TXREG           equ	410	;# 
  4858     019B                     SP1BRG          equ	411	;# 
  4859     019B                     SPBRG           equ	411	;# 
  4860     019B                     SP1BRGL         equ	411	;# 
  4861     019B                     SPBRG1          equ	411	;# 
  4862     019B                     SPBRGL          equ	411	;# 
  4863     019C                     SP1BRGH         equ	412	;# 
  4864     019C                     SPBRGH          equ	412	;# 
  4865     019C                     SPBRGH1         equ	412	;# 
  4866     019D                     RC1STA          equ	413	;# 
  4867     019D                     RCSTA1          equ	413	;# 
  4868     019D                     RCSTA           equ	413	;# 
  4869     019E                     TX1STA          equ	414	;# 
  4870     019E                     TXSTA1          equ	414	;# 
  4871     019E                     TXSTA           equ	414	;# 
  4872     019F                     BAUD1CON        equ	415	;# 
  4873     019F                     BAUDCON1        equ	415	;# 
  4874     019F                     BAUDCTL1        equ	415	;# 
  4875     019F                     BAUDCON         equ	415	;# 
  4876     019F                     BAUDCTL         equ	415	;# 
  4877     020C                     WPUA            equ	524	;# 
  4878     020D                     WPUB            equ	525	;# 
  4879     020E                     WPUC            equ	526	;# 
  4880     0211                     SSP1BUF         equ	529	;# 
  4881     0211                     SSPBUF          equ	529	;# 
  4882     0212                     SSP1ADD         equ	530	;# 
  4883     0212                     SSPADD          equ	530	;# 
  4884     0213                     SSP1MSK         equ	531	;# 
  4885     0213                     SSPMSK          equ	531	;# 
  4886     0214                     SSP1STAT        equ	532	;# 
  4887     0214                     SSPSTAT         equ	532	;# 
  4888     0215                     SSP1CON1        equ	533	;# 
  4889     0215                     SSPCON          equ	533	;# 
  4890     0215                     SSPCON1         equ	533	;# 
  4891     0215                     SSP1CON         equ	533	;# 
  4892     0216                     SSP1CON2        equ	534	;# 
  4893     0216                     SSPCON2         equ	534	;# 
  4894     0217                     SSP1CON3        equ	535	;# 
  4895     0217                     SSPCON3         equ	535	;# 
  4896     0219                     SSP2BUF         equ	537	;# 
  4897     021A                     SSP2ADD         equ	538	;# 
  4898     021B                     SSP2MSK         equ	539	;# 
  4899     021C                     SSP2STAT        equ	540	;# 
  4900     021D                     SSP2CON1        equ	541	;# 
  4901     021D                     SSP2CON         equ	541	;# 
  4902     021E                     SSP2CON2        equ	542	;# 
  4903     021F                     SSP2CON3        equ	543	;# 
  4904     028C                     ODCONA          equ	652	;# 
  4905     028D                     ODCONB          equ	653	;# 
  4906     028E                     ODCONC          equ	654	;# 
  4907     0291                     CCPR1           equ	657	;# 
  4908     0291                     CCPR1L          equ	657	;# 
  4909     0292                     CCPR1H          equ	658	;# 
  4910     0293                     CCP1CON         equ	659	;# 
  4911     0294                     CCP1CAP         equ	660	;# 
  4912     0295                     CCPR2           equ	661	;# 
  4913     0295                     CCPR2L          equ	661	;# 
  4914     0296                     CCPR2H          equ	662	;# 
  4915     0297                     CCP2CON         equ	663	;# 
  4916     0298                     CCP2CAP         equ	664	;# 
  4917     029F                     CCPTMRS         equ	671	;# 
  4918     030C                     SLRCONA         equ	780	;# 
  4919     030D                     SLRCONB         equ	781	;# 
  4920     030E                     SLRCONC         equ	782	;# 
  4921     0311                     CCPR3           equ	785	;# 
  4922     0311                     CCPR3L          equ	785	;# 
  4923     0312                     CCPR3H          equ	786	;# 
  4924     0313                     CCP3CON         equ	787	;# 
  4925     0314                     CCP3CAP         equ	788	;# 
  4926     0315                     CCPR4           equ	789	;# 
  4927     0315                     CCPR4L          equ	789	;# 
  4928     0316                     CCPR4H          equ	790	;# 
  4929     0317                     CCP4CON         equ	791	;# 
  4930     0318                     CCP4CAP         equ	792	;# 
  4931     038C                     INLVLA          equ	908	;# 
  4932     038D                     INLVLB          equ	909	;# 
  4933     038E                     INLVLC          equ	910	;# 
  4934     0391                     IOCAP           equ	913	;# 
  4935     0392                     IOCAN           equ	914	;# 
  4936     0393                     IOCAF           equ	915	;# 
  4937     0394                     IOCBP           equ	916	;# 
  4938     0395                     IOCBN           equ	917	;# 
  4939     0396                     IOCBF           equ	918	;# 
  4940     0397                     IOCCP           equ	919	;# 
  4941     0398                     IOCCN           equ	920	;# 
  4942     0399                     IOCCF           equ	921	;# 
  4943     039A                     CLKRCON         equ	922	;# 
  4944     039C                     MDCON           equ	924	;# 
  4945     039D                     MDSRC           equ	925	;# 
  4946     039E                     MDCARH          equ	926	;# 
  4947     039F                     MDCARL          equ	927	;# 
  4948     0411                     TMR3            equ	1041	;# 
  4949     0411                     TMR3L           equ	1041	;# 
  4950     0412                     TMR3H           equ	1042	;# 
  4951     0413                     T3CON           equ	1043	;# 
  4952     0414                     T3GCON          equ	1044	;# 
  4953     0415                     TMR4            equ	1045	;# 
  4954     0416                     PR4             equ	1046	;# 
  4955     0417                     T4CON           equ	1047	;# 
  4956     0418                     TMR5            equ	1048	;# 
  4957     0418                     TMR5L           equ	1048	;# 
  4958     0419                     TMR5H           equ	1049	;# 
  4959     041A                     T5CON           equ	1050	;# 
  4960     041B                     T5GCON          equ	1051	;# 
  4961     041C                     TMR6            equ	1052	;# 
  4962     041D                     PR6             equ	1053	;# 
  4963     041E                     T6CON           equ	1054	;# 
  4964     041F                     CCDCON          equ	1055	;# 
  4965     0498                     NCO1ACC         equ	1176	;# 
  4966     0498                     NCO1ACCL        equ	1176	;# 
  4967     0499                     NCO1ACCH        equ	1177	;# 
  4968     049A                     NCO1ACCU        equ	1178	;# 
  4969     049B                     NCO1INC         equ	1179	;# 
  4970     049B                     NCO1INCL        equ	1179	;# 
  4971     049C                     NCO1INCH        equ	1180	;# 
  4972     049D                     NCO1INCU        equ	1181	;# 
  4973     049E                     NCO1CON         equ	1182	;# 
  4974     049F                     NCO1CLK         equ	1183	;# 
  4975     0617                     PWM5DCL         equ	1559	;# 
  4976     0618                     PWM5DCH         equ	1560	;# 
  4977     0619                     PWM5CON         equ	1561	;# 
  4978     0619                     PWM5CON0        equ	1561	;# 
  4979     061A                     PWM6DCL         equ	1562	;# 
  4980     061B                     PWM6DCH         equ	1563	;# 
  4981     061C                     PWM6CON         equ	1564	;# 
  4982     061C                     PWM6CON0        equ	1564	;# 
  4983     061F                     PWMTMRS         equ	1567	;# 
  4984     0691                     CWG1CLKCON      equ	1681	;# 
  4985     0692                     CWG1DAT         equ	1682	;# 
  4986     0693                     CWG1DBR         equ	1683	;# 
  4987     0694                     CWG1DBF         equ	1684	;# 
  4988     0695                     CWG1CON0        equ	1685	;# 
  4989     0696                     CWG1CON1        equ	1686	;# 
  4990     0697                     CWG1AS0         equ	1687	;# 
  4991     0698                     CWG1AS1         equ	1688	;# 
  4992     0699                     CWG1STR         equ	1689	;# 
  4993     0711                     CWG2CLKCON      equ	1809	;# 
  4994     0712                     CWG2DAT         equ	1810	;# 
  4995     0713                     CWG2DBR         equ	1811	;# 
  4996     0714                     CWG2DBF         equ	1812	;# 
  4997     0715                     CWG2CON0        equ	1813	;# 
  4998     0716                     CWG2CON1        equ	1814	;# 
  4999     0717                     CWG2AS0         equ	1815	;# 
  5000     0718                     CWG2AS1         equ	1816	;# 
  5001     0719                     CWG2STR         equ	1817	;# 
  5002     0891                     NVMADR          equ	2193	;# 
  5003     0891                     EEADR           equ	2193	;# 
  5004     0891                     PMADR           equ	2193	;# 
  5005     0891                     NVMADRL         equ	2193	;# 
  5006     0891                     EEADRL          equ	2193	;# 
  5007     0891                     PMADRL          equ	2193	;# 
  5008     0892                     NVMADRH         equ	2194	;# 
  5009     0892                     EEADRH          equ	2194	;# 
  5010     0892                     PMADRH          equ	2194	;# 
  5011     0893                     NVMDAT          equ	2195	;# 
  5012     0893                     EEDAT           equ	2195	;# 
  5013     0893                     PMDAT           equ	2195	;# 
  5014     0893                     NVMDATL         equ	2195	;# 
  5015     0893                     EEDATL          equ	2195	;# 
  5016     0893                     PMDATL          equ	2195	;# 
  5017     0894                     NVMDATH         equ	2196	;# 
  5018     0894                     EEDATH          equ	2196	;# 
  5019     0894                     PMDATH          equ	2196	;# 
  5020     0895                     NVMCON1         equ	2197	;# 
  5021     0895                     EECON1          equ	2197	;# 
  5022     0895                     PMCON1          equ	2197	;# 
  5023     0896                     NVMCON2         equ	2198	;# 
  5024     0896                     EECON2          equ	2198	;# 
  5025     0896                     PMCON2          equ	2198	;# 
  5026     089B                     PCON0           equ	2203	;# 
  5027     0911                     PMD0            equ	2321	;# 
  5028     0912                     PMD1            equ	2322	;# 
  5029     0913                     PMD2            equ	2323	;# 
  5030     0914                     PMD3            equ	2324	;# 
  5031     0915                     PMD4            equ	2325	;# 
  5032     0916                     PMD5            equ	2326	;# 
  5033     0918                     CPUDOZE         equ	2328	;# 
  5034     0919                     OSCCON1         equ	2329	;# 
  5035     091A                     OSCCON2         equ	2330	;# 
  5036     091B                     OSCCON3         equ	2331	;# 
  5037     091C                     OSCSTAT1        equ	2332	;# 
  5038     091D                     OSCEN           equ	2333	;# 
  5039     091E                     OSCTUNE         equ	2334	;# 
  5040     091F                     OSCFRQ          equ	2335	;# 
  5041     0E0F                     PPSLOCK         equ	3599	;# 
  5042     0E10                     INTPPS          equ	3600	;# 
  5043     0E11                     T0CKIPPS        equ	3601	;# 
  5044     0E12                     T1CKIPPS        equ	3602	;# 
  5045     0E13                     T1GPPS          equ	3603	;# 
  5046     0E14                     CCP1PPS         equ	3604	;# 
  5047     0E15                     CCP2PPS         equ	3605	;# 
  5048     0E16                     CCP3PPS         equ	3606	;# 
  5049     0E17                     CCP4PPS         equ	3607	;# 
  5050     0E18                     CWG1PPS         equ	3608	;# 
  5051     0E19                     CWG2PPS         equ	3609	;# 
  5052     0E1A                     MDCIN1PPS       equ	3610	;# 
  5053     0E1B                     MDCIN2PPS       equ	3611	;# 
  5054     0E1C                     MDMINPPS        equ	3612	;# 
  5055     0E1D                     SSP2CLKPPS      equ	3613	;# 
  5056     0E1E                     SSP2DATPPS      equ	3614	;# 
  5057     0E1F                     SSP2SSPPS       equ	3615	;# 
  5058     0E20                     SSP1CLKPPS      equ	3616	;# 
  5059     0E21                     SSP1DATPPS      equ	3617	;# 
  5060     0E22                     SSP1SSPPS       equ	3618	;# 
  5061     0E24                     RXPPS           equ	3620	;# 
  5062     0E25                     TXPPS           equ	3621	;# 
  5063     0E28                     CLCIN0PPS       equ	3624	;# 
  5064     0E29                     CLCIN1PPS       equ	3625	;# 
  5065     0E2A                     CLCIN2PPS       equ	3626	;# 
  5066     0E2B                     CLCIN3PPS       equ	3627	;# 
  5067     0E2C                     T3CKIPPS        equ	3628	;# 
  5068     0E2D                     T3GPPS          equ	3629	;# 
  5069     0E2E                     T5CKIPPS        equ	3630	;# 
  5070     0E2F                     T5GPPS          equ	3631	;# 
  5071     0E90                     RA0PPS          equ	3728	;# 
  5072     0E91                     RA1PPS          equ	3729	;# 
  5073     0E92                     RA2PPS          equ	3730	;# 
  5074     0E94                     RA4PPS          equ	3732	;# 
  5075     0E95                     RA5PPS          equ	3733	;# 
  5076     0E9C                     RB4PPS          equ	3740	;# 
  5077     0E9D                     RB5PPS          equ	3741	;# 
  5078     0E9E                     RB6PPS          equ	3742	;# 
  5079     0E9F                     RB7PPS          equ	3743	;# 
  5080     0EA0                     RC0PPS          equ	3744	;# 
  5081     0EA1                     RC1PPS          equ	3745	;# 
  5082     0EA2                     RC2PPS          equ	3746	;# 
  5083     0EA3                     RC3PPS          equ	3747	;# 
  5084     0EA4                     RC4PPS          equ	3748	;# 
  5085     0EA5                     RC5PPS          equ	3749	;# 
  5086     0EA6                     RC6PPS          equ	3750	;# 
  5087     0EA7                     RC7PPS          equ	3751	;# 
  5088     0F0F                     CLCDATA         equ	3855	;# 
  5089     0F10                     CLC1CON         equ	3856	;# 
  5090     0F11                     CLC1POL         equ	3857	;# 
  5091     0F12                     CLC1SEL0        equ	3858	;# 
  5092     0F13                     CLC1SEL1        equ	3859	;# 
  5093     0F14                     CLC1SEL2        equ	3860	;# 
  5094     0F15                     CLC1SEL3        equ	3861	;# 
  5095     0F16                     CLC1GLS0        equ	3862	;# 
  5096     0F17                     CLC1GLS1        equ	3863	;# 
  5097     0F18                     CLC1GLS2        equ	3864	;# 
  5098     0F19                     CLC1GLS3        equ	3865	;# 
  5099     0F1A                     CLC2CON         equ	3866	;# 
  5100     0F1B                     CLC2POL         equ	3867	;# 
  5101     0F1C                     CLC2SEL0        equ	3868	;# 
  5102     0F1D                     CLC2SEL1        equ	3869	;# 
  5103     0F1E                     CLC2SEL2        equ	3870	;# 
  5104     0F1F                     CLC2SEL3        equ	3871	;# 
  5105     0F20                     CLC2GLS0        equ	3872	;# 
  5106     0F21                     CLC2GLS1        equ	3873	;# 
  5107     0F22                     CLC2GLS2        equ	3874	;# 
  5108     0F23                     CLC2GLS3        equ	3875	;# 
  5109     0F24                     CLC3CON         equ	3876	;# 
  5110     0F25                     CLC3POL         equ	3877	;# 
  5111     0F26                     CLC3SEL0        equ	3878	;# 
  5112     0F27                     CLC3SEL1        equ	3879	;# 
  5113     0F28                     CLC3SEL2        equ	3880	;# 
  5114     0F29                     CLC3SEL3        equ	3881	;# 
  5115     0F2A                     CLC3GLS0        equ	3882	;# 
  5116     0F2B                     CLC3GLS1        equ	3883	;# 
  5117     0F2C                     CLC3GLS2        equ	3884	;# 
  5118     0F2D                     CLC3GLS3        equ	3885	;# 
  5119     0F2E                     CLC4CON         equ	3886	;# 
  5120     0F2F                     CLC4POL         equ	3887	;# 
  5121     0F30                     CLC4SEL0        equ	3888	;# 
  5122     0F31                     CLC4SEL1        equ	3889	;# 
  5123     0F32                     CLC4SEL2        equ	3890	;# 
  5124     0F33                     CLC4SEL3        equ	3891	;# 
  5125     0F34                     CLC4GLS0        equ	3892	;# 
  5126     0F35                     CLC4GLS1        equ	3893	;# 
  5127     0F36                     CLC4GLS2        equ	3894	;# 
  5128     0F37                     CLC4GLS3        equ	3895	;# 
  5129     0FE4                     STATUS_SHAD     equ	4068	;# 
  5130     0FE5                     WREG_SHAD       equ	4069	;# 
  5131     0FE6                     BSR_SHAD        equ	4070	;# 
  5132     0FE7                     PCLATH_SHAD     equ	4071	;# 
  5133     0FE8                     FSR0L_SHAD      equ	4072	;# 
  5134     0FE9                     FSR0H_SHAD      equ	4073	;# 
  5135     0FEA                     FSR1L_SHAD      equ	4074	;# 
  5136     0FEB                     FSR1H_SHAD      equ	4075	;# 
  5137     0FED                     STKPTR          equ	4077	;# 
  5138     0FEE                     TOSL            equ	4078	;# 
  5139     0FEF                     TOSH            equ	4079	;# 
  5140     0000                     INDF0           equ	0	;# 
  5141     0001                     INDF1           equ	1	;# 
  5142     0002                     PCL             equ	2	;# 
  5143     0003                     STATUS          equ	3	;# 
  5144     0004                     FSR0L           equ	4	;# 
  5145     0005                     FSR0H           equ	5	;# 
  5146     0006                     FSR1L           equ	6	;# 
  5147     0007                     FSR1H           equ	7	;# 
  5148     0008                     BSR             equ	8	;# 
  5149     0009                     WREG            equ	9	;# 
  5150     000A                     PCLATH          equ	10	;# 
  5151     000B                     INTCON          equ	11	;# 
  5152     000C                     PORTA           equ	12	;# 
  5153     000D                     PORTB           equ	13	;# 
  5154     000E                     PORTC           equ	14	;# 
  5155     0010                     PIR0            equ	16	;# 
  5156     0011                     PIR1            equ	17	;# 
  5157     0012                     PIR2            equ	18	;# 
  5158     0013                     PIR3            equ	19	;# 
  5159     0014                     PIR4            equ	20	;# 
  5160     0015                     TMR0L           equ	21	;# 
  5161     0015                     TMR0            equ	21	;# 
  5162     0016                     TMR0H           equ	22	;# 
  5163     0016                     PR0             equ	22	;# 
  5164     0017                     T0CON0          equ	23	;# 
  5165     0018                     T0CON1          equ	24	;# 
  5166     0019                     TMR1            equ	25	;# 
  5167     0019                     TMR1L           equ	25	;# 
  5168     001A                     TMR1H           equ	26	;# 
  5169     001B                     T1CON           equ	27	;# 
  5170     001C                     T1GCON          equ	28	;# 
  5171     001D                     TMR2            equ	29	;# 
  5172     001E                     PR2             equ	30	;# 
  5173     001F                     T2CON           equ	31	;# 
  5174     008C                     TRISA           equ	140	;# 
  5175     008D                     TRISB           equ	141	;# 
  5176     008E                     TRISC           equ	142	;# 
  5177     0090                     PIE0            equ	144	;# 
  5178     0091                     PIE1            equ	145	;# 
  5179     0092                     PIE2            equ	146	;# 
  5180     0093                     PIE3            equ	147	;# 
  5181     0094                     PIE4            equ	148	;# 
  5182     0097                     WDTCON          equ	151	;# 
  5183     009B                     ADRES           equ	155	;# 
  5184     009B                     ADRESL          equ	155	;# 
  5185     009C                     ADRESH          equ	156	;# 
  5186     009D                     ADCON0          equ	157	;# 
  5187     009E                     ADCON1          equ	158	;# 
  5188     009F                     ADACT           equ	159	;# 
  5189     010C                     LATA            equ	268	;# 
  5190     010D                     LATB            equ	269	;# 
  5191     010E                     LATC            equ	270	;# 
  5192     0111                     CM1CON0         equ	273	;# 
  5193     0112                     CM1CON1         equ	274	;# 
  5194     0113                     CM2CON0         equ	275	;# 
  5195     0114                     CM2CON1         equ	276	;# 
  5196     0115                     CMOUT           equ	277	;# 
  5197     0116                     BORCON          equ	278	;# 
  5198     0117                     FVRCON          equ	279	;# 
  5199     0118                     DACCON0         equ	280	;# 
  5200     0119                     DACCON1         equ	281	;# 
  5201     018C                     ANSELA          equ	396	;# 
  5202     018D                     ANSELB          equ	397	;# 
  5203     018E                     ANSELC          equ	398	;# 
  5204     0197                     VREGCON         equ	407	;# 
  5205     0199                     RC1REG          equ	409	;# 
  5206     0199                     RCREG           equ	409	;# 
  5207     0199                     RCREG1          equ	409	;# 
  5208     019A                     TX1REG          equ	410	;# 
  5209     019A                     TXREG1          equ	410	;# 
  5210     019A                     TXREG           equ	410	;# 
  5211     019B                     SP1BRG          equ	411	;# 
  5212     019B                     SPBRG           equ	411	;# 
  5213     019B                     SP1BRGL         equ	411	;# 
  5214     019B                     SPBRG1          equ	411	;# 
  5215     019B                     SPBRGL          equ	411	;# 
  5216     019C                     SP1BRGH         equ	412	;# 
  5217     019C                     SPBRGH          equ	412	;# 
  5218     019C                     SPBRGH1         equ	412	;# 
  5219     019D                     RC1STA          equ	413	;# 
  5220     019D                     RCSTA1          equ	413	;# 
  5221     019D                     RCSTA           equ	413	;# 
  5222     019E                     TX1STA          equ	414	;# 
  5223     019E                     TXSTA1          equ	414	;# 
  5224     019E                     TXSTA           equ	414	;# 
  5225     019F                     BAUD1CON        equ	415	;# 
  5226     019F                     BAUDCON1        equ	415	;# 
  5227     019F                     BAUDCTL1        equ	415	;# 
  5228     019F                     BAUDCON         equ	415	;# 
  5229     019F                     BAUDCTL         equ	415	;# 
  5230     020C                     WPUA            equ	524	;# 
  5231     020D                     WPUB            equ	525	;# 
  5232     020E                     WPUC            equ	526	;# 
  5233     0211                     SSP1BUF         equ	529	;# 
  5234     0211                     SSPBUF          equ	529	;# 
  5235     0212                     SSP1ADD         equ	530	;# 
  5236     0212                     SSPADD          equ	530	;# 
  5237     0213                     SSP1MSK         equ	531	;# 
  5238     0213                     SSPMSK          equ	531	;# 
  5239     0214                     SSP1STAT        equ	532	;# 
  5240     0214                     SSPSTAT         equ	532	;# 
  5241     0215                     SSP1CON1        equ	533	;# 
  5242     0215                     SSPCON          equ	533	;# 
  5243     0215                     SSPCON1         equ	533	;# 
  5244     0215                     SSP1CON         equ	533	;# 
  5245     0216                     SSP1CON2        equ	534	;# 
  5246     0216                     SSPCON2         equ	534	;# 
  5247     0217                     SSP1CON3        equ	535	;# 
  5248     0217                     SSPCON3         equ	535	;# 
  5249     0219                     SSP2BUF         equ	537	;# 
  5250     021A                     SSP2ADD         equ	538	;# 
  5251     021B                     SSP2MSK         equ	539	;# 
  5252     021C                     SSP2STAT        equ	540	;# 
  5253     021D                     SSP2CON1        equ	541	;# 
  5254     021D                     SSP2CON         equ	541	;# 
  5255     021E                     SSP2CON2        equ	542	;# 
  5256     021F                     SSP2CON3        equ	543	;# 
  5257     028C                     ODCONA          equ	652	;# 
  5258     028D                     ODCONB          equ	653	;# 
  5259     028E                     ODCONC          equ	654	;# 
  5260     0291                     CCPR1           equ	657	;# 
  5261     0291                     CCPR1L          equ	657	;# 
  5262     0292                     CCPR1H          equ	658	;# 
  5263     0293                     CCP1CON         equ	659	;# 
  5264     0294                     CCP1CAP         equ	660	;# 
  5265     0295                     CCPR2           equ	661	;# 
  5266     0295                     CCPR2L          equ	661	;# 
  5267     0296                     CCPR2H          equ	662	;# 
  5268     0297                     CCP2CON         equ	663	;# 
  5269     0298                     CCP2CAP         equ	664	;# 
  5270     029F                     CCPTMRS         equ	671	;# 
  5271     030C                     SLRCONA         equ	780	;# 
  5272     030D                     SLRCONB         equ	781	;# 
  5273     030E                     SLRCONC         equ	782	;# 
  5274     0311                     CCPR3           equ	785	;# 
  5275     0311                     CCPR3L          equ	785	;# 
  5276     0312                     CCPR3H          equ	786	;# 
  5277     0313                     CCP3CON         equ	787	;# 
  5278     0314                     CCP3CAP         equ	788	;# 
  5279     0315                     CCPR4           equ	789	;# 
  5280     0315                     CCPR4L          equ	789	;# 
  5281     0316                     CCPR4H          equ	790	;# 
  5282     0317                     CCP4CON         equ	791	;# 
  5283     0318                     CCP4CAP         equ	792	;# 
  5284     038C                     INLVLA          equ	908	;# 
  5285     038D                     INLVLB          equ	909	;# 
  5286     038E                     INLVLC          equ	910	;# 
  5287     0391                     IOCAP           equ	913	;# 
  5288     0392                     IOCAN           equ	914	;# 
  5289     0393                     IOCAF           equ	915	;# 
  5290     0394                     IOCBP           equ	916	;# 
  5291     0395                     IOCBN           equ	917	;# 
  5292     0396                     IOCBF           equ	918	;# 
  5293     0397                     IOCCP           equ	919	;# 
  5294     0398                     IOCCN           equ	920	;# 
  5295     0399                     IOCCF           equ	921	;# 
  5296     039A                     CLKRCON         equ	922	;# 
  5297     039C                     MDCON           equ	924	;# 
  5298     039D                     MDSRC           equ	925	;# 
  5299     039E                     MDCARH          equ	926	;# 
  5300     039F                     MDCARL          equ	927	;# 
  5301     0411                     TMR3            equ	1041	;# 
  5302     0411                     TMR3L           equ	1041	;# 
  5303     0412                     TMR3H           equ	1042	;# 
  5304     0413                     T3CON           equ	1043	;# 
  5305     0414                     T3GCON          equ	1044	;# 
  5306     0415                     TMR4            equ	1045	;# 
  5307     0416                     PR4             equ	1046	;# 
  5308     0417                     T4CON           equ	1047	;# 
  5309     0418                     TMR5            equ	1048	;# 
  5310     0418                     TMR5L           equ	1048	;# 
  5311     0419                     TMR5H           equ	1049	;# 
  5312     041A                     T5CON           equ	1050	;# 
  5313     041B                     T5GCON          equ	1051	;# 
  5314     041C                     TMR6            equ	1052	;# 
  5315     041D                     PR6             equ	1053	;# 
  5316     041E                     T6CON           equ	1054	;# 
  5317     041F                     CCDCON          equ	1055	;# 
  5318     0498                     NCO1ACC         equ	1176	;# 
  5319     0498                     NCO1ACCL        equ	1176	;# 
  5320     0499                     NCO1ACCH        equ	1177	;# 
  5321     049A                     NCO1ACCU        equ	1178	;# 
  5322     049B                     NCO1INC         equ	1179	;# 
  5323     049B                     NCO1INCL        equ	1179	;# 
  5324     049C                     NCO1INCH        equ	1180	;# 
  5325     049D                     NCO1INCU        equ	1181	;# 
  5326     049E                     NCO1CON         equ	1182	;# 
  5327     049F                     NCO1CLK         equ	1183	;# 
  5328     0617                     PWM5DCL         equ	1559	;# 
  5329     0618                     PWM5DCH         equ	1560	;# 
  5330     0619                     PWM5CON         equ	1561	;# 
  5331     0619                     PWM5CON0        equ	1561	;# 
  5332     061A                     PWM6DCL         equ	1562	;# 
  5333     061B                     PWM6DCH         equ	1563	;# 
  5334     061C                     PWM6CON         equ	1564	;# 
  5335     061C                     PWM6CON0        equ	1564	;# 
  5336     061F                     PWMTMRS         equ	1567	;# 
  5337     0691                     CWG1CLKCON      equ	1681	;# 
  5338     0692                     CWG1DAT         equ	1682	;# 
  5339     0693                     CWG1DBR         equ	1683	;# 
  5340     0694                     CWG1DBF         equ	1684	;# 
  5341     0695                     CWG1CON0        equ	1685	;# 
  5342     0696                     CWG1CON1        equ	1686	;# 
  5343     0697                     CWG1AS0         equ	1687	;# 
  5344     0698                     CWG1AS1         equ	1688	;# 
  5345     0699                     CWG1STR         equ	1689	;# 
  5346     0711                     CWG2CLKCON      equ	1809	;# 
  5347     0712                     CWG2DAT         equ	1810	;# 
  5348     0713                     CWG2DBR         equ	1811	;# 
  5349     0714                     CWG2DBF         equ	1812	;# 
  5350     0715                     CWG2CON0        equ	1813	;# 
  5351     0716                     CWG2CON1        equ	1814	;# 
  5352     0717                     CWG2AS0         equ	1815	;# 
  5353     0718                     CWG2AS1         equ	1816	;# 
  5354     0719                     CWG2STR         equ	1817	;# 
  5355     0891                     NVMADR          equ	2193	;# 
  5356     0891                     EEADR           equ	2193	;# 
  5357     0891                     PMADR           equ	2193	;# 
  5358     0891                     NVMADRL         equ	2193	;# 
  5359     0891                     EEADRL          equ	2193	;# 
  5360     0891                     PMADRL          equ	2193	;# 
  5361     0892                     NVMADRH         equ	2194	;# 
  5362     0892                     EEADRH          equ	2194	;# 
  5363     0892                     PMADRH          equ	2194	;# 
  5364     0893                     NVMDAT          equ	2195	;# 
  5365     0893                     EEDAT           equ	2195	;# 
  5366     0893                     PMDAT           equ	2195	;# 
  5367     0893                     NVMDATL         equ	2195	;# 
  5368     0893                     EEDATL          equ	2195	;# 
  5369     0893                     PMDATL          equ	2195	;# 
  5370     0894                     NVMDATH         equ	2196	;# 
  5371     0894                     EEDATH          equ	2196	;# 
  5372     0894                     PMDATH          equ	2196	;# 
  5373     0895                     NVMCON1         equ	2197	;# 
  5374     0895                     EECON1          equ	2197	;# 
  5375     0895                     PMCON1          equ	2197	;# 
  5376     0896                     NVMCON2         equ	2198	;# 
  5377     0896                     EECON2          equ	2198	;# 
  5378     0896                     PMCON2          equ	2198	;# 
  5379     089B                     PCON0           equ	2203	;# 
  5380     0911                     PMD0            equ	2321	;# 
  5381     0912                     PMD1            equ	2322	;# 
  5382     0913                     PMD2            equ	2323	;# 
  5383     0914                     PMD3            equ	2324	;# 
  5384     0915                     PMD4            equ	2325	;# 
  5385     0916                     PMD5            equ	2326	;# 
  5386     0918                     CPUDOZE         equ	2328	;# 
  5387     0919                     OSCCON1         equ	2329	;# 
  5388     091A                     OSCCON2         equ	2330	;# 
  5389     091B                     OSCCON3         equ	2331	;# 
  5390     091C                     OSCSTAT1        equ	2332	;# 
  5391     091D                     OSCEN           equ	2333	;# 
  5392     091E                     OSCTUNE         equ	2334	;# 
  5393     091F                     OSCFRQ          equ	2335	;# 
  5394     0E0F                     PPSLOCK         equ	3599	;# 
  5395     0E10                     INTPPS          equ	3600	;# 
  5396     0E11                     T0CKIPPS        equ	3601	;# 
  5397     0E12                     T1CKIPPS        equ	3602	;# 
  5398     0E13                     T1GPPS          equ	3603	;# 
  5399     0E14                     CCP1PPS         equ	3604	;# 
  5400     0E15                     CCP2PPS         equ	3605	;# 
  5401     0E16                     CCP3PPS         equ	3606	;# 
  5402     0E17                     CCP4PPS         equ	3607	;# 
  5403     0E18                     CWG1PPS         equ	3608	;# 
  5404     0E19                     CWG2PPS         equ	3609	;# 
  5405     0E1A                     MDCIN1PPS       equ	3610	;# 
  5406     0E1B                     MDCIN2PPS       equ	3611	;# 
  5407     0E1C                     MDMINPPS        equ	3612	;# 
  5408     0E1D                     SSP2CLKPPS      equ	3613	;# 
  5409     0E1E                     SSP2DATPPS      equ	3614	;# 
  5410     0E1F                     SSP2SSPPS       equ	3615	;# 
  5411     0E20                     SSP1CLKPPS      equ	3616	;# 
  5412     0E21                     SSP1DATPPS      equ	3617	;# 
  5413     0E22                     SSP1SSPPS       equ	3618	;# 
  5414     0E24                     RXPPS           equ	3620	;# 
  5415     0E25                     TXPPS           equ	3621	;# 
  5416     0E28                     CLCIN0PPS       equ	3624	;# 
  5417     0E29                     CLCIN1PPS       equ	3625	;# 
  5418     0E2A                     CLCIN2PPS       equ	3626	;# 
  5419     0E2B                     CLCIN3PPS       equ	3627	;# 
  5420     0E2C                     T3CKIPPS        equ	3628	;# 
  5421     0E2D                     T3GPPS          equ	3629	;# 
  5422     0E2E                     T5CKIPPS        equ	3630	;# 
  5423     0E2F                     T5GPPS          equ	3631	;# 
  5424     0E90                     RA0PPS          equ	3728	;# 
  5425     0E91                     RA1PPS          equ	3729	;# 
  5426     0E92                     RA2PPS          equ	3730	;# 
  5427     0E94                     RA4PPS          equ	3732	;# 
  5428     0E95                     RA5PPS          equ	3733	;# 
  5429     0E9C                     RB4PPS          equ	3740	;# 
  5430     0E9D                     RB5PPS          equ	3741	;# 
  5431     0E9E                     RB6PPS          equ	3742	;# 
  5432     0E9F                     RB7PPS          equ	3743	;# 
  5433     0EA0                     RC0PPS          equ	3744	;# 
  5434     0EA1                     RC1PPS          equ	3745	;# 
  5435     0EA2                     RC2PPS          equ	3746	;# 
  5436     0EA3                     RC3PPS          equ	3747	;# 
  5437     0EA4                     RC4PPS          equ	3748	;# 
  5438     0EA5                     RC5PPS          equ	3749	;# 
  5439     0EA6                     RC6PPS          equ	3750	;# 
  5440     0EA7                     RC7PPS          equ	3751	;# 
  5441     0F0F                     CLCDATA         equ	3855	;# 
  5442     0F10                     CLC1CON         equ	3856	;# 
  5443     0F11                     CLC1POL         equ	3857	;# 
  5444     0F12                     CLC1SEL0        equ	3858	;# 
  5445     0F13                     CLC1SEL1        equ	3859	;# 
  5446     0F14                     CLC1SEL2        equ	3860	;# 
  5447     0F15                     CLC1SEL3        equ	3861	;# 
  5448     0F16                     CLC1GLS0        equ	3862	;# 
  5449     0F17                     CLC1GLS1        equ	3863	;# 
  5450     0F18                     CLC1GLS2        equ	3864	;# 
  5451     0F19                     CLC1GLS3        equ	3865	;# 
  5452     0F1A                     CLC2CON         equ	3866	;# 
  5453     0F1B                     CLC2POL         equ	3867	;# 
  5454     0F1C                     CLC2SEL0        equ	3868	;# 
  5455     0F1D                     CLC2SEL1        equ	3869	;# 
  5456     0F1E                     CLC2SEL2        equ	3870	;# 
  5457     0F1F                     CLC2SEL3        equ	3871	;# 
  5458     0F20                     CLC2GLS0        equ	3872	;# 
  5459     0F21                     CLC2GLS1        equ	3873	;# 
  5460     0F22                     CLC2GLS2        equ	3874	;# 
  5461     0F23                     CLC2GLS3        equ	3875	;# 
  5462     0F24                     CLC3CON         equ	3876	;# 
  5463     0F25                     CLC3POL         equ	3877	;# 
  5464     0F26                     CLC3SEL0        equ	3878	;# 
  5465     0F27                     CLC3SEL1        equ	3879	;# 
  5466     0F28                     CLC3SEL2        equ	3880	;# 
  5467     0F29                     CLC3SEL3        equ	3881	;# 
  5468     0F2A                     CLC3GLS0        equ	3882	;# 
  5469     0F2B                     CLC3GLS1        equ	3883	;# 
  5470     0F2C                     CLC3GLS2        equ	3884	;# 
  5471     0F2D                     CLC3GLS3        equ	3885	;# 
  5472     0F2E                     CLC4CON         equ	3886	;# 
  5473     0F2F                     CLC4POL         equ	3887	;# 
  5474     0F30                     CLC4SEL0        equ	3888	;# 
  5475     0F31                     CLC4SEL1        equ	3889	;# 
  5476     0F32                     CLC4SEL2        equ	3890	;# 
  5477     0F33                     CLC4SEL3        equ	3891	;# 
  5478     0F34                     CLC4GLS0        equ	3892	;# 
  5479     0F35                     CLC4GLS1        equ	3893	;# 
  5480     0F36                     CLC4GLS2        equ	3894	;# 
  5481     0F37                     CLC4GLS3        equ	3895	;# 
  5482     0FE4                     STATUS_SHAD     equ	4068	;# 
  5483     0FE5                     WREG_SHAD       equ	4069	;# 
  5484     0FE6                     BSR_SHAD        equ	4070	;# 
  5485     0FE7                     PCLATH_SHAD     equ	4071	;# 
  5486     0FE8                     FSR0L_SHAD      equ	4072	;# 
  5487     0FE9                     FSR0H_SHAD      equ	4073	;# 
  5488     0FEA                     FSR1L_SHAD      equ	4074	;# 
  5489     0FEB                     FSR1H_SHAD      equ	4075	;# 
  5490     0FED                     STKPTR          equ	4077	;# 
  5491     0FEE                     TOSL            equ	4078	;# 
  5492     0FEF                     TOSH            equ	4079	;# 
  5493     0000                     INDF0           equ	0	;# 
  5494     0001                     INDF1           equ	1	;# 
  5495     0002                     PCL             equ	2	;# 
  5496     0003                     STATUS          equ	3	;# 
  5497     0004                     FSR0L           equ	4	;# 
  5498     0005                     FSR0H           equ	5	;# 
  5499     0006                     FSR1L           equ	6	;# 
  5500     0007                     FSR1H           equ	7	;# 
  5501     0008                     BSR             equ	8	;# 
  5502     0009                     WREG            equ	9	;# 
  5503     000A                     PCLATH          equ	10	;# 
  5504     000B                     INTCON          equ	11	;# 
  5505     000C                     PORTA           equ	12	;# 
  5506     000D                     PORTB           equ	13	;# 
  5507     000E                     PORTC           equ	14	;# 
  5508     0010                     PIR0            equ	16	;# 
  5509     0011                     PIR1            equ	17	;# 
  5510     0012                     PIR2            equ	18	;# 
  5511     0013                     PIR3            equ	19	;# 
  5512     0014                     PIR4            equ	20	;# 
  5513     0015                     TMR0L           equ	21	;# 
  5514     0015                     TMR0            equ	21	;# 
  5515     0016                     TMR0H           equ	22	;# 
  5516     0016                     PR0             equ	22	;# 
  5517     0017                     T0CON0          equ	23	;# 
  5518     0018                     T0CON1          equ	24	;# 
  5519     0019                     TMR1            equ	25	;# 
  5520     0019                     TMR1L           equ	25	;# 
  5521     001A                     TMR1H           equ	26	;# 
  5522     001B                     T1CON           equ	27	;# 
  5523     001C                     T1GCON          equ	28	;# 
  5524     001D                     TMR2            equ	29	;# 
  5525     001E                     PR2             equ	30	;# 
  5526     001F                     T2CON           equ	31	;# 
  5527     008C                     TRISA           equ	140	;# 
  5528     008D                     TRISB           equ	141	;# 
  5529     008E                     TRISC           equ	142	;# 
  5530     0090                     PIE0            equ	144	;# 
  5531     0091                     PIE1            equ	145	;# 
  5532     0092                     PIE2            equ	146	;# 
  5533     0093                     PIE3            equ	147	;# 
  5534     0094                     PIE4            equ	148	;# 
  5535     0097                     WDTCON          equ	151	;# 
  5536     009B                     ADRES           equ	155	;# 
  5537     009B                     ADRESL          equ	155	;# 
  5538     009C                     ADRESH          equ	156	;# 
  5539     009D                     ADCON0          equ	157	;# 
  5540     009E                     ADCON1          equ	158	;# 
  5541     009F                     ADACT           equ	159	;# 
  5542     010C                     LATA            equ	268	;# 
  5543     010D                     LATB            equ	269	;# 
  5544     010E                     LATC            equ	270	;# 
  5545     0111                     CM1CON0         equ	273	;# 
  5546     0112                     CM1CON1         equ	274	;# 
  5547     0113                     CM2CON0         equ	275	;# 
  5548     0114                     CM2CON1         equ	276	;# 
  5549     0115                     CMOUT           equ	277	;# 
  5550     0116                     BORCON          equ	278	;# 
  5551     0117                     FVRCON          equ	279	;# 
  5552     0118                     DACCON0         equ	280	;# 
  5553     0119                     DACCON1         equ	281	;# 
  5554     018C                     ANSELA          equ	396	;# 
  5555     018D                     ANSELB          equ	397	;# 
  5556     018E                     ANSELC          equ	398	;# 
  5557     0197                     VREGCON         equ	407	;# 
  5558     0199                     RC1REG          equ	409	;# 
  5559     0199                     RCREG           equ	409	;# 
  5560     0199                     RCREG1          equ	409	;# 
  5561     019A                     TX1REG          equ	410	;# 
  5562     019A                     TXREG1          equ	410	;# 
  5563     019A                     TXREG           equ	410	;# 
  5564     019B                     SP1BRG          equ	411	;# 
  5565     019B                     SPBRG           equ	411	;# 
  5566     019B                     SP1BRGL         equ	411	;# 
  5567     019B                     SPBRG1          equ	411	;# 
  5568     019B                     SPBRGL          equ	411	;# 
  5569     019C                     SP1BRGH         equ	412	;# 
  5570     019C                     SPBRGH          equ	412	;# 
  5571     019C                     SPBRGH1         equ	412	;# 
  5572     019D                     RC1STA          equ	413	;# 
  5573     019D                     RCSTA1          equ	413	;# 
  5574     019D                     RCSTA           equ	413	;# 
  5575     019E                     TX1STA          equ	414	;# 
  5576     019E                     TXSTA1          equ	414	;# 
  5577     019E                     TXSTA           equ	414	;# 
  5578     019F                     BAUD1CON        equ	415	;# 
  5579     019F                     BAUDCON1        equ	415	;# 
  5580     019F                     BAUDCTL1        equ	415	;# 
  5581     019F                     BAUDCON         equ	415	;# 
  5582     019F                     BAUDCTL         equ	415	;# 
  5583     020C                     WPUA            equ	524	;# 
  5584     020D                     WPUB            equ	525	;# 
  5585     020E                     WPUC            equ	526	;# 
  5586     0211                     SSP1BUF         equ	529	;# 
  5587     0211                     SSPBUF          equ	529	;# 
  5588     0212                     SSP1ADD         equ	530	;# 
  5589     0212                     SSPADD          equ	530	;# 
  5590     0213                     SSP1MSK         equ	531	;# 
  5591     0213                     SSPMSK          equ	531	;# 
  5592     0214                     SSP1STAT        equ	532	;# 
  5593     0214                     SSPSTAT         equ	532	;# 
  5594     0215                     SSP1CON1        equ	533	;# 
  5595     0215                     SSPCON          equ	533	;# 
  5596     0215                     SSPCON1         equ	533	;# 
  5597     0215                     SSP1CON         equ	533	;# 
  5598     0216                     SSP1CON2        equ	534	;# 
  5599     0216                     SSPCON2         equ	534	;# 
  5600     0217                     SSP1CON3        equ	535	;# 
  5601     0217                     SSPCON3         equ	535	;# 
  5602     0219                     SSP2BUF         equ	537	;# 
  5603     021A                     SSP2ADD         equ	538	;# 
  5604     021B                     SSP2MSK         equ	539	;# 
  5605     021C                     SSP2STAT        equ	540	;# 
  5606     021D                     SSP2CON1        equ	541	;# 
  5607     021D                     SSP2CON         equ	541	;# 
  5608     021E                     SSP2CON2        equ	542	;# 
  5609     021F                     SSP2CON3        equ	543	;# 
  5610     028C                     ODCONA          equ	652	;# 
  5611     028D                     ODCONB          equ	653	;# 
  5612     028E                     ODCONC          equ	654	;# 
  5613     0291                     CCPR1           equ	657	;# 
  5614     0291                     CCPR1L          equ	657	;# 
  5615     0292                     CCPR1H          equ	658	;# 
  5616     0293                     CCP1CON         equ	659	;# 
  5617     0294                     CCP1CAP         equ	660	;# 
  5618     0295                     CCPR2           equ	661	;# 
  5619     0295                     CCPR2L          equ	661	;# 
  5620     0296                     CCPR2H          equ	662	;# 
  5621     0297                     CCP2CON         equ	663	;# 
  5622     0298                     CCP2CAP         equ	664	;# 
  5623     029F                     CCPTMRS         equ	671	;# 
  5624     030C                     SLRCONA         equ	780	;# 
  5625     030D                     SLRCONB         equ	781	;# 
  5626     030E                     SLRCONC         equ	782	;# 
  5627     0311                     CCPR3           equ	785	;# 
  5628     0311                     CCPR3L          equ	785	;# 
  5629     0312                     CCPR3H          equ	786	;# 
  5630     0313                     CCP3CON         equ	787	;# 
  5631     0314                     CCP3CAP         equ	788	;# 
  5632     0315                     CCPR4           equ	789	;# 
  5633     0315                     CCPR4L          equ	789	;# 
  5634     0316                     CCPR4H          equ	790	;# 
  5635     0317                     CCP4CON         equ	791	;# 
  5636     0318                     CCP4CAP         equ	792	;# 
  5637     038C                     INLVLA          equ	908	;# 
  5638     038D                     INLVLB          equ	909	;# 
  5639     038E                     INLVLC          equ	910	;# 
  5640     0391                     IOCAP           equ	913	;# 
  5641     0392                     IOCAN           equ	914	;# 
  5642     0393                     IOCAF           equ	915	;# 
  5643     0394                     IOCBP           equ	916	;# 
  5644     0395                     IOCBN           equ	917	;# 
  5645     0396                     IOCBF           equ	918	;# 
  5646     0397                     IOCCP           equ	919	;# 
  5647     0398                     IOCCN           equ	920	;# 
  5648     0399                     IOCCF           equ	921	;# 
  5649     039A                     CLKRCON         equ	922	;# 
  5650     039C                     MDCON           equ	924	;# 
  5651     039D                     MDSRC           equ	925	;# 
  5652     039E                     MDCARH          equ	926	;# 
  5653     039F                     MDCARL          equ	927	;# 
  5654     0411                     TMR3            equ	1041	;# 
  5655     0411                     TMR3L           equ	1041	;# 
  5656     0412                     TMR3H           equ	1042	;# 
  5657     0413                     T3CON           equ	1043	;# 
  5658     0414                     T3GCON          equ	1044	;# 
  5659     0415                     TMR4            equ	1045	;# 
  5660     0416                     PR4             equ	1046	;# 
  5661     0417                     T4CON           equ	1047	;# 
  5662     0418                     TMR5            equ	1048	;# 
  5663     0418                     TMR5L           equ	1048	;# 
  5664     0419                     TMR5H           equ	1049	;# 
  5665     041A                     T5CON           equ	1050	;# 
  5666     041B                     T5GCON          equ	1051	;# 
  5667     041C                     TMR6            equ	1052	;# 
  5668     041D                     PR6             equ	1053	;# 
  5669     041E                     T6CON           equ	1054	;# 
  5670     041F                     CCDCON          equ	1055	;# 
  5671     0498                     NCO1ACC         equ	1176	;# 
  5672     0498                     NCO1ACCL        equ	1176	;# 
  5673     0499                     NCO1ACCH        equ	1177	;# 
  5674     049A                     NCO1ACCU        equ	1178	;# 
  5675     049B                     NCO1INC         equ	1179	;# 
  5676     049B                     NCO1INCL        equ	1179	;# 
  5677     049C                     NCO1INCH        equ	1180	;# 
  5678     049D                     NCO1INCU        equ	1181	;# 
  5679     049E                     NCO1CON         equ	1182	;# 
  5680     049F                     NCO1CLK         equ	1183	;# 
  5681     0617                     PWM5DCL         equ	1559	;# 
  5682     0618                     PWM5DCH         equ	1560	;# 
  5683     0619                     PWM5CON         equ	1561	;# 
  5684     0619                     PWM5CON0        equ	1561	;# 
  5685     061A                     PWM6DCL         equ	1562	;# 
  5686     061B                     PWM6DCH         equ	1563	;# 
  5687     061C                     PWM6CON         equ	1564	;# 
  5688     061C                     PWM6CON0        equ	1564	;# 
  5689     061F                     PWMTMRS         equ	1567	;# 
  5690     0691                     CWG1CLKCON      equ	1681	;# 
  5691     0692                     CWG1DAT         equ	1682	;# 
  5692     0693                     CWG1DBR         equ	1683	;# 
  5693     0694                     CWG1DBF         equ	1684	;# 
  5694     0695                     CWG1CON0        equ	1685	;# 
  5695     0696                     CWG1CON1        equ	1686	;# 
  5696     0697                     CWG1AS0         equ	1687	;# 
  5697     0698                     CWG1AS1         equ	1688	;# 
  5698     0699                     CWG1STR         equ	1689	;# 
  5699     0711                     CWG2CLKCON      equ	1809	;# 
  5700     0712                     CWG2DAT         equ	1810	;# 
  5701     0713                     CWG2DBR         equ	1811	;# 
  5702     0714                     CWG2DBF         equ	1812	;# 
  5703     0715                     CWG2CON0        equ	1813	;# 
  5704     0716                     CWG2CON1        equ	1814	;# 
  5705     0717                     CWG2AS0         equ	1815	;# 
  5706     0718                     CWG2AS1         equ	1816	;# 
  5707     0719                     CWG2STR         equ	1817	;# 
  5708     0891                     NVMADR          equ	2193	;# 
  5709     0891                     EEADR           equ	2193	;# 
  5710     0891                     PMADR           equ	2193	;# 
  5711     0891                     NVMADRL         equ	2193	;# 
  5712     0891                     EEADRL          equ	2193	;# 
  5713     0891                     PMADRL          equ	2193	;# 
  5714     0892                     NVMADRH         equ	2194	;# 
  5715     0892                     EEADRH          equ	2194	;# 
  5716     0892                     PMADRH          equ	2194	;# 
  5717     0893                     NVMDAT          equ	2195	;# 
  5718     0893                     EEDAT           equ	2195	;# 
  5719     0893                     PMDAT           equ	2195	;# 
  5720     0893                     NVMDATL         equ	2195	;# 
  5721     0893                     EEDATL          equ	2195	;# 
  5722     0893                     PMDATL          equ	2195	;# 
  5723     0894                     NVMDATH         equ	2196	;# 
  5724     0894                     EEDATH          equ	2196	;# 
  5725     0894                     PMDATH          equ	2196	;# 
  5726     0895                     NVMCON1         equ	2197	;# 
  5727     0895                     EECON1          equ	2197	;# 
  5728     0895                     PMCON1          equ	2197	;# 
  5729     0896                     NVMCON2         equ	2198	;# 
  5730     0896                     EECON2          equ	2198	;# 
  5731     0896                     PMCON2          equ	2198	;# 
  5732     089B                     PCON0           equ	2203	;# 
  5733     0911                     PMD0            equ	2321	;# 
  5734     0912                     PMD1            equ	2322	;# 
  5735     0913                     PMD2            equ	2323	;# 
  5736     0914                     PMD3            equ	2324	;# 
  5737     0915                     PMD4            equ	2325	;# 
  5738     0916                     PMD5            equ	2326	;# 
  5739     0918                     CPUDOZE         equ	2328	;# 
  5740     0919                     OSCCON1         equ	2329	;# 
  5741     091A                     OSCCON2         equ	2330	;# 
  5742     091B                     OSCCON3         equ	2331	;# 
  5743     091C                     OSCSTAT1        equ	2332	;# 
  5744     091D                     OSCEN           equ	2333	;# 
  5745     091E                     OSCTUNE         equ	2334	;# 
  5746     091F                     OSCFRQ          equ	2335	;# 
  5747     0E0F                     PPSLOCK         equ	3599	;# 
  5748     0E10                     INTPPS          equ	3600	;# 
  5749     0E11                     T0CKIPPS        equ	3601	;# 
  5750     0E12                     T1CKIPPS        equ	3602	;# 
  5751     0E13                     T1GPPS          equ	3603	;# 
  5752     0E14                     CCP1PPS         equ	3604	;# 
  5753     0E15                     CCP2PPS         equ	3605	;# 
  5754     0E16                     CCP3PPS         equ	3606	;# 
  5755     0E17                     CCP4PPS         equ	3607	;# 
  5756     0E18                     CWG1PPS         equ	3608	;# 
  5757     0E19                     CWG2PPS         equ	3609	;# 
  5758     0E1A                     MDCIN1PPS       equ	3610	;# 
  5759     0E1B                     MDCIN2PPS       equ	3611	;# 
  5760     0E1C                     MDMINPPS        equ	3612	;# 
  5761     0E1D                     SSP2CLKPPS      equ	3613	;# 
  5762     0E1E                     SSP2DATPPS      equ	3614	;# 
  5763     0E1F                     SSP2SSPPS       equ	3615	;# 
  5764     0E20                     SSP1CLKPPS      equ	3616	;# 
  5765     0E21                     SSP1DATPPS      equ	3617	;# 
  5766     0E22                     SSP1SSPPS       equ	3618	;# 
  5767     0E24                     RXPPS           equ	3620	;# 
  5768     0E25                     TXPPS           equ	3621	;# 
  5769     0E28                     CLCIN0PPS       equ	3624	;# 
  5770     0E29                     CLCIN1PPS       equ	3625	;# 
  5771     0E2A                     CLCIN2PPS       equ	3626	;# 
  5772     0E2B                     CLCIN3PPS       equ	3627	;# 
  5773     0E2C                     T3CKIPPS        equ	3628	;# 
  5774     0E2D                     T3GPPS          equ	3629	;# 
  5775     0E2E                     T5CKIPPS        equ	3630	;# 
  5776     0E2F                     T5GPPS          equ	3631	;# 
  5777     0E90                     RA0PPS          equ	3728	;# 
  5778     0E91                     RA1PPS          equ	3729	;# 
  5779     0E92                     RA2PPS          equ	3730	;# 
  5780     0E94                     RA4PPS          equ	3732	;# 
  5781     0E95                     RA5PPS          equ	3733	;# 
  5782     0E9C                     RB4PPS          equ	3740	;# 
  5783     0E9D                     RB5PPS          equ	3741	;# 
  5784     0E9E                     RB6PPS          equ	3742	;# 
  5785     0E9F                     RB7PPS          equ	3743	;# 
  5786     0EA0                     RC0PPS          equ	3744	;# 
  5787     0EA1                     RC1PPS          equ	3745	;# 
  5788     0EA2                     RC2PPS          equ	3746	;# 
  5789     0EA3                     RC3PPS          equ	3747	;# 
  5790     0EA4                     RC4PPS          equ	3748	;# 
  5791     0EA5                     RC5PPS          equ	3749	;# 
  5792     0EA6                     RC6PPS          equ	3750	;# 
  5793     0EA7                     RC7PPS          equ	3751	;# 
  5794     0F0F                     CLCDATA         equ	3855	;# 
  5795     0F10                     CLC1CON         equ	3856	;# 
  5796     0F11                     CLC1POL         equ	3857	;# 
  5797     0F12                     CLC1SEL0        equ	3858	;# 
  5798     0F13                     CLC1SEL1        equ	3859	;# 
  5799     0F14                     CLC1SEL2        equ	3860	;# 
  5800     0F15                     CLC1SEL3        equ	3861	;# 
  5801     0F16                     CLC1GLS0        equ	3862	;# 
  5802     0F17                     CLC1GLS1        equ	3863	;# 
  5803     0F18                     CLC1GLS2        equ	3864	;# 
  5804     0F19                     CLC1GLS3        equ	3865	;# 
  5805     0F1A                     CLC2CON         equ	3866	;# 
  5806     0F1B                     CLC2POL         equ	3867	;# 
  5807     0F1C                     CLC2SEL0        equ	3868	;# 
  5808     0F1D                     CLC2SEL1        equ	3869	;# 
  5809     0F1E                     CLC2SEL2        equ	3870	;# 
  5810     0F1F                     CLC2SEL3        equ	3871	;# 
  5811     0F20                     CLC2GLS0        equ	3872	;# 
  5812     0F21                     CLC2GLS1        equ	3873	;# 
  5813     0F22                     CLC2GLS2        equ	3874	;# 
  5814     0F23                     CLC2GLS3        equ	3875	;# 
  5815     0F24                     CLC3CON         equ	3876	;# 
  5816     0F25                     CLC3POL         equ	3877	;# 
  5817     0F26                     CLC3SEL0        equ	3878	;# 
  5818     0F27                     CLC3SEL1        equ	3879	;# 
  5819     0F28                     CLC3SEL2        equ	3880	;# 
  5820     0F29                     CLC3SEL3        equ	3881	;# 
  5821     0F2A                     CLC3GLS0        equ	3882	;# 
  5822     0F2B                     CLC3GLS1        equ	3883	;# 
  5823     0F2C                     CLC3GLS2        equ	3884	;# 
  5824     0F2D                     CLC3GLS3        equ	3885	;# 
  5825     0F2E                     CLC4CON         equ	3886	;# 
  5826     0F2F                     CLC4POL         equ	3887	;# 
  5827     0F30                     CLC4SEL0        equ	3888	;# 
  5828     0F31                     CLC4SEL1        equ	3889	;# 
  5829     0F32                     CLC4SEL2        equ	3890	;# 
  5830     0F33                     CLC4SEL3        equ	3891	;# 
  5831     0F34                     CLC4GLS0        equ	3892	;# 
  5832     0F35                     CLC4GLS1        equ	3893	;# 
  5833     0F36                     CLC4GLS2        equ	3894	;# 
  5834     0F37                     CLC4GLS3        equ	3895	;# 
  5835     0FE4                     STATUS_SHAD     equ	4068	;# 
  5836     0FE5                     WREG_SHAD       equ	4069	;# 
  5837     0FE6                     BSR_SHAD        equ	4070	;# 
  5838     0FE7                     PCLATH_SHAD     equ	4071	;# 
  5839     0FE8                     FSR0L_SHAD      equ	4072	;# 
  5840     0FE9                     FSR0H_SHAD      equ	4073	;# 
  5841     0FEA                     FSR1L_SHAD      equ	4074	;# 
  5842     0FEB                     FSR1H_SHAD      equ	4075	;# 
  5843     0FED                     STKPTR          equ	4077	;# 
  5844     0FEE                     TOSL            equ	4078	;# 
  5845     0FEF                     TOSH            equ	4079	;# 
  5846     0000                     INDF0           equ	0	;# 
  5847     0001                     INDF1           equ	1	;# 
  5848     0002                     PCL             equ	2	;# 
  5849     0003                     STATUS          equ	3	;# 
  5850     0004                     FSR0L           equ	4	;# 
  5851     0005                     FSR0H           equ	5	;# 
  5852     0006                     FSR1L           equ	6	;# 
  5853     0007                     FSR1H           equ	7	;# 
  5854     0008                     BSR             equ	8	;# 
  5855     0009                     WREG            equ	9	;# 
  5856     000A                     PCLATH          equ	10	;# 
  5857     000B                     INTCON          equ	11	;# 
  5858     000C                     PORTA           equ	12	;# 
  5859     000D                     PORTB           equ	13	;# 
  5860     000E                     PORTC           equ	14	;# 
  5861     0010                     PIR0            equ	16	;# 
  5862     0011                     PIR1            equ	17	;# 
  5863     0012                     PIR2            equ	18	;# 
  5864     0013                     PIR3            equ	19	;# 
  5865     0014                     PIR4            equ	20	;# 
  5866     0015                     TMR0L           equ	21	;# 
  5867     0015                     TMR0            equ	21	;# 
  5868     0016                     TMR0H           equ	22	;# 
  5869     0016                     PR0             equ	22	;# 
  5870     0017                     T0CON0          equ	23	;# 
  5871     0018                     T0CON1          equ	24	;# 
  5872     0019                     TMR1            equ	25	;# 
  5873     0019                     TMR1L           equ	25	;# 
  5874     001A                     TMR1H           equ	26	;# 
  5875     001B                     T1CON           equ	27	;# 
  5876     001C                     T1GCON          equ	28	;# 
  5877     001D                     TMR2            equ	29	;# 
  5878     001E                     PR2             equ	30	;# 
  5879     001F                     T2CON           equ	31	;# 
  5880     008C                     TRISA           equ	140	;# 
  5881     008D                     TRISB           equ	141	;# 
  5882     008E                     TRISC           equ	142	;# 
  5883     0090                     PIE0            equ	144	;# 
  5884     0091                     PIE1            equ	145	;# 
  5885     0092                     PIE2            equ	146	;# 
  5886     0093                     PIE3            equ	147	;# 
  5887     0094                     PIE4            equ	148	;# 
  5888     0097                     WDTCON          equ	151	;# 
  5889     009B                     ADRES           equ	155	;# 
  5890     009B                     ADRESL          equ	155	;# 
  5891     009C                     ADRESH          equ	156	;# 
  5892     009D                     ADCON0          equ	157	;# 
  5893     009E                     ADCON1          equ	158	;# 
  5894     009F                     ADACT           equ	159	;# 
  5895     010C                     LATA            equ	268	;# 
  5896     010D                     LATB            equ	269	;# 
  5897     010E                     LATC            equ	270	;# 
  5898     0111                     CM1CON0         equ	273	;# 
  5899     0112                     CM1CON1         equ	274	;# 
  5900     0113                     CM2CON0         equ	275	;# 
  5901     0114                     CM2CON1         equ	276	;# 
  5902     0115                     CMOUT           equ	277	;# 
  5903     0116                     BORCON          equ	278	;# 
  5904     0117                     FVRCON          equ	279	;# 
  5905     0118                     DACCON0         equ	280	;# 
  5906     0119                     DACCON1         equ	281	;# 
  5907     018C                     ANSELA          equ	396	;# 
  5908     018D                     ANSELB          equ	397	;# 
  5909     018E                     ANSELC          equ	398	;# 
  5910     0197                     VREGCON         equ	407	;# 
  5911     0199                     RC1REG          equ	409	;# 
  5912     0199                     RCREG           equ	409	;# 
  5913     0199                     RCREG1          equ	409	;# 
  5914     019A                     TX1REG          equ	410	;# 
  5915     019A                     TXREG1          equ	410	;# 
  5916     019A                     TXREG           equ	410	;# 
  5917     019B                     SP1BRG          equ	411	;# 
  5918     019B                     SPBRG           equ	411	;# 
  5919     019B                     SP1BRGL         equ	411	;# 
  5920     019B                     SPBRG1          equ	411	;# 
  5921     019B                     SPBRGL          equ	411	;# 
  5922     019C                     SP1BRGH         equ	412	;# 
  5923     019C                     SPBRGH          equ	412	;# 
  5924     019C                     SPBRGH1         equ	412	;# 
  5925     019D                     RC1STA          equ	413	;# 
  5926     019D                     RCSTA1          equ	413	;# 
  5927     019D                     RCSTA           equ	413	;# 
  5928     019E                     TX1STA          equ	414	;# 
  5929     019E                     TXSTA1          equ	414	;# 
  5930     019E                     TXSTA           equ	414	;# 
  5931     019F                     BAUD1CON        equ	415	;# 
  5932     019F                     BAUDCON1        equ	415	;# 
  5933     019F                     BAUDCTL1        equ	415	;# 
  5934     019F                     BAUDCON         equ	415	;# 
  5935     019F                     BAUDCTL         equ	415	;# 
  5936     020C                     WPUA            equ	524	;# 
  5937     020D                     WPUB            equ	525	;# 
  5938     020E                     WPUC            equ	526	;# 
  5939     0211                     SSP1BUF         equ	529	;# 
  5940     0211                     SSPBUF          equ	529	;# 
  5941     0212                     SSP1ADD         equ	530	;# 
  5942     0212                     SSPADD          equ	530	;# 
  5943     0213                     SSP1MSK         equ	531	;# 
  5944     0213                     SSPMSK          equ	531	;# 
  5945     0214                     SSP1STAT        equ	532	;# 
  5946     0214                     SSPSTAT         equ	532	;# 
  5947     0215                     SSP1CON1        equ	533	;# 
  5948     0215                     SSPCON          equ	533	;# 
  5949     0215                     SSPCON1         equ	533	;# 
  5950     0215                     SSP1CON         equ	533	;# 
  5951     0216                     SSP1CON2        equ	534	;# 
  5952     0216                     SSPCON2         equ	534	;# 
  5953     0217                     SSP1CON3        equ	535	;# 
  5954     0217                     SSPCON3         equ	535	;# 
  5955     0219                     SSP2BUF         equ	537	;# 
  5956     021A                     SSP2ADD         equ	538	;# 
  5957     021B                     SSP2MSK         equ	539	;# 
  5958     021C                     SSP2STAT        equ	540	;# 
  5959     021D                     SSP2CON1        equ	541	;# 
  5960     021D                     SSP2CON         equ	541	;# 
  5961     021E                     SSP2CON2        equ	542	;# 
  5962     021F                     SSP2CON3        equ	543	;# 
  5963     028C                     ODCONA          equ	652	;# 
  5964     028D                     ODCONB          equ	653	;# 
  5965     028E                     ODCONC          equ	654	;# 
  5966     0291                     CCPR1           equ	657	;# 
  5967     0291                     CCPR1L          equ	657	;# 
  5968     0292                     CCPR1H          equ	658	;# 
  5969     0293                     CCP1CON         equ	659	;# 
  5970     0294                     CCP1CAP         equ	660	;# 
  5971     0295                     CCPR2           equ	661	;# 
  5972     0295                     CCPR2L          equ	661	;# 
  5973     0296                     CCPR2H          equ	662	;# 
  5974     0297                     CCP2CON         equ	663	;# 
  5975     0298                     CCP2CAP         equ	664	;# 
  5976     029F                     CCPTMRS         equ	671	;# 
  5977     030C                     SLRCONA         equ	780	;# 
  5978     030D                     SLRCONB         equ	781	;# 
  5979     030E                     SLRCONC         equ	782	;# 
  5980     0311                     CCPR3           equ	785	;# 
  5981     0311                     CCPR3L          equ	785	;# 
  5982     0312                     CCPR3H          equ	786	;# 
  5983     0313                     CCP3CON         equ	787	;# 
  5984     0314                     CCP3CAP         equ	788	;# 
  5985     0315                     CCPR4           equ	789	;# 
  5986     0315                     CCPR4L          equ	789	;# 
  5987     0316                     CCPR4H          equ	790	;# 
  5988     0317                     CCP4CON         equ	791	;# 
  5989     0318                     CCP4CAP         equ	792	;# 
  5990     038C                     INLVLA          equ	908	;# 
  5991     038D                     INLVLB          equ	909	;# 
  5992     038E                     INLVLC          equ	910	;# 
  5993     0391                     IOCAP           equ	913	;# 
  5994     0392                     IOCAN           equ	914	;# 
  5995     0393                     IOCAF           equ	915	;# 
  5996     0394                     IOCBP           equ	916	;# 
  5997     0395                     IOCBN           equ	917	;# 
  5998     0396                     IOCBF           equ	918	;# 
  5999     0397                     IOCCP           equ	919	;# 
  6000     0398                     IOCCN           equ	920	;# 
  6001     0399                     IOCCF           equ	921	;# 
  6002     039A                     CLKRCON         equ	922	;# 
  6003     039C                     MDCON           equ	924	;# 
  6004     039D                     MDSRC           equ	925	;# 
  6005     039E                     MDCARH          equ	926	;# 
  6006     039F                     MDCARL          equ	927	;# 
  6007     0411                     TMR3            equ	1041	;# 
  6008     0411                     TMR3L           equ	1041	;# 
  6009     0412                     TMR3H           equ	1042	;# 
  6010     0413                     T3CON           equ	1043	;# 
  6011     0414                     T3GCON          equ	1044	;# 
  6012     0415                     TMR4            equ	1045	;# 
  6013     0416                     PR4             equ	1046	;# 
  6014     0417                     T4CON           equ	1047	;# 
  6015     0418                     TMR5            equ	1048	;# 
  6016     0418                     TMR5L           equ	1048	;# 
  6017     0419                     TMR5H           equ	1049	;# 
  6018     041A                     T5CON           equ	1050	;# 
  6019     041B                     T5GCON          equ	1051	;# 
  6020     041C                     TMR6            equ	1052	;# 
  6021     041D                     PR6             equ	1053	;# 
  6022     041E                     T6CON           equ	1054	;# 
  6023     041F                     CCDCON          equ	1055	;# 
  6024     0498                     NCO1ACC         equ	1176	;# 
  6025     0498                     NCO1ACCL        equ	1176	;# 
  6026     0499                     NCO1ACCH        equ	1177	;# 
  6027     049A                     NCO1ACCU        equ	1178	;# 
  6028     049B                     NCO1INC         equ	1179	;# 
  6029     049B                     NCO1INCL        equ	1179	;# 
  6030     049C                     NCO1INCH        equ	1180	;# 
  6031     049D                     NCO1INCU        equ	1181	;# 
  6032     049E                     NCO1CON         equ	1182	;# 
  6033     049F                     NCO1CLK         equ	1183	;# 
  6034     0617                     PWM5DCL         equ	1559	;# 
  6035     0618                     PWM5DCH         equ	1560	;# 
  6036     0619                     PWM5CON         equ	1561	;# 
  6037     0619                     PWM5CON0        equ	1561	;# 
  6038     061A                     PWM6DCL         equ	1562	;# 
  6039     061B                     PWM6DCH         equ	1563	;# 
  6040     061C                     PWM6CON         equ	1564	;# 
  6041     061C                     PWM6CON0        equ	1564	;# 
  6042     061F                     PWMTMRS         equ	1567	;# 
  6043     0691                     CWG1CLKCON      equ	1681	;# 
  6044     0692                     CWG1DAT         equ	1682	;# 
  6045     0693                     CWG1DBR         equ	1683	;# 
  6046     0694                     CWG1DBF         equ	1684	;# 
  6047     0695                     CWG1CON0        equ	1685	;# 
  6048     0696                     CWG1CON1        equ	1686	;# 
  6049     0697                     CWG1AS0         equ	1687	;# 
  6050     0698                     CWG1AS1         equ	1688	;# 
  6051     0699                     CWG1STR         equ	1689	;# 
  6052     0711                     CWG2CLKCON      equ	1809	;# 
  6053     0712                     CWG2DAT         equ	1810	;# 
  6054     0713                     CWG2DBR         equ	1811	;# 
  6055     0714                     CWG2DBF         equ	1812	;# 
  6056     0715                     CWG2CON0        equ	1813	;# 
  6057     0716                     CWG2CON1        equ	1814	;# 
  6058     0717                     CWG2AS0         equ	1815	;# 
  6059     0718                     CWG2AS1         equ	1816	;# 
  6060     0719                     CWG2STR         equ	1817	;# 
  6061     0891                     NVMADR          equ	2193	;# 
  6062     0891                     EEADR           equ	2193	;# 
  6063     0891                     PMADR           equ	2193	;# 
  6064     0891                     NVMADRL         equ	2193	;# 
  6065     0891                     EEADRL          equ	2193	;# 
  6066     0891                     PMADRL          equ	2193	;# 
  6067     0892                     NVMADRH         equ	2194	;# 
  6068     0892                     EEADRH          equ	2194	;# 
  6069     0892                     PMADRH          equ	2194	;# 
  6070     0893                     NVMDAT          equ	2195	;# 
  6071     0893                     EEDAT           equ	2195	;# 
  6072     0893                     PMDAT           equ	2195	;# 
  6073     0893                     NVMDATL         equ	2195	;# 
  6074     0893                     EEDATL          equ	2195	;# 
  6075     0893                     PMDATL          equ	2195	;# 
  6076     0894                     NVMDATH         equ	2196	;# 
  6077     0894                     EEDATH          equ	2196	;# 
  6078     0894                     PMDATH          equ	2196	;# 
  6079     0895                     NVMCON1         equ	2197	;# 
  6080     0895                     EECON1          equ	2197	;# 
  6081     0895                     PMCON1          equ	2197	;# 
  6082     0896                     NVMCON2         equ	2198	;# 
  6083     0896                     EECON2          equ	2198	;# 
  6084     0896                     PMCON2          equ	2198	;# 
  6085     089B                     PCON0           equ	2203	;# 
  6086     0911                     PMD0            equ	2321	;# 
  6087     0912                     PMD1            equ	2322	;# 
  6088     0913                     PMD2            equ	2323	;# 
  6089     0914                     PMD3            equ	2324	;# 
  6090     0915                     PMD4            equ	2325	;# 
  6091     0916                     PMD5            equ	2326	;# 
  6092     0918                     CPUDOZE         equ	2328	;# 
  6093     0919                     OSCCON1         equ	2329	;# 
  6094     091A                     OSCCON2         equ	2330	;# 
  6095     091B                     OSCCON3         equ	2331	;# 
  6096     091C                     OSCSTAT1        equ	2332	;# 
  6097     091D                     OSCEN           equ	2333	;# 
  6098     091E                     OSCTUNE         equ	2334	;# 
  6099     091F                     OSCFRQ          equ	2335	;# 
  6100     0E0F                     PPSLOCK         equ	3599	;# 
  6101     0E10                     INTPPS          equ	3600	;# 
  6102     0E11                     T0CKIPPS        equ	3601	;# 
  6103     0E12                     T1CKIPPS        equ	3602	;# 
  6104     0E13                     T1GPPS          equ	3603	;# 
  6105     0E14                     CCP1PPS         equ	3604	;# 
  6106     0E15                     CCP2PPS         equ	3605	;# 
  6107     0E16                     CCP3PPS         equ	3606	;# 
  6108     0E17                     CCP4PPS         equ	3607	;# 
  6109     0E18                     CWG1PPS         equ	3608	;# 
  6110     0E19                     CWG2PPS         equ	3609	;# 
  6111     0E1A                     MDCIN1PPS       equ	3610	;# 
  6112     0E1B                     MDCIN2PPS       equ	3611	;# 
  6113     0E1C                     MDMINPPS        equ	3612	;# 
  6114     0E1D                     SSP2CLKPPS      equ	3613	;# 
  6115     0E1E                     SSP2DATPPS      equ	3614	;# 
  6116     0E1F                     SSP2SSPPS       equ	3615	;# 
  6117     0E20                     SSP1CLKPPS      equ	3616	;# 
  6118     0E21                     SSP1DATPPS      equ	3617	;# 
  6119     0E22                     SSP1SSPPS       equ	3618	;# 
  6120     0E24                     RXPPS           equ	3620	;# 
  6121     0E25                     TXPPS           equ	3621	;# 
  6122     0E28                     CLCIN0PPS       equ	3624	;# 
  6123     0E29                     CLCIN1PPS       equ	3625	;# 
  6124     0E2A                     CLCIN2PPS       equ	3626	;# 
  6125     0E2B                     CLCIN3PPS       equ	3627	;# 
  6126     0E2C                     T3CKIPPS        equ	3628	;# 
  6127     0E2D                     T3GPPS          equ	3629	;# 
  6128     0E2E                     T5CKIPPS        equ	3630	;# 
  6129     0E2F                     T5GPPS          equ	3631	;# 
  6130     0E90                     RA0PPS          equ	3728	;# 
  6131     0E91                     RA1PPS          equ	3729	;# 
  6132     0E92                     RA2PPS          equ	3730	;# 
  6133     0E94                     RA4PPS          equ	3732	;# 
  6134     0E95                     RA5PPS          equ	3733	;# 
  6135     0E9C                     RB4PPS          equ	3740	;# 
  6136     0E9D                     RB5PPS          equ	3741	;# 
  6137     0E9E                     RB6PPS          equ	3742	;# 
  6138     0E9F                     RB7PPS          equ	3743	;# 
  6139     0EA0                     RC0PPS          equ	3744	;# 
  6140     0EA1                     RC1PPS          equ	3745	;# 
  6141     0EA2                     RC2PPS          equ	3746	;# 
  6142     0EA3                     RC3PPS          equ	3747	;# 
  6143     0EA4                     RC4PPS          equ	3748	;# 
  6144     0EA5                     RC5PPS          equ	3749	;# 
  6145     0EA6                     RC6PPS          equ	3750	;# 
  6146     0EA7                     RC7PPS          equ	3751	;# 
  6147     0F0F                     CLCDATA         equ	3855	;# 
  6148     0F10                     CLC1CON         equ	3856	;# 
  6149     0F11                     CLC1POL         equ	3857	;# 
  6150     0F12                     CLC1SEL0        equ	3858	;# 
  6151     0F13                     CLC1SEL1        equ	3859	;# 
  6152     0F14                     CLC1SEL2        equ	3860	;# 
  6153     0F15                     CLC1SEL3        equ	3861	;# 
  6154     0F16                     CLC1GLS0        equ	3862	;# 
  6155     0F17                     CLC1GLS1        equ	3863	;# 
  6156     0F18                     CLC1GLS2        equ	3864	;# 
  6157     0F19                     CLC1GLS3        equ	3865	;# 
  6158     0F1A                     CLC2CON         equ	3866	;# 
  6159     0F1B                     CLC2POL         equ	3867	;# 
  6160     0F1C                     CLC2SEL0        equ	3868	;# 
  6161     0F1D                     CLC2SEL1        equ	3869	;# 
  6162     0F1E                     CLC2SEL2        equ	3870	;# 
  6163     0F1F                     CLC2SEL3        equ	3871	;# 
  6164     0F20                     CLC2GLS0        equ	3872	;# 
  6165     0F21                     CLC2GLS1        equ	3873	;# 
  6166     0F22                     CLC2GLS2        equ	3874	;# 
  6167     0F23                     CLC2GLS3        equ	3875	;# 
  6168     0F24                     CLC3CON         equ	3876	;# 
  6169     0F25                     CLC3POL         equ	3877	;# 
  6170     0F26                     CLC3SEL0        equ	3878	;# 
  6171     0F27                     CLC3SEL1        equ	3879	;# 
  6172     0F28                     CLC3SEL2        equ	3880	;# 
  6173     0F29                     CLC3SEL3        equ	3881	;# 
  6174     0F2A                     CLC3GLS0        equ	3882	;# 
  6175     0F2B                     CLC3GLS1        equ	3883	;# 
  6176     0F2C                     CLC3GLS2        equ	3884	;# 
  6177     0F2D                     CLC3GLS3        equ	3885	;# 
  6178     0F2E                     CLC4CON         equ	3886	;# 
  6179     0F2F                     CLC4POL         equ	3887	;# 
  6180     0F30                     CLC4SEL0        equ	3888	;# 
  6181     0F31                     CLC4SEL1        equ	3889	;# 
  6182     0F32                     CLC4SEL2        equ	3890	;# 
  6183     0F33                     CLC4SEL3        equ	3891	;# 
  6184     0F34                     CLC4GLS0        equ	3892	;# 
  6185     0F35                     CLC4GLS1        equ	3893	;# 
  6186     0F36                     CLC4GLS2        equ	3894	;# 
  6187     0F37                     CLC4GLS3        equ	3895	;# 
  6188     0FE4                     STATUS_SHAD     equ	4068	;# 
  6189     0FE5                     WREG_SHAD       equ	4069	;# 
  6190     0FE6                     BSR_SHAD        equ	4070	;# 
  6191     0FE7                     PCLATH_SHAD     equ	4071	;# 
  6192     0FE8                     FSR0L_SHAD      equ	4072	;# 
  6193     0FE9                     FSR0H_SHAD      equ	4073	;# 
  6194     0FEA                     FSR1L_SHAD      equ	4074	;# 
  6195     0FEB                     FSR1H_SHAD      equ	4075	;# 
  6196     0FED                     STKPTR          equ	4077	;# 
  6197     0FEE                     TOSL            equ	4078	;# 
  6198     0FEF                     TOSH            equ	4079	;# 
  6199                           
  6200 ;; Function _SPI1_Deinitialize is unused but had its address taken
  6201     0000                     _SPI1_Deinitialize equ	0
  6202                           
  6203 ;; Function _SPI1_Open is unused but had its address taken
  6204     0000                     _SPI1_Open      equ	0
  6205                           
  6206 ;; Function _SPI1_Close is unused but had its address taken
  6207     0000                     _SPI1_Close     equ	0
  6208                           
  6209 ;; Function _SPI1_BufferExchange is unused but had its address taken
  6210     0000                     _SPI1_BufferExchange equ	0
  6211                           
  6212 ;; Function _SPI1_BufferWrite is unused but had its address taken
  6213     0000                     _SPI1_BufferWrite equ	0
  6214                           
  6215 ;; Function _SPI1_BufferRead is unused but had its address taken
  6216     0000                     _SPI1_BufferRead equ	0
  6217                           
  6218 ;; Function _SPI1_ByteExchange is unused but had its address taken
  6219     0000                     _SPI1_ByteExchange equ	0
  6220                           
  6221 ;; Function _SPI1_ByteWrite is unused but had its address taken
  6222     0000                     _SPI1_ByteWrite equ	0
  6223                           
  6224 ;; Function _SPI1_ByteRead is unused but had its address taken
  6225     0000                     _SPI1_ByteRead  equ	0
  6226                           
  6227 ;; Function _SPI1_IsRxReady is unused but had its address taken
  6228     0000                     _SPI1_IsRxReady equ	0
  6229                           
  6230 ;; Function _SPI1_IsTxReady is unused but had its address taken
  6231     0000                     _SPI1_IsTxReady equ	0
  6232                           
  6233 ;; Function _INT_DefaultInterruptHandler is unused but had its address taken
  6234     0000                     _INT_DefaultInterruptHandler equ	0
  6235                           
  6236 ;; Function _TMR6_DefaultPeriodMatchCallback is unused but had its address taken
  6237     0000                     _TMR6_DefaultPeriodMatchCallback equ	0
  6238                           
  6239 ;; Function _EUSART_Deinitialize is unused but had its address taken
  6240     0000                     _EUSART_Deinitialize equ	0
  6241                           
  6242 ;; Function _EUSART_TransmitEnable is unused but had its address taken
  6243     0000                     _EUSART_TransmitEnable equ	0
  6244                           
  6245 ;; Function _EUSART_TransmitDisable is unused but had its address taken
  6246     0000                     _EUSART_TransmitDisable equ	0
  6247                           
  6248 ;; Function _EUSART_AutoBaudSet is unused but had its address taken
  6249     0000                     _EUSART_AutoBaudSet equ	0
  6250                           
  6251 ;; Function _EUSART_AutoBaudQuery is unused but had its address taken
  6252     0000                     _EUSART_AutoBaudQuery equ	0
  6253                           
  6254 ;; Function _EUSART_IsTxDone is unused but had its address taken
  6255     0000                     _EUSART_IsTxDone equ	0
  6256                           
  6257 ;; Function _EUSART_ErrorGet is unused but had its address taken
  6258     0000                     _EUSART_ErrorGet equ	0
  6259                           
  6260 ;; Function _EUSART_RxCompleteCallbackRegister is unused but had its address taken
  6261     0000                     _EUSART_RxCompleteCallbackRegister equ	0
  6262                           
  6263 ;; Function _EUSART_TxCompleteCallbackRegister is unused but had its address taken
  6264     0000                     _EUSART_TxCompleteCallbackRegister equ	0
  6265                           
  6266 ;; Function _updateLedstripAnimation is unused but had its address taken
  6267     0000                     _updateLedstripAnimation equ	0
  6268                           
  6269 ;; Function _I2C2_Deinitialize is unused but had its address taken
  6270     0000                     _I2C2_Deinitialize equ	0
  6271                           
  6272 ;; Function _I2C2_Write is unused but had its address taken
  6273     0000                     _I2C2_Write     equ	0
  6274                           
  6275 ;; Function _I2C2_Read is unused but had its address taken
  6276     0000                     _I2C2_Read      equ	0
  6277                           
  6278 ;; Function _I2C2_WriteRead is unused but had its address taken
  6279     0000                     _I2C2_WriteRead equ	0
  6280                           
  6281 ;; Function _I2C2_ErrorGet is unused but had its address taken
  6282     0000                     _I2C2_ErrorGet  equ	0
  6283                           
  6284 ;; Function _I2C2_IsBusy is unused but had its address taken
  6285     0000                     _I2C2_IsBusy    equ	0
  6286                           
  6287 ;; Function _I2C2_CallbackRegister is unused but had its address taken
  6288     0000                     _I2C2_CallbackRegister equ	0
  6289                           
  6290                           	psect	idataBANK0
  6291     0002                     __pidataBANK0:
  6292                           
  6293                           ;initializer for _mustPrintLogs
  6294     0002  3401               	retlw	1
  6295                           
  6296                           ;initializer for adcConversionDoneHandler@new_channel
  6297     0003  3410               	retlw	16
  6298                           
  6299                           	psect	idataBANK2
  6300     1ED0                     __pidataBANK2:
  6301                           
  6302                           ;initializer for _ki
  6303     1ED0  3400               	retlw	0
  6304     1ED1  3400               	retlw	0
  6305     1ED2  34A0               	retlw	160
  6306     1ED3  3440               	retlw	64
  6307                           
  6308                           ;initializer for _kp
  6309     1ED4  3466               	retlw	102
  6310     1ED5  3466               	retlw	102
  6311     1ED6  3466               	retlw	102
  6312     1ED7  343F               	retlw	63
  6313                           
  6314                           ;initializer for _setpoint
  6315     1ED8  34C2               	retlw	194
  6316     1ED9  3401               	retlw	1
  6317                           
  6318                           	psect	stringtext1
  6319     1800                     __pstringtext1:
  6320     1800                     _UART1:
  6321     1800  3432               	retlw	low _EUSART_Initialize
  6322     1801  3412               	retlw	high _EUSART_Initialize
  6323     1802  3400               	retlw	0
  6324     1803  3400               	retlw	0
  6325     1804  34E0               	retlw	low _EUSART_Read
  6326     1805  3407               	retlw	high _EUSART_Read
  6327     1806  3424               	retlw	low _EUSART_Write
  6328     1807  3411               	retlw	high _EUSART_Write
  6329     1808  34B4               	retlw	low _EUSART_IsRxReady
  6330     1809  341E               	retlw	high _EUSART_IsRxReady
  6331     180A  34A2               	retlw	low _EUSART_IsTxReady
  6332     180B  341E               	retlw	high _EUSART_IsTxReady
  6333     180C  3400               	retlw	0
  6334     180D  3400               	retlw	0
  6335     180E  3400               	retlw	0
  6336     180F  3400               	retlw	0
  6337     1810  3400               	retlw	0
  6338     1811  3400               	retlw	0
  6339     1812  3400               	retlw	0
  6340     1813  3400               	retlw	0
  6341     1814  3400               	retlw	0
  6342     1815  3400               	retlw	0
  6343     1816  3400               	retlw	0
  6344     1817  3400               	retlw	0
  6345     1818  3400               	retlw	0
  6346     1819  3400               	retlw	0
  6347     181A  3400               	retlw	0
  6348     181B  3400               	retlw	0
  6349     181C  3400               	retlw	0
  6350     181D  3400               	retlw	0
  6351     181E  3400               	retlw	0
  6352     181F  3400               	retlw	0
  6353     1820  3400               	retlw	0
  6354     1821  3400               	retlw	0
  6355     1822  3400               	retlw	0
  6356     1823  3400               	retlw	0
  6357     1824  3400               	retlw	0
  6358     1825  3400               	retlw	0
  6359     1826  3400               	retlw	0
  6360     1827  3400               	retlw	0
  6361     1828  3453               	retlw	low _EUSART_FramingErrorCallbackRegister
  6362     1829  341F               	retlw	high _EUSART_FramingErrorCallbackRegister
  6363     182A  3462               	retlw	low _EUSART_OverrunErrorCallbackRegister
  6364     182B  341F               	retlw	high _EUSART_OverrunErrorCallbackRegister
  6365     182C  3400               	retlw	0
  6366     182D  3400               	retlw	0
  6367     182E  3400               	retlw	0
  6368     182F  3400               	retlw	0
  6369     1830                     __end_of_UART1:
  6370                           
  6371                           	psect	stringtext2
  6372     1830                     __pstringtext2:
  6373     1830                     _ledstrip:
  6374     1830  34C6               	retlw	low _SPI1_Initialize
  6375     1831  341E               	retlw	high _SPI1_Initialize
  6376     1832  3400               	retlw	0
  6377     1833  3400               	retlw	0
  6378     1834  3400               	retlw	0
  6379     1835  3400               	retlw	0
  6380     1836  3400               	retlw	0
  6381     1837  3400               	retlw	0
  6382     1838  3400               	retlw	0
  6383     1839  3400               	retlw	0
  6384     183A  3400               	retlw	0
  6385     183B  3400               	retlw	0
  6386     183C  3400               	retlw	0
  6387     183D  3400               	retlw	0
  6388     183E  3400               	retlw	0
  6389     183F  3400               	retlw	0
  6390     1840  3400               	retlw	0
  6391     1841  3400               	retlw	0
  6392     1842  3400               	retlw	0
  6393     1843  3400               	retlw	0
  6394     1844  3400               	retlw	0
  6395     1845  3400               	retlw	0
  6396     1846  3400               	retlw	0
  6397     1847  3400               	retlw	0
  6398     1848  3400               	retlw	0
  6399     1849  3400               	retlw	0
  6400     184A  3400               	retlw	0
  6401     184B  3400               	retlw	0
  6402     184C                     __end_of_ledstrip:
  6403                           
  6404                           	psect	stringtext3
  6405     187D                     __pstringtext3:
  6406     187D                     _I2C2_Host:
  6407     187D  3444               	retlw	low _I2C2_Initialize
  6408     187E  341F               	retlw	high _I2C2_Initialize
  6409     187F  3400               	retlw	0
  6410     1880  3400               	retlw	0
  6411     1881  3400               	retlw	0
  6412     1882  3400               	retlw	0
  6413     1883  3400               	retlw	0
  6414     1884  3400               	retlw	0
  6415     1885  3400               	retlw	0
  6416     1886  3400               	retlw	0
  6417     1887  3400               	retlw	0
  6418     1888  3400               	retlw	0
  6419     1889  3400               	retlw	0
  6420     188A  3400               	retlw	0
  6421     188B  3400               	retlw	0
  6422     188C  3400               	retlw	0
  6423     188D  3400               	retlw	0
  6424     188E  3400               	retlw	0
  6425     188F  3400               	retlw	0
  6426     1890  3400               	retlw	0
  6427     1891                     __end_of_I2C2_Host:
  6428                           
  6429                           	psect	stringtext4
  6430     1891                     __pstringtext4:
  6431     1891                     _i2c2_eventTable:
  6432     1891  3411               	retlw	low _I2C2_EVENT_IDLE
  6433     1892  341E               	retlw	high _I2C2_EVENT_IDLE
  6434     1893  346E               	retlw	low _I2C2_EVENT_SEND_RD_ADDR
  6435     1894  341E               	retlw	high _I2C2_EVENT_SEND_RD_ADDR
  6436     1895  3459               	retlw	low _I2C2_EVENT_SEND_WR_ADDR
  6437     1896  341E               	retlw	high _I2C2_EVENT_SEND_WR_ADDR
  6438     1897  3476               	retlw	low _I2C2_EVENT_TX
  6439     1898  3411               	retlw	high _I2C2_EVENT_TX
  6440     1899  3469               	retlw	low _I2C2_EVENT_RX
  6441     189A  3412               	retlw	high _I2C2_EVENT_RX
  6442     189B  3435               	retlw	low _I2C2_EVENT_NACK
  6443     189C  341E               	retlw	high _I2C2_EVENT_NACK
  6444     189D  343B               	retlw	low _I2C2_EVENT_ERROR
  6445     189E  341E               	retlw	high _I2C2_EVENT_ERROR
  6446     189F  3476               	retlw	low _I2C2_EVENT_STOP
  6447     18A0  341E               	retlw	high _I2C2_EVENT_STOP
  6448     18A1  3460               	retlw	low _I2C2_EVENT_RESET
  6449     18A2  341E               	retlw	high _I2C2_EVENT_RESET
  6450     18A3                     __end_of_i2c2_eventTable:
  6451                           
  6452                           	psect	stringtext5
  6453     1908                     __pstringtext5:
  6454     1908                     _spi1_configuration:
  6455     1908  3440               	retlw	64
  6456     1909  340A               	retlw	10
  6457     190A  3410               	retlw	16
  6458     190B  3407               	retlw	7
  6459     190C  3400               	retlw	0
  6460     190D  3464               	retlw	100
  6461     190E  3400               	retlw	0
  6462     190F  3410               	retlw	16
  6463     1910  3401               	retlw	1
  6464     1911  3400               	retlw	0
  6465     1912                     __end_of_spi1_configuration:
  6466                           
  6467                           	psect	nvBANK2
  6468     015C                     __pnvBANK2:
  6469     015C                     _TMR6_PeriodMatchCallback:
  6470     015C                     	ds	2
  6471     015E                     _TMR4_PeriodMatchCallback:
  6472     015E                     	ds	2
  6473     0160                     _TMR2_PeriodMatchCallback:
  6474     0160                     	ds	2
  6475     0162                     _EUSART_TxInterruptHandler:
  6476     0162                     	ds	2
  6477     0164                     _ADC_InterruptHandler:
  6478     0164                     	ds	2
  6479                           
  6480                           	psect	nvBANK3
  6481     01D4                     __pnvBANK3:
  6482     01D4                     _EUSART_RxInterruptHandler:
  6483     01D4                     	ds	2
  6484     001F                     _T2CONbits      set	31
  6485     001F                     _T2CON          set	31
  6486     001D                     _TMR2           set	29
  6487     001E                     _PR2            set	30
  6488     0012                     _PIR2bits       set	18
  6489     000B                     _INTCONbits     set	11
  6490     0010                     _PIR0bits       set	16
  6491     0011                     _PIR1bits       set	17
  6492     008E                     _TRISC          set	142
  6493     008D                     _TRISB          set	141
  6494     008C                     _TRISA          set	140
  6495     0092                     _PIE2bits       set	146
  6496     009D                     _ADCON0bits     set	157
  6497     0091                     _PIE1bits       set	145
  6498     009D                     _ADCON0         set	157
  6499     009F                     _ADACT          set	159
  6500     009C                     _ADRESH         set	156
  6501     009B                     _ADRESL         set	155
  6502     009E                     _ADCON1         set	158
  6503     010E                     _LATC           set	270
  6504     010D                     _LATB           set	269
  6505     010C                     _LATA           set	268
  6506     019A                     _TX1REG         set	410
  6507     0199                     _RC1REG         set	409
  6508     019F                     _BAUD1CONbits   set	415
  6509     019E                     _TX1STAbits     set	414
  6510     019D                     _RC1STAbits     set	413
  6511     019C                     _SP1BRGH        set	412
  6512     019B                     _SP1BRGL        set	411
  6513     019E                     _TX1STA         set	414
  6514     019D                     _RC1STA         set	413
  6515     019F                     _BAUD1CON       set	415
  6516     018E                     _ANSELC         set	398
  6517     018D                     _ANSELB         set	397
  6518     018C                     _ANSELA         set	396
  6519     021E                     _SSP2CON2bits   set	542
  6520     0219                     _SSP2BUF        set	537
  6521     021C                     _SSP2STATbits   set	540
  6522     021D                     _SSP2CON1bits   set	541
  6523     021A                     _SSP2ADD        set	538
  6524     021F                     _SSP2CON3       set	543
  6525     021E                     _SSP2CON2       set	542
  6526     021D                     _SSP2CON1       set	541
  6527     021C                     _SSP2STAT       set	540
  6528     020E                     _WPUC           set	526
  6529     020D                     _WPUB           set	525
  6530     020C                     _WPUA           set	524
  6531     0211                     _SSP1BUF        set	529
  6532     0215                     _SSP1CON1bits   set	533
  6533     0212                     _SSP1ADD        set	530
  6534     0217                     _SSP1CON3       set	535
  6535     0215                     _SSP1CON1       set	533
  6536     0214                     _SSP1STAT       set	532
  6537     028E                     _ODCONC         set	654
  6538     028D                     _ODCONB         set	653
  6539     028C                     _ODCONA         set	652
  6540     030E                     _SLRCONC        set	782
  6541     030D                     _SLRCONB        set	781
  6542     030C                     _SLRCONA        set	780
  6543     0399                     _IOCCF          set	921
  6544     0398                     _IOCCN          set	920
  6545     0397                     _IOCCP          set	919
  6546     0396                     _IOCBF          set	918
  6547     0395                     _IOCBN          set	917
  6548     0394                     _IOCBP          set	916
  6549     0393                     _IOCAF          set	915
  6550     0392                     _IOCAN          set	914
  6551     0391                     _IOCAP          set	913
  6552     038E                     _INLVLC         set	910
  6553     038D                     _INLVLB         set	909
  6554     038C                     _INLVLA         set	908
  6555     041E                     _T6CONbits      set	1054
  6556     041E                     _T6CON          set	1054
  6557     041C                     _TMR6           set	1052
  6558     041D                     _PR6            set	1053
  6559     0417                     _T4CONbits      set	1047
  6560     0417                     _T4CON          set	1047
  6561     0415                     _TMR4           set	1045
  6562     0416                     _PR4            set	1046
  6563     061F                     _PWMTMRSbits    set	1567
  6564     0617                     _PWM5DCL        set	1559
  6565     0618                     _PWM5DCH        set	1560
  6566     0619                     _PWM5CON        set	1561
  6567     091E                     _OSCTUNE        set	2334
  6568     091C                     _OSCSTAT1       set	2332
  6569     091F                     _OSCFRQ         set	2335
  6570     091D                     _OSCEN          set	2333
  6571     091B                     _OSCCON3        set	2331
  6572     0919                     _OSCCON1        set	2329
  6573     0E1E                     _SSP2DATPPS     set	3614
  6574     0E1D                     _SSP2CLKPPS     set	3613
  6575     0E24                     _RXPPS          set	3620
  6576     0E21                     _SSP1DATPPS     set	3617
  6577     0E9C                     _RB4PPS         set	3740
  6578     0E9E                     _RB6PPS         set	3742
  6579     0E9D                     _RB5PPS         set	3741
  6580     0EA5                     _RC5PPS         set	3749
  6581                           
  6582                           	psect	stringtext6
  6583     184C                     __pstringtext6:
  6584     184C                     STR_10:
  6585     184C  3463               	retlw	99	;'c'
  6586     184D  3468               	retlw	104	;'h'
  6587     184E  3461               	retlw	97	;'a'
  6588     184F  346E               	retlw	110	;'n'
  6589     1850  3467               	retlw	103	;'g'
  6590     1851  3465               	retlw	101	;'e'
  6591     1852  3464               	retlw	100	;'d'
  6592     1853  3420               	retlw	32	;' '
  6593     1854  3473               	retlw	115	;'s'
  6594     1855  3465               	retlw	101	;'e'
  6595     1856  3474               	retlw	116	;'t'
  6596     1857  3470               	retlw	112	;'p'
  6597     1858  346F               	retlw	111	;'o'
  6598     1859  3469               	retlw	105	;'i'
  6599     185A  346E               	retlw	110	;'n'
  6600     185B  3474               	retlw	116	;'t'
  6601     185C  3420               	retlw	32	;' '
  6602     185D  3474               	retlw	116	;'t'
  6603     185E  346F               	retlw	111	;'o'
  6604     185F  3420               	retlw	32	;' '
  6605     1860  3425               	retlw	37	;'%'
  6606     1861  3475               	retlw	117	;'u'
  6607     1862  340D               	retlw	13
  6608     1863  340A               	retlw	10
  6609     1864  3400               	retlw	0
  6610                           
  6611                           	psect	stringtext7
  6612     1865                     __pstringtext7:
  6613     1865                     STR_3:
  6614     1865  3469               	retlw	105	;'i'
  6615     1866  346E               	retlw	110	;'n'
  6616     1867  3470               	retlw	112	;'p'
  6617     1868  3475               	retlw	117	;'u'
  6618     1869  3474               	retlw	116	;'t'
  6619     186A  3420               	retlw	32	;' '
  6620     186B  3462               	retlw	98	;'b'
  6621     186C  3475               	retlw	117	;'u'
  6622     186D  3466               	retlw	102	;'f'
  6623     186E  3466               	retlw	102	;'f'
  6624     186F  3465               	retlw	101	;'e'
  6625     1870  3472               	retlw	114	;'r'
  6626     1871  3420               	retlw	32	;' '
  6627     1872  346F               	retlw	111	;'o'
  6628     1873  3476               	retlw	118	;'v'
  6629     1874  3465               	retlw	101	;'e'
  6630     1875  3472               	retlw	114	;'r'
  6631     1876  3466               	retlw	102	;'f'
  6632     1877  346C               	retlw	108	;'l'
  6633     1878  346F               	retlw	111	;'o'
  6634     1879  3477               	retlw	119	;'w'
  6635     187A  340D               	retlw	13
  6636     187B  340A               	retlw	10
  6637     187C  3400               	retlw	0
  6638                           
  6639                           	psect	stringtext8
  6640     18A3                     __pstringtext8:
  6641     18A3                     STR_14:
  6642     18A3  3455               	retlw	85	;'U'
  6643     18A4  346E               	retlw	110	;'n'
  6644     18A5  346B               	retlw	107	;'k'
  6645     18A6  346F               	retlw	111	;'o'
  6646     18A7  3477               	retlw	119	;'w'
  6647     18A8  346E               	retlw	110	;'n'
  6648     18A9  3420               	retlw	32	;' '
  6649     18AA  3463               	retlw	99	;'c'
  6650     18AB  346F               	retlw	111	;'o'
  6651     18AC  346D               	retlw	109	;'m'
  6652     18AD  346D               	retlw	109	;'m'
  6653     18AE  3461               	retlw	97	;'a'
  6654     18AF  346E               	retlw	110	;'n'
  6655     18B0  3464               	retlw	100	;'d'
  6656     18B1  340D               	retlw	13
  6657     18B2  340A               	retlw	10
  6658     18B3  3400               	retlw	0
  6659                           
  6660                           	psect	stringtext9
  6661     18B4                     __pstringtext9:
  6662     18B4                     STR_6:
  6663     18B4  342C               	retlw	44	;','
  6664     18B5  3420               	retlw	32	;' '
  6665     18B6  3464               	retlw	100	;'d'
  6666     18B7  3475               	retlw	117	;'u'
  6667     18B8  3474               	retlw	116	;'t'
  6668     18B9  3479               	retlw	121	;'y'
  6669     18BA  3420               	retlw	32	;' '
  6670     18BB  3463               	retlw	99	;'c'
  6671     18BC  3479               	retlw	121	;'y'
  6672     18BD  3463               	retlw	99	;'c'
  6673     18BE  346C               	retlw	108	;'l'
  6674     18BF  3465               	retlw	101	;'e'
  6675     18C0  343A               	retlw	58	;':'
  6676     18C1  3420               	retlw	32	;' '
  6677     18C2  3425               	retlw	37	;'%'
  6678     18C3  3475               	retlw	117	;'u'
  6679     18C4  3400               	retlw	0
  6680                           
  6681                           	psect	stringtext10
  6682     18C5                     __pstringtext10:
  6683     18C5                     STR_13:
  6684     18C5  346C               	retlw	108	;'l'
  6685     18C6  346F               	retlw	111	;'o'
  6686     18C7  3467               	retlw	103	;'g'
  6687     18C8  3473               	retlw	115	;'s'
  6688     18C9  3420               	retlw	32	;' '
  6689     18CA  3474               	retlw	116	;'t'
  6690     18CB  346F               	retlw	111	;'o'
  6691     18CC  3467               	retlw	103	;'g'
  6692     18CD  3467               	retlw	103	;'g'
  6693     18CE  346C               	retlw	108	;'l'
  6694     18CF  3465               	retlw	101	;'e'
  6695     18D0  3464               	retlw	100	;'d'
  6696     18D1  340D               	retlw	13
  6697     18D2  340A               	retlw	10
  6698     18D3  3400               	retlw	0
  6699                           
  6700                           	psect	stringtext11
  6701     18D4                     __pstringtext11:
  6702     18D4                     STR_5:
  6703     18D4  342C               	retlw	44	;','
  6704     18D5  3420               	retlw	32	;' '
  6705     18D6  3473               	retlw	115	;'s'
  6706     18D7  3465               	retlw	101	;'e'
  6707     18D8  3474               	retlw	116	;'t'
  6708     18D9  3470               	retlw	112	;'p'
  6709     18DA  346F               	retlw	111	;'o'
  6710     18DB  3469               	retlw	105	;'i'
  6711     18DC  346E               	retlw	110	;'n'
  6712     18DD  3474               	retlw	116	;'t'
  6713     18DE  343A               	retlw	58	;':'
  6714     18DF  3420               	retlw	32	;' '
  6715     18E0  3425               	retlw	37	;'%'
  6716     18E1  3475               	retlw	117	;'u'
  6717     18E2  3400               	retlw	0
  6718                           
  6719                           	psect	stringtext12
  6720     18E3                     __pstringtext12:
  6721     18E3                     STR_12:
  6722     18E3  3463               	retlw	99	;'c'
  6723     18E4  3468               	retlw	104	;'h'
  6724     18E5  3461               	retlw	97	;'a'
  6725     18E6  346E               	retlw	110	;'n'
  6726     18E7  3467               	retlw	103	;'g'
  6727     18E8  3465               	retlw	101	;'e'
  6728     18E9  3464               	retlw	100	;'d'
  6729     18EA  3420               	retlw	32	;' '
  6730     18EB  346B               	retlw	107	;'k'
  6731     18EC  3469               	retlw	105	;'i'
  6732     18ED  340D               	retlw	13
  6733     18EE  340A               	retlw	10
  6734     18EF  3400               	retlw	0
  6735                           
  6736                           	psect	stringtext13
  6737     18F0                     __pstringtext13:
  6738     18F0                     STR_11:
  6739     18F0  3463               	retlw	99	;'c'
  6740     18F1  3468               	retlw	104	;'h'
  6741     18F2  3461               	retlw	97	;'a'
  6742     18F3  346E               	retlw	110	;'n'
  6743     18F4  3467               	retlw	103	;'g'
  6744     18F5  3465               	retlw	101	;'e'
  6745     18F6  3464               	retlw	100	;'d'
  6746     18F7  3420               	retlw	32	;' '
  6747     18F8  346B               	retlw	107	;'k'
  6748     18F9  3470               	retlw	112	;'p'
  6749     18FA  340D               	retlw	13
  6750     18FB  340A               	retlw	10
  6751     18FC  3400               	retlw	0
  6752                           
  6753                           	psect	stringtext14
  6754     18FD                     __pstringtext14:
  6755     18FD                     STR_4:
  6756     18FD  3468               	retlw	104	;'h'
  6757     18FE  346F               	retlw	111	;'o'
  6758     18FF  346F               	retlw	111	;'o'
  6759     1900  3467               	retlw	103	;'g'
  6760     1901  3474               	retlw	116	;'t'
  6761     1902  3465               	retlw	101	;'e'
  6762     1903  343A               	retlw	58	;':'
  6763     1904  3420               	retlw	32	;' '
  6764     1905  3425               	retlw	37	;'%'
  6765     1906  3475               	retlw	117	;'u'
  6766     1907  3400               	retlw	0
  6767                           
  6768                           	psect	stringtext15
  6769     1912                     __pstringtext15:
  6770     1912                     STR_2:
  6771     1912  3425               	retlw	37	;'%'
  6772     1913  3469               	retlw	105	;'i'
  6773     1914  342E               	retlw	46	;'.'
  6774     1915  3425               	retlw	37	;'%'
  6775     1916  3430               	retlw	48	;'0'
  6776     1917  3433               	retlw	51	;'3'
  6777     1918  3475               	retlw	117	;'u'
  6778     1919  3400               	retlw	0
  6779                           
  6780                           	psect	stringtext16
  6781     191A                     __pstringtext16:
  6782     191A                     STR_8:
  6783     191A  342C               	retlw	44	;','
  6784     191B  3420               	retlw	32	;' '
  6785     191C  346B               	retlw	107	;'k'
  6786     191D  3469               	retlw	105	;'i'
  6787     191E  343A               	retlw	58	;':'
  6788     191F  3420               	retlw	32	;' '
  6789     1920  3400               	retlw	0
  6790                           
  6791                           	psect	stringtext17
  6792     1921                     __pstringtext17:
  6793     1921                     STR_7:
  6794     1921  342C               	retlw	44	;','
  6795     1922  3420               	retlw	32	;' '
  6796     1923  346B               	retlw	107	;'k'
  6797     1924  3470               	retlw	112	;'p'
  6798     1925  343A               	retlw	58	;':'
  6799     1926  3420               	retlw	32	;' '
  6800     1927  3400               	retlw	0
  6801                           
  6802                           	psect	stringtext18
  6803     1928                     __pstringtext18:
  6804     1928                     STR_1:
  6805     1928  3448               	retlw	72	;'H'
  6806     1929  3448               	retlw	72	;'H'
  6807     192A  3448               	retlw	72	;'H'
  6808     192B  340D               	retlw	13
  6809     192C  340A               	retlw	10
  6810     192D  3400               	retlw	0
  6811                           
  6812                           	psect	stringtext19
  6813     0000                     __pstringtext19:
  6814     192B                     STR_9           equ	STR_1+3
  6815                           
  6816                           	psect	cinit
  6817     0076                     start_initialization:	
  6818                           ; #config settings
  6819                           
  6820     0076                     __initialization:
  6821                           
  6822                           ; Initialize objects allocated to BANK0
  6823     0076  3180  2002  3180   	fcall	__pidataBANK0	;fetch initializer
  6824     0079  00EE               	movwf	__pdataBANK0& (0+127)
  6825     007A  3180  2003  3180   	fcall	__pidataBANK0+1	;fetch initializer
  6826     007D  00EF               	movwf	(__pdataBANK0+1)& (0+127)
  6827                           
  6828                           ; Initialize objects allocated to BANK2
  6829     007E  30D0               	movlw	low __pidataBANK2
  6830     007F  0084               	movwf	4
  6831     0080  309E               	movlw	(high __pidataBANK2)| (0+128)
  6832     0081  0085               	movwf	5
  6833     0082  3066               	movlw	low __pdataBANK2
  6834     0083  0086               	movwf	6
  6835     0084  3001               	movlw	high __pdataBANK2
  6836     0085  0087               	movwf	7
  6837     0086  300A               	movlw	10
  6838     0087  319E  2653  3180   	fcall	init_ram
  6839                           
  6840                           ; Clear objects allocated to BANK0
  6841     008A  3055               	movlw	low __pbssBANK0
  6842     008B  0084               	movwf	4
  6843     008C  3000               	movlw	high __pbssBANK0
  6844     008D  0085               	movwf	5
  6845     008E  3019               	movlw	25
  6846     008F  319E  264D  3180   	fcall	clear_ram0
  6847                           
  6848                           ; Clear objects allocated to BANK1
  6849     0092  0021               	movlb	1	; select bank1
  6850     0093  01EE               	clrf	__pbssBANK1& (0+127)
  6851     0094  01EF               	clrf	(__pbssBANK1+1)& (0+127)
  6852                           
  6853                           ; Clear objects allocated to BANK2
  6854     0095  3020               	movlw	low __pbssBANK2
  6855     0096  0084               	movwf	4
  6856     0097  3001               	movlw	high __pbssBANK2
  6857     0098  0085               	movwf	5
  6858     0099  303C               	movlw	60
  6859     009A  319E  264D  3180   	fcall	clear_ram0
  6860                           
  6861                           ; Clear objects allocated to BANK3
  6862     009D  30A0               	movlw	low __pbssBANK3
  6863     009E  0084               	movwf	4
  6864     009F  3001               	movlw	high __pbssBANK3
  6865     00A0  0085               	movwf	5
  6866     00A1  3034               	movlw	52
  6867     00A2  319E  264D  3180   	fcall	clear_ram0
  6868     00A5                     end_of_initialization:	
  6869                           ;End of C runtime variable initialization code
  6870                           
  6871     00A5                     __end_of__initialization:
  6872     00A5  107E               	bcf	int$flags,0	;clear compiler interrupt flag (level 1)
  6873     00A6  0020               	movlb	0
  6874     00A7  3191  29A3         	ljmp	_main	;jump to C main() function
  6875                           
  6876                           	psect	bssBANK0
  6877     0055                     __pbssBANK0:
  6878     0055                     _i2c2Status:
  6879     0055                     	ds	14
  6880     0063                     _dutycycle:
  6881     0063                     	ds	2
  6882     0065                     _flags:
  6883     0065                     	ds	1
  6884     0066                     _is_on_target:
  6885     0066                     	ds	1
  6886     0067                     readLine@index:
  6887     0067                     	ds	1
  6888     0068                     _eusartRxCount:
  6889     0068                     	ds	1
  6890     0069                     _eusartRxTail:
  6891     0069                     	ds	1
  6892     006A                     _eusartRxHead:
  6893     006A                     	ds	1
  6894     006B                     _eusartTxBufferRemaining:
  6895     006B                     	ds	1
  6896     006C                     _eusartTxTail:
  6897     006C                     	ds	1
  6898     006D                     _eusartTxHead:
  6899     006D                     	ds	1
  6900                           
  6901                           	psect	dataBANK0
  6902     006E                     __pdataBANK0:
  6903     006E                     _mustPrintLogs:
  6904     006E                     	ds	1
  6905     006F                     adcConversionDoneHandler@new_channel:
  6906     006F                     	ds	1
  6907                           
  6908                           	psect	bssBANK1
  6909     00EE                     __pbssBANK1:
  6910     00EE                     _width:
  6911     00EE                     	ds	2
  6912                           
  6913                           	psect	bssBANK2
  6914     0120                     __pbssBANK2:
  6915     0120                     _eusartRxStatusBuffer:
  6916     0120                     	ds	16
  6917     0130                     _eusartRxBuffer:
  6918     0130                     	ds	8
  6919     0138                     _eusartTxBuffer:
  6920     0138                     	ds	8
  6921     0140                     _integraal:
  6922     0140                     	ds	4
  6923     0144                     _nout:
  6924     0144                     	ds	2
  6925     0146                     _prec:
  6926     0146                     	ds	2
  6927     0148                     _I2C2_Callback:
  6928     0148                     	ds	2
  6929     014A                     _hoogte_bal:
  6930     014A                     	ds	2
  6931     014C                     _ADC_hoogtesensor:
  6932     014C                     	ds	2
  6933     014E                     _ADC_potentiometer:
  6934     014E                     	ds	2
  6935     0150                     _EUSART_OverrunErrorHandler:
  6936     0150                     	ds	2
  6937     0152                     _EUSART_FramingErrorHandler:
  6938     0152                     	ds	2
  6939     0154                     _EUSART_RxCompleteInterruptHandler:
  6940     0154                     	ds	2
  6941     0156                     _EUSART_TxCompleteInterruptHandler:
  6942     0156                     	ds	2
  6943     0158                     _eusartRxLastError:
  6944     0158                     	ds	2
  6945     015A                     _INT_InterruptHandler:
  6946     015A                     	ds	2
  6947                           
  6948                           	psect	dataBANK2
  6949     0166                     __pdataBANK2:
  6950     0166                     _ki:
  6951     0166                     	ds	4
  6952     016A                     _kp:
  6953     016A                     	ds	4
  6954     016E                     _setpoint:
  6955     016E                     	ds	2
  6956                           
  6957                           	psect	bssBANK3
  6958     01A0                     __pbssBANK3:
  6959     01A0                     _dbuf:
  6960     01A0                     	ds	32
  6961     01C0                     _line:
  6962     01C0                     	ds	20
  6963                           
  6964                           	psect	inittext
  6965     1E53                     init_ram:
  6966     1E53  00FE               	movwf	btemp
  6967     1E54                     initloop:
  6968     1E54  0012               	moviw fsr0++
  6969     1E55  001E               	movwi fsr1++
  6970     1E56  0BFE               	decfsz	btemp,f
  6971     1E57  2E54               	goto	initloop
  6972     1E58  3400               	retlw	0
  6973                           
  6974                           	psect	clrtext
  6975     1E4D                     clear_ram0:	
  6976                           ;	Called with FSR0 containing the base address, and
  6977                           ;	WREG with the size to clear
  6978                           
  6979     1E4D  0064               	clrwdt	;clear the watchdog before getting into this loop
  6980     1E4E                     clrloop0:
  6981     1E4E  0180               	clrf	0	;clear RAM location pointed to by FSR
  6982     1E4F  3101               	addfsr 0,1
  6983     1E50  0B89               	decfsz	9,f	;Have we reached the end of clearing yet?
  6984     1E51  2E4E               	goto	clrloop0	;have we reached the end yet?
  6985     1E52  3400               	retlw	0	;all done for this memory range, return
  6986                           
  6987                           	psect	cstackBANK1
  6988     00A0                     __pcstackBANK1:
  6989     00A0                     ?_ADC_SetInterruptHandler:
  6990     00A0                     ?_INT_SetInterruptHandler:	
  6991                           ; 1 bytes @ 0x0
  6992                           
  6993     00A0                     ?_EUSART_Write:	
  6994                           ; 1 bytes @ 0x0
  6995                           
  6996     00A0                     ?_EUSART_FramingErrorCallbackRegister:	
  6997                           ; 1 bytes @ 0x0
  6998                           
  6999     00A0                     ?_EUSART_OverrunErrorCallbackRegister:	
  7000                           ; 1 bytes @ 0x0
  7001                           
  7002     00A0                     ?_TMR4_PeriodMatchCallbackRegister:	
  7003                           ; 1 bytes @ 0x0
  7004                           
  7005     00A0                     ?__Umul8_16:	
  7006                           ; 1 bytes @ 0x0
  7007                           
  7008     00A0                     ?_strlen:	
  7009                           ; 2 bytes @ 0x0
  7010                           
  7011     00A0                     ?___wmul:	
  7012                           ; 2 bytes @ 0x0
  7013                           
  7014     00A0                     ?___awdiv:	
  7015                           ; 2 bytes @ 0x0
  7016                           
  7017     00A0                     ?___awmod:	
  7018                           ; 2 bytes @ 0x0
  7019                           
  7020     00A0                     ?___lwdiv:	
  7021                           ; 2 bytes @ 0x0
  7022                           
  7023     00A0                     ?___lwmod:	
  7024                           ; 2 bytes @ 0x0
  7025                           
  7026     00A0                     ?___fldiv:	
  7027                           ; 2 bytes @ 0x0
  7028                           
  7029     00A0                     ?___xxtofl:	
  7030                           ; 4 bytes @ 0x0
  7031                           
  7032     00A0                     EUSART_Read@tempRxTail:	
  7033                           ; 4 bytes @ 0x0
  7034                           
  7035     00A0                     EUSART_Write@txData:	
  7036                           ; 1 bytes @ 0x0
  7037                           
  7038     00A0                     __Umul8_16@multiplicand:	
  7039                           ; 1 bytes @ 0x0
  7040                           
  7041     00A0                     strlen@s:	
  7042                           ; 1 bytes @ 0x0
  7043                           
  7044     00A0                     ADC_SetInterruptHandler@InterruptHandler:	
  7045                           ; 1 bytes @ 0x0
  7046                           
  7047     00A0                     INT_SetInterruptHandler@InterruptHandler:	
  7048                           ; 2 bytes @ 0x0
  7049                           
  7050     00A0                     TMR4_PeriodMatchCallbackRegister@CallbackHandler:	
  7051                           ; 2 bytes @ 0x0
  7052                           
  7053     00A0                     EUSART_FramingErrorCallbackRegister@callbackHandler:	
  7054                           ; 2 bytes @ 0x0
  7055                           
  7056     00A0                     EUSART_OverrunErrorCallbackRegister@callbackHandler:	
  7057                           ; 2 bytes @ 0x0
  7058                           
  7059     00A0                     ___wmul@multiplier:	
  7060                           ; 2 bytes @ 0x0
  7061                           
  7062     00A0                     ___awdiv@divisor:	
  7063                           ; 2 bytes @ 0x0
  7064                           
  7065     00A0                     ___awmod@divisor:	
  7066                           ; 2 bytes @ 0x0
  7067                           
  7068     00A0                     ___lwdiv@divisor:	
  7069                           ; 2 bytes @ 0x0
  7070                           
  7071     00A0                     ___lwmod@divisor:	
  7072                           ; 2 bytes @ 0x0
  7073                           
  7074     00A0                     ___fldiv@a:	
  7075                           ; 2 bytes @ 0x0
  7076                           
  7077     00A0                     ___xxtofl@val:	
  7078                           ; 4 bytes @ 0x0
  7079                           
  7080     00A0                     ??_SPI1_Initialize:	
  7081                           ; 4 bytes @ 0x0
  7082                           
  7083     00A0                     ??_TMR2_Initialize:	
  7084                           ; 1 bytes @ 0x0
  7085                           
  7086     00A0                     ??_TMR4_Initialize:	
  7087                           ; 1 bytes @ 0x0
  7088                           
  7089     00A0                     ??_TMR6_Initialize:	
  7090                           ; 1 bytes @ 0x0
  7091                           
  7092     00A0                     ??_I2C2_Initialize:	
  7093                           ; 1 bytes @ 0x0
  7094                           
  7095     00A0                     ??_EUSART_Read:	
  7096                           ; 1 bytes @ 0x0
  7097                           
  7098     00A0                     ??_EUSART_IsRxReady:	
  7099                           ; 1 bytes @ 0x0
  7100                           
  7101     00A0                     ??_EUSART_IsTxReady:	
  7102                           ; 1 bytes @ 0x0
  7103                           
  7104     00A0                     ??_I2C_Master_Init:	
  7105                           ; 1 bytes @ 0x0
  7106                           
  7107     00A0                     ??_I2C2_InterruptsEnable:	
  7108                           ; 1 bytes @ 0x0
  7109                           
  7110     00A0                     ??_ADC_SelectChannel:	
  7111                           ; 1 bytes @ 0x0
  7112                           
  7113     00A0                     ??_pwm_fan_Initialize:	
  7114                           ; 1 bytes @ 0x0
  7115                           
  7116     00A0                     ??_CLOCK_Initialize:	
  7117                           ; 1 bytes @ 0x0
  7118                           
  7119     00A0                     ??_PIN_MANAGER_Initialize:	
  7120                           ; 1 bytes @ 0x0
  7121                           
  7122                           
  7123                           ; 1 bytes @ 0x0
  7124     00A0                     	ds	1
  7125     00A1                     ADC_SelectChannel@channel:
  7126     00A1                     EUSART_Read@readValue:	
  7127                           ; 1 bytes @ 0x1
  7128                           
  7129     00A1                     EUSART_Write@tempTxHead:	
  7130                           ; 1 bytes @ 0x1
  7131                           
  7132     00A1                     ??_EUSART_Write:	
  7133                           ; 1 bytes @ 0x1
  7134                           
  7135                           
  7136                           ; 1 bytes @ 0x1
  7137     00A1                     	ds	1
  7138     00A2                     putch@txData:
  7139     00A2                     strlen@a:	
  7140                           ; 1 bytes @ 0x2
  7141                           
  7142     00A2                     ___wmul@multiplicand:	
  7143                           ; 1 bytes @ 0x2
  7144                           
  7145     00A2                     ___awdiv@dividend:	
  7146                           ; 2 bytes @ 0x2
  7147                           
  7148     00A2                     ___awmod@dividend:	
  7149                           ; 2 bytes @ 0x2
  7150                           
  7151     00A2                     ___lwdiv@dividend:	
  7152                           ; 2 bytes @ 0x2
  7153                           
  7154     00A2                     ___lwmod@dividend:	
  7155                           ; 2 bytes @ 0x2
  7156                           
  7157     00A2                     ??_ADC_SetInterruptHandler:	
  7158                           ; 2 bytes @ 0x2
  7159                           
  7160     00A2                     ??_INT_SetInterruptHandler:	
  7161                           ; 1 bytes @ 0x2
  7162                           
  7163     00A2                     ??_EUSART_Initialize:	
  7164                           ; 1 bytes @ 0x2
  7165                           
  7166     00A2                     ??_EUSART_FramingErrorCallbackRegister:	
  7167                           ; 1 bytes @ 0x2
  7168                           
  7169     00A2                     ??_EUSART_OverrunErrorCallbackRegister:	
  7170                           ; 1 bytes @ 0x2
  7171                           
  7172     00A2                     ??_initAdcMultiplexer:	
  7173                           ; 1 bytes @ 0x2
  7174                           
  7175     00A2                     ??__Umul8_16:	
  7176                           ; 1 bytes @ 0x2
  7177                           
  7178     00A2                     ??_strlen:	
  7179                           ; 1 bytes @ 0x2
  7180                           
  7181     00A2                     ??_ADC_Initialize:	
  7182                           ; 1 bytes @ 0x2
  7183                           
  7184     00A2                     ??_INTERRUPT_Initialize:	
  7185                           ; 1 bytes @ 0x2
  7186                           
  7187     00A2                     ??_SYSTEM_Initialize:	
  7188                           ; 1 bytes @ 0x2
  7189                           
  7190     00A2                     ??_TMR4_PeriodMatchCallbackRegister:	
  7191                           ; 1 bytes @ 0x2
  7192                           
  7193     00A2                     ??_putch:	
  7194                           ; 1 bytes @ 0x2
  7195                           
  7196                           
  7197                           ; 1 bytes @ 0x2
  7198     00A2                     	ds	1
  7199     00A3                     ?_fputc:
  7200     00A3                     fputc@c:	
  7201                           ; 2 bytes @ 0x3
  7202                           
  7203                           
  7204                           ; 2 bytes @ 0x3
  7205     00A3                     	ds	1
  7206     00A4                     ___awdiv@counter:
  7207     00A4                     ___awmod@counter:	
  7208                           ; 1 bytes @ 0x4
  7209                           
  7210     00A4                     ___lwmod@counter:	
  7211                           ; 1 bytes @ 0x4
  7212                           
  7213     00A4                     ___wmul@product:	
  7214                           ; 1 bytes @ 0x4
  7215                           
  7216     00A4                     ___lwdiv@quotient:	
  7217                           ; 2 bytes @ 0x4
  7218                           
  7219     00A4                     __Umul8_16@product:	
  7220                           ; 2 bytes @ 0x4
  7221                           
  7222     00A4                     ___fldiv@b:	
  7223                           ; 2 bytes @ 0x4
  7224                           
  7225     00A4                     ??___wmul:	
  7226                           ; 4 bytes @ 0x4
  7227                           
  7228     00A4                     ??___awdiv:	
  7229                           ; 1 bytes @ 0x4
  7230                           
  7231     00A4                     ??___awmod:	
  7232                           ; 1 bytes @ 0x4
  7233                           
  7234     00A4                     ??___lwdiv:	
  7235                           ; 1 bytes @ 0x4
  7236                           
  7237     00A4                     ??___lwmod:	
  7238                           ; 1 bytes @ 0x4
  7239                           
  7240     00A4                     ??___xxtofl:	
  7241                           ; 1 bytes @ 0x4
  7242                           
  7243                           
  7244                           ; 1 bytes @ 0x4
  7245     00A4                     	ds	1
  7246     00A5                     ___awdiv@sign:
  7247     00A5                     ___awmod@sign:	
  7248                           ; 1 bytes @ 0x5
  7249                           
  7250     00A5                     fputc@fp:	
  7251                           ; 1 bytes @ 0x5
  7252                           
  7253                           
  7254                           ; 2 bytes @ 0x5
  7255     00A5                     	ds	1
  7256     00A6                     ?_atoi:
  7257     00A6                     ?_abs:	
  7258                           ; 2 bytes @ 0x6
  7259                           
  7260     00A6                     ?_read_prec_or_width:	
  7261                           ; 2 bytes @ 0x6
  7262                           
  7263     00A6                     ___lwdiv@counter:	
  7264                           ; 2 bytes @ 0x6
  7265                           
  7266     00A6                     atoi@s:	
  7267                           ; 1 bytes @ 0x6
  7268                           
  7269     00A6                     read_prec_or_width@fmt:	
  7270                           ; 1 bytes @ 0x6
  7271                           
  7272     00A6                     ___awdiv@quotient:	
  7273                           ; 1 bytes @ 0x6
  7274                           
  7275     00A6                     __Umul8_16@word_mpld:	
  7276                           ; 2 bytes @ 0x6
  7277                           
  7278     00A6                     abs@a:	
  7279                           ; 2 bytes @ 0x6
  7280                           
  7281                           
  7282                           ; 2 bytes @ 0x6
  7283     00A6                     	ds	1
  7284     00A7                     read_prec_or_width@ap:
  7285     00A7                     ??_fputc:	
  7286                           ; 1 bytes @ 0x7
  7287                           
  7288                           
  7289                           ; 1 bytes @ 0x7
  7290     00A7                     	ds	1
  7291     00A8                     __Umul8_16@multiplier:
  7292     00A8                     ___xxtofl@sign:	
  7293                           ; 1 bytes @ 0x8
  7294                           
  7295     00A8                     ??_atoi:	
  7296                           ; 1 bytes @ 0x8
  7297                           
  7298     00A8                     ??_abs:	
  7299                           ; 1 bytes @ 0x8
  7300                           
  7301     00A8                     ??___fldiv:	
  7302                           ; 1 bytes @ 0x8
  7303                           
  7304     00A8                     ??_read_prec_or_width:	
  7305                           ; 1 bytes @ 0x8
  7306                           
  7307                           
  7308                           ; 1 bytes @ 0x8
  7309     00A8                     	ds	1
  7310     00A9                     ?___flmul:
  7311     00A9                     ___xxtofl@exp:	
  7312                           ; 4 bytes @ 0x9
  7313                           
  7314     00A9                     ___flmul@b:	
  7315                           ; 1 bytes @ 0x9
  7316                           
  7317                           
  7318                           ; 4 bytes @ 0x9
  7319     00A9                     	ds	1
  7320     00AA                     atoi@neg:
  7321     00AA                     ___xxtofl@arg:	
  7322                           ; 1 bytes @ 0xA
  7323                           
  7324                           
  7325                           ; 4 bytes @ 0xA
  7326     00AA                     	ds	1
  7327     00AB                     read_prec_or_width@c:
  7328     00AB                     atoi@n:	
  7329                           ; 1 bytes @ 0xB
  7330                           
  7331                           
  7332                           ; 2 bytes @ 0xB
  7333     00AB                     	ds	1
  7334     00AC                     ?_fputs:
  7335     00AC                     fputs@s:	
  7336                           ; 2 bytes @ 0xC
  7337                           
  7338     00AC                     read_prec_or_width@n:	
  7339                           ; 1 bytes @ 0xC
  7340                           
  7341                           
  7342                           ; 2 bytes @ 0xC
  7343     00AC                     	ds	1
  7344     00AD                     ?_setSetpoint:
  7345     00AD                     setSetpoint@new_setpoint:	
  7346                           ; 1 bytes @ 0xD
  7347                           
  7348     00AD                     fputs@fp:	
  7349                           ; 2 bytes @ 0xD
  7350                           
  7351     00AD                     ___fldiv@rem:	
  7352                           ; 2 bytes @ 0xD
  7353                           
  7354     00AD                     ___flmul@a:	
  7355                           ; 4 bytes @ 0xD
  7356                           
  7357                           
  7358                           ; 4 bytes @ 0xD
  7359     00AD                     	ds	1
  7360     00AE                     ?___fladd:
  7361     00AE                     ___fladd@b:	
  7362                           ; 4 bytes @ 0xE
  7363                           
  7364                           
  7365                           ; 4 bytes @ 0xE
  7366     00AE                     	ds	1
  7367     00AF                     ??_setSetpoint:
  7368     00AF                     ??_fputs:	
  7369                           ; 1 bytes @ 0xF
  7370                           
  7371                           
  7372                           ; 1 bytes @ 0xF
  7373     00AF                     	ds	2
  7374     00B1                     ___fldiv@sign:
  7375     00B1                     fputs@c:	
  7376                           ; 1 bytes @ 0x11
  7377                           
  7378     00B1                     ??___flmul:	
  7379                           ; 1 bytes @ 0x11
  7380                           
  7381                           
  7382                           ; 1 bytes @ 0x11
  7383     00B1                     	ds	1
  7384     00B2                     ___fldiv@new_exp:
  7385     00B2                     fputs@i:	
  7386                           ; 2 bytes @ 0x12
  7387                           
  7388     00B2                     ___fladd@a:	
  7389                           ; 2 bytes @ 0x12
  7390                           
  7391                           
  7392                           ; 4 bytes @ 0x12
  7393     00B2                     	ds	2
  7394     00B4                     ?_pad:
  7395     00B4                     pad@fp:	
  7396                           ; 2 bytes @ 0x14
  7397                           
  7398     00B4                     ___fldiv@grs:	
  7399                           ; 2 bytes @ 0x14
  7400                           
  7401                           
  7402                           ; 4 bytes @ 0x14
  7403     00B4                     	ds	2
  7404     00B6                     ___flmul@sign:
  7405     00B6                     pad@buf:	
  7406                           ; 1 bytes @ 0x16
  7407                           
  7408     00B6                     ??___fladd:	
  7409                           ; 1 bytes @ 0x16
  7410                           
  7411                           
  7412                           ; 1 bytes @ 0x16
  7413     00B6                     	ds	1
  7414     00B7                     pad@p:
  7415     00B7                     ___flmul@grs:	
  7416                           ; 2 bytes @ 0x17
  7417                           
  7418                           
  7419                           ; 4 bytes @ 0x17
  7420     00B7                     	ds	1
  7421     00B8                     ___fldiv@bexp:
  7422                           
  7423                           ; 1 bytes @ 0x18
  7424     00B8                     	ds	1
  7425     00B9                     ___fldiv@aexp:
  7426     00B9                     ??_pad:	
  7427                           ; 1 bytes @ 0x19
  7428                           
  7429                           
  7430                           ; 1 bytes @ 0x19
  7431     00B9                     	ds	1
  7432     00BA                     pad@i:
  7433                           
  7434                           ; 2 bytes @ 0x1A
  7435     00BA                     	ds	1
  7436     00BB                     ___flmul@aexp:
  7437                           
  7438                           ; 1 bytes @ 0x1B
  7439     00BB                     	ds	1
  7440     00BC                     ?_dtoa:
  7441     00BC                     ?_utoa:	
  7442                           ; 2 bytes @ 0x1C
  7443                           
  7444     00BC                     ___flmul@bexp:	
  7445                           ; 2 bytes @ 0x1C
  7446                           
  7447     00BC                     dtoa@fp:	
  7448                           ; 1 bytes @ 0x1C
  7449                           
  7450     00BC                     utoa@fp:	
  7451                           ; 2 bytes @ 0x1C
  7452                           
  7453                           
  7454                           ; 2 bytes @ 0x1C
  7455     00BC                     	ds	1
  7456     00BD                     ___flmul@prod:
  7457                           
  7458                           ; 4 bytes @ 0x1D
  7459     00BD                     	ds	1
  7460     00BE                     ___fladd@signs:
  7461     00BE                     dtoa@d:	
  7462                           ; 1 bytes @ 0x1E
  7463                           
  7464     00BE                     utoa@d:	
  7465                           ; 2 bytes @ 0x1E
  7466                           
  7467                           
  7468                           ; 2 bytes @ 0x1E
  7469     00BE                     	ds	1
  7470     00BF                     ___fladd@aexp:
  7471                           
  7472                           ; 1 bytes @ 0x1F
  7473     00BF                     	ds	1
  7474     00C0                     ___fladd@bexp:
  7475     00C0                     ??_dtoa:	
  7476                           ; 1 bytes @ 0x20
  7477                           
  7478     00C0                     ??_utoa:	
  7479                           ; 1 bytes @ 0x20
  7480                           
  7481                           
  7482                           ; 1 bytes @ 0x20
  7483     00C0                     	ds	1
  7484     00C1                     ___fladd@grs:
  7485     00C1                     utoa@p:	
  7486                           ; 1 bytes @ 0x21
  7487                           
  7488     00C1                     ___flmul@temp:	
  7489                           ; 1 bytes @ 0x21
  7490                           
  7491     00C1                     _dtoa$2620:	
  7492                           ; 2 bytes @ 0x21
  7493                           
  7494                           
  7495                           ; 2 bytes @ 0x21
  7496     00C1                     	ds	1
  7497     00C2                     utoa@w:
  7498                           
  7499                           ; 2 bytes @ 0x22
  7500     00C2                     	ds	1
  7501     00C3                     ?_str2float:
  7502     00C3                     str2float@str:	
  7503                           ; 4 bytes @ 0x23
  7504                           
  7505     00C3                     dtoa@p:	
  7506                           ; 1 bytes @ 0x23
  7507                           
  7508                           
  7509                           ; 1 bytes @ 0x23
  7510     00C3                     	ds	1
  7511     00C4                     dtoa@w:
  7512     00C4                     utoa@i:	
  7513                           ; 2 bytes @ 0x24
  7514                           
  7515                           
  7516                           ; 2 bytes @ 0x24
  7517     00C4                     	ds	2
  7518     00C6                     dtoa@s:
  7519                           
  7520                           ; 1 bytes @ 0x26
  7521     00C6                     	ds	1
  7522     00C7                     str2float@decimal_separator:
  7523     00C7                     dtoa@i:	
  7524                           ; 1 bytes @ 0x27
  7525                           
  7526     00C7                     ??_str2float:	
  7527                           ; 2 bytes @ 0x27
  7528                           
  7529                           
  7530                           ; 1 bytes @ 0x27
  7531     00C7                     	ds	1
  7532     00C8                     str2float@multiplier:
  7533                           
  7534                           ; 1 bytes @ 0x28
  7535     00C8                     	ds	1
  7536     00C9                     ?_vfpfcnvrt:
  7537     00C9                     str2float@i:	
  7538                           ; 2 bytes @ 0x29
  7539                           
  7540     00C9                     vfpfcnvrt@fp:	
  7541                           ; 1 bytes @ 0x29
  7542                           
  7543                           
  7544                           ; 2 bytes @ 0x29
  7545     00C9                     	ds	1
  7546     00CA                     str2float@number:
  7547                           
  7548                           ; 4 bytes @ 0x2A
  7549     00CA                     	ds	1
  7550     00CB                     vfpfcnvrt@fmt:
  7551                           
  7552                           ; 1 bytes @ 0x2B
  7553     00CB                     	ds	1
  7554     00CC                     vfpfcnvrt@ap:
  7555                           
  7556                           ; 2 bytes @ 0x2C
  7557     00CC                     	ds	2
  7558     00CE                     str2float@digit:
  7559     00CE                     ??_vfpfcnvrt:	
  7560                           ; 1 bytes @ 0x2E
  7561                           
  7562                           
  7563                           ; 1 bytes @ 0x2E
  7564     00CE                     	ds	1
  7565     00CF                     ?_setKp:
  7566     00CF                     ?_setKi:	
  7567                           ; 1 bytes @ 0x2F
  7568                           
  7569     00CF                     setKp@new_kp:	
  7570                           ; 1 bytes @ 0x2F
  7571                           
  7572     00CF                     setKi@new_ki:	
  7573                           ; 4 bytes @ 0x2F
  7574                           
  7575                           
  7576                           ; 4 bytes @ 0x2F
  7577     00CF                     	ds	3
  7578     00D2                     vfpfcnvrt@done:
  7579                           
  7580                           ; 1 bytes @ 0x32
  7581     00D2                     	ds	1
  7582     00D3                     vfpfcnvrt@convarg:
  7583     00D3                     ??_setKp:	
  7584                           ; 4 bytes @ 0x33
  7585                           
  7586     00D3                     ??_setKi:	
  7587                           ; 1 bytes @ 0x33
  7588                           
  7589                           
  7590                           ; 1 bytes @ 0x33
  7591     00D3                     	ds	4
  7592     00D7                     vfpfcnvrt@cp:
  7593                           
  7594                           ; 2 bytes @ 0x37
  7595     00D7                     	ds	2
  7596     00D9                     ?_vfprintf:
  7597     00D9                     vfprintf@fp:	
  7598                           ; 2 bytes @ 0x39
  7599                           
  7600                           
  7601                           ; 2 bytes @ 0x39
  7602     00D9                     	ds	2
  7603     00DB                     vfprintf@fmt:
  7604                           
  7605                           ; 2 bytes @ 0x3B
  7606     00DB                     	ds	2
  7607     00DD                     vfprintf@ap:
  7608                           
  7609                           ; 1 bytes @ 0x3D
  7610     00DD                     	ds	1
  7611     00DE                     ??_vfprintf:
  7612                           
  7613                           ; 1 bytes @ 0x3E
  7614     00DE                     	ds	1
  7615     00DF                     vfprintf@cfmt:
  7616                           
  7617                           ; 2 bytes @ 0x3F
  7618     00DF                     	ds	2
  7619     00E1                     ?_printf:
  7620     00E1                     printf@fmt:	
  7621                           ; 2 bytes @ 0x41
  7622                           
  7623                           
  7624                           ; 2 bytes @ 0x41
  7625     00E1                     	ds	6
  7626     00E7                     printf@ap:
  7627     00E7                     ??_printf:	
  7628                           ; 1 bytes @ 0x47
  7629                           
  7630                           
  7631                           ; 1 bytes @ 0x47
  7632     00E7                     	ds	1
  7633     00E8                     ?_printOut:
  7634     00E8                     ?_readLine:	
  7635                           ; 1 bytes @ 0x48
  7636                           
  7637     00E8                     printOut@str:	
  7638                           ; 1 bytes @ 0x48
  7639                           
  7640                           
  7641                           ; 2 bytes @ 0x48
  7642     00E8                     	ds	2
  7643     00EA                     ??_printOut:
  7644     00EA                     ??_readLine:	
  7645                           ; 1 bytes @ 0x4A
  7646                           
  7647                           
  7648                           ; 1 bytes @ 0x4A
  7649     00EA                     	ds	1
  7650     00EB                     uartHandler@str:
  7651     00EB                     ??_uartHandler:	
  7652                           ; 1 bytes @ 0x4B
  7653                           
  7654                           
  7655                           ; 1 bytes @ 0x4B
  7656     00EB                     	ds	1
  7657     00EC                     ??_main:
  7658                           
  7659                           ; 1 bytes @ 0x4C
  7660     00EC                     	ds	2
  7661                           
  7662                           	psect	cstackCOMMON
  7663     0070                     __pcstackCOMMON:
  7664     0070                     ?_ADC_DefaultInterruptHandler:
  7665     0070                     ?_SPI1_Initialize:	
  7666                           ; 1 bytes @ 0x0
  7667                           
  7668     0070                     ?_TMR4_ISR:	
  7669                           ; 1 bytes @ 0x0
  7670                           
  7671     0070                     ?_I2C2_ERROR_ISR:	
  7672                           ; 1 bytes @ 0x0
  7673                           
  7674     0070                     ?_I2C2_ISR:	
  7675                           ; 1 bytes @ 0x0
  7676                           
  7677     0070                     ?_TMR2_ISR:	
  7678                           ; 1 bytes @ 0x0
  7679                           
  7680     0070                     ?_TMR2_Initialize:	
  7681                           ; 1 bytes @ 0x0
  7682                           
  7683     0070                     ?_TMR4_Initialize:	
  7684                           ; 1 bytes @ 0x0
  7685                           
  7686     0070                     ?_TMR6_Initialize:	
  7687                           ; 1 bytes @ 0x0
  7688                           
  7689     0070                     ?_EUSART_Initialize:	
  7690                           ; 1 bytes @ 0x0
  7691                           
  7692     0070                     ?_I2C2_Initialize:	
  7693                           ; 1 bytes @ 0x0
  7694                           
  7695     0070                     ?_TMR2_DefaultPeriodMatchCallback:	
  7696                           ; 1 bytes @ 0x0
  7697                           
  7698     0070                     ?_TMR4_DefaultPeriodMatchCallback:	
  7699                           ; 1 bytes @ 0x0
  7700                           
  7701     0070                     ?_EUSART_Read:	
  7702                           ; 1 bytes @ 0x0
  7703                           
  7704     0070                     ?_EUSART_IsRxReady:	
  7705                           ; 1 bytes @ 0x0
  7706                           
  7707     0070                     ?_EUSART_IsTxReady:	
  7708                           ; 1 bytes @ 0x0
  7709                           
  7710     0070                     ?_EUSART_ReceiveISR:	
  7711                           ; 1 bytes @ 0x0
  7712                           
  7713     0070                     ?_EUSART_TransmitISR:	
  7714                           ; 1 bytes @ 0x0
  7715                           
  7716     0070                     ?_EUSART_DefaultFramingErrorCallback:	
  7717                           ; 1 bytes @ 0x0
  7718                           
  7719     0070                     ?_EUSART_DefaultOverrunErrorCallback:	
  7720                           ; 1 bytes @ 0x0
  7721                           
  7722     0070                     ?_initAdcMultiplexer:	
  7723                           ; 1 bytes @ 0x0
  7724                           
  7725     0070                     ?_controller:	
  7726                           ; 1 bytes @ 0x0
  7727                           
  7728     0070                     ?_I2C_Master_Init:	
  7729                           ; 1 bytes @ 0x0
  7730                           
  7731     0070                     ?_uartHandler:	
  7732                           ; 1 bytes @ 0x0
  7733                           
  7734     0070                     ?_I2C2_EVENT_IDLE:	
  7735                           ; 1 bytes @ 0x0
  7736                           
  7737     0070                     ?_I2C2_EVENT_SEND_RD_ADDR:	
  7738                           ; 1 bytes @ 0x0
  7739                           
  7740     0070                     ?_I2C2_EVENT_SEND_WR_ADDR:	
  7741                           ; 1 bytes @ 0x0
  7742                           
  7743     0070                     ?_I2C2_EVENT_TX:	
  7744                           ; 1 bytes @ 0x0
  7745                           
  7746     0070                     ?_I2C2_EVENT_RX:	
  7747                           ; 1 bytes @ 0x0
  7748                           
  7749     0070                     ?_I2C2_EVENT_NACK:	
  7750                           ; 1 bytes @ 0x0
  7751                           
  7752     0070                     ?_I2C2_EVENT_ERROR:	
  7753                           ; 1 bytes @ 0x0
  7754                           
  7755     0070                     ?_I2C2_EVENT_STOP:	
  7756                           ; 1 bytes @ 0x0
  7757                           
  7758     0070                     ?_I2C2_EVENT_RESET:	
  7759                           ; 1 bytes @ 0x0
  7760                           
  7761     0070                     ?_I2C2_InterruptsEnable:	
  7762                           ; 1 bytes @ 0x0
  7763                           
  7764     0070                     ?_I2C2_EventHandler:	
  7765                           ; 1 bytes @ 0x0
  7766                           
  7767     0070                     ?_I2C2_ErrorEventHandler:	
  7768                           ; 1 bytes @ 0x0
  7769                           
  7770     0070                     ?_I2C2_InterruptClear:	
  7771                           ; 1 bytes @ 0x0
  7772                           
  7773     0070                     ?_I2C2_ErrorInterruptClear:	
  7774                           ; 1 bytes @ 0x0
  7775                           
  7776     0070                     ?_I2C2_StatusFlagsClear:	
  7777                           ; 1 bytes @ 0x0
  7778                           
  7779     0070                     ?_I2C2_IsAddr:	
  7780                           ; 1 bytes @ 0x0
  7781                           
  7782     0070                     ?_I2C2_IsNack:	
  7783                           ; 1 bytes @ 0x0
  7784                           
  7785     0070                     ?_I2C2_IsData:	
  7786                           ; 1 bytes @ 0x0
  7787                           
  7788     0070                     ?_I2C2_DataTransmit:	
  7789                           ; 1 bytes @ 0x0
  7790                           
  7791     0070                     ?_I2C2_RestartEnable:	
  7792                           ; 1 bytes @ 0x0
  7793                           
  7794     0070                     ?_I2C2_IsRxBufFull:	
  7795                           ; 1 bytes @ 0x0
  7796                           
  7797     0070                     ?_I2C2_DataReceive:	
  7798                           ; 1 bytes @ 0x0
  7799                           
  7800     0070                     ?_I2C2_AckSend:	
  7801                           ; 1 bytes @ 0x0
  7802                           
  7803     0070                     ?_I2C2_RestartDisable:	
  7804                           ; 1 bytes @ 0x0
  7805                           
  7806     0070                     ?_I2C2_NackSend:	
  7807                           ; 1 bytes @ 0x0
  7808                           
  7809     0070                     ?_I2C2_ReceiveEnable:	
  7810                           ; 1 bytes @ 0x0
  7811                           
  7812     0070                     ?_I2C2_StopSend:	
  7813                           ; 1 bytes @ 0x0
  7814                           
  7815     0070                     ?_I2C2_BusReset:	
  7816                           ; 1 bytes @ 0x0
  7817                           
  7818     0070                     ?_ADC_Initialize:	
  7819                           ; 1 bytes @ 0x0
  7820                           
  7821     0070                     ?_ADC_SelectChannel:	
  7822                           ; 1 bytes @ 0x0
  7823                           
  7824     0070                     ?_ADC_ISR:	
  7825                           ; 1 bytes @ 0x0
  7826                           
  7827     0070                     ?_pwm_fan_Initialize:	
  7828                           ; 1 bytes @ 0x0
  7829                           
  7830     0070                     ?_pwm_fan_LoadDutyValue:	
  7831                           ; 1 bytes @ 0x0
  7832                           
  7833     0070                     ?_INTERRUPT_Initialize:	
  7834                           ; 1 bytes @ 0x0
  7835                           
  7836     0070                     ?_INTERRUPT_InterruptManager:	
  7837                           ; 1 bytes @ 0x0
  7838                           
  7839     0070                     ?_CLOCK_Initialize:	
  7840                           ; 1 bytes @ 0x0
  7841                           
  7842     0070                     ?_PIN_MANAGER_Initialize:	
  7843                           ; 1 bytes @ 0x0
  7844                           
  7845     0070                     ?_SYSTEM_Initialize:	
  7846                           ; 1 bytes @ 0x0
  7847                           
  7848     0070                     ?_putch:	
  7849                           ; 1 bytes @ 0x0
  7850                           
  7851     0070                     ?_adcConversionDoneHandler:	
  7852                           ; 1 bytes @ 0x0
  7853                           
  7854     0070                     ?_I2C2_Close:	
  7855                           ; 1 bytes @ 0x0
  7856                           
  7857     0070                     ?i1_ADC_SelectChannel:	
  7858                           ; 1 bytes @ 0x0
  7859                           
  7860     0070                     ?_ADC_GetConversionResult:	
  7861                           ; 1 bytes @ 0x0
  7862                           
  7863     0070                     ?_main:	
  7864                           ; 2 bytes @ 0x0
  7865                           
  7866     0070                     ?_getHoogtesensor:	
  7867                           ; 2 bytes @ 0x0
  7868                           
  7869     0070                     ?i1__Umul8_16:	
  7870                           ; 2 bytes @ 0x0
  7871                           
  7872     0070                     ?i1___xxtofl:	
  7873                           ; 2 bytes @ 0x0
  7874                           
  7875     0070                     EUSART_ReceiveISR@regValue:	
  7876                           ; 4 bytes @ 0x0
  7877                           
  7878     0070                     EUSART_TransmitISR@tempTxTail:	
  7879                           ; 1 bytes @ 0x0
  7880                           
  7881     0070                     I2C2_EVENT_RX@retEventState:	
  7882                           ; 1 bytes @ 0x0
  7883                           
  7884     0070                     I2C2_EVENT_NACK@retEventState:	
  7885                           ; 1 bytes @ 0x0
  7886                           
  7887     0070                     I2C2_EVENT_ERROR@retEventState:	
  7888                           ; 1 bytes @ 0x0
  7889                           
  7890     0070                     I2C2_DataTransmit@data:	
  7891                           ; 1 bytes @ 0x0
  7892                           
  7893     0070                     i1__Umul8_16@multiplicand:	
  7894                           ; 1 bytes @ 0x0
  7895                           
  7896     0070                     pwm_fan_LoadDutyValue@dutyValue:	
  7897                           ; 1 bytes @ 0x0
  7898                           
  7899     0070                     i1___xxtofl@val:	
  7900                           ; 2 bytes @ 0x0
  7901                           
  7902     0070                     ??_ADC_DefaultInterruptHandler:	
  7903                           ; 4 bytes @ 0x0
  7904                           
  7905     0070                     ??_TMR2_ISR:	
  7906                           ; 1 bytes @ 0x0
  7907                           
  7908     0070                     ??_TMR2_DefaultPeriodMatchCallback:	
  7909                           ; 1 bytes @ 0x0
  7910                           
  7911     0070                     ??_TMR4_DefaultPeriodMatchCallback:	
  7912                           ; 1 bytes @ 0x0
  7913                           
  7914     0070                     ??_EUSART_ReceiveISR:	
  7915                           ; 1 bytes @ 0x0
  7916                           
  7917     0070                     ??_EUSART_TransmitISR:	
  7918                           ; 1 bytes @ 0x0
  7919                           
  7920     0070                     ??_EUSART_DefaultFramingErrorCallback:	
  7921                           ; 1 bytes @ 0x0
  7922                           
  7923     0070                     ??_EUSART_DefaultOverrunErrorCallback:	
  7924                           ; 1 bytes @ 0x0
  7925                           
  7926     0070                     ??_I2C2_EVENT_IDLE:	
  7927                           ; 1 bytes @ 0x0
  7928                           
  7929     0070                     ??_I2C2_EVENT_SEND_RD_ADDR:	
  7930                           ; 1 bytes @ 0x0
  7931                           
  7932     0070                     ??_I2C2_EVENT_RX:	
  7933                           ; 1 bytes @ 0x0
  7934                           
  7935     0070                     ??_I2C2_EVENT_NACK:	
  7936                           ; 1 bytes @ 0x0
  7937                           
  7938     0070                     ??_I2C2_EVENT_ERROR:	
  7939                           ; 1 bytes @ 0x0
  7940                           
  7941     0070                     ??_I2C2_EVENT_STOP:	
  7942                           ; 1 bytes @ 0x0
  7943                           
  7944     0070                     ??_I2C2_EVENT_RESET:	
  7945                           ; 1 bytes @ 0x0
  7946                           
  7947     0070                     ??_I2C2_InterruptClear:	
  7948                           ; 1 bytes @ 0x0
  7949                           
  7950     0070                     ??_I2C2_ErrorInterruptClear:	
  7951                           ; 1 bytes @ 0x0
  7952                           
  7953     0070                     ??_I2C2_StatusFlagsClear:	
  7954                           ; 1 bytes @ 0x0
  7955                           
  7956     0070                     ??_I2C2_IsAddr:	
  7957                           ; 1 bytes @ 0x0
  7958                           
  7959     0070                     ??_I2C2_IsNack:	
  7960                           ; 1 bytes @ 0x0
  7961                           
  7962     0070                     ??_I2C2_IsData:	
  7963                           ; 1 bytes @ 0x0
  7964                           
  7965     0070                     ??_I2C2_DataTransmit:	
  7966                           ; 1 bytes @ 0x0
  7967                           
  7968     0070                     ??_I2C2_RestartEnable:	
  7969                           ; 1 bytes @ 0x0
  7970                           
  7971     0070                     ??_I2C2_IsRxBufFull:	
  7972                           ; 1 bytes @ 0x0
  7973                           
  7974     0070                     ??_I2C2_DataReceive:	
  7975                           ; 1 bytes @ 0x0
  7976                           
  7977     0070                     ??_I2C2_AckSend:	
  7978                           ; 1 bytes @ 0x0
  7979                           
  7980     0070                     ??_I2C2_RestartDisable:	
  7981                           ; 1 bytes @ 0x0
  7982                           
  7983     0070                     ??_I2C2_NackSend:	
  7984                           ; 1 bytes @ 0x0
  7985                           
  7986     0070                     ??_I2C2_ReceiveEnable:	
  7987                           ; 1 bytes @ 0x0
  7988                           
  7989     0070                     ??_I2C2_StopSend:	
  7990                           ; 1 bytes @ 0x0
  7991                           
  7992     0070                     ??_I2C2_BusReset:	
  7993                           ; 1 bytes @ 0x0
  7994                           
  7995     0070                     ??_I2C2_Close:	
  7996                           ; 1 bytes @ 0x0
  7997                           
  7998     0070                     ??i1_ADC_SelectChannel:	
  7999                           ; 1 bytes @ 0x0
  8000                           
  8001                           
  8002                           ; 1 bytes @ 0x0
  8003     0070                     	ds	1
  8004     0071                     EUSART_ReceiveISR@tempRxHead:
  8005     0071                     I2C2_EVENT_TX@retEventState:	
  8006                           ; 1 bytes @ 0x1
  8007                           
  8008     0071                     i1ADC_SelectChannel@channel:	
  8009                           ; 1 bytes @ 0x1
  8010                           
  8011     0071                     ??_I2C2_EVENT_SEND_WR_ADDR:	
  8012                           ; 1 bytes @ 0x1
  8013                           
  8014     0071                     ??_I2C2_EVENT_TX:	
  8015                           ; 1 bytes @ 0x1
  8016                           
  8017                           
  8018                           ; 1 bytes @ 0x1
  8019     0071                     	ds	1
  8020     0072                     ??_I2C2_EventHandler:
  8021     0072                     ??_I2C2_ErrorEventHandler:	
  8022                           ; 1 bytes @ 0x2
  8023                           
  8024     0072                     ??_ADC_GetConversionResult:	
  8025                           ; 1 bytes @ 0x2
  8026                           
  8027     0072                     ??_pwm_fan_LoadDutyValue:	
  8028                           ; 1 bytes @ 0x2
  8029                           
  8030     0072                     ??_adcConversionDoneHandler:	
  8031                           ; 1 bytes @ 0x2
  8032                           
  8033     0072                     ??_getHoogtesensor:	
  8034                           ; 1 bytes @ 0x2
  8035                           
  8036     0072                     ??i1__Umul8_16:	
  8037                           ; 1 bytes @ 0x2
  8038                           
  8039                           
  8040                           ; 1 bytes @ 0x2
  8041     0072                     	ds	2
  8042     0074                     i1__Umul8_16@product:
  8043     0074                     ??_I2C2_ERROR_ISR:	
  8044                           ; 2 bytes @ 0x4
  8045                           
  8046     0074                     ??_I2C2_ISR:	
  8047                           ; 1 bytes @ 0x4
  8048                           
  8049     0074                     ??_ADC_ISR:	
  8050                           ; 1 bytes @ 0x4
  8051                           
  8052     0074                     ??i1___xxtofl:	
  8053                           ; 1 bytes @ 0x4
  8054                           
  8055                           
  8056                           ; 1 bytes @ 0x4
  8057     0074                     	ds	2
  8058     0076                     i1__Umul8_16@word_mpld:
  8059                           
  8060                           ; 2 bytes @ 0x6
  8061     0076                     	ds	2
  8062     0078                     i1__Umul8_16@multiplier:
  8063     0078                     i1___xxtofl@sign:	
  8064                           ; 1 bytes @ 0x8
  8065                           
  8066                           
  8067                           ; 1 bytes @ 0x8
  8068     0078                     	ds	1
  8069     0079                     i1___xxtofl@exp:
  8070                           
  8071                           ; 1 bytes @ 0x9
  8072     0079                     	ds	1
  8073     007A                     i1___xxtofl@arg:
  8074                           
  8075                           ; 4 bytes @ 0xA
  8076     007A                     	ds	4
  8077     007E                     ??_TMR4_ISR:
  8078     007E                     ??_INTERRUPT_InterruptManager:	
  8079                           ; 1 bytes @ 0xE
  8080                           
  8081                           
  8082                           	psect	cstackBANK0
  8083     0020                     __pcstackBANK0:	
  8084                           ; 1 bytes @ 0xE
  8085                           
  8086     0020                     ?i1___flmul:
  8087     0020                     i1___flmul@b:	
  8088                           ; 4 bytes @ 0x0
  8089                           
  8090                           
  8091                           ; 4 bytes @ 0x0
  8092     0020                     	ds	4
  8093     0024                     i1___flmul@a:
  8094                           
  8095                           ; 4 bytes @ 0x4
  8096     0024                     	ds	4
  8097     0028                     ??i1___flmul:
  8098                           
  8099                           ; 1 bytes @ 0x8
  8100     0028                     	ds	5
  8101     002D                     i1___flmul@sign:
  8102                           
  8103                           ; 1 bytes @ 0xD
  8104     002D                     	ds	1
  8105     002E                     i1___flmul@grs:
  8106                           
  8107                           ; 4 bytes @ 0xE
  8108     002E                     	ds	4
  8109     0032                     i1___flmul@aexp:
  8110                           
  8111                           ; 1 bytes @ 0x12
  8112     0032                     	ds	1
  8113     0033                     i1___flmul@bexp:
  8114                           
  8115                           ; 1 bytes @ 0x13
  8116     0033                     	ds	1
  8117     0034                     i1___flmul@prod:
  8118                           
  8119                           ; 4 bytes @ 0x14
  8120     0034                     	ds	4
  8121     0038                     i1___flmul@temp:
  8122                           
  8123                           ; 2 bytes @ 0x18
  8124     0038                     	ds	2
  8125     003A                     ?___fltol:
  8126     003A                     ?i1___fladd:	
  8127                           ; 4 bytes @ 0x1A
  8128                           
  8129     003A                     ___fltol@f1:	
  8130                           ; 4 bytes @ 0x1A
  8131                           
  8132     003A                     i1___fladd@b:	
  8133                           ; 4 bytes @ 0x1A
  8134                           
  8135                           
  8136                           ; 4 bytes @ 0x1A
  8137     003A                     	ds	4
  8138     003E                     i1___fladd@a:
  8139     003E                     ??___fltol:	
  8140                           ; 4 bytes @ 0x1E
  8141                           
  8142                           
  8143                           ; 1 bytes @ 0x1E
  8144     003E                     	ds	4
  8145     0042                     ___fltol@sign1:
  8146     0042                     ??i1___fladd:	
  8147                           ; 1 bytes @ 0x22
  8148                           
  8149                           
  8150                           ; 1 bytes @ 0x22
  8151     0042                     	ds	1
  8152     0043                     ___fltol@exp1:
  8153                           
  8154                           ; 1 bytes @ 0x23
  8155     0043                     	ds	7
  8156     004A                     i1___fladd@signs:
  8157                           
  8158                           ; 1 bytes @ 0x2A
  8159     004A                     	ds	1
  8160     004B                     i1___fladd@aexp:
  8161                           
  8162                           ; 1 bytes @ 0x2B
  8163     004B                     	ds	1
  8164     004C                     i1___fladd@bexp:
  8165                           
  8166                           ; 1 bytes @ 0x2C
  8167     004C                     	ds	1
  8168     004D                     i1___fladd@grs:
  8169                           
  8170                           ; 1 bytes @ 0x2D
  8171     004D                     	ds	1
  8172     004E                     ??_controller:
  8173                           
  8174                           ; 1 bytes @ 0x2E
  8175     004E                     	ds	1
  8176     004F                     controller@P:
  8177                           
  8178                           ; 2 bytes @ 0x2F
  8179     004F                     	ds	2
  8180     0051                     controller@I:
  8181                           
  8182                           ; 2 bytes @ 0x31
  8183     0051                     	ds	2
  8184     0053                     controller@error:
  8185                           
  8186                           ; 2 bytes @ 0x33
  8187     0053                     	ds	2
  8188                           
  8189                           	psect	maintext
  8190     11A3                     __pmaintext:	
  8191 ;;
  8192 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
  8193 ;;
  8194 ;; *************** function _main *****************
  8195 ;; Defined at:
  8196 ;;		line 52 in file "main.c"
  8197 ;; Parameters:    Size  Location     Type
  8198 ;;		None
  8199 ;; Auto vars:     Size  Location     Type
  8200 ;;		None
  8201 ;; Return value:  Size  Location     Type
  8202 ;;                  2  798[None  ] int 
  8203 ;; Registers used:
  8204 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  8205 ;; Tracked objects:
  8206 ;;		On entry : B1F/0
  8207 ;;		On exit  : 0/0
  8208 ;;		Unchanged: 0/0
  8209 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8210 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8211 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8212 ;;      Temps:          0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0
  8213 ;;      Totals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0
  8214 ;;Total ram usage:        2 bytes
  8215 ;; Hardware stack levels required when called: 18
  8216 ;; This function calls:
  8217 ;;		_I2C_Master_Init
  8218 ;;		_SYSTEM_Initialize
  8219 ;;		_TMR4_PeriodMatchCallbackRegister
  8220 ;;		_initAdcMultiplexer
  8221 ;;		_printOut
  8222 ;;		_uartHandler
  8223 ;; This function is called by:
  8224 ;;		Startup code after reset
  8225 ;; This function uses a non-reentrant model
  8226 ;;
  8227                           
  8228     11A3                     _main:	
  8229                           ;psect for function _main
  8230                           
  8231     11A3                     l6902:	
  8232                           ;incstack = 0
  8233 ;; hardware stack exceeded
  8234                           ; Regs used in _main: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  8235                           
  8236                           
  8237                           ;main.c: 54:     SYSTEM_Initialize();
  8238     11A3  3190  2097  3191   	fcall	_SYSTEM_Initialize
  8239     11A6                     l6904:
  8240                           
  8241                           ;main.c: 60:     (INTCONbits.GIE = 1);
  8242     11A6  178B               	bsf	11,7	;volatile
  8243     11A7                     l6906:
  8244                           
  8245                           ;main.c: 66:     (INTCONbits.PEIE = 1);
  8246     11A7  170B               	bsf	11,6	;volatile
  8247                           
  8248                           ;main.c: 71:     initAdcMultiplexer();
  8249     11A8  319F  270A  3191   	fcall	_initAdcMultiplexer
  8250                           
  8251                           ;main.c: 72:     TMR4_PeriodMatchCallbackRegister(controller);
  8252     11AB  30D8               	movlw	low _controller
  8253     11AC  0021               	movlb	1	; select bank1
  8254     11AD  00A0               	movwf	TMR4_PeriodMatchCallbackRegister@CallbackHandler^(0+128)
  8255     11AE  3009               	movlw	high _controller
  8256     11AF  00A1               	movwf	(TMR4_PeriodMatchCallbackRegister@CallbackHandler^(0+128)+1)
  8257     11B0  319E  2699  3191   	fcall	_TMR4_PeriodMatchCallbackRegister
  8258     11B3                     l6908:
  8259                           
  8260                           ;main.c: 74:     I2C_Master_Init();
  8261     11B3  319E  2621  3191   	fcall	_I2C_Master_Init
  8262     11B6                     l6910:
  8263                           
  8264                           ;main.c: 77:     {;main.c: 78:         uartHandler();
  8265     11B6  3196  26C2  3191   	fcall	_uartHandler
  8266     11B9                     l6912:
  8267                           
  8268                           ;main.c: 96:         _delay((unsigned long)((100)*(32000000U/4000.0)));
  8269     11B9  3005               	movlw	5
  8270     11BA  0021               	movlb	1	; select bank1
  8271     11BB  00ED               	movwf	(??_main^(0+128)+1)
  8272     11BC  300F               	movlw	15
  8273     11BD  00EC               	movwf	??_main^(0+128)
  8274     11BE  30F1               	movlw	241
  8275     11BF                     u7867:
  8276     11BF  0B89               	decfsz	9,f
  8277     11C0  29BF               	goto	u7867
  8278     11C1  0BEC               	decfsz	??_main^(0+128),f
  8279     11C2  29BF               	goto	u7867
  8280     11C3  0BED               	decfsz	(??_main^(0+128)+1),f
  8281     11C4  29BF               	goto	u7867
  8282                           
  8283                           ;main.c: 98:         printOut("HHH\r\n");
  8284     11C5  3028               	movlw	low (STR_1| (0+32768))
  8285     11C6  0021               	movlb	1	; select bank1
  8286     11C7  00E8               	movwf	printOut@str^(0+128)
  8287     11C8  3099               	movlw	high (STR_1| (0+32768))
  8288     11C9  00E9               	movwf	(printOut@str^(0+128)+1)
  8289     11CA  319E  26AB  3191   	fcall	_printOut
  8290     11CD  29B6               	goto	l6910
  8291     11CE  3180  2874         	ljmp	start
  8292     11D0                     __end_of_main:
  8293                           
  8294                           	psect	text1
  8295     16C2                     __ptext1:	
  8296 ;; *************** function _uartHandler *****************
  8297 ;; Defined at:
  8298 ;;		line 95 in file "UART.c"
  8299 ;; Parameters:    Size  Location     Type
  8300 ;;		None
  8301 ;; Auto vars:     Size  Location     Type
  8302 ;;  str             1   75[BANK1 ] PTR unsigned char 
  8303 ;;		 -> line(20), 
  8304 ;; Return value:  Size  Location     Type
  8305 ;;                  1    wreg      void 
  8306 ;; Registers used:
  8307 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  8308 ;; Tracked objects:
  8309 ;;		On entry : 0/0
  8310 ;;		On exit  : 0/0
  8311 ;;		Unchanged: 0/0
  8312 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8313 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8314 ;;      Locals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0
  8315 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8316 ;;      Totals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0
  8317 ;;Total ram usage:        1 bytes
  8318 ;; Hardware stack levels used: 1
  8319 ;; Hardware stack levels required when called: 17
  8320 ;; This function calls:
  8321 ;;		_atoi
  8322 ;;		_printf
  8323 ;;		_readLine
  8324 ;;		_setKi
  8325 ;;		_setKp
  8326 ;;		_setSetpoint
  8327 ;;		_str2float
  8328 ;; This function is called by:
  8329 ;;		_main
  8330 ;; This function uses a non-reentrant model
  8331 ;;
  8332                           
  8333     16C2                     _uartHandler:	
  8334                           ;psect for function _uartHandler
  8335                           
  8336     16C2                     l6728:	
  8337                           ;incstack = 0
  8338 ;; hardware stack exceeded
  8339                           ; Regs used in _uartHandler: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  8340                           
  8341                           
  8342                           ;UART.c: 96:     char *str = readLine();
  8343     16C2  3194  246F  3196   	fcall	_readLine
  8344     16C5  0021               	movlb	1	; select bank1
  8345     16C6  00EB               	movwf	uartHandler@str^(0+128)
  8346                           
  8347                           ;UART.c: 97:     switch (*str) {
  8348     16C7  2F3A               	goto	l6748
  8349     16C8                     l6730:
  8350                           
  8351                           ;UART.c: 103:             setSetpoint((uint16_t) atoi(str + 1));
  8352     16C8  086B               	movf	uartHandler@str^(0+128),w
  8353     16C9  3E01               	addlw	1
  8354     16CA  00A6               	movwf	atoi@s^(0+128)
  8355     16CB  3188  200F  3196   	fcall	_atoi
  8356     16CE  0021               	movlb	1	; select bank1
  8357     16CF  0827               	movf	(?_atoi+1)^(0+128),w
  8358     16D0  00AE               	movwf	(setSetpoint@new_setpoint+1)^(0+128)
  8359     16D1  0826               	movf	?_atoi^(0+128),w
  8360     16D2  00AD               	movwf	setSetpoint@new_setpoint^(0+128)
  8361     16D3  319E  26BD  3196   	fcall	_setSetpoint
  8362     16D6                     l6732:
  8363                           
  8364                           ;UART.c: 104:             printf("changed setpoint to %u\r\n", (uint16_t) atoi(str + 1))
      +                          ;
  8365     16D6  304C               	movlw	low (STR_10| (0+32768))
  8366     16D7  0021               	movlb	1	; select bank1
  8367     16D8  00E1               	movwf	printf@fmt^(0+128)
  8368     16D9  3098               	movlw	high (STR_10| (0+32768))
  8369     16DA  00E2               	movwf	(printf@fmt^(0+128)+1)
  8370     16DB  086B               	movf	uartHandler@str^(0+128),w
  8371     16DC  3E01               	addlw	1
  8372     16DD  00A6               	movwf	atoi@s^(0+128)
  8373     16DE  3188  200F  3196   	fcall	_atoi
  8374     16E1  0021               	movlb	1	; select bank1
  8375     16E2  0827               	movf	(?_atoi+1)^(0+128),w
  8376     16E3  00E4               	movwf	((?_printf+1)^(0+128)+2)
  8377     16E4  0826               	movf	?_atoi^(0+128),w
  8378     16E5  00E3               	movwf	(?_printf^(0+128)+2)
  8379     16E6  319F  2771  3196   	fcall	_printf
  8380                           
  8381                           ;UART.c: 105:             break;
  8382     16E9  2F5B               	goto	l914
  8383     16EA                     l6734:
  8384                           
  8385                           ;UART.c: 109:             setKp(str2float(str + 1));
  8386     16EA  086B               	movf	uartHandler@str^(0+128),w
  8387     16EB  3E01               	addlw	1
  8388     16EC  00C3               	movwf	str2float@str^(0+128)
  8389     16ED  3189  212D  3196   	fcall	_str2float
  8390     16F0  0021               	movlb	1	; select bank1
  8391     16F1  0846               	movf	(?_str2float+3)^(0+128),w
  8392     16F2  00D2               	movwf	(setKp@new_kp+3)^(0+128)
  8393     16F3  0845               	movf	(?_str2float+2)^(0+128),w
  8394     16F4  00D1               	movwf	(setKp@new_kp+2)^(0+128)
  8395     16F5  0844               	movf	(?_str2float+1)^(0+128),w
  8396     16F6  00D0               	movwf	(setKp@new_kp+1)^(0+128)
  8397     16F7  0843               	movf	?_str2float^(0+128),w
  8398     16F8  00CF               	movwf	setKp@new_kp^(0+128)
  8399     16F9  319F  27C5  3196   	fcall	_setKp
  8400     16FC                     l6736:
  8401                           
  8402                           ;UART.c: 110:             printf("changed kp\r\n");
  8403     16FC  30F0               	movlw	low (STR_11| (0+32768))
  8404     16FD  0021               	movlb	1	; select bank1
  8405     16FE  00E1               	movwf	printf@fmt^(0+128)
  8406     16FF  3098               	movlw	high (STR_11| (0+32768))
  8407     1700  00E2               	movwf	(printf@fmt^(0+128)+1)
  8408     1701  319F  2771  3196   	fcall	_printf
  8409                           
  8410                           ;UART.c: 111:             break;
  8411     1704  2F5B               	goto	l914
  8412     1705                     l6738:
  8413                           
  8414                           ;UART.c: 114:             setKi(str2float(str + 1));
  8415     1705  086B               	movf	uartHandler@str^(0+128),w
  8416     1706  3E01               	addlw	1
  8417     1707  00C3               	movwf	str2float@str^(0+128)
  8418     1708  3189  212D  3196   	fcall	_str2float
  8419     170B  0021               	movlb	1	; select bank1
  8420     170C  0846               	movf	(?_str2float+3)^(0+128),w
  8421     170D  00D2               	movwf	(setKi@new_ki+3)^(0+128)
  8422     170E  0845               	movf	(?_str2float+2)^(0+128),w
  8423     170F  00D1               	movwf	(setKi@new_ki+2)^(0+128)
  8424     1710  0844               	movf	(?_str2float+1)^(0+128),w
  8425     1711  00D0               	movwf	(setKi@new_ki+1)^(0+128)
  8426     1712  0843               	movf	?_str2float^(0+128),w
  8427     1713  00CF               	movwf	setKi@new_ki^(0+128)
  8428     1714  319F  27B4  3196   	fcall	_setKi
  8429     1717                     l6740:
  8430                           
  8431                           ;UART.c: 115:             printf("changed ki\r\n");
  8432     1717  30E3               	movlw	low (STR_12| (0+32768))
  8433     1718  0021               	movlb	1	; select bank1
  8434     1719  00E1               	movwf	printf@fmt^(0+128)
  8435     171A  3098               	movlw	high (STR_12| (0+32768))
  8436     171B  00E2               	movwf	(printf@fmt^(0+128)+1)
  8437     171C  319F  2771  3196   	fcall	_printf
  8438                           
  8439                           ;UART.c: 116:             break;
  8440     171F  2F5B               	goto	l914
  8441     1720                     l6742:
  8442                           
  8443                           ;UART.c: 119:             mustPrintLogs = !mustPrintLogs;
  8444     1720  0020               	movlb	0	; select bank0
  8445     1721  086E               	movf	_mustPrintLogs,w
  8446     1722  1903               	btfsc	3,2
  8447     1723  2F25               	goto	u7441
  8448     1724  2F27               	goto	u7440
  8449     1725                     u7441:
  8450     1725  3001               	movlw	1
  8451     1726  2F28               	goto	u7450
  8452     1727                     u7440:
  8453     1727  3000               	movlw	0
  8454     1728                     u7450:
  8455     1728  00EE               	movwf	_mustPrintLogs
  8456     1729                     l6744:
  8457                           
  8458                           ;UART.c: 120:             printf("logs toggled\r\n");
  8459     1729  30C5               	movlw	low (STR_13| (0+32768))
  8460     172A  0021               	movlb	1	; select bank1
  8461     172B  00E1               	movwf	printf@fmt^(0+128)
  8462     172C  3098               	movlw	high (STR_13| (0+32768))
  8463     172D  00E2               	movwf	(printf@fmt^(0+128)+1)
  8464     172E  319F  2771  3196   	fcall	_printf
  8465                           
  8466                           ;UART.c: 121:             break;
  8467     1731  2F5B               	goto	l914
  8468     1732                     l6746:
  8469                           
  8470                           ;UART.c: 125:             printf("Unkown command\r\n");
  8471     1732  30A3               	movlw	low (STR_14| (0+32768))
  8472     1733  00E1               	movwf	printf@fmt^(0+128)
  8473     1734  3098               	movlw	high (STR_14| (0+32768))
  8474     1735  00E2               	movwf	(printf@fmt^(0+128)+1)
  8475     1736  319F  2771  3196   	fcall	_printf
  8476                           
  8477                           ;UART.c: 126:     };
  8478     1739  2F5B               	goto	l914
  8479     173A                     l6748:
  8480     173A  086B               	movf	uartHandler@str^(0+128),w
  8481     173B  0086               	movwf	6
  8482     173C  3001               	movlw	1	; select bank2/3
  8483     173D  0087               	movwf	7
  8484     173E  0801               	movf	1,w
  8485                           
  8486                           ; Switch size 1, requested type "simple"
  8487                           ; Number of cases is 9, Range of values is 0 to 115
  8488                           ; switch strategies available:
  8489                           ; Name         Instructions Cycles
  8490                           ; simple_byte           28    15 (average)
  8491                           ; direct_byte          238     6 (fixed)
  8492                           ; jumptable            260     6 (fixed)
  8493                           ;	Chosen strategy is simple_byte
  8494     173F  3A00               	xorlw	0	; case 0
  8495     1740  1903               	skipnz
  8496     1741  2F5B               	goto	l914
  8497     1742  3A49               	xorlw	73	; case 73
  8498     1743  1903               	skipnz
  8499     1744  2F05               	goto	l6738
  8500     1745  3A05               	xorlw	5	; case 76
  8501     1746  1903               	skipnz
  8502     1747  2F20               	goto	l6742
  8503     1748  3A1C               	xorlw	28	; case 80
  8504     1749  1903               	skipnz
  8505     174A  2EEA               	goto	l6734
  8506     174B  3A03               	xorlw	3	; case 83
  8507     174C  1903               	skipnz
  8508     174D  2EC8               	goto	l6730
  8509     174E  3A3A               	xorlw	58	; case 105
  8510     174F  1903               	skipnz
  8511     1750  2F05               	goto	l6738
  8512     1751  3A05               	xorlw	5	; case 108
  8513     1752  1903               	skipnz
  8514     1753  2F20               	goto	l6742
  8515     1754  3A1C               	xorlw	28	; case 112
  8516     1755  1903               	skipnz
  8517     1756  2EEA               	goto	l6734
  8518     1757  3A03               	xorlw	3	; case 115
  8519     1758  1903               	skipnz
  8520     1759  2EC8               	goto	l6730
  8521     175A  2F32               	goto	l6746
  8522     175B                     l914:
  8523     175B  0008               	return
  8524     175C                     __end_of_uartHandler:
  8525                           
  8526                           	psect	text2
  8527     092D                     __ptext2:	
  8528 ;; *************** function _str2float *****************
  8529 ;; Defined at:
  8530 ;;		line 25 in file "UART.c"
  8531 ;; Parameters:    Size  Location     Type
  8532 ;;  str             1   35[BANK1 ] PTR unsigned char 
  8533 ;;		 -> line(20), 
  8534 ;; Auto vars:     Size  Location     Type
  8535 ;;  i               1   41[BANK1 ] unsigned char 
  8536 ;;  digit           1   46[BANK1 ] unsigned char 
  8537 ;;  number          4   42[BANK1 ] float 
  8538 ;;  multiplier      1   40[BANK1 ] unsigned char 
  8539 ;;  decimal_sepa    1   39[BANK1 ] _Bool 
  8540 ;; Return value:  Size  Location     Type
  8541 ;;                  4   35[BANK1 ] float 
  8542 ;; Registers used:
  8543 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  8544 ;; Tracked objects:
  8545 ;;		On entry : 0/0
  8546 ;;		On exit  : 0/0
  8547 ;;		Unchanged: 0/0
  8548 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8549 ;;      Params:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0
  8550 ;;      Locals:         0       0       8       0       0       0       0       0       0       0       0       0       
      +0       0
  8551 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8552 ;;      Totals:         0       0      12       0       0       0       0       0       0       0       0       0       
      +0       0
  8553 ;;Total ram usage:       12 bytes
  8554 ;; Hardware stack levels used: 1
  8555 ;; Hardware stack levels required when called: 9
  8556 ;; This function calls:
  8557 ;;		___fladd
  8558 ;;		___fldiv
  8559 ;;		___flmul
  8560 ;;		___xxtofl
  8561 ;; This function is called by:
  8562 ;;		_uartHandler
  8563 ;; This function uses a non-reentrant model
  8564 ;;
  8565                           
  8566     092D                     _str2float:	
  8567                           ;psect for function _str2float
  8568                           
  8569     092D                     l6438:	
  8570                           ;incstack = 0
  8571                           ; Regs used in _str2float: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  8572                           
  8573                           
  8574                           ;UART.c: 26:     float number = 0;
  8575     092D  3000               	movlw	0
  8576     092E  0021               	movlb	1	; select bank1
  8577     092F  00CD               	movwf	(str2float@number+3)^(0+128)
  8578     0930  3000               	movlw	0
  8579     0931  00CC               	movwf	(str2float@number+2)^(0+128)
  8580     0932  3000               	movlw	0
  8581     0933  00CB               	movwf	(str2float@number+1)^(0+128)
  8582     0934  3000               	movlw	0
  8583     0935  00CA               	movwf	str2float@number^(0+128)
  8584     0936                     l6440:
  8585                           
  8586                           ;UART.c: 27:     _Bool decimal_separator = 0;
  8587     0936  01C7               	clrf	str2float@decimal_separator^(0+128)
  8588     0937                     l6442:
  8589                           
  8590                           ;UART.c: 30:         char digit = *str++;
  8591     0937  0843               	movf	str2float@str^(0+128),w
  8592     0938  0086               	movwf	6
  8593     0939  3001               	movlw	1	; select bank2/3
  8594     093A  0087               	movwf	7
  8595     093B  0801               	movf	1,w
  8596     093C  00CE               	movwf	str2float@digit^(0+128)
  8597     093D                     l6444:
  8598     093D  3001               	movlw	1
  8599     093E  07C3               	addwf	str2float@str^(0+128),f
  8600     093F                     l6446:
  8601                           
  8602                           ;UART.c: 31:         if ('0' <= digit && digit <= '9') {
  8603     093F  3030               	movlw	48
  8604     0940  024E               	subwf	str2float@digit^(0+128),w
  8605     0941  1C03               	skipc
  8606     0942  2944               	goto	u7091
  8607     0943  2945               	goto	u7090
  8608     0944                     u7091:
  8609     0944  2994               	goto	l6454
  8610     0945                     u7090:
  8611     0945                     l6448:
  8612     0945  303A               	movlw	58
  8613     0946  024E               	subwf	str2float@digit^(0+128),w
  8614     0947  1803               	skipnc
  8615     0948  294A               	goto	u7101
  8616     0949  294B               	goto	u7100
  8617     094A                     u7101:
  8618     094A  2994               	goto	l6454
  8619     094B                     u7100:
  8620     094B                     l6450:
  8621                           
  8622                           ;UART.c: 32:             number *= 10;
  8623     094B  3041               	movlw	65
  8624     094C  00AC               	movwf	(___flmul@b+3)^(0+128)
  8625     094D  3020               	movlw	32
  8626     094E  00AB               	movwf	(___flmul@b+2)^(0+128)
  8627     094F  3000               	movlw	0
  8628     0950  00AA               	movwf	(___flmul@b+1)^(0+128)
  8629     0951  3000               	movlw	0
  8630     0952  00A9               	movwf	___flmul@b^(0+128)
  8631     0953  084D               	movf	(str2float@number+3)^(0+128),w
  8632     0954  00B0               	movwf	(___flmul@a+3)^(0+128)
  8633     0955  084C               	movf	(str2float@number+2)^(0+128),w
  8634     0956  00AF               	movwf	(___flmul@a+2)^(0+128)
  8635     0957  084B               	movf	(str2float@number+1)^(0+128),w
  8636     0958  00AE               	movwf	(___flmul@a+1)^(0+128)
  8637     0959  084A               	movf	str2float@number^(0+128),w
  8638     095A  00AD               	movwf	___flmul@a^(0+128)
  8639     095B  3180  20A9  3189   	fcall	___flmul
  8640     095E  0021               	movlb	1	; select bank1
  8641     095F  082C               	movf	(?___flmul+3)^(0+128),w
  8642     0960  00CD               	movwf	(str2float@number+3)^(0+128)
  8643     0961  082B               	movf	(?___flmul+2)^(0+128),w
  8644     0962  00CC               	movwf	(str2float@number+2)^(0+128)
  8645     0963  082A               	movf	(?___flmul+1)^(0+128),w
  8646     0964  00CB               	movwf	(str2float@number+1)^(0+128)
  8647     0965  0829               	movf	?___flmul^(0+128),w
  8648     0966  00CA               	movwf	str2float@number^(0+128)
  8649                           
  8650                           ;UART.c: 33:             number += digit - '0';
  8651     0967  084E               	movf	str2float@digit^(0+128),w
  8652     0968  3ED0               	addlw	208
  8653     0969  00A0               	movwf	___xxtofl@val^(0+128)
  8654     096A  30FF               	movlw	255
  8655     096B  1803               	skipnc
  8656     096C  3000               	movlw	0
  8657     096D  00A1               	movwf	(___xxtofl@val^(0+128)+1)
  8658     096E  01A2               	clrf	(___xxtofl@val+2)^(0+128)
  8659     096F  01A3               	clrf	(___xxtofl@val+3)^(0+128)
  8660     0970  3000               	movlw	0
  8661     0971  3188  2088  3189   	fcall	___xxtofl
  8662     0974  0021               	movlb	1	; select bank1
  8663     0975  0823               	movf	(?___xxtofl+3)^(0+128),w
  8664     0976  00B1               	movwf	(___fladd@b+3)^(0+128)
  8665     0977  0822               	movf	(?___xxtofl+2)^(0+128),w
  8666     0978  00B0               	movwf	(___fladd@b+2)^(0+128)
  8667     0979  0821               	movf	(?___xxtofl+1)^(0+128),w
  8668     097A  00AF               	movwf	(___fladd@b+1)^(0+128)
  8669     097B  0820               	movf	?___xxtofl^(0+128),w
  8670     097C  00AE               	movwf	___fladd@b^(0+128)
  8671     097D  084D               	movf	(str2float@number+3)^(0+128),w
  8672     097E  00B5               	movwf	(___fladd@a+3)^(0+128)
  8673     097F  084C               	movf	(str2float@number+2)^(0+128),w
  8674     0980  00B4               	movwf	(___fladd@a+2)^(0+128)
  8675     0981  084B               	movf	(str2float@number+1)^(0+128),w
  8676     0982  00B3               	movwf	(___fladd@a+1)^(0+128)
  8677     0983  084A               	movf	str2float@number^(0+128),w
  8678     0984  00B2               	movwf	___fladd@a^(0+128)
  8679     0985  3185  251F  3189   	fcall	___fladd
  8680     0988  0021               	movlb	1	; select bank1
  8681     0989  0831               	movf	(?___fladd+3)^(0+128),w
  8682     098A  00CD               	movwf	(str2float@number+3)^(0+128)
  8683     098B  0830               	movf	(?___fladd+2)^(0+128),w
  8684     098C  00CC               	movwf	(str2float@number+2)^(0+128)
  8685     098D  082F               	movf	(?___fladd+1)^(0+128),w
  8686     098E  00CB               	movwf	(str2float@number+1)^(0+128)
  8687     098F  082E               	movf	?___fladd^(0+128),w
  8688     0990  00CA               	movwf	str2float@number^(0+128)
  8689     0991                     l6452:
  8690                           
  8691                           ;UART.c: 34:             multiplier++;
  8692     0991  3001               	movlw	1
  8693     0992  07C8               	addwf	str2float@multiplier^(0+128),f
  8694                           
  8695                           ;UART.c: 35:         } else if (digit == ',' || digit == '.') {
  8696     0993  2937               	goto	l6442
  8697     0994                     l6454:
  8698     0994  302C               	movlw	44
  8699     0995  064E               	xorwf	str2float@digit^(0+128),w
  8700     0996  1903               	btfsc	3,2
  8701     0997  2999               	goto	u7111
  8702     0998  299A               	goto	u7110
  8703     0999                     u7111:
  8704     0999  29A0               	goto	l869
  8705     099A                     u7110:
  8706     099A                     l6456:
  8707     099A  302E               	movlw	46
  8708     099B  064E               	xorwf	str2float@digit^(0+128),w
  8709     099C  1D03               	btfss	3,2
  8710     099D  299F               	goto	u7121
  8711     099E  29A0               	goto	u7120
  8712     099F                     u7121:
  8713     099F  29A4               	goto	l6460
  8714     09A0                     u7120:
  8715     09A0                     l869:
  8716                           
  8717                           ;UART.c: 36:             decimal_separator = 1;
  8718     09A0  3001               	movlw	1
  8719     09A1  00C7               	movwf	str2float@decimal_separator^(0+128)
  8720     09A2                     l6458:
  8721                           
  8722                           ;UART.c: 37:             multiplier = 0;
  8723     09A2  01C8               	clrf	str2float@multiplier^(0+128)
  8724                           
  8725                           ;UART.c: 38:         } else {
  8726     09A3  2937               	goto	l6442
  8727     09A4                     l6460:
  8728                           
  8729                           ;UART.c: 43:     for (uint8_t i = 0; decimal_separator && i < multiplier; i++) {
  8730     09A4  01C9               	clrf	str2float@i^(0+128)
  8731     09A5  29C4               	goto	l6466
  8732     09A6                     l6462:
  8733                           
  8734                           ;UART.c: 44:         number /= 10;
  8735     09A6  3041               	movlw	65
  8736     09A7  00A3               	movwf	(___fldiv@a+3)^(0+128)
  8737     09A8  3020               	movlw	32
  8738     09A9  00A2               	movwf	(___fldiv@a+2)^(0+128)
  8739     09AA  3000               	movlw	0
  8740     09AB  00A1               	movwf	(___fldiv@a+1)^(0+128)
  8741     09AC  3000               	movlw	0
  8742     09AD  00A0               	movwf	___fldiv@a^(0+128)
  8743     09AE  084D               	movf	(str2float@number+3)^(0+128),w
  8744     09AF  00A7               	movwf	(___fldiv@b+3)^(0+128)
  8745     09B0  084C               	movf	(str2float@number+2)^(0+128),w
  8746     09B1  00A6               	movwf	(___fldiv@b+2)^(0+128)
  8747     09B2  084B               	movf	(str2float@number+1)^(0+128),w
  8748     09B3  00A5               	movwf	(___fldiv@b+1)^(0+128)
  8749     09B4  084A               	movf	str2float@number^(0+128),w
  8750     09B5  00A4               	movwf	___fldiv@b^(0+128)
  8751     09B6  318C  2450  3189   	fcall	___fldiv
  8752     09B9  0021               	movlb	1	; select bank1
  8753     09BA  0823               	movf	(?___fldiv+3)^(0+128),w
  8754     09BB  00CD               	movwf	(str2float@number+3)^(0+128)
  8755     09BC  0822               	movf	(?___fldiv+2)^(0+128),w
  8756     09BD  00CC               	movwf	(str2float@number+2)^(0+128)
  8757     09BE  0821               	movf	(?___fldiv+1)^(0+128),w
  8758     09BF  00CB               	movwf	(str2float@number+1)^(0+128)
  8759     09C0  0820               	movf	?___fldiv^(0+128),w
  8760     09C1  00CA               	movwf	str2float@number^(0+128)
  8761     09C2                     l6464:
  8762                           
  8763                           ;UART.c: 45:     }
  8764     09C2  3001               	movlw	1
  8765     09C3  07C9               	addwf	str2float@i^(0+128),f
  8766     09C4                     l6466:
  8767     09C4  0847               	movf	str2float@decimal_separator^(0+128),w
  8768     09C5  1903               	btfsc	3,2
  8769     09C6  29C8               	goto	u7131
  8770     09C7  29C9               	goto	u7130
  8771     09C8                     u7131:
  8772     09C8  29CF               	goto	l6470
  8773     09C9                     u7130:
  8774     09C9                     l6468:
  8775     09C9  0848               	movf	str2float@multiplier^(0+128),w
  8776     09CA  0249               	subwf	str2float@i^(0+128),w
  8777     09CB  1C03               	skipc
  8778     09CC  29CE               	goto	u7141
  8779     09CD  29CF               	goto	u7140
  8780     09CE                     u7141:
  8781     09CE  29A6               	goto	l6462
  8782     09CF                     u7140:
  8783     09CF                     l6470:
  8784                           
  8785                           ;UART.c: 46:     return number;
  8786     09CF  084D               	movf	(str2float@number+3)^(0+128),w
  8787     09D0  00C6               	movwf	(?_str2float+3)^(0+128)
  8788     09D1  084C               	movf	(str2float@number+2)^(0+128),w
  8789     09D2  00C5               	movwf	(?_str2float+2)^(0+128)
  8790     09D3  084B               	movf	(str2float@number+1)^(0+128),w
  8791     09D4  00C4               	movwf	(?_str2float+1)^(0+128)
  8792     09D5  084A               	movf	str2float@number^(0+128),w
  8793     09D6  00C3               	movwf	?_str2float^(0+128)
  8794     09D7                     l878:
  8795     09D7  0008               	return
  8796     09D8                     __end_of_str2float:
  8797                           
  8798                           	psect	text3
  8799     0888                     __ptext3:	
  8800 ;; *************** function ___xxtofl *****************
  8801 ;; Defined at:
  8802 ;;		line 10 in file "C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\xxtofl.c"
  8803 ;; Parameters:    Size  Location     Type
  8804 ;;  sign            1    wreg     unsigned char 
  8805 ;;  val             4    0[BANK1 ] long 
  8806 ;; Auto vars:     Size  Location     Type
  8807 ;;  sign            1    8[BANK1 ] unsigned char 
  8808 ;;  arg             4   10[BANK1 ] unsigned long 
  8809 ;;  exp             1    9[BANK1 ] unsigned char 
  8810 ;; Return value:  Size  Location     Type
  8811 ;;                  4    0[BANK1 ] unsigned char 
  8812 ;; Registers used:
  8813 ;;		wreg, status,2, status,0
  8814 ;; Tracked objects:
  8815 ;;		On entry : 0/0
  8816 ;;		On exit  : 0/0
  8817 ;;		Unchanged: 0/0
  8818 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8819 ;;      Params:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0
  8820 ;;      Locals:         0       0       6       0       0       0       0       0       0       0       0       0       
      +0       0
  8821 ;;      Temps:          0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0
  8822 ;;      Totals:         0       0      14       0       0       0       0       0       0       0       0       0       
      +0       0
  8823 ;;Total ram usage:       14 bytes
  8824 ;; Hardware stack levels used: 1
  8825 ;; Hardware stack levels required when called: 7
  8826 ;; This function calls:
  8827 ;;		Nothing
  8828 ;; This function is called by:
  8829 ;;		_str2float
  8830 ;;		_printFloat
  8831 ;;		_getLedNumber
  8832 ;; This function uses a non-reentrant model
  8833 ;;
  8834                           
  8835     0888                     ___xxtofl:	
  8836                           ;psect for function ___xxtofl
  8837                           
  8838                           
  8839                           ;incstack = 0
  8840                           ; Regs used in ___xxtofl: [wreg+status,2+status,0]
  8841                           ;___xxtofl@sign stored from wreg
  8842     0888  0021               	movlb	1	; select bank1
  8843     0889  00A8               	movwf	___xxtofl@sign^(0+128)
  8844     088A                     l5844:
  8845     088A  0828               	movf	___xxtofl@sign^(0+128),w
  8846     088B  1903               	btfsc	3,2
  8847     088C  288E               	goto	u6081
  8848     088D  288F               	goto	u6080
  8849     088E                     u6081:
  8850     088E  28A3               	goto	l5850
  8851     088F                     u6080:
  8852     088F                     l5846:
  8853     088F  1FA3               	btfss	(___xxtofl@val+3)^(0+128),7
  8854     0890  2892               	goto	u6091
  8855     0891  2893               	goto	u6090
  8856     0892                     u6091:
  8857     0892  28A3               	goto	l5850
  8858     0893                     u6090:
  8859     0893                     l5848:
  8860     0893  0920               	comf	___xxtofl@val^(0+128),w
  8861     0894  00AA               	movwf	___xxtofl@arg^(0+128)
  8862     0895  0921               	comf	(___xxtofl@val^(0+128)+1),w
  8863     0896  00AB               	movwf	(___xxtofl@arg+1)^(0+128)
  8864     0897  0922               	comf	(___xxtofl@val^(0+128)+2),w
  8865     0898  00AC               	movwf	(___xxtofl@arg+2)^(0+128)
  8866     0899  0923               	comf	(___xxtofl@val^(0+128)+3),w
  8867     089A  00AD               	movwf	(___xxtofl@arg+3)^(0+128)
  8868     089B  0AAA               	incf	___xxtofl@arg^(0+128),f
  8869     089C  1903               	skipnz
  8870     089D  0AAB               	incf	(___xxtofl@arg+1)^(0+128),f
  8871     089E  1903               	skipnz
  8872     089F  0AAC               	incf	(___xxtofl@arg+2)^(0+128),f
  8873     08A0  1903               	skipnz
  8874     08A1  0AAD               	incf	(___xxtofl@arg+3)^(0+128),f
  8875     08A2  28AB               	goto	l1879
  8876     08A3                     l5850:
  8877     08A3  0823               	movf	(___xxtofl@val+3)^(0+128),w
  8878     08A4  00AD               	movwf	(___xxtofl@arg+3)^(0+128)
  8879     08A5  0822               	movf	(___xxtofl@val+2)^(0+128),w
  8880     08A6  00AC               	movwf	(___xxtofl@arg+2)^(0+128)
  8881     08A7  0821               	movf	(___xxtofl@val+1)^(0+128),w
  8882     08A8  00AB               	movwf	(___xxtofl@arg+1)^(0+128)
  8883     08A9  0820               	movf	___xxtofl@val^(0+128),w
  8884     08AA  00AA               	movwf	___xxtofl@arg^(0+128)
  8885     08AB                     l1879:
  8886     08AB  0823               	movf	(___xxtofl@val+3)^(0+128),w
  8887     08AC  0422               	iorwf	(___xxtofl@val+2)^(0+128),w
  8888     08AD  0421               	iorwf	(___xxtofl@val+1)^(0+128),w
  8889     08AE  0420               	iorwf	___xxtofl@val^(0+128),w
  8890     08AF  1D03               	skipz
  8891     08B0  28B2               	goto	u6101
  8892     08B1  28B3               	goto	u6100
  8893     08B2                     u6101:
  8894     08B2  28BC               	goto	l1880
  8895     08B3                     u6100:
  8896     08B3                     l5852:
  8897     08B3  3000               	movlw	0
  8898     08B4  00A3               	movwf	(?___xxtofl+3)^(0+128)
  8899     08B5  3000               	movlw	0
  8900     08B6  00A2               	movwf	(?___xxtofl+2)^(0+128)
  8901     08B7  3000               	movlw	0
  8902     08B8  00A1               	movwf	(?___xxtofl+1)^(0+128)
  8903     08B9  3000               	movlw	0
  8904     08BA  00A0               	movwf	?___xxtofl^(0+128)
  8905     08BB  292C               	goto	l1881
  8906     08BC                     l1880:
  8907     08BC  3096               	movlw	150
  8908     08BD  00A9               	movwf	___xxtofl@exp^(0+128)
  8909     08BE  28C8               	goto	l5858
  8910     08BF                     l5856:
  8911     08BF  3001               	movlw	1
  8912     08C0  07A9               	addwf	___xxtofl@exp^(0+128),f
  8913     08C1  3001               	movlw	1
  8914     08C2                     u6115:
  8915     08C2  36AD               	lsrf	(___xxtofl@arg+3)^(0+128),f
  8916     08C3  0CAC               	rrf	(___xxtofl@arg+2)^(0+128),f
  8917     08C4  0CAB               	rrf	(___xxtofl@arg+1)^(0+128),f
  8918     08C5  0CAA               	rrf	___xxtofl@arg^(0+128),f
  8919     08C6  0B89               	decfsz	9,f
  8920     08C7  28C2               	goto	u6115
  8921     08C8                     l5858:
  8922     08C8  30FE               	movlw	254
  8923     08C9  052D               	andwf	(___xxtofl@arg+3)^(0+128),w
  8924     08CA  1D03               	btfss	3,2
  8925     08CB  28CD               	goto	u6121
  8926     08CC  28CE               	goto	u6120
  8927     08CD                     u6121:
  8928     08CD  28BF               	goto	l5856
  8929     08CE                     u6120:
  8930     08CE  28DE               	goto	l5862
  8931     08CF                     l5860:
  8932     08CF  3001               	movlw	1
  8933     08D0  07A9               	addwf	___xxtofl@exp^(0+128),f
  8934     08D1  3001               	movlw	1
  8935     08D2  07AA               	addwf	___xxtofl@arg^(0+128),f
  8936     08D3  3000               	movlw	0
  8937     08D4  3DAB               	addwfc	(___xxtofl@arg+1)^(0+128),f
  8938     08D5  3DAC               	addwfc	(___xxtofl@arg+2)^(0+128),f
  8939     08D6  3DAD               	addwfc	(___xxtofl@arg+3)^(0+128),f
  8940     08D7  3001               	movlw	1
  8941     08D8                     u6135:
  8942     08D8  36AD               	lsrf	(___xxtofl@arg+3)^(0+128),f
  8943     08D9  0CAC               	rrf	(___xxtofl@arg+2)^(0+128),f
  8944     08DA  0CAB               	rrf	(___xxtofl@arg+1)^(0+128),f
  8945     08DB  0CAA               	rrf	___xxtofl@arg^(0+128),f
  8946     08DC  0B89               	decfsz	9,f
  8947     08DD  28D8               	goto	u6135
  8948     08DE                     l5862:
  8949     08DE  30FF               	movlw	255
  8950     08DF  052D               	andwf	(___xxtofl@arg+3)^(0+128),w
  8951     08E0  1D03               	btfss	3,2
  8952     08E1  28E3               	goto	u6141
  8953     08E2  28E4               	goto	u6140
  8954     08E3                     u6141:
  8955     08E3  28CF               	goto	l5860
  8956     08E4                     u6140:
  8957     08E4  28EE               	goto	l5866
  8958     08E5                     l5864:
  8959     08E5  3001               	movlw	1
  8960     08E6  02A9               	subwf	___xxtofl@exp^(0+128),f
  8961     08E7  3001               	movlw	1
  8962     08E8                     u6155:
  8963     08E8  35AA               	lslf	___xxtofl@arg^(0+128),f
  8964     08E9  0DAB               	rlf	(___xxtofl@arg+1)^(0+128),f
  8965     08EA  0DAC               	rlf	(___xxtofl@arg+2)^(0+128),f
  8966     08EB  0DAD               	rlf	(___xxtofl@arg+3)^(0+128),f
  8967     08EC  0B89               	decfsz	9,f
  8968     08ED  28E8               	goto	u6155
  8969     08EE                     l5866:
  8970     08EE  1BAC               	btfsc	(___xxtofl@arg+2)^(0+128),7
  8971     08EF  28F1               	goto	u6161
  8972     08F0  28F2               	goto	u6160
  8973     08F1                     u6161:
  8974     08F1  28F8               	goto	l1892
  8975     08F2                     u6160:
  8976     08F2                     l5868:
  8977     08F2  3002               	movlw	2
  8978     08F3  0229               	subwf	___xxtofl@exp^(0+128),w
  8979     08F4  1803               	skipnc
  8980     08F5  28F7               	goto	u6171
  8981     08F6  28F8               	goto	u6170
  8982     08F7                     u6171:
  8983     08F7  28E5               	goto	l5864
  8984     08F8                     u6170:
  8985     08F8                     l1892:
  8986     08F8  1829               	btfsc	___xxtofl@exp^(0+128),0
  8987     08F9  28FB               	goto	u6181
  8988     08FA  28FC               	goto	u6180
  8989     08FB                     u6181:
  8990     08FB  2904               	goto	l1893
  8991     08FC                     u6180:
  8992     08FC                     l5870:
  8993     08FC  30FF               	movlw	255
  8994     08FD  05AA               	andwf	___xxtofl@arg^(0+128),f
  8995     08FE  30FF               	movlw	255
  8996     08FF  05AB               	andwf	(___xxtofl@arg+1)^(0+128),f
  8997     0900  307F               	movlw	127
  8998     0901  05AC               	andwf	(___xxtofl@arg+2)^(0+128),f
  8999     0902  30FF               	movlw	255
  9000     0903  05AD               	andwf	(___xxtofl@arg+3)^(0+128),f
  9001     0904                     l1893:
  9002     0904  1003               	clrc
  9003     0905  0CA9               	rrf	___xxtofl@exp^(0+128),f
  9004     0906                     l5872:
  9005     0906  0829               	movf	___xxtofl@exp^(0+128),w
  9006     0907  00A4               	movwf	??___xxtofl^(0+128)
  9007     0908  01A5               	clrf	(??___xxtofl^(0+128)+1)
  9008     0909  01A6               	clrf	(??___xxtofl^(0+128)+2)
  9009     090A  01A7               	clrf	(??___xxtofl^(0+128)+3)
  9010     090B  3018               	movlw	24
  9011     090C                     u6195:
  9012     090C  35A4               	lslf	??___xxtofl^(0+128),f
  9013     090D  0DA5               	rlf	(??___xxtofl^(0+128)+1),f
  9014     090E  0DA6               	rlf	(??___xxtofl^(0+128)+2),f
  9015     090F  0DA7               	rlf	(??___xxtofl^(0+128)+3),f
  9016     0910                     u6190:
  9017     0910  0B89               	decfsz	9,f
  9018     0911  290C               	goto	u6195
  9019     0912  0824               	movf	??___xxtofl^(0+128),w
  9020     0913  04AA               	iorwf	___xxtofl@arg^(0+128),f
  9021     0914  0825               	movf	(??___xxtofl+1)^(0+128),w
  9022     0915  04AB               	iorwf	(___xxtofl@arg+1)^(0+128),f
  9023     0916  0826               	movf	(??___xxtofl+2)^(0+128),w
  9024     0917  04AC               	iorwf	(___xxtofl@arg+2)^(0+128),f
  9025     0918  0827               	movf	(??___xxtofl+3)^(0+128),w
  9026     0919  04AD               	iorwf	(___xxtofl@arg+3)^(0+128),f
  9027     091A                     l5874:
  9028     091A  0828               	movf	___xxtofl@sign^(0+128),w
  9029     091B  1903               	btfsc	3,2
  9030     091C  291E               	goto	u6201
  9031     091D  291F               	goto	u6200
  9032     091E                     u6201:
  9033     091E  2924               	goto	l5880
  9034     091F                     u6200:
  9035     091F                     l5876:
  9036     091F  1FA3               	btfss	(___xxtofl@val+3)^(0+128),7
  9037     0920  2922               	goto	u6211
  9038     0921  2923               	goto	u6210
  9039     0922                     u6211:
  9040     0922  2924               	goto	l5880
  9041     0923                     u6210:
  9042     0923                     l5878:
  9043     0923  17AD               	bsf	(___xxtofl@arg^(0+128)+3),7
  9044     0924                     l5880:
  9045     0924  082D               	movf	(___xxtofl@arg+3)^(0+128),w
  9046     0925  00A3               	movwf	(?___xxtofl+3)^(0+128)
  9047     0926  082C               	movf	(___xxtofl@arg+2)^(0+128),w
  9048     0927  00A2               	movwf	(?___xxtofl+2)^(0+128)
  9049     0928  082B               	movf	(___xxtofl@arg+1)^(0+128),w
  9050     0929  00A1               	movwf	(?___xxtofl+1)^(0+128)
  9051     092A  082A               	movf	___xxtofl@arg^(0+128),w
  9052     092B  00A0               	movwf	?___xxtofl^(0+128)
  9053     092C                     l1881:
  9054     092C  0008               	return
  9055     092D                     __end_of___xxtofl:
  9056                           
  9057                           	psect	text4
  9058     00A9                     __ptext4:	
  9059 ;; *************** function ___flmul *****************
  9060 ;; Defined at:
  9061 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\sprcmul.c"
  9062 ;; Parameters:    Size  Location     Type
  9063 ;;  b               4    9[BANK1 ] unsigned char 
  9064 ;;  a               4   13[BANK1 ] unsigned char 
  9065 ;; Auto vars:     Size  Location     Type
  9066 ;;  prod            4   29[BANK1 ] struct .
  9067 ;;  grs             4   23[BANK1 ] unsigned long 
  9068 ;;  temp            2   33[BANK1 ] struct .
  9069 ;;  bexp            1   28[BANK1 ] unsigned char 
  9070 ;;  aexp            1   27[BANK1 ] unsigned char 
  9071 ;;  sign            1   22[BANK1 ] unsigned char 
  9072 ;; Return value:  Size  Location     Type
  9073 ;;                  4    9[BANK1 ] unsigned char 
  9074 ;; Registers used:
  9075 ;;		wreg, status,2, status,0, pclath, cstack
  9076 ;; Tracked objects:
  9077 ;;		On entry : 0/0
  9078 ;;		On exit  : 0/0
  9079 ;;		Unchanged: 0/0
  9080 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9081 ;;      Params:         0       0       8       0       0       0       0       0       0       0       0       0       
      +0       0
  9082 ;;      Locals:         0       0      13       0       0       0       0       0       0       0       0       0       
      +0       0
  9083 ;;      Temps:          0       0       5       0       0       0       0       0       0       0       0       0       
      +0       0
  9084 ;;      Totals:         0       0      26       0       0       0       0       0       0       0       0       0       
      +0       0
  9085 ;;Total ram usage:       26 bytes
  9086 ;; Hardware stack levels used: 1
  9087 ;; Hardware stack levels required when called: 8
  9088 ;; This function calls:
  9089 ;;		__Umul8_16
  9090 ;; This function is called by:
  9091 ;;		_str2float
  9092 ;;		_printFloat
  9093 ;;		_getLedNumber
  9094 ;; This function uses a non-reentrant model
  9095 ;;
  9096                           
  9097     00A9                     ___flmul:	
  9098                           ;psect for function ___flmul
  9099                           
  9100     00A9                     l5704:	
  9101                           ;incstack = 0
  9102                           ; Regs used in ___flmul: [wreg+status,2+status,0+pclath+cstack]
  9103                           
  9104     00A9  0021               	movlb	1	; select bank1
  9105     00AA  082C               	movf	(___flmul@b^(0+128)+3),w
  9106     00AB  3980               	andlw	128
  9107     00AC  00B6               	movwf	___flmul@sign^(0+128)
  9108     00AD                     l5706:
  9109     00AD  352C               	lslf	(___flmul@b^(0+128)+3),w
  9110     00AE  00BC               	movwf	___flmul@bexp^(0+128)
  9111     00AF                     l5708:
  9112     00AF  1FAB               	btfss	(___flmul@b^(0+128)+2),7
  9113     00B0  28B2               	goto	u5811
  9114     00B1  28B3               	goto	u5810
  9115     00B2                     u5811:
  9116     00B2  28B4               	goto	l5712
  9117     00B3                     u5810:
  9118     00B3                     l5710:
  9119     00B3  143C               	bsf	___flmul@bexp^(0+128),0
  9120     00B4                     l5712:
  9121     00B4  083C               	movf	___flmul@bexp^(0+128),w
  9122     00B5  1903               	btfsc	3,2
  9123     00B6  28B8               	goto	u5821
  9124     00B7  28B9               	goto	u5820
  9125     00B8                     u5821:
  9126     00B8  28C8               	goto	l5720
  9127     00B9                     u5820:
  9128     00B9                     l5714:
  9129     00B9  0A3C               	incf	___flmul@bexp^(0+128),w
  9130     00BA  1D03               	btfss	3,2
  9131     00BB  28BD               	goto	u5831
  9132     00BC  28BE               	goto	u5830
  9133     00BD                     u5831:
  9134     00BD  28C6               	goto	l5718
  9135     00BE                     u5830:
  9136     00BE                     l5716:
  9137     00BE  3000               	movlw	0
  9138     00BF  00AC               	movwf	(___flmul@b+3)^(0+128)
  9139     00C0  3000               	movlw	0
  9140     00C1  00AB               	movwf	(___flmul@b+2)^(0+128)
  9141     00C2  3000               	movlw	0
  9142     00C3  00AA               	movwf	(___flmul@b+1)^(0+128)
  9143     00C4  3000               	movlw	0
  9144     00C5  00A9               	movwf	___flmul@b^(0+128)
  9145     00C6                     l5718:
  9146     00C6  17AB               	bsf	(___flmul@b^(0+128)+2),7
  9147     00C7  28D0               	goto	l5722
  9148     00C8                     l5720:
  9149     00C8  3000               	movlw	0
  9150     00C9  00AC               	movwf	(___flmul@b+3)^(0+128)
  9151     00CA  3000               	movlw	0
  9152     00CB  00AB               	movwf	(___flmul@b+2)^(0+128)
  9153     00CC  3000               	movlw	0
  9154     00CD  00AA               	movwf	(___flmul@b+1)^(0+128)
  9155     00CE  3000               	movlw	0
  9156     00CF  00A9               	movwf	___flmul@b^(0+128)
  9157     00D0                     l5722:
  9158     00D0  0830               	movf	(___flmul@a^(0+128)+3),w
  9159     00D1  3980               	andlw	128
  9160     00D2  06B6               	xorwf	___flmul@sign^(0+128),f
  9161     00D3                     l5724:
  9162     00D3  3530               	lslf	(___flmul@a^(0+128)+3),w
  9163     00D4  00BB               	movwf	___flmul@aexp^(0+128)
  9164     00D5                     l5726:
  9165     00D5  1FAF               	btfss	(___flmul@a^(0+128)+2),7
  9166     00D6  28D8               	goto	u5841
  9167     00D7  28D9               	goto	u5840
  9168     00D8                     u5841:
  9169     00D8  28DA               	goto	l5730
  9170     00D9                     u5840:
  9171     00D9                     l5728:
  9172     00D9  143B               	bsf	___flmul@aexp^(0+128),0
  9173     00DA                     l5730:
  9174     00DA  083B               	movf	___flmul@aexp^(0+128),w
  9175     00DB  1903               	btfsc	3,2
  9176     00DC  28DE               	goto	u5851
  9177     00DD  28DF               	goto	u5850
  9178     00DE                     u5851:
  9179     00DE  28EE               	goto	l5738
  9180     00DF                     u5850:
  9181     00DF                     l5732:
  9182     00DF  0A3B               	incf	___flmul@aexp^(0+128),w
  9183     00E0  1D03               	btfss	3,2
  9184     00E1  28E3               	goto	u5861
  9185     00E2  28E4               	goto	u5860
  9186     00E3                     u5861:
  9187     00E3  28EC               	goto	l5736
  9188     00E4                     u5860:
  9189     00E4                     l5734:
  9190     00E4  3000               	movlw	0
  9191     00E5  00B0               	movwf	(___flmul@a+3)^(0+128)
  9192     00E6  3000               	movlw	0
  9193     00E7  00AF               	movwf	(___flmul@a+2)^(0+128)
  9194     00E8  3000               	movlw	0
  9195     00E9  00AE               	movwf	(___flmul@a+1)^(0+128)
  9196     00EA  3000               	movlw	0
  9197     00EB  00AD               	movwf	___flmul@a^(0+128)
  9198     00EC                     l5736:
  9199     00EC  17AF               	bsf	(___flmul@a^(0+128)+2),7
  9200     00ED  28F6               	goto	l5740
  9201     00EE                     l5738:
  9202     00EE  3000               	movlw	0
  9203     00EF  00B0               	movwf	(___flmul@a+3)^(0+128)
  9204     00F0  3000               	movlw	0
  9205     00F1  00AF               	movwf	(___flmul@a+2)^(0+128)
  9206     00F2  3000               	movlw	0
  9207     00F3  00AE               	movwf	(___flmul@a+1)^(0+128)
  9208     00F4  3000               	movlw	0
  9209     00F5  00AD               	movwf	___flmul@a^(0+128)
  9210     00F6                     l5740:
  9211     00F6  083B               	movf	___flmul@aexp^(0+128),w
  9212     00F7  1903               	btfsc	3,2
  9213     00F8  28FA               	goto	u5871
  9214     00F9  28FB               	goto	u5870
  9215     00FA                     u5871:
  9216     00FA  2900               	goto	l5744
  9217     00FB                     u5870:
  9218     00FB                     l5742:
  9219     00FB  083C               	movf	___flmul@bexp^(0+128),w
  9220     00FC  1D03               	btfss	3,2
  9221     00FD  28FF               	goto	u5881
  9222     00FE  2900               	goto	u5880
  9223     00FF                     u5881:
  9224     00FF  2909               	goto	l5748
  9225     0100                     u5880:
  9226     0100                     l5744:
  9227     0100  3000               	movlw	0
  9228     0101  00AC               	movwf	(?___flmul+3)^(0+128)
  9229     0102  3000               	movlw	0
  9230     0103  00AB               	movwf	(?___flmul+2)^(0+128)
  9231     0104  3000               	movlw	0
  9232     0105  00AA               	movwf	(?___flmul+1)^(0+128)
  9233     0106  3000               	movlw	0
  9234     0107  00A9               	movwf	?___flmul^(0+128)
  9235     0108  2AE3               	goto	l1835
  9236     0109                     l5748:
  9237     0109  0829               	movf	___flmul@b^(0+128),w
  9238     010A  00A0               	movwf	__Umul8_16@multiplicand^(0+128)
  9239     010B  082F               	movf	(___flmul@a^(0+128)+2),w
  9240     010C  3191  2100  3180   	fcall	__Umul8_16
  9241     010F  0021               	movlb	1	; select bank1
  9242     0110  0821               	movf	(?__Umul8_16+1)^(0+128),w
  9243     0111  00C2               	movwf	(___flmul@temp+1)^(0+128)
  9244     0112  0820               	movf	?__Umul8_16^(0+128),w
  9245     0113  00C1               	movwf	___flmul@temp^(0+128)
  9246     0114                     l5750:
  9247     0114  0841               	movf	___flmul@temp^(0+128),w
  9248     0115  00B1               	movwf	??___flmul^(0+128)
  9249     0116  01B2               	clrf	(??___flmul^(0+128)+1)
  9250     0117  01B3               	clrf	(??___flmul^(0+128)+2)
  9251     0118  01B4               	clrf	(??___flmul^(0+128)+3)
  9252     0119  0834               	movf	(??___flmul+3)^(0+128),w
  9253     011A  00BA               	movwf	(___flmul@grs+3)^(0+128)
  9254     011B  0833               	movf	(??___flmul+2)^(0+128),w
  9255     011C  00B9               	movwf	(___flmul@grs+2)^(0+128)
  9256     011D  0832               	movf	(??___flmul+1)^(0+128),w
  9257     011E  00B8               	movwf	(___flmul@grs+1)^(0+128)
  9258     011F  0831               	movf	??___flmul^(0+128),w
  9259     0120  00B7               	movwf	___flmul@grs^(0+128)
  9260     0121                     l5752:
  9261     0121  0842               	movf	(___flmul@temp^(0+128)+1),w
  9262     0122  00B1               	movwf	??___flmul^(0+128)
  9263     0123  01B2               	clrf	(??___flmul^(0+128)+1)
  9264     0124  01B3               	clrf	(??___flmul^(0+128)+2)
  9265     0125  01B4               	clrf	(??___flmul^(0+128)+3)
  9266     0126  0834               	movf	(??___flmul+3)^(0+128),w
  9267     0127  00C0               	movwf	(___flmul@prod+3)^(0+128)
  9268     0128  0833               	movf	(??___flmul+2)^(0+128),w
  9269     0129  00BF               	movwf	(___flmul@prod+2)^(0+128)
  9270     012A  0832               	movf	(??___flmul+1)^(0+128),w
  9271     012B  00BE               	movwf	(___flmul@prod+1)^(0+128)
  9272     012C  0831               	movf	??___flmul^(0+128),w
  9273     012D  00BD               	movwf	___flmul@prod^(0+128)
  9274     012E  082A               	movf	(___flmul@b^(0+128)+1),w
  9275     012F  00A0               	movwf	__Umul8_16@multiplicand^(0+128)
  9276     0130  082E               	movf	(___flmul@a^(0+128)+1),w
  9277     0131  3191  2100  3180   	fcall	__Umul8_16
  9278     0134  0021               	movlb	1	; select bank1
  9279     0135  0821               	movf	(?__Umul8_16+1)^(0+128),w
  9280     0136  00C2               	movwf	(___flmul@temp+1)^(0+128)
  9281     0137  0820               	movf	?__Umul8_16^(0+128),w
  9282     0138  00C1               	movwf	___flmul@temp^(0+128)
  9283     0139                     l5754:
  9284     0139  0841               	movf	___flmul@temp^(0+128),w
  9285     013A  00B1               	movwf	??___flmul^(0+128)
  9286     013B  01B2               	clrf	(??___flmul^(0+128)+1)
  9287     013C  01B3               	clrf	(??___flmul^(0+128)+2)
  9288     013D  01B4               	clrf	(??___flmul^(0+128)+3)
  9289     013E  0831               	movf	??___flmul^(0+128),w
  9290     013F  07B7               	addwf	___flmul@grs^(0+128),f
  9291     0140  0832               	movf	(??___flmul+1)^(0+128),w
  9292     0141  3DB8               	addwfc	(___flmul@grs+1)^(0+128),f
  9293     0142  0833               	movf	(??___flmul+2)^(0+128),w
  9294     0143  3DB9               	addwfc	(___flmul@grs+2)^(0+128),f
  9295     0144  0834               	movf	(??___flmul+3)^(0+128),w
  9296     0145  3DBA               	addwfc	(___flmul@grs+3)^(0+128),f
  9297     0146                     l5756:
  9298     0146  0842               	movf	(___flmul@temp^(0+128)+1),w
  9299     0147  00B1               	movwf	??___flmul^(0+128)
  9300     0148  01B2               	clrf	(??___flmul^(0+128)+1)
  9301     0149  01B3               	clrf	(??___flmul^(0+128)+2)
  9302     014A  01B4               	clrf	(??___flmul^(0+128)+3)
  9303     014B  0831               	movf	??___flmul^(0+128),w
  9304     014C  07BD               	addwf	___flmul@prod^(0+128),f
  9305     014D  0832               	movf	(??___flmul+1)^(0+128),w
  9306     014E  3DBE               	addwfc	(___flmul@prod+1)^(0+128),f
  9307     014F  0833               	movf	(??___flmul+2)^(0+128),w
  9308     0150  3DBF               	addwfc	(___flmul@prod+2)^(0+128),f
  9309     0151  0834               	movf	(??___flmul+3)^(0+128),w
  9310     0152  3DC0               	addwfc	(___flmul@prod+3)^(0+128),f
  9311     0153  082B               	movf	(___flmul@b^(0+128)+2),w
  9312     0154  00A0               	movwf	__Umul8_16@multiplicand^(0+128)
  9313     0155  082D               	movf	___flmul@a^(0+128),w
  9314     0156  3191  2100  3180   	fcall	__Umul8_16
  9315     0159  0021               	movlb	1	; select bank1
  9316     015A  0821               	movf	(?__Umul8_16+1)^(0+128),w
  9317     015B  00C2               	movwf	(___flmul@temp+1)^(0+128)
  9318     015C  0820               	movf	?__Umul8_16^(0+128),w
  9319     015D  00C1               	movwf	___flmul@temp^(0+128)
  9320     015E                     l5758:
  9321     015E  0841               	movf	___flmul@temp^(0+128),w
  9322     015F  00B1               	movwf	??___flmul^(0+128)
  9323     0160  01B2               	clrf	(??___flmul^(0+128)+1)
  9324     0161  01B3               	clrf	(??___flmul^(0+128)+2)
  9325     0162  01B4               	clrf	(??___flmul^(0+128)+3)
  9326     0163  0831               	movf	??___flmul^(0+128),w
  9327     0164  07B7               	addwf	___flmul@grs^(0+128),f
  9328     0165  0832               	movf	(??___flmul+1)^(0+128),w
  9329     0166  3DB8               	addwfc	(___flmul@grs+1)^(0+128),f
  9330     0167  0833               	movf	(??___flmul+2)^(0+128),w
  9331     0168  3DB9               	addwfc	(___flmul@grs+2)^(0+128),f
  9332     0169  0834               	movf	(??___flmul+3)^(0+128),w
  9333     016A  3DBA               	addwfc	(___flmul@grs+3)^(0+128),f
  9334     016B                     l5760:
  9335     016B  0842               	movf	(___flmul@temp^(0+128)+1),w
  9336     016C  00B1               	movwf	??___flmul^(0+128)
  9337     016D  01B2               	clrf	(??___flmul^(0+128)+1)
  9338     016E  01B3               	clrf	(??___flmul^(0+128)+2)
  9339     016F  01B4               	clrf	(??___flmul^(0+128)+3)
  9340     0170  0831               	movf	??___flmul^(0+128),w
  9341     0171  07BD               	addwf	___flmul@prod^(0+128),f
  9342     0172  0832               	movf	(??___flmul+1)^(0+128),w
  9343     0173  3DBE               	addwfc	(___flmul@prod+1)^(0+128),f
  9344     0174  0833               	movf	(??___flmul+2)^(0+128),w
  9345     0175  3DBF               	addwfc	(___flmul@prod+2)^(0+128),f
  9346     0176  0834               	movf	(??___flmul+3)^(0+128),w
  9347     0177  3DC0               	addwfc	(___flmul@prod+3)^(0+128),f
  9348     0178                     l5762:
  9349     0178  3008               	movlw	8
  9350     0179                     u5895:
  9351     0179  35B7               	lslf	___flmul@grs^(0+128),f
  9352     017A  0DB8               	rlf	(___flmul@grs+1)^(0+128),f
  9353     017B  0DB9               	rlf	(___flmul@grs+2)^(0+128),f
  9354     017C  0DBA               	rlf	(___flmul@grs+3)^(0+128),f
  9355     017D  0B89               	decfsz	9,f
  9356     017E  2979               	goto	u5895
  9357     017F                     l5764:
  9358     017F  082A               	movf	(___flmul@b^(0+128)+1),w
  9359     0180  00A0               	movwf	__Umul8_16@multiplicand^(0+128)
  9360     0181  082D               	movf	___flmul@a^(0+128),w
  9361     0182  3191  2100  3180   	fcall	__Umul8_16
  9362     0185  0021               	movlb	1	; select bank1
  9363     0186  0821               	movf	(?__Umul8_16+1)^(0+128),w
  9364     0187  00C2               	movwf	(___flmul@temp+1)^(0+128)
  9365     0188  0820               	movf	?__Umul8_16^(0+128),w
  9366     0189  00C1               	movwf	___flmul@temp^(0+128)
  9367     018A                     l5766:
  9368     018A  0841               	movf	___flmul@temp^(0+128),w
  9369     018B  07B7               	addwf	___flmul@grs^(0+128),f
  9370     018C  0842               	movf	(___flmul@temp+1)^(0+128),w
  9371     018D  3DB8               	addwfc	(___flmul@grs+1)^(0+128),f
  9372     018E  3000               	movlw	0
  9373     018F  3DB9               	addwfc	(___flmul@grs+2)^(0+128),f
  9374     0190  3DBA               	addwfc	(___flmul@grs+3)^(0+128),f
  9375     0191                     l5768:
  9376     0191  0829               	movf	___flmul@b^(0+128),w
  9377     0192  00A0               	movwf	__Umul8_16@multiplicand^(0+128)
  9378     0193  082E               	movf	(___flmul@a^(0+128)+1),w
  9379     0194  3191  2100  3180   	fcall	__Umul8_16
  9380     0197  0021               	movlb	1	; select bank1
  9381     0198  0821               	movf	(?__Umul8_16+1)^(0+128),w
  9382     0199  00C2               	movwf	(___flmul@temp+1)^(0+128)
  9383     019A  0820               	movf	?__Umul8_16^(0+128),w
  9384     019B  00C1               	movwf	___flmul@temp^(0+128)
  9385     019C                     l5770:
  9386     019C  0841               	movf	___flmul@temp^(0+128),w
  9387     019D  07B7               	addwf	___flmul@grs^(0+128),f
  9388     019E  0842               	movf	(___flmul@temp+1)^(0+128),w
  9389     019F  3DB8               	addwfc	(___flmul@grs+1)^(0+128),f
  9390     01A0  3000               	movlw	0
  9391     01A1  3DB9               	addwfc	(___flmul@grs+2)^(0+128),f
  9392     01A2  3DBA               	addwfc	(___flmul@grs+3)^(0+128),f
  9393     01A3                     l5772:
  9394     01A3  3008               	movlw	8
  9395     01A4                     u5905:
  9396     01A4  35B7               	lslf	___flmul@grs^(0+128),f
  9397     01A5  0DB8               	rlf	(___flmul@grs+1)^(0+128),f
  9398     01A6  0DB9               	rlf	(___flmul@grs+2)^(0+128),f
  9399     01A7  0DBA               	rlf	(___flmul@grs+3)^(0+128),f
  9400     01A8  0B89               	decfsz	9,f
  9401     01A9  29A4               	goto	u5905
  9402     01AA  0829               	movf	___flmul@b^(0+128),w
  9403     01AB  00A0               	movwf	__Umul8_16@multiplicand^(0+128)
  9404     01AC  082D               	movf	___flmul@a^(0+128),w
  9405     01AD  3191  2100  3180   	fcall	__Umul8_16
  9406     01B0  0021               	movlb	1	; select bank1
  9407     01B1  0821               	movf	(?__Umul8_16+1)^(0+128),w
  9408     01B2  00C2               	movwf	(___flmul@temp+1)^(0+128)
  9409     01B3  0820               	movf	?__Umul8_16^(0+128),w
  9410     01B4  00C1               	movwf	___flmul@temp^(0+128)
  9411     01B5                     l5774:
  9412     01B5  0841               	movf	___flmul@temp^(0+128),w
  9413     01B6  07B7               	addwf	___flmul@grs^(0+128),f
  9414     01B7  0842               	movf	(___flmul@temp+1)^(0+128),w
  9415     01B8  3DB8               	addwfc	(___flmul@grs+1)^(0+128),f
  9416     01B9  3000               	movlw	0
  9417     01BA  3DB9               	addwfc	(___flmul@grs+2)^(0+128),f
  9418     01BB  3DBA               	addwfc	(___flmul@grs+3)^(0+128),f
  9419     01BC                     l5776:
  9420     01BC  082A               	movf	(___flmul@b^(0+128)+1),w
  9421     01BD  00A0               	movwf	__Umul8_16@multiplicand^(0+128)
  9422     01BE  082F               	movf	(___flmul@a^(0+128)+2),w
  9423     01BF  3191  2100  3180   	fcall	__Umul8_16
  9424     01C2  0021               	movlb	1	; select bank1
  9425     01C3  0821               	movf	(?__Umul8_16+1)^(0+128),w
  9426     01C4  00C2               	movwf	(___flmul@temp+1)^(0+128)
  9427     01C5  0820               	movf	?__Umul8_16^(0+128),w
  9428     01C6  00C1               	movwf	___flmul@temp^(0+128)
  9429     01C7  0841               	movf	___flmul@temp^(0+128),w
  9430     01C8  07BD               	addwf	___flmul@prod^(0+128),f
  9431     01C9  0842               	movf	(___flmul@temp+1)^(0+128),w
  9432     01CA  3DBE               	addwfc	(___flmul@prod+1)^(0+128),f
  9433     01CB  3000               	movlw	0
  9434     01CC  3DBF               	addwfc	(___flmul@prod+2)^(0+128),f
  9435     01CD  3DC0               	addwfc	(___flmul@prod+3)^(0+128),f
  9436     01CE                     l5778:
  9437     01CE  082B               	movf	(___flmul@b^(0+128)+2),w
  9438     01CF  00A0               	movwf	__Umul8_16@multiplicand^(0+128)
  9439     01D0  082E               	movf	(___flmul@a^(0+128)+1),w
  9440     01D1  3191  2100  3180   	fcall	__Umul8_16
  9441     01D4  0021               	movlb	1	; select bank1
  9442     01D5  0821               	movf	(?__Umul8_16+1)^(0+128),w
  9443     01D6  00C2               	movwf	(___flmul@temp+1)^(0+128)
  9444     01D7  0820               	movf	?__Umul8_16^(0+128),w
  9445     01D8  00C1               	movwf	___flmul@temp^(0+128)
  9446     01D9                     l5780:
  9447     01D9  0841               	movf	___flmul@temp^(0+128),w
  9448     01DA  07BD               	addwf	___flmul@prod^(0+128),f
  9449     01DB  0842               	movf	(___flmul@temp+1)^(0+128),w
  9450     01DC  3DBE               	addwfc	(___flmul@prod+1)^(0+128),f
  9451     01DD  3000               	movlw	0
  9452     01DE  3DBF               	addwfc	(___flmul@prod+2)^(0+128),f
  9453     01DF  3DC0               	addwfc	(___flmul@prod+3)^(0+128),f
  9454     01E0  082B               	movf	(___flmul@b^(0+128)+2),w
  9455     01E1  00A0               	movwf	__Umul8_16@multiplicand^(0+128)
  9456     01E2  082F               	movf	(___flmul@a^(0+128)+2),w
  9457     01E3  3191  2100  3180   	fcall	__Umul8_16
  9458     01E6  0021               	movlb	1	; select bank1
  9459     01E7  0821               	movf	(?__Umul8_16+1)^(0+128),w
  9460     01E8  00C2               	movwf	(___flmul@temp+1)^(0+128)
  9461     01E9  0820               	movf	?__Umul8_16^(0+128),w
  9462     01EA  00C1               	movwf	___flmul@temp^(0+128)
  9463     01EB                     l5782:
  9464     01EB  0841               	movf	___flmul@temp^(0+128),w
  9465     01EC  00B1               	movwf	??___flmul^(0+128)
  9466     01ED  0842               	movf	(___flmul@temp+1)^(0+128),w
  9467     01EE  00B2               	movwf	(??___flmul^(0+128)+1)
  9468     01EF  01B3               	clrf	(??___flmul^(0+128)+2)
  9469     01F0  01B4               	clrf	(??___flmul^(0+128)+3)
  9470     01F1  3008               	movlw	8
  9471     01F2                     u5915:
  9472     01F2  35B1               	lslf	??___flmul^(0+128),f
  9473     01F3  0DB2               	rlf	(??___flmul^(0+128)+1),f
  9474     01F4  0DB3               	rlf	(??___flmul^(0+128)+2),f
  9475     01F5  0DB4               	rlf	(??___flmul^(0+128)+3),f
  9476     01F6                     u5910:
  9477     01F6  0B89               	decfsz	9,f
  9478     01F7  29F2               	goto	u5915
  9479     01F8  0831               	movf	??___flmul^(0+128),w
  9480     01F9  07BD               	addwf	___flmul@prod^(0+128),f
  9481     01FA  0832               	movf	(??___flmul+1)^(0+128),w
  9482     01FB  3DBE               	addwfc	(___flmul@prod+1)^(0+128),f
  9483     01FC  0833               	movf	(??___flmul+2)^(0+128),w
  9484     01FD  3DBF               	addwfc	(___flmul@prod+2)^(0+128),f
  9485     01FE  0834               	movf	(??___flmul+3)^(0+128),w
  9486     01FF  3DC0               	addwfc	(___flmul@prod+3)^(0+128),f
  9487     0200                     l5784:
  9488     0200  0837               	movf	___flmul@grs^(0+128),w
  9489     0201  00B1               	movwf	??___flmul^(0+128)
  9490     0202  0838               	movf	(___flmul@grs+1)^(0+128),w
  9491     0203  00B2               	movwf	(??___flmul^(0+128)+1)
  9492     0204  0839               	movf	(___flmul@grs+2)^(0+128),w
  9493     0205  00B3               	movwf	(??___flmul^(0+128)+2)
  9494     0206  083A               	movf	(___flmul@grs+3)^(0+128),w
  9495     0207  00B4               	movwf	(??___flmul^(0+128)+3)
  9496     0208  3018               	movlw	24
  9497     0209                     u5925:
  9498     0209  36B4               	lsrf	(??___flmul^(0+128)+3),f
  9499     020A  0CB3               	rrf	(??___flmul^(0+128)+2),f
  9500     020B  0CB2               	rrf	(??___flmul^(0+128)+1),f
  9501     020C  0CB1               	rrf	??___flmul^(0+128),f
  9502     020D                     u5920:
  9503     020D  0B89               	decfsz	9,f
  9504     020E  2A09               	goto	u5925
  9505     020F  0831               	movf	??___flmul^(0+128),w
  9506     0210  07BD               	addwf	___flmul@prod^(0+128),f
  9507     0211  0832               	movf	(??___flmul+1)^(0+128),w
  9508     0212  3DBE               	addwfc	(___flmul@prod+1)^(0+128),f
  9509     0213  0833               	movf	(??___flmul+2)^(0+128),w
  9510     0214  3DBF               	addwfc	(___flmul@prod+2)^(0+128),f
  9511     0215  0834               	movf	(??___flmul+3)^(0+128),w
  9512     0216  3DC0               	addwfc	(___flmul@prod+3)^(0+128),f
  9513     0217                     l5786:
  9514     0217  3008               	movlw	8
  9515     0218                     u5935:
  9516     0218  35B7               	lslf	___flmul@grs^(0+128),f
  9517     0219  0DB8               	rlf	(___flmul@grs+1)^(0+128),f
  9518     021A  0DB9               	rlf	(___flmul@grs+2)^(0+128),f
  9519     021B  0DBA               	rlf	(___flmul@grs+3)^(0+128),f
  9520     021C  0B89               	decfsz	9,f
  9521     021D  2A18               	goto	u5935
  9522     021E                     l5788:
  9523     021E  083C               	movf	___flmul@bexp^(0+128),w
  9524     021F  073B               	addwf	___flmul@aexp^(0+128),w
  9525     0220  00B1               	movwf	??___flmul^(0+128)
  9526     0221  01B2               	clrf	(??___flmul^(0+128)+1)
  9527     0222  0DB2               	rlf	(??___flmul+1)^(0+128),f
  9528     0223  0831               	movf	??___flmul^(0+128),w
  9529     0224  3E82               	addlw	130
  9530     0225  00C1               	movwf	___flmul@temp^(0+128)
  9531     0226  30FF               	movlw	255
  9532     0227  3D32               	addwfc	(??___flmul+1)^(0+128),w
  9533     0228  00C2               	movwf	(___flmul@temp+1)^(0+128)
  9534     0229  2A41               	goto	l5800
  9535     022A                     l5790:
  9536     022A  3001               	movlw	1
  9537     022B                     u5945:
  9538     022B  35BD               	lslf	___flmul@prod^(0+128),f
  9539     022C  0DBE               	rlf	(___flmul@prod+1)^(0+128),f
  9540     022D  0DBF               	rlf	(___flmul@prod+2)^(0+128),f
  9541     022E  0DC0               	rlf	(___flmul@prod+3)^(0+128),f
  9542     022F  0B89               	decfsz	9,f
  9543     0230  2A2B               	goto	u5945
  9544     0231                     l5792:
  9545     0231  1FBA               	btfss	(___flmul@grs+3)^(0+128),7
  9546     0232  2A34               	goto	u5951
  9547     0233  2A35               	goto	u5950
  9548     0234                     u5951:
  9549     0234  2A36               	goto	l5796
  9550     0235                     u5950:
  9551     0235                     l5794:
  9552     0235  143D               	bsf	___flmul@prod^(0+128),0
  9553     0236                     l5796:
  9554     0236  3001               	movlw	1
  9555     0237                     u5965:
  9556     0237  35B7               	lslf	___flmul@grs^(0+128),f
  9557     0238  0DB8               	rlf	(___flmul@grs+1)^(0+128),f
  9558     0239  0DB9               	rlf	(___flmul@grs+2)^(0+128),f
  9559     023A  0DBA               	rlf	(___flmul@grs+3)^(0+128),f
  9560     023B  0B89               	decfsz	9,f
  9561     023C  2A37               	goto	u5965
  9562     023D                     l5798:
  9563     023D  30FF               	movlw	255
  9564     023E  07C1               	addwf	___flmul@temp^(0+128),f
  9565     023F  30FF               	movlw	255
  9566     0240  3DC2               	addwfc	(___flmul@temp+1)^(0+128),f
  9567     0241                     l5800:
  9568     0241  1FBF               	btfss	(___flmul@prod+2)^(0+128),7
  9569     0242  2A44               	goto	u5971
  9570     0243  2A45               	goto	u5970
  9571     0244                     u5971:
  9572     0244  2A2A               	goto	l5790
  9573     0245                     u5970:
  9574     0245                     l5802:
  9575     0245  01BB               	clrf	___flmul@aexp^(0+128)
  9576     0246                     l5804:
  9577     0246  1FBA               	btfss	(___flmul@grs+3)^(0+128),7
  9578     0247  2A49               	goto	u5981
  9579     0248  2A4A               	goto	u5980
  9580     0249                     u5981:
  9581     0249  2A66               	goto	l5812
  9582     024A                     u5980:
  9583     024A                     l5806:
  9584     024A  30FF               	movlw	255
  9585     024B  0537               	andwf	___flmul@grs^(0+128),w
  9586     024C  00B1               	movwf	??___flmul^(0+128)
  9587     024D  30FF               	movlw	255
  9588     024E  0538               	andwf	(___flmul@grs+1)^(0+128),w
  9589     024F  00B2               	movwf	(??___flmul^(0+128)+1)
  9590     0250  30FF               	movlw	255
  9591     0251  0539               	andwf	(___flmul@grs+2)^(0+128),w
  9592     0252  00B3               	movwf	(??___flmul^(0+128)+2)
  9593     0253  307F               	movlw	127
  9594     0254  053A               	andwf	(___flmul@grs+3)^(0+128),w
  9595     0255  00B4               	movwf	(??___flmul^(0+128)+3)
  9596     0256  0834               	movf	(??___flmul+3)^(0+128),w
  9597     0257  0433               	iorwf	(??___flmul+2)^(0+128),w
  9598     0258  0432               	iorwf	(??___flmul+1)^(0+128),w
  9599     0259  0431               	iorwf	??___flmul^(0+128),w
  9600     025A  1903               	skipnz
  9601     025B  2A5D               	goto	u5991
  9602     025C  2A5E               	goto	u5990
  9603     025D                     u5991:
  9604     025D  2A61               	goto	l1841
  9605     025E                     u5990:
  9606     025E                     l5808:
  9607     025E  3001               	movlw	1
  9608     025F  00BB               	movwf	___flmul@aexp^(0+128)
  9609     0260  2A66               	goto	l5812
  9610     0261                     l1841:
  9611     0261  1C3D               	btfss	___flmul@prod^(0+128),0
  9612     0262  2A64               	goto	u6001
  9613     0263  2A65               	goto	u6000
  9614     0264                     u6001:
  9615     0264  2A66               	goto	l5812
  9616     0265                     u6000:
  9617     0265  2A5E               	goto	l5808
  9618     0266                     l5812:
  9619     0266  083B               	movf	___flmul@aexp^(0+128),w
  9620     0267  1903               	btfsc	3,2
  9621     0268  2A6A               	goto	u6011
  9622     0269  2A6B               	goto	u6010
  9623     026A                     u6011:
  9624     026A  2A91               	goto	l5822
  9625     026B                     u6010:
  9626     026B                     l5814:
  9627     026B  3001               	movlw	1
  9628     026C  07BD               	addwf	___flmul@prod^(0+128),f
  9629     026D  3000               	movlw	0
  9630     026E  3DBE               	addwfc	(___flmul@prod+1)^(0+128),f
  9631     026F  3DBF               	addwfc	(___flmul@prod+2)^(0+128),f
  9632     0270  3DC0               	addwfc	(___flmul@prod+3)^(0+128),f
  9633     0271                     l5816:
  9634     0271  1C40               	btfss	(___flmul@prod+3)^(0+128),0
  9635     0272  2A74               	goto	u6021
  9636     0273  2A75               	goto	u6020
  9637     0274                     u6021:
  9638     0274  2A91               	goto	l5822
  9639     0275                     u6020:
  9640     0275                     l5818:
  9641     0275  083D               	movf	___flmul@prod^(0+128),w
  9642     0276  00B1               	movwf	??___flmul^(0+128)
  9643     0277  083E               	movf	(___flmul@prod+1)^(0+128),w
  9644     0278  00B2               	movwf	(??___flmul^(0+128)+1)
  9645     0279  083F               	movf	(___flmul@prod+2)^(0+128),w
  9646     027A  00B3               	movwf	(??___flmul^(0+128)+2)
  9647     027B  0840               	movf	(___flmul@prod+3)^(0+128),w
  9648     027C  00B4               	movwf	(??___flmul^(0+128)+3)
  9649     027D  3001               	movlw	1
  9650     027E  00B5               	movwf	(??___flmul+4)^(0+128)
  9651     027F                     u6035:
  9652     027F  37B4               	asrf	(??___flmul^(0+128)+3),f
  9653     0280  0CB3               	rrf	(??___flmul^(0+128)+2),f
  9654     0281  0CB2               	rrf	(??___flmul^(0+128)+1),f
  9655     0282  0CB1               	rrf	??___flmul^(0+128),f
  9656     0283                     u6030:
  9657     0283  0BB5               	decfsz	(??___flmul+4)^(0+128),f
  9658     0284  2A7F               	goto	u6035
  9659     0285  0834               	movf	(??___flmul+3)^(0+128),w
  9660     0286  00C0               	movwf	(___flmul@prod+3)^(0+128)
  9661     0287  0833               	movf	(??___flmul+2)^(0+128),w
  9662     0288  00BF               	movwf	(___flmul@prod+2)^(0+128)
  9663     0289  0832               	movf	(??___flmul+1)^(0+128),w
  9664     028A  00BE               	movwf	(___flmul@prod+1)^(0+128)
  9665     028B  0831               	movf	??___flmul^(0+128),w
  9666     028C  00BD               	movwf	___flmul@prod^(0+128)
  9667     028D                     l5820:
  9668     028D  3001               	movlw	1
  9669     028E  07C1               	addwf	___flmul@temp^(0+128),f
  9670     028F  3000               	movlw	0
  9671     0290  3DC2               	addwfc	(___flmul@temp+1)^(0+128),f
  9672     0291                     l5822:
  9673     0291  0842               	movf	(___flmul@temp+1)^(0+128),w
  9674     0292  3A80               	xorlw	128
  9675     0293  00B1               	movwf	??___flmul^(0+128)
  9676     0294  3080               	movlw	128
  9677     0295  0231               	subwf	??___flmul^(0+128),w
  9678     0296  1D03               	skipz
  9679     0297  2A9A               	goto	u6045
  9680     0298  30FF               	movlw	255
  9681     0299  0241               	subwf	___flmul@temp^(0+128),w
  9682     029A                     u6045:
  9683     029A  1C03               	skipc
  9684     029B  2A9D               	goto	u6041
  9685     029C  2A9E               	goto	u6040
  9686     029D                     u6041:
  9687     029D  2AA8               	goto	l5826
  9688     029E                     u6040:
  9689     029E                     l5824:
  9690     029E  307F               	movlw	127
  9691     029F  0021               	movlb	1	; select bank1
  9692     02A0  00C0               	movwf	(___flmul@prod+3)^(0+128)
  9693     02A1  3080               	movlw	128
  9694     02A2  00BF               	movwf	(___flmul@prod+2)^(0+128)
  9695     02A3  3000               	movlw	0
  9696     02A4  00BE               	movwf	(___flmul@prod+1)^(0+128)
  9697     02A5  3000               	movlw	0
  9698     02A6  00BD               	movwf	___flmul@prod^(0+128)
  9699     02A7  2AD9               	goto	l1847
  9700     02A8                     l5826:
  9701     02A8  0021               	movlb	1	; select bank1
  9702     02A9  0842               	movf	(___flmul@temp+1)^(0+128),w
  9703     02AA  3A80               	xorlw	128
  9704     02AB  00B1               	movwf	??___flmul^(0+128)
  9705     02AC  3080               	movlw	128
  9706     02AD  0231               	subwf	??___flmul^(0+128),w
  9707     02AE  1D03               	skipz
  9708     02AF  2AB2               	goto	u6055
  9709     02B0  3001               	movlw	1
  9710     02B1  0241               	subwf	___flmul@temp^(0+128),w
  9711     02B2                     u6055:
  9712     02B2  1803               	skipnc
  9713     02B3  2AB5               	goto	u6051
  9714     02B4  2AB6               	goto	u6050
  9715     02B5                     u6051:
  9716     02B5  2AC1               	goto	l5832
  9717     02B6                     u6050:
  9718     02B6                     l5828:
  9719     02B6  3000               	movlw	0
  9720     02B7  0021               	movlb	1	; select bank1
  9721     02B8  00C0               	movwf	(___flmul@prod+3)^(0+128)
  9722     02B9  3000               	movlw	0
  9723     02BA  00BF               	movwf	(___flmul@prod+2)^(0+128)
  9724     02BB  3000               	movlw	0
  9725     02BC  00BE               	movwf	(___flmul@prod+1)^(0+128)
  9726     02BD  3000               	movlw	0
  9727     02BE  00BD               	movwf	___flmul@prod^(0+128)
  9728     02BF                     l5830:
  9729     02BF  01B6               	clrf	___flmul@sign^(0+128)
  9730     02C0  2AD9               	goto	l1847
  9731     02C1                     l5832:
  9732     02C1  0021               	movlb	1	; select bank1
  9733     02C2  0841               	movf	___flmul@temp^(0+128),w
  9734     02C3  00BC               	movwf	___flmul@bexp^(0+128)
  9735     02C4  30FF               	movlw	255
  9736     02C5  05BD               	andwf	___flmul@prod^(0+128),f
  9737     02C6  30FF               	movlw	255
  9738     02C7  05BE               	andwf	(___flmul@prod+1)^(0+128),f
  9739     02C8  307F               	movlw	127
  9740     02C9  05BF               	andwf	(___flmul@prod+2)^(0+128),f
  9741     02CA  3000               	movlw	0
  9742     02CB  05C0               	andwf	(___flmul@prod+3)^(0+128),f
  9743     02CC                     l5834:
  9744     02CC  1C3C               	btfss	___flmul@bexp^(0+128),0
  9745     02CD  2ACF               	goto	u6061
  9746     02CE  2AD0               	goto	u6060
  9747     02CF                     u6061:
  9748     02CF  2AD1               	goto	l5838
  9749     02D0                     u6060:
  9750     02D0                     l5836:
  9751     02D0  17BF               	bsf	(___flmul@prod^(0+128)+2),7
  9752     02D1                     l5838:
  9753     02D1  083C               	movf	___flmul@bexp^(0+128),w
  9754     02D2  00B1               	movwf	??___flmul^(0+128)
  9755     02D3  3001               	movlw	1
  9756     02D4                     u6075:
  9757     02D4  36B1               	lsrf	??___flmul^(0+128),f
  9758     02D5  0B89               	decfsz	9,f
  9759     02D6  2AD4               	goto	u6075
  9760     02D7  0831               	movf	??___flmul^(0+128),w
  9761     02D8  00C0               	movwf	(___flmul@prod^(0+128)+3)
  9762     02D9                     l1847:
  9763     02D9  0836               	movf	___flmul@sign^(0+128),w
  9764     02DA  04C0               	iorwf	(___flmul@prod^(0+128)+3),f
  9765     02DB                     l5840:
  9766     02DB  0840               	movf	(___flmul@prod+3)^(0+128),w
  9767     02DC  00AC               	movwf	(?___flmul+3)^(0+128)
  9768     02DD  083F               	movf	(___flmul@prod+2)^(0+128),w
  9769     02DE  00AB               	movwf	(?___flmul+2)^(0+128)
  9770     02DF  083E               	movf	(___flmul@prod+1)^(0+128),w
  9771     02E0  00AA               	movwf	(?___flmul+1)^(0+128)
  9772     02E1  083D               	movf	___flmul@prod^(0+128),w
  9773     02E2  00A9               	movwf	?___flmul^(0+128)
  9774     02E3                     l1835:
  9775     02E3  0008               	return
  9776     02E4                     __end_of___flmul:
  9777                           
  9778                           	psect	text5
  9779     1100                     __ptext5:	
  9780 ;; *************** function __Umul8_16 *****************
  9781 ;; Defined at:
  9782 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\Umul8_16.c"
  9783 ;; Parameters:    Size  Location     Type
  9784 ;;  multiplier      1    wreg     unsigned char 
  9785 ;;  multiplicand    1    0[BANK1 ] unsigned char 
  9786 ;; Auto vars:     Size  Location     Type
  9787 ;;  multiplier      1    8[BANK1 ] unsigned char 
  9788 ;;  word_mpld       2    6[BANK1 ] unsigned short 
  9789 ;;  product         2    4[BANK1 ] unsigned short 
  9790 ;; Return value:  Size  Location     Type
  9791 ;;                  2    0[BANK1 ] unsigned int 
  9792 ;; Registers used:
  9793 ;;		wreg, status,2, status,0
  9794 ;; Tracked objects:
  9795 ;;		On entry : 0/0
  9796 ;;		On exit  : 0/0
  9797 ;;		Unchanged: 0/0
  9798 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9799 ;;      Params:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0
  9800 ;;      Locals:         0       0       5       0       0       0       0       0       0       0       0       0       
      +0       0
  9801 ;;      Temps:          0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0
  9802 ;;      Totals:         0       0       9       0       0       0       0       0       0       0       0       0       
      +0       0
  9803 ;;Total ram usage:        9 bytes
  9804 ;; Hardware stack levels used: 1
  9805 ;; Hardware stack levels required when called: 7
  9806 ;; This function calls:
  9807 ;;		Nothing
  9808 ;; This function is called by:
  9809 ;;		___flmul
  9810 ;; This function uses a non-reentrant model
  9811 ;;
  9812                           
  9813     1100                     __Umul8_16:	
  9814                           ;psect for function __Umul8_16
  9815                           
  9816                           
  9817                           ;incstack = 0
  9818                           ; Regs used in __Umul8_16: [wreg+status,2+status,0]
  9819                           ;__Umul8_16@multiplier stored from wreg
  9820     1100  0021               	movlb	1	; select bank1
  9821     1101  00A8               	movwf	__Umul8_16@multiplier^(0+128)
  9822     1102                     l5134:
  9823     1102  01A4               	clrf	__Umul8_16@product^(0+128)
  9824     1103  01A5               	clrf	(__Umul8_16@product+1)^(0+128)
  9825     1104                     l5136:
  9826     1104  0820               	movf	__Umul8_16@multiplicand^(0+128),w
  9827     1105  00A2               	movwf	??__Umul8_16^(0+128)
  9828     1106  01A3               	clrf	(??__Umul8_16^(0+128)+1)
  9829     1107  0822               	movf	??__Umul8_16^(0+128),w
  9830     1108  00A6               	movwf	__Umul8_16@word_mpld^(0+128)
  9831     1109  0823               	movf	(??__Umul8_16+1)^(0+128),w
  9832     110A  00A7               	movwf	(__Umul8_16@word_mpld+1)^(0+128)
  9833     110B                     l5138:
  9834     110B  1C28               	btfss	__Umul8_16@multiplier^(0+128),0
  9835     110C  290E               	goto	u4761
  9836     110D  290F               	goto	u4760
  9837     110E                     u4761:
  9838     110E  2913               	goto	l1854
  9839     110F                     u4760:
  9840     110F                     l5140:
  9841     110F  0826               	movf	__Umul8_16@word_mpld^(0+128),w
  9842     1110  07A4               	addwf	__Umul8_16@product^(0+128),f
  9843     1111  0827               	movf	(__Umul8_16@word_mpld+1)^(0+128),w
  9844     1112  3DA5               	addwfc	(__Umul8_16@product+1)^(0+128),f
  9845     1113                     l1854:
  9846     1113  3001               	movlw	1
  9847     1114                     u4775:
  9848     1114  35A6               	lslf	__Umul8_16@word_mpld^(0+128),f
  9849     1115  0DA7               	rlf	(__Umul8_16@word_mpld+1)^(0+128),f
  9850     1116  0B89               	decfsz	9,f
  9851     1117  2914               	goto	u4775
  9852     1118  1003               	clrc
  9853     1119  0CA8               	rrf	__Umul8_16@multiplier^(0+128),f
  9854     111A                     l5142:
  9855     111A  0828               	movf	__Umul8_16@multiplier^(0+128),w
  9856     111B  1D03               	btfss	3,2
  9857     111C  291E               	goto	u4781
  9858     111D  291F               	goto	u4780
  9859     111E                     u4781:
  9860     111E  290B               	goto	l5138
  9861     111F                     u4780:
  9862     111F                     l5144:
  9863     111F  0825               	movf	(__Umul8_16@product+1)^(0+128),w
  9864     1120  00A1               	movwf	(?__Umul8_16+1)^(0+128)
  9865     1121  0824               	movf	__Umul8_16@product^(0+128),w
  9866     1122  00A0               	movwf	?__Umul8_16^(0+128)
  9867     1123                     l1856:
  9868     1123  0008               	return
  9869     1124                     __end_of__Umul8_16:
  9870                           
  9871                           	psect	text6
  9872     0C50                     __ptext6:	
  9873 ;; *************** function ___fldiv *****************
  9874 ;; Defined at:
  9875 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\sprcdiv.c"
  9876 ;; Parameters:    Size  Location     Type
  9877 ;;  a               4    0[BANK1 ] unsigned int 
  9878 ;;  b               4    4[BANK1 ] unsigned int 
  9879 ;; Auto vars:     Size  Location     Type
  9880 ;;  grs             4   20[BANK1 ] unsigned long 
  9881 ;;  rem             4   13[BANK1 ] unsigned long 
  9882 ;;  new_exp         2   18[BANK1 ] short 
  9883 ;;  aexp            1   25[BANK1 ] unsigned char 
  9884 ;;  bexp            1   24[BANK1 ] unsigned char 
  9885 ;;  sign            1   17[BANK1 ] unsigned char 
  9886 ;; Return value:  Size  Location     Type
  9887 ;;                  4    0[BANK1 ] unsigned char 
  9888 ;; Registers used:
  9889 ;;		wreg, status,2, status,0
  9890 ;; Tracked objects:
  9891 ;;		On entry : 0/0
  9892 ;;		On exit  : 0/0
  9893 ;;		Unchanged: 0/0
  9894 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9895 ;;      Params:         0       0       8       0       0       0       0       0       0       0       0       0       
      +0       0
  9896 ;;      Locals:         0       0      13       0       0       0       0       0       0       0       0       0       
      +0       0
  9897 ;;      Temps:          0       0       5       0       0       0       0       0       0       0       0       0       
      +0       0
  9898 ;;      Totals:         0       0      26       0       0       0       0       0       0       0       0       0       
      +0       0
  9899 ;;Total ram usage:       26 bytes
  9900 ;; Hardware stack levels used: 1
  9901 ;; Hardware stack levels required when called: 7
  9902 ;; This function calls:
  9903 ;;		Nothing
  9904 ;; This function is called by:
  9905 ;;		_str2float
  9906 ;; This function uses a non-reentrant model
  9907 ;;
  9908                           
  9909     0C50                     ___fldiv:	
  9910                           ;psect for function ___fldiv
  9911                           
  9912     0C50                     l5564:	
  9913                           ;incstack = 0
  9914                           ; Regs used in ___fldiv: [wreg+status,2+status,0]
  9915                           
  9916     0C50  0021               	movlb	1	; select bank1
  9917     0C51  0827               	movf	(___fldiv@b^(0+128)+3),w
  9918     0C52  3980               	andlw	128
  9919     0C53  00B1               	movwf	___fldiv@sign^(0+128)
  9920     0C54                     l5566:
  9921     0C54  3527               	lslf	(___fldiv@b^(0+128)+3),w
  9922     0C55  00B8               	movwf	___fldiv@bexp^(0+128)
  9923     0C56                     l5568:
  9924     0C56  1FA6               	btfss	(___fldiv@b^(0+128)+2),7
  9925     0C57  2C59               	goto	u5511
  9926     0C58  2C5A               	goto	u5510
  9927     0C59                     u5511:
  9928     0C59  2C5B               	goto	l5572
  9929     0C5A                     u5510:
  9930     0C5A                     l5570:
  9931     0C5A  1438               	bsf	___fldiv@bexp^(0+128),0
  9932     0C5B                     l5572:
  9933     0C5B  0838               	movf	___fldiv@bexp^(0+128),w
  9934     0C5C  1903               	btfsc	3,2
  9935     0C5D  2C5F               	goto	u5521
  9936     0C5E  2C60               	goto	u5520
  9937     0C5F                     u5521:
  9938     0C5F  2C70               	goto	l5582
  9939     0C60                     u5520:
  9940     0C60                     l5574:
  9941     0C60  0A38               	incf	___fldiv@bexp^(0+128),w
  9942     0C61  1D03               	btfss	3,2
  9943     0C62  2C64               	goto	u5531
  9944     0C63  2C65               	goto	u5530
  9945     0C64                     u5531:
  9946     0C64  2C6D               	goto	l5578
  9947     0C65                     u5530:
  9948     0C65                     l5576:
  9949     0C65  3000               	movlw	0
  9950     0C66  00A7               	movwf	(___fldiv@b+3)^(0+128)
  9951     0C67  3000               	movlw	0
  9952     0C68  00A6               	movwf	(___fldiv@b+2)^(0+128)
  9953     0C69  3000               	movlw	0
  9954     0C6A  00A5               	movwf	(___fldiv@b+1)^(0+128)
  9955     0C6B  3000               	movlw	0
  9956     0C6C  00A4               	movwf	___fldiv@b^(0+128)
  9957     0C6D                     l5578:
  9958     0C6D  17A6               	bsf	(___fldiv@b^(0+128)+2),7
  9959     0C6E                     l5580:
  9960     0C6E  01A7               	clrf	(___fldiv@b^(0+128)+3)
  9961     0C6F  2C78               	goto	l5584
  9962     0C70                     l5582:
  9963     0C70  3000               	movlw	0
  9964     0C71  00A7               	movwf	(___fldiv@b+3)^(0+128)
  9965     0C72  3000               	movlw	0
  9966     0C73  00A6               	movwf	(___fldiv@b+2)^(0+128)
  9967     0C74  3000               	movlw	0
  9968     0C75  00A5               	movwf	(___fldiv@b+1)^(0+128)
  9969     0C76  3000               	movlw	0
  9970     0C77  00A4               	movwf	___fldiv@b^(0+128)
  9971     0C78                     l5584:
  9972     0C78  0823               	movf	(___fldiv@a^(0+128)+3),w
  9973     0C79  3980               	andlw	128
  9974     0C7A  06B1               	xorwf	___fldiv@sign^(0+128),f
  9975     0C7B                     l5586:
  9976     0C7B  3523               	lslf	(___fldiv@a^(0+128)+3),w
  9977     0C7C  00B9               	movwf	___fldiv@aexp^(0+128)
  9978     0C7D                     l5588:
  9979     0C7D  1FA2               	btfss	(___fldiv@a^(0+128)+2),7
  9980     0C7E  2C80               	goto	u5541
  9981     0C7F  2C81               	goto	u5540
  9982     0C80                     u5541:
  9983     0C80  2C82               	goto	l5592
  9984     0C81                     u5540:
  9985     0C81                     l5590:
  9986     0C81  1439               	bsf	___fldiv@aexp^(0+128),0
  9987     0C82                     l5592:
  9988     0C82  0839               	movf	___fldiv@aexp^(0+128),w
  9989     0C83  1903               	btfsc	3,2
  9990     0C84  2C86               	goto	u5551
  9991     0C85  2C87               	goto	u5550
  9992     0C86                     u5551:
  9993     0C86  2C97               	goto	l5602
  9994     0C87                     u5550:
  9995     0C87                     l5594:
  9996     0C87  0A39               	incf	___fldiv@aexp^(0+128),w
  9997     0C88  1D03               	btfss	3,2
  9998     0C89  2C8B               	goto	u5561
  9999     0C8A  2C8C               	goto	u5560
 10000     0C8B                     u5561:
 10001     0C8B  2C94               	goto	l5598
 10002     0C8C                     u5560:
 10003     0C8C                     l5596:
 10004     0C8C  3000               	movlw	0
 10005     0C8D  00A3               	movwf	(___fldiv@a+3)^(0+128)
 10006     0C8E  3000               	movlw	0
 10007     0C8F  00A2               	movwf	(___fldiv@a+2)^(0+128)
 10008     0C90  3000               	movlw	0
 10009     0C91  00A1               	movwf	(___fldiv@a+1)^(0+128)
 10010     0C92  3000               	movlw	0
 10011     0C93  00A0               	movwf	___fldiv@a^(0+128)
 10012     0C94                     l5598:
 10013     0C94  17A2               	bsf	(___fldiv@a^(0+128)+2),7
 10014     0C95                     l5600:
 10015     0C95  01A3               	clrf	(___fldiv@a^(0+128)+3)
 10016     0C96  2C9F               	goto	l1795
 10017     0C97                     l5602:
 10018     0C97  3000               	movlw	0
 10019     0C98  00A3               	movwf	(___fldiv@a+3)^(0+128)
 10020     0C99  3000               	movlw	0
 10021     0C9A  00A2               	movwf	(___fldiv@a+2)^(0+128)
 10022     0C9B  3000               	movlw	0
 10023     0C9C  00A1               	movwf	(___fldiv@a+1)^(0+128)
 10024     0C9D  3000               	movlw	0
 10025     0C9E  00A0               	movwf	___fldiv@a^(0+128)
 10026     0C9F                     l1795:
 10027     0C9F  0823               	movf	(___fldiv@a+3)^(0+128),w
 10028     0CA0  0422               	iorwf	(___fldiv@a+2)^(0+128),w
 10029     0CA1  0421               	iorwf	(___fldiv@a+1)^(0+128),w
 10030     0CA2  0420               	iorwf	___fldiv@a^(0+128),w
 10031     0CA3  1D03               	skipz
 10032     0CA4  2CA6               	goto	u5571
 10033     0CA5  2CA7               	goto	u5570
 10034     0CA6                     u5571:
 10035     0CA6  2CBE               	goto	l5612
 10036     0CA7                     u5570:
 10037     0CA7                     l5604:
 10038     0CA7  3000               	movlw	0
 10039     0CA8  00A7               	movwf	(___fldiv@b+3)^(0+128)
 10040     0CA9  3000               	movlw	0
 10041     0CAA  00A6               	movwf	(___fldiv@b+2)^(0+128)
 10042     0CAB  3000               	movlw	0
 10043     0CAC  00A5               	movwf	(___fldiv@b+1)^(0+128)
 10044     0CAD  3000               	movlw	0
 10045     0CAE  00A4               	movwf	___fldiv@b^(0+128)
 10046     0CAF  3080               	movlw	128
 10047     0CB0  04A6               	iorwf	(___fldiv@b^(0+128)+2),f
 10048     0CB1  307F               	movlw	127
 10049     0CB2  04A7               	iorwf	((___fldiv@b+1)^(0+128)+2),f
 10050     0CB3                     l5606:
 10051     0CB3  0831               	movf	___fldiv@sign^(0+128),w
 10052     0CB4  04A7               	iorwf	(___fldiv@b^(0+128)+3),f
 10053     0CB5                     l5608:
 10054     0CB5  0827               	movf	(___fldiv@b+3)^(0+128),w
 10055     0CB6  00A3               	movwf	(?___fldiv+3)^(0+128)
 10056     0CB7  0826               	movf	(___fldiv@b+2)^(0+128),w
 10057     0CB8  00A2               	movwf	(?___fldiv+2)^(0+128)
 10058     0CB9  0825               	movf	(___fldiv@b+1)^(0+128),w
 10059     0CBA  00A1               	movwf	(?___fldiv+1)^(0+128)
 10060     0CBB  0824               	movf	___fldiv@b^(0+128),w
 10061     0CBC  00A0               	movwf	?___fldiv^(0+128)
 10062     0CBD  2DF3               	goto	l1797
 10063     0CBE                     l5612:
 10064     0CBE  0838               	movf	___fldiv@bexp^(0+128),w
 10065     0CBF  1D03               	btfss	3,2
 10066     0CC0  2CC2               	goto	u5581
 10067     0CC1  2CC3               	goto	u5580
 10068     0CC2                     u5581:
 10069     0CC2  2CCC               	goto	l5618
 10070     0CC3                     u5580:
 10071     0CC3                     l5614:
 10072     0CC3  3000               	movlw	0
 10073     0CC4  00A3               	movwf	(?___fldiv+3)^(0+128)
 10074     0CC5  3000               	movlw	0
 10075     0CC6  00A2               	movwf	(?___fldiv+2)^(0+128)
 10076     0CC7  3000               	movlw	0
 10077     0CC8  00A1               	movwf	(?___fldiv+1)^(0+128)
 10078     0CC9  3000               	movlw	0
 10079     0CCA  00A0               	movwf	?___fldiv^(0+128)
 10080     0CCB  2DF3               	goto	l1797
 10081     0CCC                     l5618:
 10082     0CCC  0838               	movf	___fldiv@bexp^(0+128),w
 10083     0CCD  00A8               	movwf	??___fldiv^(0+128)
 10084     0CCE  01A9               	clrf	(??___fldiv^(0+128)+1)
 10085     0CCF  0829               	movf	(??___fldiv+1)^(0+128),w
 10086     0CD0  00AB               	movwf	((??___fldiv+2)^(0+128)+1)
 10087     0CD1  0839               	movf	___fldiv@aexp^(0+128),w
 10088     0CD2  0228               	subwf	??___fldiv^(0+128),w
 10089     0CD3  00AA               	movwf	(??___fldiv+2)^(0+128)
 10090     0CD4  1C03               	skipc
 10091     0CD5  03AB               	decf	((??___fldiv+2)^(0+128)+1),f
 10092     0CD6  082A               	movf	(??___fldiv+2)^(0+128),w
 10093     0CD7  3E7F               	addlw	127
 10094     0CD8  00B2               	movwf	___fldiv@new_exp^(0+128)
 10095     0CD9  3000               	movlw	0
 10096     0CDA  3D2B               	addwfc	(??___fldiv+3)^(0+128),w
 10097     0CDB  00B3               	movwf	(___fldiv@new_exp+1)^(0+128)
 10098     0CDC                     l5620:
 10099     0CDC  0827               	movf	(___fldiv@b+3)^(0+128),w
 10100     0CDD  00B0               	movwf	(___fldiv@rem+3)^(0+128)
 10101     0CDE  0826               	movf	(___fldiv@b+2)^(0+128),w
 10102     0CDF  00AF               	movwf	(___fldiv@rem+2)^(0+128)
 10103     0CE0  0825               	movf	(___fldiv@b+1)^(0+128),w
 10104     0CE1  00AE               	movwf	(___fldiv@rem+1)^(0+128)
 10105     0CE2  0824               	movf	___fldiv@b^(0+128),w
 10106     0CE3  00AD               	movwf	___fldiv@rem^(0+128)
 10107     0CE4                     l5622:
 10108     0CE4  3000               	movlw	0
 10109     0CE5  00A7               	movwf	(___fldiv@b+3)^(0+128)
 10110     0CE6  3000               	movlw	0
 10111     0CE7  00A6               	movwf	(___fldiv@b+2)^(0+128)
 10112     0CE8  3000               	movlw	0
 10113     0CE9  00A5               	movwf	(___fldiv@b+1)^(0+128)
 10114     0CEA  3000               	movlw	0
 10115     0CEB  00A4               	movwf	___fldiv@b^(0+128)
 10116     0CEC                     l5624:
 10117     0CEC  3000               	movlw	0
 10118     0CED  00B7               	movwf	(___fldiv@grs+3)^(0+128)
 10119     0CEE  3000               	movlw	0
 10120     0CEF  00B6               	movwf	(___fldiv@grs+2)^(0+128)
 10121     0CF0  3000               	movlw	0
 10122     0CF1  00B5               	movwf	(___fldiv@grs+1)^(0+128)
 10123     0CF2  3000               	movlw	0
 10124     0CF3  00B4               	movwf	___fldiv@grs^(0+128)
 10125     0CF4                     l5626:
 10126     0CF4  01B9               	clrf	___fldiv@aexp^(0+128)
 10127     0CF5  2D32               	goto	l5646
 10128     0CF6                     l5628:
 10129     0CF6  0839               	movf	___fldiv@aexp^(0+128),w
 10130     0CF7  1903               	btfsc	3,2
 10131     0CF8  2CFA               	goto	u5591
 10132     0CF9  2CFB               	goto	u5590
 10133     0CFA                     u5591:
 10134     0CFA  2D15               	goto	l5638
 10135     0CFB                     u5590:
 10136     0CFB                     l5630:
 10137     0CFB  3001               	movlw	1
 10138     0CFC                     u5605:
 10139     0CFC  35AD               	lslf	___fldiv@rem^(0+128),f
 10140     0CFD  0DAE               	rlf	(___fldiv@rem+1)^(0+128),f
 10141     0CFE  0DAF               	rlf	(___fldiv@rem+2)^(0+128),f
 10142     0CFF  0DB0               	rlf	(___fldiv@rem+3)^(0+128),f
 10143     0D00  0B89               	decfsz	9,f
 10144     0D01  2CFC               	goto	u5605
 10145     0D02  3001               	movlw	1
 10146     0D03                     u5615:
 10147     0D03  35A4               	lslf	___fldiv@b^(0+128),f
 10148     0D04  0DA5               	rlf	(___fldiv@b+1)^(0+128),f
 10149     0D05  0DA6               	rlf	(___fldiv@b+2)^(0+128),f
 10150     0D06  0DA7               	rlf	(___fldiv@b+3)^(0+128),f
 10151     0D07  0B89               	decfsz	9,f
 10152     0D08  2D03               	goto	u5615
 10153     0D09                     l5632:
 10154     0D09  1FB7               	btfss	(___fldiv@grs+3)^(0+128),7
 10155     0D0A  2D0C               	goto	u5621
 10156     0D0B  2D0D               	goto	u5620
 10157     0D0C                     u5621:
 10158     0D0C  2D0E               	goto	l5636
 10159     0D0D                     u5620:
 10160     0D0D                     l5634:
 10161     0D0D  1424               	bsf	___fldiv@b^(0+128),0
 10162     0D0E                     l5636:
 10163     0D0E  3001               	movlw	1
 10164     0D0F                     u5635:
 10165     0D0F  35B4               	lslf	___fldiv@grs^(0+128),f
 10166     0D10  0DB5               	rlf	(___fldiv@grs+1)^(0+128),f
 10167     0D11  0DB6               	rlf	(___fldiv@grs+2)^(0+128),f
 10168     0D12  0DB7               	rlf	(___fldiv@grs+3)^(0+128),f
 10169     0D13  0B89               	decfsz	9,f
 10170     0D14  2D0F               	goto	u5635
 10171     0D15                     l5638:
 10172     0D15  0823               	movf	(___fldiv@a+3)^(0+128),w
 10173     0D16  0230               	subwf	(___fldiv@rem+3)^(0+128),w
 10174     0D17  1D03               	skipz
 10175     0D18  2D23               	goto	u5645
 10176     0D19  0822               	movf	(___fldiv@a+2)^(0+128),w
 10177     0D1A  022F               	subwf	(___fldiv@rem+2)^(0+128),w
 10178     0D1B  1D03               	skipz
 10179     0D1C  2D23               	goto	u5645
 10180     0D1D  0821               	movf	(___fldiv@a+1)^(0+128),w
 10181     0D1E  022E               	subwf	(___fldiv@rem+1)^(0+128),w
 10182     0D1F  1D03               	skipz
 10183     0D20  2D23               	goto	u5645
 10184     0D21  0820               	movf	___fldiv@a^(0+128),w
 10185     0D22  022D               	subwf	___fldiv@rem^(0+128),w
 10186     0D23                     u5645:
 10187     0D23  1C03               	skipc
 10188     0D24  2D26               	goto	u5641
 10189     0D25  2D27               	goto	u5640
 10190     0D26                     u5641:
 10191     0D26  2D30               	goto	l5644
 10192     0D27                     u5640:
 10193     0D27                     l5640:
 10194     0D27  1737               	bsf	(___fldiv@grs^(0+128)+3),6
 10195     0D28                     l5642:
 10196     0D28  0820               	movf	___fldiv@a^(0+128),w
 10197     0D29  02AD               	subwf	___fldiv@rem^(0+128),f
 10198     0D2A  0821               	movf	(___fldiv@a+1)^(0+128),w
 10199     0D2B  3BAE               	subwfb	(___fldiv@rem+1)^(0+128),f
 10200     0D2C  0822               	movf	(___fldiv@a+2)^(0+128),w
 10201     0D2D  3BAF               	subwfb	(___fldiv@rem+2)^(0+128),f
 10202     0D2E  0823               	movf	(___fldiv@a+3)^(0+128),w
 10203     0D2F  3BB0               	subwfb	(___fldiv@rem+3)^(0+128),f
 10204     0D30                     l5644:
 10205     0D30  3001               	movlw	1
 10206     0D31  07B9               	addwf	___fldiv@aexp^(0+128),f
 10207     0D32                     l5646:
 10208     0D32  301A               	movlw	26
 10209     0D33  0239               	subwf	___fldiv@aexp^(0+128),w
 10210     0D34  1C03               	skipc
 10211     0D35  2D37               	goto	u5651
 10212     0D36  2D38               	goto	u5650
 10213     0D37                     u5651:
 10214     0D37  2CF6               	goto	l5628
 10215     0D38                     u5650:
 10216     0D38                     l5648:
 10217     0D38  0830               	movf	(___fldiv@rem+3)^(0+128),w
 10218     0D39  042F               	iorwf	(___fldiv@rem+2)^(0+128),w
 10219     0D3A  042E               	iorwf	(___fldiv@rem+1)^(0+128),w
 10220     0D3B  042D               	iorwf	___fldiv@rem^(0+128),w
 10221     0D3C  1903               	skipnz
 10222     0D3D  2D3F               	goto	u5661
 10223     0D3E  2D40               	goto	u5660
 10224     0D3F                     u5661:
 10225     0D3F  2D59               	goto	l5662
 10226     0D40                     u5660:
 10227     0D40                     l5650:
 10228     0D40  1434               	bsf	___fldiv@grs^(0+128),0
 10229     0D41  2D59               	goto	l5662
 10230     0D42                     l5652:
 10231     0D42  3001               	movlw	1
 10232     0D43                     u5675:
 10233     0D43  35A4               	lslf	___fldiv@b^(0+128),f
 10234     0D44  0DA5               	rlf	(___fldiv@b+1)^(0+128),f
 10235     0D45  0DA6               	rlf	(___fldiv@b+2)^(0+128),f
 10236     0D46  0DA7               	rlf	(___fldiv@b+3)^(0+128),f
 10237     0D47  0B89               	decfsz	9,f
 10238     0D48  2D43               	goto	u5675
 10239     0D49                     l5654:
 10240     0D49  1FB7               	btfss	(___fldiv@grs+3)^(0+128),7
 10241     0D4A  2D4C               	goto	u5681
 10242     0D4B  2D4D               	goto	u5680
 10243     0D4C                     u5681:
 10244     0D4C  2D4E               	goto	l5658
 10245     0D4D                     u5680:
 10246     0D4D                     l5656:
 10247     0D4D  1424               	bsf	___fldiv@b^(0+128),0
 10248     0D4E                     l5658:
 10249     0D4E  3001               	movlw	1
 10250     0D4F                     u5695:
 10251     0D4F  35B4               	lslf	___fldiv@grs^(0+128),f
 10252     0D50  0DB5               	rlf	(___fldiv@grs+1)^(0+128),f
 10253     0D51  0DB6               	rlf	(___fldiv@grs+2)^(0+128),f
 10254     0D52  0DB7               	rlf	(___fldiv@grs+3)^(0+128),f
 10255     0D53  0B89               	decfsz	9,f
 10256     0D54  2D4F               	goto	u5695
 10257     0D55                     l5660:
 10258     0D55  30FF               	movlw	255
 10259     0D56  07B2               	addwf	___fldiv@new_exp^(0+128),f
 10260     0D57  30FF               	movlw	255
 10261     0D58  3DB3               	addwfc	(___fldiv@new_exp+1)^(0+128),f
 10262     0D59                     l5662:
 10263     0D59  1FA6               	btfss	(___fldiv@b+2)^(0+128),7
 10264     0D5A  2D5C               	goto	u5701
 10265     0D5B  2D5D               	goto	u5700
 10266     0D5C                     u5701:
 10267     0D5C  2D42               	goto	l5652
 10268     0D5D                     u5700:
 10269     0D5D                     l5664:
 10270     0D5D  01B9               	clrf	___fldiv@aexp^(0+128)
 10271     0D5E                     l5666:
 10272     0D5E  1FB7               	btfss	(___fldiv@grs+3)^(0+128),7
 10273     0D5F  2D61               	goto	u5711
 10274     0D60  2D62               	goto	u5710
 10275     0D61                     u5711:
 10276     0D61  2D7E               	goto	l5674
 10277     0D62                     u5710:
 10278     0D62                     l5668:
 10279     0D62  30FF               	movlw	255
 10280     0D63  0534               	andwf	___fldiv@grs^(0+128),w
 10281     0D64  00A8               	movwf	??___fldiv^(0+128)
 10282     0D65  30FF               	movlw	255
 10283     0D66  0535               	andwf	(___fldiv@grs+1)^(0+128),w
 10284     0D67  00A9               	movwf	(??___fldiv^(0+128)+1)
 10285     0D68  30FF               	movlw	255
 10286     0D69  0536               	andwf	(___fldiv@grs+2)^(0+128),w
 10287     0D6A  00AA               	movwf	(??___fldiv^(0+128)+2)
 10288     0D6B  307F               	movlw	127
 10289     0D6C  0537               	andwf	(___fldiv@grs+3)^(0+128),w
 10290     0D6D  00AB               	movwf	(??___fldiv^(0+128)+3)
 10291     0D6E  082B               	movf	(??___fldiv+3)^(0+128),w
 10292     0D6F  042A               	iorwf	(??___fldiv+2)^(0+128),w
 10293     0D70  0429               	iorwf	(??___fldiv+1)^(0+128),w
 10294     0D71  0428               	iorwf	??___fldiv^(0+128),w
 10295     0D72  1903               	skipnz
 10296     0D73  2D75               	goto	u5721
 10297     0D74  2D76               	goto	u5720
 10298     0D75                     u5721:
 10299     0D75  2D79               	goto	l1811
 10300     0D76                     u5720:
 10301     0D76                     l5670:
 10302     0D76  3001               	movlw	1
 10303     0D77  00B9               	movwf	___fldiv@aexp^(0+128)
 10304     0D78  2D7E               	goto	l5674
 10305     0D79                     l1811:
 10306     0D79  1C24               	btfss	___fldiv@b^(0+128),0
 10307     0D7A  2D7C               	goto	u5731
 10308     0D7B  2D7D               	goto	u5730
 10309     0D7C                     u5731:
 10310     0D7C  2D7E               	goto	l5674
 10311     0D7D                     u5730:
 10312     0D7D  2D76               	goto	l5670
 10313     0D7E                     l5674:
 10314     0D7E  0839               	movf	___fldiv@aexp^(0+128),w
 10315     0D7F  1903               	btfsc	3,2
 10316     0D80  2D82               	goto	u5741
 10317     0D81  2D83               	goto	u5740
 10318     0D82                     u5741:
 10319     0D82  2DA9               	goto	l5684
 10320     0D83                     u5740:
 10321     0D83                     l5676:
 10322     0D83  3001               	movlw	1
 10323     0D84  07A4               	addwf	___fldiv@b^(0+128),f
 10324     0D85  3000               	movlw	0
 10325     0D86  3DA5               	addwfc	(___fldiv@b+1)^(0+128),f
 10326     0D87  3DA6               	addwfc	(___fldiv@b+2)^(0+128),f
 10327     0D88  3DA7               	addwfc	(___fldiv@b+3)^(0+128),f
 10328     0D89                     l5678:
 10329     0D89  1C27               	btfss	(___fldiv@b+3)^(0+128),0
 10330     0D8A  2D8C               	goto	u5751
 10331     0D8B  2D8D               	goto	u5750
 10332     0D8C                     u5751:
 10333     0D8C  2DA9               	goto	l5684
 10334     0D8D                     u5750:
 10335     0D8D                     l5680:
 10336     0D8D  0824               	movf	___fldiv@b^(0+128),w
 10337     0D8E  00A8               	movwf	??___fldiv^(0+128)
 10338     0D8F  0825               	movf	(___fldiv@b+1)^(0+128),w
 10339     0D90  00A9               	movwf	(??___fldiv^(0+128)+1)
 10340     0D91  0826               	movf	(___fldiv@b+2)^(0+128),w
 10341     0D92  00AA               	movwf	(??___fldiv^(0+128)+2)
 10342     0D93  0827               	movf	(___fldiv@b+3)^(0+128),w
 10343     0D94  00AB               	movwf	(??___fldiv^(0+128)+3)
 10344     0D95  3001               	movlw	1
 10345     0D96  00AC               	movwf	(??___fldiv+4)^(0+128)
 10346     0D97                     u5765:
 10347     0D97  37AB               	asrf	(??___fldiv^(0+128)+3),f
 10348     0D98  0CAA               	rrf	(??___fldiv^(0+128)+2),f
 10349     0D99  0CA9               	rrf	(??___fldiv^(0+128)+1),f
 10350     0D9A  0CA8               	rrf	??___fldiv^(0+128),f
 10351     0D9B                     u5760:
 10352     0D9B  0BAC               	decfsz	(??___fldiv+4)^(0+128),f
 10353     0D9C  2D97               	goto	u5765
 10354     0D9D  082B               	movf	(??___fldiv+3)^(0+128),w
 10355     0D9E  00A7               	movwf	(___fldiv@b+3)^(0+128)
 10356     0D9F  082A               	movf	(??___fldiv+2)^(0+128),w
 10357     0DA0  00A6               	movwf	(___fldiv@b+2)^(0+128)
 10358     0DA1  0829               	movf	(??___fldiv+1)^(0+128),w
 10359     0DA2  00A5               	movwf	(___fldiv@b+1)^(0+128)
 10360     0DA3  0828               	movf	??___fldiv^(0+128),w
 10361     0DA4  00A4               	movwf	___fldiv@b^(0+128)
 10362     0DA5                     l5682:
 10363     0DA5  3001               	movlw	1
 10364     0DA6  07B2               	addwf	___fldiv@new_exp^(0+128),f
 10365     0DA7  3000               	movlw	0
 10366     0DA8  3DB3               	addwfc	(___fldiv@new_exp+1)^(0+128),f
 10367     0DA9                     l5684:
 10368     0DA9  0833               	movf	(___fldiv@new_exp+1)^(0+128),w
 10369     0DAA  3A80               	xorlw	128
 10370     0DAB  00A8               	movwf	??___fldiv^(0+128)
 10371     0DAC  3080               	movlw	128
 10372     0DAD  0228               	subwf	??___fldiv^(0+128),w
 10373     0DAE  1D03               	skipz
 10374     0DAF  2DB2               	goto	u5775
 10375     0DB0  30FF               	movlw	255
 10376     0DB1  0232               	subwf	___fldiv@new_exp^(0+128),w
 10377     0DB2                     u5775:
 10378     0DB2  1C03               	skipc
 10379     0DB3  2DB5               	goto	u5771
 10380     0DB4  2DB6               	goto	u5770
 10381     0DB5                     u5771:
 10382     0DB5  2DC3               	goto	l1816
 10383     0DB6                     u5770:
 10384     0DB6                     l5686:
 10385     0DB6  30FF               	movlw	255
 10386     0DB7  0021               	movlb	1	; select bank1
 10387     0DB8  00B2               	movwf	___fldiv@new_exp^(0+128)
 10388     0DB9  3000               	movlw	0
 10389     0DBA  00B3               	movwf	(___fldiv@new_exp^(0+128)+1)
 10390     0DBB  3000               	movlw	0
 10391     0DBC  00A7               	movwf	(___fldiv@b+3)^(0+128)
 10392     0DBD  3000               	movlw	0
 10393     0DBE  00A6               	movwf	(___fldiv@b+2)^(0+128)
 10394     0DBF  3000               	movlw	0
 10395     0DC0  00A5               	movwf	(___fldiv@b+1)^(0+128)
 10396     0DC1  3000               	movlw	0
 10397     0DC2  00A4               	movwf	___fldiv@b^(0+128)
 10398     0DC3                     l1816:
 10399     0DC3  0021               	movlb	1	; select bank1
 10400     0DC4  0833               	movf	(___fldiv@new_exp+1)^(0+128),w
 10401     0DC5  3A80               	xorlw	128
 10402     0DC6  00A8               	movwf	??___fldiv^(0+128)
 10403     0DC7  3080               	movlw	128
 10404     0DC8  0228               	subwf	??___fldiv^(0+128),w
 10405     0DC9  1D03               	skipz
 10406     0DCA  2DCD               	goto	u5785
 10407     0DCB  3001               	movlw	1
 10408     0DCC  0232               	subwf	___fldiv@new_exp^(0+128),w
 10409     0DCD                     u5785:
 10410     0DCD  1803               	skipnc
 10411     0DCE  2DD0               	goto	u5781
 10412     0DCF  2DD1               	goto	u5780
 10413     0DD0                     u5781:
 10414     0DD0  2DDD               	goto	l1817
 10415     0DD1                     u5780:
 10416     0DD1                     l5688:
 10417     0DD1  0021               	movlb	1	; select bank1
 10418     0DD2  01B2               	clrf	___fldiv@new_exp^(0+128)
 10419     0DD3  01B3               	clrf	(___fldiv@new_exp+1)^(0+128)
 10420     0DD4                     l5690:
 10421     0DD4  3000               	movlw	0
 10422     0DD5  00A7               	movwf	(___fldiv@b+3)^(0+128)
 10423     0DD6  3000               	movlw	0
 10424     0DD7  00A6               	movwf	(___fldiv@b+2)^(0+128)
 10425     0DD8  3000               	movlw	0
 10426     0DD9  00A5               	movwf	(___fldiv@b+1)^(0+128)
 10427     0DDA  3000               	movlw	0
 10428     0DDB  00A4               	movwf	___fldiv@b^(0+128)
 10429     0DDC                     l5692:
 10430     0DDC  01B1               	clrf	___fldiv@sign^(0+128)
 10431     0DDD                     l1817:
 10432     0DDD  0021               	movlb	1	; select bank1
 10433     0DDE  0832               	movf	___fldiv@new_exp^(0+128),w
 10434     0DDF  00B8               	movwf	___fldiv@bexp^(0+128)
 10435     0DE0                     l5694:
 10436     0DE0  1C38               	btfss	___fldiv@bexp^(0+128),0
 10437     0DE1  2DE3               	goto	u5791
 10438     0DE2  2DE4               	goto	u5790
 10439     0DE3                     u5791:
 10440     0DE3  2DE6               	goto	l5698
 10441     0DE4                     u5790:
 10442     0DE4                     l5696:
 10443     0DE4  17A6               	bsf	(___fldiv@b^(0+128)+2),7
 10444     0DE5  2DE8               	goto	l1819
 10445     0DE6                     l5698:
 10446     0DE6  307F               	movlw	127
 10447     0DE7  05A6               	andwf	(___fldiv@b^(0+128)+2),f
 10448     0DE8                     l1819:
 10449     0DE8  0838               	movf	___fldiv@bexp^(0+128),w
 10450     0DE9  00A8               	movwf	??___fldiv^(0+128)
 10451     0DEA  3001               	movlw	1
 10452     0DEB                     u5805:
 10453     0DEB  36A8               	lsrf	??___fldiv^(0+128),f
 10454     0DEC  0B89               	decfsz	9,f
 10455     0DED  2DEB               	goto	u5805
 10456     0DEE  0828               	movf	??___fldiv^(0+128),w
 10457     0DEF  00A7               	movwf	(___fldiv@b^(0+128)+3)
 10458     0DF0  0831               	movf	___fldiv@sign^(0+128),w
 10459     0DF1  04A7               	iorwf	(___fldiv@b^(0+128)+3),f
 10460     0DF2  2CB5               	goto	l5608
 10461     0DF3                     l1797:
 10462     0DF3  0008               	return
 10463     0DF4                     __end_of___fldiv:
 10464                           
 10465                           	psect	text7
 10466     051F                     __ptext7:	
 10467 ;; *************** function ___fladd *****************
 10468 ;; Defined at:
 10469 ;;		line 10 in file "C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\sprcadd.c"
 10470 ;; Parameters:    Size  Location     Type
 10471 ;;  b               4   14[BANK1 ] unsigned char 
 10472 ;;  a               4   18[BANK1 ] unsigned char 
 10473 ;; Auto vars:     Size  Location     Type
 10474 ;;  grs             1   33[BANK1 ] unsigned char 
 10475 ;;  bexp            1   32[BANK1 ] unsigned char 
 10476 ;;  aexp            1   31[BANK1 ] unsigned char 
 10477 ;;  signs           1   30[BANK1 ] unsigned char 
 10478 ;; Return value:  Size  Location     Type
 10479 ;;                  4   14[BANK1 ] unsigned char 
 10480 ;; Registers used:
 10481 ;;		wreg, status,2, status,0
 10482 ;; Tracked objects:
 10483 ;;		On entry : 0/0
 10484 ;;		On exit  : 0/0
 10485 ;;		Unchanged: 0/0
 10486 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10487 ;;      Params:         0       0       8       0       0       0       0       0       0       0       0       0       
      +0       0
 10488 ;;      Locals:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0
 10489 ;;      Temps:          0       0       8       0       0       0       0       0       0       0       0       0       
      +0       0
 10490 ;;      Totals:         0       0      20       0       0       0       0       0       0       0       0       0       
      +0       0
 10491 ;;Total ram usage:       20 bytes
 10492 ;; Hardware stack levels used: 1
 10493 ;; Hardware stack levels required when called: 7
 10494 ;; This function calls:
 10495 ;;		Nothing
 10496 ;; This function is called by:
 10497 ;;		_str2float
 10498 ;;		_getLedNumber
 10499 ;;		___flsub
 10500 ;; This function uses a non-reentrant model
 10501 ;;
 10502                           
 10503     051F                     ___fladd:	
 10504                           ;psect for function ___fladd
 10505                           
 10506     051F                     l5368:	
 10507                           ;incstack = 0
 10508                           ; Regs used in ___fladd: [wreg+status,2+status,0]
 10509                           
 10510     051F  0021               	movlb	1	; select bank1
 10511     0520  0831               	movf	(___fladd@b^(0+128)+3),w
 10512     0521  3980               	andlw	128
 10513     0522  00BE               	movwf	___fladd@signs^(0+128)
 10514     0523                     l5370:
 10515     0523  3531               	lslf	(___fladd@b^(0+128)+3),w
 10516     0524  00C0               	movwf	___fladd@bexp^(0+128)
 10517     0525                     l5372:
 10518     0525  1FB0               	btfss	(___fladd@b^(0+128)+2),7
 10519     0526  2D28               	goto	u5051
 10520     0527  2D29               	goto	u5050
 10521     0528                     u5051:
 10522     0528  2D2A               	goto	l5376
 10523     0529                     u5050:
 10524     0529                     l5374:
 10525     0529  1440               	bsf	___fladd@bexp^(0+128),0
 10526     052A                     l5376:
 10527     052A  0840               	movf	___fladd@bexp^(0+128),w
 10528     052B  1903               	btfsc	3,2
 10529     052C  2D2E               	goto	u5061
 10530     052D  2D2F               	goto	u5060
 10531     052E                     u5061:
 10532     052E  2D3F               	goto	l5386
 10533     052F                     u5060:
 10534     052F                     l5378:
 10535     052F  0A40               	incf	___fladd@bexp^(0+128),w
 10536     0530  1D03               	btfss	3,2
 10537     0531  2D33               	goto	u5071
 10538     0532  2D34               	goto	u5070
 10539     0533                     u5071:
 10540     0533  2D3C               	goto	l5382
 10541     0534                     u5070:
 10542     0534                     l5380:
 10543     0534  3000               	movlw	0
 10544     0535  00B1               	movwf	(___fladd@b+3)^(0+128)
 10545     0536  3000               	movlw	0
 10546     0537  00B0               	movwf	(___fladd@b+2)^(0+128)
 10547     0538  3000               	movlw	0
 10548     0539  00AF               	movwf	(___fladd@b+1)^(0+128)
 10549     053A  3000               	movlw	0
 10550     053B  00AE               	movwf	___fladd@b^(0+128)
 10551     053C                     l5382:
 10552     053C  17B0               	bsf	(___fladd@b^(0+128)+2),7
 10553     053D                     l5384:
 10554     053D  01B1               	clrf	(___fladd@b^(0+128)+3)
 10555     053E  2D47               	goto	l5388
 10556     053F                     l5386:
 10557     053F  3000               	movlw	0
 10558     0540  00B1               	movwf	(___fladd@b+3)^(0+128)
 10559     0541  3000               	movlw	0
 10560     0542  00B0               	movwf	(___fladd@b+2)^(0+128)
 10561     0543  3000               	movlw	0
 10562     0544  00AF               	movwf	(___fladd@b+1)^(0+128)
 10563     0545  3000               	movlw	0
 10564     0546  00AE               	movwf	___fladd@b^(0+128)
 10565     0547                     l5388:
 10566     0547  0835               	movf	(___fladd@a^(0+128)+3),w
 10567     0548  3980               	andlw	128
 10568     0549  00BF               	movwf	___fladd@aexp^(0+128)
 10569     054A                     l5390:
 10570     054A  083F               	movf	___fladd@aexp^(0+128),w
 10571     054B  063E               	xorwf	___fladd@signs^(0+128),w
 10572     054C  1903               	skipnz
 10573     054D  2D4F               	goto	u5081
 10574     054E  2D50               	goto	u5080
 10575     054F                     u5081:
 10576     054F  2D51               	goto	l5394
 10577     0550                     u5080:
 10578     0550                     l5392:
 10579     0550  173E               	bsf	___fladd@signs^(0+128),6
 10580     0551                     l5394:
 10581     0551  3535               	lslf	(___fladd@a^(0+128)+3),w
 10582     0552  00BF               	movwf	___fladd@aexp^(0+128)
 10583     0553                     l5396:
 10584     0553  1FB4               	btfss	(___fladd@a^(0+128)+2),7
 10585     0554  2D56               	goto	u5091
 10586     0555  2D57               	goto	u5090
 10587     0556                     u5091:
 10588     0556  2D58               	goto	l5400
 10589     0557                     u5090:
 10590     0557                     l5398:
 10591     0557  143F               	bsf	___fladd@aexp^(0+128),0
 10592     0558                     l5400:
 10593     0558  083F               	movf	___fladd@aexp^(0+128),w
 10594     0559  1903               	btfsc	3,2
 10595     055A  2D5C               	goto	u5101
 10596     055B  2D5D               	goto	u5100
 10597     055C                     u5101:
 10598     055C  2D6D               	goto	l5410
 10599     055D                     u5100:
 10600     055D                     l5402:
 10601     055D  0A3F               	incf	___fladd@aexp^(0+128),w
 10602     055E  1D03               	btfss	3,2
 10603     055F  2D61               	goto	u5111
 10604     0560  2D62               	goto	u5110
 10605     0561                     u5111:
 10606     0561  2D6A               	goto	l5406
 10607     0562                     u5110:
 10608     0562                     l5404:
 10609     0562  3000               	movlw	0
 10610     0563  00B5               	movwf	(___fladd@a+3)^(0+128)
 10611     0564  3000               	movlw	0
 10612     0565  00B4               	movwf	(___fladd@a+2)^(0+128)
 10613     0566  3000               	movlw	0
 10614     0567  00B3               	movwf	(___fladd@a+1)^(0+128)
 10615     0568  3000               	movlw	0
 10616     0569  00B2               	movwf	___fladd@a^(0+128)
 10617     056A                     l5406:
 10618     056A  17B4               	bsf	(___fladd@a^(0+128)+2),7
 10619     056B                     l5408:
 10620     056B  01B5               	clrf	(___fladd@a^(0+128)+3)
 10621     056C  2D75               	goto	l1739
 10622     056D                     l5410:
 10623     056D  3000               	movlw	0
 10624     056E  00B5               	movwf	(___fladd@a+3)^(0+128)
 10625     056F  3000               	movlw	0
 10626     0570  00B4               	movwf	(___fladd@a+2)^(0+128)
 10627     0571  3000               	movlw	0
 10628     0572  00B3               	movwf	(___fladd@a+1)^(0+128)
 10629     0573  3000               	movlw	0
 10630     0574  00B2               	movwf	___fladd@a^(0+128)
 10631     0575                     l1739:
 10632     0575  0840               	movf	___fladd@bexp^(0+128),w
 10633     0576  023F               	subwf	___fladd@aexp^(0+128),w
 10634     0577  1803               	skipnc
 10635     0578  2D7A               	goto	u5121
 10636     0579  2D7B               	goto	u5120
 10637     057A                     u5121:
 10638     057A  2D9F               	goto	l5446
 10639     057B                     u5120:
 10640     057B                     l5412:
 10641     057B  1F3E               	btfss	___fladd@signs^(0+128),6
 10642     057C  2D7E               	goto	u5131
 10643     057D  2D7F               	goto	u5130
 10644     057E                     u5131:
 10645     057E  2D81               	goto	l5416
 10646     057F                     u5130:
 10647     057F                     l5414:
 10648     057F  3080               	movlw	128
 10649     0580  06BE               	xorwf	___fladd@signs^(0+128),f
 10650     0581                     l5416:
 10651     0581  0840               	movf	___fladd@bexp^(0+128),w
 10652     0582  00C1               	movwf	___fladd@grs^(0+128)
 10653     0583                     l5418:
 10654     0583  083F               	movf	___fladd@aexp^(0+128),w
 10655     0584  00C0               	movwf	___fladd@bexp^(0+128)
 10656     0585                     l5420:
 10657     0585  0841               	movf	___fladd@grs^(0+128),w
 10658     0586  00BF               	movwf	___fladd@aexp^(0+128)
 10659     0587                     l5422:
 10660     0587  082E               	movf	___fladd@b^(0+128),w
 10661     0588  00C1               	movwf	___fladd@grs^(0+128)
 10662     0589                     l5424:
 10663     0589  0832               	movf	___fladd@a^(0+128),w
 10664     058A  00AE               	movwf	___fladd@b^(0+128)
 10665     058B                     l5426:
 10666     058B  0841               	movf	___fladd@grs^(0+128),w
 10667     058C  00B2               	movwf	___fladd@a^(0+128)
 10668     058D                     l5428:
 10669     058D  082F               	movf	(___fladd@b^(0+128)+1),w
 10670     058E  00C1               	movwf	___fladd@grs^(0+128)
 10671     058F                     l5430:
 10672     058F  0833               	movf	(___fladd@a^(0+128)+1),w
 10673     0590  00AF               	movwf	(___fladd@b^(0+128)+1)
 10674     0591                     l5432:
 10675     0591  0841               	movf	___fladd@grs^(0+128),w
 10676     0592  00B3               	movwf	(___fladd@a^(0+128)+1)
 10677     0593                     l5434:
 10678     0593  0830               	movf	(___fladd@b^(0+128)+2),w
 10679     0594  00C1               	movwf	___fladd@grs^(0+128)
 10680     0595                     l5436:
 10681     0595  0834               	movf	(___fladd@a^(0+128)+2),w
 10682     0596  00B0               	movwf	(___fladd@b^(0+128)+2)
 10683     0597                     l5438:
 10684     0597  0841               	movf	___fladd@grs^(0+128),w
 10685     0598  00B4               	movwf	(___fladd@a^(0+128)+2)
 10686     0599                     l5440:
 10687     0599  0831               	movf	(___fladd@b^(0+128)+3),w
 10688     059A  00C1               	movwf	___fladd@grs^(0+128)
 10689     059B                     l5442:
 10690     059B  0835               	movf	(___fladd@a^(0+128)+3),w
 10691     059C  00B1               	movwf	(___fladd@b^(0+128)+3)
 10692     059D                     l5444:
 10693     059D  0841               	movf	___fladd@grs^(0+128),w
 10694     059E  00B5               	movwf	(___fladd@a^(0+128)+3)
 10695     059F                     l5446:
 10696     059F  01C1               	clrf	___fladd@grs^(0+128)
 10697     05A0                     l5448:
 10698     05A0  083F               	movf	___fladd@aexp^(0+128),w
 10699     05A1  00B6               	movwf	??___fladd^(0+128)
 10700     05A2  01B7               	clrf	(??___fladd^(0+128)+1)
 10701     05A3  0837               	movf	(??___fladd+1)^(0+128),w
 10702     05A4  00B9               	movwf	((??___fladd+2)^(0+128)+1)
 10703     05A5  0840               	movf	___fladd@bexp^(0+128),w
 10704     05A6  0236               	subwf	??___fladd^(0+128),w
 10705     05A7  00B8               	movwf	(??___fladd+2)^(0+128)
 10706     05A8  1C03               	skipc
 10707     05A9  03B9               	decf	((??___fladd+2)^(0+128)+1),f
 10708     05AA  0839               	movf	(??___fladd+3)^(0+128),w
 10709     05AB  3A80               	xorlw	128
 10710     05AC  00BA               	movwf	(??___fladd+4)^(0+128)
 10711     05AD  3080               	movlw	128
 10712     05AE  023A               	subwf	(??___fladd+4)^(0+128),w
 10713     05AF  1D03               	skipz
 10714     05B0  2DB3               	goto	u5145
 10715     05B1  301A               	movlw	26
 10716     05B2  0238               	subwf	(??___fladd+2)^(0+128),w
 10717     05B3                     u5145:
 10718     05B3  1C03               	skipc
 10719     05B4  2DB6               	goto	u5141
 10720     05B5  2DB7               	goto	u5140
 10721     05B6                     u5141:
 10722     05B6  2DED               	goto	l5464
 10723     05B7                     u5140:
 10724     05B7                     l5450:
 10725     05B7  0021               	movlb	1	; select bank1
 10726     05B8  0831               	movf	(___fladd@b+3)^(0+128),w
 10727     05B9  0430               	iorwf	(___fladd@b+2)^(0+128),w
 10728     05BA  042F               	iorwf	(___fladd@b+1)^(0+128),w
 10729     05BB  042E               	iorwf	___fladd@b^(0+128),w
 10730     05BC  1D03               	skipz
 10731     05BD  2DBF               	goto	u5151
 10732     05BE  2DC1               	goto	u5150
 10733     05BF                     u5151:
 10734     05BF  3001               	movlw	1
 10735     05C0  2DC2               	goto	u5160
 10736     05C1                     u5150:
 10737     05C1  3000               	movlw	0
 10738     05C2                     u5160:
 10739     05C2  00C1               	movwf	___fladd@grs^(0+128)
 10740     05C3  3000               	movlw	0
 10741     05C4  00B1               	movwf	(___fladd@b+3)^(0+128)
 10742     05C5  3000               	movlw	0
 10743     05C6  00B0               	movwf	(___fladd@b+2)^(0+128)
 10744     05C7  3000               	movlw	0
 10745     05C8  00AF               	movwf	(___fladd@b+1)^(0+128)
 10746     05C9  3000               	movlw	0
 10747     05CA  00AE               	movwf	___fladd@b^(0+128)
 10748     05CB  083F               	movf	___fladd@aexp^(0+128),w
 10749     05CC  00C0               	movwf	___fladd@bexp^(0+128)
 10750     05CD  2DF4               	goto	l1743
 10751     05CE                     l1745:
 10752     05CE  1C41               	btfss	___fladd@grs^(0+128),0
 10753     05CF  2DD1               	goto	u5171
 10754     05D0  2DD2               	goto	u5170
 10755     05D1                     u5171:
 10756     05D1  2DDC               	goto	l5454
 10757     05D2                     u5170:
 10758     05D2                     l5452:
 10759     05D2  0841               	movf	___fladd@grs^(0+128),w
 10760     05D3  00B6               	movwf	??___fladd^(0+128)
 10761     05D4  3001               	movlw	1
 10762     05D5                     u5185:
 10763     05D5  36B6               	lsrf	??___fladd^(0+128),f
 10764     05D6  0B89               	decfsz	9,f
 10765     05D7  2DD5               	goto	u5185
 10766     05D8  0836               	movf	??___fladd^(0+128),w
 10767     05D9  3801               	iorlw	1
 10768     05DA  00C1               	movwf	___fladd@grs^(0+128)
 10769     05DB  2DDE               	goto	l5456
 10770     05DC                     l5454:
 10771     05DC  1003               	clrc
 10772     05DD  0CC1               	rrf	___fladd@grs^(0+128),f
 10773     05DE                     l5456:
 10774     05DE  1C2E               	btfss	___fladd@b^(0+128),0
 10775     05DF  2DE1               	goto	u5191
 10776     05E0  2DE2               	goto	u5190
 10777     05E1                     u5191:
 10778     05E1  2DE3               	goto	l5460
 10779     05E2                     u5190:
 10780     05E2                     l5458:
 10781     05E2  17C1               	bsf	___fladd@grs^(0+128),7
 10782     05E3                     l5460:
 10783     05E3  3001               	movlw	1
 10784     05E4  00B6               	movwf	??___fladd^(0+128)
 10785     05E5                     u5205:
 10786     05E5  37B1               	asrf	(___fladd@b+3)^(0+128),f
 10787     05E6  0CB0               	rrf	(___fladd@b+2)^(0+128),f
 10788     05E7  0CAF               	rrf	(___fladd@b+1)^(0+128),f
 10789     05E8  0CAE               	rrf	___fladd@b^(0+128),f
 10790     05E9  0BB6               	decfsz	(??___fladd^(0+128))& (0+127),f
 10791     05EA  2DE5               	goto	u5205
 10792     05EB                     l5462:
 10793     05EB  3001               	movlw	1
 10794     05EC  07C0               	addwf	___fladd@bexp^(0+128),f
 10795     05ED                     l5464:
 10796     05ED  0021               	movlb	1	; select bank1
 10797     05EE  083F               	movf	___fladd@aexp^(0+128),w
 10798     05EF  0240               	subwf	___fladd@bexp^(0+128),w
 10799     05F0  1C03               	skipc
 10800     05F1  2DF3               	goto	u5211
 10801     05F2  2DF4               	goto	u5210
 10802     05F3                     u5211:
 10803     05F3  2DCE               	goto	l1745
 10804     05F4                     u5210:
 10805     05F4                     l1743:
 10806     05F4  1B3E               	btfsc	___fladd@signs^(0+128),6
 10807     05F5  2DF7               	goto	u5221
 10808     05F6  2DF8               	goto	u5220
 10809     05F7                     u5221:
 10810     05F7  2E32               	goto	l5490
 10811     05F8                     u5220:
 10812     05F8                     l5466:
 10813     05F8  0840               	movf	___fladd@bexp^(0+128),w
 10814     05F9  1D03               	btfss	3,2
 10815     05FA  2DFC               	goto	u5231
 10816     05FB  2DFD               	goto	u5230
 10817     05FC                     u5231:
 10818     05FC  2E06               	goto	l5472
 10819     05FD                     u5230:
 10820     05FD                     l5468:
 10821     05FD  3000               	movlw	0
 10822     05FE  00B1               	movwf	(?___fladd+3)^(0+128)
 10823     05FF  3000               	movlw	0
 10824     0600  00B0               	movwf	(?___fladd+2)^(0+128)
 10825     0601  3000               	movlw	0
 10826     0602  00AF               	movwf	(?___fladd+1)^(0+128)
 10827     0603  3000               	movlw	0
 10828     0604  00AE               	movwf	?___fladd^(0+128)
 10829     0605  2F2A               	goto	l1752
 10830     0606                     l5472:
 10831     0606  0832               	movf	___fladd@a^(0+128),w
 10832     0607  07AE               	addwf	___fladd@b^(0+128),f
 10833     0608  0833               	movf	(___fladd@a+1)^(0+128),w
 10834     0609  3DAF               	addwfc	(___fladd@b+1)^(0+128),f
 10835     060A  0834               	movf	(___fladd@a+2)^(0+128),w
 10836     060B  3DB0               	addwfc	(___fladd@b+2)^(0+128),f
 10837     060C  0835               	movf	(___fladd@a+3)^(0+128),w
 10838     060D  3DB1               	addwfc	(___fladd@b+3)^(0+128),f
 10839     060E                     l5474:
 10840     060E  1C31               	btfss	(___fladd@b+3)^(0+128),0
 10841     060F  2E11               	goto	u5241
 10842     0610  2E12               	goto	u5240
 10843     0611                     u5241:
 10844     0611  2EBC               	goto	l5526
 10845     0612                     u5240:
 10846     0612                     l5476:
 10847     0612  1C41               	btfss	___fladd@grs^(0+128),0
 10848     0613  2E15               	goto	u5251
 10849     0614  2E16               	goto	u5250
 10850     0615                     u5251:
 10851     0615  2E20               	goto	l5480
 10852     0616                     u5250:
 10853     0616                     l5478:
 10854     0616  0841               	movf	___fladd@grs^(0+128),w
 10855     0617  00B6               	movwf	??___fladd^(0+128)
 10856     0618  3001               	movlw	1
 10857     0619                     u5265:
 10858     0619  36B6               	lsrf	??___fladd^(0+128),f
 10859     061A  0B89               	decfsz	9,f
 10860     061B  2E19               	goto	u5265
 10861     061C  0836               	movf	??___fladd^(0+128),w
 10862     061D  3801               	iorlw	1
 10863     061E  00C1               	movwf	___fladd@grs^(0+128)
 10864     061F  2E22               	goto	l5482
 10865     0620                     l5480:
 10866     0620  1003               	clrc
 10867     0621  0CC1               	rrf	___fladd@grs^(0+128),f
 10868     0622                     l5482:
 10869     0622  1C2E               	btfss	___fladd@b^(0+128),0
 10870     0623  2E25               	goto	u5271
 10871     0624  2E26               	goto	u5270
 10872     0625                     u5271:
 10873     0625  2E27               	goto	l5486
 10874     0626                     u5270:
 10875     0626                     l5484:
 10876     0626  17C1               	bsf	___fladd@grs^(0+128),7
 10877     0627                     l5486:
 10878     0627  3001               	movlw	1
 10879     0628  00B6               	movwf	??___fladd^(0+128)
 10880     0629                     u5285:
 10881     0629  37B1               	asrf	(___fladd@b+3)^(0+128),f
 10882     062A  0CB0               	rrf	(___fladd@b+2)^(0+128),f
 10883     062B  0CAF               	rrf	(___fladd@b+1)^(0+128),f
 10884     062C  0CAE               	rrf	___fladd@b^(0+128),f
 10885     062D  0BB6               	decfsz	(??___fladd^(0+128))& (0+127),f
 10886     062E  2E29               	goto	u5285
 10887     062F                     l5488:
 10888     062F  3001               	movlw	1
 10889     0630  07C0               	addwf	___fladd@bexp^(0+128),f
 10890     0631  2EBC               	goto	l5526
 10891     0632                     l5490:
 10892     0632  0831               	movf	(___fladd@b+3)^(0+128),w
 10893     0633  3A80               	xorlw	128
 10894     0634  00B6               	movwf	??___fladd^(0+128)
 10895     0635  0835               	movf	(___fladd@a+3)^(0+128),w
 10896     0636  3A80               	xorlw	128
 10897     0637  0236               	subwf	??___fladd^(0+128),w
 10898     0638  1D03               	skipz
 10899     0639  2E44               	goto	u5293
 10900     063A  0834               	movf	(___fladd@a+2)^(0+128),w
 10901     063B  0230               	subwf	(___fladd@b+2)^(0+128),w
 10902     063C  1D03               	skipz
 10903     063D  2E44               	goto	u5293
 10904     063E  0833               	movf	(___fladd@a+1)^(0+128),w
 10905     063F  022F               	subwf	(___fladd@b+1)^(0+128),w
 10906     0640  1D03               	skipz
 10907     0641  2E44               	goto	u5293
 10908     0642  0832               	movf	___fladd@a^(0+128),w
 10909     0643  022E               	subwf	___fladd@b^(0+128),w
 10910     0644                     u5293:
 10911     0644  1803               	skipnc
 10912     0645  2E47               	goto	u5291
 10913     0646  2E48               	goto	u5290
 10914     0647                     u5291:
 10915     0647  2E7D               	goto	l5502
 10916     0648                     u5290:
 10917     0648                     l5492:
 10918     0648  30FF               	movlw	255
 10919     0649  00B6               	movwf	??___fladd^(0+128)
 10920     064A  30FF               	movlw	255
 10921     064B  00B7               	movwf	(??___fladd^(0+128)+1)
 10922     064C  30FF               	movlw	255
 10923     064D  00B8               	movwf	(??___fladd^(0+128)+2)
 10924     064E  30FF               	movlw	255
 10925     064F  00B9               	movwf	(??___fladd^(0+128)+3)
 10926     0650  082E               	movf	___fladd@b^(0+128),w
 10927     0651  0232               	subwf	___fladd@a^(0+128),w
 10928     0652  00BA               	movwf	(??___fladd+4)^(0+128)
 10929     0653  082F               	movf	(___fladd@b+1)^(0+128),w
 10930     0654  3B33               	subwfb	(___fladd@a+1)^(0+128),w
 10931     0655  00BB               	movwf	((??___fladd+4)^(0+128)+1)
 10932     0656  0830               	movf	(___fladd@b+2)^(0+128),w
 10933     0657  3B34               	subwfb	(___fladd@a+2)^(0+128),w
 10934     0658  00BC               	movwf	((??___fladd+4)^(0+128)+2)
 10935     0659  0831               	movf	(___fladd@b+3)^(0+128),w
 10936     065A  3B35               	subwfb	(___fladd@a+3)^(0+128),w
 10937     065B  00BD               	movwf	((??___fladd+4)^(0+128)+3)
 10938     065C  083A               	movf	(??___fladd+4)^(0+128),w
 10939     065D  07B6               	addwf	??___fladd^(0+128),f
 10940     065E  083B               	movf	(??___fladd+5)^(0+128),w
 10941     065F  3DB7               	addwfc	(??___fladd^(0+128)+1),f
 10942     0660  083C               	movf	(??___fladd+6)^(0+128),w
 10943     0661  3DB8               	addwfc	(??___fladd^(0+128)+2),f
 10944     0662  083D               	movf	(??___fladd+7)^(0+128),w
 10945     0663  3DB9               	addwfc	(??___fladd^(0+128)+3),f
 10946     0664  0839               	movf	(??___fladd+3)^(0+128),w
 10947     0665  00B1               	movwf	(___fladd@b+3)^(0+128)
 10948     0666  0838               	movf	(??___fladd+2)^(0+128),w
 10949     0667  00B0               	movwf	(___fladd@b+2)^(0+128)
 10950     0668  0837               	movf	(??___fladd+1)^(0+128),w
 10951     0669  00AF               	movwf	(___fladd@b+1)^(0+128)
 10952     066A  0836               	movf	??___fladd^(0+128),w
 10953     066B  00AE               	movwf	___fladd@b^(0+128)
 10954     066C                     l5494:
 10955     066C  3080               	movlw	128
 10956     066D  06BE               	xorwf	___fladd@signs^(0+128),f
 10957     066E                     l5496:
 10958     066E  0341               	decf	___fladd@grs^(0+128),w
 10959     066F  3AFF               	xorlw	255
 10960     0670  00C1               	movwf	___fladd@grs^(0+128)
 10961     0671                     l5498:
 10962     0671  0841               	movf	___fladd@grs^(0+128),w
 10963     0672  1D03               	btfss	3,2
 10964     0673  2E75               	goto	u5301
 10965     0674  2E76               	goto	u5300
 10966     0675                     u5301:
 10967     0675  2E85               	goto	l1760
 10968     0676                     u5300:
 10969     0676                     l5500:
 10970     0676  3001               	movlw	1
 10971     0677  07AE               	addwf	___fladd@b^(0+128),f
 10972     0678  3000               	movlw	0
 10973     0679  3DAF               	addwfc	(___fladd@b+1)^(0+128),f
 10974     067A  3DB0               	addwfc	(___fladd@b+2)^(0+128),f
 10975     067B  3DB1               	addwfc	(___fladd@b+3)^(0+128),f
 10976     067C  2E85               	goto	l1760
 10977     067D                     l5502:
 10978     067D  0832               	movf	___fladd@a^(0+128),w
 10979     067E  02AE               	subwf	___fladd@b^(0+128),f
 10980     067F  0833               	movf	(___fladd@a+1)^(0+128),w
 10981     0680  3BAF               	subwfb	(___fladd@b+1)^(0+128),f
 10982     0681  0834               	movf	(___fladd@a+2)^(0+128),w
 10983     0682  3BB0               	subwfb	(___fladd@b+2)^(0+128),f
 10984     0683  0835               	movf	(___fladd@a+3)^(0+128),w
 10985     0684  3BB1               	subwfb	(___fladd@b+3)^(0+128),f
 10986     0685                     l1760:
 10987     0685  0831               	movf	(___fladd@b+3)^(0+128),w
 10988     0686  0430               	iorwf	(___fladd@b+2)^(0+128),w
 10989     0687  042F               	iorwf	(___fladd@b+1)^(0+128),w
 10990     0688  042E               	iorwf	___fladd@b^(0+128),w
 10991     0689  1D03               	skipz
 10992     068A  2E8C               	goto	u5311
 10993     068B  2E8D               	goto	u5310
 10994     068C                     u5311:
 10995     068C  2EB8               	goto	l5524
 10996     068D                     u5310:
 10997     068D                     l5504:
 10998     068D  0841               	movf	___fladd@grs^(0+128),w
 10999     068E  1D03               	btfss	3,2
 11000     068F  2E91               	goto	u5321
 11001     0690  2E92               	goto	u5320
 11002     0691                     u5321:
 11003     0691  2EB8               	goto	l5524
 11004     0692                     u5320:
 11005     0692                     l5506:
 11006     0692  3000               	movlw	0
 11007     0693  00B1               	movwf	(?___fladd+3)^(0+128)
 11008     0694  3000               	movlw	0
 11009     0695  00B0               	movwf	(?___fladd+2)^(0+128)
 11010     0696  3000               	movlw	0
 11011     0697  00AF               	movwf	(?___fladd+1)^(0+128)
 11012     0698  3000               	movlw	0
 11013     0699  00AE               	movwf	?___fladd^(0+128)
 11014     069A  2F2A               	goto	l1752
 11015     069B                     l5510:
 11016     069B  3001               	movlw	1
 11017     069C                     u5335:
 11018     069C  35AE               	lslf	___fladd@b^(0+128),f
 11019     069D  0DAF               	rlf	(___fladd@b+1)^(0+128),f
 11020     069E  0DB0               	rlf	(___fladd@b+2)^(0+128),f
 11021     069F  0DB1               	rlf	(___fladd@b+3)^(0+128),f
 11022     06A0  0B89               	decfsz	9,f
 11023     06A1  2E9C               	goto	u5335
 11024     06A2                     l5512:
 11025     06A2  1FC1               	btfss	___fladd@grs^(0+128),7
 11026     06A3  2EA5               	goto	u5341
 11027     06A4  2EA6               	goto	u5340
 11028     06A5                     u5341:
 11029     06A5  2EA7               	goto	l1764
 11030     06A6                     u5340:
 11031     06A6                     l5514:
 11032     06A6  142E               	bsf	___fladd@b^(0+128),0
 11033     06A7                     l1764:
 11034     06A7  1C41               	btfss	___fladd@grs^(0+128),0
 11035     06A8  2EAA               	goto	u5351
 11036     06A9  2EAB               	goto	u5350
 11037     06AA                     u5351:
 11038     06AA  2EAF               	goto	l5518
 11039     06AB                     u5350:
 11040     06AB                     l5516:
 11041     06AB  1403               	setc
 11042     06AC  0D41               	rlf	___fladd@grs^(0+128),w
 11043     06AD  00C1               	movwf	___fladd@grs^(0+128)
 11044     06AE  2EB1               	goto	l5520
 11045     06AF                     l5518:
 11046     06AF  1003               	clrc
 11047     06B0  0DC1               	rlf	___fladd@grs^(0+128),f
 11048     06B1                     l5520:
 11049     06B1  0840               	movf	___fladd@bexp^(0+128),w
 11050     06B2  1903               	btfsc	3,2
 11051     06B3  2EB5               	goto	u5361
 11052     06B4  2EB6               	goto	u5360
 11053     06B5                     u5361:
 11054     06B5  2EB8               	goto	l5524
 11055     06B6                     u5360:
 11056     06B6                     l5522:
 11057     06B6  3001               	movlw	1
 11058     06B7  02C0               	subwf	___fladd@bexp^(0+128),f
 11059     06B8                     l5524:
 11060     06B8  1FB0               	btfss	(___fladd@b+2)^(0+128),7
 11061     06B9  2EBB               	goto	u5371
 11062     06BA  2EBC               	goto	u5370
 11063     06BB                     u5371:
 11064     06BB  2E9B               	goto	l5510
 11065     06BC                     u5370:
 11066     06BC                     l5526:
 11067     06BC  01BF               	clrf	___fladd@aexp^(0+128)
 11068     06BD                     l5528:
 11069     06BD  1FC1               	btfss	___fladd@grs^(0+128),7
 11070     06BE  2EC0               	goto	u5381
 11071     06BF  2EC1               	goto	u5380
 11072     06C0                     u5381:
 11073     06C0  2ECF               	goto	l5536
 11074     06C1                     u5380:
 11075     06C1                     l5530:
 11076     06C1  0841               	movf	___fladd@grs^(0+128),w
 11077     06C2  397F               	andlw	127
 11078     06C3  1903               	btfsc	3,2
 11079     06C4  2EC6               	goto	u5391
 11080     06C5  2EC7               	goto	u5390
 11081     06C6                     u5391:
 11082     06C6  2ECA               	goto	l1770
 11083     06C7                     u5390:
 11084     06C7                     l5532:
 11085     06C7  3001               	movlw	1
 11086     06C8  00BF               	movwf	___fladd@aexp^(0+128)
 11087     06C9  2ECF               	goto	l5536
 11088     06CA                     l1770:
 11089     06CA  1C2E               	btfss	___fladd@b^(0+128),0
 11090     06CB  2ECD               	goto	u5401
 11091     06CC  2ECE               	goto	u5400
 11092     06CD                     u5401:
 11093     06CD  2ECF               	goto	l5536
 11094     06CE                     u5400:
 11095     06CE  2EC7               	goto	l5532
 11096     06CF                     l5536:
 11097     06CF  083F               	movf	___fladd@aexp^(0+128),w
 11098     06D0  1903               	btfsc	3,2
 11099     06D1  2ED3               	goto	u5411
 11100     06D2  2ED4               	goto	u5410
 11101     06D3                     u5411:
 11102     06D3  2EFD               	goto	l1773
 11103     06D4                     u5410:
 11104     06D4                     l5538:
 11105     06D4  3001               	movlw	1
 11106     06D5  07AE               	addwf	___fladd@b^(0+128),f
 11107     06D6  3000               	movlw	0
 11108     06D7  3DAF               	addwfc	(___fladd@b+1)^(0+128),f
 11109     06D8  3DB0               	addwfc	(___fladd@b+2)^(0+128),f
 11110     06D9  3DB1               	addwfc	(___fladd@b+3)^(0+128),f
 11111     06DA                     l5540:
 11112     06DA  1C31               	btfss	(___fladd@b+3)^(0+128),0
 11113     06DB  2EDD               	goto	u5421
 11114     06DC  2EDE               	goto	u5420
 11115     06DD                     u5421:
 11116     06DD  2EFD               	goto	l1773
 11117     06DE                     u5420:
 11118     06DE                     l5542:
 11119     06DE  082E               	movf	___fladd@b^(0+128),w
 11120     06DF  00B6               	movwf	??___fladd^(0+128)
 11121     06E0  082F               	movf	(___fladd@b+1)^(0+128),w
 11122     06E1  00B7               	movwf	(??___fladd^(0+128)+1)
 11123     06E2  0830               	movf	(___fladd@b+2)^(0+128),w
 11124     06E3  00B8               	movwf	(??___fladd^(0+128)+2)
 11125     06E4  0831               	movf	(___fladd@b+3)^(0+128),w
 11126     06E5  00B9               	movwf	(??___fladd^(0+128)+3)
 11127     06E6  3001               	movlw	1
 11128     06E7  00BA               	movwf	(??___fladd+4)^(0+128)
 11129     06E8                     u5435:
 11130     06E8  37B9               	asrf	(??___fladd^(0+128)+3),f
 11131     06E9  0CB8               	rrf	(??___fladd^(0+128)+2),f
 11132     06EA  0CB7               	rrf	(??___fladd^(0+128)+1),f
 11133     06EB  0CB6               	rrf	??___fladd^(0+128),f
 11134     06EC                     u5430:
 11135     06EC  0BBA               	decfsz	(??___fladd+4)^(0+128),f
 11136     06ED  2EE8               	goto	u5435
 11137     06EE  0839               	movf	(??___fladd+3)^(0+128),w
 11138     06EF  00B1               	movwf	(___fladd@b+3)^(0+128)
 11139     06F0  0838               	movf	(??___fladd+2)^(0+128),w
 11140     06F1  00B0               	movwf	(___fladd@b+2)^(0+128)
 11141     06F2  0837               	movf	(??___fladd+1)^(0+128),w
 11142     06F3  00AF               	movwf	(___fladd@b+1)^(0+128)
 11143     06F4  0836               	movf	??___fladd^(0+128),w
 11144     06F5  00AE               	movwf	___fladd@b^(0+128)
 11145     06F6  0A40               	incf	___fladd@bexp^(0+128),w
 11146     06F7  1903               	btfsc	3,2
 11147     06F8  2EFA               	goto	u5441
 11148     06F9  2EFB               	goto	u5440
 11149     06FA                     u5441:
 11150     06FA  2EFD               	goto	l1773
 11151     06FB                     u5440:
 11152     06FB                     l5544:
 11153     06FB  3001               	movlw	1
 11154     06FC  07C0               	addwf	___fladd@bexp^(0+128),f
 11155     06FD                     l1773:
 11156     06FD  0A40               	incf	___fladd@bexp^(0+128),w
 11157     06FE  1903               	btfsc	3,2
 11158     06FF  2F01               	goto	u5451
 11159     0700  2F02               	goto	u5450
 11160     0701                     u5451:
 11161     0701  2F07               	goto	l5548
 11162     0702                     u5450:
 11163     0702                     l5546:
 11164     0702  0840               	movf	___fladd@bexp^(0+128),w
 11165     0703  1D03               	btfss	3,2
 11166     0704  2F06               	goto	u5461
 11167     0705  2F07               	goto	u5460
 11168     0706                     u5461:
 11169     0706  2F15               	goto	l5554
 11170     0707                     u5460:
 11171     0707                     l5548:
 11172     0707  3000               	movlw	0
 11173     0708  00B1               	movwf	(___fladd@b+3)^(0+128)
 11174     0709  3000               	movlw	0
 11175     070A  00B0               	movwf	(___fladd@b+2)^(0+128)
 11176     070B  3000               	movlw	0
 11177     070C  00AF               	movwf	(___fladd@b+1)^(0+128)
 11178     070D  3000               	movlw	0
 11179     070E  00AE               	movwf	___fladd@b^(0+128)
 11180     070F                     l5550:
 11181     070F  0840               	movf	___fladd@bexp^(0+128),w
 11182     0710  1D03               	btfss	3,2
 11183     0711  2F13               	goto	u5471
 11184     0712  2F14               	goto	u5470
 11185     0713                     u5471:
 11186     0713  2F15               	goto	l5554
 11187     0714                     u5470:
 11188     0714                     l5552:
 11189     0714  01BE               	clrf	___fladd@signs^(0+128)
 11190     0715                     l5554:
 11191     0715  1C40               	btfss	___fladd@bexp^(0+128),0
 11192     0716  2F18               	goto	u5481
 11193     0717  2F19               	goto	u5480
 11194     0718                     u5481:
 11195     0718  2F1B               	goto	l5558
 11196     0719                     u5480:
 11197     0719                     l5556:
 11198     0719  17B0               	bsf	(___fladd@b^(0+128)+2),7
 11199     071A  2F1D               	goto	l1781
 11200     071B                     l5558:
 11201     071B  307F               	movlw	127
 11202     071C  05B0               	andwf	(___fladd@b^(0+128)+2),f
 11203     071D                     l1781:
 11204     071D  0840               	movf	___fladd@bexp^(0+128),w
 11205     071E  00B6               	movwf	??___fladd^(0+128)
 11206     071F  3001               	movlw	1
 11207     0720                     u5495:
 11208     0720  36B6               	lsrf	??___fladd^(0+128),f
 11209     0721  0B89               	decfsz	9,f
 11210     0722  2F20               	goto	u5495
 11211     0723  0836               	movf	??___fladd^(0+128),w
 11212     0724  00B1               	movwf	(___fladd@b^(0+128)+3)
 11213     0725                     l5560:
 11214     0725  1FBE               	btfss	___fladd@signs^(0+128),7
 11215     0726  2F28               	goto	u5501
 11216     0727  2F29               	goto	u5500
 11217     0728                     u5501:
 11218     0728  2F2A               	goto	l1782
 11219     0729                     u5500:
 11220     0729                     l5562:
 11221     0729  17B1               	bsf	(___fladd@b^(0+128)+3),7
 11222     072A                     l1782:
 11223     072A                     l1752:
 11224     072A  0008               	return
 11225     072B                     __end_of___fladd:
 11226                           
 11227                           	psect	text8
 11228     1EBD                     __ptext8:	
 11229 ;; *************** function _setSetpoint *****************
 11230 ;; Defined at:
 11231 ;;		line 45 in file "controller.c"
 11232 ;; Parameters:    Size  Location     Type
 11233 ;;  new_setpoint    2   13[BANK1 ] unsigned short 
 11234 ;; Auto vars:     Size  Location     Type
 11235 ;;		None
 11236 ;; Return value:  Size  Location     Type
 11237 ;;                  1    wreg      void 
 11238 ;; Registers used:
 11239 ;;		wreg
 11240 ;; Tracked objects:
 11241 ;;		On entry : 0/0
 11242 ;;		On exit  : 0/0
 11243 ;;		Unchanged: 0/0
 11244 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 11245 ;;      Params:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0
 11246 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11247 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11248 ;;      Totals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0
 11249 ;;Total ram usage:        2 bytes
 11250 ;; Hardware stack levels used: 1
 11251 ;; Hardware stack levels required when called: 7
 11252 ;; This function calls:
 11253 ;;		Nothing
 11254 ;; This function is called by:
 11255 ;;		_uartHandler
 11256 ;; This function uses a non-reentrant model
 11257 ;;
 11258                           
 11259     1EBD                     _setSetpoint:	
 11260                           ;psect for function _setSetpoint
 11261                           
 11262     1EBD                     l6550:	
 11263                           ;incstack = 0
 11264                           ; Regs used in _setSetpoint: [wreg]
 11265                           
 11266     1EBD  0021               	movlb	1	; select bank1
 11267     1EBE  082E               	movf	(setSetpoint@new_setpoint+1)^(0+128),w
 11268     1EBF  0022               	movlb	2	; select bank2
 11269     1EC0  00EF               	movwf	(_setpoint+1)^(0+256)
 11270     1EC1  0021               	movlb	1	; select bank1
 11271     1EC2  082D               	movf	setSetpoint@new_setpoint^(0+128),w
 11272     1EC3  0022               	movlb	2	; select bank2
 11273     1EC4  00EE               	movwf	_setpoint^(0+256)
 11274     1EC5                     l953:
 11275     1EC5  0008               	return
 11276     1EC6                     __end_of_setSetpoint:
 11277                           
 11278                           	psect	text9
 11279     1FC5                     __ptext9:	
 11280 ;; *************** function _setKp *****************
 11281 ;; Defined at:
 11282 ;;		line 47 in file "controller.c"
 11283 ;; Parameters:    Size  Location     Type
 11284 ;;  new_kp          4   47[BANK1 ] float 
 11285 ;; Auto vars:     Size  Location     Type
 11286 ;;		None
 11287 ;; Return value:  Size  Location     Type
 11288 ;;                  1    wreg      void 
 11289 ;; Registers used:
 11290 ;;		wreg
 11291 ;; Tracked objects:
 11292 ;;		On entry : 0/0
 11293 ;;		On exit  : 0/0
 11294 ;;		Unchanged: 0/0
 11295 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 11296 ;;      Params:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0
 11297 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11298 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11299 ;;      Totals:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0
 11300 ;;Total ram usage:        4 bytes
 11301 ;; Hardware stack levels used: 1
 11302 ;; Hardware stack levels required when called: 7
 11303 ;; This function calls:
 11304 ;;		Nothing
 11305 ;; This function is called by:
 11306 ;;		_uartHandler
 11307 ;; This function uses a non-reentrant model
 11308 ;;
 11309                           
 11310     1FC5                     _setKp:	
 11311                           ;psect for function _setKp
 11312                           
 11313     1FC5                     l6552:	
 11314                           ;incstack = 0
 11315                           ; Regs used in _setKp: [wreg]
 11316                           
 11317     1FC5  0021               	movlb	1	; select bank1
 11318     1FC6  0852               	movf	(setKp@new_kp+3)^(0+128),w
 11319     1FC7  0022               	movlb	2	; select bank2
 11320     1FC8  00ED               	movwf	(_kp+3)^(0+256)
 11321     1FC9  0021               	movlb	1	; select bank1
 11322     1FCA  0851               	movf	(setKp@new_kp+2)^(0+128),w
 11323     1FCB  0022               	movlb	2	; select bank2
 11324     1FCC  00EC               	movwf	(_kp+2)^(0+256)
 11325     1FCD  0021               	movlb	1	; select bank1
 11326     1FCE  0850               	movf	(setKp@new_kp+1)^(0+128),w
 11327     1FCF  0022               	movlb	2	; select bank2
 11328     1FD0  00EB               	movwf	(_kp+1)^(0+256)
 11329     1FD1  0021               	movlb	1	; select bank1
 11330     1FD2  084F               	movf	setKp@new_kp^(0+128),w
 11331     1FD3  0022               	movlb	2	; select bank2
 11332     1FD4  00EA               	movwf	_kp^(0+256)
 11333     1FD5                     l959:
 11334     1FD5  0008               	return
 11335     1FD6                     __end_of_setKp:
 11336                           
 11337                           	psect	text10
 11338     1FB4                     __ptext10:	
 11339 ;; *************** function _setKi *****************
 11340 ;; Defined at:
 11341 ;;		line 48 in file "controller.c"
 11342 ;; Parameters:    Size  Location     Type
 11343 ;;  new_ki          4   47[BANK1 ] float 
 11344 ;; Auto vars:     Size  Location     Type
 11345 ;;		None
 11346 ;; Return value:  Size  Location     Type
 11347 ;;                  1    wreg      void 
 11348 ;; Registers used:
 11349 ;;		wreg
 11350 ;; Tracked objects:
 11351 ;;		On entry : 0/0
 11352 ;;		On exit  : 0/0
 11353 ;;		Unchanged: 0/0
 11354 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 11355 ;;      Params:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0
 11356 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11357 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11358 ;;      Totals:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0
 11359 ;;Total ram usage:        4 bytes
 11360 ;; Hardware stack levels used: 1
 11361 ;; Hardware stack levels required when called: 7
 11362 ;; This function calls:
 11363 ;;		Nothing
 11364 ;; This function is called by:
 11365 ;;		_uartHandler
 11366 ;; This function uses a non-reentrant model
 11367 ;;
 11368                           
 11369     1FB4                     _setKi:	
 11370                           ;psect for function _setKi
 11371                           
 11372     1FB4                     l6554:	
 11373                           ;incstack = 0
 11374                           ; Regs used in _setKi: [wreg]
 11375                           
 11376     1FB4  0021               	movlb	1	; select bank1
 11377     1FB5  0852               	movf	(setKi@new_ki+3)^(0+128),w
 11378     1FB6  0022               	movlb	2	; select bank2
 11379     1FB7  00E9               	movwf	(_ki+3)^(0+256)
 11380     1FB8  0021               	movlb	1	; select bank1
 11381     1FB9  0851               	movf	(setKi@new_ki+2)^(0+128),w
 11382     1FBA  0022               	movlb	2	; select bank2
 11383     1FBB  00E8               	movwf	(_ki+2)^(0+256)
 11384     1FBC  0021               	movlb	1	; select bank1
 11385     1FBD  0850               	movf	(setKi@new_ki+1)^(0+128),w
 11386     1FBE  0022               	movlb	2	; select bank2
 11387     1FBF  00E7               	movwf	(_ki+1)^(0+256)
 11388     1FC0  0021               	movlb	1	; select bank1
 11389     1FC1  084F               	movf	setKi@new_ki^(0+128),w
 11390     1FC2  0022               	movlb	2	; select bank2
 11391     1FC3  00E6               	movwf	_ki^(0+256)
 11392     1FC4                     l962:
 11393     1FC4  0008               	return
 11394     1FC5                     __end_of_setKi:
 11395                           
 11396                           	psect	text11
 11397     146F                     __ptext11:	
 11398 ;; *************** function _readLine *****************
 11399 ;; Defined at:
 11400 ;;		line 50 in file "UART.c"
 11401 ;; Parameters:    Size  Location     Type
 11402 ;;		None
 11403 ;; Auto vars:     Size  Location     Type
 11404 ;;		None
 11405 ;; Return value:  Size  Location     Type
 11406 ;;                  1   72[BANK1 ] PTR unsigned char 
 11407 ;; Registers used:
 11408 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 11409 ;; Tracked objects:
 11410 ;;		On entry : 0/0
 11411 ;;		On exit  : 0/0
 11412 ;;		Unchanged: 0/0
 11413 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 11414 ;;      Params:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0
 11415 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11416 ;;      Temps:          0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0
 11417 ;;      Totals:         0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0
 11418 ;;Total ram usage:        3 bytes
 11419 ;; Hardware stack levels used: 1
 11420 ;; Hardware stack levels required when called: 16
 11421 ;; This function calls:
 11422 ;;		_EUSART_IsRxReady
 11423 ;;		_EUSART_Read
 11424 ;;		_printf
 11425 ;; This function is called by:
 11426 ;;		_uartHandler
 11427 ;; This function uses a non-reentrant model
 11428 ;;
 11429                           
 11430     146F                     _readLine:	
 11431                           ;psect for function _readLine
 11432                           
 11433     146F                     l883:	
 11434                           ;incstack = 0
 11435 ;; hardware stack exceeded
 11436                           ; Regs used in _readLine: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 11437                           ;UART.c: 51:     static uint8_t index = 0;;UART.c: 52:     while (1) {
 11438                           
 11439     146F                     l6474:
 11440                           
 11441                           ;UART.c: 53:         if (!EUSART_IsRxReady()) {
 11442     146F  319E  26B4  3194   	fcall	_EUSART_IsRxReady
 11443     1472  3A00               	xorlw	0
 11444     1473  1D03               	skipz
 11445     1474  2C76               	goto	u7151
 11446     1475  2C77               	goto	u7150
 11447     1476                     u7151:
 11448     1476  2C81               	goto	l6482
 11449     1477                     u7150:
 11450     1477                     l6476:
 11451                           
 11452                           ;UART.c: 54:             line[index] = 0;
 11453     1477  0020               	movlb	0	; select bank0
 11454     1478  0867               	movf	readLine@index,w
 11455     1479  3EC0               	addlw	(low (_line| (0+256)))& (0+255)
 11456     147A  0086               	movwf	6
 11457     147B  3001               	movlw	1	; select bank3/4
 11458     147C  0087               	movwf	7
 11459     147D  0181               	clrf	1
 11460     147E                     l6478:
 11461                           
 11462                           ;UART.c: 55:             return line + index;
 11463     147E  0867               	movf	readLine@index,w
 11464     147F  3EC0               	addlw	(low (_line| (0+256)))& (0+255)
 11465     1480  2CC7               	goto	l885
 11466     1481                     l6482:
 11467                           
 11468                           ;UART.c: 57:         if (index >= 20 - 1) {
 11469     1481  3013               	movlw	19
 11470     1482  0020               	movlb	0	; select bank0
 11471     1483  0267               	subwf	readLine@index,w
 11472     1484  1C03               	skipc
 11473     1485  2C87               	goto	u7161
 11474     1486  2C88               	goto	u7160
 11475     1487                     u7161:
 11476     1487  2CA2               	goto	l6500
 11477     1488                     u7160:
 11478     1488  2C8C               	goto	l6488
 11479     1489                     l6486:
 11480                           
 11481                           ;UART.c: 59:                 EUSART_Read();
 11482     1489  3187  27E0  3194   	fcall	_EUSART_Read
 11483     148C                     l6488:
 11484                           
 11485                           ;UART.c: 58:             while (EUSART_IsRxReady()) {
 11486     148C  319E  26B4  3194   	fcall	_EUSART_IsRxReady
 11487     148F  3A00               	xorlw	0
 11488     1490  1D03               	skipz
 11489     1491  2C93               	goto	u7171
 11490     1492  2C94               	goto	u7170
 11491     1493                     u7171:
 11492     1493  2C89               	goto	l6486
 11493     1494                     u7170:
 11494     1494                     l6490:
 11495                           
 11496                           ;UART.c: 61:             printf("input buffer overflow\r\n");
 11497     1494  3065               	movlw	low (STR_3| (0+32768))
 11498     1495  0021               	movlb	1	; select bank1
 11499     1496  00E1               	movwf	printf@fmt^(0+128)
 11500     1497  3098               	movlw	high (STR_3| (0+32768))
 11501     1498  00E2               	movwf	(printf@fmt^(0+128)+1)
 11502     1499  319F  2771  3194   	fcall	_printf
 11503     149C                     l6492:
 11504                           
 11505                           ;UART.c: 62:             index = 0;
 11506     149C  0020               	movlb	0	; select bank0
 11507     149D  01E7               	clrf	readLine@index
 11508     149E                     l6494:
 11509                           
 11510                           ;UART.c: 63:             line[index] = 0;
 11511     149E  0023               	movlb	3	; select bank3
 11512     149F  01C0               	clrf	_line^(0+384)
 11513     14A0                     l6496:
 11514                           
 11515                           ;UART.c: 64:             return line;
 11516     14A0  30C0               	movlw	(low (_line| (0+256)))& (0+255)
 11517     14A1  2CC7               	goto	l885
 11518     14A2                     l6500:
 11519                           
 11520                           ;UART.c: 67:         line[index] = EUSART_Read();
 11521     14A2  3187  27E0  3194   	fcall	_EUSART_Read
 11522     14A5  0021               	movlb	1	; select bank1
 11523     14A6  00EA               	movwf	??_readLine^(0+128)
 11524     14A7  0020               	movlb	0	; select bank0
 11525     14A8  0867               	movf	readLine@index,w
 11526     14A9  3EC0               	addlw	(low (_line| (0+256)))& (0+255)
 11527     14AA  0086               	movwf	6
 11528     14AB  3001               	movlw	1	; select bank3/4
 11529     14AC  0087               	movwf	7
 11530     14AD  0021               	movlb	1	; select bank1
 11531     14AE  086A               	movf	??_readLine^(0+128),w
 11532     14AF  0081               	movwf	1
 11533     14B0                     l6502:
 11534                           
 11535                           ;UART.c: 68:         if (line[index] == '\n') {
 11536     14B0  0020               	movlb	0	; select bank0
 11537     14B1  0867               	movf	readLine@index,w
 11538     14B2  3EC0               	addlw	(low (_line| (0+256)))& (0+255)
 11539     14B3  0086               	movwf	6
 11540     14B4  3001               	movlw	1	; select bank3/4
 11541     14B5  0087               	movwf	7
 11542     14B6  300A               	movlw	10
 11543     14B7  0601               	xorwf	1,w
 11544     14B8  1D03               	btfss	3,2
 11545     14B9  2CBB               	goto	u7181
 11546     14BA  2CBC               	goto	u7180
 11547     14BB                     u7181:
 11548     14BB  2CC4               	goto	l6512
 11549     14BC                     u7180:
 11550     14BC                     l6504:
 11551                           
 11552                           ;UART.c: 69:             line[index + 1] = 0;
 11553     14BC  0867               	movf	readLine@index,w
 11554     14BD  3EC1               	addlw	(low ((_line| (0+256)+1)))& (0+255)
 11555     14BE  0086               	movwf	6
 11556     14BF  3001               	movlw	1	; select bank3/4
 11557     14C0  0087               	movwf	7
 11558     14C1  0181               	clrf	1
 11559     14C2                     l6506:
 11560                           
 11561                           ;UART.c: 70:             index = 0;
 11562     14C2  01E7               	clrf	readLine@index
 11563     14C3  2CA0               	goto	l6496
 11564     14C4                     l6512:
 11565                           
 11566                           ;UART.c: 73:         index++;
 11567     14C4  3001               	movlw	1
 11568     14C5  07E7               	addwf	readLine@index,f
 11569     14C6  2C6F               	goto	l883
 11570     14C7                     l885:
 11571     14C7  0008               	return
 11572     14C8                     __end_of_readLine:
 11573                           
 11574                           	psect	text12
 11575     07E0                     __ptext12:	
 11576 ;; *************** function _EUSART_Read *****************
 11577 ;; Defined at:
 11578 ;;		line 288 in file "mcc_generated_files/uart/src/eusart.c"
 11579 ;; Parameters:    Size  Location     Type
 11580 ;;		None
 11581 ;; Auto vars:     Size  Location     Type
 11582 ;;  readValue       1    1[BANK1 ] unsigned char 
 11583 ;;  tempRxTail      1    0[BANK1 ] unsigned char 
 11584 ;; Return value:  Size  Location     Type
 11585 ;;                  1    wreg      unsigned char 
 11586 ;; Registers used:
 11587 ;;		wreg, fsr1l, fsr1h, status,2, status,0
 11588 ;; Tracked objects:
 11589 ;;		On entry : 0/0
 11590 ;;		On exit  : 0/0
 11591 ;;		Unchanged: 0/0
 11592 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 11593 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11594 ;;      Locals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0
 11595 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11596 ;;      Totals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0
 11597 ;;Total ram usage:        2 bytes
 11598 ;; Hardware stack levels used: 1
 11599 ;; Hardware stack levels required when called: 7
 11600 ;; This function calls:
 11601 ;;		Nothing
 11602 ;; This function is called by:
 11603 ;;		_readLine
 11604 ;;		_getch
 11605 ;; This function uses a non-reentrant model
 11606 ;;
 11607                           
 11608     07E0                     _EUSART_Read:	
 11609                           ;psect for function _EUSART_Read
 11610                           
 11611     07E0                     l5202:	
 11612                           ;incstack = 0
 11613                           ; Regs used in _EUSART_Read: [wreg+fsr1l+fsr1h+status,2+status,0]
 11614                           
 11615     07E0                     l5204:
 11616                           
 11617                           ;mcc_generated_files/uart/src/eusart.c: 291:     uint8_t tempRxTail;;mcc_generated_files
      +                          /uart/src/eusart.c: 293:     readValue = eusartRxBuffer[eusartRxTail];
 11618     07E0  0020               	movlb	0	; select bank0
 11619     07E1  0869               	movf	_eusartRxTail,w
 11620     07E2  3E30               	addlw	(low (_eusartRxBuffer| (0+256)))& (0+255)
 11621     07E3  0086               	movwf	6
 11622     07E4  3001               	movlw	1	; select bank2/3
 11623     07E5  0087               	movwf	7
 11624     07E6  0801               	movf	1,w
 11625     07E7  0021               	movlb	1	; select bank1
 11626     07E8  00A1               	movwf	EUSART_Read@readValue^(0+128)
 11627     07E9                     l5206:
 11628                           
 11629                           ;mcc_generated_files/uart/src/eusart.c: 295:     tempRxTail = (eusartRxTail + 1U) & ((8U
      +                          ) - 1U);
 11630     07E9  0020               	movlb	0	; select bank0
 11631     07EA  0869               	movf	_eusartRxTail,w	;volatile
 11632     07EB  3E01               	addlw	1
 11633     07EC  3907               	andlw	7
 11634     07ED  0021               	movlb	1	; select bank1
 11635     07EE  00A0               	movwf	EUSART_Read@tempRxTail^(0+128)
 11636     07EF                     l5208:
 11637                           
 11638                           ;mcc_generated_files/uart/src/eusart.c: 297:     eusartRxTail = tempRxTail;
 11639     07EF  0820               	movf	EUSART_Read@tempRxTail^(0+128),w
 11640     07F0  0020               	movlb	0	; select bank0
 11641     07F1  00E9               	movwf	_eusartRxTail	;volatile
 11642     07F2                     l5210:
 11643                           
 11644                           ;mcc_generated_files/uart/src/eusart.c: 299:     PIE1bits.RCIE = 0;
 11645     07F2  0021               	movlb	1	; select bank1
 11646     07F3  1291               	bcf	17,5	;volatile
 11647     07F4                     l5212:
 11648                           
 11649                           ;mcc_generated_files/uart/src/eusart.c: 300:     if(0U != eusartRxCount)
 11650     07F4  0020               	movlb	0	; select bank0
 11651     07F5  0868               	movf	_eusartRxCount,w	;volatile
 11652     07F6  1903               	btfsc	3,2
 11653     07F7  2FF9               	goto	u4891
 11654     07F8  2FFA               	goto	u4890
 11655     07F9                     u4891:
 11656     07F9  2FFC               	goto	l5216
 11657     07FA                     u4890:
 11658     07FA                     l5214:
 11659                           
 11660                           ;mcc_generated_files/uart/src/eusart.c: 301:     {;mcc_generated_files/uart/src/eusart.c
      +                          : 302:         eusartRxCount--;
 11661     07FA  3001               	movlw	1
 11662     07FB  02E8               	subwf	_eusartRxCount,f	;volatile
 11663     07FC                     l5216:
 11664                           
 11665                           ;mcc_generated_files/uart/src/eusart.c: 304:     PIE1bits.RCIE = 1;
 11666     07FC  0021               	movlb	1	; select bank1
 11667     07FD  1691               	bsf	17,5	;volatile
 11668     07FE                     l5218:
 11669                           
 11670                           ;mcc_generated_files/uart/src/eusart.c: 305:     return readValue;
 11671     07FE  0821               	movf	EUSART_Read@readValue^(0+128),w
 11672     07FF                     l719:
 11673     07FF  0008               	return
 11674     0800                     __end_of_EUSART_Read:
 11675                           
 11676                           	psect	text13
 11677     1EB4                     __ptext13:	
 11678 ;; *************** function _EUSART_IsRxReady *****************
 11679 ;; Defined at:
 11680 ;;		line 267 in file "mcc_generated_files/uart/src/eusart.c"
 11681 ;; Parameters:    Size  Location     Type
 11682 ;;		None
 11683 ;; Auto vars:     Size  Location     Type
 11684 ;;		None
 11685 ;; Return value:  Size  Location     Type
 11686 ;;                  1    wreg      _Bool 
 11687 ;; Registers used:
 11688 ;;		wreg, status,2, status,0
 11689 ;; Tracked objects:
 11690 ;;		On entry : 0/0
 11691 ;;		On exit  : 0/0
 11692 ;;		Unchanged: 0/0
 11693 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 11694 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11695 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11696 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11697 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11698 ;;Total ram usage:        0 bytes
 11699 ;; Hardware stack levels used: 1
 11700 ;; Hardware stack levels required when called: 7
 11701 ;; This function calls:
 11702 ;;		Nothing
 11703 ;; This function is called by:
 11704 ;;		_readLine
 11705 ;;		_getch
 11706 ;; This function uses a non-reentrant model
 11707 ;;
 11708                           
 11709     1EB4                     _EUSART_IsRxReady:	
 11710                           ;psect for function _EUSART_IsRxReady
 11711                           
 11712     1EB4                     l5198:	
 11713                           ;incstack = 0
 11714                           ; Regs used in _EUSART_IsRxReady: [wreg+status,2+status,0]
 11715                           
 11716                           
 11717                           ;mcc_generated_files/uart/src/eusart.c: 269:     return (eusartRxCount ? 1 : 0);
 11718     1EB4  0020               	movlb	0	; select bank0
 11719     1EB5  0868               	movf	_eusartRxCount,w	;volatile
 11720     1EB6  1D03               	btfss	3,2
 11721     1EB7  2EB9               	goto	u4871
 11722     1EB8  2EBB               	goto	u4870
 11723     1EB9                     u4871:
 11724     1EB9  3001               	movlw	1
 11725     1EBA  2EBC               	goto	u4880
 11726     1EBB                     u4870:
 11727     1EBB  3000               	movlw	0
 11728     1EBC                     u4880:
 11729     1EBC                     l706:
 11730     1EBC  0008               	return
 11731     1EBD                     __end_of_EUSART_IsRxReady:
 11732                           
 11733                           	psect	text14
 11734     080F                     __ptext14:	
 11735 ;; *************** function _atoi *****************
 11736 ;; Defined at:
 11737 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\atoi.c"
 11738 ;; Parameters:    Size  Location     Type
 11739 ;;  s               1    6[BANK1 ] PTR const unsigned char 
 11740 ;;		 -> line(20), 
 11741 ;; Auto vars:     Size  Location     Type
 11742 ;;  n               2   11[BANK1 ] int 
 11743 ;;  neg             1   10[BANK1 ] _Bool 
 11744 ;; Return value:  Size  Location     Type
 11745 ;;                  2    6[BANK1 ] int 
 11746 ;; Registers used:
 11747 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 11748 ;; Tracked objects:
 11749 ;;		On entry : 0/0
 11750 ;;		On exit  : 0/0
 11751 ;;		Unchanged: 0/0
 11752 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 11753 ;;      Params:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0
 11754 ;;      Locals:         0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0
 11755 ;;      Temps:          0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0
 11756 ;;      Totals:         0       0       7       0       0       0       0       0       0       0       0       0       
      +0       0
 11757 ;;Total ram usage:        7 bytes
 11758 ;; Hardware stack levels used: 1
 11759 ;; Hardware stack levels required when called: 8
 11760 ;; This function calls:
 11761 ;;		___wmul
 11762 ;; This function is called by:
 11763 ;;		_uartHandler
 11764 ;; This function uses a non-reentrant model
 11765 ;;
 11766                           
 11767     080F                     _atoi:	
 11768                           ;psect for function _atoi
 11769                           
 11770     080F                     l6518:	
 11771                           ;incstack = 0
 11772                           ; Regs used in _atoi: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
 11773                           
 11774     080F  0021               	movlb	1	; select bank1
 11775     0810  01AB               	clrf	atoi@n^(0+128)
 11776     0811  01AC               	clrf	(atoi@n+1)^(0+128)
 11777     0812  01AA               	clrf	atoi@neg^(0+128)
 11778     0813  2816               	goto	l6522
 11779     0814                     l6520:
 11780     0814  3001               	movlw	1
 11781     0815  07A6               	addwf	atoi@s^(0+128),f
 11782     0816                     l6522:
 11783     0816  0826               	movf	atoi@s^(0+128),w
 11784     0817  0086               	movwf	6
 11785     0818  3001               	movlw	1	; select bank2/3
 11786     0819  0087               	movwf	7
 11787     081A  3020               	movlw	32
 11788     081B  0601               	xorwf	1,w
 11789     081C  1903               	btfsc	3,2
 11790     081D  281F               	goto	u7191
 11791     081E  2820               	goto	u7190
 11792     081F                     u7191:
 11793     081F  2814               	goto	l6520
 11794     0820                     u7190:
 11795     0820                     l6524:
 11796     0820  0826               	movf	atoi@s^(0+128),w
 11797     0821  0086               	movwf	6
 11798     0822  3001               	movlw	1	; select bank2/3
 11799     0823  0087               	movwf	7
 11800     0824  30F7               	movlw	247
 11801     0825  0701               	addwf	1,w
 11802     0826  00A8               	movwf	??_atoi^(0+128)
 11803     0827  3005               	movlw	5
 11804     0828  0228               	subwf	??_atoi^(0+128),w
 11805     0829  1C03               	skipc
 11806     082A  282C               	goto	u7201
 11807     082B  282D               	goto	u7200
 11808     082C                     u7201:
 11809     082C  2814               	goto	l6520
 11810     082D                     u7200:
 11811     082D                     l6526:
 11812     082D  0826               	movf	atoi@s^(0+128),w
 11813     082E  0086               	movwf	6
 11814     082F  3001               	movlw	1	; select bank2/3
 11815     0830  0087               	movwf	7
 11816     0831  302D               	movlw	45
 11817     0832  0601               	xorwf	1,w
 11818     0833  1D03               	btfss	3,2
 11819     0834  2836               	goto	u7211
 11820     0835  2837               	goto	u7210
 11821     0836                     u7211:
 11822     0836  283C               	goto	l6532
 11823     0837                     u7210:
 11824     0837                     l6528:
 11825     0837  3001               	movlw	1
 11826     0838  00AA               	movwf	atoi@neg^(0+128)
 11827     0839                     l6530:
 11828     0839  3001               	movlw	1
 11829     083A  07A6               	addwf	atoi@s^(0+128),f
 11830     083B  2865               	goto	l6540
 11831     083C                     l6532:
 11832     083C  0826               	movf	atoi@s^(0+128),w
 11833     083D  0086               	movwf	6
 11834     083E  3001               	movlw	1	; select bank2/3
 11835     083F  0087               	movwf	7
 11836     0840  302B               	movlw	43
 11837     0841  0601               	xorwf	1,w
 11838     0842  1D03               	btfss	3,2
 11839     0843  2845               	goto	u7221
 11840     0844  2846               	goto	u7220
 11841     0845                     u7221:
 11842     0845  2865               	goto	l6540
 11843     0846                     u7220:
 11844     0846  2839               	goto	l6530
 11845     0847                     l6536:
 11846     0847  0826               	movf	atoi@s^(0+128),w
 11847     0848  0086               	movwf	6
 11848     0849  3001               	movlw	1	; select bank2/3
 11849     084A  0087               	movwf	7
 11850     084B  082C               	movf	(atoi@n+1)^(0+128),w
 11851     084C  00A1               	movwf	(___wmul@multiplier+1)^(0+128)
 11852     084D  082B               	movf	atoi@n^(0+128),w
 11853     084E  00A0               	movwf	___wmul@multiplier^(0+128)
 11854     084F  300A               	movlw	10
 11855     0850  00A2               	movwf	___wmul@multiplicand^(0+128)
 11856     0851  3000               	movlw	0
 11857     0852  00A3               	movwf	(___wmul@multiplicand^(0+128)+1)
 11858     0853  3190  2077  3188   	fcall	___wmul
 11859     0856  0021               	movlb	1	; select bank1
 11860     0857  0821               	movf	(?___wmul+1)^(0+128),w
 11861     0858  00A9               	movwf	(??_atoi^(0+128)+1)
 11862     0859  0801               	movf	1,w
 11863     085A  0220               	subwf	?___wmul^(0+128),w
 11864     085B  00A8               	movwf	??_atoi^(0+128)
 11865     085C  1C03               	skipc
 11866     085D  03A9               	decf	(??_atoi^(0+128)+1),f
 11867     085E  0828               	movf	??_atoi^(0+128),w
 11868     085F  3E30               	addlw	48
 11869     0860  00AB               	movwf	atoi@n^(0+128)
 11870     0861  3000               	movlw	0
 11871     0862  3D29               	addwfc	(??_atoi+1)^(0+128),w
 11872     0863  00AC               	movwf	(atoi@n+1)^(0+128)
 11873     0864  2839               	goto	l6530
 11874     0865                     l6540:
 11875     0865  0826               	movf	atoi@s^(0+128),w
 11876     0866  0086               	movwf	6
 11877     0867  3001               	movlw	1	; select bank2/3
 11878     0868  0087               	movwf	7
 11879     0869  30D0               	movlw	208
 11880     086A  0701               	addwf	1,w
 11881     086B  00A8               	movwf	??_atoi^(0+128)
 11882     086C  300A               	movlw	10
 11883     086D  0228               	subwf	??_atoi^(0+128),w
 11884     086E  1C03               	skipc
 11885     086F  2871               	goto	u7231
 11886     0870  2872               	goto	u7230
 11887     0871                     u7231:
 11888     0871  2847               	goto	l6536
 11889     0872                     u7230:
 11890     0872                     l6542:
 11891     0872  082A               	movf	atoi@neg^(0+128),w
 11892     0873  1D03               	btfss	3,2
 11893     0874  2876               	goto	u7241
 11894     0875  2877               	goto	u7240
 11895     0876                     u7241:
 11896     0876  2883               	goto	l6546
 11897     0877                     u7240:
 11898     0877                     l6544:
 11899     0877  092B               	comf	atoi@n^(0+128),w
 11900     0878  00A8               	movwf	??_atoi^(0+128)
 11901     0879  092C               	comf	(atoi@n+1)^(0+128),w
 11902     087A  00A9               	movwf	(??_atoi^(0+128)+1)
 11903     087B  0AA8               	incf	??_atoi^(0+128),f
 11904     087C  1903               	skipnz
 11905     087D  0AA9               	incf	(??_atoi^(0+128)+1),f
 11906     087E  0828               	movf	??_atoi^(0+128),w
 11907     087F  00A6               	movwf	?_atoi^(0+128)
 11908     0880  0829               	movf	(??_atoi+1)^(0+128),w
 11909     0881  00A7               	movwf	(?_atoi+1)^(0+128)
 11910     0882  2887               	goto	l1910
 11911     0883                     l6546:
 11912     0883  082C               	movf	(atoi@n+1)^(0+128),w
 11913     0884  00A7               	movwf	(?_atoi+1)^(0+128)
 11914     0885  082B               	movf	atoi@n^(0+128),w
 11915     0886  00A6               	movwf	?_atoi^(0+128)
 11916     0887                     l1910:
 11917     0887  0008               	return
 11918     0888                     __end_of_atoi:
 11919                           
 11920                           	psect	text15
 11921     1EAB                     __ptext15:	
 11922 ;; *************** function _printOut *****************
 11923 ;; Defined at:
 11924 ;;		line 91 in file "UART.c"
 11925 ;; Parameters:    Size  Location     Type
 11926 ;;  str             2   72[BANK1 ] PTR unsigned char 
 11927 ;;		 -> STR_1(6), 
 11928 ;; Auto vars:     Size  Location     Type
 11929 ;;		None
 11930 ;; Return value:  Size  Location     Type
 11931 ;;                  1    wreg      void 
 11932 ;; Registers used:
 11933 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 11934 ;; Tracked objects:
 11935 ;;		On entry : 0/0
 11936 ;;		On exit  : 0/0
 11937 ;;		Unchanged: 0/0
 11938 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 11939 ;;      Params:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0
 11940 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11941 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11942 ;;      Totals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0
 11943 ;;Total ram usage:        2 bytes
 11944 ;; Hardware stack levels used: 1
 11945 ;; Hardware stack levels required when called: 16
 11946 ;; This function calls:
 11947 ;;		_printf
 11948 ;; This function is called by:
 11949 ;;		_main
 11950 ;; This function uses a non-reentrant model
 11951 ;;
 11952                           
 11953     1EAB                     _printOut:	
 11954                           ;psect for function _printOut
 11955                           
 11956     1EAB                     l6750:	
 11957                           ;incstack = 0
 11958 ;; hardware stack exceeded
 11959                           ; Regs used in _printOut: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 11960                           
 11961                           
 11962                           ;UART.c: 92:     printf(str);
 11963     1EAB  0021               	movlb	1	; select bank1
 11964     1EAC  0869               	movf	(printOut@str+1)^(0+128),w
 11965     1EAD  00E2               	movwf	(printf@fmt+1)^(0+128)
 11966     1EAE  0868               	movf	printOut@str^(0+128),w
 11967     1EAF  00E1               	movwf	printf@fmt^(0+128)
 11968     1EB0  319F  2771  319E   	fcall	_printf
 11969     1EB3                     l899:
 11970     1EB3  0008               	return
 11971     1EB4                     __end_of_printOut:
 11972                           
 11973                           	psect	text16
 11974     1F71                     __ptext16:	
 11975 ;; *************** function _printf *****************
 11976 ;; Defined at:
 11977 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\printf.c"
 11978 ;; Parameters:    Size  Location     Type
 11979 ;;  fmt             2   65[BANK1 ] PTR const unsigned char 
 11980 ;;		 -> STR_14(17), STR_13(15), STR_12(13), STR_11(13), 
 11981 ;;		 -> STR_10(25), STR_9(3), STR_8(7), STR_7(7), 
 11982 ;;		 -> STR_6(17), STR_5(15), STR_4(11), STR_3(24), 
 11983 ;;		 -> STR_2(8), STR_1(6), 
 11984 ;; Auto vars:     Size  Location     Type
 11985 ;;  ret             2    0        int 
 11986 ;;  ap              1   71[BANK1 ] PTR void [1]
 11987 ;;		 -> ?_printf(2), 
 11988 ;; Return value:  Size  Location     Type
 11989 ;;                  2   65[BANK1 ] int 
 11990 ;; Registers used:
 11991 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 11992 ;; Tracked objects:
 11993 ;;		On entry : 0/0
 11994 ;;		On exit  : 0/0
 11995 ;;		Unchanged: 0/0
 11996 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 11997 ;;      Params:         0       0       6       0       0       0       0       0       0       0       0       0       
      +0       0
 11998 ;;      Locals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0
 11999 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12000 ;;      Totals:         0       0       7       0       0       0       0       0       0       0       0       0       
      +0       0
 12001 ;;Total ram usage:        7 bytes
 12002 ;; Hardware stack levels used: 1
 12003 ;; Hardware stack levels required when called: 15
 12004 ;; This function calls:
 12005 ;;		_vfprintf
 12006 ;; This function is called by:
 12007 ;;		_readLine
 12008 ;;		_printOut
 12009 ;;		_uartHandler
 12010 ;;		_printFloat
 12011 ;;		_printLogs
 12012 ;; This function uses a non-reentrant model
 12013 ;;
 12014                           
 12015     1F71                     _printf:	
 12016                           ;psect for function _printf
 12017                           
 12018     1F71                     l5226:	
 12019                           ;incstack = 0
 12020 ;; hardware stack exceeded
 12021                           ; Regs used in _printf: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 12022                           
 12023     1F71  30E3               	movlw	(low ((?_printf| 0+2)))& (0+255)
 12024     1F72  0021               	movlb	1	; select bank1
 12025     1F73  00E7               	movwf	printf@ap^(0+128)
 12026     1F74                     l5228:
 12027     1F74  3000               	movlw	0
 12028     1F75  00D9               	movwf	vfprintf@fp^(0+128)
 12029     1F76  00DA               	movwf	(vfprintf@fp+1)^(0+128)
 12030     1F77  0862               	movf	(printf@fmt+1)^(0+128),w
 12031     1F78  00DC               	movwf	(vfprintf@fmt+1)^(0+128)
 12032     1F79  0861               	movf	printf@fmt^(0+128),w
 12033     1F7A  00DB               	movwf	vfprintf@fmt^(0+128)
 12034     1F7B  30E7               	movlw	(low (printf@ap| 0))& (0+255)
 12035     1F7C  00DD               	movwf	vfprintf@ap^(0+128)
 12036     1F7D  3191  214C  319F   	fcall	_vfprintf
 12037     1F80                     l1917:
 12038     1F80  0008               	return
 12039     1F81                     __end_of_printf:
 12040                           
 12041                           	psect	text17
 12042     114C                     __ptext17:	
 12043 ;; *************** function _vfprintf *****************
 12044 ;; Defined at:
 12045 ;;		line 1817 in file "C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c"
 12046 ;; Parameters:    Size  Location     Type
 12047 ;;  fp              2   57[BANK1 ] PTR struct _IO_FILE
 12048 ;;		 -> NULL(0), 
 12049 ;;  fmt             2   59[BANK1 ] PTR const unsigned char 
 12050 ;;		 -> STR_14(17), STR_13(15), STR_12(13), STR_11(13), 
 12051 ;;		 -> STR_10(25), STR_9(3), STR_8(7), STR_7(7), 
 12052 ;;		 -> STR_6(17), STR_5(15), STR_4(11), STR_3(24), 
 12053 ;;		 -> STR_2(8), STR_1(6), 
 12054 ;;  ap              1   61[BANK1 ] PTR PTR void 
 12055 ;;		 -> printf@ap(1), 
 12056 ;; Auto vars:     Size  Location     Type
 12057 ;;  cfmt            2   63[BANK1 ] PTR unsigned char 
 12058 ;;		 -> STR_14(17), STR_13(15), STR_12(13), STR_11(13), 
 12059 ;;		 -> STR_10(25), STR_9(3), STR_8(7), STR_7(7), 
 12060 ;;		 -> STR_6(17), STR_5(15), STR_4(11), STR_3(24), 
 12061 ;;		 -> STR_2(8), STR_1(6), 
 12062 ;; Return value:  Size  Location     Type
 12063 ;;                  2   57[BANK1 ] int 
 12064 ;; Registers used:
 12065 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 12066 ;; Tracked objects:
 12067 ;;		On entry : 0/0
 12068 ;;		On exit  : 0/0
 12069 ;;		Unchanged: 0/0
 12070 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 12071 ;;      Params:         0       0       5       0       0       0       0       0       0       0       0       0       
      +0       0
 12072 ;;      Locals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0
 12073 ;;      Temps:          0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0
 12074 ;;      Totals:         0       0       8       0       0       0       0       0       0       0       0       0       
      +0       0
 12075 ;;Total ram usage:        8 bytes
 12076 ;; Hardware stack levels used: 1
 12077 ;; Hardware stack levels required when called: 14
 12078 ;; This function calls:
 12079 ;;		_vfpfcnvrt
 12080 ;; This function is called by:
 12081 ;;		_printf
 12082 ;; This function uses a non-reentrant model
 12083 ;;
 12084                           
 12085     114C                     _vfprintf:	
 12086                           ;psect for function _vfprintf
 12087                           
 12088     114C                     l5148:	
 12089                           ;incstack = 0
 12090 ;; hardware stack exceeded
 12091                           ; Regs used in _vfprintf: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 12092                           
 12093                           
 12094                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1817: int vfprint
      +                          f(FILE *fp, const char *fmt, va_list ap);C:\Program Files\Microchip\xc8\v3.00\pic\source
      +                          s\c99\common\doprnt.c: 1818: {;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\comm
      +                          on\doprnt.c: 1820:     char *cfmt;;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\
      +                          common\doprnt.c: 1822:     cfmt = (char *)fmt;
 12095     114C  0021               	movlb	1	; select bank1
 12096     114D  085C               	movf	(vfprintf@fmt+1)^(0+128),w
 12097     114E  00E0               	movwf	(vfprintf@cfmt+1)^(0+128)
 12098     114F  085B               	movf	vfprintf@fmt^(0+128),w
 12099     1150  00DF               	movwf	vfprintf@cfmt^(0+128)
 12100     1151                     l5150:
 12101                           
 12102                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1824:     nout = 
      +                          0;
 12103     1151  0022               	movlb	2	; select bank2
 12104     1152  01C4               	clrf	_nout^(0+256)
 12105     1153  01C5               	clrf	(_nout+1)^(0+256)
 12106                           
 12107                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1826:     while (
      +                          *cfmt) {
 12108     1154  2969               	goto	l5154
 12109     1155                     l5152:
 12110                           
 12111                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1828:         nou
      +                          t +=
 12112     1155  085A               	movf	(vfprintf@fp+1)^(0+128),w
 12113     1156  00CA               	movwf	(vfpfcnvrt@fp+1)^(0+128)
 12114     1157  0859               	movf	vfprintf@fp^(0+128),w
 12115     1158  00C9               	movwf	vfpfcnvrt@fp^(0+128)
 12116     1159  30DF               	movlw	(low (vfprintf@cfmt| 0))& (0+255)
 12117     115A  00CB               	movwf	vfpfcnvrt@fmt^(0+128)
 12118     115B  085D               	movf	vfprintf@ap^(0+128),w
 12119     115C  00CC               	movwf	vfpfcnvrt@ap^(0+128)
 12120     115D  01CD               	clrf	(vfpfcnvrt@ap+1)^(0+128)
 12121     115E  318A  22E0  3191   	fcall	_vfpfcnvrt
 12122     1161  0021               	movlb	1	; select bank1
 12123     1162  0849               	movf	?_vfpfcnvrt^(0+128),w
 12124     1163  0022               	movlb	2	; select bank2
 12125     1164  07C4               	addwf	_nout^(0+256),f
 12126     1165  0021               	movlb	1	; select bank1
 12127     1166  084A               	movf	(?_vfpfcnvrt+1)^(0+128),w
 12128     1167  0022               	movlb	2	; select bank2
 12129     1168  3DC5               	addwfc	(_nout+1)^(0+256),f
 12130     1169                     l5154:
 12131                           
 12132                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1826:     while (
      +                          *cfmt) {
 12133     1169  0021               	movlb	1	; select bank1
 12134     116A  085F               	movf	vfprintf@cfmt^(0+128),w
 12135     116B  0084               	movwf	4
 12136     116C  0860               	movf	(vfprintf@cfmt+1)^(0+128),w
 12137     116D  0085               	movwf	5
 12138     116E  0012               	moviw fsr0++
 12139     116F  1D03               	btfss	3,2
 12140     1170  2972               	goto	u4791
 12141     1171  2973               	goto	u4790
 12142     1172                     u4791:
 12143     1172  2955               	goto	l5152
 12144     1173                     u4790:
 12145     1173                     l5156:
 12146                           
 12147                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1835:  return 0;
 12148     1173  01D9               	clrf	?_vfprintf^(0+128)
 12149     1174  01DA               	clrf	(?_vfprintf+1)^(0+128)
 12150     1175                     l2009:
 12151     1175  0008               	return
 12152     1176                     __end_of_vfprintf:
 12153                           
 12154                           	psect	text18
 12155     0AE0                     __ptext18:	
 12156 ;; *************** function _vfpfcnvrt *****************
 12157 ;; Defined at:
 12158 ;;		line 1177 in file "C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c"
 12159 ;; Parameters:    Size  Location     Type
 12160 ;;  fp              2   41[BANK1 ] PTR struct _IO_FILE
 12161 ;;		 -> NULL(0), 
 12162 ;;  fmt             1   43[BANK1 ] PTR PTR unsigned char 
 12163 ;;		 -> vfprintf@cfmt(2), 
 12164 ;;  ap              2   44[BANK1 ] PTR PTR void 
 12165 ;;		 -> printf@ap(1), 
 12166 ;; Auto vars:     Size  Location     Type
 12167 ;;  convarg         4   51[BANK1 ] struct .
 12168 ;;  cp              2   55[BANK1 ] PTR unsigned char 
 12169 ;;		 -> STR_14(17), STR_13(15), STR_12(13), STR_11(13), 
 12170 ;;		 -> STR_10(25), STR_9(3), STR_8(7), STR_7(7), 
 12171 ;;		 -> STR_6(17), STR_5(15), STR_4(11), STR_3(24), 
 12172 ;;		 -> STR_2(8), STR_1(6), 
 12173 ;;  done            1   50[BANK1 ] _Bool 
 12174 ;;  c               1    0        unsigned char 
 12175 ;; Return value:  Size  Location     Type
 12176 ;;                  2   41[BANK1 ] int 
 12177 ;; Registers used:
 12178 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 12179 ;; Tracked objects:
 12180 ;;		On entry : 0/0
 12181 ;;		On exit  : 0/0
 12182 ;;		Unchanged: 0/0
 12183 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 12184 ;;      Params:         0       0       5       0       0       0       0       0       0       0       0       0       
      +0       0
 12185 ;;      Locals:         0       0       7       0       0       0       0       0       0       0       0       0       
      +0       0
 12186 ;;      Temps:          0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0
 12187 ;;      Totals:         0       0      16       0       0       0       0       0       0       0       0       0       
      +0       0
 12188 ;;Total ram usage:       16 bytes
 12189 ;; Hardware stack levels used: 1
 12190 ;; Hardware stack levels required when called: 13
 12191 ;; This function calls:
 12192 ;;		_dtoa
 12193 ;;		_fputc
 12194 ;;		_read_prec_or_width
 12195 ;;		_utoa
 12196 ;; This function is called by:
 12197 ;;		_vfprintf
 12198 ;; This function uses a non-reentrant model
 12199 ;;
 12200                           
 12201     0AE0                     _vfpfcnvrt:	
 12202                           ;psect for function _vfpfcnvrt
 12203                           
 12204     0AE0                     l5012:	
 12205                           ;incstack = 0
 12206 ;; hardware stack exceeded
 12207                           ; Regs used in _vfpfcnvrt: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 12208                           
 12209                           
 12210                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1177: vfpfcnvrt(F
      +                          ILE *fp, char *fmt[], va_list ap);C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\c
      +                          ommon\doprnt.c: 1178: {;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\dopr
      +                          nt.c: 1179:     char c, *cp;;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common
      +                          \doprnt.c: 1180:     _Bool done;;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\co
      +                          mmon\doprnt.c: 1188:  } convarg;;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\co
      +                          mmon\doprnt.c: 1201:     if ((*fmt)[0] == '%') {
 12211     0AE0  0021               	movlb	1	; select bank1
 12212     0AE1  084B               	movf	vfpfcnvrt@fmt^(0+128),w
 12213     0AE2  0086               	movwf	6
 12214     0AE3  0187               	clrf	7
 12215     0AE4  3F40               	moviw [0]fsr1
 12216     0AE5  00CE               	movwf	??_vfpfcnvrt^(0+128)
 12217     0AE6  3F41               	moviw [1]fsr1
 12218     0AE7  00CF               	movwf	(??_vfpfcnvrt^(0+128)+1)
 12219     0AE8  084E               	movf	??_vfpfcnvrt^(0+128),w
 12220     0AE9  0084               	movwf	4
 12221     0AEA  084F               	movf	(??_vfpfcnvrt+1)^(0+128),w
 12222     0AEB  0085               	movwf	5
 12223     0AEC  0012               	moviw fsr0++
 12224     0AED  3A25               	xorlw	37
 12225     0AEE  1D03               	btfss	3,2
 12226     0AEF  2AF1               	goto	u4681
 12227     0AF0  2AF2               	goto	u4680
 12228     0AF1                     u4681:
 12229     0AF1  2C2C               	goto	l5092
 12230     0AF2                     u4680:
 12231     0AF2                     l5014:
 12232                           
 12233                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1202:         ++*
      +                          fmt;
 12234     0AF2  084B               	movf	vfpfcnvrt@fmt^(0+128),w
 12235     0AF3  0086               	movwf	6
 12236     0AF4  0187               	clrf	7
 12237     0AF5  3001               	movlw	1
 12238     0AF6  0781               	addwf	1,f
 12239     0AF7  3141               	addfsr 1,1
 12240     0AF8  1803               	skipnc
 12241     0AF9  0A81               	incf	1,f
 12242     0AFA                     l5016:
 12243                           
 12244                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1204:         fla
      +                          gs = width = 0;
 12245     0AFA  01EE               	clrf	_width^(0+128)
 12246     0AFB  01EF               	clrf	(_width+1)^(0+128)
 12247     0AFC  3000               	movlw	0
 12248     0AFD  0020               	movlb	0	; select bank0
 12249     0AFE  00E5               	movwf	_flags
 12250     0AFF                     l5018:
 12251                           
 12252                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1205:         pre
      +                          c = -1;
 12253     0AFF  30FF               	movlw	255
 12254     0B00  0022               	movlb	2	; select bank2
 12255     0B01  00C6               	movwf	_prec^(0+256)
 12256     0B02  30FF               	movlw	255
 12257     0B03  00C7               	movwf	(_prec^(0+256)+1)
 12258     0B04                     l5020:
 12259                           
 12260                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1209:         don
      +                          e = 0;
 12261     0B04  0021               	movlb	1	; select bank1
 12262     0B05  01D2               	clrf	vfpfcnvrt@done^(0+128)
 12263                           
 12264                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1210:         whi
      +                          le (!done) {
 12265     0B06  2B26               	goto	l5028
 12266     0B07                     l1987:	
 12267                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1219:            
      +                               case '0' :
 12268                           
 12269                           
 12270                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1220:            
      +                                   flags |= (1 << 1);
 12271     0B07  0020               	movlb	0	; select bank0
 12272     0B08  14E5               	bsf	_flags,1
 12273     0B09                     l5022:
 12274                           
 12275                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1221:            
      +                                   ++*fmt;
 12276     0B09  0021               	movlb	1	; select bank1
 12277     0B0A  084B               	movf	vfpfcnvrt@fmt^(0+128),w
 12278     0B0B  0086               	movwf	6
 12279     0B0C  0187               	clrf	7
 12280     0B0D  3001               	movlw	1
 12281     0B0E  0781               	addwf	1,f
 12282     0B0F  3141               	addfsr 1,1
 12283     0B10  1803               	skipnc
 12284     0B11  0A81               	incf	1,f
 12285                           
 12286                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1222:            
      +                                   break;
 12287     0B12  2B26               	goto	l5028
 12288     0B13                     l1989:	
 12289                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1242:            
      +                               default:
 12290                           
 12291                           
 12292                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1243:            
      +                                   done = 1;
 12293     0B13  3001               	movlw	1
 12294     0B14  00D2               	movwf	vfpfcnvrt@done^(0+128)
 12295                           
 12296                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1244:            
      +                                   break;
 12297     0B15  2B26               	goto	l5028
 12298     0B16                     l5026:
 12299     0B16  084B               	movf	vfpfcnvrt@fmt^(0+128),w
 12300     0B17  0086               	movwf	6
 12301     0B18  0187               	clrf	7
 12302     0B19  3F40               	moviw [0]fsr1
 12303     0B1A  00CE               	movwf	??_vfpfcnvrt^(0+128)
 12304     0B1B  3F41               	moviw [1]fsr1
 12305     0B1C  00CF               	movwf	(??_vfpfcnvrt^(0+128)+1)
 12306     0B1D  084E               	movf	??_vfpfcnvrt^(0+128),w
 12307     0B1E  0084               	movwf	4
 12308     0B1F  084F               	movf	(??_vfpfcnvrt+1)^(0+128),w
 12309     0B20  0085               	movwf	5
 12310     0B21  0800               	movf	0,w	;code access
 12311                           
 12312                           ; Switch size 1, requested type "simple"
 12313                           ; Number of cases is 1, Range of values is 48 to 48
 12314                           ; switch strategies available:
 12315                           ; Name         Instructions Cycles
 12316                           ; simple_byte            4     3 (average)
 12317                           ; direct_byte           11     9 (fixed)
 12318                           ; jumptable            263     9 (fixed)
 12319                           ;	Chosen strategy is simple_byte
 12320     0B22  3A30               	xorlw	48	; case 48
 12321     0B23  1903               	skipnz
 12322     0B24  2B07               	goto	l1987
 12323     0B25  2B13               	goto	l1989
 12324     0B26                     l5028:
 12325                           
 12326                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1210:         whi
      +                          le (!done) {
 12327     0B26  0852               	movf	vfpfcnvrt@done^(0+128),w
 12328     0B27  1903               	btfsc	3,2
 12329     0B28  2B2A               	goto	u4691
 12330     0B29  2B2B               	goto	u4690
 12331     0B2A                     u4691:
 12332     0B2A  2B16               	goto	l5026
 12333     0B2B                     u4690:
 12334     0B2B                     l5030:
 12335                           
 12336                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1256:   width = r
      +                          ead_prec_or_width(fmt, ap);
 12337     0B2B  084B               	movf	vfpfcnvrt@fmt^(0+128),w
 12338     0B2C  00A6               	movwf	read_prec_or_width@fmt^(0+128)
 12339     0B2D  084C               	movf	vfpfcnvrt@ap^(0+128),w
 12340     0B2E  00A7               	movwf	read_prec_or_width@ap^(0+128)
 12341     0B2F  3195  2524  318A   	fcall	_read_prec_or_width
 12342     0B32  0021               	movlb	1	; select bank1
 12343     0B33  0827               	movf	(?_read_prec_or_width+1)^(0+128),w
 12344     0B34  00EF               	movwf	(_width+1)^(0+128)
 12345     0B35  0826               	movf	?_read_prec_or_width^(0+128),w
 12346     0B36  00EE               	movwf	_width^(0+128)
 12347     0B37                     l5032:
 12348                           
 12349                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1257:   if (width
      +                           < 0) {
 12350     0B37  1FEF               	btfss	(_width+1)^(0+128),7
 12351     0B38  2B3A               	goto	u4701
 12352     0B39  2B3B               	goto	u4700
 12353     0B3A                     u4701:
 12354     0B3A  2B43               	goto	l5038
 12355     0B3B                     u4700:
 12356     0B3B                     l5034:
 12357                           
 12358                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1258:    flags |=
      +                           (1 << 0);
 12359     0B3B  0020               	movlb	0	; select bank0
 12360     0B3C  1465               	bsf	_flags,0
 12361     0B3D                     l5036:
 12362                           
 12363                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1259:    width = 
      +                          -width;
 12364     0B3D  0021               	movlb	1	; select bank1
 12365     0B3E  09EE               	comf	_width^(0+128),f
 12366     0B3F  09EF               	comf	(_width+1)^(0+128),f
 12367     0B40  0AEE               	incf	_width^(0+128),f
 12368     0B41  1903               	skipnz
 12369     0B42  0AEF               	incf	(_width+1)^(0+128),f
 12370     0B43                     l5038:
 12371                           
 12372                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1291:   cp = *fmt
      +                          ;
 12373     0B43  084B               	movf	vfpfcnvrt@fmt^(0+128),w
 12374     0B44  0086               	movwf	6
 12375     0B45  0187               	clrf	7
 12376     0B46  3F40               	moviw [0]fsr1
 12377     0B47  00D7               	movwf	vfpfcnvrt@cp^(0+128)
 12378     0B48  3F41               	moviw [1]fsr1
 12379     0B49  00D8               	movwf	(vfpfcnvrt@cp+1)^(0+128)
 12380     0B4A                     l5040:
 12381                           
 12382                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1361:   if (*cp =
      +                          = 'd' || *cp == 'i') {
 12383     0B4A  0857               	movf	vfpfcnvrt@cp^(0+128),w
 12384     0B4B  0084               	movwf	4
 12385     0B4C  0858               	movf	(vfpfcnvrt@cp+1)^(0+128),w
 12386     0B4D  0085               	movwf	5
 12387     0B4E  0012               	moviw fsr0++
 12388     0B4F  3A64               	xorlw	100
 12389     0B50  1903               	btfsc	3,2
 12390     0B51  2B53               	goto	u4711
 12391     0B52  2B54               	goto	u4710
 12392     0B53                     u4711:
 12393     0B53  2B5E               	goto	l5044
 12394     0B54                     u4710:
 12395     0B54                     l5042:
 12396     0B54  0857               	movf	vfpfcnvrt@cp^(0+128),w
 12397     0B55  0084               	movwf	4
 12398     0B56  0858               	movf	(vfpfcnvrt@cp+1)^(0+128),w
 12399     0B57  0085               	movwf	5
 12400     0B58  0012               	moviw fsr0++
 12401     0B59  3A69               	xorlw	105
 12402     0B5A  1D03               	btfss	3,2
 12403     0B5B  2B5D               	goto	u4721
 12404     0B5C  2B5E               	goto	u4720
 12405     0B5D                     u4721:
 12406     0B5D  2B89               	goto	l5052
 12407     0B5E                     u4720:
 12408     0B5E                     l5044:
 12409                           
 12410                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1404:    convarg.
      +                          sint = (vfpf_sint_t)(int)(*(int *)__va_arg(*(int **)ap, (int)0));
 12411     0B5E  084C               	movf	vfpfcnvrt@ap^(0+128),w
 12412     0B5F  0086               	movwf	6
 12413     0B60  084D               	movf	(vfpfcnvrt@ap+1)^(0+128),w
 12414     0B61  0087               	movwf	7
 12415     0B62  0801               	movf	1,w
 12416     0B63  0084               	movwf	4
 12417     0B64  0185               	clrf	5
 12418     0B65  3002               	movlw	2
 12419     0B66  0781               	addwf	1,f
 12420     0B67  3F00               	moviw [0]fsr0
 12421     0B68  00D3               	movwf	vfpfcnvrt@convarg^(0+128)
 12422     0B69  3F01               	moviw [1]fsr0
 12423     0B6A  00D4               	movwf	(vfpfcnvrt@convarg+1)^(0+128)
 12424     0B6B                     l5046:
 12425                           
 12426                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1406:    *fmt = c
      +                          p+1;
 12427     0B6B  0857               	movf	vfpfcnvrt@cp^(0+128),w
 12428     0B6C  3E01               	addlw	1
 12429     0B6D  00CE               	movwf	??_vfpfcnvrt^(0+128)
 12430     0B6E  3000               	movlw	0
 12431     0B6F  3D58               	addwfc	(vfpfcnvrt@cp+1)^(0+128),w
 12432     0B70  00CF               	movwf	(??_vfpfcnvrt+1)^(0+128)
 12433     0B71  084B               	movf	vfpfcnvrt@fmt^(0+128),w
 12434     0B72  0086               	movwf	6
 12435     0B73  0187               	clrf	7
 12436     0B74  084E               	movf	??_vfpfcnvrt^(0+128),w
 12437     0B75  3FC0               	movwi [0]fsr1
 12438     0B76  084F               	movf	(??_vfpfcnvrt+1)^(0+128),w
 12439     0B77  3FC1               	movwi [1]fsr1
 12440     0B78                     l5048:
 12441                           
 12442                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1432:    return (
      +                          int) dtoa(fp, convarg.sint);
 12443     0B78  084A               	movf	(vfpfcnvrt@fp+1)^(0+128),w
 12444     0B79  00BD               	movwf	(dtoa@fp+1)^(0+128)
 12445     0B7A  0849               	movf	vfpfcnvrt@fp^(0+128),w
 12446     0B7B  00BC               	movwf	dtoa@fp^(0+128)
 12447     0B7C  0854               	movf	(vfpfcnvrt@convarg+1)^(0+128),w
 12448     0B7D  00BF               	movwf	(dtoa@d+1)^(0+128)
 12449     0B7E  0853               	movf	vfpfcnvrt@convarg^(0+128),w
 12450     0B7F  00BE               	movwf	dtoa@d^(0+128)
 12451     0B80  3187  272B  318A   	fcall	_dtoa
 12452     0B83  0021               	movlb	1	; select bank1
 12453     0B84  083D               	movf	(?_dtoa+1)^(0+128),w
 12454     0B85  00CA               	movwf	(?_vfpfcnvrt+1)^(0+128)
 12455     0B86  083C               	movf	?_dtoa^(0+128),w
 12456     0B87  00C9               	movwf	?_vfpfcnvrt^(0+128)
 12457     0B88  2C4F               	goto	l1995
 12458     0B89                     l5052:
 12459     0B89  0857               	movf	vfpfcnvrt@cp^(0+128),w
 12460     0B8A  0084               	movwf	4
 12461     0B8B  0858               	movf	(vfpfcnvrt@cp+1)^(0+128),w
 12462     0B8C  0085               	movwf	5
 12463     0B8D  0012               	moviw fsr0++
 12464     0B8E  3A75               	xorlw	117
 12465     0B8F  1D03               	btfss	3,2
 12466     0B90  2B92               	goto	u4731
 12467     0B91  2B93               	goto	u4730
 12468     0B92                     u4731:
 12469     0B92  2BC8               	goto	l5066
 12470     0B93                     u4730:
 12471     0B93                     l5054:
 12472                           
 12473                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1452:     ) {;C:\
      +                          Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1495:    convarg.uint
      +                           = (vfpf_uint_t)(unsigned int)(*(unsigned int *)__va_arg(*(unsigned int **)ap, (unsigned
      +                           int)0));
 12474     0B93  084C               	movf	vfpfcnvrt@ap^(0+128),w
 12475     0B94  0086               	movwf	6
 12476     0B95  084D               	movf	(vfpfcnvrt@ap+1)^(0+128),w
 12477     0B96  0087               	movwf	7
 12478     0B97  0801               	movf	1,w
 12479     0B98  0084               	movwf	4
 12480     0B99  0185               	clrf	5
 12481     0B9A  3002               	movlw	2
 12482     0B9B  0781               	addwf	1,f
 12483     0B9C  3F00               	moviw [0]fsr0
 12484     0B9D  00D3               	movwf	vfpfcnvrt@convarg^(0+128)
 12485     0B9E  3F01               	moviw [1]fsr0
 12486     0B9F  00D4               	movwf	(vfpfcnvrt@convarg+1)^(0+128)
 12487     0BA0                     l5056:
 12488                           
 12489                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1497:    *fmt = c
      +                          p+1;
 12490     0BA0  0857               	movf	vfpfcnvrt@cp^(0+128),w
 12491     0BA1  3E01               	addlw	1
 12492     0BA2  00CE               	movwf	??_vfpfcnvrt^(0+128)
 12493     0BA3  3000               	movlw	0
 12494     0BA4  3D58               	addwfc	(vfpfcnvrt@cp+1)^(0+128),w
 12495     0BA5  00CF               	movwf	(??_vfpfcnvrt+1)^(0+128)
 12496     0BA6  084B               	movf	vfpfcnvrt@fmt^(0+128),w
 12497     0BA7  0086               	movwf	6
 12498     0BA8  0187               	clrf	7
 12499     0BA9  084E               	movf	??_vfpfcnvrt^(0+128),w
 12500     0BAA  3FC0               	movwi [0]fsr1
 12501     0BAB  084F               	movf	(??_vfpfcnvrt+1)^(0+128),w
 12502     0BAC  3FC1               	movwi [1]fsr1
 12503                           
 12504                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1498:    switch (
      +                          *cp) {
 12505     0BAD  2BBF               	goto	l5064
 12506     0BAE                     l5058:
 12507                           
 12508                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1542:      return
      +                           (int) utoa(fp, convarg.uint);
 12509     0BAE  084A               	movf	(vfpfcnvrt@fp+1)^(0+128),w
 12510     0BAF  00BD               	movwf	(utoa@fp+1)^(0+128)
 12511     0BB0  0849               	movf	vfpfcnvrt@fp^(0+128),w
 12512     0BB1  00BC               	movwf	utoa@fp^(0+128)
 12513     0BB2  0854               	movf	(vfpfcnvrt@convarg+1)^(0+128),w
 12514     0BB3  00BF               	movwf	(utoa@d+1)^(0+128)
 12515     0BB4  0853               	movf	vfpfcnvrt@convarg^(0+128),w
 12516     0BB5  00BE               	movwf	utoa@d^(0+128)
 12517     0BB6  3196  264D  318A   	fcall	_utoa
 12518     0BB9  0021               	movlb	1	; select bank1
 12519     0BBA  083D               	movf	(?_utoa+1)^(0+128),w
 12520     0BBB  00CA               	movwf	(?_vfpfcnvrt+1)^(0+128)
 12521     0BBC  083C               	movf	?_utoa^(0+128),w
 12522     0BBD  00C9               	movwf	?_vfpfcnvrt^(0+128)
 12523     0BBE  2C4F               	goto	l1995
 12524     0BBF                     l5064:
 12525     0BBF  0857               	movf	vfpfcnvrt@cp^(0+128),w
 12526     0BC0  0084               	movwf	4
 12527     0BC1  0858               	movf	(vfpfcnvrt@cp+1)^(0+128),w
 12528     0BC2  0085               	movwf	5
 12529     0BC3  0800               	movf	0,w	;code access
 12530                           
 12531                           ; Switch size 1, requested type "simple"
 12532                           ; Number of cases is 1, Range of values is 117 to 117
 12533                           ; switch strategies available:
 12534                           ; Name         Instructions Cycles
 12535                           ; simple_byte            4     3 (average)
 12536                           ; direct_byte           11     9 (fixed)
 12537                           ; jumptable            263     9 (fixed)
 12538                           ;	Chosen strategy is simple_byte
 12539     0BC4  3A75               	xorlw	117	; case 117
 12540     0BC5  1903               	skipnz
 12541     0BC6  2BAE               	goto	l5058
 12542     0BC7  2BC8               	goto	l5066
 12543     0BC8                     l5066:
 12544                           
 12545                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1595:   if (*cp =
      +                          = 'n') {
 12546     0BC8  0857               	movf	vfpfcnvrt@cp^(0+128),w
 12547     0BC9  0084               	movwf	4
 12548     0BCA  0858               	movf	(vfpfcnvrt@cp+1)^(0+128),w
 12549     0BCB  0085               	movwf	5
 12550     0BCC  0012               	moviw fsr0++
 12551     0BCD  3A6E               	xorlw	110
 12552     0BCE  1D03               	btfss	3,2
 12553     0BCF  2BD1               	goto	u4741
 12554     0BD0  2BD2               	goto	u4740
 12555     0BD1                     u4741:
 12556     0BD1  2BF9               	goto	l5076
 12557     0BD2                     u4740:
 12558     0BD2                     l5068:
 12559                           
 12560                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1638:    *(*(int*
      +                           *)__va_arg(*(int* **)ap, (int*)0)) = (int) nout;
 12561     0BD2  084C               	movf	vfpfcnvrt@ap^(0+128),w
 12562     0BD3  0086               	movwf	6
 12563     0BD4  084D               	movf	(vfpfcnvrt@ap+1)^(0+128),w
 12564     0BD5  0087               	movwf	7
 12565     0BD6  0801               	movf	1,w
 12566     0BD7  0084               	movwf	4
 12567     0BD8  0185               	clrf	5
 12568     0BD9  3002               	movlw	2
 12569     0BDA  0781               	addwf	1,f
 12570     0BDB  3F00               	moviw [0]fsr0
 12571     0BDC  00CE               	movwf	??_vfpfcnvrt^(0+128)
 12572     0BDD  3F01               	moviw [1]fsr0
 12573     0BDE  00CF               	movwf	(??_vfpfcnvrt^(0+128)+1)
 12574     0BDF  084E               	movf	??_vfpfcnvrt^(0+128),w
 12575     0BE0  0086               	movwf	6
 12576     0BE1  084F               	movf	(??_vfpfcnvrt+1)^(0+128),w
 12577     0BE2  0087               	movwf	7
 12578     0BE3  0022               	movlb	2	; select bank2
 12579     0BE4  0844               	movf	_nout^(0+256),w
 12580     0BE5  3FC0               	movwi [0]fsr1
 12581     0BE6  0845               	movf	(_nout+1)^(0+256),w
 12582     0BE7  3FC1               	movwi [1]fsr1
 12583     0BE8                     l5070:
 12584                           
 12585                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1640:    *fmt = c
      +                          p+1;
 12586     0BE8  0021               	movlb	1	; select bank1
 12587     0BE9  0857               	movf	vfpfcnvrt@cp^(0+128),w
 12588     0BEA  3E01               	addlw	1
 12589     0BEB  00CE               	movwf	??_vfpfcnvrt^(0+128)
 12590     0BEC  3000               	movlw	0
 12591     0BED  3D58               	addwfc	(vfpfcnvrt@cp+1)^(0+128),w
 12592     0BEE  00CF               	movwf	(??_vfpfcnvrt+1)^(0+128)
 12593     0BEF  084B               	movf	vfpfcnvrt@fmt^(0+128),w
 12594     0BF0  0086               	movwf	6
 12595     0BF1  0187               	clrf	7
 12596     0BF2  084E               	movf	??_vfpfcnvrt^(0+128),w
 12597     0BF3  3FC0               	movwi [0]fsr1
 12598     0BF4  084F               	movf	(??_vfpfcnvrt+1)^(0+128),w
 12599     0BF5  3FC1               	movwi [1]fsr1
 12600     0BF6                     l5072:
 12601                           
 12602                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1641:    return (
      +                          int) 0;
 12603     0BF6  01C9               	clrf	?_vfpfcnvrt^(0+128)
 12604     0BF7  01CA               	clrf	(?_vfpfcnvrt+1)^(0+128)
 12605     0BF8  2C4F               	goto	l1995
 12606     0BF9                     l5076:
 12607                           
 12608                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1798:         if 
      +                          ((*fmt)[0] == '%') {
 12609     0BF9  084B               	movf	vfpfcnvrt@fmt^(0+128),w
 12610     0BFA  0086               	movwf	6
 12611     0BFB  0187               	clrf	7
 12612     0BFC  3F40               	moviw [0]fsr1
 12613     0BFD  00CE               	movwf	??_vfpfcnvrt^(0+128)
 12614     0BFE  3F41               	moviw [1]fsr1
 12615     0BFF  00CF               	movwf	(??_vfpfcnvrt^(0+128)+1)
 12616     0C00  084E               	movf	??_vfpfcnvrt^(0+128),w
 12617     0C01  0084               	movwf	4
 12618     0C02  084F               	movf	(??_vfpfcnvrt+1)^(0+128),w
 12619     0C03  0085               	movwf	5
 12620     0C04  0012               	moviw fsr0++
 12621     0C05  3A25               	xorlw	37
 12622     0C06  1D03               	btfss	3,2
 12623     0C07  2C09               	goto	u4751
 12624     0C08  2C0A               	goto	u4750
 12625     0C09                     u4751:
 12626     0C09  2C23               	goto	l5086
 12627     0C0A                     u4750:
 12628     0C0A                     l5078:
 12629                           
 12630                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1799:            
      +                           ++*fmt;
 12631     0C0A  084B               	movf	vfpfcnvrt@fmt^(0+128),w
 12632     0C0B  0086               	movwf	6
 12633     0C0C  0187               	clrf	7
 12634     0C0D  3001               	movlw	1
 12635     0C0E  0781               	addwf	1,f
 12636     0C0F  3141               	addfsr 1,1
 12637     0C10  1803               	skipnc
 12638     0C11  0A81               	incf	1,f
 12639     0C12                     l5080:
 12640                           
 12641                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1800:            
      +                           fputc((int)'%', fp);
 12642     0C12  3025               	movlw	37
 12643     0C13  00A3               	movwf	fputc@c^(0+128)
 12644     0C14  3000               	movlw	0
 12645     0C15  00A4               	movwf	(fputc@c^(0+128)+1)
 12646     0C16  084A               	movf	(vfpfcnvrt@fp+1)^(0+128),w
 12647     0C17  00A6               	movwf	(fputc@fp+1)^(0+128)
 12648     0C18  0849               	movf	vfpfcnvrt@fp^(0+128),w
 12649     0C19  00A5               	movwf	fputc@fp^(0+128)
 12650     0C1A  3195  2580  318A   	fcall	_fputc
 12651     0C1D                     l5082:
 12652                           
 12653                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1801:            
      +                           return (int) 1;
 12654     0C1D  3001               	movlw	1
 12655     0C1E  0021               	movlb	1	; select bank1
 12656     0C1F  00C9               	movwf	?_vfpfcnvrt^(0+128)
 12657     0C20  3000               	movlw	0
 12658     0C21  00CA               	movwf	(?_vfpfcnvrt^(0+128)+1)
 12659     0C22  2C4F               	goto	l1995
 12660     0C23                     l5086:
 12661                           
 12662                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1806:         ++*
      +                          fmt;
 12663     0C23  084B               	movf	vfpfcnvrt@fmt^(0+128),w
 12664     0C24  0086               	movwf	6
 12665     0C25  0187               	clrf	7
 12666     0C26  3001               	movlw	1
 12667     0C27  0781               	addwf	1,f
 12668     0C28  3141               	addfsr 1,1
 12669     0C29  1803               	skipnc
 12670     0C2A  0A81               	incf	1,f
 12671     0C2B  2BF6               	goto	l5072
 12672     0C2C                     l5092:
 12673                           
 12674                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1811:     fputc((
      +                          int)(*fmt)[0], fp);
 12675     0C2C  084B               	movf	vfpfcnvrt@fmt^(0+128),w
 12676     0C2D  0086               	movwf	6
 12677     0C2E  0187               	clrf	7
 12678     0C2F  3F40               	moviw [0]fsr1
 12679     0C30  00CE               	movwf	??_vfpfcnvrt^(0+128)
 12680     0C31  3F41               	moviw [1]fsr1
 12681     0C32  00CF               	movwf	(??_vfpfcnvrt^(0+128)+1)
 12682     0C33  084E               	movf	??_vfpfcnvrt^(0+128),w
 12683     0C34  0084               	movwf	4
 12684     0C35  084F               	movf	(??_vfpfcnvrt+1)^(0+128),w
 12685     0C36  0085               	movwf	5
 12686     0C37  0800               	movf	0,w	;code access
 12687     0C38  00D0               	movwf	(??_vfpfcnvrt+2)^(0+128)
 12688     0C39  01D1               	clrf	((??_vfpfcnvrt+2)^(0+128)+1)
 12689     0C3A  0850               	movf	(??_vfpfcnvrt+2)^(0+128),w
 12690     0C3B  00A3               	movwf	fputc@c^(0+128)
 12691     0C3C  0851               	movf	(??_vfpfcnvrt+3)^(0+128),w
 12692     0C3D  00A4               	movwf	(fputc@c+1)^(0+128)
 12693     0C3E  084A               	movf	(vfpfcnvrt@fp+1)^(0+128),w
 12694     0C3F  00A6               	movwf	(fputc@fp+1)^(0+128)
 12695     0C40  0849               	movf	vfpfcnvrt@fp^(0+128),w
 12696     0C41  00A5               	movwf	fputc@fp^(0+128)
 12697     0C42  3195  2580  318A   	fcall	_fputc
 12698     0C45                     l5094:
 12699                           
 12700                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1812:     ++*fmt;
 12701     0C45  0021               	movlb	1	; select bank1
 12702     0C46  084B               	movf	vfpfcnvrt@fmt^(0+128),w
 12703     0C47  0086               	movwf	6
 12704     0C48  0187               	clrf	7
 12705     0C49  3001               	movlw	1
 12706     0C4A  0781               	addwf	1,f
 12707     0C4B  3141               	addfsr 1,1
 12708     0C4C  1803               	skipnc
 12709     0C4D  0A81               	incf	1,f
 12710     0C4E  2C1D               	goto	l5082
 12711     0C4F                     l1995:
 12712     0C4F  0008               	return
 12713     0C50                     __end_of_vfpfcnvrt:
 12714                           
 12715                           	psect	text19
 12716     164D                     __ptext19:	
 12717 ;; *************** function _utoa *****************
 12718 ;; Defined at:
 12719 ;;		line 1001 in file "C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c"
 12720 ;; Parameters:    Size  Location     Type
 12721 ;;  fp              2   28[BANK1 ] PTR struct _IO_FILE
 12722 ;;		 -> NULL(0), 
 12723 ;;  d               2   30[BANK1 ] unsigned int 
 12724 ;; Auto vars:     Size  Location     Type
 12725 ;;  i               2   36[BANK1 ] int 
 12726 ;;  w               2   34[BANK1 ] int 
 12727 ;;  p               1   33[BANK1 ] _Bool 
 12728 ;; Return value:  Size  Location     Type
 12729 ;;                  2   28[BANK1 ] int 
 12730 ;; Registers used:
 12731 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 12732 ;; Tracked objects:
 12733 ;;		On entry : 0/0
 12734 ;;		On exit  : 0/0
 12735 ;;		Unchanged: 0/0
 12736 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 12737 ;;      Params:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0
 12738 ;;      Locals:         0       0       5       0       0       0       0       0       0       0       0       0       
      +0       0
 12739 ;;      Temps:          0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0
 12740 ;;      Totals:         0       0      10       0       0       0       0       0       0       0       0       0       
      +0       0
 12741 ;;Total ram usage:       10 bytes
 12742 ;; Hardware stack levels used: 1
 12743 ;; Hardware stack levels required when called: 12
 12744 ;; This function calls:
 12745 ;;		___lwdiv
 12746 ;;		___lwmod
 12747 ;;		_pad
 12748 ;; This function is called by:
 12749 ;;		_vfpfcnvrt
 12750 ;; This function uses a non-reentrant model
 12751 ;;
 12752                           
 12753     164D                     _utoa:	
 12754                           ;psect for function _utoa
 12755                           
 12756     164D                     l4950:	
 12757                           ;incstack = 0
 12758 ;; hardware stack exceeded
 12759                           ; Regs used in _utoa: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 12760                           
 12761                           
 12762                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1001: static int 
      +                          utoa(FILE *fp, vfpf_uint_t d);C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\commo
      +                          n\doprnt.c: 1002: {;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c
      +                          : 1003:     int i, w;;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt
      +                          .c: 1007:  _Bool p = 1;
 12763     164D  3001               	movlw	1
 12764     164E  0021               	movlb	1	; select bank1
 12765     164F  00C1               	movwf	utoa@p^(0+128)
 12766     1650                     l4952:
 12767                           
 12768                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1019:     w = wid
      +                          th;
 12769     1650  086F               	movf	(_width+1)^(0+128),w
 12770     1651  00C3               	movwf	(utoa@w+1)^(0+128)
 12771     1652  086E               	movf	_width^(0+128),w
 12772     1653  00C2               	movwf	utoa@w^(0+128)
 12773                           
 12774                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1022:     i = siz
      +                          eof(dbuf) - 1;
 12775     1654  301F               	movlw	31
 12776     1655  00C4               	movwf	utoa@i^(0+128)
 12777     1656  3000               	movlw	0
 12778     1657  00C5               	movwf	(utoa@i^(0+128)+1)
 12779     1658                     l4954:
 12780                           
 12781                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1023:     dbuf[i]
      +                           = '\0';
 12782     1658  0023               	movlb	3	; select bank3
 12783     1659  01BF               	clrf	(_dbuf^(0+384)+31)
 12784                           
 12785                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1024:     while (
      +                          i && (d != 0
 12786     165A  2E89               	goto	l4966
 12787     165B                     l4956:
 12788                           
 12789                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1033:     )) {;C:
      +                          \Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1034:         --i;
 12790     165B  30FF               	movlw	255
 12791     165C  0021               	movlb	1	; select bank1
 12792     165D  07C4               	addwf	utoa@i^(0+128),f
 12793     165E  30FF               	movlw	255
 12794     165F  3DC5               	addwfc	(utoa@i+1)^(0+128),f
 12795     1660                     l4958:
 12796                           
 12797                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1035:         dbu
      +                          f[i] = '0' + (d % 10);
 12798     1660  0844               	movf	utoa@i^(0+128),w
 12799     1661  3EA0               	addlw	(low (_dbuf| (0+256)))& (0+255)
 12800     1662  0086               	movwf	6
 12801     1663  3001               	movlw	1	; select bank3/4
 12802     1664  0087               	movwf	7
 12803     1665  300A               	movlw	10
 12804     1666  00A0               	movwf	___lwmod@divisor^(0+128)
 12805     1667  3000               	movlw	0
 12806     1668  00A1               	movwf	(___lwmod@divisor^(0+128)+1)
 12807     1669  083F               	movf	(utoa@d+1)^(0+128),w
 12808     166A  00A3               	movwf	(___lwmod@dividend+1)^(0+128)
 12809     166B  083E               	movf	utoa@d^(0+128),w
 12810     166C  00A2               	movwf	___lwmod@dividend^(0+128)
 12811     166D  3191  21FF  3196   	fcall	___lwmod
 12812     1670  0021               	movlb	1	; select bank1
 12813     1671  0820               	movf	?___lwmod^(0+128),w
 12814     1672  3E30               	addlw	48
 12815     1673  0081               	movwf	1
 12816     1674                     l4960:
 12817                           
 12818                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1039:   p = 0;
 12819     1674  01C1               	clrf	utoa@p^(0+128)
 12820     1675                     l4962:
 12821                           
 12822                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1041:         --w
      +                          ;
 12823     1675  30FF               	movlw	255
 12824     1676  07C2               	addwf	utoa@w^(0+128),f
 12825     1677  30FF               	movlw	255
 12826     1678  3DC3               	addwfc	(utoa@w+1)^(0+128),f
 12827     1679                     l4964:
 12828                           
 12829                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1042:         d =
      +                           d / 10;
 12830     1679  300A               	movlw	10
 12831     167A  00A0               	movwf	___lwdiv@divisor^(0+128)
 12832     167B  3000               	movlw	0
 12833     167C  00A1               	movwf	(___lwdiv@divisor^(0+128)+1)
 12834     167D  083F               	movf	(utoa@d+1)^(0+128),w
 12835     167E  00A3               	movwf	(___lwdiv@dividend+1)^(0+128)
 12836     167F  083E               	movf	utoa@d^(0+128),w
 12837     1680  00A2               	movwf	___lwdiv@dividend^(0+128)
 12838     1681  3192  22A3  3196   	fcall	___lwdiv
 12839     1684  0021               	movlb	1	; select bank1
 12840     1685  0821               	movf	(?___lwdiv+1)^(0+128),w
 12841     1686  00BF               	movwf	(utoa@d+1)^(0+128)
 12842     1687  0820               	movf	?___lwdiv^(0+128),w
 12843     1688  00BE               	movwf	utoa@d^(0+128)
 12844     1689                     l4966:
 12845                           
 12846                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1024:     while (
      +                          i && (d != 0
 12847     1689  0021               	movlb	1	; select bank1
 12848     168A  0844               	movf	utoa@i^(0+128),w
 12849     168B  0445               	iorwf	(utoa@i+1)^(0+128),w
 12850     168C  1903               	btfsc	3,2
 12851     168D  2E8F               	goto	u4611
 12852     168E  2E90               	goto	u4610
 12853     168F                     u4611:
 12854     168F  2EAD               	goto	l4976
 12855     1690                     u4610:
 12856     1690                     l4968:
 12857     1690  083E               	movf	utoa@d^(0+128),w
 12858     1691  043F               	iorwf	(utoa@d+1)^(0+128),w
 12859     1692  1D03               	btfss	3,2
 12860     1693  2E95               	goto	u4621
 12861     1694  2E96               	goto	u4620
 12862     1695                     u4621:
 12863     1695  2E5B               	goto	l4956
 12864     1696                     u4620:
 12865     1696                     l4970:
 12866     1696  0841               	movf	utoa@p^(0+128),w
 12867     1697  1D03               	btfss	3,2
 12868     1698  2E9A               	goto	u4631
 12869     1699  2E9B               	goto	u4630
 12870     169A                     u4631:
 12871     169A  2E5B               	goto	l4956
 12872     169B                     u4630:
 12873     169B                     l4972:
 12874     169B  0843               	movf	(utoa@w+1)^(0+128),w
 12875     169C  3A80               	xorlw	128
 12876     169D  00C0               	movwf	??_utoa^(0+128)
 12877     169E  3080               	movlw	128
 12878     169F  0240               	subwf	??_utoa^(0+128),w
 12879     16A0  1D03               	skipz
 12880     16A1  2EA4               	goto	u4645
 12881     16A2  3001               	movlw	1
 12882     16A3  0242               	subwf	utoa@w^(0+128),w
 12883     16A4                     u4645:
 12884     16A4  1C03               	skipc
 12885     16A5  2EA7               	goto	u4641
 12886     16A6  2EA8               	goto	u4640
 12887     16A7                     u4641:
 12888     16A7  2EAD               	goto	l4976
 12889     16A8                     u4640:
 12890     16A8                     l4974:
 12891     16A8  0020               	movlb	0	; select bank0
 12892     16A9  18E5               	btfsc	_flags,1
 12893     16AA  2EAC               	goto	u4651
 12894     16AB  2EAD               	goto	u4650
 12895     16AC                     u4651:
 12896     16AC  2E5B               	goto	l4956
 12897     16AD                     u4650:
 12898     16AD                     l4976:
 12899                           
 12900                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1046:     return 
      +                          (int) pad(fp, &dbuf[i], w);
 12901     16AD  0021               	movlb	1	; select bank1
 12902     16AE  083D               	movf	(utoa@fp+1)^(0+128),w
 12903     16AF  00B5               	movwf	(pad@fp+1)^(0+128)
 12904     16B0  083C               	movf	utoa@fp^(0+128),w
 12905     16B1  00B4               	movwf	pad@fp^(0+128)
 12906     16B2  0844               	movf	utoa@i^(0+128),w
 12907     16B3  3EA0               	addlw	(low (_dbuf| (0+256)))& (0+255)
 12908     16B4  00B6               	movwf	pad@buf^(0+128)
 12909     16B5  0843               	movf	(utoa@w+1)^(0+128),w
 12910     16B6  00B8               	movwf	(pad@p+1)^(0+128)
 12911     16B7  0842               	movf	utoa@w^(0+128),w
 12912     16B8  00B7               	movwf	pad@p^(0+128)
 12913     16B9  3194  241A  3196   	fcall	_pad
 12914     16BC  0021               	movlb	1	; select bank1
 12915     16BD  0835               	movf	(?_pad+1)^(0+128),w
 12916     16BE  00BD               	movwf	(?_utoa+1)^(0+128)
 12917     16BF  0834               	movf	?_pad^(0+128),w
 12918     16C0  00BC               	movwf	?_utoa^(0+128)
 12919     16C1                     l1972:
 12920     16C1  0008               	return
 12921     16C2                     __end_of_utoa:
 12922                           
 12923                           	psect	text20
 12924     11FF                     __ptext20:	
 12925 ;; *************** function ___lwmod *****************
 12926 ;; Defined at:
 12927 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\lwmod.c"
 12928 ;; Parameters:    Size  Location     Type
 12929 ;;  divisor         2    0[BANK1 ] unsigned int 
 12930 ;;  dividend        2    2[BANK1 ] unsigned int 
 12931 ;; Auto vars:     Size  Location     Type
 12932 ;;  counter         1    4[BANK1 ] unsigned char 
 12933 ;; Return value:  Size  Location     Type
 12934 ;;                  2    0[BANK1 ] unsigned int 
 12935 ;; Registers used:
 12936 ;;		wreg, status,2, status,0
 12937 ;; Tracked objects:
 12938 ;;		On entry : 0/0
 12939 ;;		On exit  : 0/0
 12940 ;;		Unchanged: 0/0
 12941 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 12942 ;;      Params:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0
 12943 ;;      Locals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0
 12944 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12945 ;;      Totals:         0       0       5       0       0       0       0       0       0       0       0       0       
      +0       0
 12946 ;;Total ram usage:        5 bytes
 12947 ;; Hardware stack levels used: 1
 12948 ;; Hardware stack levels required when called: 7
 12949 ;; This function calls:
 12950 ;;		Nothing
 12951 ;; This function is called by:
 12952 ;;		_utoa
 12953 ;; This function uses a non-reentrant model
 12954 ;;
 12955                           
 12956     11FF                     ___lwmod:	
 12957                           ;psect for function ___lwmod
 12958                           
 12959     11FF                     l4848:	
 12960                           ;incstack = 0
 12961                           ; Regs used in ___lwmod: [wreg+status,2+status,0]
 12962                           
 12963     11FF  0021               	movlb	1	; select bank1
 12964     1200  0820               	movf	___lwmod@divisor^(0+128),w
 12965     1201  0421               	iorwf	(___lwmod@divisor+1)^(0+128),w
 12966     1202  1903               	btfsc	3,2
 12967     1203  2A05               	goto	u4401
 12968     1204  2A06               	goto	u4400
 12969     1205                     u4401:
 12970     1205  2A2D               	goto	l4866
 12971     1206                     u4400:
 12972     1206                     l4850:
 12973     1206  3001               	movlw	1
 12974     1207  00A4               	movwf	___lwmod@counter^(0+128)
 12975     1208  2A10               	goto	l4856
 12976     1209                     l4852:
 12977     1209  3001               	movlw	1
 12978     120A                     u4415:
 12979     120A  35A0               	lslf	___lwmod@divisor^(0+128),f
 12980     120B  0DA1               	rlf	(___lwmod@divisor+1)^(0+128),f
 12981     120C  0B89               	decfsz	9,f
 12982     120D  2A0A               	goto	u4415
 12983     120E                     l4854:
 12984     120E  3001               	movlw	1
 12985     120F  07A4               	addwf	___lwmod@counter^(0+128),f
 12986     1210                     l4856:
 12987     1210  1FA1               	btfss	(___lwmod@divisor+1)^(0+128),7
 12988     1211  2A13               	goto	u4421
 12989     1212  2A14               	goto	u4420
 12990     1213                     u4421:
 12991     1213  2A09               	goto	l4852
 12992     1214                     u4420:
 12993     1214                     l4858:
 12994     1214  0821               	movf	(___lwmod@divisor+1)^(0+128),w
 12995     1215  0223               	subwf	(___lwmod@dividend+1)^(0+128),w
 12996     1216  1D03               	skipz
 12997     1217  2A1A               	goto	u4435
 12998     1218  0820               	movf	___lwmod@divisor^(0+128),w
 12999     1219  0222               	subwf	___lwmod@dividend^(0+128),w
 13000     121A                     u4435:
 13001     121A  1C03               	skipc
 13002     121B  2A1D               	goto	u4431
 13003     121C  2A1E               	goto	u4430
 13004     121D                     u4431:
 13005     121D  2A22               	goto	l4862
 13006     121E                     u4430:
 13007     121E                     l4860:
 13008     121E  0820               	movf	___lwmod@divisor^(0+128),w
 13009     121F  02A2               	subwf	___lwmod@dividend^(0+128),f
 13010     1220  0821               	movf	(___lwmod@divisor+1)^(0+128),w
 13011     1221  3BA3               	subwfb	(___lwmod@dividend+1)^(0+128),f
 13012     1222                     l4862:
 13013     1222  3001               	movlw	1
 13014     1223                     u4445:
 13015     1223  36A1               	lsrf	(___lwmod@divisor+1)^(0+128),f
 13016     1224  0CA0               	rrf	___lwmod@divisor^(0+128),f
 13017     1225  0B89               	decfsz	9,f
 13018     1226  2A23               	goto	u4445
 13019     1227                     l4864:
 13020     1227  3001               	movlw	1
 13021     1228  02A4               	subwf	___lwmod@counter^(0+128),f
 13022     1229  1D03               	btfss	3,2
 13023     122A  2A2C               	goto	u4451
 13024     122B  2A2D               	goto	u4450
 13025     122C                     u4451:
 13026     122C  2A14               	goto	l4858
 13027     122D                     u4450:
 13028     122D                     l4866:
 13029     122D  0823               	movf	(___lwmod@dividend+1)^(0+128),w
 13030     122E  00A1               	movwf	(?___lwmod+1)^(0+128)
 13031     122F  0822               	movf	___lwmod@dividend^(0+128),w
 13032     1230  00A0               	movwf	?___lwmod^(0+128)
 13033     1231                     l1728:
 13034     1231  0008               	return
 13035     1232                     __end_of___lwmod:
 13036                           
 13037                           	psect	text21
 13038     12A3                     __ptext21:	
 13039 ;; *************** function ___lwdiv *****************
 13040 ;; Defined at:
 13041 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\lwdiv.c"
 13042 ;; Parameters:    Size  Location     Type
 13043 ;;  divisor         2    0[BANK1 ] unsigned int 
 13044 ;;  dividend        2    2[BANK1 ] unsigned int 
 13045 ;; Auto vars:     Size  Location     Type
 13046 ;;  quotient        2    4[BANK1 ] unsigned int 
 13047 ;;  counter         1    6[BANK1 ] unsigned char 
 13048 ;; Return value:  Size  Location     Type
 13049 ;;                  2    0[BANK1 ] unsigned int 
 13050 ;; Registers used:
 13051 ;;		wreg, status,2, status,0
 13052 ;; Tracked objects:
 13053 ;;		On entry : 0/0
 13054 ;;		On exit  : 0/0
 13055 ;;		Unchanged: 0/0
 13056 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 13057 ;;      Params:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0
 13058 ;;      Locals:         0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0
 13059 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13060 ;;      Totals:         0       0       7       0       0       0       0       0       0       0       0       0       
      +0       0
 13061 ;;Total ram usage:        7 bytes
 13062 ;; Hardware stack levels used: 1
 13063 ;; Hardware stack levels required when called: 7
 13064 ;; This function calls:
 13065 ;;		Nothing
 13066 ;; This function is called by:
 13067 ;;		_utoa
 13068 ;;		_dutycycle_led_strip
 13069 ;; This function uses a non-reentrant model
 13070 ;;
 13071                           
 13072     12A3                     ___lwdiv:	
 13073                           ;psect for function ___lwdiv
 13074                           
 13075     12A3                     l4822:	
 13076                           ;incstack = 0
 13077                           ; Regs used in ___lwdiv: [wreg+status,2+status,0]
 13078                           
 13079     12A3  0021               	movlb	1	; select bank1
 13080     12A4  01A4               	clrf	___lwdiv@quotient^(0+128)
 13081     12A5  01A5               	clrf	(___lwdiv@quotient+1)^(0+128)
 13082     12A6                     l4824:
 13083     12A6  0820               	movf	___lwdiv@divisor^(0+128),w
 13084     12A7  0421               	iorwf	(___lwdiv@divisor+1)^(0+128),w
 13085     12A8  1903               	btfsc	3,2
 13086     12A9  2AAB               	goto	u4331
 13087     12AA  2AAC               	goto	u4330
 13088     12AB                     u4331:
 13089     12AB  2AD9               	goto	l4844
 13090     12AC                     u4330:
 13091     12AC                     l4826:
 13092     12AC  3001               	movlw	1
 13093     12AD  00A6               	movwf	___lwdiv@counter^(0+128)
 13094     12AE  2AB6               	goto	l4832
 13095     12AF                     l4828:
 13096     12AF  3001               	movlw	1
 13097     12B0                     u4345:
 13098     12B0  35A0               	lslf	___lwdiv@divisor^(0+128),f
 13099     12B1  0DA1               	rlf	(___lwdiv@divisor+1)^(0+128),f
 13100     12B2  0B89               	decfsz	9,f
 13101     12B3  2AB0               	goto	u4345
 13102     12B4                     l4830:
 13103     12B4  3001               	movlw	1
 13104     12B5  07A6               	addwf	___lwdiv@counter^(0+128),f
 13105     12B6                     l4832:
 13106     12B6  1FA1               	btfss	(___lwdiv@divisor+1)^(0+128),7
 13107     12B7  2AB9               	goto	u4351
 13108     12B8  2ABA               	goto	u4350
 13109     12B9                     u4351:
 13110     12B9  2AAF               	goto	l4828
 13111     12BA                     u4350:
 13112     12BA                     l4834:
 13113     12BA  3001               	movlw	1
 13114     12BB                     u4365:
 13115     12BB  35A4               	lslf	___lwdiv@quotient^(0+128),f
 13116     12BC  0DA5               	rlf	(___lwdiv@quotient+1)^(0+128),f
 13117     12BD  0B89               	decfsz	9,f
 13118     12BE  2ABB               	goto	u4365
 13119     12BF  0821               	movf	(___lwdiv@divisor+1)^(0+128),w
 13120     12C0  0223               	subwf	(___lwdiv@dividend+1)^(0+128),w
 13121     12C1  1D03               	skipz
 13122     12C2  2AC5               	goto	u4375
 13123     12C3  0820               	movf	___lwdiv@divisor^(0+128),w
 13124     12C4  0222               	subwf	___lwdiv@dividend^(0+128),w
 13125     12C5                     u4375:
 13126     12C5  1C03               	skipc
 13127     12C6  2AC8               	goto	u4371
 13128     12C7  2AC9               	goto	u4370
 13129     12C8                     u4371:
 13130     12C8  2ACE               	goto	l4840
 13131     12C9                     u4370:
 13132     12C9                     l4836:
 13133     12C9  0820               	movf	___lwdiv@divisor^(0+128),w
 13134     12CA  02A2               	subwf	___lwdiv@dividend^(0+128),f
 13135     12CB  0821               	movf	(___lwdiv@divisor+1)^(0+128),w
 13136     12CC  3BA3               	subwfb	(___lwdiv@dividend+1)^(0+128),f
 13137     12CD                     l4838:
 13138     12CD  1424               	bsf	___lwdiv@quotient^(0+128),0
 13139     12CE                     l4840:
 13140     12CE  3001               	movlw	1
 13141     12CF                     u4385:
 13142     12CF  36A1               	lsrf	(___lwdiv@divisor+1)^(0+128),f
 13143     12D0  0CA0               	rrf	___lwdiv@divisor^(0+128),f
 13144     12D1  0B89               	decfsz	9,f
 13145     12D2  2ACF               	goto	u4385
 13146     12D3                     l4842:
 13147     12D3  3001               	movlw	1
 13148     12D4  02A6               	subwf	___lwdiv@counter^(0+128),f
 13149     12D5  1D03               	btfss	3,2
 13150     12D6  2AD8               	goto	u4391
 13151     12D7  2AD9               	goto	u4390
 13152     12D8                     u4391:
 13153     12D8  2ABA               	goto	l4834
 13154     12D9                     u4390:
 13155     12D9                     l4844:
 13156     12D9  0825               	movf	(___lwdiv@quotient+1)^(0+128),w
 13157     12DA  00A1               	movwf	(?___lwdiv+1)^(0+128)
 13158     12DB  0824               	movf	___lwdiv@quotient^(0+128),w
 13159     12DC  00A0               	movwf	?___lwdiv^(0+128)
 13160     12DD                     l1718:
 13161     12DD  0008               	return
 13162     12DE                     __end_of___lwdiv:
 13163                           
 13164                           	psect	text22
 13165     1524                     __ptext22:	
 13166 ;; *************** function _read_prec_or_width *****************
 13167 ;; Defined at:
 13168 ;;		line 1158 in file "C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c"
 13169 ;; Parameters:    Size  Location     Type
 13170 ;;  fmt             1    6[BANK1 ] PTR PTR const unsigned c
 13171 ;;		 -> vfprintf@cfmt(2), 
 13172 ;;  ap              1    7[BANK1 ] PTR PTR void [1]
 13173 ;;		 -> printf@ap(1), 
 13174 ;; Auto vars:     Size  Location     Type
 13175 ;;  c               1   11[BANK1 ] unsigned char 
 13176 ;;  n               2   12[BANK1 ] int 
 13177 ;; Return value:  Size  Location     Type
 13178 ;;                  2    6[BANK1 ] int 
 13179 ;; Registers used:
 13180 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 13181 ;; Tracked objects:
 13182 ;;		On entry : 0/0
 13183 ;;		On exit  : 0/0
 13184 ;;		Unchanged: 0/0
 13185 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 13186 ;;      Params:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0
 13187 ;;      Locals:         0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0
 13188 ;;      Temps:          0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0
 13189 ;;      Totals:         0       0       8       0       0       0       0       0       0       0       0       0       
      +0       0
 13190 ;;Total ram usage:        8 bytes
 13191 ;; Hardware stack levels used: 1
 13192 ;; Hardware stack levels required when called: 8
 13193 ;; This function calls:
 13194 ;;		___wmul
 13195 ;; This function is called by:
 13196 ;;		_vfpfcnvrt
 13197 ;; This function uses a non-reentrant model
 13198 ;;
 13199                           
 13200     1524                     _read_prec_or_width:	
 13201                           ;psect for function _read_prec_or_width
 13202                           
 13203     1524                     l4980:	
 13204                           ;incstack = 0
 13205                           ; Regs used in _read_prec_or_width: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 13206                           
 13207                           
 13208                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1159:     int n =
      +                           0;
 13209     1524  0021               	movlb	1	; select bank1
 13210     1525  01AC               	clrf	read_prec_or_width@n^(0+128)
 13211     1526  01AD               	clrf	(read_prec_or_width@n+1)^(0+128)
 13212     1527                     l4982:
 13213                           
 13214                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1160:     if ((*f
      +                          mt)[0] == '*') {
 13215     1527  0826               	movf	read_prec_or_width@fmt^(0+128),w
 13216     1528  0086               	movwf	6
 13217     1529  0187               	clrf	7
 13218     152A  3F40               	moviw [0]fsr1
 13219     152B  00A8               	movwf	??_read_prec_or_width^(0+128)
 13220     152C  3F41               	moviw [1]fsr1
 13221     152D  00A9               	movwf	(??_read_prec_or_width^(0+128)+1)
 13222     152E  0828               	movf	??_read_prec_or_width^(0+128),w
 13223     152F  0084               	movwf	4
 13224     1530  0829               	movf	(??_read_prec_or_width+1)^(0+128),w
 13225     1531  0085               	movwf	5
 13226     1532  0012               	moviw fsr0++
 13227     1533  3A2A               	xorlw	42
 13228     1534  1D03               	btfss	3,2
 13229     1535  2D37               	goto	u4661
 13230     1536  2D38               	goto	u4660
 13231     1537                     u4661:
 13232     1537  2D67               	goto	l4992
 13233     1538                     u4660:
 13234     1538                     l4984:
 13235                           
 13236                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1161:         ++*
      +                          fmt;
 13237     1538  0826               	movf	read_prec_or_width@fmt^(0+128),w
 13238     1539  0086               	movwf	6
 13239     153A  0187               	clrf	7
 13240     153B  3001               	movlw	1
 13241     153C  0781               	addwf	1,f
 13242     153D  3141               	addfsr 1,1
 13243     153E  1803               	skipnc
 13244     153F  0A81               	incf	1,f
 13245     1540                     l4986:
 13246                           
 13247                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1162:         n =
      +                           (*(int *)__va_arg(*(int **)*ap, (int)0));
 13248     1540  0827               	movf	read_prec_or_width@ap^(0+128),w
 13249     1541  0086               	movwf	6
 13250     1542  0187               	clrf	7
 13251     1543  0801               	movf	1,w
 13252     1544  0084               	movwf	4
 13253     1545  0185               	clrf	5
 13254     1546  3002               	movlw	2
 13255     1547  0781               	addwf	1,f
 13256     1548  3F00               	moviw [0]fsr0
 13257     1549  00AC               	movwf	read_prec_or_width@n^(0+128)
 13258     154A  3F01               	moviw [1]fsr0
 13259     154B  00AD               	movwf	(read_prec_or_width@n+1)^(0+128)
 13260                           
 13261                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1163:     } else 
      +                          {
 13262     154C  2D7B               	goto	l4994
 13263     154D                     l4988:
 13264                           
 13265                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1166:            
      +                           n = n * 10 + c;
 13266     154D  082D               	movf	(read_prec_or_width@n+1)^(0+128),w
 13267     154E  00A1               	movwf	(___wmul@multiplier+1)^(0+128)
 13268     154F  082C               	movf	read_prec_or_width@n^(0+128),w
 13269     1550  00A0               	movwf	___wmul@multiplier^(0+128)
 13270     1551  300A               	movlw	10
 13271     1552  00A2               	movwf	___wmul@multiplicand^(0+128)
 13272     1553  3000               	movlw	0
 13273     1554  00A3               	movwf	(___wmul@multiplicand^(0+128)+1)
 13274     1555  3190  2077  3195   	fcall	___wmul
 13275     1558  0021               	movlb	1	; select bank1
 13276     1559  082B               	movf	read_prec_or_width@c^(0+128),w
 13277     155A  0720               	addwf	?___wmul^(0+128),w
 13278     155B  00AC               	movwf	read_prec_or_width@n^(0+128)
 13279     155C  3000               	movlw	0
 13280     155D  3D21               	addwfc	(?___wmul+1)^(0+128),w
 13281     155E  00AD               	movwf	(read_prec_or_width@n+1)^(0+128)
 13282     155F                     l4990:
 13283                           
 13284                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1167:            
      +                           ++*fmt;
 13285     155F  0826               	movf	read_prec_or_width@fmt^(0+128),w
 13286     1560  0086               	movwf	6
 13287     1561  0187               	clrf	7
 13288     1562  3001               	movlw	1
 13289     1563  0781               	addwf	1,f
 13290     1564  3141               	addfsr 1,1
 13291     1565  1803               	skipnc
 13292     1566  0A81               	incf	1,f
 13293     1567                     l4992:
 13294                           
 13295                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1165:         whi
      +                          le ((c = ((unsigned)(*fmt)[0]) - '0') < 10) {
 13296     1567  0826               	movf	read_prec_or_width@fmt^(0+128),w
 13297     1568  0086               	movwf	6
 13298     1569  0187               	clrf	7
 13299     156A  3F40               	moviw [0]fsr1
 13300     156B  00A8               	movwf	??_read_prec_or_width^(0+128)
 13301     156C  3F41               	moviw [1]fsr1
 13302     156D  00A9               	movwf	(??_read_prec_or_width^(0+128)+1)
 13303     156E  0828               	movf	??_read_prec_or_width^(0+128),w
 13304     156F  0084               	movwf	4
 13305     1570  0829               	movf	(??_read_prec_or_width+1)^(0+128),w
 13306     1571  0085               	movwf	5
 13307     1572  0800               	movf	0,w	;code access
 13308     1573  3ED0               	addlw	208
 13309     1574  00AB               	movwf	read_prec_or_width@c^(0+128)
 13310     1575  300A               	movlw	10
 13311     1576  022B               	subwf	read_prec_or_width@c^(0+128),w
 13312     1577  1C03               	skipc
 13313     1578  2D7A               	goto	u4671
 13314     1579  2D7B               	goto	u4670
 13315     157A                     u4671:
 13316     157A  2D4D               	goto	l4988
 13317     157B                     u4670:
 13318     157B                     l4994:
 13319                           
 13320                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1170:     return 
      +                          n;
 13321     157B  082D               	movf	(read_prec_or_width@n+1)^(0+128),w
 13322     157C  00A7               	movwf	(?_read_prec_or_width+1)^(0+128)
 13323     157D  082C               	movf	read_prec_or_width@n^(0+128),w
 13324     157E  00A6               	movwf	?_read_prec_or_width^(0+128)
 13325     157F                     l1980:
 13326     157F  0008               	return
 13327     1580                     __end_of_read_prec_or_width:
 13328                           
 13329                           	psect	text23
 13330     1077                     __ptext23:	
 13331 ;; *************** function ___wmul *****************
 13332 ;; Defined at:
 13333 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\Umul16.c"
 13334 ;; Parameters:    Size  Location     Type
 13335 ;;  multiplier      2    0[BANK1 ] unsigned int 
 13336 ;;  multiplicand    2    2[BANK1 ] unsigned int 
 13337 ;; Auto vars:     Size  Location     Type
 13338 ;;  product         2    4[BANK1 ] unsigned int 
 13339 ;; Return value:  Size  Location     Type
 13340 ;;                  2    0[BANK1 ] unsigned int 
 13341 ;; Registers used:
 13342 ;;		wreg, status,2, status,0
 13343 ;; Tracked objects:
 13344 ;;		On entry : 0/0
 13345 ;;		On exit  : 0/0
 13346 ;;		Unchanged: 0/0
 13347 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 13348 ;;      Params:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0
 13349 ;;      Locals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0
 13350 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13351 ;;      Totals:         0       0       6       0       0       0       0       0       0       0       0       0       
      +0       0
 13352 ;;Total ram usage:        6 bytes
 13353 ;; Hardware stack levels used: 1
 13354 ;; Hardware stack levels required when called: 7
 13355 ;; This function calls:
 13356 ;;		Nothing
 13357 ;; This function is called by:
 13358 ;;		_atoi
 13359 ;;		_read_prec_or_width
 13360 ;;		_SPI1_Open
 13361 ;;		_dutycycle_led_strip
 13362 ;; This function uses a non-reentrant model
 13363 ;;
 13364                           
 13365     1077                     ___wmul:	
 13366                           ;psect for function ___wmul
 13367                           
 13368     1077                     l4726:	
 13369                           ;incstack = 0
 13370                           ; Regs used in ___wmul: [wreg+status,2+status,0]
 13371                           
 13372     1077  0021               	movlb	1	; select bank1
 13373     1078  01A4               	clrf	___wmul@product^(0+128)
 13374     1079  01A5               	clrf	(___wmul@product+1)^(0+128)
 13375     107A                     l4728:
 13376     107A  1C20               	btfss	___wmul@multiplier^(0+128),0
 13377     107B  287D               	goto	u4101
 13378     107C  287E               	goto	u4100
 13379     107D                     u4101:
 13380     107D  2882               	goto	l1438
 13381     107E                     u4100:
 13382     107E                     l4730:
 13383     107E  0822               	movf	___wmul@multiplicand^(0+128),w
 13384     107F  07A4               	addwf	___wmul@product^(0+128),f
 13385     1080  0823               	movf	(___wmul@multiplicand+1)^(0+128),w
 13386     1081  3DA5               	addwfc	(___wmul@product+1)^(0+128),f
 13387     1082                     l1438:
 13388     1082  3001               	movlw	1
 13389     1083                     u4115:
 13390     1083  35A2               	lslf	___wmul@multiplicand^(0+128),f
 13391     1084  0DA3               	rlf	(___wmul@multiplicand+1)^(0+128),f
 13392     1085  0B89               	decfsz	9,f
 13393     1086  2883               	goto	u4115
 13394     1087                     l4732:
 13395     1087  3001               	movlw	1
 13396     1088                     u4125:
 13397     1088  36A1               	lsrf	(___wmul@multiplier+1)^(0+128),f
 13398     1089  0CA0               	rrf	___wmul@multiplier^(0+128),f
 13399     108A  0B89               	decfsz	9,f
 13400     108B  2888               	goto	u4125
 13401     108C                     l4734:
 13402     108C  0820               	movf	___wmul@multiplier^(0+128),w
 13403     108D  0421               	iorwf	(___wmul@multiplier+1)^(0+128),w
 13404     108E  1D03               	btfss	3,2
 13405     108F  2891               	goto	u4131
 13406     1090  2892               	goto	u4130
 13407     1091                     u4131:
 13408     1091  287A               	goto	l4728
 13409     1092                     u4130:
 13410     1092                     l4736:
 13411     1092  0825               	movf	(___wmul@product+1)^(0+128),w
 13412     1093  00A1               	movwf	(?___wmul+1)^(0+128)
 13413     1094  0824               	movf	___wmul@product^(0+128),w
 13414     1095  00A0               	movwf	?___wmul^(0+128)
 13415     1096                     l1440:
 13416     1096  0008               	return
 13417     1097                     __end_of___wmul:
 13418                           
 13419                           	psect	text24
 13420     072B                     __ptext24:	
 13421 ;; *************** function _dtoa *****************
 13422 ;; Defined at:
 13423 ;;		line 513 in file "C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c"
 13424 ;; Parameters:    Size  Location     Type
 13425 ;;  fp              2   28[BANK1 ] PTR struct _IO_FILE
 13426 ;;		 -> NULL(0), 
 13427 ;;  d               2   30[BANK1 ] int 
 13428 ;; Auto vars:     Size  Location     Type
 13429 ;;  i               2   39[BANK1 ] int 
 13430 ;;  w               2   36[BANK1 ] int 
 13431 ;;  s               1   38[BANK1 ] unsigned char 
 13432 ;;  p               1   35[BANK1 ] _Bool 
 13433 ;; Return value:  Size  Location     Type
 13434 ;;                  2   28[BANK1 ] int 
 13435 ;; Registers used:
 13436 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 13437 ;; Tracked objects:
 13438 ;;		On entry : 0/0
 13439 ;;		On exit  : 0/0
 13440 ;;		Unchanged: 0/0
 13441 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 13442 ;;      Params:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0
 13443 ;;      Locals:         0       0       8       0       0       0       0       0       0       0       0       0       
      +0       0
 13444 ;;      Temps:          0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0
 13445 ;;      Totals:         0       0      13       0       0       0       0       0       0       0       0       0       
      +0       0
 13446 ;;Total ram usage:       13 bytes
 13447 ;; Hardware stack levels used: 1
 13448 ;; Hardware stack levels required when called: 12
 13449 ;; This function calls:
 13450 ;;		___awdiv
 13451 ;;		___awmod
 13452 ;;		_abs
 13453 ;;		_pad
 13454 ;; This function is called by:
 13455 ;;		_vfpfcnvrt
 13456 ;; This function uses a non-reentrant model
 13457 ;;
 13458                           
 13459     072B                     _dtoa:	
 13460                           ;psect for function _dtoa
 13461                           
 13462     072B                     l4904:	
 13463                           ;incstack = 0
 13464 ;; hardware stack exceeded
 13465                           ; Regs used in _dtoa: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 13466                           
 13467                           
 13468                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 513: static int d
      +                          toa(FILE *fp, vfpf_sint_t d);C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common
      +                          \doprnt.c: 514: {;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 
      +                          515:  char s;;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 516:
      +                               int i, w;;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 520
      +                          :  _Bool p = 1;
 13469     072B  3001               	movlw	1
 13470     072C  0021               	movlb	1	; select bank1
 13471     072D  00C3               	movwf	dtoa@p^(0+128)
 13472     072E                     l4906:
 13473                           
 13474                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 524:     s = d < 
      +                          0 ? 1 : 0;
 13475     072E  1BBF               	btfsc	(dtoa@d+1)^(0+128),7
 13476     072F  2F31               	goto	u4511
 13477     0730  2F33               	goto	u4510
 13478     0731                     u4511:
 13479     0731  3001               	movlw	1
 13480     0732  2F34               	goto	u4520
 13481     0733                     u4510:
 13482     0733  3000               	movlw	0
 13483     0734                     u4520:
 13484     0734  00C6               	movwf	dtoa@s^(0+128)
 13485                           
 13486                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 535:     w = widt
      +                          h;
 13487     0735  086F               	movf	(_width+1)^(0+128),w
 13488     0736  00C5               	movwf	(dtoa@w+1)^(0+128)
 13489     0737  086E               	movf	_width^(0+128),w
 13490     0738  00C4               	movwf	dtoa@w^(0+128)
 13491     0739                     l4908:
 13492                           
 13493                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 536:     if (s
 13494     0739  0846               	movf	dtoa@s^(0+128),w
 13495     073A  1903               	btfsc	3,2
 13496     073B  2F3D               	goto	u4531
 13497     073C  2F3E               	goto	u4530
 13498     073D                     u4531:
 13499     073D  2F52               	goto	l1949
 13500     073E                     u4530:
 13501     073E                     l4910:
 13502                           
 13503                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 540:     ) {;C:\P
      +                          rogram Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 541:         --w;
 13504     073E  30FF               	movlw	255
 13505     073F  07C4               	addwf	dtoa@w^(0+128),f
 13506     0740  30FF               	movlw	255
 13507     0741  3DC5               	addwfc	(dtoa@w+1)^(0+128),f
 13508     0742                     l4912:
 13509                           
 13510                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 542:   s = s ? '-
      +                          ' : '+';
 13511     0742  0846               	movf	dtoa@s^(0+128),w
 13512     0743  1D03               	btfss	3,2
 13513     0744  2F46               	goto	u4541
 13514     0745  2F47               	goto	u4540
 13515     0746                     u4541:
 13516     0746  2F4C               	goto	l4916
 13517     0747                     u4540:
 13518     0747                     l4914:
 13519     0747  302B               	movlw	43
 13520     0748  00C1               	movwf	_dtoa$2620^(0+128)
 13521     0749  3000               	movlw	0
 13522     074A  00C2               	movwf	(_dtoa$2620^(0+128)+1)
 13523     074B  2F50               	goto	l1953
 13524     074C                     l4916:
 13525     074C  302D               	movlw	45
 13526     074D  00C1               	movwf	_dtoa$2620^(0+128)
 13527     074E  3000               	movlw	0
 13528     074F  00C2               	movwf	(_dtoa$2620^(0+128)+1)
 13529     0750                     l1953:
 13530     0750  0841               	movf	_dtoa$2620^(0+128),w
 13531     0751  00C6               	movwf	dtoa@s^(0+128)
 13532     0752                     l1949:	
 13533                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 543:     }
 13534                           
 13535                           
 13536                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 552:     i = size
      +                          of(dbuf) - 1;
 13537     0752  301F               	movlw	31
 13538     0753  00C7               	movwf	dtoa@i^(0+128)
 13539     0754  3000               	movlw	0
 13540     0755  00C8               	movwf	(dtoa@i^(0+128)+1)
 13541     0756                     l4918:
 13542                           
 13543                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 553:     dbuf[i] 
      +                          = '\0';
 13544     0756  0023               	movlb	3	; select bank3
 13545     0757  01BF               	clrf	(_dbuf^(0+384)+31)
 13546                           
 13547                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 554:     while (!
      +                          (i < 1) && (d != 0
 13548     0758  2F8F               	goto	l4930
 13549     0759                     l4920:
 13550                           
 13551                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 563:     )) {;C:\
      +                          Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 564:         --i;
 13552     0759  30FF               	movlw	255
 13553     075A  0021               	movlb	1	; select bank1
 13554     075B  07C7               	addwf	dtoa@i^(0+128),f
 13555     075C  30FF               	movlw	255
 13556     075D  3DC8               	addwfc	(dtoa@i+1)^(0+128),f
 13557     075E                     l4922:
 13558                           
 13559                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 565:         dbuf
      +                          [i] = (char)((int)'0' + abs(d % 10));
 13560     075E  0847               	movf	dtoa@i^(0+128),w
 13561     075F  3EA0               	addlw	(low (_dbuf| (0+256)))& (0+255)
 13562     0760  0086               	movwf	6
 13563     0761  3001               	movlw	1	; select bank3/4
 13564     0762  0087               	movwf	7
 13565     0763  300A               	movlw	10
 13566     0764  00A0               	movwf	___awmod@divisor^(0+128)
 13567     0765  3000               	movlw	0
 13568     0766  00A1               	movwf	(___awmod@divisor^(0+128)+1)
 13569     0767  083F               	movf	(dtoa@d+1)^(0+128),w
 13570     0768  00A3               	movwf	(___awmod@dividend+1)^(0+128)
 13571     0769  083E               	movf	dtoa@d^(0+128),w
 13572     076A  00A2               	movwf	___awmod@dividend^(0+128)
 13573     076B  3193  2374  3187   	fcall	___awmod
 13574     076E  0021               	movlb	1	; select bank1
 13575     076F  0821               	movf	(?___awmod+1)^(0+128),w
 13576     0770  00A7               	movwf	(abs@a+1)^(0+128)
 13577     0771  0820               	movf	?___awmod^(0+128),w
 13578     0772  00A6               	movwf	abs@a^(0+128)
 13579     0773  3190  2000  3187   	fcall	_abs
 13580     0776  0021               	movlb	1	; select bank1
 13581     0777  0826               	movf	?_abs^(0+128),w
 13582     0778  3E30               	addlw	48
 13583     0779  0081               	movwf	1
 13584     077A                     l4924:
 13585                           
 13586                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 569:   p = 0;
 13587     077A  01C3               	clrf	dtoa@p^(0+128)
 13588     077B                     l4926:
 13589                           
 13590                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 571:         --w;
 13591     077B  30FF               	movlw	255
 13592     077C  07C4               	addwf	dtoa@w^(0+128),f
 13593     077D  30FF               	movlw	255
 13594     077E  3DC5               	addwfc	(dtoa@w+1)^(0+128),f
 13595     077F                     l4928:
 13596                           
 13597                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 572:         d = 
      +                          d / 10;
 13598     077F  300A               	movlw	10
 13599     0780  00A0               	movwf	___awdiv@divisor^(0+128)
 13600     0781  3000               	movlw	0
 13601     0782  00A1               	movwf	(___awdiv@divisor^(0+128)+1)
 13602     0783  083F               	movf	(dtoa@d+1)^(0+128),w
 13603     0784  00A3               	movwf	(___awdiv@dividend+1)^(0+128)
 13604     0785  083E               	movf	dtoa@d^(0+128),w
 13605     0786  00A2               	movwf	___awdiv@dividend^(0+128)
 13606     0787  3194  24C8  3187   	fcall	___awdiv
 13607     078A  0021               	movlb	1	; select bank1
 13608     078B  0821               	movf	(?___awdiv+1)^(0+128),w
 13609     078C  00BF               	movwf	(dtoa@d+1)^(0+128)
 13610     078D  0820               	movf	?___awdiv^(0+128),w
 13611     078E  00BE               	movwf	dtoa@d^(0+128)
 13612     078F                     l4930:
 13613                           
 13614                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 554:     while (!
      +                          (i < 1) && (d != 0
 13615     078F  0021               	movlb	1	; select bank1
 13616     0790  0848               	movf	(dtoa@i+1)^(0+128),w
 13617     0791  3A80               	xorlw	128
 13618     0792  00C0               	movwf	??_dtoa^(0+128)
 13619     0793  3080               	movlw	128
 13620     0794  0240               	subwf	??_dtoa^(0+128),w
 13621     0795  1D03               	skipz
 13622     0796  2F99               	goto	u4555
 13623     0797  3001               	movlw	1
 13624     0798  0247               	subwf	dtoa@i^(0+128),w
 13625     0799                     u4555:
 13626     0799  1C03               	skipc
 13627     079A  2F9C               	goto	u4551
 13628     079B  2F9D               	goto	u4550
 13629     079C                     u4551:
 13630     079C  2FBB               	goto	l4940
 13631     079D                     u4550:
 13632     079D                     l4932:
 13633     079D  0021               	movlb	1	; select bank1
 13634     079E  083E               	movf	dtoa@d^(0+128),w
 13635     079F  043F               	iorwf	(dtoa@d+1)^(0+128),w
 13636     07A0  1D03               	btfss	3,2
 13637     07A1  2FA3               	goto	u4561
 13638     07A2  2FA4               	goto	u4560
 13639     07A3                     u4561:
 13640     07A3  2F59               	goto	l4920
 13641     07A4                     u4560:
 13642     07A4                     l4934:
 13643     07A4  0843               	movf	dtoa@p^(0+128),w
 13644     07A5  1D03               	btfss	3,2
 13645     07A6  2FA8               	goto	u4571
 13646     07A7  2FA9               	goto	u4570
 13647     07A8                     u4571:
 13648     07A8  2F59               	goto	l4920
 13649     07A9                     u4570:
 13650     07A9                     l4936:
 13651     07A9  0845               	movf	(dtoa@w+1)^(0+128),w
 13652     07AA  3A80               	xorlw	128
 13653     07AB  00C0               	movwf	??_dtoa^(0+128)
 13654     07AC  3080               	movlw	128
 13655     07AD  0240               	subwf	??_dtoa^(0+128),w
 13656     07AE  1D03               	skipz
 13657     07AF  2FB2               	goto	u4585
 13658     07B0  3001               	movlw	1
 13659     07B1  0244               	subwf	dtoa@w^(0+128),w
 13660     07B2                     u4585:
 13661     07B2  1C03               	skipc
 13662     07B3  2FB5               	goto	u4581
 13663     07B4  2FB6               	goto	u4580
 13664     07B5                     u4581:
 13665     07B5  2FBB               	goto	l4940
 13666     07B6                     u4580:
 13667     07B6                     l4938:
 13668     07B6  0020               	movlb	0	; select bank0
 13669     07B7  18E5               	btfsc	_flags,1
 13670     07B8  2FBA               	goto	u4591
 13671     07B9  2FBB               	goto	u4590
 13672     07BA                     u4591:
 13673     07BA  2F59               	goto	l4920
 13674     07BB                     u4590:
 13675     07BB                     l4940:
 13676                           
 13677                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 576:     if (s !=
      +                           0) {
 13678     07BB  0021               	movlb	1	; select bank1
 13679     07BC  0846               	movf	dtoa@s^(0+128),w
 13680     07BD  1903               	btfsc	3,2
 13681     07BE  2FC0               	goto	u4601
 13682     07BF  2FC1               	goto	u4600
 13683     07C0                     u4601:
 13684     07C0  2FCC               	goto	l4946
 13685     07C1                     u4600:
 13686     07C1                     l4942:
 13687                           
 13688                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 577:         --i;
 13689     07C1  30FF               	movlw	255
 13690     07C2  07C7               	addwf	dtoa@i^(0+128),f
 13691     07C3  30FF               	movlw	255
 13692     07C4  3DC8               	addwfc	(dtoa@i+1)^(0+128),f
 13693     07C5                     l4944:
 13694                           
 13695                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 578:         dbuf
      +                          [i] = s;
 13696     07C5  0847               	movf	dtoa@i^(0+128),w
 13697     07C6  3EA0               	addlw	(low (_dbuf| (0+256)))& (0+255)
 13698     07C7  0086               	movwf	6
 13699     07C8  3001               	movlw	1	; select bank3/4
 13700     07C9  0087               	movwf	7
 13701     07CA  0846               	movf	dtoa@s^(0+128),w
 13702     07CB  0081               	movwf	1
 13703     07CC                     l4946:
 13704                           
 13705                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 582:     return (
      +                          int) pad(fp, &dbuf[i], w);
 13706     07CC  083D               	movf	(dtoa@fp+1)^(0+128),w
 13707     07CD  00B5               	movwf	(pad@fp+1)^(0+128)
 13708     07CE  083C               	movf	dtoa@fp^(0+128),w
 13709     07CF  00B4               	movwf	pad@fp^(0+128)
 13710     07D0  0847               	movf	dtoa@i^(0+128),w
 13711     07D1  3EA0               	addlw	(low (_dbuf| (0+256)))& (0+255)
 13712     07D2  00B6               	movwf	pad@buf^(0+128)
 13713     07D3  0845               	movf	(dtoa@w+1)^(0+128),w
 13714     07D4  00B8               	movwf	(pad@p+1)^(0+128)
 13715     07D5  0844               	movf	dtoa@w^(0+128),w
 13716     07D6  00B7               	movwf	pad@p^(0+128)
 13717     07D7  3194  241A  3187   	fcall	_pad
 13718     07DA  0021               	movlb	1	; select bank1
 13719     07DB  0835               	movf	(?_pad+1)^(0+128),w
 13720     07DC  00BD               	movwf	(?_dtoa+1)^(0+128)
 13721     07DD  0834               	movf	?_pad^(0+128),w
 13722     07DE  00BC               	movwf	?_dtoa^(0+128)
 13723     07DF                     l1962:
 13724     07DF  0008               	return
 13725     07E0                     __end_of_dtoa:
 13726                           
 13727                           	psect	text25
 13728     141A                     __ptext25:	
 13729 ;; *************** function _pad *****************
 13730 ;; Defined at:
 13731 ;;		line 193 in file "C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c"
 13732 ;; Parameters:    Size  Location     Type
 13733 ;;  fp              2   20[BANK1 ] PTR struct _IO_FILE
 13734 ;;		 -> NULL(0), 
 13735 ;;  buf             1   22[BANK1 ] PTR unsigned char 
 13736 ;;		 -> dbuf(32), 
 13737 ;;  p               2   23[BANK1 ] int 
 13738 ;; Auto vars:     Size  Location     Type
 13739 ;;  i               2   26[BANK1 ] int 
 13740 ;; Return value:  Size  Location     Type
 13741 ;;                  2   20[BANK1 ] int 
 13742 ;; Registers used:
 13743 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 13744 ;; Tracked objects:
 13745 ;;		On entry : 0/0
 13746 ;;		On exit  : 0/0
 13747 ;;		Unchanged: 0/0
 13748 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 13749 ;;      Params:         0       0       5       0       0       0       0       0       0       0       0       0       
      +0       0
 13750 ;;      Locals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0
 13751 ;;      Temps:          0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0
 13752 ;;      Totals:         0       0       8       0       0       0       0       0       0       0       0       0       
      +0       0
 13753 ;;Total ram usage:        8 bytes
 13754 ;; Hardware stack levels used: 1
 13755 ;; Hardware stack levels required when called: 11
 13756 ;; This function calls:
 13757 ;;		_fputc
 13758 ;;		_fputs
 13759 ;;		_strlen
 13760 ;; This function is called by:
 13761 ;;		_dtoa
 13762 ;;		_utoa
 13763 ;; This function uses a non-reentrant model
 13764 ;;
 13765                           
 13766     141A                     _pad:	
 13767                           ;psect for function _pad
 13768                           
 13769     141A                     l4870:	
 13770                           ;incstack = 0
 13771 ;; hardware stack exceeded
 13772                           ; Regs used in _pad: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 13773                           
 13774                           
 13775                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 193: static int p
      +                          ad(FILE *fp, char *buf, int p);C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\comm
      +                          on\doprnt.c: 194: {;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c
      +                          : 195:     int i;;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 
      +                          199:     if (flags & (1 << 0)) {
 13776     141A  0020               	movlb	0	; select bank0
 13777     141B  1C65               	btfss	_flags,0
 13778     141C  2C1E               	goto	u4461
 13779     141D  2C1F               	goto	u4460
 13780     141E                     u4461:
 13781     141E  2C29               	goto	l4874
 13782     141F                     u4460:
 13783     141F                     l4872:
 13784                           
 13785                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 200:         fput
      +                          s((const char *)buf, fp);
 13786     141F  0021               	movlb	1	; select bank1
 13787     1420  0836               	movf	pad@buf^(0+128),w
 13788     1421  00AC               	movwf	fputs@s^(0+128)
 13789     1422  0835               	movf	(pad@fp+1)^(0+128),w
 13790     1423  00AE               	movwf	(fputs@fp+1)^(0+128)
 13791     1424  0834               	movf	pad@fp^(0+128),w
 13792     1425  00AD               	movwf	fputs@fp^(0+128)
 13793     1426  3190  20DC  3194   	fcall	_fputs
 13794     1429                     l4874:
 13795                           
 13796                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 205:  if (p < 0) 
      +                          {
 13797     1429  0021               	movlb	1	; select bank1
 13798     142A  1FB8               	btfss	(pad@p+1)^(0+128),7
 13799     142B  2C2D               	goto	u4471
 13800     142C  2C2E               	goto	u4470
 13801     142D                     u4471:
 13802     142D  2C30               	goto	l1941
 13803     142E                     u4470:
 13804     142E                     l4876:
 13805                           
 13806                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 206:   p = 0;
 13807     142E  01B7               	clrf	pad@p^(0+128)
 13808     142F  01B8               	clrf	(pad@p+1)^(0+128)
 13809     1430                     l1941:	
 13810                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 207:  }
 13811                           
 13812                           
 13813                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 208:     i = 0;
 13814     1430  01BA               	clrf	pad@i^(0+128)
 13815     1431  01BB               	clrf	(pad@i+1)^(0+128)
 13816                           
 13817                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 209:     while (i
      +                           < p) {
 13818     1432  2C44               	goto	l4882
 13819     1433                     l4878:
 13820                           
 13821                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 210:         fput
      +                          c(' ', fp);
 13822     1433  3020               	movlw	32
 13823     1434  0021               	movlb	1	; select bank1
 13824     1435  00A3               	movwf	fputc@c^(0+128)
 13825     1436  3000               	movlw	0
 13826     1437  00A4               	movwf	(fputc@c^(0+128)+1)
 13827     1438  0835               	movf	(pad@fp+1)^(0+128),w
 13828     1439  00A6               	movwf	(fputc@fp+1)^(0+128)
 13829     143A  0834               	movf	pad@fp^(0+128),w
 13830     143B  00A5               	movwf	fputc@fp^(0+128)
 13831     143C  3195  2580  3194   	fcall	_fputc
 13832     143F                     l4880:
 13833                           
 13834                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 211:         ++i;
 13835     143F  3001               	movlw	1
 13836     1440  0021               	movlb	1	; select bank1
 13837     1441  07BA               	addwf	pad@i^(0+128),f
 13838     1442  3000               	movlw	0
 13839     1443  3DBB               	addwfc	(pad@i+1)^(0+128),f
 13840     1444                     l4882:
 13841                           
 13842                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 209:     while (i
      +                           < p) {
 13843     1444  083B               	movf	(pad@i+1)^(0+128),w
 13844     1445  3A80               	xorlw	128
 13845     1446  00B9               	movwf	??_pad^(0+128)
 13846     1447  0838               	movf	(pad@p+1)^(0+128),w
 13847     1448  3A80               	xorlw	128
 13848     1449  0239               	subwf	??_pad^(0+128),w
 13849     144A  1D03               	skipz
 13850     144B  2C4E               	goto	u4485
 13851     144C  0837               	movf	pad@p^(0+128),w
 13852     144D  023A               	subwf	pad@i^(0+128),w
 13853     144E                     u4485:
 13854     144E  1C03               	skipc
 13855     144F  2C51               	goto	u4481
 13856     1450  2C52               	goto	u4480
 13857     1451                     u4481:
 13858     1451  2C33               	goto	l4878
 13859     1452                     u4480:
 13860     1452                     l1944:
 13861                           
 13862                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 216:     if (!(fl
      +                          ags & (1 << 0))) {
 13863     1452  0020               	movlb	0	; select bank0
 13864     1453  1865               	btfsc	_flags,0
 13865     1454  2C56               	goto	u4491
 13866     1455  2C57               	goto	u4490
 13867     1456                     u4491:
 13868     1456  2C61               	goto	l4886
 13869     1457                     u4490:
 13870     1457                     l4884:
 13871                           
 13872                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 218:         fput
      +                          s((const char *)buf, fp);
 13873     1457  0021               	movlb	1	; select bank1
 13874     1458  0836               	movf	pad@buf^(0+128),w
 13875     1459  00AC               	movwf	fputs@s^(0+128)
 13876     145A  0835               	movf	(pad@fp+1)^(0+128),w
 13877     145B  00AE               	movwf	(fputs@fp+1)^(0+128)
 13878     145C  0834               	movf	pad@fp^(0+128),w
 13879     145D  00AD               	movwf	fputs@fp^(0+128)
 13880     145E  3190  20DC  3194   	fcall	_fputs
 13881     1461                     l4886:
 13882                           
 13883                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 224:     return (
      +                          int)(strlen(buf) + (size_t)p);
 13884     1461  0021               	movlb	1	; select bank1
 13885     1462  0836               	movf	pad@buf^(0+128),w
 13886     1463  00A0               	movwf	strlen@s^(0+128)
 13887     1464  3190  2028  3194   	fcall	_strlen
 13888     1467  0021               	movlb	1	; select bank1
 13889     1468  0837               	movf	pad@p^(0+128),w
 13890     1469  0720               	addwf	?_strlen^(0+128),w
 13891     146A  00B4               	movwf	?_pad^(0+128)
 13892     146B  0838               	movf	(pad@p+1)^(0+128),w
 13893     146C  3D21               	addwfc	(?_strlen+1)^(0+128),w
 13894     146D  00B5               	movwf	(?_pad+1)^(0+128)
 13895     146E                     l1946:
 13896     146E  0008               	return
 13897     146F                     __end_of_pad:
 13898                           
 13899                           	psect	text26
 13900     1028                     __ptext26:	
 13901 ;; *************** function _strlen *****************
 13902 ;; Defined at:
 13903 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\strlen.c"
 13904 ;; Parameters:    Size  Location     Type
 13905 ;;  s               1    0[BANK1 ] PTR const unsigned char 
 13906 ;;		 -> dbuf(32), 
 13907 ;; Auto vars:     Size  Location     Type
 13908 ;;  a               1    2[BANK1 ] PTR const unsigned char 
 13909 ;;		 -> dbuf(32), 
 13910 ;; Return value:  Size  Location     Type
 13911 ;;                  2    0[BANK1 ] unsigned int 
 13912 ;; Registers used:
 13913 ;;		wreg, fsr1l, fsr1h, status,2, status,0
 13914 ;; Tracked objects:
 13915 ;;		On entry : 0/0
 13916 ;;		On exit  : 0/0
 13917 ;;		Unchanged: 0/0
 13918 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 13919 ;;      Params:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0
 13920 ;;      Locals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0
 13921 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13922 ;;      Totals:         0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0
 13923 ;;Total ram usage:        3 bytes
 13924 ;; Hardware stack levels used: 1
 13925 ;; Hardware stack levels required when called: 7
 13926 ;; This function calls:
 13927 ;;		Nothing
 13928 ;; This function is called by:
 13929 ;;		_pad
 13930 ;; This function uses a non-reentrant model
 13931 ;;
 13932                           
 13933     1028                     _strlen:	
 13934                           ;psect for function _strlen
 13935                           
 13936     1028                     l4716:	
 13937                           ;incstack = 0
 13938                           ; Regs used in _strlen: [wreg+fsr1l+fsr1h+status,2+status,0]
 13939                           
 13940     1028  0021               	movlb	1	; select bank1
 13941     1029  0820               	movf	strlen@s^(0+128),w
 13942     102A  00A2               	movwf	strlen@a^(0+128)
 13943     102B  282E               	goto	l4720
 13944     102C                     l4718:
 13945     102C  3001               	movlw	1
 13946     102D  07A0               	addwf	strlen@s^(0+128),f
 13947     102E                     l4720:
 13948     102E  0820               	movf	strlen@s^(0+128),w
 13949     102F  0086               	movwf	6
 13950     1030  3001               	movlw	1	; select bank2/3
 13951     1031  0087               	movwf	7
 13952     1032  0801               	movf	1,w
 13953     1033  1D03               	btfss	3,2
 13954     1034  2836               	goto	u4091
 13955     1035  2837               	goto	u4090
 13956     1036                     u4091:
 13957     1036  282C               	goto	l4718
 13958     1037                     u4090:
 13959     1037                     l4722:
 13960     1037  0822               	movf	strlen@a^(0+128),w
 13961     1038  0220               	subwf	strlen@s^(0+128),w
 13962     1039  00A0               	movwf	?_strlen^(0+128)
 13963     103A  01A1               	clrf	(?_strlen+1)^(0+128)
 13964     103B  1BA0               	btfsc	?_strlen^(0+128),7
 13965     103C  03A1               	decf	(?_strlen+1)^(0+128),f
 13966     103D                     l2042:
 13967     103D  0008               	return
 13968     103E                     __end_of_strlen:
 13969                           
 13970                           	psect	text27
 13971     10DC                     __ptext27:	
 13972 ;; *************** function _fputs *****************
 13973 ;; Defined at:
 13974 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\nf_fputs.c"
 13975 ;; Parameters:    Size  Location     Type
 13976 ;;  s               1   12[BANK1 ] PTR const unsigned char 
 13977 ;;		 -> dbuf(32), 
 13978 ;;  fp              2   13[BANK1 ] PTR struct _IO_FILE
 13979 ;;		 -> NULL(0), 
 13980 ;; Auto vars:     Size  Location     Type
 13981 ;;  i               2   18[BANK1 ] int 
 13982 ;;  c               1   17[BANK1 ] unsigned char 
 13983 ;; Return value:  Size  Location     Type
 13984 ;;                  2   12[BANK1 ] int 
 13985 ;; Registers used:
 13986 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 13987 ;; Tracked objects:
 13988 ;;		On entry : 0/0
 13989 ;;		On exit  : 0/0
 13990 ;;		Unchanged: 0/0
 13991 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 13992 ;;      Params:         0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0
 13993 ;;      Locals:         0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0
 13994 ;;      Temps:          0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0
 13995 ;;      Totals:         0       0       8       0       0       0       0       0       0       0       0       0       
      +0       0
 13996 ;;Total ram usage:        8 bytes
 13997 ;; Hardware stack levels used: 1
 13998 ;; Hardware stack levels required when called: 10
 13999 ;; This function calls:
 14000 ;;		_fputc
 14001 ;; This function is called by:
 14002 ;;		_pad
 14003 ;; This function uses a non-reentrant model
 14004 ;;
 14005                           
 14006     10DC                     _fputs:	
 14007                           ;psect for function _fputs
 14008                           
 14009     10DC                     l4708:	
 14010                           ;incstack = 0
 14011 ;; hardware stack exceeded
 14012                           ; Regs used in _fputs: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 14013                           
 14014     10DC  0021               	movlb	1	; select bank1
 14015     10DD  01B2               	clrf	fputs@i^(0+128)
 14016     10DE  01B3               	clrf	(fputs@i+1)^(0+128)
 14017     10DF  28F3               	goto	l4714
 14018     10E0                     l4710:
 14019     10E0  0831               	movf	fputs@c^(0+128),w
 14020     10E1  00AF               	movwf	??_fputs^(0+128)
 14021     10E2  01B0               	clrf	(??_fputs^(0+128)+1)
 14022     10E3  082F               	movf	??_fputs^(0+128),w
 14023     10E4  00A3               	movwf	fputc@c^(0+128)
 14024     10E5  0830               	movf	(??_fputs+1)^(0+128),w
 14025     10E6  00A4               	movwf	(fputc@c+1)^(0+128)
 14026     10E7  082E               	movf	(fputs@fp+1)^(0+128),w
 14027     10E8  00A6               	movwf	(fputc@fp+1)^(0+128)
 14028     10E9  082D               	movf	fputs@fp^(0+128),w
 14029     10EA  00A5               	movwf	fputc@fp^(0+128)
 14030     10EB  3195  2580  3190   	fcall	_fputc
 14031     10EE                     l4712:
 14032     10EE  3001               	movlw	1
 14033     10EF  0021               	movlb	1	; select bank1
 14034     10F0  07B2               	addwf	fputs@i^(0+128),f
 14035     10F1  3000               	movlw	0
 14036     10F2  3DB3               	addwfc	(fputs@i+1)^(0+128),f
 14037     10F3                     l4714:
 14038     10F3  082C               	movf	fputs@s^(0+128),w
 14039     10F4  0732               	addwf	fputs@i^(0+128),w
 14040     10F5  0086               	movwf	6
 14041     10F6  3001               	movlw	1	; select bank2/3
 14042     10F7  0087               	movwf	7
 14043     10F8  0801               	movf	1,w
 14044     10F9  00B1               	movwf	fputs@c^(0+128)
 14045     10FA  0831               	movf	fputs@c^(0+128),w
 14046     10FB  1D03               	btfss	3,2
 14047     10FC  28FE               	goto	u4081
 14048     10FD  28FF               	goto	u4080
 14049     10FE                     u4081:
 14050     10FE  28E0               	goto	l4710
 14051     10FF                     u4080:
 14052     10FF                     l2036:
 14053     10FF  0008               	return
 14054     1100                     __end_of_fputs:
 14055                           
 14056                           	psect	text28
 14057     1580                     __ptext28:	
 14058 ;; *************** function _fputc *****************
 14059 ;; Defined at:
 14060 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\nf_fputc.c"
 14061 ;; Parameters:    Size  Location     Type
 14062 ;;  c               2    3[BANK1 ] int 
 14063 ;;  fp              2    5[BANK1 ] PTR struct _IO_FILE
 14064 ;;		 -> NULL(0), 
 14065 ;; Auto vars:     Size  Location     Type
 14066 ;;		None
 14067 ;; Return value:  Size  Location     Type
 14068 ;;                  2    3[BANK1 ] int 
 14069 ;; Registers used:
 14070 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 14071 ;; Tracked objects:
 14072 ;;		On entry : 0/0
 14073 ;;		On exit  : 0/0
 14074 ;;		Unchanged: 0/0
 14075 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 14076 ;;      Params:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0
 14077 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14078 ;;      Temps:          0       0       5       0       0       0       0       0       0       0       0       0       
      +0       0
 14079 ;;      Totals:         0       0       9       0       0       0       0       0       0       0       0       0       
      +0       0
 14080 ;;Total ram usage:        9 bytes
 14081 ;; Hardware stack levels used: 1
 14082 ;; Hardware stack levels required when called: 9
 14083 ;; This function calls:
 14084 ;;		_putch
 14085 ;; This function is called by:
 14086 ;;		_pad
 14087 ;;		_vfpfcnvrt
 14088 ;;		_fputs
 14089 ;; This function uses a non-reentrant model
 14090 ;;
 14091                           
 14092     1580                     _fputc:	
 14093                           ;psect for function _fputc
 14094                           
 14095     1580                     l4692:	
 14096                           ;incstack = 0
 14097 ;; hardware stack exceeded
 14098                           ; Regs used in _fputc: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 14099                           
 14100     1580  0021               	movlb	1	; select bank1
 14101     1581  0825               	movf	fputc@fp^(0+128),w
 14102     1582  0426               	iorwf	(fputc@fp+1)^(0+128),w
 14103     1583  1903               	btfsc	3,2
 14104     1584  2D86               	goto	u4041
 14105     1585  2D87               	goto	u4040
 14106     1586                     u4041:
 14107     1586  2D8D               	goto	l4696
 14108     1587                     u4040:
 14109     1587                     l4694:
 14110     1587  0825               	movf	fputc@fp^(0+128),w
 14111     1588  0426               	iorwf	(fputc@fp+1)^(0+128),w
 14112     1589  1D03               	btfss	3,2
 14113     158A  2D8C               	goto	u4051
 14114     158B  2D8D               	goto	u4050
 14115     158C                     u4051:
 14116     158C  2D92               	goto	l4698
 14117     158D                     u4050:
 14118     158D                     l4696:
 14119     158D  0823               	movf	fputc@c^(0+128),w
 14120     158E  319F  27A3  3195   	fcall	_putch
 14121     1591  2DDD               	goto	l2028
 14122     1592                     l4698:
 14123     1592  0825               	movf	fputc@fp^(0+128),w
 14124     1593  0086               	movwf	6
 14125     1594  0826               	movf	(fputc@fp+1)^(0+128),w
 14126     1595  0087               	movwf	7
 14127     1596  3149               	addfsr 1,9
 14128     1597  0016               	moviw fsr1++
 14129     1598  0401               	iorwf	1,w
 14130     1599  1903               	btfsc	3,2
 14131     159A  2D9C               	goto	u4061
 14132     159B  2D9D               	goto	u4060
 14133     159C                     u4061:
 14134     159C  2DBD               	goto	l4702
 14135     159D                     u4060:
 14136     159D                     l4700:
 14137     159D  0825               	movf	fputc@fp^(0+128),w
 14138     159E  0086               	movwf	6
 14139     159F  0826               	movf	(fputc@fp+1)^(0+128),w
 14140     15A0  0087               	movwf	7
 14141     15A1  3149               	addfsr 1,9
 14142     15A2  3F40               	moviw [0]fsr1
 14143     15A3  00A7               	movwf	??_fputc^(0+128)
 14144     15A4  3F41               	moviw [1]fsr1
 14145     15A5  00A8               	movwf	(??_fputc^(0+128)+1)
 14146     15A6  0825               	movf	fputc@fp^(0+128),w
 14147     15A7  0086               	movwf	6
 14148     15A8  0826               	movf	(fputc@fp+1)^(0+128),w
 14149     15A9  0087               	movwf	7
 14150     15AA  3142               	addfsr 1,2
 14151     15AB  3F40               	moviw [0]fsr1
 14152     15AC  00A9               	movwf	(??_fputc+2)^(0+128)
 14153     15AD  3F41               	moviw [1]fsr1
 14154     15AE  00AA               	movwf	((??_fputc+2)^(0+128)+1)
 14155     15AF  082A               	movf	(??_fputc+3)^(0+128),w
 14156     15B0  3A80               	xorlw	128
 14157     15B1  00AB               	movwf	(??_fputc+4)^(0+128)
 14158     15B2  0828               	movf	(??_fputc+1)^(0+128),w
 14159     15B3  3A80               	xorlw	128
 14160     15B4  022B               	subwf	(??_fputc+4)^(0+128),w
 14161     15B5  1D03               	skipz
 14162     15B6  2DB9               	goto	u4075
 14163     15B7  0827               	movf	??_fputc^(0+128),w
 14164     15B8  0229               	subwf	(??_fputc+2)^(0+128),w
 14165     15B9                     u4075:
 14166     15B9  1803               	skipnc
 14167     15BA  2DBC               	goto	u4071
 14168     15BB  2DBD               	goto	u4070
 14169     15BC                     u4071:
 14170     15BC  2DDD               	goto	l2028
 14171     15BD                     u4070:
 14172     15BD                     l4702:
 14173     15BD  0021               	movlb	1	; select bank1
 14174     15BE  0825               	movf	fputc@fp^(0+128),w
 14175     15BF  0086               	movwf	6
 14176     15C0  0826               	movf	(fputc@fp+1)^(0+128),w
 14177     15C1  0087               	movwf	7
 14178     15C2  3142               	addfsr 1,2
 14179     15C3  0825               	movf	fputc@fp^(0+128),w
 14180     15C4  0084               	movwf	4
 14181     15C5  0826               	movf	(fputc@fp+1)^(0+128),w
 14182     15C6  0085               	movwf	5
 14183     15C7  3F00               	moviw [0]fsr0
 14184     15C8  00A7               	movwf	??_fputc^(0+128)
 14185     15C9  3F01               	moviw [1]fsr0
 14186     15CA  00A8               	movwf	(??_fputc^(0+128)+1)
 14187     15CB  3F40               	moviw [0]fsr1
 14188     15CC  0727               	addwf	??_fputc^(0+128),w
 14189     15CD  0084               	movwf	4
 14190     15CE  3F41               	moviw [1]fsr1
 14191     15CF  3D28               	addwfc	(??_fputc+1)^(0+128),w
 14192     15D0  0085               	movwf	5
 14193     15D1  0823               	movf	fputc@c^(0+128),w
 14194     15D2  0080               	movwf	0
 14195     15D3                     l4704:
 14196     15D3  0825               	movf	fputc@fp^(0+128),w
 14197     15D4  0086               	movwf	6
 14198     15D5  0826               	movf	(fputc@fp+1)^(0+128),w
 14199     15D6  0087               	movwf	7
 14200     15D7  3142               	addfsr 1,2
 14201     15D8  3001               	movlw	1
 14202     15D9  0781               	addwf	1,f
 14203     15DA  3141               	addfsr 1,1
 14204     15DB  1803               	skipnc
 14205     15DC  0A81               	incf	1,f
 14206     15DD                     l2028:
 14207     15DD  0008               	return
 14208     15DE                     __end_of_fputc:
 14209                           
 14210                           	psect	text29
 14211     1FA3                     __ptext29:	
 14212 ;; *************** function _putch *****************
 14213 ;; Defined at:
 14214 ;;		line 409 in file "mcc_generated_files/uart/src/eusart.c"
 14215 ;; Parameters:    Size  Location     Type
 14216 ;;  txData          1    wreg     unsigned char 
 14217 ;; Auto vars:     Size  Location     Type
 14218 ;;  txData          1    2[BANK1 ] unsigned char 
 14219 ;; Return value:  Size  Location     Type
 14220 ;;                  1    wreg      void 
 14221 ;; Registers used:
 14222 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 14223 ;; Tracked objects:
 14224 ;;		On entry : 0/0
 14225 ;;		On exit  : 0/0
 14226 ;;		Unchanged: 0/0
 14227 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 14228 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14229 ;;      Locals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0
 14230 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14231 ;;      Totals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0
 14232 ;;Total ram usage:        1 bytes
 14233 ;; Hardware stack levels used: 1
 14234 ;; Hardware stack levels required when called: 8
 14235 ;; This function calls:
 14236 ;;		_EUSART_IsTxReady
 14237 ;;		_EUSART_Write
 14238 ;; This function is called by:
 14239 ;;		_fputc
 14240 ;; This function uses a non-reentrant model
 14241 ;;
 14242                           
 14243     1FA3                     _putch:	
 14244                           ;psect for function _putch
 14245                           
 14246                           
 14247                           ;incstack = 0
 14248 ;; hardware stack exceeded
 14249                           ; Regs used in _putch: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
 14250                           ;putch@txData stored from wreg
 14251     1FA3  0021               	movlb	1	; select bank1
 14252     1FA4  00A2               	movwf	putch@txData^(0+128)
 14253     1FA5                     l4684:
 14254     1FA5                     l4686:	
 14255                           ;mcc_generated_files/uart/src/eusart.c: 409: void putch(char txData);mcc_generated_files
      +                          /uart/src/eusart.c: 410: {;mcc_generated_files/uart/src/eusart.c: 411:     while(!(EUSAR
      +                          T_IsTxReady()))
 14256                           
 14257                           
 14258                           ;mcc_generated_files/uart/src/eusart.c: 411:     while(!(EUSART_IsTxReady()))
 14259     1FA5  319E  26A2  319F   	fcall	_EUSART_IsTxReady
 14260     1FA8  3A00               	xorlw	0
 14261     1FA9  1903               	skipnz
 14262     1FAA  2FAC               	goto	u4031
 14263     1FAB  2FAD               	goto	u4030
 14264     1FAC                     u4031:
 14265     1FAC  2FA5               	goto	l4686
 14266     1FAD                     u4030:
 14267     1FAD                     l4688:
 14268                           
 14269                           ;mcc_generated_files/uart/src/eusart.c: 415:     return EUSART_Write(txData);;	Return va
      +                          lue of _putch is never used
 14270     1FAD  0021               	movlb	1	; select bank1
 14271     1FAE  0822               	movf	putch@txData^(0+128),w
 14272     1FAF  00A0               	movwf	EUSART_Write@txData^(0+128)
 14273     1FB0  3191  2124  319F   	fcall	_EUSART_Write
 14274     1FB3                     l754:
 14275     1FB3  0008               	return
 14276     1FB4                     __end_of_putch:
 14277                           
 14278                           	psect	text30
 14279     1124                     __ptext30:	
 14280 ;; *************** function _EUSART_Write *****************
 14281 ;; Defined at:
 14282 ;;		line 353 in file "mcc_generated_files/uart/src/eusart.c"
 14283 ;; Parameters:    Size  Location     Type
 14284 ;;  txData          1    0[BANK1 ] unsigned char 
 14285 ;; Auto vars:     Size  Location     Type
 14286 ;;  tempTxHead      1    1[BANK1 ] unsigned char 
 14287 ;; Return value:  Size  Location     Type
 14288 ;;                  1    wreg      void 
 14289 ;; Registers used:
 14290 ;;		wreg, fsr1l, fsr1h, status,2, status,0
 14291 ;; Tracked objects:
 14292 ;;		On entry : 0/0
 14293 ;;		On exit  : 0/0
 14294 ;;		Unchanged: 0/0
 14295 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 14296 ;;      Params:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0
 14297 ;;      Locals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0
 14298 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14299 ;;      Totals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0
 14300 ;;Total ram usage:        2 bytes
 14301 ;; Hardware stack levels used: 1
 14302 ;; Hardware stack levels required when called: 7
 14303 ;; This function calls:
 14304 ;;		Nothing
 14305 ;; This function is called by:
 14306 ;;		_putch
 14307 ;; This function uses a non-reentrant model
 14308 ;;
 14309                           
 14310     1124                     _EUSART_Write:	
 14311                           ;psect for function _EUSART_Write
 14312                           
 14313     1124                     l4668:	
 14314                           ;incstack = 0
 14315 ;; hardware stack exceeded
 14316                           ; Regs used in _EUSART_Write: [wreg+fsr1l+fsr1h+status,2+status,0]
 14317                           
 14318                           
 14319                           ;mcc_generated_files/uart/src/eusart.c: 353: void EUSART_Write(uint8_t txData);mcc_gener
      +                          ated_files/uart/src/eusart.c: 354: {;mcc_generated_files/uart/src/eusart.c: 355:     uin
      +                          t8_t tempTxHead;;mcc_generated_files/uart/src/eusart.c: 357:     if(0 == PIE1bits.TXIE)
 14320     1124  0021               	movlb	1	; select bank1
 14321     1125  1A11               	btfsc	17,4	;volatile
 14322     1126  2928               	goto	u4011
 14323     1127  2929               	goto	u4010
 14324     1128                     u4011:
 14325     1128  292D               	goto	l4672
 14326     1129                     u4010:
 14327     1129                     l4670:
 14328                           
 14329                           ;mcc_generated_files/uart/src/eusart.c: 358:     {;mcc_generated_files/uart/src/eusart.c
      +                          : 359:         TX1REG = txData;
 14330     1129  0820               	movf	EUSART_Write@txData^(0+128),w
 14331     112A  0023               	movlb	3	; select bank3
 14332     112B  009A               	movwf	26	;volatile
 14333                           
 14334                           ;mcc_generated_files/uart/src/eusart.c: 360:     }
 14335     112C  2949               	goto	l733
 14336     112D                     l4672:
 14337     112D  0020               	movlb	0	; select bank0
 14338     112E  086B               	movf	_eusartTxBufferRemaining,w	;volatile
 14339     112F  1903               	btfsc	3,2
 14340     1130  2932               	goto	u4021
 14341     1131  2933               	goto	u4020
 14342     1132                     u4021:
 14343     1132  2949               	goto	l733
 14344     1133                     u4020:
 14345     1133                     l4674:
 14346                           
 14347                           ;mcc_generated_files/uart/src/eusart.c: 362:     {;mcc_generated_files/uart/src/eusart.c
      +                          : 363:        eusartTxBuffer[eusartTxHead] = txData;
 14348     1133  086D               	movf	_eusartTxHead,w
 14349     1134  3E38               	addlw	(low (_eusartTxBuffer| (0+256)))& (0+255)
 14350     1135  0086               	movwf	6
 14351     1136  3001               	movlw	1	; select bank2/3
 14352     1137  0087               	movwf	7
 14353     1138  0021               	movlb	1	; select bank1
 14354     1139  0820               	movf	EUSART_Write@txData^(0+128),w
 14355     113A  0081               	movwf	1
 14356     113B                     l4676:
 14357                           
 14358                           ;mcc_generated_files/uart/src/eusart.c: 364:        tempTxHead = (eusartTxHead + 1U) & (
      +                          (8U) - 1U);
 14359     113B  0020               	movlb	0	; select bank0
 14360     113C  086D               	movf	_eusartTxHead,w	;volatile
 14361     113D  3E01               	addlw	1
 14362     113E  3907               	andlw	7
 14363     113F  0021               	movlb	1	; select bank1
 14364     1140  00A1               	movwf	EUSART_Write@tempTxHead^(0+128)
 14365     1141                     l4678:
 14366                           
 14367                           ;mcc_generated_files/uart/src/eusart.c: 366:        eusartTxHead = tempTxHead;
 14368     1141  0821               	movf	EUSART_Write@tempTxHead^(0+128),w
 14369     1142  0020               	movlb	0	; select bank0
 14370     1143  00ED               	movwf	_eusartTxHead	;volatile
 14371     1144                     l4680:
 14372                           
 14373                           ;mcc_generated_files/uart/src/eusart.c: 367:        PIE1bits.TXIE = 0;
 14374     1144  0021               	movlb	1	; select bank1
 14375     1145  1211               	bcf	17,4	;volatile
 14376     1146                     l4682:
 14377                           
 14378                           ;mcc_generated_files/uart/src/eusart.c: 368:        eusartTxBufferRemaining--;
 14379     1146  3001               	movlw	1
 14380     1147  0020               	movlb	0	; select bank0
 14381     1148  02EB               	subwf	_eusartTxBufferRemaining,f	;volatile
 14382     1149                     l733:	
 14383                           ;mcc_generated_files/uart/src/eusart.c: 369:     }
 14384                           
 14385                           
 14386                           ;mcc_generated_files/uart/src/eusart.c: 374:     PIE1bits.TXIE = 1;
 14387     1149  0021               	movlb	1	; select bank1
 14388     114A  1611               	bsf	17,4	;volatile
 14389     114B                     l736:
 14390     114B  0008               	return
 14391     114C                     __end_of_EUSART_Write:
 14392                           
 14393                           	psect	text31
 14394     1EA2                     __ptext31:	
 14395 ;; *************** function _EUSART_IsTxReady *****************
 14396 ;; Defined at:
 14397 ;;		line 272 in file "mcc_generated_files/uart/src/eusart.c"
 14398 ;; Parameters:    Size  Location     Type
 14399 ;;		None
 14400 ;; Auto vars:     Size  Location     Type
 14401 ;;		None
 14402 ;; Return value:  Size  Location     Type
 14403 ;;                  1    wreg      _Bool 
 14404 ;; Registers used:
 14405 ;;		wreg, status,2, status,0
 14406 ;; Tracked objects:
 14407 ;;		On entry : 0/0
 14408 ;;		On exit  : 0/0
 14409 ;;		Unchanged: 0/0
 14410 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 14411 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14412 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14413 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14414 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14415 ;;Total ram usage:        0 bytes
 14416 ;; Hardware stack levels used: 1
 14417 ;; Hardware stack levels required when called: 7
 14418 ;; This function calls:
 14419 ;;		Nothing
 14420 ;; This function is called by:
 14421 ;;		_putch
 14422 ;; This function uses a non-reentrant model
 14423 ;;
 14424                           
 14425     1EA2                     _EUSART_IsTxReady:	
 14426                           ;psect for function _EUSART_IsTxReady
 14427                           
 14428     1EA2                     l4664:	
 14429                           ;incstack = 0
 14430 ;; hardware stack exceeded
 14431                           ; Regs used in _EUSART_IsTxReady: [wreg+status,2+status,0]
 14432                           
 14433                           
 14434                           ;mcc_generated_files/uart/src/eusart.c: 274:     return (eusartTxBufferRemaining ? 1 : 0
      +                          );
 14435     1EA2  0020               	movlb	0	; select bank0
 14436     1EA3  086B               	movf	_eusartTxBufferRemaining,w	;volatile
 14437     1EA4  1D03               	btfss	3,2
 14438     1EA5  2EA7               	goto	u3991
 14439     1EA6  2EA9               	goto	u3990
 14440     1EA7                     u3991:
 14441     1EA7  3001               	movlw	1
 14442     1EA8  2EAA               	goto	u4000
 14443     1EA9                     u3990:
 14444     1EA9  3000               	movlw	0
 14445     1EAA                     u4000:
 14446     1EAA                     l709:
 14447     1EAA  0008               	return
 14448     1EAB                     __end_of_EUSART_IsTxReady:
 14449                           
 14450                           	psect	text32
 14451     1000                     __ptext32:	
 14452 ;; *************** function _abs *****************
 14453 ;; Defined at:
 14454 ;;		line 1 in file "C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\abs.c"
 14455 ;; Parameters:    Size  Location     Type
 14456 ;;  a               2    6[BANK1 ] int 
 14457 ;; Auto vars:     Size  Location     Type
 14458 ;;		None
 14459 ;; Return value:  Size  Location     Type
 14460 ;;                  2    6[BANK1 ] int 
 14461 ;; Registers used:
 14462 ;;		wreg, status,2, status,0
 14463 ;; Tracked objects:
 14464 ;;		On entry : 0/0
 14465 ;;		On exit  : 0/0
 14466 ;;		Unchanged: 0/0
 14467 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 14468 ;;      Params:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0
 14469 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14470 ;;      Temps:          0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0
 14471 ;;      Totals:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0
 14472 ;;Total ram usage:        4 bytes
 14473 ;; Hardware stack levels used: 1
 14474 ;; Hardware stack levels required when called: 7
 14475 ;; This function calls:
 14476 ;;		Nothing
 14477 ;; This function is called by:
 14478 ;;		_dtoa
 14479 ;; This function uses a non-reentrant model
 14480 ;;
 14481                           
 14482     1000                     _abs:	
 14483                           ;psect for function _abs
 14484                           
 14485     1000                     l4890:	
 14486                           ;incstack = 0
 14487                           ; Regs used in _abs: [wreg+status,2+status,0]
 14488                           
 14489     1000  0021               	movlb	1	; select bank1
 14490     1001  1BA7               	btfsc	(abs@a+1)^(0+128),7
 14491     1002  2804               	goto	u4501
 14492     1003  2805               	goto	u4500
 14493     1004                     u4501:
 14494     1004  2806               	goto	l4894
 14495     1005                     u4500:
 14496     1005                     l4892:
 14497     1005  2811               	goto	l2016
 14498     1006                     l4894:
 14499     1006  0926               	comf	abs@a^(0+128),w
 14500     1007  00A8               	movwf	??_abs^(0+128)
 14501     1008  0927               	comf	(abs@a+1)^(0+128),w
 14502     1009  00A9               	movwf	(??_abs^(0+128)+1)
 14503     100A  0AA8               	incf	??_abs^(0+128),f
 14504     100B  1903               	skipnz
 14505     100C  0AA9               	incf	(??_abs^(0+128)+1),f
 14506     100D  0828               	movf	??_abs^(0+128),w
 14507     100E  00A6               	movwf	?_abs^(0+128)
 14508     100F  0829               	movf	(??_abs+1)^(0+128),w
 14509     1010  00A7               	movwf	(?_abs+1)^(0+128)
 14510     1011                     l2016:
 14511     1011  0008               	return
 14512     1012                     __end_of_abs:
 14513                           
 14514                           	psect	text33
 14515     1374                     __ptext33:	
 14516 ;; *************** function ___awmod *****************
 14517 ;; Defined at:
 14518 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\awmod.c"
 14519 ;; Parameters:    Size  Location     Type
 14520 ;;  divisor         2    0[BANK1 ] int 
 14521 ;;  dividend        2    2[BANK1 ] int 
 14522 ;; Auto vars:     Size  Location     Type
 14523 ;;  sign            1    5[BANK1 ] unsigned char 
 14524 ;;  counter         1    4[BANK1 ] unsigned char 
 14525 ;; Return value:  Size  Location     Type
 14526 ;;                  2    0[BANK1 ] int 
 14527 ;; Registers used:
 14528 ;;		wreg, status,2, status,0
 14529 ;; Tracked objects:
 14530 ;;		On entry : 0/0
 14531 ;;		On exit  : 0/0
 14532 ;;		Unchanged: 0/0
 14533 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 14534 ;;      Params:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0
 14535 ;;      Locals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0
 14536 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14537 ;;      Totals:         0       0       6       0       0       0       0       0       0       0       0       0       
      +0       0
 14538 ;;Total ram usage:        6 bytes
 14539 ;; Hardware stack levels used: 1
 14540 ;; Hardware stack levels required when called: 7
 14541 ;; This function calls:
 14542 ;;		Nothing
 14543 ;; This function is called by:
 14544 ;;		_dtoa
 14545 ;; This function uses a non-reentrant model
 14546 ;;
 14547                           
 14548     1374                     ___awmod:	
 14549                           ;psect for function ___awmod
 14550                           
 14551     1374                     l4784:	
 14552                           ;incstack = 0
 14553                           ; Regs used in ___awmod: [wreg+status,2+status,0]
 14554                           
 14555     1374  0021               	movlb	1	; select bank1
 14556     1375  01A5               	clrf	___awmod@sign^(0+128)
 14557     1376                     l4786:
 14558     1376  1FA3               	btfss	(___awmod@dividend+1)^(0+128),7
 14559     1377  2B79               	goto	u4241
 14560     1378  2B7A               	goto	u4240
 14561     1379                     u4241:
 14562     1379  2B81               	goto	l4792
 14563     137A                     u4240:
 14564     137A                     l4788:
 14565     137A  09A2               	comf	___awmod@dividend^(0+128),f
 14566     137B  09A3               	comf	(___awmod@dividend+1)^(0+128),f
 14567     137C  0AA2               	incf	___awmod@dividend^(0+128),f
 14568     137D  1903               	skipnz
 14569     137E  0AA3               	incf	(___awmod@dividend+1)^(0+128),f
 14570     137F                     l4790:
 14571     137F  3001               	movlw	1
 14572     1380  00A5               	movwf	___awmod@sign^(0+128)
 14573     1381                     l4792:
 14574     1381  1FA1               	btfss	(___awmod@divisor+1)^(0+128),7
 14575     1382  2B84               	goto	u4251
 14576     1383  2B85               	goto	u4250
 14577     1384                     u4251:
 14578     1384  2B8A               	goto	l4796
 14579     1385                     u4250:
 14580     1385                     l4794:
 14581     1385  09A0               	comf	___awmod@divisor^(0+128),f
 14582     1386  09A1               	comf	(___awmod@divisor+1)^(0+128),f
 14583     1387  0AA0               	incf	___awmod@divisor^(0+128),f
 14584     1388  1903               	skipnz
 14585     1389  0AA1               	incf	(___awmod@divisor+1)^(0+128),f
 14586     138A                     l4796:
 14587     138A  0820               	movf	___awmod@divisor^(0+128),w
 14588     138B  0421               	iorwf	(___awmod@divisor+1)^(0+128),w
 14589     138C  1903               	btfsc	3,2
 14590     138D  2B8F               	goto	u4261
 14591     138E  2B90               	goto	u4260
 14592     138F                     u4261:
 14593     138F  2BB7               	goto	l4814
 14594     1390                     u4260:
 14595     1390                     l4798:
 14596     1390  3001               	movlw	1
 14597     1391  00A4               	movwf	___awmod@counter^(0+128)
 14598     1392  2B9A               	goto	l4804
 14599     1393                     l4800:
 14600     1393  3001               	movlw	1
 14601     1394                     u4275:
 14602     1394  35A0               	lslf	___awmod@divisor^(0+128),f
 14603     1395  0DA1               	rlf	(___awmod@divisor+1)^(0+128),f
 14604     1396  0B89               	decfsz	9,f
 14605     1397  2B94               	goto	u4275
 14606     1398                     l4802:
 14607     1398  3001               	movlw	1
 14608     1399  07A4               	addwf	___awmod@counter^(0+128),f
 14609     139A                     l4804:
 14610     139A  1FA1               	btfss	(___awmod@divisor+1)^(0+128),7
 14611     139B  2B9D               	goto	u4281
 14612     139C  2B9E               	goto	u4280
 14613     139D                     u4281:
 14614     139D  2B93               	goto	l4800
 14615     139E                     u4280:
 14616     139E                     l4806:
 14617     139E  0821               	movf	(___awmod@divisor+1)^(0+128),w
 14618     139F  0223               	subwf	(___awmod@dividend+1)^(0+128),w
 14619     13A0  1D03               	skipz
 14620     13A1  2BA4               	goto	u4295
 14621     13A2  0820               	movf	___awmod@divisor^(0+128),w
 14622     13A3  0222               	subwf	___awmod@dividend^(0+128),w
 14623     13A4                     u4295:
 14624     13A4  1C03               	skipc
 14625     13A5  2BA7               	goto	u4291
 14626     13A6  2BA8               	goto	u4290
 14627     13A7                     u4291:
 14628     13A7  2BAC               	goto	l4810
 14629     13A8                     u4290:
 14630     13A8                     l4808:
 14631     13A8  0820               	movf	___awmod@divisor^(0+128),w
 14632     13A9  02A2               	subwf	___awmod@dividend^(0+128),f
 14633     13AA  0821               	movf	(___awmod@divisor+1)^(0+128),w
 14634     13AB  3BA3               	subwfb	(___awmod@dividend+1)^(0+128),f
 14635     13AC                     l4810:
 14636     13AC  3001               	movlw	1
 14637     13AD                     u4305:
 14638     13AD  36A1               	lsrf	(___awmod@divisor+1)^(0+128),f
 14639     13AE  0CA0               	rrf	___awmod@divisor^(0+128),f
 14640     13AF  0B89               	decfsz	9,f
 14641     13B0  2BAD               	goto	u4305
 14642     13B1                     l4812:
 14643     13B1  3001               	movlw	1
 14644     13B2  02A4               	subwf	___awmod@counter^(0+128),f
 14645     13B3  1D03               	btfss	3,2
 14646     13B4  2BB6               	goto	u4311
 14647     13B5  2BB7               	goto	u4310
 14648     13B6                     u4311:
 14649     13B6  2B9E               	goto	l4806
 14650     13B7                     u4310:
 14651     13B7                     l4814:
 14652     13B7  0825               	movf	___awmod@sign^(0+128),w
 14653     13B8  1903               	btfsc	3,2
 14654     13B9  2BBB               	goto	u4321
 14655     13BA  2BBC               	goto	u4320
 14656     13BB                     u4321:
 14657     13BB  2BC1               	goto	l4818
 14658     13BC                     u4320:
 14659     13BC                     l4816:
 14660     13BC  09A2               	comf	___awmod@dividend^(0+128),f
 14661     13BD  09A3               	comf	(___awmod@dividend+1)^(0+128),f
 14662     13BE  0AA2               	incf	___awmod@dividend^(0+128),f
 14663     13BF  1903               	skipnz
 14664     13C0  0AA3               	incf	(___awmod@dividend+1)^(0+128),f
 14665     13C1                     l4818:
 14666     13C1  0823               	movf	(___awmod@dividend+1)^(0+128),w
 14667     13C2  00A1               	movwf	(?___awmod+1)^(0+128)
 14668     13C3  0822               	movf	___awmod@dividend^(0+128),w
 14669     13C4  00A0               	movwf	?___awmod^(0+128)
 14670     13C5                     l1604:
 14671     13C5  0008               	return
 14672     13C6                     __end_of___awmod:
 14673                           
 14674                           	psect	text34
 14675     14C8                     __ptext34:	
 14676 ;; *************** function ___awdiv *****************
 14677 ;; Defined at:
 14678 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\awdiv.c"
 14679 ;; Parameters:    Size  Location     Type
 14680 ;;  divisor         2    0[BANK1 ] int 
 14681 ;;  dividend        2    2[BANK1 ] int 
 14682 ;; Auto vars:     Size  Location     Type
 14683 ;;  quotient        2    6[BANK1 ] int 
 14684 ;;  sign            1    5[BANK1 ] unsigned char 
 14685 ;;  counter         1    4[BANK1 ] unsigned char 
 14686 ;; Return value:  Size  Location     Type
 14687 ;;                  2    0[BANK1 ] int 
 14688 ;; Registers used:
 14689 ;;		wreg, status,2, status,0
 14690 ;; Tracked objects:
 14691 ;;		On entry : 0/0
 14692 ;;		On exit  : 0/0
 14693 ;;		Unchanged: 0/0
 14694 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 14695 ;;      Params:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0
 14696 ;;      Locals:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0
 14697 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14698 ;;      Totals:         0       0       8       0       0       0       0       0       0       0       0       0       
      +0       0
 14699 ;;Total ram usage:        8 bytes
 14700 ;; Hardware stack levels used: 1
 14701 ;; Hardware stack levels required when called: 7
 14702 ;; This function calls:
 14703 ;;		Nothing
 14704 ;; This function is called by:
 14705 ;;		_dtoa
 14706 ;; This function uses a non-reentrant model
 14707 ;;
 14708                           
 14709     14C8                     ___awdiv:	
 14710                           ;psect for function ___awdiv
 14711                           
 14712     14C8                     l4740:	
 14713                           ;incstack = 0
 14714                           ; Regs used in ___awdiv: [wreg+status,2+status,0]
 14715                           
 14716     14C8  0021               	movlb	1	; select bank1
 14717     14C9  01A5               	clrf	___awdiv@sign^(0+128)
 14718     14CA                     l4742:
 14719     14CA  1FA1               	btfss	(___awdiv@divisor+1)^(0+128),7
 14720     14CB  2CCD               	goto	u4141
 14721     14CC  2CCE               	goto	u4140
 14722     14CD                     u4141:
 14723     14CD  2CD5               	goto	l4748
 14724     14CE                     u4140:
 14725     14CE                     l4744:
 14726     14CE  09A0               	comf	___awdiv@divisor^(0+128),f
 14727     14CF  09A1               	comf	(___awdiv@divisor+1)^(0+128),f
 14728     14D0  0AA0               	incf	___awdiv@divisor^(0+128),f
 14729     14D1  1903               	skipnz
 14730     14D2  0AA1               	incf	(___awdiv@divisor+1)^(0+128),f
 14731     14D3                     l4746:
 14732     14D3  3001               	movlw	1
 14733     14D4  00A5               	movwf	___awdiv@sign^(0+128)
 14734     14D5                     l4748:
 14735     14D5  1FA3               	btfss	(___awdiv@dividend+1)^(0+128),7
 14736     14D6  2CD8               	goto	u4151
 14737     14D7  2CD9               	goto	u4150
 14738     14D8                     u4151:
 14739     14D8  2CE0               	goto	l4754
 14740     14D9                     u4150:
 14741     14D9                     l4750:
 14742     14D9  09A2               	comf	___awdiv@dividend^(0+128),f
 14743     14DA  09A3               	comf	(___awdiv@dividend+1)^(0+128),f
 14744     14DB  0AA2               	incf	___awdiv@dividend^(0+128),f
 14745     14DC  1903               	skipnz
 14746     14DD  0AA3               	incf	(___awdiv@dividend+1)^(0+128),f
 14747     14DE                     l4752:
 14748     14DE  3001               	movlw	1
 14749     14DF  06A5               	xorwf	___awdiv@sign^(0+128),f
 14750     14E0                     l4754:
 14751     14E0  01A6               	clrf	___awdiv@quotient^(0+128)
 14752     14E1  01A7               	clrf	(___awdiv@quotient+1)^(0+128)
 14753     14E2                     l4756:
 14754     14E2  0820               	movf	___awdiv@divisor^(0+128),w
 14755     14E3  0421               	iorwf	(___awdiv@divisor+1)^(0+128),w
 14756     14E4  1903               	btfsc	3,2
 14757     14E5  2CE7               	goto	u4161
 14758     14E6  2CE8               	goto	u4160
 14759     14E7                     u4161:
 14760     14E7  2D15               	goto	l4776
 14761     14E8                     u4160:
 14762     14E8                     l4758:
 14763     14E8  3001               	movlw	1
 14764     14E9  00A4               	movwf	___awdiv@counter^(0+128)
 14765     14EA  2CF2               	goto	l4764
 14766     14EB                     l4760:
 14767     14EB  3001               	movlw	1
 14768     14EC                     u4175:
 14769     14EC  35A0               	lslf	___awdiv@divisor^(0+128),f
 14770     14ED  0DA1               	rlf	(___awdiv@divisor+1)^(0+128),f
 14771     14EE  0B89               	decfsz	9,f
 14772     14EF  2CEC               	goto	u4175
 14773     14F0                     l4762:
 14774     14F0  3001               	movlw	1
 14775     14F1  07A4               	addwf	___awdiv@counter^(0+128),f
 14776     14F2                     l4764:
 14777     14F2  1FA1               	btfss	(___awdiv@divisor+1)^(0+128),7
 14778     14F3  2CF5               	goto	u4181
 14779     14F4  2CF6               	goto	u4180
 14780     14F5                     u4181:
 14781     14F5  2CEB               	goto	l4760
 14782     14F6                     u4180:
 14783     14F6                     l4766:
 14784     14F6  3001               	movlw	1
 14785     14F7                     u4195:
 14786     14F7  35A6               	lslf	___awdiv@quotient^(0+128),f
 14787     14F8  0DA7               	rlf	(___awdiv@quotient+1)^(0+128),f
 14788     14F9  0B89               	decfsz	9,f
 14789     14FA  2CF7               	goto	u4195
 14790     14FB  0821               	movf	(___awdiv@divisor+1)^(0+128),w
 14791     14FC  0223               	subwf	(___awdiv@dividend+1)^(0+128),w
 14792     14FD  1D03               	skipz
 14793     14FE  2D01               	goto	u4205
 14794     14FF  0820               	movf	___awdiv@divisor^(0+128),w
 14795     1500  0222               	subwf	___awdiv@dividend^(0+128),w
 14796     1501                     u4205:
 14797     1501  1C03               	skipc
 14798     1502  2D04               	goto	u4201
 14799     1503  2D05               	goto	u4200
 14800     1504                     u4201:
 14801     1504  2D0A               	goto	l4772
 14802     1505                     u4200:
 14803     1505                     l4768:
 14804     1505  0820               	movf	___awdiv@divisor^(0+128),w
 14805     1506  02A2               	subwf	___awdiv@dividend^(0+128),f
 14806     1507  0821               	movf	(___awdiv@divisor+1)^(0+128),w
 14807     1508  3BA3               	subwfb	(___awdiv@dividend+1)^(0+128),f
 14808     1509                     l4770:
 14809     1509  1426               	bsf	___awdiv@quotient^(0+128),0
 14810     150A                     l4772:
 14811     150A  3001               	movlw	1
 14812     150B                     u4215:
 14813     150B  36A1               	lsrf	(___awdiv@divisor+1)^(0+128),f
 14814     150C  0CA0               	rrf	___awdiv@divisor^(0+128),f
 14815     150D  0B89               	decfsz	9,f
 14816     150E  2D0B               	goto	u4215
 14817     150F                     l4774:
 14818     150F  3001               	movlw	1
 14819     1510  02A4               	subwf	___awdiv@counter^(0+128),f
 14820     1511  1D03               	btfss	3,2
 14821     1512  2D14               	goto	u4221
 14822     1513  2D15               	goto	u4220
 14823     1514                     u4221:
 14824     1514  2CF6               	goto	l4766
 14825     1515                     u4220:
 14826     1515                     l4776:
 14827     1515  0825               	movf	___awdiv@sign^(0+128),w
 14828     1516  1903               	btfsc	3,2
 14829     1517  2D19               	goto	u4231
 14830     1518  2D1A               	goto	u4230
 14831     1519                     u4231:
 14832     1519  2D1F               	goto	l4780
 14833     151A                     u4230:
 14834     151A                     l4778:
 14835     151A  09A6               	comf	___awdiv@quotient^(0+128),f
 14836     151B  09A7               	comf	(___awdiv@quotient+1)^(0+128),f
 14837     151C  0AA6               	incf	___awdiv@quotient^(0+128),f
 14838     151D  1903               	skipnz
 14839     151E  0AA7               	incf	(___awdiv@quotient+1)^(0+128),f
 14840     151F                     l4780:
 14841     151F  0827               	movf	(___awdiv@quotient+1)^(0+128),w
 14842     1520  00A1               	movwf	(?___awdiv+1)^(0+128)
 14843     1521  0826               	movf	___awdiv@quotient^(0+128),w
 14844     1522  00A0               	movwf	?___awdiv^(0+128)
 14845     1523                     l1591:
 14846     1523  0008               	return
 14847     1524                     __end_of___awdiv:
 14848                           
 14849                           	psect	text35
 14850     1F0A                     __ptext35:	
 14851 ;; *************** function _initAdcMultiplexer *****************
 14852 ;; Defined at:
 14853 ;;		line 24 in file "adcMeasurements.c"
 14854 ;; Parameters:    Size  Location     Type
 14855 ;;		None
 14856 ;; Auto vars:     Size  Location     Type
 14857 ;;		None
 14858 ;; Return value:  Size  Location     Type
 14859 ;;                  1    wreg      void 
 14860 ;; Registers used:
 14861 ;;		wreg, status,2, status,0, pclath, cstack
 14862 ;; Tracked objects:
 14863 ;;		On entry : 0/0
 14864 ;;		On exit  : 0/0
 14865 ;;		Unchanged: 0/0
 14866 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 14867 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14868 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14869 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14870 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14871 ;;Total ram usage:        0 bytes
 14872 ;; Hardware stack levels used: 1
 14873 ;; Hardware stack levels required when called: 8
 14874 ;; This function calls:
 14875 ;;		_ADC_SelectChannel
 14876 ;;		_ADC_SetInterruptHandler
 14877 ;; This function is called by:
 14878 ;;		_main
 14879 ;; This function uses a non-reentrant model
 14880 ;;
 14881                           
 14882     1F0A                     _initAdcMultiplexer:	
 14883                           ;psect for function _initAdcMultiplexer
 14884                           
 14885     1F0A                     l6724:	
 14886                           ;incstack = 0
 14887                           ; Regs used in _initAdcMultiplexer: [wreg+status,2+status,0+pclath+cstack]
 14888                           
 14889                           
 14890                           ;adcMeasurements.c: 25:     ADC_SelectChannel(potentiometer);
 14891     1F0A  3010               	movlw	16
 14892     1F0B  319E  26FE  319F   	fcall	_ADC_SelectChannel
 14893                           
 14894                           ;adcMeasurements.c: 26:     ADC_SetInterruptHandler(adcConversionDoneHandler);
 14895     1F0E  30D0               	movlw	low _adcConversionDoneHandler
 14896     1F0F  0021               	movlb	1	; select bank1
 14897     1F10  00A0               	movwf	ADC_SetInterruptHandler@InterruptHandler^(0+128)
 14898     1F11  3011               	movlw	high _adcConversionDoneHandler
 14899     1F12  00A1               	movwf	(ADC_SetInterruptHandler@InterruptHandler^(0+128)+1)
 14900     1F13  319E  267E  319F   	fcall	_ADC_SetInterruptHandler
 14901     1F16                     l824:
 14902     1F16  0008               	return
 14903     1F17                     __end_of_initAdcMultiplexer:
 14904                           
 14905                           	psect	text36
 14906     1EFE                     __ptext36:	
 14907 ;; *************** function _ADC_SelectChannel *****************
 14908 ;; Defined at:
 14909 ;;		line 82 in file "mcc_generated_files/adc/src/adc.c"
 14910 ;; Parameters:    Size  Location     Type
 14911 ;;  channel         1    wreg     enum E6663
 14912 ;; Auto vars:     Size  Location     Type
 14913 ;;  channel         1    1[BANK1 ] enum E6663
 14914 ;; Return value:  Size  Location     Type
 14915 ;;                  1    wreg      void 
 14916 ;; Registers used:
 14917 ;;		wreg, status,2, status,0
 14918 ;; Tracked objects:
 14919 ;;		On entry : 0/0
 14920 ;;		On exit  : 0/0
 14921 ;;		Unchanged: 0/0
 14922 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 14923 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14924 ;;      Locals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0
 14925 ;;      Temps:          0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0
 14926 ;;      Totals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0
 14927 ;;Total ram usage:        2 bytes
 14928 ;; Hardware stack levels used: 1
 14929 ;; Hardware stack levels required when called: 7
 14930 ;; This function calls:
 14931 ;;		Nothing
 14932 ;; This function is called by:
 14933 ;;		_initAdcMultiplexer
 14934 ;; This function uses a non-reentrant model
 14935 ;;
 14936                           
 14937     1EFE                     _ADC_SelectChannel:	
 14938                           ;psect for function _ADC_SelectChannel
 14939                           
 14940                           
 14941                           ;incstack = 0
 14942                           ; Regs used in _ADC_SelectChannel: [wreg+status,2+status,0]
 14943                           ;ADC_SelectChannel@channel stored from wreg
 14944     1EFE  0021               	movlb	1	; select bank1
 14945     1EFF  00A1               	movwf	ADC_SelectChannel@channel^(0+128)
 14946     1F00                     l6276:
 14947                           
 14948                           ;mcc_generated_files/adc/src/adc.c: 82: void ADC_SelectChannel(adc_channel_t channel);mc
      +                          c_generated_files/adc/src/adc.c: 83: {;mcc_generated_files/adc/src/adc.c: 85:     ADCON0
      +                          bits.CHS = channel;
 14949     1F00  0821               	movf	ADC_SelectChannel@channel^(0+128),w
 14950     1F01  00A0               	movwf	??_ADC_SelectChannel^(0+128)
 14951     1F02  0DA0               	rlf	??_ADC_SelectChannel^(0+128),f
 14952     1F03  0DA0               	rlf	??_ADC_SelectChannel^(0+128),f
 14953     1F04  081D               	movf	29,w	;volatile
 14954     1F05  0620               	xorwf	??_ADC_SelectChannel^(0+128),w
 14955     1F06  3903               	andlw	-253
 14956     1F07  0620               	xorwf	??_ADC_SelectChannel^(0+128),w
 14957     1F08  009D               	movwf	29	;volatile
 14958     1F09                     l30:
 14959     1F09  0008               	return
 14960     1F0A                     __end_of_ADC_SelectChannel:
 14961                           
 14962                           	psect	text37
 14963     1E99                     __ptext37:	
 14964 ;; *************** function _TMR4_PeriodMatchCallbackRegister *****************
 14965 ;; Defined at:
 14966 ;;		line 124 in file "mcc_generated_files/timer/src/tmr4.c"
 14967 ;; Parameters:    Size  Location     Type
 14968 ;;  CallbackHand    2    0[BANK1 ] PTR FTN()void 
 14969 ;;		 -> controller(1), 
 14970 ;; Auto vars:     Size  Location     Type
 14971 ;;		None
 14972 ;; Return value:  Size  Location     Type
 14973 ;;                  1    wreg      void 
 14974 ;; Registers used:
 14975 ;;		wreg
 14976 ;; Tracked objects:
 14977 ;;		On entry : 0/0
 14978 ;;		On exit  : 0/0
 14979 ;;		Unchanged: 0/0
 14980 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 14981 ;;      Params:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0
 14982 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14983 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14984 ;;      Totals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0
 14985 ;;Total ram usage:        2 bytes
 14986 ;; Hardware stack levels used: 1
 14987 ;; Hardware stack levels required when called: 7
 14988 ;; This function calls:
 14989 ;;		Nothing
 14990 ;; This function is called by:
 14991 ;;		_main
 14992 ;; This function uses a non-reentrant model
 14993 ;;
 14994                           
 14995     1E99                     _TMR4_PeriodMatchCallbackRegister:	
 14996                           ;psect for function _TMR4_PeriodMatchCallbackRegister
 14997                           
 14998     1E99                     l6674:	
 14999                           ;incstack = 0
 15000                           ; Regs used in _TMR4_PeriodMatchCallbackRegister: [wreg]
 15001                           
 15002                           
 15003                           ;mcc_generated_files/timer/src/tmr4.c: 124: void TMR4_PeriodMatchCallbackRegister(void (
      +                          * CallbackHandler)(void));mcc_generated_files/timer/src/tmr4.c: 125: {;mcc_generated_fil
      +                          es/timer/src/tmr4.c: 126:    TMR4_PeriodMatchCallback = CallbackHandler;
 15004     1E99  0021               	movlb	1	; select bank1
 15005     1E9A  0821               	movf	(TMR4_PeriodMatchCallbackRegister@CallbackHandler+1)^(0+128),w
 15006     1E9B  0022               	movlb	2	; select bank2
 15007     1E9C  00DF               	movwf	(_TMR4_PeriodMatchCallback+1)^(0+256)
 15008     1E9D  0021               	movlb	1	; select bank1
 15009     1E9E  0820               	movf	TMR4_PeriodMatchCallbackRegister@CallbackHandler^(0+128),w
 15010     1E9F  0022               	movlb	2	; select bank2
 15011     1EA0  00DE               	movwf	_TMR4_PeriodMatchCallback^(0+256)
 15012     1EA1                     l488:
 15013     1EA1  0008               	return
 15014     1EA2                     __end_of_TMR4_PeriodMatchCallbackRegister:
 15015                           
 15016                           	psect	text38
 15017     1097                     __ptext38:	
 15018 ;; *************** function _SYSTEM_Initialize *****************
 15019 ;; Defined at:
 15020 ;;		line 39 in file "mcc_generated_files/system/src/system.c"
 15021 ;; Parameters:    Size  Location     Type
 15022 ;;		None
 15023 ;; Auto vars:     Size  Location     Type
 15024 ;;		None
 15025 ;; Return value:  Size  Location     Type
 15026 ;;                  1    wreg      void 
 15027 ;; Registers used:
 15028 ;;		wreg, status,2, status,0, pclath, cstack
 15029 ;; Tracked objects:
 15030 ;;		On entry : 0/0
 15031 ;;		On exit  : 0/0
 15032 ;;		Unchanged: 0/0
 15033 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 15034 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15035 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15036 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15037 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15038 ;;Total ram usage:        0 bytes
 15039 ;; Hardware stack levels used: 1
 15040 ;; Hardware stack levels required when called: 9
 15041 ;; This function calls:
 15042 ;;		_ADC_Initialize
 15043 ;;		_CLOCK_Initialize
 15044 ;;		_EUSART_Initialize
 15045 ;;		_I2C2_Initialize
 15046 ;;		_INTERRUPT_Initialize
 15047 ;;		_PIN_MANAGER_Initialize
 15048 ;;		_SPI1_Initialize
 15049 ;;		_TMR2_Initialize
 15050 ;;		_TMR4_Initialize
 15051 ;;		_TMR6_Initialize
 15052 ;;		_pwm_fan_Initialize
 15053 ;; This function is called by:
 15054 ;;		_main
 15055 ;; This function uses a non-reentrant model
 15056 ;;
 15057                           
 15058     1097                     _SYSTEM_Initialize:	
 15059                           ;psect for function _SYSTEM_Initialize
 15060                           
 15061     1097                     l6656:	
 15062                           ;incstack = 0
 15063                           ; Regs used in _SYSTEM_Initialize: [wreg+status,2+status,0+pclath+cstack]
 15064                           
 15065                           
 15066                           ;mcc_generated_files/system/src/system.c: 41:     CLOCK_Initialize();
 15067     1097  319E  2687  3190   	fcall	_CLOCK_Initialize
 15068                           
 15069                           ;mcc_generated_files/system/src/system.c: 42:     PIN_MANAGER_Initialize();
 15070     109A  3192  22DE  3190   	fcall	_PIN_MANAGER_Initialize
 15071     109D                     l6658:
 15072                           
 15073                           ;mcc_generated_files/system/src/system.c: 43:     TMR2_Initialize();
 15074     109D  319F  2781  3190   	fcall	_TMR2_Initialize
 15075     10A0                     l6660:
 15076                           
 15077                           ;mcc_generated_files/system/src/system.c: 44:     TMR4_Initialize();
 15078     10A0  319F  2792  3190   	fcall	_TMR4_Initialize
 15079     10A3                     l6662:
 15080                           
 15081                           ;mcc_generated_files/system/src/system.c: 45:     TMR6_Initialize();
 15082     10A3  3188  2000  3190   	fcall	_TMR6_Initialize
 15083     10A6                     l6664:
 15084                           
 15085                           ;mcc_generated_files/system/src/system.c: 46:     ADC_Initialize();
 15086     10A6  3190  2012  3190   	fcall	_ADC_Initialize
 15087     10A9                     l6666:
 15088                           
 15089                           ;mcc_generated_files/system/src/system.c: 47:     EUSART_Initialize();
 15090     10A9  3192  2232  3190   	fcall	_EUSART_Initialize
 15091     10AC                     l6668:
 15092                           
 15093                           ;mcc_generated_files/system/src/system.c: 48:     I2C2_Initialize();
 15094     10AC  319F  2744  3190   	fcall	_I2C2_Initialize
 15095                           
 15096                           ;mcc_generated_files/system/src/system.c: 49:     pwm_fan_Initialize();
 15097     10AF  319E  26F2  3190   	fcall	_pwm_fan_Initialize
 15098     10B2                     l6670:
 15099                           
 15100                           ;mcc_generated_files/system/src/system.c: 50:     SPI1_Initialize();
 15101     10B2  319E  26C6  3190   	fcall	_SPI1_Initialize
 15102     10B5                     l6672:
 15103                           
 15104                           ;mcc_generated_files/system/src/system.c: 51:     INTERRUPT_Initialize();
 15105     10B5  319E  26E6  3190   	fcall	_INTERRUPT_Initialize
 15106     10B8                     l373:
 15107     10B8  0008               	return
 15108     10B9                     __end_of_SYSTEM_Initialize:
 15109                           
 15110                           	psect	text39
 15111     1EF2                     __ptext39:	
 15112 ;; *************** function _pwm_fan_Initialize *****************
 15113 ;; Defined at:
 15114 ;;		line 45 in file "mcc_generated_files/pwm/src/pwm5.c"
 15115 ;; Parameters:    Size  Location     Type
 15116 ;;		None
 15117 ;; Auto vars:     Size  Location     Type
 15118 ;;		None
 15119 ;; Return value:  Size  Location     Type
 15120 ;;                  1    wreg      void 
 15121 ;; Registers used:
 15122 ;;		wreg, status,2, status,0
 15123 ;; Tracked objects:
 15124 ;;		On entry : 0/0
 15125 ;;		On exit  : 0/0
 15126 ;;		Unchanged: 0/0
 15127 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 15128 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15129 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15130 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15131 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15132 ;;Total ram usage:        0 bytes
 15133 ;; Hardware stack levels used: 1
 15134 ;; Hardware stack levels required when called: 7
 15135 ;; This function calls:
 15136 ;;		Nothing
 15137 ;; This function is called by:
 15138 ;;		_SYSTEM_Initialize
 15139 ;; This function uses a non-reentrant model
 15140 ;;
 15141                           
 15142     1EF2                     _pwm_fan_Initialize:	
 15143                           ;psect for function _pwm_fan_Initialize
 15144                           
 15145     1EF2                     l6278:	
 15146                           ;incstack = 0
 15147                           ; Regs used in _pwm_fan_Initialize: [wreg+status,2+status,0]
 15148                           
 15149                           
 15150                           ;mcc_generated_files/pwm/src/pwm5.c: 50:     PWM5CON = 0x80;
 15151     1EF2  3080               	movlw	128
 15152     1EF3  002C               	movlb	12	; select bank12
 15153     1EF4  0099               	movwf	25	;volatile
 15154                           
 15155                           ;mcc_generated_files/pwm/src/pwm5.c: 53:     PWM5DCH = 0x7F;
 15156     1EF5  307F               	movlw	127
 15157     1EF6  0098               	movwf	24	;volatile
 15158                           
 15159                           ;mcc_generated_files/pwm/src/pwm5.c: 56:     PWM5DCL = 0xC0;
 15160     1EF7  30C0               	movlw	192
 15161     1EF8  0097               	movwf	23	;volatile
 15162     1EF9                     l6280:
 15163                           
 15164                           ;mcc_generated_files/pwm/src/pwm5.c: 60:     PWMTMRSbits.P5TSEL = 0x1;
 15165     1EF9  081F               	movf	31,w	;volatile
 15166     1EFA  39FC               	andlw	-4
 15167     1EFB  3801               	iorlw	1
 15168     1EFC  009F               	movwf	31	;volatile
 15169     1EFD                     l69:
 15170     1EFD  0008               	return
 15171     1EFE                     __end_of_pwm_fan_Initialize:
 15172                           
 15173                           	psect	text40
 15174     0800                     __ptext40:	
 15175 ;; *************** function _TMR6_Initialize *****************
 15176 ;; Defined at:
 15177 ;;		line 45 in file "mcc_generated_files/timer/src/tmr6.c"
 15178 ;; Parameters:    Size  Location     Type
 15179 ;;		None
 15180 ;; Auto vars:     Size  Location     Type
 15181 ;;		None
 15182 ;; Return value:  Size  Location     Type
 15183 ;;                  1    wreg      void 
 15184 ;; Registers used:
 15185 ;;		wreg, status,2
 15186 ;; Tracked objects:
 15187 ;;		On entry : 0/0
 15188 ;;		On exit  : 0/0
 15189 ;;		Unchanged: 0/0
 15190 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 15191 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15192 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15193 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15194 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15195 ;;Total ram usage:        0 bytes
 15196 ;; Hardware stack levels used: 1
 15197 ;; Hardware stack levels required when called: 7
 15198 ;; This function calls:
 15199 ;;		Nothing
 15200 ;; This function is called by:
 15201 ;;		_SYSTEM_Initialize
 15202 ;; This function uses a non-reentrant model
 15203 ;;
 15204                           
 15205     0800                     _TMR6_Initialize:	
 15206                           ;psect for function _TMR6_Initialize
 15207                           
 15208     0800                     l6360:	
 15209                           ;incstack = 0
 15210                           ; Regs used in _TMR6_Initialize: [wreg+status,2]
 15211                           
 15212                           
 15213                           ;mcc_generated_files/timer/src/tmr6.c: 48:     PR6 = 0xE;
 15214     0800  300E               	movlw	14
 15215     0801  0028               	movlb	8	; select bank8
 15216     0802  009D               	movwf	29	;volatile
 15217     0803                     l6362:
 15218                           
 15219                           ;mcc_generated_files/timer/src/tmr6.c: 49:     TMR6 = 0x0;
 15220     0803  019C               	clrf	28	;volatile
 15221     0804                     l6364:
 15222                           
 15223                           ;mcc_generated_files/timer/src/tmr6.c: 50:     TMR6_PeriodMatchCallback = TMR6_DefaultPe
      +                          riodMatchCallback;
 15224     0804  3000               	movlw	0
 15225     0805  0022               	movlb	2	; select bank2
 15226     0806  00DC               	movwf	_TMR6_PeriodMatchCallback^(0+256)
 15227     0807  3000               	movlw	0
 15228     0808  00DD               	movwf	(_TMR6_PeriodMatchCallback^(0+256)+1)
 15229     0809                     l6366:
 15230                           
 15231                           ;mcc_generated_files/timer/src/tmr6.c: 52:     PIR2bits.TMR6IF = 0;
 15232     0809  0020               	movlb	0	; select bank0
 15233     080A  1392               	bcf	18,7	;volatile
 15234     080B                     l6368:
 15235                           
 15236                           ;mcc_generated_files/timer/src/tmr6.c: 53:     T6CON = (1 << 0x0)
 15237     080B  301D               	movlw	29
 15238     080C  0028               	movlb	8	; select bank8
 15239     080D  009E               	movwf	30	;volatile
 15240     080E                     l510:
 15241     080E  0008               	return
 15242     080F                     __end_of_TMR6_Initialize:
 15243                           
 15244                           	psect	text41
 15245     1F92                     __ptext41:	
 15246 ;; *************** function _TMR4_Initialize *****************
 15247 ;; Defined at:
 15248 ;;		line 45 in file "mcc_generated_files/timer/src/tmr4.c"
 15249 ;; Parameters:    Size  Location     Type
 15250 ;;		None
 15251 ;; Auto vars:     Size  Location     Type
 15252 ;;		None
 15253 ;; Return value:  Size  Location     Type
 15254 ;;                  1    wreg      void 
 15255 ;; Registers used:
 15256 ;;		wreg, status,2
 15257 ;; Tracked objects:
 15258 ;;		On entry : 0/0
 15259 ;;		On exit  : 0/0
 15260 ;;		Unchanged: 0/0
 15261 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 15262 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15263 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15264 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15265 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15266 ;;Total ram usage:        0 bytes
 15267 ;; Hardware stack levels used: 1
 15268 ;; Hardware stack levels required when called: 7
 15269 ;; This function calls:
 15270 ;;		Nothing
 15271 ;; This function is called by:
 15272 ;;		_SYSTEM_Initialize
 15273 ;; This function uses a non-reentrant model
 15274 ;;
 15275                           
 15276     1F92                     _TMR4_Initialize:	
 15277                           ;psect for function _TMR4_Initialize
 15278                           
 15279     1F92                     l6348:	
 15280                           ;incstack = 0
 15281                           ; Regs used in _TMR4_Initialize: [wreg+status,2]
 15282                           
 15283                           
 15284                           ;mcc_generated_files/timer/src/tmr4.c: 48:     PR4 = 0xFF;
 15285     1F92  30FF               	movlw	255
 15286     1F93  0028               	movlb	8	; select bank8
 15287     1F94  0096               	movwf	22	;volatile
 15288     1F95                     l6350:
 15289                           
 15290                           ;mcc_generated_files/timer/src/tmr4.c: 49:     TMR4 = 0x0;
 15291     1F95  0195               	clrf	21	;volatile
 15292     1F96                     l6352:
 15293                           
 15294                           ;mcc_generated_files/timer/src/tmr4.c: 50:     TMR4_PeriodMatchCallback = TMR4_DefaultPe
      +                          riodMatchCallback;
 15295     1F96  30E3               	movlw	low _TMR4_DefaultPeriodMatchCallback
 15296     1F97  0022               	movlb	2	; select bank2
 15297     1F98  00DE               	movwf	_TMR4_PeriodMatchCallback^(0+256)
 15298     1F99  301D               	movlw	high _TMR4_DefaultPeriodMatchCallback
 15299     1F9A  00DF               	movwf	(_TMR4_PeriodMatchCallback^(0+256)+1)
 15300     1F9B                     l6354:
 15301                           
 15302                           ;mcc_generated_files/timer/src/tmr4.c: 52:     PIR2bits.TMR4IF = 0;
 15303     1F9B  0020               	movlb	0	; select bank0
 15304     1F9C  1092               	bcf	18,1	;volatile
 15305     1F9D                     l6356:
 15306                           
 15307                           ;mcc_generated_files/timer/src/tmr4.c: 53:     PIE2bits.TMR4IE = 1;
 15308     1F9D  0021               	movlb	1	; select bank1
 15309     1F9E  1492               	bsf	18,1	;volatile
 15310     1F9F                     l6358:
 15311                           
 15312                           ;mcc_generated_files/timer/src/tmr4.c: 54:     T4CON = (2 << 0x0)
 15313     1F9F  3076               	movlw	118
 15314     1FA0  0028               	movlb	8	; select bank8
 15315     1FA1  0097               	movwf	23	;volatile
 15316     1FA2                     l451:
 15317     1FA2  0008               	return
 15318     1FA3                     __end_of_TMR4_Initialize:
 15319                           
 15320                           	psect	text42
 15321     1F81                     __ptext42:	
 15322 ;; *************** function _TMR2_Initialize *****************
 15323 ;; Defined at:
 15324 ;;		line 45 in file "mcc_generated_files/timer/src/tmr2.c"
 15325 ;; Parameters:    Size  Location     Type
 15326 ;;		None
 15327 ;; Auto vars:     Size  Location     Type
 15328 ;;		None
 15329 ;; Return value:  Size  Location     Type
 15330 ;;                  1    wreg      void 
 15331 ;; Registers used:
 15332 ;;		wreg, status,2
 15333 ;; Tracked objects:
 15334 ;;		On entry : 0/0
 15335 ;;		On exit  : 0/0
 15336 ;;		Unchanged: 0/0
 15337 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 15338 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15339 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15340 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15341 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15342 ;;Total ram usage:        0 bytes
 15343 ;; Hardware stack levels used: 1
 15344 ;; Hardware stack levels required when called: 7
 15345 ;; This function calls:
 15346 ;;		Nothing
 15347 ;; This function is called by:
 15348 ;;		_SYSTEM_Initialize
 15349 ;; This function uses a non-reentrant model
 15350 ;;
 15351                           
 15352     1F81                     _TMR2_Initialize:	
 15353                           ;psect for function _TMR2_Initialize
 15354                           
 15355     1F81                     l6336:	
 15356                           ;incstack = 0
 15357                           ; Regs used in _TMR2_Initialize: [wreg+status,2]
 15358                           
 15359                           
 15360                           ;mcc_generated_files/timer/src/tmr2.c: 48:     PR2 = 0xFF;
 15361     1F81  30FF               	movlw	255
 15362     1F82  0020               	movlb	0	; select bank0
 15363     1F83  009E               	movwf	30	;volatile
 15364     1F84                     l6338:
 15365                           
 15366                           ;mcc_generated_files/timer/src/tmr2.c: 49:     TMR2 = 0x0;
 15367     1F84  019D               	clrf	29	;volatile
 15368     1F85                     l6340:
 15369                           
 15370                           ;mcc_generated_files/timer/src/tmr2.c: 50:     TMR2_PeriodMatchCallback = TMR2_DefaultPe
      +                          riodMatchCallback;
 15371     1F85  30E2               	movlw	low _TMR2_DefaultPeriodMatchCallback
 15372     1F86  0022               	movlb	2	; select bank2
 15373     1F87  00E0               	movwf	_TMR2_PeriodMatchCallback^(0+256)
 15374     1F88  301D               	movlw	high _TMR2_DefaultPeriodMatchCallback
 15375     1F89  00E1               	movwf	(_TMR2_PeriodMatchCallback^(0+256)+1)
 15376     1F8A                     l6342:
 15377                           
 15378                           ;mcc_generated_files/timer/src/tmr2.c: 52:     PIR1bits.TMR2IF = 0;
 15379     1F8A  0020               	movlb	0	; select bank0
 15380     1F8B  1091               	bcf	17,1	;volatile
 15381     1F8C                     l6344:
 15382                           
 15383                           ;mcc_generated_files/timer/src/tmr2.c: 53:     PIE1bits.TMR2IE = 1;
 15384     1F8C  0021               	movlb	1	; select bank1
 15385     1F8D  1491               	bsf	17,1	;volatile
 15386     1F8E                     l6346:
 15387                           
 15388                           ;mcc_generated_files/timer/src/tmr2.c: 54:     T2CON = (1 << 0x0)
 15389     1F8E  301D               	movlw	29
 15390     1F8F  0020               	movlb	0	; select bank0
 15391     1F90  009F               	movwf	31	;volatile
 15392     1F91                     l392:
 15393     1F91  0008               	return
 15394     1F92                     __end_of_TMR2_Initialize:
 15395                           
 15396                           	psect	text43
 15397     1EC6                     __ptext43:	
 15398 ;; *************** function _SPI1_Initialize *****************
 15399 ;; Defined at:
 15400 ;;		line 60 in file "mcc_generated_files/spi/src/mssp1.c"
 15401 ;; Parameters:    Size  Location     Type
 15402 ;;		None
 15403 ;; Auto vars:     Size  Location     Type
 15404 ;;		None
 15405 ;; Return value:  Size  Location     Type
 15406 ;;                  1    wreg      void 
 15407 ;; Registers used:
 15408 ;;		status,2
 15409 ;; Tracked objects:
 15410 ;;		On entry : 0/0
 15411 ;;		On exit  : 0/0
 15412 ;;		Unchanged: 0/0
 15413 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 15414 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15415 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15416 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15417 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15418 ;;Total ram usage:        0 bytes
 15419 ;; Hardware stack levels used: 1
 15420 ;; Hardware stack levels required when called: 7
 15421 ;; This function calls:
 15422 ;;		Nothing
 15423 ;; This function is called by:
 15424 ;;		_SYSTEM_Initialize
 15425 ;; This function uses a non-reentrant model
 15426 ;;
 15427                           
 15428     1EC6                     _SPI1_Initialize:	
 15429                           ;psect for function _SPI1_Initialize
 15430                           
 15431     1EC6                     l6282:	
 15432                           ;incstack = 0
 15433                           ; Regs used in _SPI1_Initialize: [status,2]
 15434                           
 15435                           
 15436                           ;mcc_generated_files/spi/src/mssp1.c: 63:     PIE1bits.SSP1IE = 0;
 15437     1EC6  0021               	movlb	1	; select bank1
 15438     1EC7  1191               	bcf	17,3	;volatile
 15439                           
 15440                           ;mcc_generated_files/spi/src/mssp1.c: 64:     PIR1bits.SSP1IF = 0;
 15441     1EC8  0020               	movlb	0	; select bank0
 15442     1EC9  1191               	bcf	17,3	;volatile
 15443     1ECA                     l6284:
 15444                           
 15445                           ;mcc_generated_files/spi/src/mssp1.c: 66:     SSP1STAT = 0x00;
 15446     1ECA  0024               	movlb	4	; select bank4
 15447     1ECB  0194               	clrf	20	;volatile
 15448                           
 15449                           ;mcc_generated_files/spi/src/mssp1.c: 67:     SSP1CON1 = 0x00;
 15450     1ECC  0195               	clrf	21	;volatile
 15451                           
 15452                           ;mcc_generated_files/spi/src/mssp1.c: 68:     SSP1CON3 = 0x00;
 15453     1ECD  0197               	clrf	23	;volatile
 15454                           
 15455                           ;mcc_generated_files/spi/src/mssp1.c: 69:     SSP1ADD = 0x00;
 15456     1ECE  0192               	clrf	18	;volatile
 15457     1ECF                     l119:
 15458     1ECF  0008               	return
 15459     1ED0                     __end_of_SPI1_Initialize:
 15460                           
 15461                           	psect	text44
 15462     12DE                     __ptext44:	
 15463 ;; *************** function _PIN_MANAGER_Initialize *****************
 15464 ;; Defined at:
 15465 ;;		line 38 in file "mcc_generated_files/system/src/pins.c"
 15466 ;; Parameters:    Size  Location     Type
 15467 ;;		None
 15468 ;; Auto vars:     Size  Location     Type
 15469 ;;		None
 15470 ;; Return value:  Size  Location     Type
 15471 ;;                  1    wreg      void 
 15472 ;; Registers used:
 15473 ;;		status,2
 15474 ;; Tracked objects:
 15475 ;;		On entry : 0/0
 15476 ;;		On exit  : 0/0
 15477 ;;		Unchanged: 0/0
 15478 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 15479 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15480 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15481 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15482 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15483 ;;Total ram usage:        0 bytes
 15484 ;; Hardware stack levels used: 1
 15485 ;; Hardware stack levels required when called: 7
 15486 ;; This function calls:
 15487 ;;		Nothing
 15488 ;; This function is called by:
 15489 ;;		_SYSTEM_Initialize
 15490 ;; This function uses a non-reentrant model
 15491 ;;
 15492                           
 15493     12DE                     _PIN_MANAGER_Initialize:	
 15494                           ;psect for function _PIN_MANAGER_Initialize
 15495                           
 15496     12DE                     l6294:	
 15497                           ;incstack = 0
 15498                           ; Regs used in _PIN_MANAGER_Initialize: [status,2]
 15499                           
 15500                           
 15501                           ;mcc_generated_files/system/src/pins.c: 43:     LATA = 0x0;
 15502     12DE  0022               	movlb	2	; select bank2
 15503     12DF  018C               	clrf	12	;volatile
 15504     12E0                     l6296:
 15505                           
 15506                           ;mcc_generated_files/system/src/pins.c: 44:     LATB = 0x50;
 15507     12E0  3050               	movlw	80
 15508     12E1  008D               	movwf	13	;volatile
 15509                           
 15510                           ;mcc_generated_files/system/src/pins.c: 45:     LATC = 0x0;
 15511     12E2  018E               	clrf	14	;volatile
 15512     12E3                     l6298:
 15513                           
 15514                           ;mcc_generated_files/system/src/pins.c: 50:     TRISA = 0x19;
 15515     12E3  3019               	movlw	25
 15516     12E4  0021               	movlb	1	; select bank1
 15517     12E5  008C               	movwf	12	;volatile
 15518     12E6                     l6300:
 15519                           
 15520                           ;mcc_generated_files/system/src/pins.c: 51:     TRISB = 0xD0;
 15521     12E6  30D0               	movlw	208
 15522     12E7  008D               	movwf	13	;volatile
 15523     12E8                     l6302:
 15524                           
 15525                           ;mcc_generated_files/system/src/pins.c: 52:     TRISC = 0xDF;
 15526     12E8  30DF               	movlw	223
 15527     12E9  008E               	movwf	14	;volatile
 15528     12EA                     l6304:
 15529                           
 15530                           ;mcc_generated_files/system/src/pins.c: 57:     ANSELA = 0x10;
 15531     12EA  3010               	movlw	16
 15532     12EB  0023               	movlb	3	; select bank3
 15533     12EC  008C               	movwf	12	;volatile
 15534     12ED                     l6306:
 15535                           
 15536                           ;mcc_generated_files/system/src/pins.c: 58:     ANSELB = 0x20;
 15537     12ED  3020               	movlw	32
 15538     12EE  008D               	movwf	13	;volatile
 15539     12EF                     l6308:
 15540                           
 15541                           ;mcc_generated_files/system/src/pins.c: 59:     ANSELC = 0xFF;
 15542     12EF  30FF               	movlw	255
 15543     12F0  008E               	movwf	14	;volatile
 15544                           
 15545                           ;mcc_generated_files/system/src/pins.c: 64:     WPUA = 0x0;
 15546     12F1  0024               	movlb	4	; select bank4
 15547     12F2  018C               	clrf	12	;volatile
 15548                           
 15549                           ;mcc_generated_files/system/src/pins.c: 65:     WPUB = 0x0;
 15550     12F3  018D               	clrf	13	;volatile
 15551                           
 15552                           ;mcc_generated_files/system/src/pins.c: 66:     WPUC = 0x0;
 15553     12F4  018E               	clrf	14	;volatile
 15554                           
 15555                           ;mcc_generated_files/system/src/pins.c: 72:     ODCONA = 0x0;
 15556     12F5  0025               	movlb	5	; select bank5
 15557     12F6  018C               	clrf	12	;volatile
 15558                           
 15559                           ;mcc_generated_files/system/src/pins.c: 73:     ODCONB = 0x0;
 15560     12F7  018D               	clrf	13	;volatile
 15561                           
 15562                           ;mcc_generated_files/system/src/pins.c: 74:     ODCONC = 0x0;
 15563     12F8  018E               	clrf	14	;volatile
 15564     12F9                     l6310:
 15565                           
 15566                           ;mcc_generated_files/system/src/pins.c: 78:     SLRCONA = 0x37;
 15567     12F9  3037               	movlw	55
 15568     12FA  0026               	movlb	6	; select bank6
 15569     12FB  008C               	movwf	12	;volatile
 15570     12FC                     l6312:
 15571                           
 15572                           ;mcc_generated_files/system/src/pins.c: 79:     SLRCONB = 0xF0;
 15573     12FC  30F0               	movlw	240
 15574     12FD  008D               	movwf	13	;volatile
 15575     12FE                     l6314:
 15576                           
 15577                           ;mcc_generated_files/system/src/pins.c: 80:     SLRCONC = 0xFF;
 15578     12FE  30FF               	movlw	255
 15579     12FF  008E               	movwf	14	;volatile
 15580     1300                     l6316:
 15581                           
 15582                           ;mcc_generated_files/system/src/pins.c: 84:     INLVLA = 0x3F;
 15583     1300  303F               	movlw	63
 15584     1301  0027               	movlb	7	; select bank7
 15585     1302  008C               	movwf	12	;volatile
 15586     1303                     l6318:
 15587                           
 15588                           ;mcc_generated_files/system/src/pins.c: 85:     INLVLB = 0xF0;
 15589     1303  30F0               	movlw	240
 15590     1304  008D               	movwf	13	;volatile
 15591     1305                     l6320:
 15592                           
 15593                           ;mcc_generated_files/system/src/pins.c: 86:     INLVLC = 0xFF;
 15594     1305  30FF               	movlw	255
 15595     1306  008E               	movwf	14	;volatile
 15596                           
 15597                           ;mcc_generated_files/system/src/pins.c: 91:     SSP1DATPPS = 0x0;
 15598     1307  003C               	movlb	28	; select bank28
 15599     1308  01A1               	clrf	33	;volatile
 15600     1309                     l6322:
 15601                           
 15602                           ;mcc_generated_files/system/src/pins.c: 92:     RXPPS = 0xF;
 15603     1309  300F               	movlw	15
 15604     130A  00A4               	movwf	36	;volatile
 15605     130B                     l6324:
 15606                           
 15607                           ;mcc_generated_files/system/src/pins.c: 93:     RC5PPS = 2;
 15608     130B  3002               	movlw	2
 15609     130C  003D               	movlb	29	; select bank29
 15610     130D  00A5               	movwf	37	;volatile
 15611     130E                     l6326:
 15612                           
 15613                           ;mcc_generated_files/system/src/pins.c: 94:     RB5PPS = 20;
 15614     130E  3014               	movlw	20
 15615     130F  009D               	movwf	29	;volatile
 15616     1310                     l6328:
 15617                           
 15618                           ;mcc_generated_files/system/src/pins.c: 95:     SSP2CLKPPS = 0xE;
 15619     1310  300E               	movlw	14
 15620     1311  003C               	movlb	28	; select bank28
 15621     1312  009D               	movwf	29	;volatile
 15622     1313                     l6330:
 15623                           
 15624                           ;mcc_generated_files/system/src/pins.c: 96:     RB6PPS = 26;
 15625     1313  301A               	movlw	26
 15626     1314  003D               	movlb	29	; select bank29
 15627     1315  009E               	movwf	30	;volatile
 15628     1316                     l6332:
 15629                           
 15630                           ;mcc_generated_files/system/src/pins.c: 97:     SSP2DATPPS = 0xC;
 15631     1316  300C               	movlw	12
 15632     1317  003C               	movlb	28	; select bank28
 15633     1318  009E               	movwf	30	;volatile
 15634     1319                     l6334:
 15635                           
 15636                           ;mcc_generated_files/system/src/pins.c: 98:     RB4PPS = 27;
 15637     1319  301B               	movlw	27
 15638     131A  003D               	movlb	29	; select bank29
 15639     131B  009C               	movwf	28	;volatile
 15640                           
 15641                           ;mcc_generated_files/system/src/pins.c: 107:     IOCAP = 0x0;
 15642     131C  0027               	movlb	7	; select bank7
 15643     131D  0191               	clrf	17	;volatile
 15644                           
 15645                           ;mcc_generated_files/system/src/pins.c: 108:     IOCAN = 0x0;
 15646     131E  0192               	clrf	18	;volatile
 15647                           
 15648                           ;mcc_generated_files/system/src/pins.c: 109:     IOCAF = 0x0;
 15649     131F  0193               	clrf	19	;volatile
 15650                           
 15651                           ;mcc_generated_files/system/src/pins.c: 110:     IOCBP = 0x0;
 15652     1320  0194               	clrf	20	;volatile
 15653                           
 15654                           ;mcc_generated_files/system/src/pins.c: 111:     IOCBN = 0x0;
 15655     1321  0195               	clrf	21	;volatile
 15656                           
 15657                           ;mcc_generated_files/system/src/pins.c: 112:     IOCBF = 0x0;
 15658     1322  0196               	clrf	22	;volatile
 15659                           
 15660                           ;mcc_generated_files/system/src/pins.c: 113:     IOCCP = 0x0;
 15661     1323  0197               	clrf	23	;volatile
 15662                           
 15663                           ;mcc_generated_files/system/src/pins.c: 114:     IOCCN = 0x0;
 15664     1324  0198               	clrf	24	;volatile
 15665                           
 15666                           ;mcc_generated_files/system/src/pins.c: 115:     IOCCF = 0x0;
 15667     1325  0199               	clrf	25	;volatile
 15668     1326                     l345:
 15669     1326  0008               	return
 15670     1327                     __end_of_PIN_MANAGER_Initialize:
 15671                           
 15672                           	psect	text45
 15673     1EE6                     __ptext45:	
 15674 ;; *************** function _INTERRUPT_Initialize *****************
 15675 ;; Defined at:
 15676 ;;		line 40 in file "mcc_generated_files/system/src/interrupt.c"
 15677 ;; Parameters:    Size  Location     Type
 15678 ;;		None
 15679 ;; Auto vars:     Size  Location     Type
 15680 ;;		None
 15681 ;; Return value:  Size  Location     Type
 15682 ;;                  1    wreg      void 
 15683 ;; Registers used:
 15684 ;;		wreg, status,2, status,0, pclath, cstack
 15685 ;; Tracked objects:
 15686 ;;		On entry : 0/0
 15687 ;;		On exit  : 0/0
 15688 ;;		Unchanged: 0/0
 15689 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 15690 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15691 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15692 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15693 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15694 ;;Total ram usage:        0 bytes
 15695 ;; Hardware stack levels used: 1
 15696 ;; Hardware stack levels required when called: 8
 15697 ;; This function calls:
 15698 ;;		_INT_SetInterruptHandler
 15699 ;; This function is called by:
 15700 ;;		_SYSTEM_Initialize
 15701 ;; This function uses a non-reentrant model
 15702 ;;
 15703                           
 15704     1EE6                     _INTERRUPT_Initialize:	
 15705                           ;psect for function _INTERRUPT_Initialize
 15706                           
 15707     1EE6                     l6286:	
 15708                           ;incstack = 0
 15709                           ; Regs used in _INTERRUPT_Initialize: [wreg+status,2+status,0+pclath+cstack]
 15710                           
 15711                           
 15712                           ;mcc_generated_files/system/src/interrupt.c: 44:     (PIR0bits.INTF = 0);
 15713     1EE6  0020               	movlb	0	; select bank0
 15714     1EE7  1010               	bcf	16,0	;volatile
 15715                           
 15716                           ;mcc_generated_files/system/src/interrupt.c: 45:     (INTCONbits.INTEDG = 1);
 15717     1EE8  140B               	bsf	11,0	;volatile
 15718     1EE9                     l6288:
 15719                           
 15720                           ;mcc_generated_files/system/src/interrupt.c: 47:     INT_SetInterruptHandler(INT_Default
      +                          InterruptHandler);
 15721     1EE9  3000               	movlw	0
 15722     1EEA  0021               	movlb	1	; select bank1
 15723     1EEB  00A0               	movwf	INT_SetInterruptHandler@InterruptHandler^(0+128)
 15724     1EEC  3000               	movlw	0
 15725     1EED  00A1               	movwf	(INT_SetInterruptHandler@InterruptHandler^(0+128)+1)
 15726     1EEE  319E  2690  319E   	fcall	_INT_SetInterruptHandler
 15727     1EF1                     l217:
 15728     1EF1  0008               	return
 15729     1EF2                     __end_of_INTERRUPT_Initialize:
 15730                           
 15731                           	psect	text46
 15732     1E90                     __ptext46:	
 15733 ;; *************** function _INT_SetInterruptHandler *****************
 15734 ;; Defined at:
 15735 ;;		line 121 in file "mcc_generated_files/system/src/interrupt.c"
 15736 ;; Parameters:    Size  Location     Type
 15737 ;;  InterruptHan    2    0[BANK1 ] PTR FTN()void 
 15738 ;;		 -> INT_DefaultInterruptHandler(1), 
 15739 ;; Auto vars:     Size  Location     Type
 15740 ;;		None
 15741 ;; Return value:  Size  Location     Type
 15742 ;;                  1    wreg      void 
 15743 ;; Registers used:
 15744 ;;		wreg
 15745 ;; Tracked objects:
 15746 ;;		On entry : 0/0
 15747 ;;		On exit  : 0/0
 15748 ;;		Unchanged: 0/0
 15749 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 15750 ;;      Params:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0
 15751 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15752 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15753 ;;      Totals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0
 15754 ;;Total ram usage:        2 bytes
 15755 ;; Hardware stack levels used: 1
 15756 ;; Hardware stack levels required when called: 7
 15757 ;; This function calls:
 15758 ;;		Nothing
 15759 ;; This function is called by:
 15760 ;;		_INTERRUPT_Initialize
 15761 ;; This function uses a non-reentrant model
 15762 ;;
 15763                           
 15764     1E90                     _INT_SetInterruptHandler:	
 15765                           ;psect for function _INT_SetInterruptHandler
 15766                           
 15767     1E90                     l5188:	
 15768                           ;incstack = 0
 15769                           ; Regs used in _INT_SetInterruptHandler: [wreg]
 15770                           
 15771                           
 15772                           ;mcc_generated_files/system/src/interrupt.c: 122:     INT_InterruptHandler = InterruptHa
      +                          ndler;
 15773     1E90  0021               	movlb	1	; select bank1
 15774     1E91  0821               	movf	(INT_SetInterruptHandler@InterruptHandler+1)^(0+128),w
 15775     1E92  0022               	movlb	2	; select bank2
 15776     1E93  00DB               	movwf	(_INT_InterruptHandler+1)^(0+256)
 15777     1E94  0021               	movlb	1	; select bank1
 15778     1E95  0820               	movf	INT_SetInterruptHandler@InterruptHandler^(0+128),w
 15779     1E96  0022               	movlb	2	; select bank2
 15780     1E97  00DA               	movwf	_INT_InterruptHandler^(0+256)
 15781     1E98                     l248:
 15782     1E98  0008               	return
 15783     1E99                     __end_of_INT_SetInterruptHandler:
 15784                           
 15785                           	psect	text47
 15786     1232                     __ptext47:	
 15787 ;; *************** function _EUSART_Initialize *****************
 15788 ;; Defined at:
 15789 ;;		line 131 in file "mcc_generated_files/uart/src/eusart.c"
 15790 ;; Parameters:    Size  Location     Type
 15791 ;;		None
 15792 ;; Auto vars:     Size  Location     Type
 15793 ;;		None
 15794 ;; Return value:  Size  Location     Type
 15795 ;;                  1    wreg      void 
 15796 ;; Registers used:
 15797 ;;		wreg, status,2, status,0, pclath, cstack
 15798 ;; Tracked objects:
 15799 ;;		On entry : 0/0
 15800 ;;		On exit  : 0/0
 15801 ;;		Unchanged: 0/0
 15802 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 15803 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15804 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15805 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15806 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15807 ;;Total ram usage:        0 bytes
 15808 ;; Hardware stack levels used: 1
 15809 ;; Hardware stack levels required when called: 8
 15810 ;; This function calls:
 15811 ;;		_EUSART_FramingErrorCallbackRegister
 15812 ;;		_EUSART_OverrunErrorCallbackRegister
 15813 ;; This function is called by:
 15814 ;;		_SYSTEM_Initialize
 15815 ;; This function uses a non-reentrant model
 15816 ;;
 15817                           
 15818     1232                     _EUSART_Initialize:	
 15819                           ;psect for function _EUSART_Initialize
 15820                           
 15821     1232                     l6370:	
 15822                           ;incstack = 0
 15823                           ; Regs used in _EUSART_Initialize: [wreg+status,2+status,0+pclath+cstack]
 15824                           
 15825                           
 15826                           ;mcc_generated_files/uart/src/eusart.c: 133:     PIE1bits.RCIE = 0;
 15827     1232  0021               	movlb	1	; select bank1
 15828     1233  1291               	bcf	17,5	;volatile
 15829     1234                     l6372:
 15830                           
 15831                           ;mcc_generated_files/uart/src/eusart.c: 134:      EUSART_RxInterruptHandler = EUSART_Rec
      +                          eiveISR;
 15832     1234  30C6               	movlw	low _EUSART_ReceiveISR
 15833     1235  0023               	movlb	3	; select bank3
 15834     1236  00D4               	movwf	_EUSART_RxInterruptHandler^(0+384)
 15835     1237  3013               	movlw	high _EUSART_ReceiveISR
 15836     1238  00D5               	movwf	(_EUSART_RxInterruptHandler^(0+384)+1)
 15837     1239                     l6374:
 15838                           
 15839                           ;mcc_generated_files/uart/src/eusart.c: 136:     PIE1bits.TXIE = 0;
 15840     1239  0021               	movlb	1	; select bank1
 15841     123A  1211               	bcf	17,4	;volatile
 15842                           
 15843                           ;mcc_generated_files/uart/src/eusart.c: 137:     EUSART_TxInterruptHandler = EUSART_Tran
      +                          smitISR;
 15844     123B  303E               	movlw	low _EUSART_TransmitISR
 15845     123C  0022               	movlb	2	; select bank2
 15846     123D  00E2               	movwf	_EUSART_TxInterruptHandler^(0+256)
 15847     123E  3010               	movlw	high _EUSART_TransmitISR
 15848     123F  00E3               	movwf	(_EUSART_TxInterruptHandler^(0+256)+1)
 15849     1240                     l6376:
 15850                           
 15851                           ;mcc_generated_files/uart/src/eusart.c: 142:     BAUD1CON = 0x48;
 15852     1240  3048               	movlw	72
 15853     1241  0023               	movlb	3	; select bank3
 15854     1242  009F               	movwf	31	;volatile
 15855     1243                     l6378:
 15856                           
 15857                           ;mcc_generated_files/uart/src/eusart.c: 144:     RC1STA = 0x90;
 15858     1243  3090               	movlw	144
 15859     1244  009D               	movwf	29	;volatile
 15860     1245                     l6380:
 15861                           
 15862                           ;mcc_generated_files/uart/src/eusart.c: 146:     TX1STA = 0x26;
 15863     1245  3026               	movlw	38
 15864     1246  009E               	movwf	30	;volatile
 15865     1247                     l6382:
 15866                           
 15867                           ;mcc_generated_files/uart/src/eusart.c: 148:     SP1BRGL = 0x40;
 15868     1247  3040               	movlw	64
 15869     1248  009B               	movwf	27	;volatile
 15870     1249                     l6384:
 15871                           
 15872                           ;mcc_generated_files/uart/src/eusart.c: 150:     SP1BRGH = 0x3;
 15873     1249  3003               	movlw	3
 15874     124A  009C               	movwf	28	;volatile
 15875     124B                     l6386:
 15876                           
 15877                           ;mcc_generated_files/uart/src/eusart.c: 152:     EUSART_FramingErrorCallbackRegister(EUS
      +                          ART_DefaultFramingErrorCallback);
 15878     124B  30E1               	movlw	low _EUSART_DefaultFramingErrorCallback
 15879     124C  0021               	movlb	1	; select bank1
 15880     124D  00A0               	movwf	EUSART_FramingErrorCallbackRegister@callbackHandler^(0+128)
 15881     124E  301D               	movlw	high _EUSART_DefaultFramingErrorCallback
 15882     124F  00A1               	movwf	(EUSART_FramingErrorCallbackRegister@callbackHandler^(0+128)+1)
 15883     1250  319F  2753  3192   	fcall	_EUSART_FramingErrorCallbackRegister
 15884     1253                     l6388:
 15885                           
 15886                           ;mcc_generated_files/uart/src/eusart.c: 153:     EUSART_OverrunErrorCallbackRegister(EUS
      +                          ART_DefaultOverrunErrorCallback);
 15887     1253  30F9               	movlw	low _EUSART_DefaultOverrunErrorCallback
 15888     1254  0021               	movlb	1	; select bank1
 15889     1255  00A0               	movwf	EUSART_OverrunErrorCallbackRegister@callbackHandler^(0+128)
 15890     1256  301D               	movlw	high _EUSART_DefaultOverrunErrorCallback
 15891     1257  00A1               	movwf	(EUSART_OverrunErrorCallbackRegister@callbackHandler^(0+128)+1)
 15892     1258  319F  2762  3192   	fcall	_EUSART_OverrunErrorCallbackRegister
 15893     125B                     l6390:
 15894                           
 15895                           ;mcc_generated_files/uart/src/eusart.c: 154:     eusartRxLastError.status = 0;
 15896     125B  0022               	movlb	2	; select bank2
 15897     125C  01D8               	clrf	_eusartRxLastError^(0+256)	;volatile
 15898     125D  01D9               	clrf	(_eusartRxLastError+1)^(0+256)	;volatile
 15899     125E                     l6392:
 15900                           
 15901                           ;mcc_generated_files/uart/src/eusart.c: 156:     eusartTxHead = 0;
 15902     125E  0020               	movlb	0	; select bank0
 15903     125F  01ED               	clrf	_eusartTxHead	;volatile
 15904     1260                     l6394:
 15905                           
 15906                           ;mcc_generated_files/uart/src/eusart.c: 157:     eusartTxTail = 0;
 15907     1260  01EC               	clrf	_eusartTxTail	;volatile
 15908     1261                     l6396:
 15909                           
 15910                           ;mcc_generated_files/uart/src/eusart.c: 158:     eusartTxBufferRemaining = sizeof(eusart
      +                          TxBuffer);
 15911     1261  3008               	movlw	8
 15912     1262  00EB               	movwf	_eusartTxBufferRemaining	;volatile
 15913     1263                     l6398:
 15914                           
 15915                           ;mcc_generated_files/uart/src/eusart.c: 160:     eusartRxHead = 0;
 15916     1263  01EA               	clrf	_eusartRxHead	;volatile
 15917     1264                     l6400:
 15918                           
 15919                           ;mcc_generated_files/uart/src/eusart.c: 161:     eusartRxTail = 0;
 15920     1264  01E9               	clrf	_eusartRxTail	;volatile
 15921     1265                     l6402:
 15922                           
 15923                           ;mcc_generated_files/uart/src/eusart.c: 162:     eusartRxCount = 0;
 15924     1265  01E8               	clrf	_eusartRxCount	;volatile
 15925     1266                     l6404:
 15926                           
 15927                           ;mcc_generated_files/uart/src/eusart.c: 164:     PIE1bits.RCIE = 1;
 15928     1266  0021               	movlb	1	; select bank1
 15929     1267  1691               	bsf	17,5	;volatile
 15930     1268                     l650:
 15931     1268  0008               	return
 15932     1269                     __end_of_EUSART_Initialize:
 15933                           
 15934                           	psect	text48
 15935     1F62                     __ptext48:	
 15936 ;; *************** function _EUSART_OverrunErrorCallbackRegister *****************
 15937 ;; Defined at:
 15938 ;;		line 438 in file "mcc_generated_files/uart/src/eusart.c"
 15939 ;; Parameters:    Size  Location     Type
 15940 ;;  callbackHand    2    0[BANK1 ] PTR FTN()void 
 15941 ;;		 -> EUSART_DefaultOverrunErrorCallback(1), 
 15942 ;; Auto vars:     Size  Location     Type
 15943 ;;		None
 15944 ;; Return value:  Size  Location     Type
 15945 ;;                  1    wreg      void 
 15946 ;; Registers used:
 15947 ;;		wreg, status,2, status,0
 15948 ;; Tracked objects:
 15949 ;;		On entry : 0/0
 15950 ;;		On exit  : 0/0
 15951 ;;		Unchanged: 0/0
 15952 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 15953 ;;      Params:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0
 15954 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15955 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15956 ;;      Totals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0
 15957 ;;Total ram usage:        2 bytes
 15958 ;; Hardware stack levels used: 1
 15959 ;; Hardware stack levels required when called: 7
 15960 ;; This function calls:
 15961 ;;		Nothing
 15962 ;; This function is called by:
 15963 ;;		_EUSART_Initialize
 15964 ;; This function uses a non-reentrant model
 15965 ;;
 15966                           
 15967     1F62                     _EUSART_OverrunErrorCallbackRegister:	
 15968                           ;psect for function _EUSART_OverrunErrorCallbackRegister
 15969                           
 15970     1F62                     l5194:	
 15971                           ;incstack = 0
 15972                           ; Regs used in _EUSART_OverrunErrorCallbackRegister: [wreg+status,2+status,0]
 15973                           
 15974                           
 15975                           ;mcc_generated_files/uart/src/eusart.c: 438: void EUSART_OverrunErrorCallbackRegister(vo
      +                          id (* callbackHandler)(void));mcc_generated_files/uart/src/eusart.c: 439: {;mcc_generate
      +                          d_files/uart/src/eusart.c: 440:     if(((void*)0) != callbackHandler)
 15976     1F62  0021               	movlb	1	; select bank1
 15977     1F63  0820               	movf	EUSART_OverrunErrorCallbackRegister@callbackHandler^(0+128),w
 15978     1F64  0421               	iorwf	(EUSART_OverrunErrorCallbackRegister@callbackHandler+1)^(0+128),w
 15979     1F65  1903               	btfsc	3,2
 15980     1F66  2F68               	goto	u4861
 15981     1F67  2F69               	goto	u4860
 15982     1F68                     u4861:
 15983     1F68  2F70               	goto	l768
 15984     1F69                     u4860:
 15985     1F69                     l5196:
 15986                           
 15987                           ;mcc_generated_files/uart/src/eusart.c: 441:     {;mcc_generated_files/uart/src/eusart.c
      +                          : 442:         EUSART_OverrunErrorHandler = callbackHandler;
 15988     1F69  0821               	movf	(EUSART_OverrunErrorCallbackRegister@callbackHandler+1)^(0+128),w
 15989     1F6A  0022               	movlb	2	; select bank2
 15990     1F6B  00D1               	movwf	(_EUSART_OverrunErrorHandler+1)^(0+256)
 15991     1F6C  0021               	movlb	1	; select bank1
 15992     1F6D  0820               	movf	EUSART_OverrunErrorCallbackRegister@callbackHandler^(0+128),w
 15993     1F6E  0022               	movlb	2	; select bank2
 15994     1F6F  00D0               	movwf	_EUSART_OverrunErrorHandler^(0+256)
 15995     1F70                     l768:
 15996     1F70  0008               	return
 15997     1F71                     __end_of_EUSART_OverrunErrorCallbackRegister:
 15998                           
 15999                           	psect	text49
 16000     1F53                     __ptext49:	
 16001 ;; *************** function _EUSART_FramingErrorCallbackRegister *****************
 16002 ;; Defined at:
 16003 ;;		line 430 in file "mcc_generated_files/uart/src/eusart.c"
 16004 ;; Parameters:    Size  Location     Type
 16005 ;;  callbackHand    2    0[BANK1 ] PTR FTN()void 
 16006 ;;		 -> EUSART_DefaultFramingErrorCallback(1), 
 16007 ;; Auto vars:     Size  Location     Type
 16008 ;;		None
 16009 ;; Return value:  Size  Location     Type
 16010 ;;                  1    wreg      void 
 16011 ;; Registers used:
 16012 ;;		wreg, status,2, status,0
 16013 ;; Tracked objects:
 16014 ;;		On entry : 0/0
 16015 ;;		On exit  : 0/0
 16016 ;;		Unchanged: 0/0
 16017 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 16018 ;;      Params:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0
 16019 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16020 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16021 ;;      Totals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0
 16022 ;;Total ram usage:        2 bytes
 16023 ;; Hardware stack levels used: 1
 16024 ;; Hardware stack levels required when called: 7
 16025 ;; This function calls:
 16026 ;;		Nothing
 16027 ;; This function is called by:
 16028 ;;		_EUSART_Initialize
 16029 ;; This function uses a non-reentrant model
 16030 ;;
 16031                           
 16032     1F53                     _EUSART_FramingErrorCallbackRegister:	
 16033                           ;psect for function _EUSART_FramingErrorCallbackRegister
 16034                           
 16035     1F53                     l5190:	
 16036                           ;incstack = 0
 16037                           ; Regs used in _EUSART_FramingErrorCallbackRegister: [wreg+status,2+status,0]
 16038                           
 16039                           
 16040                           ;mcc_generated_files/uart/src/eusart.c: 430: void EUSART_FramingErrorCallbackRegister(vo
      +                          id (* callbackHandler)(void));mcc_generated_files/uart/src/eusart.c: 431: {;mcc_generate
      +                          d_files/uart/src/eusart.c: 432:     if(((void*)0) != callbackHandler)
 16041     1F53  0021               	movlb	1	; select bank1
 16042     1F54  0820               	movf	EUSART_FramingErrorCallbackRegister@callbackHandler^(0+128),w
 16043     1F55  0421               	iorwf	(EUSART_FramingErrorCallbackRegister@callbackHandler+1)^(0+128),w
 16044     1F56  1903               	btfsc	3,2
 16045     1F57  2F59               	goto	u4851
 16046     1F58  2F5A               	goto	u4850
 16047     1F59                     u4851:
 16048     1F59  2F61               	goto	l764
 16049     1F5A                     u4850:
 16050     1F5A                     l5192:
 16051                           
 16052                           ;mcc_generated_files/uart/src/eusart.c: 433:     {;mcc_generated_files/uart/src/eusart.c
      +                          : 434:         EUSART_FramingErrorHandler = callbackHandler;
 16053     1F5A  0821               	movf	(EUSART_FramingErrorCallbackRegister@callbackHandler+1)^(0+128),w
 16054     1F5B  0022               	movlb	2	; select bank2
 16055     1F5C  00D3               	movwf	(_EUSART_FramingErrorHandler+1)^(0+256)
 16056     1F5D  0021               	movlb	1	; select bank1
 16057     1F5E  0820               	movf	EUSART_FramingErrorCallbackRegister@callbackHandler^(0+128),w
 16058     1F5F  0022               	movlb	2	; select bank2
 16059     1F60  00D2               	movwf	_EUSART_FramingErrorHandler^(0+256)
 16060     1F61                     l764:
 16061     1F61  0008               	return
 16062     1F62                     __end_of_EUSART_FramingErrorCallbackRegister:
 16063                           
 16064                           	psect	text50
 16065     1E87                     __ptext50:	
 16066 ;; *************** function _CLOCK_Initialize *****************
 16067 ;; Defined at:
 16068 ;;		line 39 in file "mcc_generated_files/system/src/clock.c"
 16069 ;; Parameters:    Size  Location     Type
 16070 ;;		None
 16071 ;; Auto vars:     Size  Location     Type
 16072 ;;		None
 16073 ;; Return value:  Size  Location     Type
 16074 ;;                  1    wreg      void 
 16075 ;; Registers used:
 16076 ;;		status,2
 16077 ;; Tracked objects:
 16078 ;;		On entry : 0/0
 16079 ;;		On exit  : 0/0
 16080 ;;		Unchanged: 0/0
 16081 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 16082 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16083 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16084 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16085 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16086 ;;Total ram usage:        0 bytes
 16087 ;; Hardware stack levels used: 1
 16088 ;; Hardware stack levels required when called: 7
 16089 ;; This function calls:
 16090 ;;		Nothing
 16091 ;; This function is called by:
 16092 ;;		_SYSTEM_Initialize
 16093 ;; This function uses a non-reentrant model
 16094 ;;
 16095                           
 16096     1E87                     _CLOCK_Initialize:	
 16097                           ;psect for function _CLOCK_Initialize
 16098                           
 16099     1E87                     l6290:	
 16100                           ;incstack = 0
 16101                           ; Regs used in _CLOCK_Initialize: [status,2]
 16102                           
 16103                           
 16104                           ;mcc_generated_files/system/src/clock.c: 42:     OSCCON1 = (0 << 0x0)
 16105     1E87  0032               	movlb	18	; select bank18
 16106     1E88  0199               	clrf	25	;volatile
 16107                           
 16108                           ;mcc_generated_files/system/src/clock.c: 44:     OSCCON3 = (0 << 0x6)
 16109     1E89  019B               	clrf	27	;volatile
 16110                           
 16111                           ;mcc_generated_files/system/src/clock.c: 46:     OSCEN = (0 << 0x7)
 16112     1E8A  019D               	clrf	29	;volatile
 16113     1E8B                     l6292:
 16114                           
 16115                           ;mcc_generated_files/system/src/clock.c: 51:     OSCFRQ = (6 << 0x0);
 16116     1E8B  3006               	movlw	6
 16117     1E8C  009F               	movwf	31	;volatile
 16118                           
 16119                           ;mcc_generated_files/system/src/clock.c: 52:     OSCSTAT1 =
 16120     1E8D  019E               	clrf	30	;volatile
 16121     1E8E  019C               	clrf	28	;volatile
 16122     1E8F                     l266:
 16123     1E8F  0008               	return
 16124     1E90                     __end_of_CLOCK_Initialize:
 16125                           
 16126                           	psect	text51
 16127     1012                     __ptext51:	
 16128 ;; *************** function _ADC_Initialize *****************
 16129 ;; Defined at:
 16130 ;;		line 55 in file "mcc_generated_files/adc/src/adc.c"
 16131 ;; Parameters:    Size  Location     Type
 16132 ;;		None
 16133 ;; Auto vars:     Size  Location     Type
 16134 ;;		None
 16135 ;; Return value:  Size  Location     Type
 16136 ;;                  1    wreg      void 
 16137 ;; Registers used:
 16138 ;;		wreg, status,2, status,0, pclath, cstack
 16139 ;; Tracked objects:
 16140 ;;		On entry : 0/0
 16141 ;;		On exit  : 0/0
 16142 ;;		Unchanged: 0/0
 16143 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 16144 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16145 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16146 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16147 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16148 ;;Total ram usage:        0 bytes
 16149 ;; Hardware stack levels used: 1
 16150 ;; Hardware stack levels required when called: 8
 16151 ;; This function calls:
 16152 ;;		_ADC_SetInterruptHandler
 16153 ;; This function is called by:
 16154 ;;		_SYSTEM_Initialize
 16155 ;; This function uses a non-reentrant model
 16156 ;;
 16157                           
 16158     1012                     _ADC_Initialize:	
 16159                           ;psect for function _ADC_Initialize
 16160                           
 16161     1012                     l6262:	
 16162                           ;incstack = 0
 16163                           ; Regs used in _ADC_Initialize: [wreg+status,2+status,0+pclath+cstack]
 16164                           
 16165                           
 16166                           ;mcc_generated_files/adc/src/adc.c: 58:     ADCON1 = 0xA0;
 16167     1012  30A0               	movlw	160
 16168     1013  0021               	movlb	1	; select bank1
 16169     1014  009E               	movwf	30	;volatile
 16170     1015                     l6264:
 16171                           
 16172                           ;mcc_generated_files/adc/src/adc.c: 61:     ADRESL = 0x0;
 16173     1015  019B               	clrf	27	;volatile
 16174                           
 16175                           ;mcc_generated_files/adc/src/adc.c: 64:     ADRESH = 0x0;
 16176     1016  019C               	clrf	28	;volatile
 16177     1017                     l6266:
 16178                           
 16179                           ;mcc_generated_files/adc/src/adc.c: 67:     ADACT = 0x5;
 16180     1017  3005               	movlw	5
 16181     1018  009F               	movwf	31	;volatile
 16182     1019                     l6268:
 16183                           
 16184                           ;mcc_generated_files/adc/src/adc.c: 70:     ADCON0 = 0x1;
 16185     1019  3001               	movlw	1
 16186     101A  009D               	movwf	29	;volatile
 16187     101B                     l6270:
 16188                           
 16189                           ;mcc_generated_files/adc/src/adc.c: 73:     PIR1bits.ADIF = 0;
 16190     101B  0020               	movlb	0	; select bank0
 16191     101C  1311               	bcf	17,6	;volatile
 16192     101D                     l6272:
 16193                           
 16194                           ;mcc_generated_files/adc/src/adc.c: 76:     ADC_SetInterruptHandler(ADC_DefaultInterrupt
      +                          Handler);
 16195     101D  30E0               	movlw	low _ADC_DefaultInterruptHandler
 16196     101E  0021               	movlb	1	; select bank1
 16197     101F  00A0               	movwf	ADC_SetInterruptHandler@InterruptHandler^(0+128)
 16198     1020  301D               	movlw	high _ADC_DefaultInterruptHandler
 16199     1021  00A1               	movwf	(ADC_SetInterruptHandler@InterruptHandler^(0+128)+1)
 16200     1022  319E  267E  3190   	fcall	_ADC_SetInterruptHandler
 16201     1025                     l6274:
 16202                           
 16203                           ;mcc_generated_files/adc/src/adc.c: 79:     PIE1bits.ADIE = 1;
 16204     1025  0021               	movlb	1	; select bank1
 16205     1026  1711               	bsf	17,6	;volatile
 16206     1027                     l27:
 16207     1027  0008               	return
 16208     1028                     __end_of_ADC_Initialize:
 16209                           
 16210                           	psect	text52
 16211     1E7E                     __ptext52:	
 16212 ;; *************** function _ADC_SetInterruptHandler *****************
 16213 ;; Defined at:
 16214 ;;		line 145 in file "mcc_generated_files/adc/src/adc.c"
 16215 ;; Parameters:    Size  Location     Type
 16216 ;;  InterruptHan    2    0[BANK1 ] PTR FTN()void 
 16217 ;;		 -> adcConversionDoneHandler(1), ADC_DefaultInterruptHandler(1), 
 16218 ;; Auto vars:     Size  Location     Type
 16219 ;;		None
 16220 ;; Return value:  Size  Location     Type
 16221 ;;                  1    wreg      void 
 16222 ;; Registers used:
 16223 ;;		wreg
 16224 ;; Tracked objects:
 16225 ;;		On entry : 0/0
 16226 ;;		On exit  : 0/0
 16227 ;;		Unchanged: 0/0
 16228 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 16229 ;;      Params:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0
 16230 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16231 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16232 ;;      Totals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0
 16233 ;;Total ram usage:        2 bytes
 16234 ;; Hardware stack levels used: 1
 16235 ;; Hardware stack levels required when called: 7
 16236 ;; This function calls:
 16237 ;;		Nothing
 16238 ;; This function is called by:
 16239 ;;		_ADC_Initialize
 16240 ;;		_initAdcMultiplexer
 16241 ;; This function uses a non-reentrant model
 16242 ;;
 16243                           
 16244     1E7E                     _ADC_SetInterruptHandler:	
 16245                           ;psect for function _ADC_SetInterruptHandler
 16246                           
 16247     1E7E                     l5174:	
 16248                           ;incstack = 0
 16249                           ; Regs used in _ADC_SetInterruptHandler: [wreg]
 16250                           
 16251                           
 16252                           ;mcc_generated_files/adc/src/adc.c: 145: void ADC_SetInterruptHandler(void (* InterruptH
      +                          andler)(void));mcc_generated_files/adc/src/adc.c: 146: {;mcc_generated_files/adc/src/adc
      +                          .c: 147:     ADC_InterruptHandler = InterruptHandler;
 16253     1E7E  0021               	movlb	1	; select bank1
 16254     1E7F  0821               	movf	(ADC_SetInterruptHandler@InterruptHandler+1)^(0+128),w
 16255     1E80  0022               	movlb	2	; select bank2
 16256     1E81  00E5               	movwf	(_ADC_InterruptHandler+1)^(0+256)
 16257     1E82  0021               	movlb	1	; select bank1
 16258     1E83  0820               	movf	ADC_SetInterruptHandler@InterruptHandler^(0+128),w
 16259     1E84  0022               	movlb	2	; select bank2
 16260     1E85  00E4               	movwf	_ADC_InterruptHandler^(0+256)
 16261     1E86                     l55:
 16262     1E86  0008               	return
 16263     1E87                     __end_of_ADC_SetInterruptHandler:
 16264                           
 16265                           	psect	text53
 16266     1E21                     __ptext53:	
 16267 ;; *************** function _I2C_Master_Init *****************
 16268 ;; Defined at:
 16269 ;;		line 4 in file "I2Creader.c"
 16270 ;; Parameters:    Size  Location     Type
 16271 ;;		None
 16272 ;; Auto vars:     Size  Location     Type
 16273 ;;		None
 16274 ;; Return value:  Size  Location     Type
 16275 ;;                  1    wreg      void 
 16276 ;; Registers used:
 16277 ;;		status,2, status,0, pclath, cstack
 16278 ;; Tracked objects:
 16279 ;;		On entry : 0/0
 16280 ;;		On exit  : 0/0
 16281 ;;		Unchanged: 0/0
 16282 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 16283 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16284 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16285 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16286 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16287 ;;Total ram usage:        0 bytes
 16288 ;; Hardware stack levels used: 1
 16289 ;; Hardware stack levels required when called: 9
 16290 ;; This function calls:
 16291 ;;		_I2C2_Initialize
 16292 ;; This function is called by:
 16293 ;;		_main
 16294 ;; This function uses a non-reentrant model
 16295 ;;
 16296                           
 16297     1E21                     _I2C_Master_Init:	
 16298                           ;psect for function _I2C_Master_Init
 16299                           
 16300     1E21                     l6726:	
 16301                           ;incstack = 0
 16302                           ; Regs used in _I2C_Master_Init: [status,2+status,0+pclath+cstack]
 16303                           
 16304                           
 16305                           ;I2Creader.c: 6:     I2C2_Initialize();
 16306     1E21  319F  2744  319E   	fcall	_I2C2_Initialize
 16307     1E24                     l1286:
 16308     1E24  0008               	return
 16309     1E25                     __end_of_I2C_Master_Init:
 16310                           
 16311                           	psect	text54
 16312     1F44                     __ptext54:	
 16313 ;; *************** function _I2C2_Initialize *****************
 16314 ;; Defined at:
 16315 ;;		line 114 in file "mcc_generated_files/i2c_host/src/mssp2.c"
 16316 ;; Parameters:    Size  Location     Type
 16317 ;;		None
 16318 ;; Auto vars:     Size  Location     Type
 16319 ;;		None
 16320 ;; Return value:  Size  Location     Type
 16321 ;;                  1    wreg      void 
 16322 ;; Registers used:
 16323 ;;		status,2, status,0, pclath, cstack
 16324 ;; Tracked objects:
 16325 ;;		On entry : 0/0
 16326 ;;		On exit  : 0/0
 16327 ;;		Unchanged: 0/0
 16328 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 16329 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16330 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16331 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16332 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16333 ;;Total ram usage:        0 bytes
 16334 ;; Hardware stack levels used: 1
 16335 ;; Hardware stack levels required when called: 8
 16336 ;; This function calls:
 16337 ;;		_I2C2_InterruptsEnable
 16338 ;; This function is called by:
 16339 ;;		_SYSTEM_Initialize
 16340 ;;		_I2C_Master_Init
 16341 ;; This function uses a non-reentrant model
 16342 ;;
 16343                           
 16344     1F44                     _I2C2_Initialize:	
 16345                           ;psect for function _I2C2_Initialize
 16346                           
 16347     1F44                     l6406:	
 16348                           ;incstack = 0
 16349                           ; Regs used in _I2C2_Initialize: [status,2+status,0+pclath+cstack]
 16350                           
 16351                           
 16352                           ;mcc_generated_files/i2c_host/src/mssp2.c: 117:     SSP2STAT = 0x80;
 16353     1F44  3080               	movlw	128
 16354     1F45  0024               	movlb	4	; select bank4
 16355     1F46  009C               	movwf	28	;volatile
 16356                           
 16357                           ;mcc_generated_files/i2c_host/src/mssp2.c: 119:     SSP2CON1 = 0x8;
 16358     1F47  3008               	movlw	8
 16359     1F48  009D               	movwf	29	;volatile
 16360     1F49                     l6408:
 16361                           
 16362                           ;mcc_generated_files/i2c_host/src/mssp2.c: 121:     SSP2CON2 = 0x0;
 16363     1F49  019E               	clrf	30	;volatile
 16364                           
 16365                           ;mcc_generated_files/i2c_host/src/mssp2.c: 123:     SSP2CON3 = 0x0;
 16366     1F4A  019F               	clrf	31	;volatile
 16367     1F4B                     l6410:
 16368                           
 16369                           ;mcc_generated_files/i2c_host/src/mssp2.c: 125:     SSP2ADD = 0x4F;
 16370     1F4B  304F               	movlw	79
 16371     1F4C  009A               	movwf	26	;volatile
 16372     1F4D                     l6412:
 16373                           
 16374                           ;mcc_generated_files/i2c_host/src/mssp2.c: 126:     I2C2_InterruptsEnable();
 16375     1F4D  319E  261D  319F   	fcall	_I2C2_InterruptsEnable
 16376     1F50                     l6414:
 16377                           
 16378                           ;mcc_generated_files/i2c_host/src/mssp2.c: 127:     SSP2CON1bits.SSPEN = 1;
 16379     1F50  0024               	movlb	4	; select bank4
 16380     1F51  169D               	bsf	29,5	;volatile
 16381     1F52                     l1136:
 16382     1F52  0008               	return
 16383     1F53                     __end_of_I2C2_Initialize:
 16384                           
 16385                           	psect	text55
 16386     1E1D                     __ptext55:	
 16387 ;; *************** function _I2C2_InterruptsEnable *****************
 16388 ;; Defined at:
 16389 ;;		line 474 in file "mcc_generated_files/i2c_host/src/mssp2.c"
 16390 ;; Parameters:    Size  Location     Type
 16391 ;;		None
 16392 ;; Auto vars:     Size  Location     Type
 16393 ;;		None
 16394 ;; Return value:  Size  Location     Type
 16395 ;;                  1    wreg      void 
 16396 ;; Registers used:
 16397 ;;		None
 16398 ;; Tracked objects:
 16399 ;;		On entry : 0/0
 16400 ;;		On exit  : 0/0
 16401 ;;		Unchanged: 0/0
 16402 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 16403 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16404 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16405 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16406 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16407 ;;Total ram usage:        0 bytes
 16408 ;; Hardware stack levels used: 1
 16409 ;; Hardware stack levels required when called: 7
 16410 ;; This function calls:
 16411 ;;		Nothing
 16412 ;; This function is called by:
 16413 ;;		_I2C2_Initialize
 16414 ;; This function uses a non-reentrant model
 16415 ;;
 16416                           
 16417     1E1D                     _I2C2_InterruptsEnable:	
 16418                           ;psect for function _I2C2_InterruptsEnable
 16419                           
 16420     1E1D                     l5232:	
 16421                           ;incstack = 0
 16422                           ; Regs used in _I2C2_InterruptsEnable: []
 16423                           
 16424                           
 16425                           ;mcc_generated_files/i2c_host/src/mssp2.c: 476:     PIE2bits.SSP2IE = 1;
 16426     1E1D  0021               	movlb	1	; select bank1
 16427     1E1E  1592               	bsf	18,3	;volatile
 16428                           
 16429                           ;mcc_generated_files/i2c_host/src/mssp2.c: 477:     PIE2bits.BCL2IE = 1;
 16430     1E1F  1512               	bsf	18,2	;volatile
 16431     1E20                     l1269:
 16432     1E20  0008               	return
 16433     1E21                     __end_of_I2C2_InterruptsEnable:
 16434                           
 16435                           	psect	intentry
 16436     0004                     __pintentry:	
 16437 ;; *************** function _INTERRUPT_InterruptManager *****************
 16438 ;; Defined at:
 16439 ;;		line 59 in file "mcc_generated_files/system/src/interrupt.c"
 16440 ;; Parameters:    Size  Location     Type
 16441 ;;		None
 16442 ;; Auto vars:     Size  Location     Type
 16443 ;;		None
 16444 ;; Return value:  Size  Location     Type
 16445 ;;                  1    wreg      void 
 16446 ;; Registers used:
 16447 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 16448 ;; Tracked objects:
 16449 ;;		On entry : 0/0
 16450 ;;		On exit  : 0/0
 16451 ;;		Unchanged: 0/0
 16452 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 16453 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16454 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16455 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16456 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16457 ;;Total ram usage:        0 bytes
 16458 ;; Hardware stack levels used: 1
 16459 ;; Hardware stack levels required when called: 6
 16460 ;; This function calls:
 16461 ;;		NULL
 16462 ;;		_ADC_ISR
 16463 ;;		_EUSART_ReceiveISR
 16464 ;;		_EUSART_TransmitISR
 16465 ;;		_I2C2_ERROR_ISR
 16466 ;;		_I2C2_ISR
 16467 ;;		_TMR2_ISR
 16468 ;;		_TMR4_ISR
 16469 ;; This function is called by:
 16470 ;;		Interrupt level 1
 16471 ;; This function uses a non-reentrant model
 16472 ;;
 16473                           
 16474     0004                     _INTERRUPT_InterruptManager:
 16475                           
 16476                           ;incstack = 0
 16477 ;; hardware stack exceeded
 16478     0004  147E               	bsf	int$flags,0	;set compiler interrupt flag (level 1)
 16479                           
 16480                           ; Regs used in _INTERRUPT_InterruptManager: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 16481     0005  3180               	pagesel	$
 16482     0006                     i1l6832:
 16483                           
 16484                           ;mcc_generated_files/system/src/interrupt.c: 62:     if(INTCONbits.PEIE == 1)
 16485     0006  1F0B               	btfss	11,6	;volatile
 16486     0007  2809               	goto	u758_21
 16487     0008  280A               	goto	u758_20
 16488     0009                     u758_21:
 16489     0009  2872               	goto	i1l238
 16490     000A                     u758_20:
 16491     000A                     i1l6834:
 16492                           
 16493                           ;mcc_generated_files/system/src/interrupt.c: 63:     {;mcc_generated_files/system/src/in
      +                          terrupt.c: 64:         if(PIE1bits.TXIE == 1 && PIR1bits.TXIF == 1)
 16494     000A  0021               	movlb	1	; select bank1
 16495     000B  1E11               	btfss	17,4	;volatile
 16496     000C  280E               	goto	u759_21
 16497     000D  280F               	goto	u759_20
 16498     000E                     u759_21:
 16499     000E  281B               	goto	i1l223
 16500     000F                     u759_20:
 16501     000F                     i1l6836:
 16502     000F  0020               	movlb	0	; select bank0
 16503     0010  1E11               	btfss	17,4	;volatile
 16504     0011  2813               	goto	u760_21
 16505     0012  2814               	goto	u760_20
 16506     0013                     u760_21:
 16507     0013  281B               	goto	i1l223
 16508     0014                     u760_20:
 16509     0014                     i1l6838:
 16510                           
 16511                           ;mcc_generated_files/system/src/interrupt.c: 65:         {;mcc_generated_files/system/sr
      +                          c/interrupt.c: 66:             EUSART_TxInterruptHandler();
 16512     0014  0022               	movlb	2	; select bank2
 16513     0015  0863               	movf	(_EUSART_TxInterruptHandler+1)^(0+256),w
 16514     0016  008A               	movwf	10
 16515     0017  0862               	movf	_EUSART_TxInterruptHandler^(0+256),w
 16516     0018  000A               	callw
 16517     0019  3180               	pagesel	$
 16518                           
 16519                           ;mcc_generated_files/system/src/interrupt.c: 67:         }
 16520     001A  2872               	goto	i1l238
 16521     001B                     i1l223:	
 16522                           ;mcc_generated_files/system/src/interrupt.c: 68:         else if(PIE1bits.RCIE == 1 && P
      +                          IR1bits.RCIF == 1)
 16523                           
 16524     001B  0021               	movlb	1	; select bank1
 16525     001C  1E91               	btfss	17,5	;volatile
 16526     001D  281F               	goto	u761_21
 16527     001E  2820               	goto	u761_20
 16528     001F                     u761_21:
 16529     001F  282C               	goto	i1l225
 16530     0020                     u761_20:
 16531     0020                     i1l6840:
 16532     0020  0020               	movlb	0	; select bank0
 16533     0021  1E91               	btfss	17,5	;volatile
 16534     0022  2824               	goto	u762_21
 16535     0023  2825               	goto	u762_20
 16536     0024                     u762_21:
 16537     0024  282C               	goto	i1l225
 16538     0025                     u762_20:
 16539     0025                     i1l6842:
 16540                           
 16541                           ;mcc_generated_files/system/src/interrupt.c: 69:         {;mcc_generated_files/system/sr
      +                          c/interrupt.c: 70:             EUSART_RxInterruptHandler();
 16542     0025  0023               	movlb	3	; select bank3
 16543     0026  0855               	movf	(_EUSART_RxInterruptHandler+1)^(0+384),w
 16544     0027  008A               	movwf	10
 16545     0028  0854               	movf	_EUSART_RxInterruptHandler^(0+384),w
 16546     0029  000A               	callw
 16547     002A  3180               	pagesel	$
 16548                           
 16549                           ;mcc_generated_files/system/src/interrupt.c: 71:         }
 16550     002B  2872               	goto	i1l238
 16551     002C                     i1l225:	
 16552                           ;mcc_generated_files/system/src/interrupt.c: 72:         else if(PIE2bits.TMR4IE == 1 &&
      +                           PIR2bits.TMR4IF == 1)
 16553                           
 16554     002C  0021               	movlb	1	; select bank1
 16555     002D  1C92               	btfss	18,1	;volatile
 16556     002E  2830               	goto	u763_21
 16557     002F  2831               	goto	u763_20
 16558     0030                     u763_21:
 16559     0030  283A               	goto	i1l227
 16560     0031                     u763_20:
 16561     0031                     i1l6844:
 16562     0031  0020               	movlb	0	; select bank0
 16563     0032  1C92               	btfss	18,1	;volatile
 16564     0033  2835               	goto	u764_21
 16565     0034  2836               	goto	u764_20
 16566     0035                     u764_21:
 16567     0035  283A               	goto	i1l227
 16568     0036                     u764_20:
 16569     0036                     i1l6846:
 16570                           
 16571                           ;mcc_generated_files/system/src/interrupt.c: 73:         {;mcc_generated_files/system/sr
      +                          c/interrupt.c: 74:             TMR4_ISR();
 16572     0036  319F  2735  3180   	fcall	_TMR4_ISR
 16573                           
 16574                           ;mcc_generated_files/system/src/interrupt.c: 75:         }
 16575     0039  2872               	goto	i1l238
 16576     003A                     i1l227:	
 16577                           ;mcc_generated_files/system/src/interrupt.c: 76:         else if(PIE2bits.BCL2IE == 1 &&
      +                           PIR2bits.BCL2IF == 1)
 16578                           
 16579     003A  0021               	movlb	1	; select bank1
 16580     003B  1D12               	btfss	18,2	;volatile
 16581     003C  283E               	goto	u765_21
 16582     003D  283F               	goto	u765_20
 16583     003E                     u765_21:
 16584     003E  2848               	goto	i1l229
 16585     003F                     u765_20:
 16586     003F                     i1l6848:
 16587     003F  0020               	movlb	0	; select bank0
 16588     0040  1D12               	btfss	18,2	;volatile
 16589     0041  2843               	goto	u766_21
 16590     0042  2844               	goto	u766_20
 16591     0043                     u766_21:
 16592     0043  2848               	goto	i1l229
 16593     0044                     u766_20:
 16594     0044                     i1l6850:
 16595                           
 16596                           ;mcc_generated_files/system/src/interrupt.c: 77:         {;mcc_generated_files/system/sr
      +                          c/interrupt.c: 78:             I2C2_ERROR_ISR();
 16597     0044  319E  2615  3180   	fcall	_I2C2_ERROR_ISR
 16598                           
 16599                           ;mcc_generated_files/system/src/interrupt.c: 79:         }
 16600     0047  2872               	goto	i1l238
 16601     0048                     i1l229:	
 16602                           ;mcc_generated_files/system/src/interrupt.c: 80:         else if(PIE2bits.SSP2IE == 1 &&
      +                           PIR2bits.SSP2IF == 1)
 16603                           
 16604     0048  0021               	movlb	1	; select bank1
 16605     0049  1D92               	btfss	18,3	;volatile
 16606     004A  284C               	goto	u767_21
 16607     004B  284D               	goto	u767_20
 16608     004C                     u767_21:
 16609     004C  2856               	goto	i1l231
 16610     004D                     u767_20:
 16611     004D                     i1l6852:
 16612     004D  0020               	movlb	0	; select bank0
 16613     004E  1D92               	btfss	18,3	;volatile
 16614     004F  2851               	goto	u768_21
 16615     0050  2852               	goto	u768_20
 16616     0051                     u768_21:
 16617     0051  2856               	goto	i1l231
 16618     0052                     u768_20:
 16619     0052                     i1l6854:
 16620                           
 16621                           ;mcc_generated_files/system/src/interrupt.c: 81:         {;mcc_generated_files/system/sr
      +                          c/interrupt.c: 82:             I2C2_ISR();
 16622     0052  319E  2619  3180   	fcall	_I2C2_ISR
 16623                           
 16624                           ;mcc_generated_files/system/src/interrupt.c: 83:         }
 16625     0055  2872               	goto	i1l238
 16626     0056                     i1l231:	
 16627                           ;mcc_generated_files/system/src/interrupt.c: 84:         else if(PIE1bits.TMR2IE == 1 &&
      +                           PIR1bits.TMR2IF == 1)
 16628                           
 16629     0056  0021               	movlb	1	; select bank1
 16630     0057  1C91               	btfss	17,1	;volatile
 16631     0058  285A               	goto	u769_21
 16632     0059  285B               	goto	u769_20
 16633     005A                     u769_21:
 16634     005A  2864               	goto	i1l233
 16635     005B                     u769_20:
 16636     005B                     i1l6856:
 16637     005B  0020               	movlb	0	; select bank0
 16638     005C  1C91               	btfss	17,1	;volatile
 16639     005D  285F               	goto	u770_21
 16640     005E  2860               	goto	u770_20
 16641     005F                     u770_21:
 16642     005F  2864               	goto	i1l233
 16643     0060                     u770_20:
 16644     0060                     i1l6858:
 16645                           
 16646                           ;mcc_generated_files/system/src/interrupt.c: 85:         {;mcc_generated_files/system/sr
      +                          c/interrupt.c: 86:             TMR2_ISR();
 16647     0060  319F  2726  3180   	fcall	_TMR2_ISR
 16648                           
 16649                           ;mcc_generated_files/system/src/interrupt.c: 87:         }
 16650     0063  2872               	goto	i1l238
 16651     0064                     i1l233:	
 16652                           ;mcc_generated_files/system/src/interrupt.c: 88:         else if(PIE1bits.ADIE == 1 && P
      +                          IR1bits.ADIF == 1)
 16653                           
 16654     0064  0021               	movlb	1	; select bank1
 16655     0065  1F11               	btfss	17,6	;volatile
 16656     0066  2868               	goto	u771_21
 16657     0067  2869               	goto	u771_20
 16658     0068                     u771_21:
 16659     0068  2872               	goto	i1l232
 16660     0069                     u771_20:
 16661     0069                     i1l6860:
 16662     0069  0020               	movlb	0	; select bank0
 16663     006A  1F11               	btfss	17,6	;volatile
 16664     006B  286D               	goto	u772_21
 16665     006C  286E               	goto	u772_20
 16666     006D                     u772_21:
 16667     006D  2872               	goto	i1l232
 16668     006E                     u772_20:
 16669     006E                     i1l6862:
 16670                           
 16671                           ;mcc_generated_files/system/src/interrupt.c: 89:         {;mcc_generated_files/system/sr
      +                          c/interrupt.c: 90:             ADC_ISR();
 16672     006E  319F  2717  3180   	fcall	_ADC_ISR
 16673                           
 16674                           ;mcc_generated_files/system/src/interrupt.c: 91:         }
 16675     0071  2872               	goto	i1l238
 16676     0072                     i1l232:
 16677     0072                     i1l238:
 16678     0072  107E               	bcf	int$flags,0	;clear compiler interrupt flag (level 1)
 16679     0073  0009               	retfie
 16680     0074                     __end_of_INTERRUPT_InterruptManager:
 16681                           
 16682                           	psect	text57
 16683     1F35                     __ptext57:	
 16684 ;; *************** function _TMR4_ISR *****************
 16685 ;; Defined at:
 16686 ;;		line 114 in file "mcc_generated_files/timer/src/tmr4.c"
 16687 ;; Parameters:    Size  Location     Type
 16688 ;;		None
 16689 ;; Auto vars:     Size  Location     Type
 16690 ;;		None
 16691 ;; Return value:  Size  Location     Type
 16692 ;;                  1    wreg      void 
 16693 ;; Registers used:
 16694 ;;		wreg, status,2, status,0, pclath, cstack
 16695 ;; Tracked objects:
 16696 ;;		On entry : 0/0
 16697 ;;		On exit  : 0/0
 16698 ;;		Unchanged: 0/0
 16699 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 16700 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16701 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16702 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16703 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16704 ;;Total ram usage:        0 bytes
 16705 ;; Hardware stack levels used: 1
 16706 ;; Hardware stack levels required when called: 3
 16707 ;; This function calls:
 16708 ;;		NULL
 16709 ;;		_TMR4_DefaultPeriodMatchCallback
 16710 ;;		_controller
 16711 ;; This function is called by:
 16712 ;;		_INTERRUPT_InterruptManager
 16713 ;; This function uses a non-reentrant model
 16714 ;;
 16715                           
 16716     1F35                     _TMR4_ISR:	
 16717                           ;psect for function _TMR4_ISR
 16718                           
 16719     1F35                     i1l6640:	
 16720                           ;incstack = 0
 16721                           ; Regs used in _TMR4_ISR: [wreg+status,2+status,0+pclath+cstack]
 16722                           
 16723                           
 16724                           ;mcc_generated_files/timer/src/tmr4.c: 117:     if(((void*)0) != TMR4_PeriodMatchCallbac
      +                          k)
 16725     1F35  0022               	movlb	2	; select bank2
 16726     1F36  085E               	movf	_TMR4_PeriodMatchCallback^(0+256),w
 16727     1F37  045F               	iorwf	(_TMR4_PeriodMatchCallback+1)^(0+256),w
 16728     1F38  1903               	btfsc	3,2
 16729     1F39  2F3B               	goto	u736_21
 16730     1F3A  2F3C               	goto	u736_20
 16731     1F3B                     u736_21:
 16732     1F3B  2F41               	goto	i1l6644
 16733     1F3C                     u736_20:
 16734     1F3C                     i1l6642:
 16735                           
 16736                           ;mcc_generated_files/timer/src/tmr4.c: 118:     {;mcc_generated_files/timer/src/tmr4.c: 
      +                          119:         TMR4_PeriodMatchCallback();
 16737     1F3C  085F               	movf	(_TMR4_PeriodMatchCallback+1)^(0+256),w
 16738     1F3D  008A               	movwf	10
 16739     1F3E  085E               	movf	_TMR4_PeriodMatchCallback^(0+256),w
 16740     1F3F  000A               	callw
 16741     1F40  319F               	pagesel	$
 16742     1F41                     i1l6644:
 16743                           
 16744                           ;mcc_generated_files/timer/src/tmr4.c: 121:     PIR2bits.TMR4IF = 0;
 16745     1F41  0020               	movlb	0	; select bank0
 16746     1F42  1092               	bcf	18,1	;volatile
 16747     1F43                     i1l485:
 16748     1F43  0008               	return
 16749     1F44                     __end_of_TMR4_ISR:
 16750                           
 16751                           	psect	text58
 16752     1DE3                     __ptext58:	
 16753 ;; *************** function _TMR4_DefaultPeriodMatchCallback *****************
 16754 ;; Defined at:
 16755 ;;		line 129 in file "mcc_generated_files/timer/src/tmr4.c"
 16756 ;; Parameters:    Size  Location     Type
 16757 ;;		None
 16758 ;; Auto vars:     Size  Location     Type
 16759 ;;		None
 16760 ;; Return value:  Size  Location     Type
 16761 ;;                  1    wreg      void 
 16762 ;; Registers used:
 16763 ;;		None
 16764 ;; Tracked objects:
 16765 ;;		On entry : 0/0
 16766 ;;		On exit  : 0/0
 16767 ;;		Unchanged: 0/0
 16768 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 16769 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16770 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16771 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16772 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16773 ;;Total ram usage:        0 bytes
 16774 ;; Hardware stack levels used: 1
 16775 ;; This function calls:
 16776 ;;		Nothing
 16777 ;; This function is called by:
 16778 ;;		_TMR4_Initialize
 16779 ;;		_TMR4_ISR
 16780 ;; This function uses a non-reentrant model
 16781 ;;
 16782                           
 16783     1DE3                     _TMR4_DefaultPeriodMatchCallback:	
 16784                           ;psect for function _TMR4_DefaultPeriodMatchCallback
 16785                           
 16786     1DE3                     i1l491:	
 16787                           ;incstack = 0
 16788                           ; Regs used in _TMR4_DefaultPeriodMatchCallback: []
 16789                           
 16790     1DE3  0008               	return
 16791     1DE4                     __end_of_TMR4_DefaultPeriodMatchCallback:
 16792                           
 16793                           	psect	text59
 16794     09D8                     __ptext59:	
 16795 ;; *************** function _controller *****************
 16796 ;; Defined at:
 16797 ;;		line 13 in file "controller.c"
 16798 ;; Parameters:    Size  Location     Type
 16799 ;;		None
 16800 ;; Auto vars:     Size  Location     Type
 16801 ;;  error           2   51[BANK0 ] short 
 16802 ;;  I               2   49[BANK0 ] short 
 16803 ;;  P               2   47[BANK0 ] short 
 16804 ;; Return value:  Size  Location     Type
 16805 ;;                  1    wreg      void 
 16806 ;; Registers used:
 16807 ;;		wreg, status,2, status,0, pclath, cstack
 16808 ;; Tracked objects:
 16809 ;;		On entry : 0/0
 16810 ;;		On exit  : 0/0
 16811 ;;		Unchanged: 0/0
 16812 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 16813 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16814 ;;      Locals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16815 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16816 ;;      Totals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16817 ;;Total ram usage:        7 bytes
 16818 ;; Hardware stack levels used: 1
 16819 ;; Hardware stack levels required when called: 2
 16820 ;; This function calls:
 16821 ;;		___fltol
 16822 ;;		_getHoogtesensor
 16823 ;;		_pwm_fan_LoadDutyValue
 16824 ;;		i1___fladd
 16825 ;;		i1___flmul
 16826 ;;		i1___xxtofl
 16827 ;; This function is called by:
 16828 ;;		_main
 16829 ;;		_TMR4_ISR
 16830 ;; This function uses a non-reentrant model
 16831 ;;
 16832                           
 16833     09D8                     _controller:	
 16834                           ;psect for function _controller
 16835                           
 16836     09D8                     i1l6556:	
 16837                           ;incstack = 0
 16838                           ; Regs used in _controller: [wreg+status,2+status,0+pclath+cstack]
 16839                           
 16840                           
 16841                           ;controller.c: 14:     hoogte_bal = getHoogtesensor();
 16842     09D8  319E  2647  3189   	fcall	_getHoogtesensor
 16843     09DB  0871               	movf	?_getHoogtesensor+1,w
 16844     09DC  0022               	movlb	2	; select bank2
 16845     09DD  00CB               	movwf	(_hoogte_bal+1)^(0+256)
 16846     09DE  0870               	movf	?_getHoogtesensor,w
 16847     09DF  00CA               	movwf	_hoogte_bal^(0+256)
 16848     09E0                     i1l6558:
 16849                           
 16850                           ;controller.c: 18:     int16_t error = setpoint - hoogte_bal;
 16851     09E0  084A               	movf	_hoogte_bal^(0+256),w
 16852     09E1  026E               	subwf	_setpoint^(0+256),w
 16853     09E2  0020               	movlb	0	; select bank0
 16854     09E3  00D3               	movwf	controller@error
 16855     09E4  0022               	movlb	2	; select bank2
 16856     09E5  084B               	movf	(_hoogte_bal+1)^(0+256),w
 16857     09E6  3B6F               	subwfb	(_setpoint+1)^(0+256),w
 16858     09E7  0020               	movlb	0	; select bank0
 16859     09E8  00D4               	movwf	controller@error+1
 16860     09E9                     i1l6560:
 16861                           
 16862                           ;controller.c: 20:     integraal += error * 0.0005;
 16863     09E9  0853               	movf	controller@error,w
 16864     09EA  00F0               	movwf	i1___xxtofl@val
 16865     09EB  0854               	movf	controller@error+1,w
 16866     09EC  00F1               	movwf	i1___xxtofl@val+1
 16867     09ED  0D89               	rlf	9,f
 16868     09EE  3B89               	subwfb	9,f
 16869     09EF  0989               	comf	9,f
 16870     09F0  00F2               	movwf	i1___xxtofl@val+2
 16871     09F1  00F3               	movwf	i1___xxtofl@val+3
 16872     09F2  3001               	movlw	1
 16873     09F3  3197  275C  3189   	fcall	i1___xxtofl
 16874     09F6  0873               	movf	?i1___xxtofl+3,w
 16875     09F7  0020               	movlb	0	; select bank0
 16876     09F8  00A7               	movwf	i1___flmul@a+3
 16877     09F9  0872               	movf	?i1___xxtofl+2,w
 16878     09FA  00A6               	movwf	i1___flmul@a+2
 16879     09FB  0871               	movf	?i1___xxtofl+1,w
 16880     09FC  00A5               	movwf	i1___flmul@a+1
 16881     09FD  0870               	movf	?i1___xxtofl,w
 16882     09FE  00A4               	movwf	i1___flmul@a
 16883     09FF  303A               	movlw	58
 16884     0A00  00A3               	movwf	i1___flmul@b+3
 16885     0A01  3003               	movlw	3
 16886     0A02  00A2               	movwf	i1___flmul@b+2
 16887     0A03  3012               	movlw	18
 16888     0A04  00A1               	movwf	i1___flmul@b+1
 16889     0A05  306F               	movlw	111
 16890     0A06  00A0               	movwf	i1___flmul@b
 16891     0A07  3182  22E4  3189   	fcall	i1___flmul
 16892     0A0A  0020               	movlb	0	; select bank0
 16893     0A0B  0823               	movf	?i1___flmul+3,w
 16894     0A0C  00BD               	movwf	i1___fladd@b+3
 16895     0A0D  0822               	movf	?i1___flmul+2,w
 16896     0A0E  00BC               	movwf	i1___fladd@b+2
 16897     0A0F  0821               	movf	?i1___flmul+1,w
 16898     0A10  00BB               	movwf	i1___fladd@b+1
 16899     0A11  0820               	movf	?i1___flmul,w
 16900     0A12  00BA               	movwf	i1___fladd@b
 16901     0A13  0022               	movlb	2	; select bank2
 16902     0A14  0843               	movf	(_integraal+3)^(0+256),w
 16903     0A15  0020               	movlb	0	; select bank0
 16904     0A16  00C1               	movwf	i1___fladd@a+3
 16905     0A17  0022               	movlb	2	; select bank2
 16906     0A18  0842               	movf	(_integraal+2)^(0+256),w
 16907     0A19  0020               	movlb	0	; select bank0
 16908     0A1A  00C0               	movwf	i1___fladd@a+2
 16909     0A1B  0022               	movlb	2	; select bank2
 16910     0A1C  0841               	movf	(_integraal+1)^(0+256),w
 16911     0A1D  0020               	movlb	0	; select bank0
 16912     0A1E  00BF               	movwf	i1___fladd@a+1
 16913     0A1F  0022               	movlb	2	; select bank2
 16914     0A20  0840               	movf	_integraal^(0+256),w
 16915     0A21  0020               	movlb	0	; select bank0
 16916     0A22  00BE               	movwf	i1___fladd@a
 16917     0A23  318D  25F4  3189   	fcall	i1___fladd
 16918     0A26  0020               	movlb	0	; select bank0
 16919     0A27  083D               	movf	?i1___fladd+3,w
 16920     0A28  0022               	movlb	2	; select bank2
 16921     0A29  00C3               	movwf	(_integraal+3)^(0+256)
 16922     0A2A  0020               	movlb	0	; select bank0
 16923     0A2B  083C               	movf	?i1___fladd+2,w
 16924     0A2C  0022               	movlb	2	; select bank2
 16925     0A2D  00C2               	movwf	(_integraal+2)^(0+256)
 16926     0A2E  0020               	movlb	0	; select bank0
 16927     0A2F  083B               	movf	?i1___fladd+1,w
 16928     0A30  0022               	movlb	2	; select bank2
 16929     0A31  00C1               	movwf	(_integraal+1)^(0+256)
 16930     0A32  0020               	movlb	0	; select bank0
 16931     0A33  083A               	movf	?i1___fladd,w
 16932     0A34  0022               	movlb	2	; select bank2
 16933     0A35  00C0               	movwf	_integraal^(0+256)
 16934     0A36                     i1l6562:
 16935                           
 16936                           ;controller.c: 22:     int16_t P = kp * error;
 16937     0A36  0020               	movlb	0	; select bank0
 16938     0A37  0853               	movf	controller@error,w
 16939     0A38  00F0               	movwf	i1___xxtofl@val
 16940     0A39  0854               	movf	controller@error+1,w
 16941     0A3A  00F1               	movwf	i1___xxtofl@val+1
 16942     0A3B  0D89               	rlf	9,f
 16943     0A3C  3B89               	subwfb	9,f
 16944     0A3D  0989               	comf	9,f
 16945     0A3E  00F2               	movwf	i1___xxtofl@val+2
 16946     0A3F  00F3               	movwf	i1___xxtofl@val+3
 16947     0A40  3001               	movlw	1
 16948     0A41  3197  275C  3189   	fcall	i1___xxtofl
 16949     0A44  0873               	movf	?i1___xxtofl+3,w
 16950     0A45  0020               	movlb	0	; select bank0
 16951     0A46  00A7               	movwf	i1___flmul@a+3
 16952     0A47  0872               	movf	?i1___xxtofl+2,w
 16953     0A48  00A6               	movwf	i1___flmul@a+2
 16954     0A49  0871               	movf	?i1___xxtofl+1,w
 16955     0A4A  00A5               	movwf	i1___flmul@a+1
 16956     0A4B  0870               	movf	?i1___xxtofl,w
 16957     0A4C  00A4               	movwf	i1___flmul@a
 16958     0A4D  0022               	movlb	2	; select bank2
 16959     0A4E  086D               	movf	(_kp+3)^(0+256),w
 16960     0A4F  0020               	movlb	0	; select bank0
 16961     0A50  00A3               	movwf	i1___flmul@b+3
 16962     0A51  0022               	movlb	2	; select bank2
 16963     0A52  086C               	movf	(_kp+2)^(0+256),w
 16964     0A53  0020               	movlb	0	; select bank0
 16965     0A54  00A2               	movwf	i1___flmul@b+2
 16966     0A55  0022               	movlb	2	; select bank2
 16967     0A56  086B               	movf	(_kp+1)^(0+256),w
 16968     0A57  0020               	movlb	0	; select bank0
 16969     0A58  00A1               	movwf	i1___flmul@b+1
 16970     0A59  0022               	movlb	2	; select bank2
 16971     0A5A  086A               	movf	_kp^(0+256),w
 16972     0A5B  0020               	movlb	0	; select bank0
 16973     0A5C  00A0               	movwf	i1___flmul@b
 16974     0A5D  3182  22E4  3189   	fcall	i1___flmul
 16975     0A60  0020               	movlb	0	; select bank0
 16976     0A61  0823               	movf	?i1___flmul+3,w
 16977     0A62  00BD               	movwf	___fltol@f1+3
 16978     0A63  0822               	movf	?i1___flmul+2,w
 16979     0A64  00BC               	movwf	___fltol@f1+2
 16980     0A65  0821               	movf	?i1___flmul+1,w
 16981     0A66  00BB               	movwf	___fltol@f1+1
 16982     0A67  0820               	movf	?i1___flmul,w
 16983     0A68  00BA               	movwf	___fltol@f1
 16984     0A69  3195  25DE  3189   	fcall	___fltol
 16985     0A6C  0020               	movlb	0	; select bank0
 16986     0A6D  083B               	movf	?___fltol+1,w
 16987     0A6E  00D0               	movwf	controller@P+1
 16988     0A6F  083A               	movf	?___fltol,w
 16989     0A70  00CF               	movwf	controller@P
 16990     0A71                     i1l6564:
 16991                           
 16992                           ;controller.c: 23:     int16_t I = ki * integraal;
 16993     0A71  0022               	movlb	2	; select bank2
 16994     0A72  0869               	movf	(_ki+3)^(0+256),w
 16995     0A73  0020               	movlb	0	; select bank0
 16996     0A74  00A7               	movwf	i1___flmul@a+3
 16997     0A75  0022               	movlb	2	; select bank2
 16998     0A76  0868               	movf	(_ki+2)^(0+256),w
 16999     0A77  0020               	movlb	0	; select bank0
 17000     0A78  00A6               	movwf	i1___flmul@a+2
 17001     0A79  0022               	movlb	2	; select bank2
 17002     0A7A  0867               	movf	(_ki+1)^(0+256),w
 17003     0A7B  0020               	movlb	0	; select bank0
 17004     0A7C  00A5               	movwf	i1___flmul@a+1
 17005     0A7D  0022               	movlb	2	; select bank2
 17006     0A7E  0866               	movf	_ki^(0+256),w
 17007     0A7F  0020               	movlb	0	; select bank0
 17008     0A80  00A4               	movwf	i1___flmul@a
 17009     0A81  0022               	movlb	2	; select bank2
 17010     0A82  0843               	movf	(_integraal+3)^(0+256),w
 17011     0A83  0020               	movlb	0	; select bank0
 17012     0A84  00A3               	movwf	i1___flmul@b+3
 17013     0A85  0022               	movlb	2	; select bank2
 17014     0A86  0842               	movf	(_integraal+2)^(0+256),w
 17015     0A87  0020               	movlb	0	; select bank0
 17016     0A88  00A2               	movwf	i1___flmul@b+2
 17017     0A89  0022               	movlb	2	; select bank2
 17018     0A8A  0841               	movf	(_integraal+1)^(0+256),w
 17019     0A8B  0020               	movlb	0	; select bank0
 17020     0A8C  00A1               	movwf	i1___flmul@b+1
 17021     0A8D  0022               	movlb	2	; select bank2
 17022     0A8E  0840               	movf	_integraal^(0+256),w
 17023     0A8F  0020               	movlb	0	; select bank0
 17024     0A90  00A0               	movwf	i1___flmul@b
 17025     0A91  3182  22E4  3189   	fcall	i1___flmul
 17026     0A94  0020               	movlb	0	; select bank0
 17027     0A95  0823               	movf	?i1___flmul+3,w
 17028     0A96  00BD               	movwf	___fltol@f1+3
 17029     0A97  0822               	movf	?i1___flmul+2,w
 17030     0A98  00BC               	movwf	___fltol@f1+2
 17031     0A99  0821               	movf	?i1___flmul+1,w
 17032     0A9A  00BB               	movwf	___fltol@f1+1
 17033     0A9B  0820               	movf	?i1___flmul,w
 17034     0A9C  00BA               	movwf	___fltol@f1
 17035     0A9D  3195  25DE  3189   	fcall	___fltol
 17036     0AA0  0020               	movlb	0	; select bank0
 17037     0AA1  083B               	movf	?___fltol+1,w
 17038     0AA2  00D2               	movwf	controller@I+1
 17039     0AA3  083A               	movf	?___fltol,w
 17040     0AA4  00D1               	movwf	controller@I
 17041     0AA5                     i1l6566:
 17042                           
 17043                           ;controller.c: 25:     dutycycle = P + I;
 17044     0AA5  0851               	movf	controller@I,w
 17045     0AA6  074F               	addwf	controller@P,w
 17046     0AA7  00E3               	movwf	_dutycycle
 17047     0AA8  0852               	movf	controller@I+1,w
 17048     0AA9  3D50               	addwfc	controller@P+1,w
 17049     0AAA  00E4               	movwf	_dutycycle+1
 17050     0AAB                     i1l6568:
 17051                           
 17052                           ;controller.c: 27:     if (dutycycle > 1023 && error > 0) {
 17053     0AAB  3004               	movlw	4
 17054     0AAC  0264               	subwf	_dutycycle+1,w
 17055     0AAD  3000               	movlw	0
 17056     0AAE  1903               	skipnz
 17057     0AAF  0263               	subwf	_dutycycle,w
 17058     0AB0  1C03               	skipc
 17059     0AB1  2AB3               	goto	u725_21
 17060     0AB2  2AB4               	goto	u725_20
 17061     0AB3                     u725_21:
 17062     0AB3  2AC7               	goto	i1l6574
 17063     0AB4                     u725_20:
 17064     0AB4                     i1l6570:
 17065     0AB4  0854               	movf	controller@error+1,w
 17066     0AB5  3A80               	xorlw	128
 17067     0AB6  00CE               	movwf	??_controller
 17068     0AB7  3080               	movlw	128
 17069     0AB8  024E               	subwf	??_controller,w
 17070     0AB9  1D03               	skipz
 17071     0ABA  2ABD               	goto	u726_25
 17072     0ABB  3001               	movlw	1
 17073     0ABC  0253               	subwf	controller@error,w
 17074     0ABD                     u726_25:
 17075     0ABD  1C03               	skipc
 17076     0ABE  2AC0               	goto	u726_21
 17077     0ABF  2AC1               	goto	u726_20
 17078     0AC0                     u726_21:
 17079     0AC0  2AC7               	goto	i1l6574
 17080     0AC1                     u726_20:
 17081     0AC1                     i1l6572:
 17082                           
 17083                           ;controller.c: 28:         dutycycle = 1023;
 17084     0AC1  30FF               	movlw	255
 17085     0AC2  0020               	movlb	0	; select bank0
 17086     0AC3  00E3               	movwf	_dutycycle
 17087     0AC4  3003               	movlw	3
 17088     0AC5  00E4               	movwf	_dutycycle+1
 17089                           
 17090                           ;controller.c: 29:     } else if (dutycycle > 1023 && error < 0) {
 17091     0AC6  2AD8               	goto	i1l6582
 17092     0AC7                     i1l6574:
 17093     0AC7  3004               	movlw	4
 17094     0AC8  0020               	movlb	0	; select bank0
 17095     0AC9  0264               	subwf	_dutycycle+1,w
 17096     0ACA  3000               	movlw	0
 17097     0ACB  1903               	skipnz
 17098     0ACC  0263               	subwf	_dutycycle,w
 17099     0ACD  1C03               	skipc
 17100     0ACE  2AD0               	goto	u727_21
 17101     0ACF  2AD1               	goto	u727_20
 17102     0AD0                     u727_21:
 17103     0AD0  2AD8               	goto	i1l936
 17104     0AD1                     u727_20:
 17105     0AD1                     i1l6576:
 17106     0AD1  1FD4               	btfss	controller@error+1,7
 17107     0AD2  2AD4               	goto	u728_21
 17108     0AD3  2AD5               	goto	u728_20
 17109     0AD4                     u728_21:
 17110     0AD4  2AD8               	goto	i1l936
 17111     0AD5                     u728_20:
 17112     0AD5                     i1l6578:
 17113                           
 17114                           ;controller.c: 30:         dutycycle = 0;
 17115     0AD5  01E3               	clrf	_dutycycle
 17116     0AD6  01E4               	clrf	_dutycycle+1
 17117                           
 17118                           ;controller.c: 31:     } else if (dutycycle < 0) {
 17119     0AD7  2AD8               	goto	i1l6582
 17120     0AD8                     i1l936:
 17121     0AD8                     i1l6582:
 17122                           
 17123                           ;controller.c: 35:     pwm_fan_LoadDutyValue(dutycycle);
 17124     0AD8  0864               	movf	_dutycycle+1,w
 17125     0AD9  00F1               	movwf	pwm_fan_LoadDutyValue@dutyValue+1
 17126     0ADA  0863               	movf	_dutycycle,w
 17127     0ADB  00F0               	movwf	pwm_fan_LoadDutyValue@dutyValue
 17128     0ADC  319F  27EB  3189   	fcall	_pwm_fan_LoadDutyValue
 17129     0ADF                     i1l938:
 17130     0ADF  0008               	return
 17131     0AE0                     __end_of_controller:
 17132                           
 17133                           	psect	text60
 17134     175C                     __ptext60:	
 17135 ;; *************** function i1___xxtofl *****************
 17136 ;; Defined at:
 17137 ;;		line 10 in file "C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\xxtofl.c"
 17138 ;; Parameters:    Size  Location     Type
 17139 ;;  sign            1    wreg     unsigned char 
 17140 ;;  val             4    0[COMMON] long 
 17141 ;; Auto vars:     Size  Location     Type
 17142 ;;  sign            1    8[COMMON] unsigned char 
 17143 ;;  arg             4   10[COMMON] unsigned long 
 17144 ;;  exp             1    9[COMMON] unsigned char 
 17145 ;; Return value:  Size  Location     Type
 17146 ;;                  4    0[COMMON] unsigned char 
 17147 ;; Registers used:
 17148 ;;		wreg, status,2, status,0
 17149 ;; Tracked objects:
 17150 ;;		On entry : 0/0
 17151 ;;		On exit  : 0/0
 17152 ;;		Unchanged: 0/0
 17153 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 17154 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17155 ;;      Locals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17156 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17157 ;;      Totals:        14       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17158 ;;Total ram usage:       14 bytes
 17159 ;; Hardware stack levels used: 1
 17160 ;; This function calls:
 17161 ;;		Nothing
 17162 ;; This function is called by:
 17163 ;;		_controller
 17164 ;; This function uses a non-reentrant model
 17165 ;;
 17166                           
 17167     175C                     i1___xxtofl:	
 17168                           ;psect for function i1___xxtofl
 17169                           
 17170                           
 17171                           ;incstack = 0
 17172                           ; Regs used in i1___xxtofl: [wreg+status,2+status,0]
 17173                           ;i1___xxtofl@sign stored from wreg
 17174     175C  00F8               	movwf	i1___xxtofl@sign
 17175     175D                     i1l6222:
 17176     175D  0878               	movf	i1___xxtofl@sign,w
 17177     175E  1903               	btfsc	3,2
 17178     175F  2F61               	goto	u695_21
 17179     1760  2F62               	goto	u695_20
 17180     1761                     u695_21:
 17181     1761  2F76               	goto	i1l6228
 17182     1762                     u695_20:
 17183     1762                     i1l6224:
 17184     1762  1FF3               	btfss	i1___xxtofl@val+3,7
 17185     1763  2F65               	goto	u696_21
 17186     1764  2F66               	goto	u696_20
 17187     1765                     u696_21:
 17188     1765  2F76               	goto	i1l6228
 17189     1766                     u696_20:
 17190     1766                     i1l6226:
 17191     1766  0970               	comf	i1___xxtofl@val,w
 17192     1767  00FA               	movwf	i1___xxtofl@arg
 17193     1768  0971               	comf	i1___xxtofl@val+1,w
 17194     1769  00FB               	movwf	i1___xxtofl@arg+1
 17195     176A  0972               	comf	i1___xxtofl@val+2,w
 17196     176B  00FC               	movwf	i1___xxtofl@arg+2
 17197     176C  0973               	comf	i1___xxtofl@val+3,w
 17198     176D  00FD               	movwf	i1___xxtofl@arg+3
 17199     176E  0AFA               	incf	i1___xxtofl@arg,f
 17200     176F  1903               	skipnz
 17201     1770  0AFB               	incf	i1___xxtofl@arg+1,f
 17202     1771  1903               	skipnz
 17203     1772  0AFC               	incf	i1___xxtofl@arg+2,f
 17204     1773  1903               	skipnz
 17205     1774  0AFD               	incf	i1___xxtofl@arg+3,f
 17206     1775  2F7E               	goto	i1l1879
 17207     1776                     i1l6228:
 17208     1776  0873               	movf	i1___xxtofl@val+3,w
 17209     1777  00FD               	movwf	i1___xxtofl@arg+3
 17210     1778  0872               	movf	i1___xxtofl@val+2,w
 17211     1779  00FC               	movwf	i1___xxtofl@arg+2
 17212     177A  0871               	movf	i1___xxtofl@val+1,w
 17213     177B  00FB               	movwf	i1___xxtofl@arg+1
 17214     177C  0870               	movf	i1___xxtofl@val,w
 17215     177D  00FA               	movwf	i1___xxtofl@arg
 17216     177E                     i1l1879:
 17217     177E  0873               	movf	i1___xxtofl@val+3,w
 17218     177F  0472               	iorwf	i1___xxtofl@val+2,w
 17219     1780  0471               	iorwf	i1___xxtofl@val+1,w
 17220     1781  0470               	iorwf	i1___xxtofl@val,w
 17221     1782  1D03               	skipz
 17222     1783  2F85               	goto	u697_21
 17223     1784  2F86               	goto	u697_20
 17224     1785                     u697_21:
 17225     1785  2F8F               	goto	i1l1880
 17226     1786                     u697_20:
 17227     1786                     i1l6230:
 17228     1786  3000               	movlw	0
 17229     1787  00F3               	movwf	?i1___xxtofl+3
 17230     1788  3000               	movlw	0
 17231     1789  00F2               	movwf	?i1___xxtofl+2
 17232     178A  3000               	movlw	0
 17233     178B  00F1               	movwf	?i1___xxtofl+1
 17234     178C  3000               	movlw	0
 17235     178D  00F0               	movwf	?i1___xxtofl
 17236     178E  2FFF               	goto	i1l1881
 17237     178F                     i1l1880:
 17238     178F  3096               	movlw	150
 17239     1790  00F9               	movwf	i1___xxtofl@exp
 17240     1791  2F9B               	goto	i1l6236
 17241     1792                     i1l6234:
 17242     1792  3001               	movlw	1
 17243     1793  07F9               	addwf	i1___xxtofl@exp,f
 17244     1794  3001               	movlw	1
 17245     1795                     u698_25:
 17246     1795  36FD               	lsrf	i1___xxtofl@arg+3,f
 17247     1796  0CFC               	rrf	i1___xxtofl@arg+2,f
 17248     1797  0CFB               	rrf	i1___xxtofl@arg+1,f
 17249     1798  0CFA               	rrf	i1___xxtofl@arg,f
 17250     1799  0B89               	decfsz	9,f
 17251     179A  2F95               	goto	u698_25
 17252     179B                     i1l6236:
 17253     179B  30FE               	movlw	254
 17254     179C  057D               	andwf	i1___xxtofl@arg+3,w
 17255     179D  1D03               	btfss	3,2
 17256     179E  2FA0               	goto	u699_21
 17257     179F  2FA1               	goto	u699_20
 17258     17A0                     u699_21:
 17259     17A0  2F92               	goto	i1l6234
 17260     17A1                     u699_20:
 17261     17A1  2FB1               	goto	i1l6240
 17262     17A2                     i1l6238:
 17263     17A2  3001               	movlw	1
 17264     17A3  07F9               	addwf	i1___xxtofl@exp,f
 17265     17A4  3001               	movlw	1
 17266     17A5  07FA               	addwf	i1___xxtofl@arg,f
 17267     17A6  3000               	movlw	0
 17268     17A7  3DFB               	addwfc	i1___xxtofl@arg+1,f
 17269     17A8  3DFC               	addwfc	i1___xxtofl@arg+2,f
 17270     17A9  3DFD               	addwfc	i1___xxtofl@arg+3,f
 17271     17AA  3001               	movlw	1
 17272     17AB                     u700_25:
 17273     17AB  36FD               	lsrf	i1___xxtofl@arg+3,f
 17274     17AC  0CFC               	rrf	i1___xxtofl@arg+2,f
 17275     17AD  0CFB               	rrf	i1___xxtofl@arg+1,f
 17276     17AE  0CFA               	rrf	i1___xxtofl@arg,f
 17277     17AF  0B89               	decfsz	9,f
 17278     17B0  2FAB               	goto	u700_25
 17279     17B1                     i1l6240:
 17280     17B1  30FF               	movlw	255
 17281     17B2  057D               	andwf	i1___xxtofl@arg+3,w
 17282     17B3  1D03               	btfss	3,2
 17283     17B4  2FB6               	goto	u701_21
 17284     17B5  2FB7               	goto	u701_20
 17285     17B6                     u701_21:
 17286     17B6  2FA2               	goto	i1l6238
 17287     17B7                     u701_20:
 17288     17B7  2FC1               	goto	i1l6244
 17289     17B8                     i1l6242:
 17290     17B8  3001               	movlw	1
 17291     17B9  02F9               	subwf	i1___xxtofl@exp,f
 17292     17BA  3001               	movlw	1
 17293     17BB                     u702_25:
 17294     17BB  35FA               	lslf	i1___xxtofl@arg,f
 17295     17BC  0DFB               	rlf	i1___xxtofl@arg+1,f
 17296     17BD  0DFC               	rlf	i1___xxtofl@arg+2,f
 17297     17BE  0DFD               	rlf	i1___xxtofl@arg+3,f
 17298     17BF  0B89               	decfsz	9,f
 17299     17C0  2FBB               	goto	u702_25
 17300     17C1                     i1l6244:
 17301     17C1  1BFC               	btfsc	i1___xxtofl@arg+2,7
 17302     17C2  2FC4               	goto	u703_21
 17303     17C3  2FC5               	goto	u703_20
 17304     17C4                     u703_21:
 17305     17C4  2FCB               	goto	i1l1892
 17306     17C5                     u703_20:
 17307     17C5                     i1l6246:
 17308     17C5  3002               	movlw	2
 17309     17C6  0279               	subwf	i1___xxtofl@exp,w
 17310     17C7  1803               	skipnc
 17311     17C8  2FCA               	goto	u704_21
 17312     17C9  2FCB               	goto	u704_20
 17313     17CA                     u704_21:
 17314     17CA  2FB8               	goto	i1l6242
 17315     17CB                     u704_20:
 17316     17CB                     i1l1892:
 17317     17CB  1879               	btfsc	i1___xxtofl@exp,0
 17318     17CC  2FCE               	goto	u705_21
 17319     17CD  2FCF               	goto	u705_20
 17320     17CE                     u705_21:
 17321     17CE  2FD7               	goto	i1l1893
 17322     17CF                     u705_20:
 17323     17CF                     i1l6248:
 17324     17CF  30FF               	movlw	255
 17325     17D0  05FA               	andwf	i1___xxtofl@arg,f
 17326     17D1  30FF               	movlw	255
 17327     17D2  05FB               	andwf	i1___xxtofl@arg+1,f
 17328     17D3  307F               	movlw	127
 17329     17D4  05FC               	andwf	i1___xxtofl@arg+2,f
 17330     17D5  30FF               	movlw	255
 17331     17D6  05FD               	andwf	i1___xxtofl@arg+3,f
 17332     17D7                     i1l1893:
 17333     17D7  1003               	clrc
 17334     17D8  0CF9               	rrf	i1___xxtofl@exp,f
 17335     17D9                     i1l6250:
 17336     17D9  0879               	movf	i1___xxtofl@exp,w
 17337     17DA  00F4               	movwf	??i1___xxtofl
 17338     17DB  01F5               	clrf	??i1___xxtofl+1
 17339     17DC  01F6               	clrf	??i1___xxtofl+2
 17340     17DD  01F7               	clrf	??i1___xxtofl+3
 17341     17DE  3018               	movlw	24
 17342     17DF                     u706_25:
 17343     17DF  35F4               	lslf	??i1___xxtofl,f
 17344     17E0  0DF5               	rlf	??i1___xxtofl+1,f
 17345     17E1  0DF6               	rlf	??i1___xxtofl+2,f
 17346     17E2  0DF7               	rlf	??i1___xxtofl+3,f
 17347     17E3                     u706_20:
 17348     17E3  0B89               	decfsz	9,f
 17349     17E4  2FDF               	goto	u706_25
 17350     17E5  0874               	movf	??i1___xxtofl,w
 17351     17E6  04FA               	iorwf	i1___xxtofl@arg,f
 17352     17E7  0875               	movf	??i1___xxtofl+1,w
 17353     17E8  04FB               	iorwf	i1___xxtofl@arg+1,f
 17354     17E9  0876               	movf	??i1___xxtofl+2,w
 17355     17EA  04FC               	iorwf	i1___xxtofl@arg+2,f
 17356     17EB  0877               	movf	??i1___xxtofl+3,w
 17357     17EC  04FD               	iorwf	i1___xxtofl@arg+3,f
 17358     17ED                     i1l6252:
 17359     17ED  0878               	movf	i1___xxtofl@sign,w
 17360     17EE  1903               	btfsc	3,2
 17361     17EF  2FF1               	goto	u707_21
 17362     17F0  2FF2               	goto	u707_20
 17363     17F1                     u707_21:
 17364     17F1  2FF7               	goto	i1l6258
 17365     17F2                     u707_20:
 17366     17F2                     i1l6254:
 17367     17F2  1FF3               	btfss	i1___xxtofl@val+3,7
 17368     17F3  2FF5               	goto	u708_21
 17369     17F4  2FF6               	goto	u708_20
 17370     17F5                     u708_21:
 17371     17F5  2FF7               	goto	i1l6258
 17372     17F6                     u708_20:
 17373     17F6                     i1l6256:
 17374     17F6  17FD               	bsf	i1___xxtofl@arg+3,7
 17375     17F7                     i1l6258:
 17376     17F7  087D               	movf	i1___xxtofl@arg+3,w
 17377     17F8  00F3               	movwf	?i1___xxtofl+3
 17378     17F9  087C               	movf	i1___xxtofl@arg+2,w
 17379     17FA  00F2               	movwf	?i1___xxtofl+2
 17380     17FB  087B               	movf	i1___xxtofl@arg+1,w
 17381     17FC  00F1               	movwf	?i1___xxtofl+1
 17382     17FD  087A               	movf	i1___xxtofl@arg,w
 17383     17FE  00F0               	movwf	?i1___xxtofl
 17384     17FF                     i1l1881:
 17385     17FF  0008               	return
 17386     1800                     __end_ofi1___xxtofl:
 17387                           
 17388                           	psect	text61
 17389     02E4                     __ptext61:	
 17390 ;; *************** function i1___flmul *****************
 17391 ;; Defined at:
 17392 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\sprcmul.c"
 17393 ;; Parameters:    Size  Location     Type
 17394 ;;  b               4    0[BANK0 ] unsigned char 
 17395 ;;  a               4    4[BANK0 ] unsigned char 
 17396 ;; Auto vars:     Size  Location     Type
 17397 ;;  prod            4   20[BANK0 ] struct .
 17398 ;;  grs             4   14[BANK0 ] unsigned long 
 17399 ;;  temp            2   24[BANK0 ] struct .
 17400 ;;  bexp            1   19[BANK0 ] unsigned char 
 17401 ;;  aexp            1   18[BANK0 ] unsigned char 
 17402 ;;  sign            1   13[BANK0 ] unsigned char 
 17403 ;; Return value:  Size  Location     Type
 17404 ;;                  4    0[BANK0 ] unsigned char 
 17405 ;; Registers used:
 17406 ;;		wreg, status,2, status,0, pclath, cstack
 17407 ;; Tracked objects:
 17408 ;;		On entry : 0/0
 17409 ;;		On exit  : 0/0
 17410 ;;		Unchanged: 0/0
 17411 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 17412 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17413 ;;      Locals:         0      13       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17414 ;;      Temps:          0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17415 ;;      Totals:         0      26       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17416 ;;Total ram usage:       26 bytes
 17417 ;; Hardware stack levels used: 1
 17418 ;; Hardware stack levels required when called: 1
 17419 ;; This function calls:
 17420 ;;		i1__Umul8_16
 17421 ;; This function is called by:
 17422 ;;		_controller
 17423 ;; This function uses a non-reentrant model
 17424 ;;
 17425                           
 17426     02E4                     i1___flmul:	
 17427                           ;psect for function i1___flmul
 17428                           
 17429     02E4                     i1l6082:	
 17430                           ;incstack = 0
 17431                           ; Regs used in i1___flmul: [wreg+status,2+status,0+pclath+cstack]
 17432                           
 17433     02E4  0020               	movlb	0	; select bank0
 17434     02E5  0823               	movf	i1___flmul@b+3,w
 17435     02E6  3980               	andlw	128
 17436     02E7  00AD               	movwf	i1___flmul@sign
 17437     02E8                     i1l6084:
 17438     02E8  3523               	lslf	i1___flmul@b+3,w
 17439     02E9  00B3               	movwf	i1___flmul@bexp
 17440     02EA                     i1l6086:
 17441     02EA  1FA2               	btfss	i1___flmul@b+2,7
 17442     02EB  2AED               	goto	u668_21
 17443     02EC  2AEE               	goto	u668_20
 17444     02ED                     u668_21:
 17445     02ED  2AEF               	goto	i1l6090
 17446     02EE                     u668_20:
 17447     02EE                     i1l6088:
 17448     02EE  1433               	bsf	i1___flmul@bexp,0
 17449     02EF                     i1l6090:
 17450     02EF  0833               	movf	i1___flmul@bexp,w
 17451     02F0  1903               	btfsc	3,2
 17452     02F1  2AF3               	goto	u669_21
 17453     02F2  2AF4               	goto	u669_20
 17454     02F3                     u669_21:
 17455     02F3  2B03               	goto	i1l6098
 17456     02F4                     u669_20:
 17457     02F4                     i1l6092:
 17458     02F4  0A33               	incf	i1___flmul@bexp,w
 17459     02F5  1D03               	btfss	3,2
 17460     02F6  2AF8               	goto	u670_21
 17461     02F7  2AF9               	goto	u670_20
 17462     02F8                     u670_21:
 17463     02F8  2B01               	goto	i1l6096
 17464     02F9                     u670_20:
 17465     02F9                     i1l6094:
 17466     02F9  3000               	movlw	0
 17467     02FA  00A3               	movwf	i1___flmul@b+3
 17468     02FB  3000               	movlw	0
 17469     02FC  00A2               	movwf	i1___flmul@b+2
 17470     02FD  3000               	movlw	0
 17471     02FE  00A1               	movwf	i1___flmul@b+1
 17472     02FF  3000               	movlw	0
 17473     0300  00A0               	movwf	i1___flmul@b
 17474     0301                     i1l6096:
 17475     0301  17A2               	bsf	i1___flmul@b+2,7
 17476     0302  2B0B               	goto	i1l6100
 17477     0303                     i1l6098:
 17478     0303  3000               	movlw	0
 17479     0304  00A3               	movwf	i1___flmul@b+3
 17480     0305  3000               	movlw	0
 17481     0306  00A2               	movwf	i1___flmul@b+2
 17482     0307  3000               	movlw	0
 17483     0308  00A1               	movwf	i1___flmul@b+1
 17484     0309  3000               	movlw	0
 17485     030A  00A0               	movwf	i1___flmul@b
 17486     030B                     i1l6100:
 17487     030B  0827               	movf	i1___flmul@a+3,w
 17488     030C  3980               	andlw	128
 17489     030D  06AD               	xorwf	i1___flmul@sign,f
 17490     030E                     i1l6102:
 17491     030E  3527               	lslf	i1___flmul@a+3,w
 17492     030F  00B2               	movwf	i1___flmul@aexp
 17493     0310                     i1l6104:
 17494     0310  1FA6               	btfss	i1___flmul@a+2,7
 17495     0311  2B13               	goto	u671_21
 17496     0312  2B14               	goto	u671_20
 17497     0313                     u671_21:
 17498     0313  2B15               	goto	i1l6108
 17499     0314                     u671_20:
 17500     0314                     i1l6106:
 17501     0314  1432               	bsf	i1___flmul@aexp,0
 17502     0315                     i1l6108:
 17503     0315  0832               	movf	i1___flmul@aexp,w
 17504     0316  1903               	btfsc	3,2
 17505     0317  2B19               	goto	u672_21
 17506     0318  2B1A               	goto	u672_20
 17507     0319                     u672_21:
 17508     0319  2B29               	goto	i1l6116
 17509     031A                     u672_20:
 17510     031A                     i1l6110:
 17511     031A  0A32               	incf	i1___flmul@aexp,w
 17512     031B  1D03               	btfss	3,2
 17513     031C  2B1E               	goto	u673_21
 17514     031D  2B1F               	goto	u673_20
 17515     031E                     u673_21:
 17516     031E  2B27               	goto	i1l6114
 17517     031F                     u673_20:
 17518     031F                     i1l6112:
 17519     031F  3000               	movlw	0
 17520     0320  00A7               	movwf	i1___flmul@a+3
 17521     0321  3000               	movlw	0
 17522     0322  00A6               	movwf	i1___flmul@a+2
 17523     0323  3000               	movlw	0
 17524     0324  00A5               	movwf	i1___flmul@a+1
 17525     0325  3000               	movlw	0
 17526     0326  00A4               	movwf	i1___flmul@a
 17527     0327                     i1l6114:
 17528     0327  17A6               	bsf	i1___flmul@a+2,7
 17529     0328  2B31               	goto	i1l6118
 17530     0329                     i1l6116:
 17531     0329  3000               	movlw	0
 17532     032A  00A7               	movwf	i1___flmul@a+3
 17533     032B  3000               	movlw	0
 17534     032C  00A6               	movwf	i1___flmul@a+2
 17535     032D  3000               	movlw	0
 17536     032E  00A5               	movwf	i1___flmul@a+1
 17537     032F  3000               	movlw	0
 17538     0330  00A4               	movwf	i1___flmul@a
 17539     0331                     i1l6118:
 17540     0331  0832               	movf	i1___flmul@aexp,w
 17541     0332  1903               	btfsc	3,2
 17542     0333  2B35               	goto	u674_21
 17543     0334  2B36               	goto	u674_20
 17544     0335                     u674_21:
 17545     0335  2B3B               	goto	i1l6122
 17546     0336                     u674_20:
 17547     0336                     i1l6120:
 17548     0336  0833               	movf	i1___flmul@bexp,w
 17549     0337  1D03               	btfss	3,2
 17550     0338  2B3A               	goto	u675_21
 17551     0339  2B3B               	goto	u675_20
 17552     033A                     u675_21:
 17553     033A  2B44               	goto	i1l6126
 17554     033B                     u675_20:
 17555     033B                     i1l6122:
 17556     033B  3000               	movlw	0
 17557     033C  00A3               	movwf	?i1___flmul+3
 17558     033D  3000               	movlw	0
 17559     033E  00A2               	movwf	?i1___flmul+2
 17560     033F  3000               	movlw	0
 17561     0340  00A1               	movwf	?i1___flmul+1
 17562     0341  3000               	movlw	0
 17563     0342  00A0               	movwf	?i1___flmul
 17564     0343  2D1E               	goto	i1l1835
 17565     0344                     i1l6126:
 17566     0344  0820               	movf	i1___flmul@b,w
 17567     0345  00F0               	movwf	i1__Umul8_16@multiplicand
 17568     0346  0826               	movf	i1___flmul@a+2,w
 17569     0347  3190  20B9  3182   	fcall	i1__Umul8_16
 17570     034A  0871               	movf	?i1__Umul8_16+1,w
 17571     034B  0020               	movlb	0	; select bank0
 17572     034C  00B9               	movwf	i1___flmul@temp+1
 17573     034D  0870               	movf	?i1__Umul8_16,w
 17574     034E  00B8               	movwf	i1___flmul@temp
 17575     034F                     i1l6128:
 17576     034F  0838               	movf	i1___flmul@temp,w
 17577     0350  00A8               	movwf	??i1___flmul
 17578     0351  01A9               	clrf	??i1___flmul+1
 17579     0352  01AA               	clrf	??i1___flmul+2
 17580     0353  01AB               	clrf	??i1___flmul+3
 17581     0354  082B               	movf	??i1___flmul+3,w
 17582     0355  00B1               	movwf	i1___flmul@grs+3
 17583     0356  082A               	movf	??i1___flmul+2,w
 17584     0357  00B0               	movwf	i1___flmul@grs+2
 17585     0358  0829               	movf	??i1___flmul+1,w
 17586     0359  00AF               	movwf	i1___flmul@grs+1
 17587     035A  0828               	movf	??i1___flmul,w
 17588     035B  00AE               	movwf	i1___flmul@grs
 17589     035C                     i1l6130:
 17590     035C  0839               	movf	i1___flmul@temp+1,w
 17591     035D  00A8               	movwf	??i1___flmul
 17592     035E  01A9               	clrf	??i1___flmul+1
 17593     035F  01AA               	clrf	??i1___flmul+2
 17594     0360  01AB               	clrf	??i1___flmul+3
 17595     0361  082B               	movf	??i1___flmul+3,w
 17596     0362  00B7               	movwf	i1___flmul@prod+3
 17597     0363  082A               	movf	??i1___flmul+2,w
 17598     0364  00B6               	movwf	i1___flmul@prod+2
 17599     0365  0829               	movf	??i1___flmul+1,w
 17600     0366  00B5               	movwf	i1___flmul@prod+1
 17601     0367  0828               	movf	??i1___flmul,w
 17602     0368  00B4               	movwf	i1___flmul@prod
 17603     0369  0821               	movf	i1___flmul@b+1,w
 17604     036A  00F0               	movwf	i1__Umul8_16@multiplicand
 17605     036B  0825               	movf	i1___flmul@a+1,w
 17606     036C  3190  20B9  3182   	fcall	i1__Umul8_16
 17607     036F  0871               	movf	?i1__Umul8_16+1,w
 17608     0370  0020               	movlb	0	; select bank0
 17609     0371  00B9               	movwf	i1___flmul@temp+1
 17610     0372  0870               	movf	?i1__Umul8_16,w
 17611     0373  00B8               	movwf	i1___flmul@temp
 17612     0374                     i1l6132:
 17613     0374  0838               	movf	i1___flmul@temp,w
 17614     0375  00A8               	movwf	??i1___flmul
 17615     0376  01A9               	clrf	??i1___flmul+1
 17616     0377  01AA               	clrf	??i1___flmul+2
 17617     0378  01AB               	clrf	??i1___flmul+3
 17618     0379  0828               	movf	??i1___flmul,w
 17619     037A  07AE               	addwf	i1___flmul@grs,f
 17620     037B  0829               	movf	??i1___flmul+1,w
 17621     037C  3DAF               	addwfc	i1___flmul@grs+1,f
 17622     037D  082A               	movf	??i1___flmul+2,w
 17623     037E  3DB0               	addwfc	i1___flmul@grs+2,f
 17624     037F  082B               	movf	??i1___flmul+3,w
 17625     0380  3DB1               	addwfc	i1___flmul@grs+3,f
 17626     0381                     i1l6134:
 17627     0381  0839               	movf	i1___flmul@temp+1,w
 17628     0382  00A8               	movwf	??i1___flmul
 17629     0383  01A9               	clrf	??i1___flmul+1
 17630     0384  01AA               	clrf	??i1___flmul+2
 17631     0385  01AB               	clrf	??i1___flmul+3
 17632     0386  0828               	movf	??i1___flmul,w
 17633     0387  07B4               	addwf	i1___flmul@prod,f
 17634     0388  0829               	movf	??i1___flmul+1,w
 17635     0389  3DB5               	addwfc	i1___flmul@prod+1,f
 17636     038A  082A               	movf	??i1___flmul+2,w
 17637     038B  3DB6               	addwfc	i1___flmul@prod+2,f
 17638     038C  082B               	movf	??i1___flmul+3,w
 17639     038D  3DB7               	addwfc	i1___flmul@prod+3,f
 17640     038E  0822               	movf	i1___flmul@b+2,w
 17641     038F  00F0               	movwf	i1__Umul8_16@multiplicand
 17642     0390  0824               	movf	i1___flmul@a,w
 17643     0391  3190  20B9  3182   	fcall	i1__Umul8_16
 17644     0394  0871               	movf	?i1__Umul8_16+1,w
 17645     0395  0020               	movlb	0	; select bank0
 17646     0396  00B9               	movwf	i1___flmul@temp+1
 17647     0397  0870               	movf	?i1__Umul8_16,w
 17648     0398  00B8               	movwf	i1___flmul@temp
 17649     0399                     i1l6136:
 17650     0399  0838               	movf	i1___flmul@temp,w
 17651     039A  00A8               	movwf	??i1___flmul
 17652     039B  01A9               	clrf	??i1___flmul+1
 17653     039C  01AA               	clrf	??i1___flmul+2
 17654     039D  01AB               	clrf	??i1___flmul+3
 17655     039E  0828               	movf	??i1___flmul,w
 17656     039F  07AE               	addwf	i1___flmul@grs,f
 17657     03A0  0829               	movf	??i1___flmul+1,w
 17658     03A1  3DAF               	addwfc	i1___flmul@grs+1,f
 17659     03A2  082A               	movf	??i1___flmul+2,w
 17660     03A3  3DB0               	addwfc	i1___flmul@grs+2,f
 17661     03A4  082B               	movf	??i1___flmul+3,w
 17662     03A5  3DB1               	addwfc	i1___flmul@grs+3,f
 17663     03A6                     i1l6138:
 17664     03A6  0839               	movf	i1___flmul@temp+1,w
 17665     03A7  00A8               	movwf	??i1___flmul
 17666     03A8  01A9               	clrf	??i1___flmul+1
 17667     03A9  01AA               	clrf	??i1___flmul+2
 17668     03AA  01AB               	clrf	??i1___flmul+3
 17669     03AB  0828               	movf	??i1___flmul,w
 17670     03AC  07B4               	addwf	i1___flmul@prod,f
 17671     03AD  0829               	movf	??i1___flmul+1,w
 17672     03AE  3DB5               	addwfc	i1___flmul@prod+1,f
 17673     03AF  082A               	movf	??i1___flmul+2,w
 17674     03B0  3DB6               	addwfc	i1___flmul@prod+2,f
 17675     03B1  082B               	movf	??i1___flmul+3,w
 17676     03B2  3DB7               	addwfc	i1___flmul@prod+3,f
 17677     03B3                     i1l6140:
 17678     03B3  3008               	movlw	8
 17679     03B4                     u676_25:
 17680     03B4  35AE               	lslf	i1___flmul@grs,f
 17681     03B5  0DAF               	rlf	i1___flmul@grs+1,f
 17682     03B6  0DB0               	rlf	i1___flmul@grs+2,f
 17683     03B7  0DB1               	rlf	i1___flmul@grs+3,f
 17684     03B8  0B89               	decfsz	9,f
 17685     03B9  2BB4               	goto	u676_25
 17686     03BA                     i1l6142:
 17687     03BA  0821               	movf	i1___flmul@b+1,w
 17688     03BB  00F0               	movwf	i1__Umul8_16@multiplicand
 17689     03BC  0824               	movf	i1___flmul@a,w
 17690     03BD  3190  20B9  3182   	fcall	i1__Umul8_16
 17691     03C0  0871               	movf	?i1__Umul8_16+1,w
 17692     03C1  0020               	movlb	0	; select bank0
 17693     03C2  00B9               	movwf	i1___flmul@temp+1
 17694     03C3  0870               	movf	?i1__Umul8_16,w
 17695     03C4  00B8               	movwf	i1___flmul@temp
 17696     03C5                     i1l6144:
 17697     03C5  0838               	movf	i1___flmul@temp,w
 17698     03C6  07AE               	addwf	i1___flmul@grs,f
 17699     03C7  0839               	movf	i1___flmul@temp+1,w
 17700     03C8  3DAF               	addwfc	i1___flmul@grs+1,f
 17701     03C9  3000               	movlw	0
 17702     03CA  3DB0               	addwfc	i1___flmul@grs+2,f
 17703     03CB  3DB1               	addwfc	i1___flmul@grs+3,f
 17704     03CC                     i1l6146:
 17705     03CC  0820               	movf	i1___flmul@b,w
 17706     03CD  00F0               	movwf	i1__Umul8_16@multiplicand
 17707     03CE  0825               	movf	i1___flmul@a+1,w
 17708     03CF  3190  20B9  3182   	fcall	i1__Umul8_16
 17709     03D2  0871               	movf	?i1__Umul8_16+1,w
 17710     03D3  0020               	movlb	0	; select bank0
 17711     03D4  00B9               	movwf	i1___flmul@temp+1
 17712     03D5  0870               	movf	?i1__Umul8_16,w
 17713     03D6  00B8               	movwf	i1___flmul@temp
 17714     03D7                     i1l6148:
 17715     03D7  0838               	movf	i1___flmul@temp,w
 17716     03D8  07AE               	addwf	i1___flmul@grs,f
 17717     03D9  0839               	movf	i1___flmul@temp+1,w
 17718     03DA  3DAF               	addwfc	i1___flmul@grs+1,f
 17719     03DB  3000               	movlw	0
 17720     03DC  3DB0               	addwfc	i1___flmul@grs+2,f
 17721     03DD  3DB1               	addwfc	i1___flmul@grs+3,f
 17722     03DE                     i1l6150:
 17723     03DE  3008               	movlw	8
 17724     03DF                     u677_25:
 17725     03DF  35AE               	lslf	i1___flmul@grs,f
 17726     03E0  0DAF               	rlf	i1___flmul@grs+1,f
 17727     03E1  0DB0               	rlf	i1___flmul@grs+2,f
 17728     03E2  0DB1               	rlf	i1___flmul@grs+3,f
 17729     03E3  0B89               	decfsz	9,f
 17730     03E4  2BDF               	goto	u677_25
 17731     03E5  0820               	movf	i1___flmul@b,w
 17732     03E6  00F0               	movwf	i1__Umul8_16@multiplicand
 17733     03E7  0824               	movf	i1___flmul@a,w
 17734     03E8  3190  20B9  3182   	fcall	i1__Umul8_16
 17735     03EB  0871               	movf	?i1__Umul8_16+1,w
 17736     03EC  0020               	movlb	0	; select bank0
 17737     03ED  00B9               	movwf	i1___flmul@temp+1
 17738     03EE  0870               	movf	?i1__Umul8_16,w
 17739     03EF  00B8               	movwf	i1___flmul@temp
 17740     03F0                     i1l6152:
 17741     03F0  0838               	movf	i1___flmul@temp,w
 17742     03F1  07AE               	addwf	i1___flmul@grs,f
 17743     03F2  0839               	movf	i1___flmul@temp+1,w
 17744     03F3  3DAF               	addwfc	i1___flmul@grs+1,f
 17745     03F4  3000               	movlw	0
 17746     03F5  3DB0               	addwfc	i1___flmul@grs+2,f
 17747     03F6  3DB1               	addwfc	i1___flmul@grs+3,f
 17748     03F7                     i1l6154:
 17749     03F7  0821               	movf	i1___flmul@b+1,w
 17750     03F8  00F0               	movwf	i1__Umul8_16@multiplicand
 17751     03F9  0826               	movf	i1___flmul@a+2,w
 17752     03FA  3190  20B9  3182   	fcall	i1__Umul8_16
 17753     03FD  0871               	movf	?i1__Umul8_16+1,w
 17754     03FE  0020               	movlb	0	; select bank0
 17755     03FF  00B9               	movwf	i1___flmul@temp+1
 17756     0400  0870               	movf	?i1__Umul8_16,w
 17757     0401  00B8               	movwf	i1___flmul@temp
 17758     0402  0838               	movf	i1___flmul@temp,w
 17759     0403  07B4               	addwf	i1___flmul@prod,f
 17760     0404  0839               	movf	i1___flmul@temp+1,w
 17761     0405  3DB5               	addwfc	i1___flmul@prod+1,f
 17762     0406  3000               	movlw	0
 17763     0407  3DB6               	addwfc	i1___flmul@prod+2,f
 17764     0408  3DB7               	addwfc	i1___flmul@prod+3,f
 17765     0409                     i1l6156:
 17766     0409  0822               	movf	i1___flmul@b+2,w
 17767     040A  00F0               	movwf	i1__Umul8_16@multiplicand
 17768     040B  0825               	movf	i1___flmul@a+1,w
 17769     040C  3190  20B9  3182   	fcall	i1__Umul8_16
 17770     040F  0871               	movf	?i1__Umul8_16+1,w
 17771     0410  0020               	movlb	0	; select bank0
 17772     0411  00B9               	movwf	i1___flmul@temp+1
 17773     0412  0870               	movf	?i1__Umul8_16,w
 17774     0413  00B8               	movwf	i1___flmul@temp
 17775     0414                     i1l6158:
 17776     0414  0838               	movf	i1___flmul@temp,w
 17777     0415  07B4               	addwf	i1___flmul@prod,f
 17778     0416  0839               	movf	i1___flmul@temp+1,w
 17779     0417  3DB5               	addwfc	i1___flmul@prod+1,f
 17780     0418  3000               	movlw	0
 17781     0419  3DB6               	addwfc	i1___flmul@prod+2,f
 17782     041A  3DB7               	addwfc	i1___flmul@prod+3,f
 17783     041B  0822               	movf	i1___flmul@b+2,w
 17784     041C  00F0               	movwf	i1__Umul8_16@multiplicand
 17785     041D  0826               	movf	i1___flmul@a+2,w
 17786     041E  3190  20B9  3182   	fcall	i1__Umul8_16
 17787     0421  0871               	movf	?i1__Umul8_16+1,w
 17788     0422  0020               	movlb	0	; select bank0
 17789     0423  00B9               	movwf	i1___flmul@temp+1
 17790     0424  0870               	movf	?i1__Umul8_16,w
 17791     0425  00B8               	movwf	i1___flmul@temp
 17792     0426                     i1l6160:
 17793     0426  0838               	movf	i1___flmul@temp,w
 17794     0427  00A8               	movwf	??i1___flmul
 17795     0428  0839               	movf	i1___flmul@temp+1,w
 17796     0429  00A9               	movwf	??i1___flmul+1
 17797     042A  01AA               	clrf	??i1___flmul+2
 17798     042B  01AB               	clrf	??i1___flmul+3
 17799     042C  3008               	movlw	8
 17800     042D                     u678_25:
 17801     042D  35A8               	lslf	??i1___flmul,f
 17802     042E  0DA9               	rlf	??i1___flmul+1,f
 17803     042F  0DAA               	rlf	??i1___flmul+2,f
 17804     0430  0DAB               	rlf	??i1___flmul+3,f
 17805     0431                     u678_20:
 17806     0431  0B89               	decfsz	9,f
 17807     0432  2C2D               	goto	u678_25
 17808     0433  0828               	movf	??i1___flmul,w
 17809     0434  07B4               	addwf	i1___flmul@prod,f
 17810     0435  0829               	movf	??i1___flmul+1,w
 17811     0436  3DB5               	addwfc	i1___flmul@prod+1,f
 17812     0437  082A               	movf	??i1___flmul+2,w
 17813     0438  3DB6               	addwfc	i1___flmul@prod+2,f
 17814     0439  082B               	movf	??i1___flmul+3,w
 17815     043A  3DB7               	addwfc	i1___flmul@prod+3,f
 17816     043B                     i1l6162:
 17817     043B  082E               	movf	i1___flmul@grs,w
 17818     043C  00A8               	movwf	??i1___flmul
 17819     043D  082F               	movf	i1___flmul@grs+1,w
 17820     043E  00A9               	movwf	??i1___flmul+1
 17821     043F  0830               	movf	i1___flmul@grs+2,w
 17822     0440  00AA               	movwf	??i1___flmul+2
 17823     0441  0831               	movf	i1___flmul@grs+3,w
 17824     0442  00AB               	movwf	??i1___flmul+3
 17825     0443  3018               	movlw	24
 17826     0444                     u679_25:
 17827     0444  36AB               	lsrf	??i1___flmul+3,f
 17828     0445  0CAA               	rrf	??i1___flmul+2,f
 17829     0446  0CA9               	rrf	??i1___flmul+1,f
 17830     0447  0CA8               	rrf	??i1___flmul,f
 17831     0448                     u679_20:
 17832     0448  0B89               	decfsz	9,f
 17833     0449  2C44               	goto	u679_25
 17834     044A  0828               	movf	??i1___flmul,w
 17835     044B  07B4               	addwf	i1___flmul@prod,f
 17836     044C  0829               	movf	??i1___flmul+1,w
 17837     044D  3DB5               	addwfc	i1___flmul@prod+1,f
 17838     044E  082A               	movf	??i1___flmul+2,w
 17839     044F  3DB6               	addwfc	i1___flmul@prod+2,f
 17840     0450  082B               	movf	??i1___flmul+3,w
 17841     0451  3DB7               	addwfc	i1___flmul@prod+3,f
 17842     0452                     i1l6164:
 17843     0452  3008               	movlw	8
 17844     0453                     u680_25:
 17845     0453  35AE               	lslf	i1___flmul@grs,f
 17846     0454  0DAF               	rlf	i1___flmul@grs+1,f
 17847     0455  0DB0               	rlf	i1___flmul@grs+2,f
 17848     0456  0DB1               	rlf	i1___flmul@grs+3,f
 17849     0457  0B89               	decfsz	9,f
 17850     0458  2C53               	goto	u680_25
 17851     0459                     i1l6166:
 17852     0459  0833               	movf	i1___flmul@bexp,w
 17853     045A  0732               	addwf	i1___flmul@aexp,w
 17854     045B  00A8               	movwf	??i1___flmul
 17855     045C  01A9               	clrf	??i1___flmul+1
 17856     045D  0DA9               	rlf	??i1___flmul+1,f
 17857     045E  0828               	movf	??i1___flmul,w
 17858     045F  3E82               	addlw	130
 17859     0460  00B8               	movwf	i1___flmul@temp
 17860     0461  30FF               	movlw	255
 17861     0462  3D29               	addwfc	??i1___flmul+1,w
 17862     0463  00B9               	movwf	i1___flmul@temp+1
 17863     0464  2C7C               	goto	i1l6178
 17864     0465                     i1l6168:
 17865     0465  3001               	movlw	1
 17866     0466                     u681_25:
 17867     0466  35B4               	lslf	i1___flmul@prod,f
 17868     0467  0DB5               	rlf	i1___flmul@prod+1,f
 17869     0468  0DB6               	rlf	i1___flmul@prod+2,f
 17870     0469  0DB7               	rlf	i1___flmul@prod+3,f
 17871     046A  0B89               	decfsz	9,f
 17872     046B  2C66               	goto	u681_25
 17873     046C                     i1l6170:
 17874     046C  1FB1               	btfss	i1___flmul@grs+3,7
 17875     046D  2C6F               	goto	u682_21
 17876     046E  2C70               	goto	u682_20
 17877     046F                     u682_21:
 17878     046F  2C71               	goto	i1l6174
 17879     0470                     u682_20:
 17880     0470                     i1l6172:
 17881     0470  1434               	bsf	i1___flmul@prod,0
 17882     0471                     i1l6174:
 17883     0471  3001               	movlw	1
 17884     0472                     u683_25:
 17885     0472  35AE               	lslf	i1___flmul@grs,f
 17886     0473  0DAF               	rlf	i1___flmul@grs+1,f
 17887     0474  0DB0               	rlf	i1___flmul@grs+2,f
 17888     0475  0DB1               	rlf	i1___flmul@grs+3,f
 17889     0476  0B89               	decfsz	9,f
 17890     0477  2C72               	goto	u683_25
 17891     0478                     i1l6176:
 17892     0478  30FF               	movlw	255
 17893     0479  07B8               	addwf	i1___flmul@temp,f
 17894     047A  30FF               	movlw	255
 17895     047B  3DB9               	addwfc	i1___flmul@temp+1,f
 17896     047C                     i1l6178:
 17897     047C  1FB6               	btfss	i1___flmul@prod+2,7
 17898     047D  2C7F               	goto	u684_21
 17899     047E  2C80               	goto	u684_20
 17900     047F                     u684_21:
 17901     047F  2C65               	goto	i1l6168
 17902     0480                     u684_20:
 17903     0480                     i1l6180:
 17904     0480  01B2               	clrf	i1___flmul@aexp
 17905     0481                     i1l6182:
 17906     0481  1FB1               	btfss	i1___flmul@grs+3,7
 17907     0482  2C84               	goto	u685_21
 17908     0483  2C85               	goto	u685_20
 17909     0484                     u685_21:
 17910     0484  2CA1               	goto	i1l6190
 17911     0485                     u685_20:
 17912     0485                     i1l6184:
 17913     0485  30FF               	movlw	255
 17914     0486  052E               	andwf	i1___flmul@grs,w
 17915     0487  00A8               	movwf	??i1___flmul
 17916     0488  30FF               	movlw	255
 17917     0489  052F               	andwf	i1___flmul@grs+1,w
 17918     048A  00A9               	movwf	??i1___flmul+1
 17919     048B  30FF               	movlw	255
 17920     048C  0530               	andwf	i1___flmul@grs+2,w
 17921     048D  00AA               	movwf	??i1___flmul+2
 17922     048E  307F               	movlw	127
 17923     048F  0531               	andwf	i1___flmul@grs+3,w
 17924     0490  00AB               	movwf	??i1___flmul+3
 17925     0491  082B               	movf	??i1___flmul+3,w
 17926     0492  042A               	iorwf	??i1___flmul+2,w
 17927     0493  0429               	iorwf	??i1___flmul+1,w
 17928     0494  0428               	iorwf	??i1___flmul,w
 17929     0495  1903               	skipnz
 17930     0496  2C98               	goto	u686_21
 17931     0497  2C99               	goto	u686_20
 17932     0498                     u686_21:
 17933     0498  2C9C               	goto	i1l1841
 17934     0499                     u686_20:
 17935     0499                     i1l6186:
 17936     0499  3001               	movlw	1
 17937     049A  00B2               	movwf	i1___flmul@aexp
 17938     049B  2CA1               	goto	i1l6190
 17939     049C                     i1l1841:
 17940     049C  1C34               	btfss	i1___flmul@prod,0
 17941     049D  2C9F               	goto	u687_21
 17942     049E  2CA0               	goto	u687_20
 17943     049F                     u687_21:
 17944     049F  2CA1               	goto	i1l6190
 17945     04A0                     u687_20:
 17946     04A0  2C99               	goto	i1l6186
 17947     04A1                     i1l6190:
 17948     04A1  0832               	movf	i1___flmul@aexp,w
 17949     04A2  1903               	btfsc	3,2
 17950     04A3  2CA5               	goto	u688_21
 17951     04A4  2CA6               	goto	u688_20
 17952     04A5                     u688_21:
 17953     04A5  2CCC               	goto	i1l6200
 17954     04A6                     u688_20:
 17955     04A6                     i1l6192:
 17956     04A6  3001               	movlw	1
 17957     04A7  07B4               	addwf	i1___flmul@prod,f
 17958     04A8  3000               	movlw	0
 17959     04A9  3DB5               	addwfc	i1___flmul@prod+1,f
 17960     04AA  3DB6               	addwfc	i1___flmul@prod+2,f
 17961     04AB  3DB7               	addwfc	i1___flmul@prod+3,f
 17962     04AC                     i1l6194:
 17963     04AC  1C37               	btfss	i1___flmul@prod+3,0
 17964     04AD  2CAF               	goto	u689_21
 17965     04AE  2CB0               	goto	u689_20
 17966     04AF                     u689_21:
 17967     04AF  2CCC               	goto	i1l6200
 17968     04B0                     u689_20:
 17969     04B0                     i1l6196:
 17970     04B0  0834               	movf	i1___flmul@prod,w
 17971     04B1  00A8               	movwf	??i1___flmul
 17972     04B2  0835               	movf	i1___flmul@prod+1,w
 17973     04B3  00A9               	movwf	??i1___flmul+1
 17974     04B4  0836               	movf	i1___flmul@prod+2,w
 17975     04B5  00AA               	movwf	??i1___flmul+2
 17976     04B6  0837               	movf	i1___flmul@prod+3,w
 17977     04B7  00AB               	movwf	??i1___flmul+3
 17978     04B8  3001               	movlw	1
 17979     04B9  00AC               	movwf	??i1___flmul+4
 17980     04BA                     u690_25:
 17981     04BA  37AB               	asrf	??i1___flmul+3,f
 17982     04BB  0CAA               	rrf	??i1___flmul+2,f
 17983     04BC  0CA9               	rrf	??i1___flmul+1,f
 17984     04BD  0CA8               	rrf	??i1___flmul,f
 17985     04BE                     u690_20:
 17986     04BE  0BAC               	decfsz	??i1___flmul+4,f
 17987     04BF  2CBA               	goto	u690_25
 17988     04C0  082B               	movf	??i1___flmul+3,w
 17989     04C1  00B7               	movwf	i1___flmul@prod+3
 17990     04C2  082A               	movf	??i1___flmul+2,w
 17991     04C3  00B6               	movwf	i1___flmul@prod+2
 17992     04C4  0829               	movf	??i1___flmul+1,w
 17993     04C5  00B5               	movwf	i1___flmul@prod+1
 17994     04C6  0828               	movf	??i1___flmul,w
 17995     04C7  00B4               	movwf	i1___flmul@prod
 17996     04C8                     i1l6198:
 17997     04C8  3001               	movlw	1
 17998     04C9  07B8               	addwf	i1___flmul@temp,f
 17999     04CA  3000               	movlw	0
 18000     04CB  3DB9               	addwfc	i1___flmul@temp+1,f
 18001     04CC                     i1l6200:
 18002     04CC  0839               	movf	i1___flmul@temp+1,w
 18003     04CD  3A80               	xorlw	128
 18004     04CE  00A8               	movwf	??i1___flmul
 18005     04CF  3080               	movlw	128
 18006     04D0  0228               	subwf	??i1___flmul,w
 18007     04D1  1D03               	skipz
 18008     04D2  2CD5               	goto	u691_25
 18009     04D3  30FF               	movlw	255
 18010     04D4  0238               	subwf	i1___flmul@temp,w
 18011     04D5                     u691_25:
 18012     04D5  1C03               	skipc
 18013     04D6  2CD8               	goto	u691_21
 18014     04D7  2CD9               	goto	u691_20
 18015     04D8                     u691_21:
 18016     04D8  2CE3               	goto	i1l6204
 18017     04D9                     u691_20:
 18018     04D9                     i1l6202:
 18019     04D9  307F               	movlw	127
 18020     04DA  0020               	movlb	0	; select bank0
 18021     04DB  00B7               	movwf	i1___flmul@prod+3
 18022     04DC  3080               	movlw	128
 18023     04DD  00B6               	movwf	i1___flmul@prod+2
 18024     04DE  3000               	movlw	0
 18025     04DF  00B5               	movwf	i1___flmul@prod+1
 18026     04E0  3000               	movlw	0
 18027     04E1  00B4               	movwf	i1___flmul@prod
 18028     04E2  2D14               	goto	i1l1847
 18029     04E3                     i1l6204:
 18030     04E3  0020               	movlb	0	; select bank0
 18031     04E4  0839               	movf	i1___flmul@temp+1,w
 18032     04E5  3A80               	xorlw	128
 18033     04E6  00A8               	movwf	??i1___flmul
 18034     04E7  3080               	movlw	128
 18035     04E8  0228               	subwf	??i1___flmul,w
 18036     04E9  1D03               	skipz
 18037     04EA  2CED               	goto	u692_25
 18038     04EB  3001               	movlw	1
 18039     04EC  0238               	subwf	i1___flmul@temp,w
 18040     04ED                     u692_25:
 18041     04ED  1803               	skipnc
 18042     04EE  2CF0               	goto	u692_21
 18043     04EF  2CF1               	goto	u692_20
 18044     04F0                     u692_21:
 18045     04F0  2CFC               	goto	i1l6210
 18046     04F1                     u692_20:
 18047     04F1                     i1l6206:
 18048     04F1  3000               	movlw	0
 18049     04F2  0020               	movlb	0	; select bank0
 18050     04F3  00B7               	movwf	i1___flmul@prod+3
 18051     04F4  3000               	movlw	0
 18052     04F5  00B6               	movwf	i1___flmul@prod+2
 18053     04F6  3000               	movlw	0
 18054     04F7  00B5               	movwf	i1___flmul@prod+1
 18055     04F8  3000               	movlw	0
 18056     04F9  00B4               	movwf	i1___flmul@prod
 18057     04FA                     i1l6208:
 18058     04FA  01AD               	clrf	i1___flmul@sign
 18059     04FB  2D14               	goto	i1l1847
 18060     04FC                     i1l6210:
 18061     04FC  0020               	movlb	0	; select bank0
 18062     04FD  0838               	movf	i1___flmul@temp,w
 18063     04FE  00B3               	movwf	i1___flmul@bexp
 18064     04FF  30FF               	movlw	255
 18065     0500  05B4               	andwf	i1___flmul@prod,f
 18066     0501  30FF               	movlw	255
 18067     0502  05B5               	andwf	i1___flmul@prod+1,f
 18068     0503  307F               	movlw	127
 18069     0504  05B6               	andwf	i1___flmul@prod+2,f
 18070     0505  3000               	movlw	0
 18071     0506  05B7               	andwf	i1___flmul@prod+3,f
 18072     0507                     i1l6212:
 18073     0507  1C33               	btfss	i1___flmul@bexp,0
 18074     0508  2D0A               	goto	u693_21
 18075     0509  2D0B               	goto	u693_20
 18076     050A                     u693_21:
 18077     050A  2D0C               	goto	i1l6216
 18078     050B                     u693_20:
 18079     050B                     i1l6214:
 18080     050B  17B6               	bsf	i1___flmul@prod+2,7
 18081     050C                     i1l6216:
 18082     050C  0833               	movf	i1___flmul@bexp,w
 18083     050D  00A8               	movwf	??i1___flmul
 18084     050E  3001               	movlw	1
 18085     050F                     u694_25:
 18086     050F  36A8               	lsrf	??i1___flmul,f
 18087     0510  0B89               	decfsz	9,f
 18088     0511  2D0F               	goto	u694_25
 18089     0512  0828               	movf	??i1___flmul,w
 18090     0513  00B7               	movwf	i1___flmul@prod+3
 18091     0514                     i1l1847:
 18092     0514  082D               	movf	i1___flmul@sign,w
 18093     0515  04B7               	iorwf	i1___flmul@prod+3,f
 18094     0516                     i1l6218:
 18095     0516  0837               	movf	i1___flmul@prod+3,w
 18096     0517  00A3               	movwf	?i1___flmul+3
 18097     0518  0836               	movf	i1___flmul@prod+2,w
 18098     0519  00A2               	movwf	?i1___flmul+2
 18099     051A  0835               	movf	i1___flmul@prod+1,w
 18100     051B  00A1               	movwf	?i1___flmul+1
 18101     051C  0834               	movf	i1___flmul@prod,w
 18102     051D  00A0               	movwf	?i1___flmul
 18103     051E                     i1l1835:
 18104     051E  0008               	return
 18105     051F                     __end_ofi1___flmul:
 18106                           
 18107                           	psect	text62
 18108     10B9                     __ptext62:	
 18109 ;; *************** function i1__Umul8_16 *****************
 18110 ;; Defined at:
 18111 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\Umul8_16.c"
 18112 ;; Parameters:    Size  Location     Type
 18113 ;;  multiplier      1    wreg     unsigned char 
 18114 ;;  multiplicand    1    0[COMMON] unsigned char 
 18115 ;; Auto vars:     Size  Location     Type
 18116 ;;  multiplier      1    8[COMMON] unsigned char 
 18117 ;;  word_mpld       2    6[COMMON] unsigned short 
 18118 ;;  product         2    4[COMMON] unsigned short 
 18119 ;; Return value:  Size  Location     Type
 18120 ;;                  2    0[COMMON] unsigned int 
 18121 ;; Registers used:
 18122 ;;		wreg, status,2, status,0
 18123 ;; Tracked objects:
 18124 ;;		On entry : 0/0
 18125 ;;		On exit  : 0/0
 18126 ;;		Unchanged: 0/0
 18127 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 18128 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18129 ;;      Locals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18130 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18131 ;;      Totals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18132 ;;Total ram usage:        9 bytes
 18133 ;; Hardware stack levels used: 1
 18134 ;; This function calls:
 18135 ;;		Nothing
 18136 ;; This function is called by:
 18137 ;;		i1___flmul
 18138 ;; This function uses a non-reentrant model
 18139 ;;
 18140                           
 18141     10B9                     i1__Umul8_16:	
 18142                           ;psect for function i1__Umul8_16
 18143                           
 18144                           
 18145                           ;incstack = 0
 18146                           ; Regs used in i1__Umul8_16: [wreg+status,2+status,0]
 18147                           ;i1__Umul8_16@multiplier stored from wreg
 18148     10B9  00F8               	movwf	i1__Umul8_16@multiplier
 18149     10BA                     i1l5160:
 18150     10BA  01F4               	clrf	i1__Umul8_16@product
 18151     10BB  01F5               	clrf	i1__Umul8_16@product+1
 18152     10BC                     i1l5162:
 18153     10BC  0870               	movf	i1__Umul8_16@multiplicand,w
 18154     10BD  00F2               	movwf	??i1__Umul8_16
 18155     10BE  01F3               	clrf	??i1__Umul8_16+1
 18156     10BF  0872               	movf	??i1__Umul8_16,w
 18157     10C0  00F6               	movwf	i1__Umul8_16@word_mpld
 18158     10C1  0873               	movf	??i1__Umul8_16+1,w
 18159     10C2  00F7               	movwf	i1__Umul8_16@word_mpld+1
 18160     10C3                     i1l5164:
 18161     10C3  1C78               	btfss	i1__Umul8_16@multiplier,0
 18162     10C4  28C6               	goto	u480_21
 18163     10C5  28C7               	goto	u480_20
 18164     10C6                     u480_21:
 18165     10C6  28CB               	goto	i1l1854
 18166     10C7                     u480_20:
 18167     10C7                     i1l5166:
 18168     10C7  0876               	movf	i1__Umul8_16@word_mpld,w
 18169     10C8  07F4               	addwf	i1__Umul8_16@product,f
 18170     10C9  0877               	movf	i1__Umul8_16@word_mpld+1,w
 18171     10CA  3DF5               	addwfc	i1__Umul8_16@product+1,f
 18172     10CB                     i1l1854:
 18173     10CB  3001               	movlw	1
 18174     10CC                     u481_25:
 18175     10CC  35F6               	lslf	i1__Umul8_16@word_mpld,f
 18176     10CD  0DF7               	rlf	i1__Umul8_16@word_mpld+1,f
 18177     10CE  0B89               	decfsz	9,f
 18178     10CF  28CC               	goto	u481_25
 18179     10D0  1003               	clrc
 18180     10D1  0CF8               	rrf	i1__Umul8_16@multiplier,f
 18181     10D2                     i1l5168:
 18182     10D2  0878               	movf	i1__Umul8_16@multiplier,w
 18183     10D3  1D03               	btfss	3,2
 18184     10D4  28D6               	goto	u482_21
 18185     10D5  28D7               	goto	u482_20
 18186     10D6                     u482_21:
 18187     10D6  28C3               	goto	i1l5164
 18188     10D7                     u482_20:
 18189     10D7                     i1l5170:
 18190     10D7  0875               	movf	i1__Umul8_16@product+1,w
 18191     10D8  00F1               	movwf	?i1__Umul8_16+1
 18192     10D9  0874               	movf	i1__Umul8_16@product,w
 18193     10DA  00F0               	movwf	?i1__Umul8_16
 18194     10DB                     i1l1856:
 18195     10DB  0008               	return
 18196     10DC                     __end_ofi1__Umul8_16:
 18197                           
 18198                           	psect	text63
 18199     0DF4                     __ptext63:	
 18200 ;; *************** function i1___fladd *****************
 18201 ;; Defined at:
 18202 ;;		line 10 in file "C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\sprcadd.c"
 18203 ;; Parameters:    Size  Location     Type
 18204 ;;  b               4   26[BANK0 ] unsigned int 
 18205 ;;  a               4   30[BANK0 ] unsigned int 
 18206 ;; Auto vars:     Size  Location     Type
 18207 ;;  grs             1   45[BANK0 ] unsigned char 
 18208 ;;  bexp            1   44[BANK0 ] unsigned char 
 18209 ;;  aexp            1   43[BANK0 ] unsigned char 
 18210 ;;  signs           1   42[BANK0 ] unsigned char 
 18211 ;; Return value:  Size  Location     Type
 18212 ;;                  4   26[BANK0 ] unsigned char 
 18213 ;; Registers used:
 18214 ;;		wreg, status,2, status,0
 18215 ;; Tracked objects:
 18216 ;;		On entry : 0/0
 18217 ;;		On exit  : 0/0
 18218 ;;		Unchanged: 0/0
 18219 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 18220 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18221 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18222 ;;      Temps:          0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18223 ;;      Totals:         0      20       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18224 ;;Total ram usage:       20 bytes
 18225 ;; Hardware stack levels used: 1
 18226 ;; This function calls:
 18227 ;;		Nothing
 18228 ;; This function is called by:
 18229 ;;		_controller
 18230 ;; This function uses a non-reentrant model
 18231 ;;
 18232                           
 18233     0DF4                     i1___fladd:	
 18234                           ;psect for function i1___fladd
 18235                           
 18236     0DF4                     i1l5886:	
 18237                           ;incstack = 0
 18238                           ; Regs used in i1___fladd: [wreg+status,2+status,0]
 18239                           
 18240     0DF4  0020               	movlb	0	; select bank0
 18241     0DF5  083D               	movf	i1___fladd@b+3,w
 18242     0DF6  3980               	andlw	128
 18243     0DF7  00CA               	movwf	i1___fladd@signs
 18244     0DF8                     i1l5888:
 18245     0DF8  353D               	lslf	i1___fladd@b+3,w
 18246     0DF9  00CC               	movwf	i1___fladd@bexp
 18247     0DFA                     i1l5890:
 18248     0DFA  1FBC               	btfss	i1___fladd@b+2,7
 18249     0DFB  2DFD               	goto	u622_21
 18250     0DFC  2DFE               	goto	u622_20
 18251     0DFD                     u622_21:
 18252     0DFD  2DFF               	goto	i1l5894
 18253     0DFE                     u622_20:
 18254     0DFE                     i1l5892:
 18255     0DFE  144C               	bsf	i1___fladd@bexp,0
 18256     0DFF                     i1l5894:
 18257     0DFF  084C               	movf	i1___fladd@bexp,w
 18258     0E00  1903               	btfsc	3,2
 18259     0E01  2E03               	goto	u623_21
 18260     0E02  2E04               	goto	u623_20
 18261     0E03                     u623_21:
 18262     0E03  2E14               	goto	i1l5904
 18263     0E04                     u623_20:
 18264     0E04                     i1l5896:
 18265     0E04  0A4C               	incf	i1___fladd@bexp,w
 18266     0E05  1D03               	btfss	3,2
 18267     0E06  2E08               	goto	u624_21
 18268     0E07  2E09               	goto	u624_20
 18269     0E08                     u624_21:
 18270     0E08  2E11               	goto	i1l5900
 18271     0E09                     u624_20:
 18272     0E09                     i1l5898:
 18273     0E09  3000               	movlw	0
 18274     0E0A  00BD               	movwf	i1___fladd@b+3
 18275     0E0B  3000               	movlw	0
 18276     0E0C  00BC               	movwf	i1___fladd@b+2
 18277     0E0D  3000               	movlw	0
 18278     0E0E  00BB               	movwf	i1___fladd@b+1
 18279     0E0F  3000               	movlw	0
 18280     0E10  00BA               	movwf	i1___fladd@b
 18281     0E11                     i1l5900:
 18282     0E11  17BC               	bsf	i1___fladd@b+2,7
 18283     0E12                     i1l5902:
 18284     0E12  01BD               	clrf	i1___fladd@b+3
 18285     0E13  2E1C               	goto	i1l5906
 18286     0E14                     i1l5904:
 18287     0E14  3000               	movlw	0
 18288     0E15  00BD               	movwf	i1___fladd@b+3
 18289     0E16  3000               	movlw	0
 18290     0E17  00BC               	movwf	i1___fladd@b+2
 18291     0E18  3000               	movlw	0
 18292     0E19  00BB               	movwf	i1___fladd@b+1
 18293     0E1A  3000               	movlw	0
 18294     0E1B  00BA               	movwf	i1___fladd@b
 18295     0E1C                     i1l5906:
 18296     0E1C  0841               	movf	i1___fladd@a+3,w
 18297     0E1D  3980               	andlw	128
 18298     0E1E  00CB               	movwf	i1___fladd@aexp
 18299     0E1F                     i1l5908:
 18300     0E1F  084B               	movf	i1___fladd@aexp,w
 18301     0E20  064A               	xorwf	i1___fladd@signs,w
 18302     0E21  1903               	skipnz
 18303     0E22  2E24               	goto	u625_21
 18304     0E23  2E25               	goto	u625_20
 18305     0E24                     u625_21:
 18306     0E24  2E26               	goto	i1l5912
 18307     0E25                     u625_20:
 18308     0E25                     i1l5910:
 18309     0E25  174A               	bsf	i1___fladd@signs,6
 18310     0E26                     i1l5912:
 18311     0E26  3541               	lslf	i1___fladd@a+3,w
 18312     0E27  00CB               	movwf	i1___fladd@aexp
 18313     0E28                     i1l5914:
 18314     0E28  1FC0               	btfss	i1___fladd@a+2,7
 18315     0E29  2E2B               	goto	u626_21
 18316     0E2A  2E2C               	goto	u626_20
 18317     0E2B                     u626_21:
 18318     0E2B  2E2D               	goto	i1l5918
 18319     0E2C                     u626_20:
 18320     0E2C                     i1l5916:
 18321     0E2C  144B               	bsf	i1___fladd@aexp,0
 18322     0E2D                     i1l5918:
 18323     0E2D  084B               	movf	i1___fladd@aexp,w
 18324     0E2E  1903               	btfsc	3,2
 18325     0E2F  2E31               	goto	u627_21
 18326     0E30  2E32               	goto	u627_20
 18327     0E31                     u627_21:
 18328     0E31  2E42               	goto	i1l5928
 18329     0E32                     u627_20:
 18330     0E32                     i1l5920:
 18331     0E32  0A4B               	incf	i1___fladd@aexp,w
 18332     0E33  1D03               	btfss	3,2
 18333     0E34  2E36               	goto	u628_21
 18334     0E35  2E37               	goto	u628_20
 18335     0E36                     u628_21:
 18336     0E36  2E3F               	goto	i1l5924
 18337     0E37                     u628_20:
 18338     0E37                     i1l5922:
 18339     0E37  3000               	movlw	0
 18340     0E38  00C1               	movwf	i1___fladd@a+3
 18341     0E39  3000               	movlw	0
 18342     0E3A  00C0               	movwf	i1___fladd@a+2
 18343     0E3B  3000               	movlw	0
 18344     0E3C  00BF               	movwf	i1___fladd@a+1
 18345     0E3D  3000               	movlw	0
 18346     0E3E  00BE               	movwf	i1___fladd@a
 18347     0E3F                     i1l5924:
 18348     0E3F  17C0               	bsf	i1___fladd@a+2,7
 18349     0E40                     i1l5926:
 18350     0E40  01C1               	clrf	i1___fladd@a+3
 18351     0E41  2E4A               	goto	i1l1739
 18352     0E42                     i1l5928:
 18353     0E42  3000               	movlw	0
 18354     0E43  00C1               	movwf	i1___fladd@a+3
 18355     0E44  3000               	movlw	0
 18356     0E45  00C0               	movwf	i1___fladd@a+2
 18357     0E46  3000               	movlw	0
 18358     0E47  00BF               	movwf	i1___fladd@a+1
 18359     0E48  3000               	movlw	0
 18360     0E49  00BE               	movwf	i1___fladd@a
 18361     0E4A                     i1l1739:
 18362     0E4A  084C               	movf	i1___fladd@bexp,w
 18363     0E4B  024B               	subwf	i1___fladd@aexp,w
 18364     0E4C  1803               	skipnc
 18365     0E4D  2E4F               	goto	u629_21
 18366     0E4E  2E50               	goto	u629_20
 18367     0E4F                     u629_21:
 18368     0E4F  2E74               	goto	i1l5964
 18369     0E50                     u629_20:
 18370     0E50                     i1l5930:
 18371     0E50  1F4A               	btfss	i1___fladd@signs,6
 18372     0E51  2E53               	goto	u630_21
 18373     0E52  2E54               	goto	u630_20
 18374     0E53                     u630_21:
 18375     0E53  2E56               	goto	i1l5934
 18376     0E54                     u630_20:
 18377     0E54                     i1l5932:
 18378     0E54  3080               	movlw	128
 18379     0E55  06CA               	xorwf	i1___fladd@signs,f
 18380     0E56                     i1l5934:
 18381     0E56  084C               	movf	i1___fladd@bexp,w
 18382     0E57  00CD               	movwf	i1___fladd@grs
 18383     0E58                     i1l5936:
 18384     0E58  084B               	movf	i1___fladd@aexp,w
 18385     0E59  00CC               	movwf	i1___fladd@bexp
 18386     0E5A                     i1l5938:
 18387     0E5A  084D               	movf	i1___fladd@grs,w
 18388     0E5B  00CB               	movwf	i1___fladd@aexp
 18389     0E5C                     i1l5940:
 18390     0E5C  083A               	movf	i1___fladd@b,w
 18391     0E5D  00CD               	movwf	i1___fladd@grs
 18392     0E5E                     i1l5942:
 18393     0E5E  083E               	movf	i1___fladd@a,w
 18394     0E5F  00BA               	movwf	i1___fladd@b
 18395     0E60                     i1l5944:
 18396     0E60  084D               	movf	i1___fladd@grs,w
 18397     0E61  00BE               	movwf	i1___fladd@a
 18398     0E62                     i1l5946:
 18399     0E62  083B               	movf	i1___fladd@b+1,w
 18400     0E63  00CD               	movwf	i1___fladd@grs
 18401     0E64                     i1l5948:
 18402     0E64  083F               	movf	i1___fladd@a+1,w
 18403     0E65  00BB               	movwf	i1___fladd@b+1
 18404     0E66                     i1l5950:
 18405     0E66  084D               	movf	i1___fladd@grs,w
 18406     0E67  00BF               	movwf	i1___fladd@a+1
 18407     0E68                     i1l5952:
 18408     0E68  083C               	movf	i1___fladd@b+2,w
 18409     0E69  00CD               	movwf	i1___fladd@grs
 18410     0E6A                     i1l5954:
 18411     0E6A  0840               	movf	i1___fladd@a+2,w
 18412     0E6B  00BC               	movwf	i1___fladd@b+2
 18413     0E6C                     i1l5956:
 18414     0E6C  084D               	movf	i1___fladd@grs,w
 18415     0E6D  00C0               	movwf	i1___fladd@a+2
 18416     0E6E                     i1l5958:
 18417     0E6E  083D               	movf	i1___fladd@b+3,w
 18418     0E6F  00CD               	movwf	i1___fladd@grs
 18419     0E70                     i1l5960:
 18420     0E70  0841               	movf	i1___fladd@a+3,w
 18421     0E71  00BD               	movwf	i1___fladd@b+3
 18422     0E72                     i1l5962:
 18423     0E72  084D               	movf	i1___fladd@grs,w
 18424     0E73  00C1               	movwf	i1___fladd@a+3
 18425     0E74                     i1l5964:
 18426     0E74  01CD               	clrf	i1___fladd@grs
 18427     0E75                     i1l5966:
 18428     0E75  084B               	movf	i1___fladd@aexp,w
 18429     0E76  00C2               	movwf	??i1___fladd
 18430     0E77  01C3               	clrf	??i1___fladd+1
 18431     0E78  0843               	movf	??i1___fladd+1,w
 18432     0E79  00C5               	movwf	??i1___fladd+3
 18433     0E7A  084C               	movf	i1___fladd@bexp,w
 18434     0E7B  0242               	subwf	??i1___fladd,w
 18435     0E7C  00C4               	movwf	??i1___fladd+2
 18436     0E7D  1C03               	skipc
 18437     0E7E  03C5               	decf	??i1___fladd+3,f
 18438     0E7F  0845               	movf	??i1___fladd+3,w
 18439     0E80  3A80               	xorlw	128
 18440     0E81  00C6               	movwf	??i1___fladd+4
 18441     0E82  3080               	movlw	128
 18442     0E83  0246               	subwf	??i1___fladd+4,w
 18443     0E84  1D03               	skipz
 18444     0E85  2E88               	goto	u631_25
 18445     0E86  301A               	movlw	26
 18446     0E87  0244               	subwf	??i1___fladd+2,w
 18447     0E88                     u631_25:
 18448     0E88  1C03               	skipc
 18449     0E89  2E8B               	goto	u631_21
 18450     0E8A  2E8C               	goto	u631_20
 18451     0E8B                     u631_21:
 18452     0E8B  2EC2               	goto	i1l5982
 18453     0E8C                     u631_20:
 18454     0E8C                     i1l5968:
 18455     0E8C  0020               	movlb	0	; select bank0
 18456     0E8D  083D               	movf	i1___fladd@b+3,w
 18457     0E8E  043C               	iorwf	i1___fladd@b+2,w
 18458     0E8F  043B               	iorwf	i1___fladd@b+1,w
 18459     0E90  043A               	iorwf	i1___fladd@b,w
 18460     0E91  1D03               	skipz
 18461     0E92  2E94               	goto	u632_21
 18462     0E93  2E96               	goto	u632_20
 18463     0E94                     u632_21:
 18464     0E94  3001               	movlw	1
 18465     0E95  2E97               	goto	u633_20
 18466     0E96                     u632_20:
 18467     0E96  3000               	movlw	0
 18468     0E97                     u633_20:
 18469     0E97  00CD               	movwf	i1___fladd@grs
 18470     0E98  3000               	movlw	0
 18471     0E99  00BD               	movwf	i1___fladd@b+3
 18472     0E9A  3000               	movlw	0
 18473     0E9B  00BC               	movwf	i1___fladd@b+2
 18474     0E9C  3000               	movlw	0
 18475     0E9D  00BB               	movwf	i1___fladd@b+1
 18476     0E9E  3000               	movlw	0
 18477     0E9F  00BA               	movwf	i1___fladd@b
 18478     0EA0  084B               	movf	i1___fladd@aexp,w
 18479     0EA1  00CC               	movwf	i1___fladd@bexp
 18480     0EA2  2EC9               	goto	i1l1743
 18481     0EA3                     i1l1745:
 18482     0EA3  1C4D               	btfss	i1___fladd@grs,0
 18483     0EA4  2EA6               	goto	u634_21
 18484     0EA5  2EA7               	goto	u634_20
 18485     0EA6                     u634_21:
 18486     0EA6  2EB1               	goto	i1l5972
 18487     0EA7                     u634_20:
 18488     0EA7                     i1l5970:
 18489     0EA7  084D               	movf	i1___fladd@grs,w
 18490     0EA8  00C2               	movwf	??i1___fladd
 18491     0EA9  3001               	movlw	1
 18492     0EAA                     u635_25:
 18493     0EAA  36C2               	lsrf	??i1___fladd,f
 18494     0EAB  0B89               	decfsz	9,f
 18495     0EAC  2EAA               	goto	u635_25
 18496     0EAD  0842               	movf	??i1___fladd,w
 18497     0EAE  3801               	iorlw	1
 18498     0EAF  00CD               	movwf	i1___fladd@grs
 18499     0EB0  2EB3               	goto	i1l5974
 18500     0EB1                     i1l5972:
 18501     0EB1  1003               	clrc
 18502     0EB2  0CCD               	rrf	i1___fladd@grs,f
 18503     0EB3                     i1l5974:
 18504     0EB3  1C3A               	btfss	i1___fladd@b,0
 18505     0EB4  2EB6               	goto	u636_21
 18506     0EB5  2EB7               	goto	u636_20
 18507     0EB6                     u636_21:
 18508     0EB6  2EB8               	goto	i1l5978
 18509     0EB7                     u636_20:
 18510     0EB7                     i1l5976:
 18511     0EB7  17CD               	bsf	i1___fladd@grs,7
 18512     0EB8                     i1l5978:
 18513     0EB8  3001               	movlw	1
 18514     0EB9  00C2               	movwf	??i1___fladd
 18515     0EBA                     u637_25:
 18516     0EBA  37BD               	asrf	i1___fladd@b+3,f
 18517     0EBB  0CBC               	rrf	i1___fladd@b+2,f
 18518     0EBC  0CBB               	rrf	i1___fladd@b+1,f
 18519     0EBD  0CBA               	rrf	i1___fladd@b,f
 18520     0EBE  0BC2               	decfsz	??i1___fladd& (0+127),f
 18521     0EBF  2EBA               	goto	u637_25
 18522     0EC0                     i1l5980:
 18523     0EC0  3001               	movlw	1
 18524     0EC1  07CC               	addwf	i1___fladd@bexp,f
 18525     0EC2                     i1l5982:
 18526     0EC2  0020               	movlb	0	; select bank0
 18527     0EC3  084B               	movf	i1___fladd@aexp,w
 18528     0EC4  024C               	subwf	i1___fladd@bexp,w
 18529     0EC5  1C03               	skipc
 18530     0EC6  2EC8               	goto	u638_21
 18531     0EC7  2EC9               	goto	u638_20
 18532     0EC8                     u638_21:
 18533     0EC8  2EA3               	goto	i1l1745
 18534     0EC9                     u638_20:
 18535     0EC9                     i1l1743:
 18536     0EC9  1B4A               	btfsc	i1___fladd@signs,6
 18537     0ECA  2ECC               	goto	u639_21
 18538     0ECB  2ECD               	goto	u639_20
 18539     0ECC                     u639_21:
 18540     0ECC  2F07               	goto	i1l6008
 18541     0ECD                     u639_20:
 18542     0ECD                     i1l5984:
 18543     0ECD  084C               	movf	i1___fladd@bexp,w
 18544     0ECE  1D03               	btfss	3,2
 18545     0ECF  2ED1               	goto	u640_21
 18546     0ED0  2ED2               	goto	u640_20
 18547     0ED1                     u640_21:
 18548     0ED1  2EDB               	goto	i1l5990
 18549     0ED2                     u640_20:
 18550     0ED2                     i1l5986:
 18551     0ED2  3000               	movlw	0
 18552     0ED3  00BD               	movwf	?i1___fladd+3
 18553     0ED4  3000               	movlw	0
 18554     0ED5  00BC               	movwf	?i1___fladd+2
 18555     0ED6  3000               	movlw	0
 18556     0ED7  00BB               	movwf	?i1___fladd+1
 18557     0ED8  3000               	movlw	0
 18558     0ED9  00BA               	movwf	?i1___fladd
 18559     0EDA  2FFF               	goto	i1l1752
 18560     0EDB                     i1l5990:
 18561     0EDB  083E               	movf	i1___fladd@a,w
 18562     0EDC  07BA               	addwf	i1___fladd@b,f
 18563     0EDD  083F               	movf	i1___fladd@a+1,w
 18564     0EDE  3DBB               	addwfc	i1___fladd@b+1,f
 18565     0EDF  0840               	movf	i1___fladd@a+2,w
 18566     0EE0  3DBC               	addwfc	i1___fladd@b+2,f
 18567     0EE1  0841               	movf	i1___fladd@a+3,w
 18568     0EE2  3DBD               	addwfc	i1___fladd@b+3,f
 18569     0EE3                     i1l5992:
 18570     0EE3  1C3D               	btfss	i1___fladd@b+3,0
 18571     0EE4  2EE6               	goto	u641_21
 18572     0EE5  2EE7               	goto	u641_20
 18573     0EE6                     u641_21:
 18574     0EE6  2F91               	goto	i1l6044
 18575     0EE7                     u641_20:
 18576     0EE7                     i1l5994:
 18577     0EE7  1C4D               	btfss	i1___fladd@grs,0
 18578     0EE8  2EEA               	goto	u642_21
 18579     0EE9  2EEB               	goto	u642_20
 18580     0EEA                     u642_21:
 18581     0EEA  2EF5               	goto	i1l5998
 18582     0EEB                     u642_20:
 18583     0EEB                     i1l5996:
 18584     0EEB  084D               	movf	i1___fladd@grs,w
 18585     0EEC  00C2               	movwf	??i1___fladd
 18586     0EED  3001               	movlw	1
 18587     0EEE                     u643_25:
 18588     0EEE  36C2               	lsrf	??i1___fladd,f
 18589     0EEF  0B89               	decfsz	9,f
 18590     0EF0  2EEE               	goto	u643_25
 18591     0EF1  0842               	movf	??i1___fladd,w
 18592     0EF2  3801               	iorlw	1
 18593     0EF3  00CD               	movwf	i1___fladd@grs
 18594     0EF4  2EF7               	goto	i1l6000
 18595     0EF5                     i1l5998:
 18596     0EF5  1003               	clrc
 18597     0EF6  0CCD               	rrf	i1___fladd@grs,f
 18598     0EF7                     i1l6000:
 18599     0EF7  1C3A               	btfss	i1___fladd@b,0
 18600     0EF8  2EFA               	goto	u644_21
 18601     0EF9  2EFB               	goto	u644_20
 18602     0EFA                     u644_21:
 18603     0EFA  2EFC               	goto	i1l6004
 18604     0EFB                     u644_20:
 18605     0EFB                     i1l6002:
 18606     0EFB  17CD               	bsf	i1___fladd@grs,7
 18607     0EFC                     i1l6004:
 18608     0EFC  3001               	movlw	1
 18609     0EFD  00C2               	movwf	??i1___fladd
 18610     0EFE                     u645_25:
 18611     0EFE  37BD               	asrf	i1___fladd@b+3,f
 18612     0EFF  0CBC               	rrf	i1___fladd@b+2,f
 18613     0F00  0CBB               	rrf	i1___fladd@b+1,f
 18614     0F01  0CBA               	rrf	i1___fladd@b,f
 18615     0F02  0BC2               	decfsz	??i1___fladd& (0+127),f
 18616     0F03  2EFE               	goto	u645_25
 18617     0F04                     i1l6006:
 18618     0F04  3001               	movlw	1
 18619     0F05  07CC               	addwf	i1___fladd@bexp,f
 18620     0F06  2F91               	goto	i1l6044
 18621     0F07                     i1l6008:
 18622     0F07  083D               	movf	i1___fladd@b+3,w
 18623     0F08  3A80               	xorlw	128
 18624     0F09  00C2               	movwf	??i1___fladd
 18625     0F0A  0841               	movf	i1___fladd@a+3,w
 18626     0F0B  3A80               	xorlw	128
 18627     0F0C  0242               	subwf	??i1___fladd,w
 18628     0F0D  1D03               	skipz
 18629     0F0E  2F19               	goto	u646_23
 18630     0F0F  0840               	movf	i1___fladd@a+2,w
 18631     0F10  023C               	subwf	i1___fladd@b+2,w
 18632     0F11  1D03               	skipz
 18633     0F12  2F19               	goto	u646_23
 18634     0F13  083F               	movf	i1___fladd@a+1,w
 18635     0F14  023B               	subwf	i1___fladd@b+1,w
 18636     0F15  1D03               	skipz
 18637     0F16  2F19               	goto	u646_23
 18638     0F17  083E               	movf	i1___fladd@a,w
 18639     0F18  023A               	subwf	i1___fladd@b,w
 18640     0F19                     u646_23:
 18641     0F19  1803               	skipnc
 18642     0F1A  2F1C               	goto	u646_21
 18643     0F1B  2F1D               	goto	u646_20
 18644     0F1C                     u646_21:
 18645     0F1C  2F52               	goto	i1l6020
 18646     0F1D                     u646_20:
 18647     0F1D                     i1l6010:
 18648     0F1D  30FF               	movlw	255
 18649     0F1E  00C2               	movwf	??i1___fladd
 18650     0F1F  30FF               	movlw	255
 18651     0F20  00C3               	movwf	??i1___fladd+1
 18652     0F21  30FF               	movlw	255
 18653     0F22  00C4               	movwf	??i1___fladd+2
 18654     0F23  30FF               	movlw	255
 18655     0F24  00C5               	movwf	??i1___fladd+3
 18656     0F25  083A               	movf	i1___fladd@b,w
 18657     0F26  023E               	subwf	i1___fladd@a,w
 18658     0F27  00C6               	movwf	??i1___fladd+4
 18659     0F28  083B               	movf	i1___fladd@b+1,w
 18660     0F29  3B3F               	subwfb	i1___fladd@a+1,w
 18661     0F2A  00C7               	movwf	??i1___fladd+5
 18662     0F2B  083C               	movf	i1___fladd@b+2,w
 18663     0F2C  3B40               	subwfb	i1___fladd@a+2,w
 18664     0F2D  00C8               	movwf	??i1___fladd+6
 18665     0F2E  083D               	movf	i1___fladd@b+3,w
 18666     0F2F  3B41               	subwfb	i1___fladd@a+3,w
 18667     0F30  00C9               	movwf	??i1___fladd+7
 18668     0F31  0846               	movf	??i1___fladd+4,w
 18669     0F32  07C2               	addwf	??i1___fladd,f
 18670     0F33  0847               	movf	??i1___fladd+5,w
 18671     0F34  3DC3               	addwfc	??i1___fladd+1,f
 18672     0F35  0848               	movf	??i1___fladd+6,w
 18673     0F36  3DC4               	addwfc	??i1___fladd+2,f
 18674     0F37  0849               	movf	??i1___fladd+7,w
 18675     0F38  3DC5               	addwfc	??i1___fladd+3,f
 18676     0F39  0845               	movf	??i1___fladd+3,w
 18677     0F3A  00BD               	movwf	i1___fladd@b+3
 18678     0F3B  0844               	movf	??i1___fladd+2,w
 18679     0F3C  00BC               	movwf	i1___fladd@b+2
 18680     0F3D  0843               	movf	??i1___fladd+1,w
 18681     0F3E  00BB               	movwf	i1___fladd@b+1
 18682     0F3F  0842               	movf	??i1___fladd,w
 18683     0F40  00BA               	movwf	i1___fladd@b
 18684     0F41                     i1l6012:
 18685     0F41  3080               	movlw	128
 18686     0F42  06CA               	xorwf	i1___fladd@signs,f
 18687     0F43                     i1l6014:
 18688     0F43  034D               	decf	i1___fladd@grs,w
 18689     0F44  3AFF               	xorlw	255
 18690     0F45  00CD               	movwf	i1___fladd@grs
 18691     0F46                     i1l6016:
 18692     0F46  084D               	movf	i1___fladd@grs,w
 18693     0F47  1D03               	btfss	3,2
 18694     0F48  2F4A               	goto	u647_21
 18695     0F49  2F4B               	goto	u647_20
 18696     0F4A                     u647_21:
 18697     0F4A  2F5A               	goto	i1l1760
 18698     0F4B                     u647_20:
 18699     0F4B                     i1l6018:
 18700     0F4B  3001               	movlw	1
 18701     0F4C  07BA               	addwf	i1___fladd@b,f
 18702     0F4D  3000               	movlw	0
 18703     0F4E  3DBB               	addwfc	i1___fladd@b+1,f
 18704     0F4F  3DBC               	addwfc	i1___fladd@b+2,f
 18705     0F50  3DBD               	addwfc	i1___fladd@b+3,f
 18706     0F51  2F5A               	goto	i1l1760
 18707     0F52                     i1l6020:
 18708     0F52  083E               	movf	i1___fladd@a,w
 18709     0F53  02BA               	subwf	i1___fladd@b,f
 18710     0F54  083F               	movf	i1___fladd@a+1,w
 18711     0F55  3BBB               	subwfb	i1___fladd@b+1,f
 18712     0F56  0840               	movf	i1___fladd@a+2,w
 18713     0F57  3BBC               	subwfb	i1___fladd@b+2,f
 18714     0F58  0841               	movf	i1___fladd@a+3,w
 18715     0F59  3BBD               	subwfb	i1___fladd@b+3,f
 18716     0F5A                     i1l1760:
 18717     0F5A  083D               	movf	i1___fladd@b+3,w
 18718     0F5B  043C               	iorwf	i1___fladd@b+2,w
 18719     0F5C  043B               	iorwf	i1___fladd@b+1,w
 18720     0F5D  043A               	iorwf	i1___fladd@b,w
 18721     0F5E  1D03               	skipz
 18722     0F5F  2F61               	goto	u648_21
 18723     0F60  2F62               	goto	u648_20
 18724     0F61                     u648_21:
 18725     0F61  2F8D               	goto	i1l6042
 18726     0F62                     u648_20:
 18727     0F62                     i1l6022:
 18728     0F62  084D               	movf	i1___fladd@grs,w
 18729     0F63  1D03               	btfss	3,2
 18730     0F64  2F66               	goto	u649_21
 18731     0F65  2F67               	goto	u649_20
 18732     0F66                     u649_21:
 18733     0F66  2F8D               	goto	i1l6042
 18734     0F67                     u649_20:
 18735     0F67                     i1l6024:
 18736     0F67  3000               	movlw	0
 18737     0F68  00BD               	movwf	?i1___fladd+3
 18738     0F69  3000               	movlw	0
 18739     0F6A  00BC               	movwf	?i1___fladd+2
 18740     0F6B  3000               	movlw	0
 18741     0F6C  00BB               	movwf	?i1___fladd+1
 18742     0F6D  3000               	movlw	0
 18743     0F6E  00BA               	movwf	?i1___fladd
 18744     0F6F  2FFF               	goto	i1l1752
 18745     0F70                     i1l6028:
 18746     0F70  3001               	movlw	1
 18747     0F71                     u650_25:
 18748     0F71  35BA               	lslf	i1___fladd@b,f
 18749     0F72  0DBB               	rlf	i1___fladd@b+1,f
 18750     0F73  0DBC               	rlf	i1___fladd@b+2,f
 18751     0F74  0DBD               	rlf	i1___fladd@b+3,f
 18752     0F75  0B89               	decfsz	9,f
 18753     0F76  2F71               	goto	u650_25
 18754     0F77                     i1l6030:
 18755     0F77  1FCD               	btfss	i1___fladd@grs,7
 18756     0F78  2F7A               	goto	u651_21
 18757     0F79  2F7B               	goto	u651_20
 18758     0F7A                     u651_21:
 18759     0F7A  2F7C               	goto	i1l1764
 18760     0F7B                     u651_20:
 18761     0F7B                     i1l6032:
 18762     0F7B  143A               	bsf	i1___fladd@b,0
 18763     0F7C                     i1l1764:
 18764     0F7C  1C4D               	btfss	i1___fladd@grs,0
 18765     0F7D  2F7F               	goto	u652_21
 18766     0F7E  2F80               	goto	u652_20
 18767     0F7F                     u652_21:
 18768     0F7F  2F84               	goto	i1l6036
 18769     0F80                     u652_20:
 18770     0F80                     i1l6034:
 18771     0F80  1403               	setc
 18772     0F81  0D4D               	rlf	i1___fladd@grs,w
 18773     0F82  00CD               	movwf	i1___fladd@grs
 18774     0F83  2F86               	goto	i1l6038
 18775     0F84                     i1l6036:
 18776     0F84  1003               	clrc
 18777     0F85  0DCD               	rlf	i1___fladd@grs,f
 18778     0F86                     i1l6038:
 18779     0F86  084C               	movf	i1___fladd@bexp,w
 18780     0F87  1903               	btfsc	3,2
 18781     0F88  2F8A               	goto	u653_21
 18782     0F89  2F8B               	goto	u653_20
 18783     0F8A                     u653_21:
 18784     0F8A  2F8D               	goto	i1l6042
 18785     0F8B                     u653_20:
 18786     0F8B                     i1l6040:
 18787     0F8B  3001               	movlw	1
 18788     0F8C  02CC               	subwf	i1___fladd@bexp,f
 18789     0F8D                     i1l6042:
 18790     0F8D  1FBC               	btfss	i1___fladd@b+2,7
 18791     0F8E  2F90               	goto	u654_21
 18792     0F8F  2F91               	goto	u654_20
 18793     0F90                     u654_21:
 18794     0F90  2F70               	goto	i1l6028
 18795     0F91                     u654_20:
 18796     0F91                     i1l6044:
 18797     0F91  01CB               	clrf	i1___fladd@aexp
 18798     0F92                     i1l6046:
 18799     0F92  1FCD               	btfss	i1___fladd@grs,7
 18800     0F93  2F95               	goto	u655_21
 18801     0F94  2F96               	goto	u655_20
 18802     0F95                     u655_21:
 18803     0F95  2FA4               	goto	i1l6054
 18804     0F96                     u655_20:
 18805     0F96                     i1l6048:
 18806     0F96  084D               	movf	i1___fladd@grs,w
 18807     0F97  397F               	andlw	127
 18808     0F98  1903               	btfsc	3,2
 18809     0F99  2F9B               	goto	u656_21
 18810     0F9A  2F9C               	goto	u656_20
 18811     0F9B                     u656_21:
 18812     0F9B  2F9F               	goto	i1l1770
 18813     0F9C                     u656_20:
 18814     0F9C                     i1l6050:
 18815     0F9C  3001               	movlw	1
 18816     0F9D  00CB               	movwf	i1___fladd@aexp
 18817     0F9E  2FA4               	goto	i1l6054
 18818     0F9F                     i1l1770:
 18819     0F9F  1C3A               	btfss	i1___fladd@b,0
 18820     0FA0  2FA2               	goto	u657_21
 18821     0FA1  2FA3               	goto	u657_20
 18822     0FA2                     u657_21:
 18823     0FA2  2FA4               	goto	i1l6054
 18824     0FA3                     u657_20:
 18825     0FA3  2F9C               	goto	i1l6050
 18826     0FA4                     i1l6054:
 18827     0FA4  084B               	movf	i1___fladd@aexp,w
 18828     0FA5  1903               	btfsc	3,2
 18829     0FA6  2FA8               	goto	u658_21
 18830     0FA7  2FA9               	goto	u658_20
 18831     0FA8                     u658_21:
 18832     0FA8  2FD2               	goto	i1l1773
 18833     0FA9                     u658_20:
 18834     0FA9                     i1l6056:
 18835     0FA9  3001               	movlw	1
 18836     0FAA  07BA               	addwf	i1___fladd@b,f
 18837     0FAB  3000               	movlw	0
 18838     0FAC  3DBB               	addwfc	i1___fladd@b+1,f
 18839     0FAD  3DBC               	addwfc	i1___fladd@b+2,f
 18840     0FAE  3DBD               	addwfc	i1___fladd@b+3,f
 18841     0FAF                     i1l6058:
 18842     0FAF  1C3D               	btfss	i1___fladd@b+3,0
 18843     0FB0  2FB2               	goto	u659_21
 18844     0FB1  2FB3               	goto	u659_20
 18845     0FB2                     u659_21:
 18846     0FB2  2FD2               	goto	i1l1773
 18847     0FB3                     u659_20:
 18848     0FB3                     i1l6060:
 18849     0FB3  083A               	movf	i1___fladd@b,w
 18850     0FB4  00C2               	movwf	??i1___fladd
 18851     0FB5  083B               	movf	i1___fladd@b+1,w
 18852     0FB6  00C3               	movwf	??i1___fladd+1
 18853     0FB7  083C               	movf	i1___fladd@b+2,w
 18854     0FB8  00C4               	movwf	??i1___fladd+2
 18855     0FB9  083D               	movf	i1___fladd@b+3,w
 18856     0FBA  00C5               	movwf	??i1___fladd+3
 18857     0FBB  3001               	movlw	1
 18858     0FBC  00C6               	movwf	??i1___fladd+4
 18859     0FBD                     u660_25:
 18860     0FBD  37C5               	asrf	??i1___fladd+3,f
 18861     0FBE  0CC4               	rrf	??i1___fladd+2,f
 18862     0FBF  0CC3               	rrf	??i1___fladd+1,f
 18863     0FC0  0CC2               	rrf	??i1___fladd,f
 18864     0FC1                     u660_20:
 18865     0FC1  0BC6               	decfsz	??i1___fladd+4,f
 18866     0FC2  2FBD               	goto	u660_25
 18867     0FC3  0845               	movf	??i1___fladd+3,w
 18868     0FC4  00BD               	movwf	i1___fladd@b+3
 18869     0FC5  0844               	movf	??i1___fladd+2,w
 18870     0FC6  00BC               	movwf	i1___fladd@b+2
 18871     0FC7  0843               	movf	??i1___fladd+1,w
 18872     0FC8  00BB               	movwf	i1___fladd@b+1
 18873     0FC9  0842               	movf	??i1___fladd,w
 18874     0FCA  00BA               	movwf	i1___fladd@b
 18875     0FCB  0A4C               	incf	i1___fladd@bexp,w
 18876     0FCC  1903               	btfsc	3,2
 18877     0FCD  2FCF               	goto	u661_21
 18878     0FCE  2FD0               	goto	u661_20
 18879     0FCF                     u661_21:
 18880     0FCF  2FD2               	goto	i1l1773
 18881     0FD0                     u661_20:
 18882     0FD0                     i1l6062:
 18883     0FD0  3001               	movlw	1
 18884     0FD1  07CC               	addwf	i1___fladd@bexp,f
 18885     0FD2                     i1l1773:
 18886     0FD2  0A4C               	incf	i1___fladd@bexp,w
 18887     0FD3  1903               	btfsc	3,2
 18888     0FD4  2FD6               	goto	u662_21
 18889     0FD5  2FD7               	goto	u662_20
 18890     0FD6                     u662_21:
 18891     0FD6  2FDC               	goto	i1l6066
 18892     0FD7                     u662_20:
 18893     0FD7                     i1l6064:
 18894     0FD7  084C               	movf	i1___fladd@bexp,w
 18895     0FD8  1D03               	btfss	3,2
 18896     0FD9  2FDB               	goto	u663_21
 18897     0FDA  2FDC               	goto	u663_20
 18898     0FDB                     u663_21:
 18899     0FDB  2FEA               	goto	i1l6072
 18900     0FDC                     u663_20:
 18901     0FDC                     i1l6066:
 18902     0FDC  3000               	movlw	0
 18903     0FDD  00BD               	movwf	i1___fladd@b+3
 18904     0FDE  3000               	movlw	0
 18905     0FDF  00BC               	movwf	i1___fladd@b+2
 18906     0FE0  3000               	movlw	0
 18907     0FE1  00BB               	movwf	i1___fladd@b+1
 18908     0FE2  3000               	movlw	0
 18909     0FE3  00BA               	movwf	i1___fladd@b
 18910     0FE4                     i1l6068:
 18911     0FE4  084C               	movf	i1___fladd@bexp,w
 18912     0FE5  1D03               	btfss	3,2
 18913     0FE6  2FE8               	goto	u664_21
 18914     0FE7  2FE9               	goto	u664_20
 18915     0FE8                     u664_21:
 18916     0FE8  2FEA               	goto	i1l6072
 18917     0FE9                     u664_20:
 18918     0FE9                     i1l6070:
 18919     0FE9  01CA               	clrf	i1___fladd@signs
 18920     0FEA                     i1l6072:
 18921     0FEA  1C4C               	btfss	i1___fladd@bexp,0
 18922     0FEB  2FED               	goto	u665_21
 18923     0FEC  2FEE               	goto	u665_20
 18924     0FED                     u665_21:
 18925     0FED  2FF0               	goto	i1l6076
 18926     0FEE                     u665_20:
 18927     0FEE                     i1l6074:
 18928     0FEE  17BC               	bsf	i1___fladd@b+2,7
 18929     0FEF  2FF2               	goto	i1l1781
 18930     0FF0                     i1l6076:
 18931     0FF0  307F               	movlw	127
 18932     0FF1  05BC               	andwf	i1___fladd@b+2,f
 18933     0FF2                     i1l1781:
 18934     0FF2  084C               	movf	i1___fladd@bexp,w
 18935     0FF3  00C2               	movwf	??i1___fladd
 18936     0FF4  3001               	movlw	1
 18937     0FF5                     u666_25:
 18938     0FF5  36C2               	lsrf	??i1___fladd,f
 18939     0FF6  0B89               	decfsz	9,f
 18940     0FF7  2FF5               	goto	u666_25
 18941     0FF8  0842               	movf	??i1___fladd,w
 18942     0FF9  00BD               	movwf	i1___fladd@b+3
 18943     0FFA                     i1l6078:
 18944     0FFA  1FCA               	btfss	i1___fladd@signs,7
 18945     0FFB  2FFD               	goto	u667_21
 18946     0FFC  2FFE               	goto	u667_20
 18947     0FFD                     u667_21:
 18948     0FFD  2FFF               	goto	i1l1782
 18949     0FFE                     u667_20:
 18950     0FFE                     i1l6080:
 18951     0FFE  17BD               	bsf	i1___fladd@b+3,7
 18952     0FFF                     i1l1782:
 18953     0FFF                     i1l1752:
 18954     0FFF  0008               	return
 18955     1000                     __end_ofi1___fladd:
 18956                           
 18957                           	psect	text64
 18958     1FEB                     __ptext64:	
 18959 ;; *************** function _pwm_fan_LoadDutyValue *****************
 18960 ;; Defined at:
 18961 ;;		line 63 in file "mcc_generated_files/pwm/src/pwm5.c"
 18962 ;; Parameters:    Size  Location     Type
 18963 ;;  dutyValue       2    0[COMMON] unsigned short 
 18964 ;; Auto vars:     Size  Location     Type
 18965 ;;		None
 18966 ;; Return value:  Size  Location     Type
 18967 ;;                  1    wreg      void 
 18968 ;; Registers used:
 18969 ;;		wreg, status,2, status,0
 18970 ;; Tracked objects:
 18971 ;;		On entry : 0/0
 18972 ;;		On exit  : 0/0
 18973 ;;		Unchanged: 0/0
 18974 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 18975 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18976 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18977 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18978 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18979 ;;Total ram usage:        4 bytes
 18980 ;; Hardware stack levels used: 1
 18981 ;; This function calls:
 18982 ;;		Nothing
 18983 ;; This function is called by:
 18984 ;;		_controller
 18985 ;; This function uses a non-reentrant model
 18986 ;;
 18987                           
 18988     1FEB                     _pwm_fan_LoadDutyValue:	
 18989                           ;psect for function _pwm_fan_LoadDutyValue
 18990                           
 18991     1FEB                     i1l5180:	
 18992                           ;incstack = 0
 18993                           ; Regs used in _pwm_fan_LoadDutyValue: [wreg+status,2+status,0]
 18994                           
 18995                           
 18996                           ;mcc_generated_files/pwm/src/pwm5.c: 63:  void pwm_fan_LoadDutyValue(uint16_t dutyValue)
      +                          ;mcc_generated_files/pwm/src/pwm5.c: 64:  {;mcc_generated_files/pwm/src/pwm5.c: 66:     
      +                           PWM5DCH = (uint8_t) ((dutyValue & 0x03FCu) >> 2);
 18997     1FEB  0871               	movf	pwm_fan_LoadDutyValue@dutyValue+1,w
 18998     1FEC  00F3               	movwf	??_pwm_fan_LoadDutyValue+1
 18999     1FED  0870               	movf	pwm_fan_LoadDutyValue@dutyValue,w
 19000     1FEE  00F2               	movwf	??_pwm_fan_LoadDutyValue
 19001     1FEF  36F3               	lsrf	??_pwm_fan_LoadDutyValue+1,f
 19002     1FF0  0CF2               	rrf	??_pwm_fan_LoadDutyValue,f
 19003     1FF1  36F3               	lsrf	??_pwm_fan_LoadDutyValue+1,f
 19004     1FF2  0CF2               	rrf	??_pwm_fan_LoadDutyValue,f
 19005     1FF3  0872               	movf	??_pwm_fan_LoadDutyValue,w
 19006     1FF4  002C               	movlb	12	; select bank12
 19007     1FF5  0098               	movwf	24	;volatile
 19008                           
 19009                           ;mcc_generated_files/pwm/src/pwm5.c: 69:      PWM5DCL = (uint8_t) ((dutyValue & 0x0003u)
      +                           << 6);
 19010     1FF6  0870               	movf	pwm_fan_LoadDutyValue@dutyValue,w
 19011     1FF7  3903               	andlw	3
 19012     1FF8  00F2               	movwf	??_pwm_fan_LoadDutyValue
 19013     1FF9  3006               	movlw	6
 19014     1FFA                     u483_25:
 19015     1FFA  35F2               	lslf	??_pwm_fan_LoadDutyValue,f
 19016     1FFB  0B89               	decfsz	9,f
 19017     1FFC  2FFA               	goto	u483_25
 19018     1FFD  0872               	movf	??_pwm_fan_LoadDutyValue,w
 19019     1FFE  0097               	movwf	23	;volatile
 19020     1FFF                     i1l72:
 19021     1FFF  0008               	return
 19022     2000                     __end_of_pwm_fan_LoadDutyValue:
 19023                           
 19024                           	psect	text65
 19025     1E47                     __ptext65:	
 19026 ;; *************** function _getHoogtesensor *****************
 19027 ;; Defined at:
 19028 ;;		line 33 in file "adcMeasurements.c"
 19029 ;; Parameters:    Size  Location     Type
 19030 ;;		None
 19031 ;; Auto vars:     Size  Location     Type
 19032 ;;		None
 19033 ;; Return value:  Size  Location     Type
 19034 ;;                  2    0[COMMON] unsigned short 
 19035 ;; Registers used:
 19036 ;;		wreg
 19037 ;; Tracked objects:
 19038 ;;		On entry : 0/0
 19039 ;;		On exit  : 0/0
 19040 ;;		Unchanged: 0/0
 19041 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 19042 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 19043 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 19044 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 19045 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 19046 ;;Total ram usage:        2 bytes
 19047 ;; Hardware stack levels used: 1
 19048 ;; This function calls:
 19049 ;;		Nothing
 19050 ;; This function is called by:
 19051 ;;		_controller
 19052 ;;		_printLogs
 19053 ;;		_position_led_strip
 19054 ;; This function uses a non-reentrant model
 19055 ;;
 19056                           
 19057     1E47                     _getHoogtesensor:	
 19058                           ;psect for function _getHoogtesensor
 19059                           
 19060     1E47                     i1l5222:	
 19061                           ;incstack = 0
 19062                           ; Regs used in _getHoogtesensor: [wreg]
 19063                           
 19064                           
 19065                           ;adcMeasurements.c: 34:     return ADC_hoogtesensor;
 19066     1E47  0022               	movlb	2	; select bank2
 19067     1E48  084D               	movf	(_ADC_hoogtesensor+1)^(0+256),w	;volatile
 19068     1E49  00F1               	movwf	?_getHoogtesensor+1
 19069     1E4A  084C               	movf	_ADC_hoogtesensor^(0+256),w	;volatile
 19070     1E4B  00F0               	movwf	?_getHoogtesensor
 19071     1E4C                     i1l830:
 19072     1E4C  0008               	return
 19073     1E4D                     __end_of_getHoogtesensor:
 19074                           
 19075                           	psect	text66
 19076     15DE                     __ptext66:	
 19077 ;; *************** function ___fltol *****************
 19078 ;; Defined at:
 19079 ;;		line 43 in file "C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\fltol.c"
 19080 ;; Parameters:    Size  Location     Type
 19081 ;;  f1              4   26[BANK0 ] unsigned short 
 19082 ;; Auto vars:     Size  Location     Type
 19083 ;;  exp1            1   35[BANK0 ] unsigned char 
 19084 ;;  sign1           1   34[BANK0 ] unsigned char 
 19085 ;; Return value:  Size  Location     Type
 19086 ;;                  4   26[BANK0 ] long 
 19087 ;; Registers used:
 19088 ;;		wreg, status,2, status,0
 19089 ;; Tracked objects:
 19090 ;;		On entry : 0/0
 19091 ;;		On exit  : 0/0
 19092 ;;		Unchanged: 0/0
 19093 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 19094 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
 19095 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 19096 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
 19097 ;;      Totals:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0
 19098 ;;Total ram usage:       10 bytes
 19099 ;; Hardware stack levels used: 1
 19100 ;; This function calls:
 19101 ;;		Nothing
 19102 ;; This function is called by:
 19103 ;;		_controller
 19104 ;;		_printFloat
 19105 ;;		_getLedNumber
 19106 ;; This function uses a non-reentrant model
 19107 ;;
 19108                           
 19109     15DE                     ___fltol:	
 19110                           ;psect for function ___fltol
 19111                           
 19112     15DE                     i1l5332:	
 19113                           ;incstack = 0
 19114                           ; Regs used in ___fltol: [wreg+status,2+status,0]
 19115                           
 19116     15DE  1003               	clrc
 19117     15DF  0020               	movlb	0	; select bank0
 19118     15E0  0D3C               	rlf	___fltol@f1+2,w
 19119     15E1  0D3D               	rlf	___fltol@f1+3,w
 19120     15E2  00C3               	movwf	___fltol@exp1
 19121     15E3  0843               	movf	___fltol@exp1,w
 19122     15E4  1D03               	btfss	3,2
 19123     15E5  2DE7               	goto	u495_21
 19124     15E6  2DE8               	goto	u495_20
 19125     15E7                     u495_21:
 19126     15E7  2DF1               	goto	i1l5338
 19127     15E8                     u495_20:
 19128     15E8                     i1l5334:
 19129     15E8  3000               	movlw	0
 19130     15E9  00BD               	movwf	?___fltol+3
 19131     15EA  3000               	movlw	0
 19132     15EB  00BC               	movwf	?___fltol+2
 19133     15EC  3000               	movlw	0
 19134     15ED  00BB               	movwf	?___fltol+1
 19135     15EE  3000               	movlw	0
 19136     15EF  00BA               	movwf	?___fltol
 19137     15F0  2E4C               	goto	i1l1632
 19138     15F1                     i1l5338:
 19139     15F1  083A               	movf	___fltol@f1,w
 19140     15F2  00BE               	movwf	??___fltol
 19141     15F3  083B               	movf	___fltol@f1+1,w
 19142     15F4  00BF               	movwf	??___fltol+1
 19143     15F5  083C               	movf	___fltol@f1+2,w
 19144     15F6  00C0               	movwf	??___fltol+2
 19145     15F7  083D               	movf	___fltol@f1+3,w
 19146     15F8  00C1               	movwf	??___fltol+3
 19147     15F9  301F               	movlw	31
 19148     15FA                     u496_25:
 19149     15FA  36C1               	lsrf	??___fltol+3,f
 19150     15FB  0CC0               	rrf	??___fltol+2,f
 19151     15FC  0CBF               	rrf	??___fltol+1,f
 19152     15FD  0CBE               	rrf	??___fltol,f
 19153     15FE                     u496_20:
 19154     15FE  0B89               	decfsz	9,f
 19155     15FF  2DFA               	goto	u496_25
 19156     1600  083E               	movf	??___fltol,w
 19157     1601  00C2               	movwf	___fltol@sign1
 19158     1602                     i1l5340:
 19159     1602  17BC               	bsf	___fltol@f1+2,7
 19160     1603                     i1l5342:
 19161     1603  30FF               	movlw	255
 19162     1604  05BA               	andwf	___fltol@f1,f
 19163     1605  30FF               	movlw	255
 19164     1606  05BB               	andwf	___fltol@f1+1,f
 19165     1607  30FF               	movlw	255
 19166     1608  05BC               	andwf	___fltol@f1+2,f
 19167     1609  3000               	movlw	0
 19168     160A  05BD               	andwf	___fltol@f1+3,f
 19169     160B                     i1l5344:
 19170     160B  3096               	movlw	150
 19171     160C  02C3               	subwf	___fltol@exp1,f
 19172     160D                     i1l5346:
 19173     160D  1FC3               	btfss	___fltol@exp1,7
 19174     160E  2E10               	goto	u497_21
 19175     160F  2E11               	goto	u497_20
 19176     1610                     u497_21:
 19177     1610  2E27               	goto	i1l5356
 19178     1611                     u497_20:
 19179     1611                     i1l5348:
 19180     1611  0843               	movf	___fltol@exp1,w
 19181     1612  3A80               	xorlw	128
 19182     1613  3E97               	addlw	151
 19183     1614  1803               	skipnc
 19184     1615  2E17               	goto	u498_21
 19185     1616  2E18               	goto	u498_20
 19186     1617                     u498_21:
 19187     1617  2E19               	goto	i1l5354
 19188     1618                     u498_20:
 19189     1618  2DE8               	goto	i1l5334
 19190     1619                     i1l5354:
 19191     1619  3001               	movlw	1
 19192     161A                     u499_25:
 19193     161A  36BD               	lsrf	___fltol@f1+3,f
 19194     161B  0CBC               	rrf	___fltol@f1+2,f
 19195     161C  0CBB               	rrf	___fltol@f1+1,f
 19196     161D  0CBA               	rrf	___fltol@f1,f
 19197     161E  0B89               	decfsz	9,f
 19198     161F  2E1A               	goto	u499_25
 19199     1620  3001               	movlw	1
 19200     1621  07C3               	addwf	___fltol@exp1,f
 19201     1622  1D03               	btfss	3,2
 19202     1623  2E25               	goto	u500_21
 19203     1624  2E26               	goto	u500_20
 19204     1625                     u500_21:
 19205     1625  2E19               	goto	i1l5354
 19206     1626                     u500_20:
 19207     1626  2E3C               	goto	i1l5364
 19208     1627                     i1l5356:
 19209     1627  3020               	movlw	32
 19210     1628  0243               	subwf	___fltol@exp1,w
 19211     1629  1C03               	skipc
 19212     162A  2E2C               	goto	u501_21
 19213     162B  2E2D               	goto	u501_20
 19214     162C                     u501_21:
 19215     162C  2E37               	goto	i1l1639
 19216     162D                     u501_20:
 19217     162D  2DE8               	goto	i1l5334
 19218     162E                     i1l5362:
 19219     162E  3001               	movlw	1
 19220     162F                     u502_25:
 19221     162F  35BA               	lslf	___fltol@f1,f
 19222     1630  0DBB               	rlf	___fltol@f1+1,f
 19223     1631  0DBC               	rlf	___fltol@f1+2,f
 19224     1632  0DBD               	rlf	___fltol@f1+3,f
 19225     1633  0B89               	decfsz	9,f
 19226     1634  2E2F               	goto	u502_25
 19227     1635  3001               	movlw	1
 19228     1636  02C3               	subwf	___fltol@exp1,f
 19229     1637                     i1l1639:
 19230     1637  0843               	movf	___fltol@exp1,w
 19231     1638  1D03               	btfss	3,2
 19232     1639  2E3B               	goto	u503_21
 19233     163A  2E3C               	goto	u503_20
 19234     163B                     u503_21:
 19235     163B  2E2E               	goto	i1l5362
 19236     163C                     u503_20:
 19237     163C                     i1l5364:
 19238     163C  0842               	movf	___fltol@sign1,w
 19239     163D  1903               	btfsc	3,2
 19240     163E  2E40               	goto	u504_21
 19241     163F  2E41               	goto	u504_20
 19242     1640                     u504_21:
 19243     1640  2E4C               	goto	i1l1642
 19244     1641                     u504_20:
 19245     1641                     i1l5366:
 19246     1641  09BA               	comf	___fltol@f1,f
 19247     1642  09BB               	comf	___fltol@f1+1,f
 19248     1643  09BC               	comf	___fltol@f1+2,f
 19249     1644  09BD               	comf	___fltol@f1+3,f
 19250     1645  0ABA               	incf	___fltol@f1,f
 19251     1646  1903               	skipnz
 19252     1647  0ABB               	incf	___fltol@f1+1,f
 19253     1648  1903               	skipnz
 19254     1649  0ABC               	incf	___fltol@f1+2,f
 19255     164A  1903               	skipnz
 19256     164B  0ABD               	incf	___fltol@f1+3,f
 19257     164C                     i1l1642:
 19258     164C                     i1l1632:
 19259     164C  0008               	return
 19260     164D                     __end_of___fltol:
 19261                           
 19262                           	psect	text67
 19263     1F26                     __ptext67:	
 19264 ;; *************** function _TMR2_ISR *****************
 19265 ;; Defined at:
 19266 ;;		line 114 in file "mcc_generated_files/timer/src/tmr2.c"
 19267 ;; Parameters:    Size  Location     Type
 19268 ;;		None
 19269 ;; Auto vars:     Size  Location     Type
 19270 ;;		None
 19271 ;; Return value:  Size  Location     Type
 19272 ;;                  1    wreg      void 
 19273 ;; Registers used:
 19274 ;;		wreg, status,2, status,0, pclath, cstack
 19275 ;; Tracked objects:
 19276 ;;		On entry : 0/0
 19277 ;;		On exit  : 0/0
 19278 ;;		Unchanged: 0/0
 19279 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 19280 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 19281 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 19282 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 19283 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 19284 ;;Total ram usage:        0 bytes
 19285 ;; Hardware stack levels used: 1
 19286 ;; Hardware stack levels required when called: 1
 19287 ;; This function calls:
 19288 ;;		NULL
 19289 ;;		_TMR2_DefaultPeriodMatchCallback
 19290 ;; This function is called by:
 19291 ;;		_INTERRUPT_InterruptManager
 19292 ;; This function uses a non-reentrant model
 19293 ;;
 19294                           
 19295     1F26                     _TMR2_ISR:	
 19296                           ;psect for function _TMR2_ISR
 19297                           
 19298     1F26                     i1l6650:	
 19299                           ;incstack = 0
 19300                           ; Regs used in _TMR2_ISR: [wreg+status,2+status,0+pclath+cstack]
 19301                           
 19302                           
 19303                           ;mcc_generated_files/timer/src/tmr2.c: 117:     if(((void*)0) != TMR2_PeriodMatchCallbac
      +                          k)
 19304     1F26  0022               	movlb	2	; select bank2
 19305     1F27  0860               	movf	_TMR2_PeriodMatchCallback^(0+256),w
 19306     1F28  0461               	iorwf	(_TMR2_PeriodMatchCallback+1)^(0+256),w
 19307     1F29  1903               	btfsc	3,2
 19308     1F2A  2F2C               	goto	u737_21
 19309     1F2B  2F2D               	goto	u737_20
 19310     1F2C                     u737_21:
 19311     1F2C  2F32               	goto	i1l6654
 19312     1F2D                     u737_20:
 19313     1F2D                     i1l6652:
 19314                           
 19315                           ;mcc_generated_files/timer/src/tmr2.c: 118:     {;mcc_generated_files/timer/src/tmr2.c: 
      +                          119:         TMR2_PeriodMatchCallback();
 19316     1F2D  0861               	movf	(_TMR2_PeriodMatchCallback+1)^(0+256),w
 19317     1F2E  008A               	movwf	10
 19318     1F2F  0860               	movf	_TMR2_PeriodMatchCallback^(0+256),w
 19319     1F30  000A               	callw
 19320     1F31  319F               	pagesel	$
 19321     1F32                     i1l6654:
 19322                           
 19323                           ;mcc_generated_files/timer/src/tmr2.c: 121:     PIR1bits.TMR2IF = 0;
 19324     1F32  0020               	movlb	0	; select bank0
 19325     1F33  1091               	bcf	17,1	;volatile
 19326     1F34                     i1l426:
 19327     1F34  0008               	return
 19328     1F35                     __end_of_TMR2_ISR:
 19329                           
 19330                           	psect	text68
 19331     1DE2                     __ptext68:	
 19332 ;; *************** function _TMR2_DefaultPeriodMatchCallback *****************
 19333 ;; Defined at:
 19334 ;;		line 129 in file "mcc_generated_files/timer/src/tmr2.c"
 19335 ;; Parameters:    Size  Location     Type
 19336 ;;		None
 19337 ;; Auto vars:     Size  Location     Type
 19338 ;;		None
 19339 ;; Return value:  Size  Location     Type
 19340 ;;                  1    wreg      void 
 19341 ;; Registers used:
 19342 ;;		None
 19343 ;; Tracked objects:
 19344 ;;		On entry : 0/0
 19345 ;;		On exit  : 0/0
 19346 ;;		Unchanged: 0/0
 19347 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 19348 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 19349 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 19350 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 19351 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 19352 ;;Total ram usage:        0 bytes
 19353 ;; Hardware stack levels used: 1
 19354 ;; This function calls:
 19355 ;;		Nothing
 19356 ;; This function is called by:
 19357 ;;		_TMR2_Initialize
 19358 ;;		_TMR2_ISR
 19359 ;; This function uses a non-reentrant model
 19360 ;;
 19361                           
 19362     1DE2                     _TMR2_DefaultPeriodMatchCallback:	
 19363                           ;psect for function _TMR2_DefaultPeriodMatchCallback
 19364                           
 19365     1DE2                     i1l432:	
 19366                           ;incstack = 0
 19367                           ; Regs used in _TMR2_DefaultPeriodMatchCallback: []
 19368                           
 19369     1DE2  0008               	return
 19370     1DE3                     __end_of_TMR2_DefaultPeriodMatchCallback:
 19371                           
 19372                           	psect	text69
 19373     1E19                     __ptext69:	
 19374 ;; *************** function _I2C2_ISR *****************
 19375 ;; Defined at:
 19376 ;;		line 217 in file "mcc_generated_files/i2c_host/src/mssp2.c"
 19377 ;; Parameters:    Size  Location     Type
 19378 ;;		None
 19379 ;; Auto vars:     Size  Location     Type
 19380 ;;		None
 19381 ;; Return value:  Size  Location     Type
 19382 ;;                  1    wreg      void 
 19383 ;; Registers used:
 19384 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 19385 ;; Tracked objects:
 19386 ;;		On entry : 0/0
 19387 ;;		On exit  : 0/0
 19388 ;;		Unchanged: 0/0
 19389 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 19390 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 19391 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 19392 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 19393 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 19394 ;;Total ram usage:        0 bytes
 19395 ;; Hardware stack levels used: 1
 19396 ;; Hardware stack levels required when called: 5
 19397 ;; This function calls:
 19398 ;;		_I2C2_EventHandler
 19399 ;; This function is called by:
 19400 ;;		_INTERRUPT_InterruptManager
 19401 ;; This function uses a non-reentrant model
 19402 ;;
 19403                           
 19404     1E19                     _I2C2_ISR:	
 19405                           ;psect for function _I2C2_ISR
 19406                           
 19407     1E19                     i1l6648:	
 19408                           ;incstack = 0
 19409 ;; hardware stack exceeded
 19410                           ; Regs used in _I2C2_ISR: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 19411                           
 19412                           
 19413                           ;mcc_generated_files/i2c_host/src/mssp2.c: 219:     I2C2_EventHandler();
 19414     1E19  3193  2327  319E   	fcall	_I2C2_EventHandler
 19415     1E1C                     i1l1164:
 19416     1E1C  0008               	return
 19417     1E1D                     __end_of_I2C2_ISR:
 19418                           
 19419                           	psect	text70
 19420     1327                     __ptext70:	
 19421 ;; *************** function _I2C2_EventHandler *****************
 19422 ;; Defined at:
 19423 ;;		line 254 in file "mcc_generated_files/i2c_host/src/mssp2.c"
 19424 ;; Parameters:    Size  Location     Type
 19425 ;;		None
 19426 ;; Auto vars:     Size  Location     Type
 19427 ;;		None
 19428 ;; Return value:  Size  Location     Type
 19429 ;;                  1    wreg      void 
 19430 ;; Registers used:
 19431 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 19432 ;; Tracked objects:
 19433 ;;		On entry : 0/0
 19434 ;;		On exit  : 0/0
 19435 ;;		Unchanged: 0/0
 19436 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 19437 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 19438 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 19439 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 19440 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 19441 ;;Total ram usage:        2 bytes
 19442 ;; Hardware stack levels used: 1
 19443 ;; Hardware stack levels required when called: 4
 19444 ;; This function calls:
 19445 ;;		_I2C2_Close
 19446 ;;		_I2C2_EVENT_ERROR
 19447 ;;		_I2C2_EVENT_IDLE
 19448 ;;		_I2C2_EVENT_NACK
 19449 ;;		_I2C2_EVENT_RESET
 19450 ;;		_I2C2_EVENT_RX
 19451 ;;		_I2C2_EVENT_SEND_RD_ADDR
 19452 ;;		_I2C2_EVENT_SEND_WR_ADDR
 19453 ;;		_I2C2_EVENT_STOP
 19454 ;;		_I2C2_EVENT_TX
 19455 ;;		_I2C2_InterruptClear
 19456 ;;		_I2C2_IsAddr
 19457 ;;		_I2C2_IsData
 19458 ;;		_I2C2_IsNack
 19459 ;; This function is called by:
 19460 ;;		_I2C2_ISR
 19461 ;; This function uses a non-reentrant model
 19462 ;;
 19463                           
 19464     1327                     _I2C2_EventHandler:	
 19465                           ;psect for function _I2C2_EventHandler
 19466                           
 19467     1327                     i1l6594:	
 19468                           ;incstack = 0
 19469 ;; hardware stack exceeded
 19470                           ; Regs used in _I2C2_EventHandler: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 19471                           
 19472                           
 19473                           ;mcc_generated_files/i2c_host/src/mssp2.c: 256:     I2C2_InterruptClear();
 19474     1327  319D  25E7  3193   	fcall	_I2C2_InterruptClear
 19475     132A                     i1l6596:
 19476                           
 19477                           ;mcc_generated_files/i2c_host/src/mssp2.c: 257:     if (0U != SSP2STATbits.P)
 19478     132A  0024               	movlb	4	; select bank4
 19479     132B  1E1C               	btfss	28,4	;volatile
 19480     132C  2B2E               	goto	u729_21
 19481     132D  2B2F               	goto	u729_20
 19482     132E                     u729_21:
 19483     132E  2B33               	goto	i1l6600
 19484     132F                     u729_20:
 19485     132F                     i1l6598:
 19486                           
 19487                           ;mcc_generated_files/i2c_host/src/mssp2.c: 258:     {;mcc_generated_files/i2c_host/src/m
      +                          ssp2.c: 259:         I2C2_Close();
 19488     132F  319F  27D6  3193   	fcall	_I2C2_Close
 19489                           
 19490                           ;mcc_generated_files/i2c_host/src/mssp2.c: 260:     }
 19491     1332  2B5F               	goto	i1l6612
 19492     1333                     i1l6600:
 19493                           
 19494                           ;mcc_generated_files/i2c_host/src/mssp2.c: 262:     {;mcc_generated_files/i2c_host/src/m
      +                          ssp2.c: 263:         if (I2C2_IsAddr() && I2C2_IsNack())
 19495     1333  319E  2667  3193   	fcall	_I2C2_IsAddr
 19496     1336  3A00               	xorlw	0
 19497     1337  1903               	skipnz
 19498     1338  2B3A               	goto	u730_21
 19499     1339  2B3B               	goto	u730_20
 19500     133A                     u730_21:
 19501     133A  2B49               	goto	i1l6606
 19502     133B                     u730_20:
 19503     133B                     i1l6602:
 19504     133B  319E  2641  3193   	fcall	_I2C2_IsNack
 19505     133E  3A00               	xorlw	0
 19506     133F  1903               	skipnz
 19507     1340  2B42               	goto	u731_21
 19508     1341  2B43               	goto	u731_20
 19509     1342                     u731_21:
 19510     1342  2B49               	goto	i1l6606
 19511     1343                     u731_20:
 19512     1343                     i1l6604:
 19513                           
 19514                           ;mcc_generated_files/i2c_host/src/mssp2.c: 264:         {;mcc_generated_files/i2c_host/s
      +                          rc/mssp2.c: 265:             i2c2Status.state = I2C_STATE_NACK;
 19515     1343  3005               	movlw	5
 19516     1344  0020               	movlb	0	; select bank0
 19517     1345  00E2               	movwf	_i2c2Status+13	;volatile
 19518                           
 19519                           ;mcc_generated_files/i2c_host/src/mssp2.c: 266:             i2c2Status.errorState = I2C_
      +                          ERROR_ADDR_NACK;
 19520     1346  3001               	movlw	1
 19521     1347  00E1               	movwf	_i2c2Status+12	;volatile
 19522                           
 19523                           ;mcc_generated_files/i2c_host/src/mssp2.c: 267:         }
 19524     1348  2B5F               	goto	i1l6612
 19525     1349                     i1l6606:
 19526     1349  319E  262A  3193   	fcall	_I2C2_IsData
 19527     134C  3A00               	xorlw	0
 19528     134D  1903               	skipnz
 19529     134E  2B50               	goto	u732_21
 19530     134F  2B51               	goto	u732_20
 19531     1350                     u732_21:
 19532     1350  2B5F               	goto	i1l1182
 19533     1351                     u732_20:
 19534     1351                     i1l6608:
 19535     1351  319E  2641  3193   	fcall	_I2C2_IsNack
 19536     1354  3A00               	xorlw	0
 19537     1355  1903               	skipnz
 19538     1356  2B58               	goto	u733_21
 19539     1357  2B59               	goto	u733_20
 19540     1358                     u733_21:
 19541     1358  2B5F               	goto	i1l1182
 19542     1359                     u733_20:
 19543     1359                     i1l6610:
 19544                           
 19545                           ;mcc_generated_files/i2c_host/src/mssp2.c: 269:         {;mcc_generated_files/i2c_host/s
      +                          rc/mssp2.c: 270:             i2c2Status.state = I2C_STATE_NACK;
 19546     1359  3005               	movlw	5
 19547     135A  0020               	movlb	0	; select bank0
 19548     135B  00E2               	movwf	_i2c2Status+13	;volatile
 19549                           
 19550                           ;mcc_generated_files/i2c_host/src/mssp2.c: 271:             i2c2Status.errorState = I2C_
      +                          ERROR_DATA_NACK;
 19551     135C  3002               	movlw	2
 19552     135D  00E1               	movwf	_i2c2Status+12	;volatile
 19553                           
 19554                           ;mcc_generated_files/i2c_host/src/mssp2.c: 272:         }
 19555     135E  2B5F               	goto	i1l6612
 19556     135F                     i1l1182:
 19557     135F                     i1l6612:
 19558                           
 19559                           ;mcc_generated_files/i2c_host/src/mssp2.c: 279:     i2c2Status.state = i2c2_eventTable[i
      +                          2c2Status.state]();
 19560     135F  0020               	movlb	0	; select bank0
 19561     1360  0862               	movf	_i2c2Status+13,w	;volatile
 19562     1361  00F2               	movwf	??_I2C2_EventHandler
 19563     1362  01F3               	clrf	??_I2C2_EventHandler+1
 19564     1363  35F2               	lslf	??_I2C2_EventHandler,f
 19565     1364  0DF3               	rlf	??_I2C2_EventHandler+1,f
 19566     1365  3091               	movlw	low _i2c2_eventTable
 19567     1366  0772               	addwf	??_I2C2_EventHandler,w
 19568     1367  0084               	movwf	4
 19569     1368  3018               	movlw	high _i2c2_eventTable
 19570     1369  3D73               	addwfc	??_I2C2_EventHandler+1,w
 19571     136A  3880               	iorlw	128
 19572     136B  0085               	movwf	5
 19573     136C  3F01               	moviw [1]fsr0
 19574     136D  008A               	movwf	10
 19575     136E  3F00               	moviw [0]fsr0
 19576     136F  000A               	callw
 19577     1370  3193               	pagesel	$
 19578     1371  0020               	movlb	0	; select bank0
 19579     1372  00E2               	movwf	_i2c2Status+13	;volatile
 19580     1373                     i1l1185:
 19581     1373  0008               	return
 19582     1374                     __end_of_I2C2_EventHandler:
 19583                           
 19584                           	psect	text71
 19585     1E41                     __ptext71:	
 19586 ;; *************** function _I2C2_IsNack *****************
 19587 ;; Defined at:
 19588 ;;		line 454 in file "mcc_generated_files/i2c_host/src/mssp2.c"
 19589 ;; Parameters:    Size  Location     Type
 19590 ;;		None
 19591 ;; Auto vars:     Size  Location     Type
 19592 ;;		None
 19593 ;; Return value:  Size  Location     Type
 19594 ;;                  1    wreg      _Bool 
 19595 ;; Registers used:
 19596 ;;		wreg, status,2, status,0
 19597 ;; Tracked objects:
 19598 ;;		On entry : 0/0
 19599 ;;		On exit  : 0/0
 19600 ;;		Unchanged: 0/0
 19601 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 19602 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 19603 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 19604 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 19605 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 19606 ;;Total ram usage:        0 bytes
 19607 ;; Hardware stack levels used: 1
 19608 ;; This function calls:
 19609 ;;		Nothing
 19610 ;; This function is called by:
 19611 ;;		_I2C2_EventHandler
 19612 ;; This function uses a non-reentrant model
 19613 ;;
 19614                           
 19615     1E41                     _I2C2_IsNack:	
 19616                           ;psect for function _I2C2_IsNack
 19617                           
 19618     1E41                     i1l5238:	
 19619                           ;incstack = 0
 19620                           ; Regs used in _I2C2_IsNack: [wreg+status,2+status,0]
 19621                           
 19622                           
 19623                           ;mcc_generated_files/i2c_host/src/mssp2.c: 456:     return SSP2CON2bits.ACKSTAT;
 19624     1E41  0024               	movlb	4	; select bank4
 19625     1E42  0E1E               	swapf	30,w	;volatile
 19626     1E43  0C89               	rrf	9,f
 19627     1E44  0C89               	rrf	9,f
 19628     1E45  3901               	andlw	1
 19629     1E46                     i1l1257:
 19630     1E46  0008               	return
 19631     1E47                     __end_of_I2C2_IsNack:
 19632                           
 19633                           	psect	text72
 19634     1E2A                     __ptext72:	
 19635 ;; *************** function _I2C2_IsData *****************
 19636 ;; Defined at:
 19637 ;;		line 459 in file "mcc_generated_files/i2c_host/src/mssp2.c"
 19638 ;; Parameters:    Size  Location     Type
 19639 ;;		None
 19640 ;; Auto vars:     Size  Location     Type
 19641 ;;		None
 19642 ;; Return value:  Size  Location     Type
 19643 ;;                  1    wreg      _Bool 
 19644 ;; Registers used:
 19645 ;;		wreg, status,2, status,0
 19646 ;; Tracked objects:
 19647 ;;		On entry : 0/0
 19648 ;;		On exit  : 0/0
 19649 ;;		Unchanged: 0/0
 19650 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 19651 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 19652 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 19653 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 19654 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 19655 ;;Total ram usage:        0 bytes
 19656 ;; Hardware stack levels used: 1
 19657 ;; This function calls:
 19658 ;;		Nothing
 19659 ;; This function is called by:
 19660 ;;		_I2C2_EventHandler
 19661 ;; This function uses a non-reentrant model
 19662 ;;
 19663                           
 19664     1E2A                     _I2C2_IsData:	
 19665                           ;psect for function _I2C2_IsData
 19666                           
 19667     1E2A                     i1l5242:	
 19668                           ;incstack = 0
 19669                           ; Regs used in _I2C2_IsData: [wreg+status,2+status,0]
 19670                           
 19671                           
 19672                           ;mcc_generated_files/i2c_host/src/mssp2.c: 461:     return (SSP2STATbits.D_nA);
 19673     1E2A  0024               	movlb	4	; select bank4
 19674     1E2B  0E1C               	swapf	28,w	;volatile
 19675     1E2C  0C89               	rrf	9,f
 19676     1E2D  3901               	andlw	1
 19677     1E2E                     i1l1260:
 19678     1E2E  0008               	return
 19679     1E2F                     __end_of_I2C2_IsData:
 19680                           
 19681                           	psect	text73
 19682     1E67                     __ptext73:	
 19683 ;; *************** function _I2C2_IsAddr *****************
 19684 ;; Defined at:
 19685 ;;		line 464 in file "mcc_generated_files/i2c_host/src/mssp2.c"
 19686 ;; Parameters:    Size  Location     Type
 19687 ;;		None
 19688 ;; Auto vars:     Size  Location     Type
 19689 ;;		None
 19690 ;; Return value:  Size  Location     Type
 19691 ;;                  1    wreg      _Bool 
 19692 ;; Registers used:
 19693 ;;		wreg, status,0
 19694 ;; Tracked objects:
 19695 ;;		On entry : 0/0
 19696 ;;		On exit  : 0/0
 19697 ;;		Unchanged: 0/0
 19698 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 19699 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 19700 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 19701 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 19702 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 19703 ;;Total ram usage:        0 bytes
 19704 ;; Hardware stack levels used: 1
 19705 ;; This function calls:
 19706 ;;		Nothing
 19707 ;; This function is called by:
 19708 ;;		_I2C2_EventHandler
 19709 ;; This function uses a non-reentrant model
 19710 ;;
 19711                           
 19712     1E67                     _I2C2_IsAddr:	
 19713                           ;psect for function _I2C2_IsAddr
 19714                           
 19715     1E67                     i1l5234:	
 19716                           ;incstack = 0
 19717                           ; Regs used in _I2C2_IsAddr: [wreg+status,0]
 19718                           
 19719                           
 19720                           ;mcc_generated_files/i2c_host/src/mssp2.c: 466:     return !(SSP2STATbits.D_nA);
 19721     1E67  1003               	clrc
 19722     1E68  0024               	movlb	4	; select bank4
 19723     1E69  1E9C               	btfss	28,5	;volatile
 19724     1E6A  1403               	setc
 19725     1E6B  3000               	movlw	0
 19726     1E6C  3D09               	addwfc	9,w
 19727     1E6D                     i1l1263:
 19728     1E6D  0008               	return
 19729     1E6E                     __end_of_I2C2_IsAddr:
 19730                           
 19731                           	psect	text74
 19732     1E15                     __ptext74:	
 19733 ;; *************** function _I2C2_ERROR_ISR *****************
 19734 ;; Defined at:
 19735 ;;		line 222 in file "mcc_generated_files/i2c_host/src/mssp2.c"
 19736 ;; Parameters:    Size  Location     Type
 19737 ;;		None
 19738 ;; Auto vars:     Size  Location     Type
 19739 ;;		None
 19740 ;; Return value:  Size  Location     Type
 19741 ;;                  1    wreg      void 
 19742 ;; Registers used:
 19743 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 19744 ;; Tracked objects:
 19745 ;;		On entry : 0/0
 19746 ;;		On exit  : 0/0
 19747 ;;		Unchanged: 0/0
 19748 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 19749 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 19750 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 19751 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 19752 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 19753 ;;Total ram usage:        0 bytes
 19754 ;; Hardware stack levels used: 1
 19755 ;; Hardware stack levels required when called: 5
 19756 ;; This function calls:
 19757 ;;		_I2C2_ErrorEventHandler
 19758 ;; This function is called by:
 19759 ;;		_INTERRUPT_InterruptManager
 19760 ;; This function uses a non-reentrant model
 19761 ;;
 19762                           
 19763     1E15                     _I2C2_ERROR_ISR:	
 19764                           ;psect for function _I2C2_ERROR_ISR
 19765                           
 19766     1E15                     i1l6646:	
 19767                           ;incstack = 0
 19768 ;; hardware stack exceeded
 19769                           ; Regs used in _I2C2_ERROR_ISR: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 19770                           
 19771                           
 19772                           ;mcc_generated_files/i2c_host/src/mssp2.c: 224:     I2C2_ErrorEventHandler();
 19773     1E15  3190  205A  319E   	fcall	_I2C2_ErrorEventHandler
 19774     1E18                     i1l1167:
 19775     1E18  0008               	return
 19776     1E19                     __end_of_I2C2_ERROR_ISR:
 19777                           
 19778                           	psect	text75
 19779     105A                     __ptext75:	
 19780 ;; *************** function _I2C2_ErrorEventHandler *****************
 19781 ;; Defined at:
 19782 ;;		line 282 in file "mcc_generated_files/i2c_host/src/mssp2.c"
 19783 ;; Parameters:    Size  Location     Type
 19784 ;;		None
 19785 ;; Auto vars:     Size  Location     Type
 19786 ;;		None
 19787 ;; Return value:  Size  Location     Type
 19788 ;;                  1    wreg      void 
 19789 ;; Registers used:
 19790 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 19791 ;; Tracked objects:
 19792 ;;		On entry : 0/0
 19793 ;;		On exit  : 0/0
 19794 ;;		Unchanged: 0/0
 19795 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 19796 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 19797 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 19798 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 19799 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 19800 ;;Total ram usage:        2 bytes
 19801 ;; Hardware stack levels used: 1
 19802 ;; Hardware stack levels required when called: 4
 19803 ;; This function calls:
 19804 ;;		_I2C2_EVENT_ERROR
 19805 ;;		_I2C2_EVENT_IDLE
 19806 ;;		_I2C2_EVENT_NACK
 19807 ;;		_I2C2_EVENT_RESET
 19808 ;;		_I2C2_EVENT_RX
 19809 ;;		_I2C2_EVENT_SEND_RD_ADDR
 19810 ;;		_I2C2_EVENT_SEND_WR_ADDR
 19811 ;;		_I2C2_EVENT_STOP
 19812 ;;		_I2C2_EVENT_TX
 19813 ;;		_I2C2_ErrorInterruptClear
 19814 ;; This function is called by:
 19815 ;;		_I2C2_ERROR_ISR
 19816 ;; This function uses a non-reentrant model
 19817 ;;
 19818                           
 19819     105A                     _I2C2_ErrorEventHandler:	
 19820                           ;psect for function _I2C2_ErrorEventHandler
 19821                           
 19822     105A                     i1l6614:	
 19823                           ;incstack = 0
 19824 ;; hardware stack exceeded
 19825                           ; Regs used in _I2C2_ErrorEventHandler: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 19826                           
 19827                           
 19828                           ;mcc_generated_files/i2c_host/src/mssp2.c: 284:     i2c2Status.state = I2C_STATE_ERROR;
 19829     105A  3006               	movlw	6
 19830     105B  0020               	movlb	0	; select bank0
 19831     105C  00E2               	movwf	_i2c2Status+13	;volatile
 19832                           
 19833                           ;mcc_generated_files/i2c_host/src/mssp2.c: 285:     i2c2Status.errorState = I2C_ERROR_BU
      +                          S_COLLISION;
 19834     105D  3003               	movlw	3
 19835     105E  00E1               	movwf	_i2c2Status+12	;volatile
 19836     105F                     i1l6616:
 19837                           
 19838                           ;mcc_generated_files/i2c_host/src/mssp2.c: 286:     I2C2_ErrorInterruptClear();
 19839     105F  319D  25E4  3190   	fcall	_I2C2_ErrorInterruptClear
 19840     1062                     i1l6618:
 19841                           
 19842                           ;mcc_generated_files/i2c_host/src/mssp2.c: 288:     I2C2_Callback();
 19843     1062  0020               	movlb	0	; select bank0
 19844     1063  0862               	movf	_i2c2Status+13,w	;volatile
 19845     1064  00F2               	movwf	??_I2C2_ErrorEventHandler
 19846     1065  01F3               	clrf	??_I2C2_ErrorEventHandler+1
 19847     1066  35F2               	lslf	??_I2C2_ErrorEventHandler,f
 19848     1067  0DF3               	rlf	??_I2C2_ErrorEventHandler+1,f
 19849     1068  3091               	movlw	low _i2c2_eventTable
 19850     1069  0772               	addwf	??_I2C2_ErrorEventHandler,w
 19851     106A  0084               	movwf	4
 19852     106B  3018               	movlw	high _i2c2_eventTable
 19853     106C  3D73               	addwfc	??_I2C2_ErrorEventHandler+1,w
 19854     106D  3880               	iorlw	128
 19855     106E  0085               	movwf	5
 19856     106F  3F01               	moviw [1]fsr0
 19857     1070  008A               	movwf	10
 19858     1071  3F00               	moviw [0]fsr0
 19859     1072  000A               	callw
 19860     1073  3190               	pagesel	$
 19861     1074  0020               	movlb	0	; select bank0
 19862     1075  00E2               	movwf	_i2c2Status+13	;volatile
 19863     1076                     i1l1188:
 19864     1076  0008               	return
 19865     1077                     __end_of_I2C2_ErrorEventHandler:
 19866                           
 19867                           	psect	text76
 19868     1E60                     __ptext76:	
 19869 ;; *************** function _I2C2_EVENT_RESET *****************
 19870 ;; Defined at:
 19871 ;;		line 391 in file "mcc_generated_files/i2c_host/src/mssp2.c"
 19872 ;; Parameters:    Size  Location     Type
 19873 ;;		None
 19874 ;; Auto vars:     Size  Location     Type
 19875 ;;		None
 19876 ;; Return value:  Size  Location     Type
 19877 ;;                  1    wreg      enum E6668
 19878 ;; Registers used:
 19879 ;;		wreg, status,2, status,0, pclath, cstack
 19880 ;; Tracked objects:
 19881 ;;		On entry : 0/0
 19882 ;;		On exit  : 0/0
 19883 ;;		Unchanged: 0/0
 19884 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 19885 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 19886 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 19887 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 19888 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 19889 ;;Total ram usage:        0 bytes
 19890 ;; Hardware stack levels used: 1
 19891 ;; Hardware stack levels required when called: 1
 19892 ;; This function calls:
 19893 ;;		_I2C2_BusReset
 19894 ;; This function is called by:
 19895 ;;		_I2C2_EVENT_ERROR
 19896 ;;		_I2C2_EventHandler
 19897 ;;		_I2C2_ErrorEventHandler
 19898 ;; This function uses a non-reentrant model
 19899 ;;
 19900                           
 19901     1E60                     _I2C2_EVENT_RESET:	
 19902                           ;psect for function _I2C2_EVENT_RESET
 19903                           
 19904     1E60                     i1l5126:	
 19905                           ;incstack = 0
 19906                           ; Regs used in _I2C2_EVENT_RESET: [wreg+status,2+status,0+pclath+cstack]
 19907                           
 19908                           
 19909                           ;mcc_generated_files/i2c_host/src/mssp2.c: 393:     I2C2_BusReset();
 19910     1E60  319D  25FD  319E   	fcall	_I2C2_BusReset
 19911     1E63                     i1l5128:
 19912                           
 19913                           ;mcc_generated_files/i2c_host/src/mssp2.c: 394:     i2c2Status.busy = 0;
 19914     1E63  0020               	movlb	0	; select bank0
 19915     1E64  01D5               	clrf	_i2c2Status	;volatile
 19916     1E65                     i1l5130:
 19917                           
 19918                           ;mcc_generated_files/i2c_host/src/mssp2.c: 395:     return I2C_STATE_IDLE;
 19919     1E65  3000               	movlw	0
 19920     1E66                     i1l1224:
 19921     1E66  0008               	return
 19922     1E67                     __end_of_I2C2_EVENT_RESET:
 19923                           
 19924                           	psect	text77
 19925     1E76                     __ptext77:	
 19926 ;; *************** function _I2C2_EVENT_STOP *****************
 19927 ;; Defined at:
 19928 ;;		line 384 in file "mcc_generated_files/i2c_host/src/mssp2.c"
 19929 ;; Parameters:    Size  Location     Type
 19930 ;;		None
 19931 ;; Auto vars:     Size  Location     Type
 19932 ;;		None
 19933 ;; Return value:  Size  Location     Type
 19934 ;;                  1    wreg      enum E6668
 19935 ;; Registers used:
 19936 ;;		wreg, status,2, status,0, pclath, cstack
 19937 ;; Tracked objects:
 19938 ;;		On entry : 0/0
 19939 ;;		On exit  : 0/0
 19940 ;;		Unchanged: 0/0
 19941 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 19942 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 19943 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 19944 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 19945 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 19946 ;;Total ram usage:        0 bytes
 19947 ;; Hardware stack levels used: 1
 19948 ;; Hardware stack levels required when called: 2
 19949 ;; This function calls:
 19950 ;;		_I2C2_Close
 19951 ;;		_I2C2_StopSend
 19952 ;; This function is called by:
 19953 ;;		_I2C2_EVENT_TX
 19954 ;;		_I2C2_EVENT_NACK
 19955 ;;		_I2C2_EventHandler
 19956 ;;		_I2C2_ErrorEventHandler
 19957 ;; This function uses a non-reentrant model
 19958 ;;
 19959                           
 19960     1E76                     _I2C2_EVENT_STOP:	
 19961                           ;psect for function _I2C2_EVENT_STOP
 19962                           
 19963     1E76                     i1l5104:	
 19964                           ;incstack = 0
 19965 ;; hardware stack exceeded
 19966                           ; Regs used in _I2C2_EVENT_STOP: [wreg+status,2+status,0+pclath+cstack]
 19967                           
 19968                           
 19969                           ;mcc_generated_files/i2c_host/src/mssp2.c: 386:     I2C2_StopSend();
 19970     1E76  319D  25EA  319E   	fcall	_I2C2_StopSend
 19971                           
 19972                           ;mcc_generated_files/i2c_host/src/mssp2.c: 387:     I2C2_Close();
 19973     1E79  319F  27D6  319E   	fcall	_I2C2_Close
 19974     1E7C                     i1l5106:
 19975                           
 19976                           ;mcc_generated_files/i2c_host/src/mssp2.c: 388:     return I2C_STATE_IDLE;
 19977     1E7C  3000               	movlw	0
 19978     1E7D                     i1l1221:
 19979     1E7D  0008               	return
 19980     1E7E                     __end_of_I2C2_EVENT_STOP:
 19981                           
 19982                           	psect	text78
 19983     1E3B                     __ptext78:	
 19984 ;; *************** function _I2C2_EVENT_ERROR *****************
 19985 ;; Defined at:
 19986 ;;		line 377 in file "mcc_generated_files/i2c_host/src/mssp2.c"
 19987 ;; Parameters:    Size  Location     Type
 19988 ;;		None
 19989 ;; Auto vars:     Size  Location     Type
 19990 ;;  retEventStat    1    0[COMMON] enum E6668
 19991 ;; Return value:  Size  Location     Type
 19992 ;;                  1    wreg      enum E6668
 19993 ;; Registers used:
 19994 ;;		wreg, status,2, status,0, pclath, cstack
 19995 ;; Tracked objects:
 19996 ;;		On entry : 0/0
 19997 ;;		On exit  : 0/0
 19998 ;;		Unchanged: 0/0
 19999 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 20000 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 20001 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 20002 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 20003 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 20004 ;;Total ram usage:        1 bytes
 20005 ;; Hardware stack levels used: 1
 20006 ;; Hardware stack levels required when called: 2
 20007 ;; This function calls:
 20008 ;;		_I2C2_EVENT_RESET
 20009 ;; This function is called by:
 20010 ;;		_I2C2_EventHandler
 20011 ;;		_I2C2_ErrorEventHandler
 20012 ;; This function uses a non-reentrant model
 20013 ;;
 20014                           
 20015     1E3B                     _I2C2_EVENT_ERROR:	
 20016                           ;psect for function _I2C2_EVENT_ERROR
 20017                           
 20018     1E3B                     i1l5324:	
 20019                           ;incstack = 0
 20020 ;; hardware stack exceeded
 20021                           ; Regs used in _I2C2_EVENT_ERROR: [wreg+status,2+status,0+pclath+cstack]
 20022                           
 20023     1E3B                     i1l5326:
 20024                           
 20025                           ;mcc_generated_files/i2c_host/src/mssp2.c: 380:     retEventState = I2C2_EVENT_RESET();
 20026     1E3B  319E  2660  319E   	fcall	_I2C2_EVENT_RESET
 20027     1E3E  00F0               	movwf	I2C2_EVENT_ERROR@retEventState
 20028     1E3F                     i1l5328:
 20029                           
 20030                           ;mcc_generated_files/i2c_host/src/mssp2.c: 381:     return retEventState;
 20031     1E3F  0870               	movf	I2C2_EVENT_ERROR@retEventState,w
 20032     1E40                     i1l1218:
 20033     1E40  0008               	return
 20034     1E41                     __end_of_I2C2_EVENT_ERROR:
 20035                           
 20036                           	psect	text79
 20037     1E35                     __ptext79:	
 20038 ;; *************** function _I2C2_EVENT_NACK *****************
 20039 ;; Defined at:
 20040 ;;		line 370 in file "mcc_generated_files/i2c_host/src/mssp2.c"
 20041 ;; Parameters:    Size  Location     Type
 20042 ;;		None
 20043 ;; Auto vars:     Size  Location     Type
 20044 ;;  retEventStat    1    0[COMMON] enum E6668
 20045 ;; Return value:  Size  Location     Type
 20046 ;;                  1    wreg      enum E6668
 20047 ;; Registers used:
 20048 ;;		wreg, status,2, status,0, pclath, cstack
 20049 ;; Tracked objects:
 20050 ;;		On entry : 0/0
 20051 ;;		On exit  : 0/0
 20052 ;;		Unchanged: 0/0
 20053 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 20054 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 20055 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 20056 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 20057 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 20058 ;;Total ram usage:        1 bytes
 20059 ;; Hardware stack levels used: 1
 20060 ;; Hardware stack levels required when called: 3
 20061 ;; This function calls:
 20062 ;;		_I2C2_EVENT_STOP
 20063 ;; This function is called by:
 20064 ;;		_I2C2_EventHandler
 20065 ;;		_I2C2_ErrorEventHandler
 20066 ;; This function uses a non-reentrant model
 20067 ;;
 20068                           
 20069     1E35                     _I2C2_EVENT_NACK:	
 20070                           ;psect for function _I2C2_EVENT_NACK
 20071                           
 20072     1E35                     i1l5316:	
 20073                           ;incstack = 0
 20074 ;; hardware stack exceeded
 20075                           ; Regs used in _I2C2_EVENT_NACK: [wreg+status,2+status,0+pclath+cstack]
 20076                           
 20077     1E35                     i1l5318:
 20078                           
 20079                           ;mcc_generated_files/i2c_host/src/mssp2.c: 373:     retEventState = I2C2_EVENT_STOP();
 20080     1E35  319E  2676  319E   	fcall	_I2C2_EVENT_STOP
 20081     1E38  00F0               	movwf	I2C2_EVENT_NACK@retEventState
 20082     1E39                     i1l5320:
 20083                           
 20084                           ;mcc_generated_files/i2c_host/src/mssp2.c: 374:     return retEventState;
 20085     1E39  0870               	movf	I2C2_EVENT_NACK@retEventState,w
 20086     1E3A                     i1l1215:
 20087     1E3A  0008               	return
 20088     1E3B                     __end_of_I2C2_EVENT_NACK:
 20089                           
 20090                           	psect	text80
 20091     1269                     __ptext80:	
 20092 ;; *************** function _I2C2_EVENT_RX *****************
 20093 ;; Defined at:
 20094 ;;		line 337 in file "mcc_generated_files/i2c_host/src/mssp2.c"
 20095 ;; Parameters:    Size  Location     Type
 20096 ;;		None
 20097 ;; Auto vars:     Size  Location     Type
 20098 ;;  retEventStat    1    0[COMMON] enum E6668
 20099 ;; Return value:  Size  Location     Type
 20100 ;;                  1    wreg      enum E6668
 20101 ;; Registers used:
 20102 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 20103 ;; Tracked objects:
 20104 ;;		On entry : 0/0
 20105 ;;		On exit  : 0/0
 20106 ;;		Unchanged: 0/0
 20107 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 20108 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 20109 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 20110 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 20111 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 20112 ;;Total ram usage:        1 bytes
 20113 ;; Hardware stack levels used: 1
 20114 ;; Hardware stack levels required when called: 1
 20115 ;; This function calls:
 20116 ;;		_I2C2_AckSend
 20117 ;;		_I2C2_DataReceive
 20118 ;;		_I2C2_IsRxBufFull
 20119 ;;		_I2C2_NackSend
 20120 ;;		_I2C2_ReceiveEnable
 20121 ;;		_I2C2_RestartDisable
 20122 ;; This function is called by:
 20123 ;;		_I2C2_EventHandler
 20124 ;;		_I2C2_ErrorEventHandler
 20125 ;; This function uses a non-reentrant model
 20126 ;;
 20127                           
 20128     1269                     _I2C2_EVENT_RX:	
 20129                           ;psect for function _I2C2_EVENT_RX
 20130                           
 20131     1269                     i1l5290:	
 20132                           ;incstack = 0
 20133                           ; Regs used in _I2C2_EVENT_RX: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
 20134                           
 20135                           
 20136                           ;mcc_generated_files/i2c_host/src/mssp2.c: 339:     i2c_host_event_states_t retEventStat
      +                          e = I2C_STATE_RX;
 20137     1269  3004               	movlw	4
 20138     126A  00F0               	movwf	I2C2_EVENT_RX@retEventState
 20139     126B                     i1l5292:
 20140                           
 20141                           ;mcc_generated_files/i2c_host/src/mssp2.c: 341:     if (I2C2_IsRxBufFull())
 20142     126B  319E  2609  3192   	fcall	_I2C2_IsRxBufFull
 20143     126E  3A00               	xorlw	0
 20144     126F  1903               	skipnz
 20145     1270  2A72               	goto	u492_21
 20146     1271  2A73               	goto	u492_20
 20147     1272                     u492_21:
 20148     1272  2A9E               	goto	i1l5310
 20149     1273                     u492_20:
 20150     1273                     i1l5294:
 20151                           
 20152                           ;mcc_generated_files/i2c_host/src/mssp2.c: 342:     {;mcc_generated_files/i2c_host/src/m
      +                          ssp2.c: 343:         if (i2c2Status.readLength > 0U)
 20153     1273  0020               	movlb	0	; select bank0
 20154     1274  085E               	movf	_i2c2Status+9,w	;volatile
 20155     1275  045F               	iorwf	_i2c2Status+10,w	;volatile
 20156     1276  1903               	btfsc	3,2
 20157     1277  2A79               	goto	u493_21
 20158     1278  2A7A               	goto	u493_20
 20159     1279                     u493_21:
 20160     1279  2A8B               	goto	i1l5302
 20161     127A                     u493_20:
 20162     127A                     i1l5296:
 20163                           
 20164                           ;mcc_generated_files/i2c_host/src/mssp2.c: 344:         {;mcc_generated_files/i2c_host/s
      +                          rc/mssp2.c: 345:             *i2c2Status.readPtr = I2C2_DataReceive();
 20165     127A  085C               	movf	_i2c2Status+7,w	;volatile
 20166     127B  0086               	movwf	6
 20167     127C  085D               	movf	_i2c2Status+8,w	;volatile
 20168     127D  0087               	movwf	7
 20169     127E  319D  25ED  3192   	fcall	_I2C2_DataReceive
 20170     1281  0081               	movwf	1
 20171     1282                     i1l5298:
 20172                           
 20173                           ;mcc_generated_files/i2c_host/src/mssp2.c: 346:             i2c2Status.readPtr++;
 20174     1282  3001               	movlw	1
 20175     1283  0020               	movlb	0	; select bank0
 20176     1284  07DC               	addwf	_i2c2Status+7,f	;volatile
 20177     1285  3000               	movlw	0
 20178     1286  3DDD               	addwfc	_i2c2Status+8,f	;volatile
 20179     1287                     i1l5300:
 20180                           
 20181                           ;mcc_generated_files/i2c_host/src/mssp2.c: 347:             i2c2Status.readLength--;
 20182     1287  3001               	movlw	1
 20183     1288  02DE               	subwf	_i2c2Status+9,f	;volatile
 20184     1289  3000               	movlw	0
 20185     128A  3BDF               	subwfb	_i2c2Status+10,f	;volatile
 20186     128B                     i1l5302:
 20187                           
 20188                           ;mcc_generated_files/i2c_host/src/mssp2.c: 351:         if (i2c2Status.readLength > 0U)
 20189     128B  085E               	movf	_i2c2Status+9,w	;volatile
 20190     128C  045F               	iorwf	_i2c2Status+10,w	;volatile
 20191     128D  1903               	btfsc	3,2
 20192     128E  2A90               	goto	u494_21
 20193     128F  2A91               	goto	u494_20
 20194     1290                     u494_21:
 20195     1290  2A95               	goto	i1l5306
 20196     1291                     u494_20:
 20197     1291                     i1l5304:
 20198                           
 20199                           ;mcc_generated_files/i2c_host/src/mssp2.c: 352:         {;mcc_generated_files/i2c_host/s
      +                          rc/mssp2.c: 353:             I2C2_AckSend();
 20200     1291  319E  2605  3192   	fcall	_I2C2_AckSend
 20201                           
 20202                           ;mcc_generated_files/i2c_host/src/mssp2.c: 354:         }
 20203     1294  2AA1               	goto	i1l5312
 20204     1295                     i1l5306:
 20205                           
 20206                           ;mcc_generated_files/i2c_host/src/mssp2.c: 356:         {;mcc_generated_files/i2c_host/s
      +                          rc/mssp2.c: 357:             I2C2_RestartDisable();
 20207     1295  319D  25F3  3192   	fcall	_I2C2_RestartDisable
 20208                           
 20209                           ;mcc_generated_files/i2c_host/src/mssp2.c: 358:             I2C2_NackSend();
 20210     1298  319E  260D  3192   	fcall	_I2C2_NackSend
 20211     129B                     i1l5308:
 20212                           
 20213                           ;mcc_generated_files/i2c_host/src/mssp2.c: 359:             retEventState = I2C_STATE_ST
      +                          OP;
 20214     129B  3007               	movlw	7
 20215     129C  00F0               	movwf	I2C2_EVENT_RX@retEventState
 20216     129D  2AA1               	goto	i1l5312
 20217     129E                     i1l5310:
 20218                           
 20219                           ;mcc_generated_files/i2c_host/src/mssp2.c: 364:     {;mcc_generated_files/i2c_host/src/m
      +                          ssp2.c: 365:         I2C2_ReceiveEnable();
 20220     129E  319D  25F0  3192   	fcall	_I2C2_ReceiveEnable
 20221     12A1                     i1l5312:
 20222                           
 20223                           ;mcc_generated_files/i2c_host/src/mssp2.c: 367:     return retEventState;
 20224     12A1  0870               	movf	I2C2_EVENT_RX@retEventState,w
 20225     12A2                     i1l1212:
 20226     12A2  0008               	return
 20227     12A3                     __end_of_I2C2_EVENT_RX:
 20228                           
 20229                           	psect	text81
 20230     1E59                     __ptext81:	
 20231 ;; *************** function _I2C2_EVENT_SEND_WR_ADDR *****************
 20232 ;; Defined at:
 20233 ;;		line 304 in file "mcc_generated_files/i2c_host/src/mssp2.c"
 20234 ;; Parameters:    Size  Location     Type
 20235 ;;		None
 20236 ;; Auto vars:     Size  Location     Type
 20237 ;;		None
 20238 ;; Return value:  Size  Location     Type
 20239 ;;                  1    wreg      enum E6668
 20240 ;; Registers used:
 20241 ;;		wreg, status,2, status,0, pclath, cstack
 20242 ;; Tracked objects:
 20243 ;;		On entry : 0/0
 20244 ;;		On exit  : 0/0
 20245 ;;		Unchanged: 0/0
 20246 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 20247 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 20248 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 20249 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 20250 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 20251 ;;Total ram usage:        0 bytes
 20252 ;; Hardware stack levels used: 1
 20253 ;; Hardware stack levels required when called: 1
 20254 ;; This function calls:
 20255 ;;		_I2C2_DataTransmit
 20256 ;; This function is called by:
 20257 ;;		_I2C2_EventHandler
 20258 ;;		_I2C2_ErrorEventHandler
 20259 ;; This function uses a non-reentrant model
 20260 ;;
 20261                           
 20262     1E59                     _I2C2_EVENT_SEND_WR_ADDR:	
 20263                           ;psect for function _I2C2_EVENT_SEND_WR_ADDR
 20264                           
 20265     1E59                     i1l5258:	
 20266                           ;incstack = 0
 20267                           ; Regs used in _I2C2_EVENT_SEND_WR_ADDR: [wreg+status,2+status,0+pclath+cstack]
 20268                           
 20269                           
 20270                           ;mcc_generated_files/i2c_host/src/mssp2.c: 306:     I2C2_DataTransmit((uint8_t) (i2c2Sta
      +                          tus.address << 1));
 20271     1E59  0020               	movlb	0	; select bank0
 20272     1E5A  3556               	lslf	_i2c2Status+1,w	;volatile
 20273     1E5B  319E  2625  319E   	fcall	_I2C2_DataTransmit
 20274     1E5E                     i1l5260:
 20275                           
 20276                           ;mcc_generated_files/i2c_host/src/mssp2.c: 307:     return I2C_STATE_TX;
 20277     1E5E  3003               	movlw	3
 20278     1E5F                     i1l1197:
 20279     1E5F  0008               	return
 20280     1E60                     __end_of_I2C2_EVENT_SEND_WR_ADDR:
 20281                           
 20282                           	psect	text82
 20283     1E6E                     __ptext82:	
 20284 ;; *************** function _I2C2_EVENT_SEND_RD_ADDR *****************
 20285 ;; Defined at:
 20286 ;;		line 298 in file "mcc_generated_files/i2c_host/src/mssp2.c"
 20287 ;; Parameters:    Size  Location     Type
 20288 ;;		None
 20289 ;; Auto vars:     Size  Location     Type
 20290 ;;		None
 20291 ;; Return value:  Size  Location     Type
 20292 ;;                  1    wreg      enum E6668
 20293 ;; Registers used:
 20294 ;;		wreg, status,2, status,0, pclath, cstack
 20295 ;; Tracked objects:
 20296 ;;		On entry : 0/0
 20297 ;;		On exit  : 0/0
 20298 ;;		Unchanged: 0/0
 20299 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 20300 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 20301 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 20302 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 20303 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 20304 ;;Total ram usage:        0 bytes
 20305 ;; Hardware stack levels used: 1
 20306 ;; Hardware stack levels required when called: 1
 20307 ;; This function calls:
 20308 ;;		_I2C2_DataTransmit
 20309 ;; This function is called by:
 20310 ;;		_I2C2_EventHandler
 20311 ;;		_I2C2_ErrorEventHandler
 20312 ;; This function uses a non-reentrant model
 20313 ;;
 20314                           
 20315     1E6E                     _I2C2_EVENT_SEND_RD_ADDR:	
 20316                           ;psect for function _I2C2_EVENT_SEND_RD_ADDR
 20317                           
 20318     1E6E                     i1l5252:	
 20319                           ;incstack = 0
 20320                           ; Regs used in _I2C2_EVENT_SEND_RD_ADDR: [wreg+status,2+status,0+pclath+cstack]
 20321                           
 20322                           
 20323                           ;mcc_generated_files/i2c_host/src/mssp2.c: 300:     I2C2_DataTransmit((uint8_t) ((i2c2St
      +                          atus.address << 1) | 1U));
 20324     1E6E  1403               	setc
 20325     1E6F  0020               	movlb	0	; select bank0
 20326     1E70  0D56               	rlf	_i2c2Status+1,w	;volatile
 20327     1E71  319E  2625  319E   	fcall	_I2C2_DataTransmit
 20328     1E74                     i1l5254:
 20329                           
 20330                           ;mcc_generated_files/i2c_host/src/mssp2.c: 301:     return I2C_STATE_RX;
 20331     1E74  3004               	movlw	4
 20332     1E75                     i1l1194:
 20333     1E75  0008               	return
 20334     1E76                     __end_of_I2C2_EVENT_SEND_RD_ADDR:
 20335                           
 20336                           	psect	text83
 20337     1E11                     __ptext83:	
 20338 ;; *************** function _I2C2_EVENT_IDLE *****************
 20339 ;; Defined at:
 20340 ;;		line 292 in file "mcc_generated_files/i2c_host/src/mssp2.c"
 20341 ;; Parameters:    Size  Location     Type
 20342 ;;		None
 20343 ;; Auto vars:     Size  Location     Type
 20344 ;;		None
 20345 ;; Return value:  Size  Location     Type
 20346 ;;                  1    wreg      enum E6668
 20347 ;; Registers used:
 20348 ;;		wreg, status,2
 20349 ;; Tracked objects:
 20350 ;;		On entry : 0/0
 20351 ;;		On exit  : 0/0
 20352 ;;		Unchanged: 0/0
 20353 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 20354 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 20355 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 20356 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 20357 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 20358 ;;Total ram usage:        0 bytes
 20359 ;; Hardware stack levels used: 1
 20360 ;; This function calls:
 20361 ;;		Nothing
 20362 ;; This function is called by:
 20363 ;;		_I2C2_EventHandler
 20364 ;;		_I2C2_ErrorEventHandler
 20365 ;; This function uses a non-reentrant model
 20366 ;;
 20367                           
 20368     1E11                     _I2C2_EVENT_IDLE:	
 20369                           ;psect for function _I2C2_EVENT_IDLE
 20370                           
 20371     1E11                     i1l5246:	
 20372                           ;incstack = 0
 20373                           ; Regs used in _I2C2_EVENT_IDLE: [wreg+status,2]
 20374                           
 20375                           
 20376                           ;mcc_generated_files/i2c_host/src/mssp2.c: 294:     i2c2Status.busy = 0;
 20377     1E11  0020               	movlb	0	; select bank0
 20378     1E12  01D5               	clrf	_i2c2Status	;volatile
 20379     1E13                     i1l5248:
 20380                           
 20381                           ;mcc_generated_files/i2c_host/src/mssp2.c: 295:     return I2C_STATE_RESET;
 20382     1E13  3008               	movlw	8
 20383     1E14                     i1l1191:
 20384     1E14  0008               	return
 20385     1E15                     __end_of_I2C2_EVENT_IDLE:
 20386                           
 20387                           	psect	text84
 20388     1176                     __ptext84:	
 20389 ;; *************** function _I2C2_EVENT_TX *****************
 20390 ;; Defined at:
 20391 ;;		line 310 in file "mcc_generated_files/i2c_host/src/mssp2.c"
 20392 ;; Parameters:    Size  Location     Type
 20393 ;;		None
 20394 ;; Auto vars:     Size  Location     Type
 20395 ;;  retEventStat    1    1[COMMON] enum E6668
 20396 ;; Return value:  Size  Location     Type
 20397 ;;                  1    wreg      enum E6668
 20398 ;; Registers used:
 20399 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 20400 ;; Tracked objects:
 20401 ;;		On entry : 0/0
 20402 ;;		On exit  : 0/0
 20403 ;;		Unchanged: 0/0
 20404 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 20405 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 20406 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 20407 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 20408 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 20409 ;;Total ram usage:        1 bytes
 20410 ;; Hardware stack levels used: 1
 20411 ;; Hardware stack levels required when called: 3
 20412 ;; This function calls:
 20413 ;;		_I2C2_DataTransmit
 20414 ;;		_I2C2_EVENT_STOP
 20415 ;;		_I2C2_RestartEnable
 20416 ;; This function is called by:
 20417 ;;		_I2C2_EventHandler
 20418 ;;		_I2C2_ErrorEventHandler
 20419 ;; This function uses a non-reentrant model
 20420 ;;
 20421                           
 20422     1176                     _I2C2_EVENT_TX:	
 20423                           ;psect for function _I2C2_EVENT_TX
 20424                           
 20425     1176                     i1l5264:	
 20426                           ;incstack = 0
 20427 ;; hardware stack exceeded
 20428                           ; Regs used in _I2C2_EVENT_TX: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
 20429                           
 20430     1176                     i1l5266:
 20431                           
 20432                           ;mcc_generated_files/i2c_host/src/mssp2.c: 313:     if (0U != i2c2Status.writeLength)
 20433     1176  0020               	movlb	0	; select bank0
 20434     1177  085A               	movf	_i2c2Status+5,w	;volatile
 20435     1178  045B               	iorwf	_i2c2Status+6,w	;volatile
 20436     1179  1903               	btfsc	3,2
 20437     117A  297C               	goto	u490_21
 20438     117B  297D               	goto	u490_20
 20439     117C                     u490_21:
 20440     117C  2991               	goto	i1l5276
 20441     117D                     u490_20:
 20442     117D                     i1l5268:
 20443                           
 20444                           ;mcc_generated_files/i2c_host/src/mssp2.c: 314:     {;mcc_generated_files/i2c_host/src/m
      +                          ssp2.c: 315:         i2c2Status.writeLength--;
 20445     117D  3001               	movlw	1
 20446     117E  02DA               	subwf	_i2c2Status+5,f	;volatile
 20447     117F  3000               	movlw	0
 20448     1180  3BDB               	subwfb	_i2c2Status+6,f	;volatile
 20449     1181                     i1l5270:
 20450                           
 20451                           ;mcc_generated_files/i2c_host/src/mssp2.c: 316:         I2C2_DataTransmit(*i2c2Status.wr
      +                          itePtr);
 20452     1181  0858               	movf	_i2c2Status+3,w	;volatile
 20453     1182  0086               	movwf	6
 20454     1183  0859               	movf	_i2c2Status+4,w	;volatile
 20455     1184  0087               	movwf	7
 20456     1185  0801               	movf	1,w
 20457     1186  319E  2625  3191   	fcall	_I2C2_DataTransmit
 20458     1189                     i1l5272:
 20459                           
 20460                           ;mcc_generated_files/i2c_host/src/mssp2.c: 317:         i2c2Status.writePtr++;
 20461     1189  3001               	movlw	1
 20462     118A  0020               	movlb	0	; select bank0
 20463     118B  07D8               	addwf	_i2c2Status+3,f	;volatile
 20464     118C  3000               	movlw	0
 20465     118D  3DD9               	addwfc	_i2c2Status+4,f	;volatile
 20466     118E                     i1l5274:
 20467                           
 20468                           ;mcc_generated_files/i2c_host/src/mssp2.c: 318:         retEventState = I2C_STATE_TX;
 20469     118E  3003               	movlw	3
 20470     118F  00F1               	movwf	I2C2_EVENT_TX@retEventState
 20471                           
 20472                           ;mcc_generated_files/i2c_host/src/mssp2.c: 319:     }
 20473     1190  29A1               	goto	i1l5286
 20474     1191                     i1l5276:
 20475                           
 20476                           ;mcc_generated_files/i2c_host/src/mssp2.c: 321:     {;mcc_generated_files/i2c_host/src/m
      +                          ssp2.c: 322:         if (i2c2Status.switchToRead)
 20477     1191  0860               	movf	_i2c2Status+11,w	;volatile
 20478     1192  1903               	btfsc	3,2
 20479     1193  2995               	goto	u491_21
 20480     1194  2996               	goto	u491_20
 20481     1195                     u491_21:
 20482     1195  299D               	goto	i1l5284
 20483     1196                     u491_20:
 20484     1196                     i1l5278:
 20485                           
 20486                           ;mcc_generated_files/i2c_host/src/mssp2.c: 323:         {;mcc_generated_files/i2c_host/s
      +                          rc/mssp2.c: 324:             i2c2Status.switchToRead = 0;
 20487     1196  01E0               	clrf	_i2c2Status+11	;volatile
 20488     1197                     i1l5280:
 20489                           
 20490                           ;mcc_generated_files/i2c_host/src/mssp2.c: 325:             I2C2_RestartEnable();
 20491     1197  319D  25F6  3191   	fcall	_I2C2_RestartEnable
 20492     119A                     i1l5282:
 20493                           
 20494                           ;mcc_generated_files/i2c_host/src/mssp2.c: 326:             retEventState = I2C_STATE_SE
      +                          ND_RD_ADDR;
 20495     119A  3001               	movlw	1
 20496     119B  00F1               	movwf	I2C2_EVENT_TX@retEventState
 20497                           
 20498                           ;mcc_generated_files/i2c_host/src/mssp2.c: 327:         }
 20499     119C  29A1               	goto	i1l5286
 20500     119D                     i1l5284:
 20501                           
 20502                           ;mcc_generated_files/i2c_host/src/mssp2.c: 329:         {;mcc_generated_files/i2c_host/s
      +                          rc/mssp2.c: 330:             retEventState = I2C2_EVENT_STOP();
 20503     119D  319E  2676  3191   	fcall	_I2C2_EVENT_STOP
 20504     11A0  00F1               	movwf	I2C2_EVENT_TX@retEventState
 20505     11A1                     i1l5286:
 20506                           
 20507                           ;mcc_generated_files/i2c_host/src/mssp2.c: 334:     return retEventState;
 20508     11A1  0871               	movf	I2C2_EVENT_TX@retEventState,w
 20509     11A2                     i1l1204:
 20510     11A2  0008               	return
 20511     11A3                     __end_of_I2C2_EVENT_TX:
 20512                           
 20513                           	psect	text85
 20514     1DF6                     __ptext85:	
 20515 ;; *************** function _I2C2_RestartEnable *****************
 20516 ;; Defined at:
 20517 ;;		line 422 in file "mcc_generated_files/i2c_host/src/mssp2.c"
 20518 ;; Parameters:    Size  Location     Type
 20519 ;;		None
 20520 ;; Auto vars:     Size  Location     Type
 20521 ;;		None
 20522 ;; Return value:  Size  Location     Type
 20523 ;;                  1    wreg      void 
 20524 ;; Registers used:
 20525 ;;		None
 20526 ;; Tracked objects:
 20527 ;;		On entry : 0/0
 20528 ;;		On exit  : 0/0
 20529 ;;		Unchanged: 0/0
 20530 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 20531 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 20532 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 20533 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 20534 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 20535 ;;Total ram usage:        0 bytes
 20536 ;; Hardware stack levels used: 1
 20537 ;; This function calls:
 20538 ;;		Nothing
 20539 ;; This function is called by:
 20540 ;;		_I2C2_EVENT_TX
 20541 ;; This function uses a non-reentrant model
 20542 ;;
 20543                           
 20544     1DF6                     _I2C2_RestartEnable:	
 20545                           ;psect for function _I2C2_RestartEnable
 20546                           
 20547     1DF6                     i1l5102:	
 20548                           ;incstack = 0
 20549                           ; Regs used in _I2C2_RestartEnable: []
 20550                           
 20551                           
 20552                           ;mcc_generated_files/i2c_host/src/mssp2.c: 424:     SSP2CON2bits.RSEN = 1;
 20553     1DF6  0024               	movlb	4	; select bank4
 20554     1DF7  149E               	bsf	30,1	;volatile
 20555     1DF8                     i1l1239:
 20556     1DF8  0008               	return
 20557     1DF9                     __end_of_I2C2_RestartEnable:
 20558                           
 20559                           	psect	text86
 20560     1E25                     __ptext86:	
 20561 ;; *************** function _I2C2_DataTransmit *****************
 20562 ;; Defined at:
 20563 ;;		line 406 in file "mcc_generated_files/i2c_host/src/mssp2.c"
 20564 ;; Parameters:    Size  Location     Type
 20565 ;;  data            1    wreg     unsigned char 
 20566 ;; Auto vars:     Size  Location     Type
 20567 ;;  data            1    0[COMMON] unsigned char 
 20568 ;; Return value:  Size  Location     Type
 20569 ;;                  1    wreg      void 
 20570 ;; Registers used:
 20571 ;;		wreg
 20572 ;; Tracked objects:
 20573 ;;		On entry : 0/0
 20574 ;;		On exit  : 0/0
 20575 ;;		Unchanged: 0/0
 20576 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 20577 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 20578 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 20579 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 20580 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 20581 ;;Total ram usage:        1 bytes
 20582 ;; Hardware stack levels used: 1
 20583 ;; This function calls:
 20584 ;;		Nothing
 20585 ;; This function is called by:
 20586 ;;		_I2C2_EVENT_SEND_RD_ADDR
 20587 ;;		_I2C2_EVENT_SEND_WR_ADDR
 20588 ;;		_I2C2_EVENT_TX
 20589 ;; This function uses a non-reentrant model
 20590 ;;
 20591                           
 20592     1E25                     _I2C2_DataTransmit:	
 20593                           ;psect for function _I2C2_DataTransmit
 20594                           
 20595                           
 20596                           ;incstack = 0
 20597                           ; Regs used in _I2C2_DataTransmit: [wreg]
 20598                           ;I2C2_DataTransmit@data stored from wreg
 20599     1E25  00F0               	movwf	I2C2_DataTransmit@data
 20600     1E26                     i1l5100:
 20601                           
 20602                           ;mcc_generated_files/i2c_host/src/mssp2.c: 406: static void I2C2_DataTransmit(uint8_t da
      +                          ta);mcc_generated_files/i2c_host/src/mssp2.c: 407: {;mcc_generated_files/i2c_host/src/ms
      +                          sp2.c: 408:     SSP2BUF = data;
 20603     1E26  0870               	movf	I2C2_DataTransmit@data,w
 20604     1E27  0024               	movlb	4	; select bank4
 20605     1E28  0099               	movwf	25	;volatile
 20606     1E29                     i1l1230:
 20607     1E29  0008               	return
 20608     1E2A                     __end_of_I2C2_DataTransmit:
 20609                           
 20610                           	psect	text87
 20611     1DF3                     __ptext87:	
 20612 ;; *************** function _I2C2_RestartDisable *****************
 20613 ;; Defined at:
 20614 ;;		line 427 in file "mcc_generated_files/i2c_host/src/mssp2.c"
 20615 ;; Parameters:    Size  Location     Type
 20616 ;;		None
 20617 ;; Auto vars:     Size  Location     Type
 20618 ;;		None
 20619 ;; Return value:  Size  Location     Type
 20620 ;;                  1    wreg      void 
 20621 ;; Registers used:
 20622 ;;		None
 20623 ;; Tracked objects:
 20624 ;;		On entry : 0/0
 20625 ;;		On exit  : 0/0
 20626 ;;		Unchanged: 0/0
 20627 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 20628 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 20629 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 20630 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 20631 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 20632 ;;Total ram usage:        0 bytes
 20633 ;; Hardware stack levels used: 1
 20634 ;; This function calls:
 20635 ;;		Nothing
 20636 ;; This function is called by:
 20637 ;;		_I2C2_EVENT_RX
 20638 ;; This function uses a non-reentrant model
 20639 ;;
 20640                           
 20641     1DF3                     _I2C2_RestartDisable:	
 20642                           ;psect for function _I2C2_RestartDisable
 20643                           
 20644     1DF3                     i1l5120:	
 20645                           ;incstack = 0
 20646                           ; Regs used in _I2C2_RestartDisable: []
 20647                           
 20648                           
 20649                           ;mcc_generated_files/i2c_host/src/mssp2.c: 429:     SSP2CON2bits.RSEN = 0;
 20650     1DF3  0024               	movlb	4	; select bank4
 20651     1DF4  109E               	bcf	30,1	;volatile
 20652     1DF5                     i1l1242:
 20653     1DF5  0008               	return
 20654     1DF6                     __end_of_I2C2_RestartDisable:
 20655                           
 20656                           	psect	text88
 20657     1DF0                     __ptext88:	
 20658 ;; *************** function _I2C2_ReceiveEnable *****************
 20659 ;; Defined at:
 20660 ;;		line 417 in file "mcc_generated_files/i2c_host/src/mssp2.c"
 20661 ;; Parameters:    Size  Location     Type
 20662 ;;		None
 20663 ;; Auto vars:     Size  Location     Type
 20664 ;;		None
 20665 ;; Return value:  Size  Location     Type
 20666 ;;                  1    wreg      void 
 20667 ;; Registers used:
 20668 ;;		None
 20669 ;; Tracked objects:
 20670 ;;		On entry : 0/0
 20671 ;;		On exit  : 0/0
 20672 ;;		Unchanged: 0/0
 20673 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 20674 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 20675 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 20676 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 20677 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 20678 ;;Total ram usage:        0 bytes
 20679 ;; Hardware stack levels used: 1
 20680 ;; This function calls:
 20681 ;;		Nothing
 20682 ;; This function is called by:
 20683 ;;		_I2C2_EVENT_RX
 20684 ;; This function uses a non-reentrant model
 20685 ;;
 20686                           
 20687     1DF0                     _I2C2_ReceiveEnable:	
 20688                           ;psect for function _I2C2_ReceiveEnable
 20689                           
 20690     1DF0                     i1l5124:	
 20691                           ;incstack = 0
 20692                           ; Regs used in _I2C2_ReceiveEnable: []
 20693                           
 20694                           
 20695                           ;mcc_generated_files/i2c_host/src/mssp2.c: 419:     SSP2CON2bits.RCEN = 1;
 20696     1DF0  0024               	movlb	4	; select bank4
 20697     1DF1  159E               	bsf	30,3	;volatile
 20698     1DF2                     i1l1236:
 20699     1DF2  0008               	return
 20700     1DF3                     __end_of_I2C2_ReceiveEnable:
 20701                           
 20702                           	psect	text89
 20703     1E0D                     __ptext89:	
 20704 ;; *************** function _I2C2_NackSend *****************
 20705 ;; Defined at:
 20706 ;;		line 448 in file "mcc_generated_files/i2c_host/src/mssp2.c"
 20707 ;; Parameters:    Size  Location     Type
 20708 ;;		None
 20709 ;; Auto vars:     Size  Location     Type
 20710 ;;		None
 20711 ;; Return value:  Size  Location     Type
 20712 ;;                  1    wreg      void 
 20713 ;; Registers used:
 20714 ;;		None
 20715 ;; Tracked objects:
 20716 ;;		On entry : 0/0
 20717 ;;		On exit  : 0/0
 20718 ;;		Unchanged: 0/0
 20719 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 20720 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 20721 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 20722 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 20723 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 20724 ;;Total ram usage:        0 bytes
 20725 ;; Hardware stack levels used: 1
 20726 ;; This function calls:
 20727 ;;		Nothing
 20728 ;; This function is called by:
 20729 ;;		_I2C2_EVENT_RX
 20730 ;; This function uses a non-reentrant model
 20731 ;;
 20732                           
 20733     1E0D                     _I2C2_NackSend:	
 20734                           ;psect for function _I2C2_NackSend
 20735                           
 20736     1E0D                     i1l5122:	
 20737                           ;incstack = 0
 20738                           ; Regs used in _I2C2_NackSend: []
 20739                           
 20740                           
 20741                           ;mcc_generated_files/i2c_host/src/mssp2.c: 450:     SSP2CON2bits.ACKDT = 1;
 20742     1E0D  0024               	movlb	4	; select bank4
 20743     1E0E  169E               	bsf	30,5	;volatile
 20744                           
 20745                           ;mcc_generated_files/i2c_host/src/mssp2.c: 451:     SSP2CON2bits.ACKEN = 1;
 20746     1E0F  161E               	bsf	30,4	;volatile
 20747     1E10                     i1l1254:
 20748     1E10  0008               	return
 20749     1E11                     __end_of_I2C2_NackSend:
 20750                           
 20751                           	psect	text90
 20752     1E09                     __ptext90:	
 20753 ;; *************** function _I2C2_IsRxBufFull *****************
 20754 ;; Defined at:
 20755 ;;		line 469 in file "mcc_generated_files/i2c_host/src/mssp2.c"
 20756 ;; Parameters:    Size  Location     Type
 20757 ;;		None
 20758 ;; Auto vars:     Size  Location     Type
 20759 ;;		None
 20760 ;; Return value:  Size  Location     Type
 20761 ;;                  1    wreg      _Bool 
 20762 ;; Registers used:
 20763 ;;		wreg, status,2, status,0
 20764 ;; Tracked objects:
 20765 ;;		On entry : 0/0
 20766 ;;		On exit  : 0/0
 20767 ;;		Unchanged: 0/0
 20768 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 20769 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 20770 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 20771 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 20772 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 20773 ;;Total ram usage:        0 bytes
 20774 ;; Hardware stack levels used: 1
 20775 ;; This function calls:
 20776 ;;		Nothing
 20777 ;; This function is called by:
 20778 ;;		_I2C2_EVENT_RX
 20779 ;; This function uses a non-reentrant model
 20780 ;;
 20781                           
 20782     1E09                     _I2C2_IsRxBufFull:	
 20783                           ;psect for function _I2C2_IsRxBufFull
 20784                           
 20785     1E09                     i1l5110:	
 20786                           ;incstack = 0
 20787                           ; Regs used in _I2C2_IsRxBufFull: [wreg+status,2+status,0]
 20788                           
 20789                           
 20790                           ;mcc_generated_files/i2c_host/src/mssp2.c: 471:     return SSP2STATbits.BF;
 20791     1E09  0024               	movlb	4	; select bank4
 20792     1E0A  081C               	movf	28,w	;volatile
 20793     1E0B  3901               	andlw	1
 20794     1E0C                     i1l1266:
 20795     1E0C  0008               	return
 20796     1E0D                     __end_of_I2C2_IsRxBufFull:
 20797                           
 20798                           	psect	text91
 20799     1DED                     __ptext91:	
 20800 ;; *************** function _I2C2_DataReceive *****************
 20801 ;; Defined at:
 20802 ;;		line 401 in file "mcc_generated_files/i2c_host/src/mssp2.c"
 20803 ;; Parameters:    Size  Location     Type
 20804 ;;		None
 20805 ;; Auto vars:     Size  Location     Type
 20806 ;;		None
 20807 ;; Return value:  Size  Location     Type
 20808 ;;                  1    wreg      unsigned char 
 20809 ;; Registers used:
 20810 ;;		wreg
 20811 ;; Tracked objects:
 20812 ;;		On entry : 0/0
 20813 ;;		On exit  : 0/0
 20814 ;;		Unchanged: 0/0
 20815 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 20816 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 20817 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 20818 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 20819 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 20820 ;;Total ram usage:        0 bytes
 20821 ;; Hardware stack levels used: 1
 20822 ;; This function calls:
 20823 ;;		Nothing
 20824 ;; This function is called by:
 20825 ;;		_I2C2_EVENT_RX
 20826 ;; This function uses a non-reentrant model
 20827 ;;
 20828                           
 20829     1DED                     _I2C2_DataReceive:	
 20830                           ;psect for function _I2C2_DataReceive
 20831                           
 20832     1DED                     i1l5114:	
 20833                           ;incstack = 0
 20834                           ; Regs used in _I2C2_DataReceive: [wreg]
 20835                           
 20836                           
 20837                           ;mcc_generated_files/i2c_host/src/mssp2.c: 403:     return SSP2BUF;
 20838     1DED  0024               	movlb	4	; select bank4
 20839     1DEE  0819               	movf	25,w	;volatile
 20840     1DEF                     i1l1227:
 20841     1DEF  0008               	return
 20842     1DF0                     __end_of_I2C2_DataReceive:
 20843                           
 20844                           	psect	text92
 20845     1E05                     __ptext92:	
 20846 ;; *************** function _I2C2_AckSend *****************
 20847 ;; Defined at:
 20848 ;;		line 442 in file "mcc_generated_files/i2c_host/src/mssp2.c"
 20849 ;; Parameters:    Size  Location     Type
 20850 ;;		None
 20851 ;; Auto vars:     Size  Location     Type
 20852 ;;		None
 20853 ;; Return value:  Size  Location     Type
 20854 ;;                  1    wreg      void 
 20855 ;; Registers used:
 20856 ;;		None
 20857 ;; Tracked objects:
 20858 ;;		On entry : 0/0
 20859 ;;		On exit  : 0/0
 20860 ;;		Unchanged: 0/0
 20861 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 20862 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 20863 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 20864 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 20865 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 20866 ;;Total ram usage:        0 bytes
 20867 ;; Hardware stack levels used: 1
 20868 ;; This function calls:
 20869 ;;		Nothing
 20870 ;; This function is called by:
 20871 ;;		_I2C2_EVENT_RX
 20872 ;; This function uses a non-reentrant model
 20873 ;;
 20874                           
 20875     1E05                     _I2C2_AckSend:	
 20876                           ;psect for function _I2C2_AckSend
 20877                           
 20878     1E05                     i1l5118:	
 20879                           ;incstack = 0
 20880                           ; Regs used in _I2C2_AckSend: []
 20881                           
 20882                           
 20883                           ;mcc_generated_files/i2c_host/src/mssp2.c: 444:     SSP2CON2bits.ACKDT = 0;
 20884     1E05  0024               	movlb	4	; select bank4
 20885     1E06  129E               	bcf	30,5	;volatile
 20886                           
 20887                           ;mcc_generated_files/i2c_host/src/mssp2.c: 445:     SSP2CON2bits.ACKEN = 1;
 20888     1E07  161E               	bsf	30,4	;volatile
 20889     1E08                     i1l1251:
 20890     1E08  0008               	return
 20891     1E09                     __end_of_I2C2_AckSend:
 20892                           
 20893                           	psect	text93
 20894     1DEA                     __ptext93:	
 20895 ;; *************** function _I2C2_StopSend *****************
 20896 ;; Defined at:
 20897 ;;		line 437 in file "mcc_generated_files/i2c_host/src/mssp2.c"
 20898 ;; Parameters:    Size  Location     Type
 20899 ;;		None
 20900 ;; Auto vars:     Size  Location     Type
 20901 ;;		None
 20902 ;; Return value:  Size  Location     Type
 20903 ;;                  1    wreg      void 
 20904 ;; Registers used:
 20905 ;;		None
 20906 ;; Tracked objects:
 20907 ;;		On entry : 0/0
 20908 ;;		On exit  : 0/0
 20909 ;;		Unchanged: 0/0
 20910 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 20911 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 20912 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 20913 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 20914 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 20915 ;;Total ram usage:        0 bytes
 20916 ;; Hardware stack levels used: 1
 20917 ;; This function calls:
 20918 ;;		Nothing
 20919 ;; This function is called by:
 20920 ;;		_I2C2_EVENT_STOP
 20921 ;; This function uses a non-reentrant model
 20922 ;;
 20923                           
 20924     1DEA                     _I2C2_StopSend:	
 20925                           ;psect for function _I2C2_StopSend
 20926                           
 20927     1DEA                     i1l5008:	
 20928                           ;incstack = 0
 20929 ;; hardware stack exceeded
 20930                           ; Regs used in _I2C2_StopSend: []
 20931                           
 20932                           
 20933                           ;mcc_generated_files/i2c_host/src/mssp2.c: 439:     SSP2CON2bits.PEN = 1;
 20934     1DEA  0024               	movlb	4	; select bank4
 20935     1DEB  151E               	bsf	30,2	;volatile
 20936     1DEC                     i1l1248:
 20937     1DEC  0008               	return
 20938     1DED                     __end_of_I2C2_StopSend:
 20939                           
 20940                           	psect	text94
 20941     1FD6                     __ptext94:	
 20942 ;; *************** function _I2C2_Close *****************
 20943 ;; Defined at:
 20944 ;;		line 242 in file "mcc_generated_files/i2c_host/src/mssp2.c"
 20945 ;; Parameters:    Size  Location     Type
 20946 ;;		None
 20947 ;; Auto vars:     Size  Location     Type
 20948 ;;		None
 20949 ;; Return value:  Size  Location     Type
 20950 ;;                  1    wreg      void 
 20951 ;; Registers used:
 20952 ;;		status,2, status,0, pclath, cstack
 20953 ;; Tracked objects:
 20954 ;;		On entry : 0/0
 20955 ;;		On exit  : 0/0
 20956 ;;		Unchanged: 0/0
 20957 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 20958 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 20959 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 20960 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 20961 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 20962 ;;Total ram usage:        0 bytes
 20963 ;; Hardware stack levels used: 1
 20964 ;; Hardware stack levels required when called: 1
 20965 ;; This function calls:
 20966 ;;		_I2C2_ErrorInterruptClear
 20967 ;;		_I2C2_InterruptClear
 20968 ;;		_I2C2_StatusFlagsClear
 20969 ;; This function is called by:
 20970 ;;		_I2C2_EventHandler
 20971 ;;		_I2C2_EVENT_STOP
 20972 ;; This function uses a non-reentrant model
 20973 ;;
 20974                           
 20975     1FD6                     _I2C2_Close:	
 20976                           ;psect for function _I2C2_Close
 20977                           
 20978     1FD6                     i1l4998:	
 20979                           ;incstack = 0
 20980 ;; hardware stack exceeded
 20981                           ; Regs used in _I2C2_Close: [status,2+status,0+pclath+cstack]
 20982                           
 20983                           
 20984                           ;mcc_generated_files/i2c_host/src/mssp2.c: 244:     i2c2Status.busy = 0;
 20985     1FD6  0020               	movlb	0	; select bank0
 20986     1FD7  01D5               	clrf	_i2c2Status	;volatile
 20987     1FD8                     i1l5000:
 20988                           
 20989                           ;mcc_generated_files/i2c_host/src/mssp2.c: 245:     i2c2Status.address = 0xFF;
 20990     1FD8  3000               	movlw	0
 20991     1FD9  00D7               	movwf	_i2c2Status+2	;volatile
 20992     1FDA  30FF               	movlw	255
 20993     1FDB  00D6               	movwf	_i2c2Status+1	;volatile
 20994                           
 20995                           ;mcc_generated_files/i2c_host/src/mssp2.c: 246:     i2c2Status.writePtr = ((void*)0);
 20996     1FDC  01D8               	clrf	_i2c2Status+3	;volatile
 20997     1FDD  01D9               	clrf	_i2c2Status+4	;volatile
 20998                           
 20999                           ;mcc_generated_files/i2c_host/src/mssp2.c: 247:     i2c2Status.readPtr = ((void*)0);
 21000     1FDE  01DC               	clrf	_i2c2Status+7	;volatile
 21001     1FDF  01DD               	clrf	_i2c2Status+8	;volatile
 21002                           
 21003                           ;mcc_generated_files/i2c_host/src/mssp2.c: 248:     i2c2Status.state = I2C_STATE_IDLE;
 21004     1FE0  01E2               	clrf	_i2c2Status+13	;volatile
 21005     1FE1                     i1l5002:
 21006                           
 21007                           ;mcc_generated_files/i2c_host/src/mssp2.c: 249:     I2C2_InterruptClear();
 21008     1FE1  319D  25E7  319F   	fcall	_I2C2_InterruptClear
 21009     1FE4                     i1l5004:
 21010                           
 21011                           ;mcc_generated_files/i2c_host/src/mssp2.c: 250:     I2C2_ErrorInterruptClear();
 21012     1FE4  319D  25E4  319F   	fcall	_I2C2_ErrorInterruptClear
 21013     1FE7                     i1l5006:
 21014                           
 21015                           ;mcc_generated_files/i2c_host/src/mssp2.c: 251:     I2C2_StatusFlagsClear();
 21016     1FE7  319E  2601  319F   	fcall	_I2C2_StatusFlagsClear
 21017     1FEA                     i1l1176:
 21018     1FEA  0008               	return
 21019     1FEB                     __end_of_I2C2_Close:
 21020                           
 21021                           	psect	text95
 21022     1E01                     __ptext95:	
 21023 ;; *************** function _I2C2_StatusFlagsClear *****************
 21024 ;; Defined at:
 21025 ;;		line 496 in file "mcc_generated_files/i2c_host/src/mssp2.c"
 21026 ;; Parameters:    Size  Location     Type
 21027 ;;		None
 21028 ;; Auto vars:     Size  Location     Type
 21029 ;;		None
 21030 ;; Return value:  Size  Location     Type
 21031 ;;                  1    wreg      void 
 21032 ;; Registers used:
 21033 ;;		None
 21034 ;; Tracked objects:
 21035 ;;		On entry : 0/0
 21036 ;;		On exit  : 0/0
 21037 ;;		Unchanged: 0/0
 21038 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 21039 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 21040 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 21041 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 21042 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 21043 ;;Total ram usage:        0 bytes
 21044 ;; Hardware stack levels used: 1
 21045 ;; This function calls:
 21046 ;;		Nothing
 21047 ;; This function is called by:
 21048 ;;		_I2C2_Close
 21049 ;; This function uses a non-reentrant model
 21050 ;;
 21051                           
 21052     1E01                     _I2C2_StatusFlagsClear:	
 21053                           ;psect for function _I2C2_StatusFlagsClear
 21054                           
 21055     1E01                     i1l4902:	
 21056                           ;incstack = 0
 21057 ;; hardware stack exceeded
 21058                           ; Regs used in _I2C2_StatusFlagsClear: []
 21059                           
 21060                           
 21061                           ;mcc_generated_files/i2c_host/src/mssp2.c: 498:     SSP2CON1bits.WCOL = 0;
 21062     1E01  0024               	movlb	4	; select bank4
 21063     1E02  139D               	bcf	29,7	;volatile
 21064                           
 21065                           ;mcc_generated_files/i2c_host/src/mssp2.c: 499:     SSP2CON1bits.SSPOV = 0;
 21066     1E03  131D               	bcf	29,6	;volatile
 21067     1E04                     i1l1281:
 21068     1E04  0008               	return
 21069     1E05                     __end_of_I2C2_StatusFlagsClear:
 21070                           
 21071                           	psect	text96
 21072     1DE7                     __ptext96:	
 21073 ;; *************** function _I2C2_InterruptClear *****************
 21074 ;; Defined at:
 21075 ;;		line 486 in file "mcc_generated_files/i2c_host/src/mssp2.c"
 21076 ;; Parameters:    Size  Location     Type
 21077 ;;		None
 21078 ;; Auto vars:     Size  Location     Type
 21079 ;;		None
 21080 ;; Return value:  Size  Location     Type
 21081 ;;                  1    wreg      void 
 21082 ;; Registers used:
 21083 ;;		None
 21084 ;; Tracked objects:
 21085 ;;		On entry : 0/0
 21086 ;;		On exit  : 0/0
 21087 ;;		Unchanged: 0/0
 21088 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 21089 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 21090 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 21091 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 21092 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 21093 ;;Total ram usage:        0 bytes
 21094 ;; Hardware stack levels used: 1
 21095 ;; This function calls:
 21096 ;;		Nothing
 21097 ;; This function is called by:
 21098 ;;		_I2C2_Close
 21099 ;;		_I2C2_EventHandler
 21100 ;; This function uses a non-reentrant model
 21101 ;;
 21102                           
 21103     1DE7                     _I2C2_InterruptClear:	
 21104                           ;psect for function _I2C2_InterruptClear
 21105                           
 21106     1DE7                     i1l4898:	
 21107                           ;incstack = 0
 21108                           ; Regs used in _I2C2_InterruptClear: []
 21109                           
 21110                           
 21111                           ;mcc_generated_files/i2c_host/src/mssp2.c: 488:     PIR2bits.SSP2IF = 0;
 21112     1DE7  0020               	movlb	0	; select bank0
 21113     1DE8  1192               	bcf	18,3	;volatile
 21114     1DE9                     i1l1275:
 21115     1DE9  0008               	return
 21116     1DEA                     __end_of_I2C2_InterruptClear:
 21117                           
 21118                           	psect	text97
 21119     1DE4                     __ptext97:	
 21120 ;; *************** function _I2C2_ErrorInterruptClear *****************
 21121 ;; Defined at:
 21122 ;;		line 491 in file "mcc_generated_files/i2c_host/src/mssp2.c"
 21123 ;; Parameters:    Size  Location     Type
 21124 ;;		None
 21125 ;; Auto vars:     Size  Location     Type
 21126 ;;		None
 21127 ;; Return value:  Size  Location     Type
 21128 ;;                  1    wreg      void 
 21129 ;; Registers used:
 21130 ;;		None
 21131 ;; Tracked objects:
 21132 ;;		On entry : 0/0
 21133 ;;		On exit  : 0/0
 21134 ;;		Unchanged: 0/0
 21135 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 21136 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 21137 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 21138 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 21139 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 21140 ;;Total ram usage:        0 bytes
 21141 ;; Hardware stack levels used: 1
 21142 ;; This function calls:
 21143 ;;		Nothing
 21144 ;; This function is called by:
 21145 ;;		_I2C2_Close
 21146 ;;		_I2C2_ErrorEventHandler
 21147 ;; This function uses a non-reentrant model
 21148 ;;
 21149                           
 21150     1DE4                     _I2C2_ErrorInterruptClear:	
 21151                           ;psect for function _I2C2_ErrorInterruptClear
 21152                           
 21153     1DE4                     i1l4900:	
 21154                           ;incstack = 0
 21155 ;; hardware stack exceeded
 21156                           ; Regs used in _I2C2_ErrorInterruptClear: []
 21157                           
 21158                           
 21159                           ;mcc_generated_files/i2c_host/src/mssp2.c: 493:     PIR2bits.BCL2IF = 0;
 21160     1DE4  0020               	movlb	0	; select bank0
 21161     1DE5  1112               	bcf	18,2	;volatile
 21162     1DE6                     i1l1278:
 21163     1DE6  0008               	return
 21164     1DE7                     __end_of_I2C2_ErrorInterruptClear:
 21165                           
 21166                           	psect	text98
 21167     1DFD                     __ptext98:	
 21168 ;; *************** function _I2C2_BusReset *****************
 21169 ;; Defined at:
 21170 ;;		line 411 in file "mcc_generated_files/i2c_host/src/mssp2.c"
 21171 ;; Parameters:    Size  Location     Type
 21172 ;;		None
 21173 ;; Auto vars:     Size  Location     Type
 21174 ;;		None
 21175 ;; Return value:  Size  Location     Type
 21176 ;;                  1    wreg      void 
 21177 ;; Registers used:
 21178 ;;		None
 21179 ;; Tracked objects:
 21180 ;;		On entry : 0/0
 21181 ;;		On exit  : 0/0
 21182 ;;		Unchanged: 0/0
 21183 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 21184 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 21185 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 21186 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 21187 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 21188 ;;Total ram usage:        0 bytes
 21189 ;; Hardware stack levels used: 1
 21190 ;; This function calls:
 21191 ;;		Nothing
 21192 ;; This function is called by:
 21193 ;;		_I2C2_EVENT_RESET
 21194 ;; This function uses a non-reentrant model
 21195 ;;
 21196                           
 21197     1DFD                     _I2C2_BusReset:	
 21198                           ;psect for function _I2C2_BusReset
 21199                           
 21200     1DFD                     i1l5010:	
 21201                           ;incstack = 0
 21202                           ; Regs used in _I2C2_BusReset: []
 21203                           
 21204                           
 21205                           ;mcc_generated_files/i2c_host/src/mssp2.c: 413:     SSP2CON1bits.SSPEN = 0;
 21206     1DFD  0024               	movlb	4	; select bank4
 21207     1DFE  129D               	bcf	29,5	;volatile
 21208                           
 21209                           ;mcc_generated_files/i2c_host/src/mssp2.c: 414:     SSP2CON1bits.SSPEN = 1;
 21210     1DFF  169D               	bsf	29,5	;volatile
 21211     1E00                     i1l1233:
 21212     1E00  0008               	return
 21213     1E01                     __end_of_I2C2_BusReset:
 21214                           
 21215                           	psect	text99
 21216     103E                     __ptext99:	
 21217 ;; *************** function _EUSART_TransmitISR *****************
 21218 ;; Defined at:
 21219 ;;		line 377 in file "mcc_generated_files/uart/src/eusart.c"
 21220 ;; Parameters:    Size  Location     Type
 21221 ;;		None
 21222 ;; Auto vars:     Size  Location     Type
 21223 ;;  tempTxTail      1    0[COMMON] unsigned char 
 21224 ;; Return value:  Size  Location     Type
 21225 ;;                  1    wreg      void 
 21226 ;; Registers used:
 21227 ;;		wreg, fsr1l, fsr1h, status,2, status,0
 21228 ;; Tracked objects:
 21229 ;;		On entry : 0/0
 21230 ;;		On exit  : 0/0
 21231 ;;		Unchanged: 0/0
 21232 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 21233 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 21234 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 21235 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 21236 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 21237 ;;Total ram usage:        1 bytes
 21238 ;; Hardware stack levels used: 1
 21239 ;; This function calls:
 21240 ;;		Nothing
 21241 ;; This function is called by:
 21242 ;;		_EUSART_Initialize
 21243 ;;		_INTERRUPT_InterruptManager
 21244 ;; This function uses a non-reentrant model
 21245 ;;
 21246                           
 21247     103E                     _EUSART_TransmitISR:	
 21248                           ;psect for function _EUSART_TransmitISR
 21249                           
 21250     103E                     i1l6712:	
 21251                           ;incstack = 0
 21252                           ; Regs used in _EUSART_TransmitISR: [wreg+fsr1l+fsr1h+status,2+status,0]
 21253                           
 21254                           
 21255                           ;mcc_generated_files/uart/src/eusart.c: 379:     uint8_t tempTxTail;;mcc_generated_files
      +                          /uart/src/eusart.c: 381:     if(sizeof(eusartTxBuffer) > eusartTxBufferRemaining)
 21256     103E  3008               	movlw	8
 21257     103F  0020               	movlb	0	; select bank0
 21258     1040  026B               	subwf	_eusartTxBufferRemaining,w	;volatile
 21259     1041  1803               	skipnc
 21260     1042  2844               	goto	u743_21
 21261     1043  2845               	goto	u743_20
 21262     1044                     u743_21:
 21263     1044  2857               	goto	i1l739
 21264     1045                     u743_20:
 21265     1045                     i1l6714:
 21266                           
 21267                           ;mcc_generated_files/uart/src/eusart.c: 382:     {;mcc_generated_files/uart/src/eusart.c
      +                          : 383:        TX1REG = eusartTxBuffer[eusartTxTail];
 21268     1045  086C               	movf	_eusartTxTail,w
 21269     1046  3E38               	addlw	(low (_eusartTxBuffer| (0+256)))& (0+255)
 21270     1047  0086               	movwf	6
 21271     1048  3001               	movlw	1	; select bank2/3
 21272     1049  0087               	movwf	7
 21273     104A  0801               	movf	1,w
 21274     104B  0023               	movlb	3	; select bank3
 21275     104C  009A               	movwf	26	;volatile
 21276     104D                     i1l6716:
 21277                           
 21278                           ;mcc_generated_files/uart/src/eusart.c: 384:        tempTxTail = (eusartTxTail + 1U) & (
      +                          (8U) - 1U);
 21279     104D  0020               	movlb	0	; select bank0
 21280     104E  086C               	movf	_eusartTxTail,w	;volatile
 21281     104F  3E01               	addlw	1
 21282     1050  3907               	andlw	7
 21283     1051  00F0               	movwf	EUSART_TransmitISR@tempTxTail
 21284     1052                     i1l6718:
 21285                           
 21286                           ;mcc_generated_files/uart/src/eusart.c: 386:        eusartTxTail = tempTxTail;
 21287     1052  0870               	movf	EUSART_TransmitISR@tempTxTail,w
 21288     1053  00EC               	movwf	_eusartTxTail	;volatile
 21289     1054                     i1l6720:
 21290                           
 21291                           ;mcc_generated_files/uart/src/eusart.c: 387:        eusartTxBufferRemaining++;
 21292     1054  3001               	movlw	1
 21293     1055  07EB               	addwf	_eusartTxBufferRemaining,f	;volatile
 21294                           
 21295                           ;mcc_generated_files/uart/src/eusart.c: 388:     }
 21296     1056  2859               	goto	i1l742
 21297     1057                     i1l739:	
 21298                           ;mcc_generated_files/uart/src/eusart.c: 389:     else
 21299                           
 21300                           
 21301                           ;mcc_generated_files/uart/src/eusart.c: 390:     {;mcc_generated_files/uart/src/eusart.c
      +                          : 391:         PIE1bits.TXIE = 0;
 21302     1057  0021               	movlb	1	; select bank1
 21303     1058  1211               	bcf	17,4	;volatile
 21304     1059                     i1l742:
 21305     1059  0008               	return
 21306     105A                     __end_of_EUSART_TransmitISR:
 21307                           
 21308                           	psect	text100
 21309     13C6                     __ptext100:	
 21310 ;; *************** function _EUSART_ReceiveISR *****************
 21311 ;; Defined at:
 21312 ;;		line 308 in file "mcc_generated_files/uart/src/eusart.c"
 21313 ;; Parameters:    Size  Location     Type
 21314 ;;		None
 21315 ;; Auto vars:     Size  Location     Type
 21316 ;;  tempRxHead      1    1[COMMON] unsigned char 
 21317 ;;  regValue        1    0[COMMON] unsigned char 
 21318 ;; Return value:  Size  Location     Type
 21319 ;;                  1    wreg      void 
 21320 ;; Registers used:
 21321 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 21322 ;; Tracked objects:
 21323 ;;		On entry : 0/0
 21324 ;;		On exit  : 0/0
 21325 ;;		Unchanged: 0/0
 21326 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 21327 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 21328 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 21329 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 21330 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 21331 ;;Total ram usage:        2 bytes
 21332 ;; Hardware stack levels used: 1
 21333 ;; Hardware stack levels required when called: 1
 21334 ;; This function calls:
 21335 ;;		NULL
 21336 ;;		_EUSART_DefaultFramingErrorCallback
 21337 ;;		_EUSART_DefaultOverrunErrorCallback
 21338 ;; This function is called by:
 21339 ;;		_EUSART_Initialize
 21340 ;;		_INTERRUPT_InterruptManager
 21341 ;; This function uses a non-reentrant model
 21342 ;;
 21343                           
 21344     13C6                     _EUSART_ReceiveISR:	
 21345                           ;psect for function _EUSART_ReceiveISR
 21346                           
 21347     13C6                     i1l6678:	
 21348                           ;incstack = 0
 21349                           ; Regs used in _EUSART_ReceiveISR: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
 21350                           
 21351                           
 21352                           ;mcc_generated_files/uart/src/eusart.c: 310:     uint8_t regValue;;mcc_generated_files/u
      +                          art/src/eusart.c: 311:  uint8_t tempRxHead;;mcc_generated_files/uart/src/eusart.c: 314: 
      +                              eusartRxStatusBuffer[eusartRxHead].status = 0;
 21353     13C6  0020               	movlb	0	; select bank0
 21354     13C7  356A               	lslf	_eusartRxHead,w	;volatile
 21355     13C8  3E20               	addlw	(low (_eusartRxStatusBuffer| (0+256)))& (0+255)
 21356     13C9  0086               	movwf	6
 21357     13CA  3001               	movlw	1	; select bank2/3
 21358     13CB  0087               	movwf	7
 21359     13CC  3000               	movlw	0
 21360     13CD  3FC0               	movwi [0]fsr1
 21361     13CE  3FC1               	movwi [1]fsr1
 21362     13CF                     i1l6680:
 21363                           
 21364                           ;mcc_generated_files/uart/src/eusart.c: 316:     if(1 == RC1STAbits.OERR)
 21365     13CF  0023               	movlb	3	; select bank3
 21366     13D0  1C9D               	btfss	29,1	;volatile
 21367     13D1  2BD3               	goto	u738_21
 21368     13D2  2BD4               	goto	u738_20
 21369     13D3                     u738_21:
 21370     13D3  2BE7               	goto	i1l6688
 21371     13D4                     u738_20:
 21372     13D4                     i1l6682:
 21373                           
 21374                           ;mcc_generated_files/uart/src/eusart.c: 317:     {;mcc_generated_files/uart/src/eusart.c
      +                          : 318:         eusartRxStatusBuffer[eusartRxHead].oerr = 1;
 21375     13D4  0020               	movlb	0	; select bank0
 21376     13D5  356A               	lslf	_eusartRxHead,w	;volatile
 21377     13D6  3E20               	addlw	(low (_eusartRxStatusBuffer| (0+256)))& (0+255)
 21378     13D7  0086               	movwf	6
 21379     13D8  3001               	movlw	1	; select bank2/3
 21380     13D9  0087               	movwf	7
 21381     13DA  1501               	bsf	1,2
 21382     13DB                     i1l6684:
 21383                           
 21384                           ;mcc_generated_files/uart/src/eusart.c: 319:         if(((void*)0) != EUSART_OverrunErro
      +                          rHandler)
 21385     13DB  0022               	movlb	2	; select bank2
 21386     13DC  0850               	movf	_EUSART_OverrunErrorHandler^(0+256),w
 21387     13DD  0451               	iorwf	(_EUSART_OverrunErrorHandler+1)^(0+256),w
 21388     13DE  1903               	btfsc	3,2
 21389     13DF  2BE1               	goto	u739_21
 21390     13E0  2BE2               	goto	u739_20
 21391     13E1                     u739_21:
 21392     13E1  2BE7               	goto	i1l6688
 21393     13E2                     u739_20:
 21394     13E2                     i1l6686:
 21395                           
 21396                           ;mcc_generated_files/uart/src/eusart.c: 320:         {;mcc_generated_files/uart/src/eusa
      +                          rt.c: 321:             EUSART_OverrunErrorHandler();
 21397     13E2  0851               	movf	(_EUSART_OverrunErrorHandler+1)^(0+256),w
 21398     13E3  008A               	movwf	10
 21399     13E4  0850               	movf	_EUSART_OverrunErrorHandler^(0+256),w
 21400     13E5  000A               	callw
 21401     13E6  3193               	pagesel	$
 21402     13E7                     i1l6688:
 21403                           
 21404                           ;mcc_generated_files/uart/src/eusart.c: 324:     if(1 == RC1STAbits.FERR)
 21405     13E7  0023               	movlb	3	; select bank3
 21406     13E8  1D1D               	btfss	29,2	;volatile
 21407     13E9  2BEB               	goto	u740_21
 21408     13EA  2BEC               	goto	u740_20
 21409     13EB                     u740_21:
 21410     13EB  2BFF               	goto	i1l6696
 21411     13EC                     u740_20:
 21412     13EC                     i1l6690:
 21413                           
 21414                           ;mcc_generated_files/uart/src/eusart.c: 325:     {;mcc_generated_files/uart/src/eusart.c
      +                          : 326:         eusartRxStatusBuffer[eusartRxHead].ferr = 1;
 21415     13EC  0020               	movlb	0	; select bank0
 21416     13ED  356A               	lslf	_eusartRxHead,w	;volatile
 21417     13EE  3E20               	addlw	(low (_eusartRxStatusBuffer| (0+256)))& (0+255)
 21418     13EF  0086               	movwf	6
 21419     13F0  3001               	movlw	1	; select bank2/3
 21420     13F1  0087               	movwf	7
 21421     13F2  1481               	bsf	1,1
 21422     13F3                     i1l6692:
 21423                           
 21424                           ;mcc_generated_files/uart/src/eusart.c: 327:         if(((void*)0) != EUSART_FramingErro
      +                          rHandler)
 21425     13F3  0022               	movlb	2	; select bank2
 21426     13F4  0852               	movf	_EUSART_FramingErrorHandler^(0+256),w
 21427     13F5  0453               	iorwf	(_EUSART_FramingErrorHandler+1)^(0+256),w
 21428     13F6  1903               	btfsc	3,2
 21429     13F7  2BF9               	goto	u741_21
 21430     13F8  2BFA               	goto	u741_20
 21431     13F9                     u741_21:
 21432     13F9  2BFF               	goto	i1l6696
 21433     13FA                     u741_20:
 21434     13FA                     i1l6694:
 21435                           
 21436                           ;mcc_generated_files/uart/src/eusart.c: 328:         {;mcc_generated_files/uart/src/eusa
      +                          rt.c: 329:             EUSART_FramingErrorHandler();
 21437     13FA  0853               	movf	(_EUSART_FramingErrorHandler+1)^(0+256),w
 21438     13FB  008A               	movwf	10
 21439     13FC  0852               	movf	_EUSART_FramingErrorHandler^(0+256),w
 21440     13FD  000A               	callw
 21441     13FE  3193               	pagesel	$
 21442     13FF                     i1l6696:
 21443                           
 21444                           ;mcc_generated_files/uart/src/eusart.c: 333:     regValue = RC1REG;
 21445     13FF  0023               	movlb	3	; select bank3
 21446     1400  0819               	movf	25,w	;volatile
 21447     1401  00F0               	movwf	EUSART_ReceiveISR@regValue
 21448     1402                     i1l6698:
 21449                           
 21450                           ;mcc_generated_files/uart/src/eusart.c: 335:     tempRxHead = (eusartRxHead + 1U) & ((8U
      +                          ) - 1U);
 21451     1402  0020               	movlb	0	; select bank0
 21452     1403  086A               	movf	_eusartRxHead,w	;volatile
 21453     1404  3E01               	addlw	1
 21454     1405  3907               	andlw	7
 21455     1406  00F1               	movwf	EUSART_ReceiveISR@tempRxHead
 21456     1407                     i1l6700:
 21457                           
 21458                           ;mcc_generated_files/uart/src/eusart.c: 336:     if (tempRxHead == eusartRxTail)
 21459     1407  0871               	movf	EUSART_ReceiveISR@tempRxHead,w
 21460     1408  0669               	xorwf	_eusartRxTail,w	;volatile
 21461     1409  1D03               	skipz
 21462     140A  2C0C               	goto	u742_21
 21463     140B  2C0D               	goto	u742_20
 21464     140C                     u742_21:
 21465     140C  2C0E               	goto	i1l6704
 21466     140D                     u742_20:
 21467     140D  2C19               	goto	i1l729
 21468     140E                     i1l6704:
 21469                           
 21470                           ;mcc_generated_files/uart/src/eusart.c: 341:     {;mcc_generated_files/uart/src/eusart.c
      +                          : 342:         eusartRxBuffer[eusartRxHead] = regValue;
 21471     140E  086A               	movf	_eusartRxHead,w
 21472     140F  3E30               	addlw	(low (_eusartRxBuffer| (0+256)))& (0+255)
 21473     1410  0086               	movwf	6
 21474     1411  3001               	movlw	1	; select bank2/3
 21475     1412  0087               	movwf	7
 21476     1413  0870               	movf	EUSART_ReceiveISR@regValue,w
 21477     1414  0081               	movwf	1
 21478     1415                     i1l6706:
 21479                           
 21480                           ;mcc_generated_files/uart/src/eusart.c: 343:   eusartRxHead = tempRxHead;
 21481     1415  0871               	movf	EUSART_ReceiveISR@tempRxHead,w
 21482     1416  00EA               	movwf	_eusartRxHead	;volatile
 21483     1417                     i1l6708:
 21484                           
 21485                           ;mcc_generated_files/uart/src/eusart.c: 344:   eusartRxCount++;
 21486     1417  3001               	movlw	1
 21487     1418  07E8               	addwf	_eusartRxCount,f	;volatile
 21488     1419                     i1l729:
 21489     1419  0008               	return
 21490     141A                     __end_of_EUSART_ReceiveISR:
 21491                           
 21492                           	psect	text101
 21493     1DF9                     __ptext101:	
 21494 ;; *************** function _EUSART_DefaultOverrunErrorCallback *****************
 21495 ;; Defined at:
 21496 ;;		line 423 in file "mcc_generated_files/uart/src/eusart.c"
 21497 ;; Parameters:    Size  Location     Type
 21498 ;;		None
 21499 ;; Auto vars:     Size  Location     Type
 21500 ;;		None
 21501 ;; Return value:  Size  Location     Type
 21502 ;;                  1    wreg      void 
 21503 ;; Registers used:
 21504 ;;		None
 21505 ;; Tracked objects:
 21506 ;;		On entry : 0/0
 21507 ;;		On exit  : 0/0
 21508 ;;		Unchanged: 0/0
 21509 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 21510 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 21511 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 21512 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 21513 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 21514 ;;Total ram usage:        0 bytes
 21515 ;; Hardware stack levels used: 1
 21516 ;; This function calls:
 21517 ;;		Nothing
 21518 ;; This function is called by:
 21519 ;;		_EUSART_Initialize
 21520 ;;		_EUSART_ReceiveISR
 21521 ;; This function uses a non-reentrant model
 21522 ;;
 21523                           
 21524     1DF9                     _EUSART_DefaultOverrunErrorCallback:	
 21525                           ;psect for function _EUSART_DefaultOverrunErrorCallback
 21526                           
 21527     1DF9                     i1l6416:	
 21528                           ;incstack = 0
 21529                           ; Regs used in _EUSART_DefaultOverrunErrorCallback: []
 21530                           
 21531                           
 21532                           ;mcc_generated_files/uart/src/eusart.c: 426:     RC1STAbits.CREN = 0;
 21533     1DF9  0023               	movlb	3	; select bank3
 21534     1DFA  121D               	bcf	29,4	;volatile
 21535                           
 21536                           ;mcc_generated_files/uart/src/eusart.c: 427:     RC1STAbits.CREN = 1;
 21537     1DFB  161D               	bsf	29,4	;volatile
 21538     1DFC                     i1l760:
 21539     1DFC  0008               	return
 21540     1DFD                     __end_of_EUSART_DefaultOverrunErrorCallback:
 21541                           
 21542                           	psect	text102
 21543     1DE1                     __ptext102:	
 21544 ;; *************** function _EUSART_DefaultFramingErrorCallback *****************
 21545 ;; Defined at:
 21546 ;;		line 418 in file "mcc_generated_files/uart/src/eusart.c"
 21547 ;; Parameters:    Size  Location     Type
 21548 ;;		None
 21549 ;; Auto vars:     Size  Location     Type
 21550 ;;		None
 21551 ;; Return value:  Size  Location     Type
 21552 ;;                  1    wreg      void 
 21553 ;; Registers used:
 21554 ;;		None
 21555 ;; Tracked objects:
 21556 ;;		On entry : 0/0
 21557 ;;		On exit  : 0/0
 21558 ;;		Unchanged: 0/0
 21559 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 21560 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 21561 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 21562 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 21563 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 21564 ;;Total ram usage:        0 bytes
 21565 ;; Hardware stack levels used: 1
 21566 ;; This function calls:
 21567 ;;		Nothing
 21568 ;; This function is called by:
 21569 ;;		_EUSART_Initialize
 21570 ;;		_EUSART_ReceiveISR
 21571 ;; This function uses a non-reentrant model
 21572 ;;
 21573                           
 21574     1DE1                     _EUSART_DefaultFramingErrorCallback:	
 21575                           ;psect for function _EUSART_DefaultFramingErrorCallback
 21576                           
 21577     1DE1                     i1l757:	
 21578                           ;incstack = 0
 21579                           ; Regs used in _EUSART_DefaultFramingErrorCallback: []
 21580                           
 21581     1DE1  0008               	return
 21582     1DE2                     __end_of_EUSART_DefaultFramingErrorCallback:
 21583                           
 21584                           	psect	text103
 21585     1F17                     __ptext103:	
 21586 ;; *************** function _ADC_ISR *****************
 21587 ;; Defined at:
 21588 ;;		line 134 in file "mcc_generated_files/adc/src/adc.c"
 21589 ;; Parameters:    Size  Location     Type
 21590 ;;		None
 21591 ;; Auto vars:     Size  Location     Type
 21592 ;;		None
 21593 ;; Return value:  Size  Location     Type
 21594 ;;                  1    wreg      void 
 21595 ;; Registers used:
 21596 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
 21597 ;; Tracked objects:
 21598 ;;		On entry : 0/0
 21599 ;;		On exit  : 0/0
 21600 ;;		Unchanged: 0/0
 21601 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 21602 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 21603 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 21604 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 21605 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 21606 ;;Total ram usage:        0 bytes
 21607 ;; Hardware stack levels used: 1
 21608 ;; Hardware stack levels required when called: 2
 21609 ;; This function calls:
 21610 ;;		NULL
 21611 ;;		_ADC_DefaultInterruptHandler
 21612 ;;		_adcConversionDoneHandler
 21613 ;; This function is called by:
 21614 ;;		_INTERRUPT_InterruptManager
 21615 ;; This function uses a non-reentrant model
 21616 ;;
 21617                           
 21618     1F17                     _ADC_ISR:	
 21619                           ;psect for function _ADC_ISR
 21620                           
 21621     1F17                     i1l6620:	
 21622                           ;incstack = 0
 21623                           ; Regs used in _ADC_ISR: [wreg-fsr0h+status,2+status,0+pclath+cstack]
 21624                           
 21625                           
 21626                           ;mcc_generated_files/adc/src/adc.c: 137:     PIR1bits.ADIF = 0;
 21627     1F17  0020               	movlb	0	; select bank0
 21628     1F18  1311               	bcf	17,6	;volatile
 21629     1F19                     i1l6622:
 21630                           
 21631                           ;mcc_generated_files/adc/src/adc.c: 139:  if(ADC_InterruptHandler)
 21632     1F19  0022               	movlb	2	; select bank2
 21633     1F1A  0864               	movf	_ADC_InterruptHandler^(0+256),w
 21634     1F1B  0465               	iorwf	(_ADC_InterruptHandler+1)^(0+256),w
 21635     1F1C  1903               	btfsc	3,2
 21636     1F1D  2F1F               	goto	u734_21
 21637     1F1E  2F20               	goto	u734_20
 21638     1F1F                     u734_21:
 21639     1F1F  2F25               	goto	i1l52
 21640     1F20                     u734_20:
 21641     1F20                     i1l6624:
 21642                           
 21643                           ;mcc_generated_files/adc/src/adc.c: 140:     {;mcc_generated_files/adc/src/adc.c: 141:  
      +                                 ADC_InterruptHandler();
 21644     1F20  0865               	movf	(_ADC_InterruptHandler+1)^(0+256),w
 21645     1F21  008A               	movwf	10
 21646     1F22  0864               	movf	_ADC_InterruptHandler^(0+256),w
 21647     1F23  000A               	callw
 21648     1F24  319F               	pagesel	$
 21649     1F25                     i1l52:
 21650     1F25  0008               	return
 21651     1F26                     __end_of_ADC_ISR:
 21652                           
 21653                           	psect	text104
 21654     1DE0                     __ptext104:	
 21655 ;; *************** function _ADC_DefaultInterruptHandler *****************
 21656 ;; Defined at:
 21657 ;;		line 150 in file "mcc_generated_files/adc/src/adc.c"
 21658 ;; Parameters:    Size  Location     Type
 21659 ;;		None
 21660 ;; Auto vars:     Size  Location     Type
 21661 ;;		None
 21662 ;; Return value:  Size  Location     Type
 21663 ;;                  1    wreg      void 
 21664 ;; Registers used:
 21665 ;;		None
 21666 ;; Tracked objects:
 21667 ;;		On entry : 0/0
 21668 ;;		On exit  : 0/0
 21669 ;;		Unchanged: 0/0
 21670 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 21671 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 21672 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 21673 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 21674 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 21675 ;;Total ram usage:        0 bytes
 21676 ;; Hardware stack levels used: 1
 21677 ;; This function calls:
 21678 ;;		Nothing
 21679 ;; This function is called by:
 21680 ;;		_ADC_Initialize
 21681 ;;		_ADC_ISR
 21682 ;; This function uses a non-reentrant model
 21683 ;;
 21684                           
 21685     1DE0                     _ADC_DefaultInterruptHandler:	
 21686                           ;psect for function _ADC_DefaultInterruptHandler
 21687                           
 21688     1DE0                     i1l58:	
 21689                           ;incstack = 0
 21690                           ; Regs used in _ADC_DefaultInterruptHandler: []
 21691                           
 21692     1DE0  0008               	return
 21693     1DE1                     __end_of_ADC_DefaultInterruptHandler:
 21694                           
 21695                           	psect	text105
 21696     11D0                     __ptext105:	
 21697 ;; *************** function _adcConversionDoneHandler *****************
 21698 ;; Defined at:
 21699 ;;		line 5 in file "adcMeasurements.c"
 21700 ;; Parameters:    Size  Location     Type
 21701 ;;		None
 21702 ;; Auto vars:     Size  Location     Type
 21703 ;;		None
 21704 ;; Return value:  Size  Location     Type
 21705 ;;                  1    wreg      void 
 21706 ;; Registers used:
 21707 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
 21708 ;; Tracked objects:
 21709 ;;		On entry : 0/0
 21710 ;;		On exit  : 0/0
 21711 ;;		Unchanged: 0/0
 21712 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 21713 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 21714 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 21715 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 21716 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 21717 ;;Total ram usage:        2 bytes
 21718 ;; Hardware stack levels used: 1
 21719 ;; Hardware stack levels required when called: 1
 21720 ;; This function calls:
 21721 ;;		_ADC_GetConversionResult
 21722 ;;		i1_ADC_SelectChannel
 21723 ;; This function is called by:
 21724 ;;		_initAdcMultiplexer
 21725 ;;		_ADC_ISR
 21726 ;; This function uses a non-reentrant model
 21727 ;;
 21728                           
 21729     11D0                     _adcConversionDoneHandler:	
 21730                           ;psect for function _adcConversionDoneHandler
 21731                           
 21732     11D0                     i1l6418:	
 21733                           ;incstack = 0
 21734                           ; Regs used in _adcConversionDoneHandler: [wreg-fsr0h+status,2+status,0+pclath+cstack]
 21735                           
 21736                           
 21737                           ;adcMeasurements.c: 10:     static adc_channel_t new_channel = potentiometer;;adcMeasure
      +                          ments.c: 11:     switch (new_channel) {
 21738     11D0  29E9               	goto	i1l6430
 21739     11D1                     i1l6420:
 21740                           
 21741                           ;adcMeasurements.c: 13:             ADC_potentiometer = ADC_GetConversionResult();
 21742     11D1  319E  262F  3191   	fcall	_ADC_GetConversionResult
 21743     11D4  0871               	movf	?_ADC_GetConversionResult+1,w
 21744     11D5  0022               	movlb	2	; select bank2
 21745     11D6  00CF               	movwf	(_ADC_potentiometer+1)^(0+256)	;volatile
 21746     11D7  0870               	movf	?_ADC_GetConversionResult,w
 21747     11D8  00CE               	movwf	_ADC_potentiometer^(0+256)	;volatile
 21748     11D9                     i1l6422:
 21749                           
 21750                           ;adcMeasurements.c: 14:             new_channel = hoogtesensor;
 21751     11D9  3012               	movlw	18
 21752     11DA  0020               	movlb	0	; select bank0
 21753     11DB  00EF               	movwf	adcConversionDoneHandler@new_channel
 21754                           
 21755                           ;adcMeasurements.c: 15:             break;
 21756     11DC  29FA               	goto	i1l6432
 21757     11DD                     i1l6424:
 21758                           
 21759                           ;adcMeasurements.c: 17:             ADC_hoogtesensor = ADC_GetConversionResult();
 21760     11DD  319E  262F  3191   	fcall	_ADC_GetConversionResult
 21761     11E0  0871               	movf	?_ADC_GetConversionResult+1,w
 21762     11E1  0022               	movlb	2	; select bank2
 21763     11E2  00CD               	movwf	(_ADC_hoogtesensor+1)^(0+256)	;volatile
 21764     11E3  0870               	movf	?_ADC_GetConversionResult,w
 21765     11E4  00CC               	movwf	_ADC_hoogtesensor^(0+256)	;volatile
 21766     11E5                     i1l6426:
 21767                           
 21768                           ;adcMeasurements.c: 18:             new_channel = potentiometer;
 21769     11E5  3010               	movlw	16
 21770     11E6  0020               	movlb	0	; select bank0
 21771     11E7  00EF               	movwf	adcConversionDoneHandler@new_channel
 21772                           
 21773                           ;adcMeasurements.c: 19:             break;
 21774     11E8  29FA               	goto	i1l6432
 21775     11E9                     i1l6430:
 21776     11E9  0020               	movlb	0	; select bank0
 21777     11EA  086F               	movf	adcConversionDoneHandler@new_channel,w
 21778     11EB  00F2               	movwf	??_adcConversionDoneHandler
 21779     11EC  01F3               	clrf	??_adcConversionDoneHandler+1
 21780                           
 21781                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 21782                           ; Switch size 1, requested type "simple"
 21783                           ; Number of cases is 1, Range of values is 0 to 0
 21784                           ; switch strategies available:
 21785                           ; Name         Instructions Cycles
 21786                           ; simple_byte            4     3 (average)
 21787                           ; direct_byte            8     6 (fixed)
 21788                           ; jumptable            260     6 (fixed)
 21789                           ;	Chosen strategy is simple_byte
 21790     11ED  0873               	movf	??_adcConversionDoneHandler+1,w
 21791     11EE  3A00               	xorlw	0	; case 0
 21792     11EF  1903               	skipnz
 21793     11F0  29F2               	goto	i1l7080
 21794     11F1  29FA               	goto	i1l6432
 21795     11F2                     i1l7080:
 21796                           
 21797                           ; Switch size 1, requested type "simple"
 21798                           ; Number of cases is 2, Range of values is 16 to 18
 21799                           ; switch strategies available:
 21800                           ; Name         Instructions Cycles
 21801                           ; simple_byte            7     4 (average)
 21802                           ; direct_byte           15     9 (fixed)
 21803                           ; jumptable            263     9 (fixed)
 21804                           ;	Chosen strategy is simple_byte
 21805     11F2  0872               	movf	??_adcConversionDoneHandler,w
 21806     11F3  3A10               	xorlw	16	; case 16
 21807     11F4  1903               	skipnz
 21808     11F5  29D1               	goto	i1l6420
 21809     11F6  3A02               	xorlw	2	; case 18
 21810     11F7  1903               	skipnz
 21811     11F8  29DD               	goto	i1l6424
 21812     11F9  29FA               	goto	i1l6432
 21813     11FA                     i1l6432:
 21814                           
 21815                           ;adcMeasurements.c: 21:     ADC_SelectChannel(new_channel);
 21816     11FA  086F               	movf	adcConversionDoneHandler@new_channel,w
 21817     11FB  319E  26DA  3191   	fcall	i1_ADC_SelectChannel
 21818     11FE                     i1l821:
 21819     11FE  0008               	return
 21820     11FF                     __end_of_adcConversionDoneHandler:
 21821                           
 21822                           	psect	text106
 21823     1EDA                     __ptext106:	
 21824 ;; *************** function i1_ADC_SelectChannel *****************
 21825 ;; Defined at:
 21826 ;;		line 82 in file "mcc_generated_files/adc/src/adc.c"
 21827 ;; Parameters:    Size  Location     Type
 21828 ;;  channel         1    wreg     enum E6663
 21829 ;; Auto vars:     Size  Location     Type
 21830 ;;  channel         1    1[COMMON] enum E6663
 21831 ;; Return value:  Size  Location     Type
 21832 ;;                  1    wreg      void 
 21833 ;; Registers used:
 21834 ;;		wreg, status,2, status,0
 21835 ;; Tracked objects:
 21836 ;;		On entry : 0/0
 21837 ;;		On exit  : 0/0
 21838 ;;		Unchanged: 0/0
 21839 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 21840 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 21841 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 21842 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 21843 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 21844 ;;Total ram usage:        2 bytes
 21845 ;; Hardware stack levels used: 1
 21846 ;; This function calls:
 21847 ;;		Nothing
 21848 ;; This function is called by:
 21849 ;;		_adcConversionDoneHandler
 21850 ;; This function uses a non-reentrant model
 21851 ;;
 21852                           
 21853     1EDA                     i1_ADC_SelectChannel:	
 21854                           ;psect for function i1_ADC_SelectChannel
 21855                           
 21856                           
 21857                           ;incstack = 0
 21858                           ; Regs used in i1_ADC_SelectChannel: [wreg+status,2+status,0]
 21859                           ;i1ADC_SelectChannel@channel stored from wreg
 21860     1EDA  00F1               	movwf	i1ADC_SelectChannel@channel
 21861     1EDB                     i1l5884:
 21862                           
 21863                           ;mcc_generated_files/adc/src/adc.c: 82: void ADC_SelectChannel(adc_channel_t channel);mc
      +                          c_generated_files/adc/src/adc.c: 83: {;mcc_generated_files/adc/src/adc.c: 85:     ADCON0
      +                          bits.CHS = channel;
 21864     1EDB  0871               	movf	i1ADC_SelectChannel@channel,w
 21865     1EDC  00F0               	movwf	??i1_ADC_SelectChannel
 21866     1EDD  0DF0               	rlf	??i1_ADC_SelectChannel,f
 21867     1EDE  0DF0               	rlf	??i1_ADC_SelectChannel,f
 21868     1EDF  0021               	movlb	1	; select bank1
 21869     1EE0  081D               	movf	29,w	;volatile
 21870     1EE1  0670               	xorwf	??i1_ADC_SelectChannel,w
 21871     1EE2  3903               	andlw	-253
 21872     1EE3  0670               	xorwf	??i1_ADC_SelectChannel,w
 21873     1EE4  009D               	movwf	29	;volatile
 21874     1EE5                     i1l30:
 21875     1EE5  0008               	return
 21876     1EE6                     __end_ofi1_ADC_SelectChannel:
 21877                           
 21878                           	psect	text107
 21879     1E2F                     __ptext107:	
 21880 ;; *************** function _ADC_GetConversionResult *****************
 21881 ;; Defined at:
 21882 ;;		line 100 in file "mcc_generated_files/adc/src/adc.c"
 21883 ;; Parameters:    Size  Location     Type
 21884 ;;		None
 21885 ;; Auto vars:     Size  Location     Type
 21886 ;;		None
 21887 ;; Return value:  Size  Location     Type
 21888 ;;                  2    0[COMMON] unsigned short 
 21889 ;; Registers used:
 21890 ;;		wreg
 21891 ;; Tracked objects:
 21892 ;;		On entry : 0/0
 21893 ;;		On exit  : 0/0
 21894 ;;		Unchanged: 0/0
 21895 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 21896 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 21897 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 21898 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 21899 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 21900 ;;Total ram usage:        2 bytes
 21901 ;; Hardware stack levels used: 1
 21902 ;; This function calls:
 21903 ;;		Nothing
 21904 ;; This function is called by:
 21905 ;;		_adcConversionDoneHandler
 21906 ;; This function uses a non-reentrant model
 21907 ;;
 21908                           
 21909     1E2F                     _ADC_GetConversionResult:	
 21910                           ;psect for function _ADC_GetConversionResult
 21911                           
 21912     1E2F                     i1l5176:	
 21913                           ;incstack = 0
 21914                           ; Regs used in _ADC_GetConversionResult: [wreg]
 21915                           
 21916                           
 21917                           ;mcc_generated_files/adc/src/adc.c: 103:     return ((adc_result_t)((ADRESH << 8) + ADRE
      +                          SL));
 21918     1E2F  0021               	movlb	1	; select bank1
 21919     1E30  081C               	movf	28,w	;volatile
 21920     1E31  00F1               	movwf	?_ADC_GetConversionResult+1
 21921     1E32  081B               	movf	27,w	;volatile
 21922     1E33  00F0               	movwf	?_ADC_GetConversionResult
 21923     1E34                     i1l39:
 21924     1E34  0008               	return
 21925     1E35                     __end_of_ADC_GetConversionResult:
 21926     0002                     ___latbits      equ	2
 21927     007E                     btemp           set	126	;btemp
 21928     007E                     int$flags       set	126
 21929     007E                     wtemp0          set	126
 21930                           
 21931                           	psect	config
 21932                           
 21933                           ;Config register CONFIG1 @ 0x8007
 21934                           ;	FEXTOSC External Oscillator mode Selection bits
 21935                           ;	FEXTOSC = OFF, Oscillator not enabled
 21936                           ;	Power-up default value for COSC bits
 21937                           ;	RSTOSC = HFINT32, HFINTOSC with 2x PLL (32MHz)
 21938                           ;	Clock Out Enable bit
 21939                           ;	CLKOUTEN = OFF, CLKOUT function is disabled; I/O or oscillator function on OSC2
 21940                           ;	Clock Switch Enable bit
 21941                           ;	CSWEN = ON, Writing to NOSC and NDIV is allowed
 21942                           ;	Fail-Safe Clock Monitor Enable
 21943                           ;	FCMEN = ON, Fail-Safe Clock Monitor is enabled
 21944     8007                     	org	32775
 21945     8007  3F8C               	dw	16268
 21946                           
 21947                           ;Config register CONFIG2 @ 0x8008
 21948                           ;	Master Clear Enable bit
 21949                           ;	MCLRE = ON, MCLR/VPP pin function is MCLR; Weak pull-up enabled
 21950                           ;	Power-up Timer Enable bit
 21951                           ;	PWRTE = OFF, PWRT disabled
 21952                           ;	Watchdog Timer Enable bits
 21953                           ;	WDTE = OFF, WDT disabled; SWDTEN is ignored
 21954                           ;	Low-power BOR enable bit
 21955                           ;	LPBOREN = OFF, ULPBOR disabled
 21956                           ;	Brown-out Reset Enable bits
 21957                           ;	BOREN = ON, Brown-out Reset enabled, SBOREN bit ignored
 21958                           ;	Brown-out Reset Voltage selection bit
 21959                           ;	BORV = LOW, Brown-out voltage (Vbor) set to 2.45V
 21960                           ;	PPSLOCK bit One-Way Set Enable bit
 21961                           ;	PPS1WAY = ON, The PPSLOCK bit can be cleared and set only once; PPS registers remain l
      +                          ocked after one clear/set cycle
 21962                           ;	Stack Overflow/Underflow Reset Enable bit
 21963                           ;	STVREN = ON, Stack Overflow or Underflow will cause a Reset
 21964                           ;	Debugger enable bit
 21965                           ;	DEBUG = 0x1, unprogrammed default
 21966     8008                     	org	32776
 21967     8008  3FF3               	dw	16371
 21968                           
 21969                           ;Config register CONFIG3 @ 0x8009
 21970                           ;	User NVM self-write protection bits
 21971                           ;	WRT = OFF, Write protection off
 21972                           ;	Low Voltage Programming Enable bit
 21973                           ;	LVP = ON, Low Voltage programming enabled. MCLR/VPP pin function is MCLR. MCLRE config
      +                          uration bit is ignored.
 21974     8009                     	org	32777
 21975     8009  3FFF               	dw	16383
 21976                           
 21977                           ;Config register CONFIG4 @ 0x800A
 21978                           ;	User NVM Program Memory Code Protection bit
 21979                           ;	CP = OFF, User NVM code protection disabled
 21980                           ;	Data NVM Memory Code Protection bit
 21981                           ;	CPD = OFF, Data NVM code protection disabled
 21982     800A                     	org	32778
 21983     800A  3FFF               	dw	16383

Data Sizes:
    Strings     178
    Constant    124
    Data        12
    BSS         139
    Persistent  44
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     14      14
    BANK0            80     53      80
    BANK1            80     78      80
    BANK2            80      0      80
    BANK3            80      0      54
    BANK4            80      0       0
    BANK5            80      0       0
    BANK6            80      0       0
    BANK7            80      0       0
    BANK8            80      0       0
    BANK9            80      0       0
    BANK10           80      0       0
    BANK11           80      0       0
    BANK12           48      0       0

Pointer List with Targets:

    ADC_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> ADC_DefaultInterruptHandler(), adcConversionDoneHandler(), NULL(), 

    ADC_SetInterruptHandler@InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> ADC_DefaultInterruptHandler(), adcConversionDoneHandler(), 

    atoi@s	PTR const unsigned char  size(1) Largest target is 20
		 -> line(BANK3[20]), 

    dtoa@fp	PTR struct _IO_FILE size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    EUSART_FramingErrorCallbackRegister@callbackHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART_DefaultFramingErrorCallback(), 

    EUSART_FramingErrorHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART_DefaultFramingErrorCallback(), NULL(), 

    EUSART_OverrunErrorCallbackRegister@callbackHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART_DefaultOverrunErrorCallback(), 

    EUSART_OverrunErrorHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART_DefaultOverrunErrorCallback(), NULL(), 

    EUSART_RxCompleteInterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> NULL(), 

    EUSART_RxInterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART_ReceiveISR(), NULL(), 

    EUSART_TxCompleteInterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> NULL(), 

    EUSART_TxInterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART_TransmitISR(), NULL(), 

    fputc@fp	PTR struct _IO_FILE size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    fputc@fp$.$buffer	PTR unsigned char  size(2) Largest target is 0

    fputc@fp$.$source	PTR const unsigned char  size(2) Largest target is 0

    fputs@fp	PTR struct _IO_FILE size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    fputs@s	PTR const unsigned char  size(1) Largest target is 32
		 -> dbuf(BANK3[32]), 

    I2C2_Callback	PTR FTN()void  size(2) Largest target is 1
		 -> NULL(), 

    i2c2_eventTable	const PTR FTN()enum E6668[9] size(2) Largest target is 1
		 -> I2C2_EVENT_ERROR(), I2C2_EVENT_IDLE(), I2C2_EVENT_NACK(), I2C2_EVENT_RESET(), 
		 -> I2C2_EVENT_RX(), I2C2_EVENT_SEND_RD_ADDR(), I2C2_EVENT_SEND_WR_ADDR(), I2C2_EVENT_STOP(), 
		 -> I2C2_EVENT_TX(), 

    I2C2_Host$CallbackRegister	PTR FTN(PTR FTN()void ,)void  size(2) Largest target is 1
		 -> I2C2_CallbackRegister(), 

    I2C2_Host$Deinitialize	PTR FTN()void  size(2) Largest target is 1
		 -> I2C2_Deinitialize(), 

    I2C2_Host$ErrorGet	PTR FTN()enum E6659 size(2) Largest target is 1
		 -> I2C2_ErrorGet(), 

    I2C2_Host$Initialize	PTR FTN()void  size(2) Largest target is 1
		 -> I2C2_Initialize(), 

    I2C2_Host$IsBusy	PTR FTN()_Bool  size(2) Largest target is 1
		 -> I2C2_IsBusy(), 

    I2C2_Host$Read	PTR FTN(unsigned short ,PTR unsigned char ,unsigned int ,)_Bool  size(2) Largest target is 1
		 -> I2C2_Read(), 

    I2C2_Host$Tasks	PTR FTN()void  size(2) Largest target is 1
		 -> NULL(), 

    I2C2_Host$TransferSetup	PTR FTN(PTR struct i2c_transfer_setup,unsigned long ,)_Bool  size(2) Largest target is 1
		 -> NULL(), 

    I2C2_Host$Write	PTR FTN(unsigned short ,PTR unsigned char ,unsigned int ,)_Bool  size(2) Largest target is 1
		 -> I2C2_Write(), 

    I2C2_Host$WriteRead	PTR FTN(unsigned short ,PTR unsigned char ,unsigned int ,PTR unsigned char ,unsigned int ,)_Bool  size(2) Largest target is 1
		 -> I2C2_WriteRead(), 

    i2c2Status$readPtr	PTR unsigned char  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    i2c2Status$writePtr	PTR unsigned char  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    INT_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> INT_DefaultInterruptHandler(), NULL(), 

    INT_SetInterruptHandler@InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> INT_DefaultInterruptHandler(), 

    ledstrip$BufferExchange	PTR FTN(PTR void ,unsigned int ,)void  size(2) Largest target is 1
		 -> SPI1_BufferExchange(), 

    ledstrip$BufferRead	PTR FTN(PTR void ,unsigned int ,)void  size(2) Largest target is 1
		 -> SPI1_BufferRead(), 

    ledstrip$BufferWrite	PTR FTN(PTR void ,unsigned int ,)void  size(2) Largest target is 1
		 -> SPI1_BufferWrite(), 

    ledstrip$ByteExchange	PTR FTN(unsigned char ,)unsigned char  size(2) Largest target is 1
		 -> SPI1_ByteExchange(), 

    ledstrip$ByteRead	PTR FTN()unsigned char  size(2) Largest target is 1
		 -> SPI1_ByteRead(), 

    ledstrip$ByteWrite	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> SPI1_ByteWrite(), 

    ledstrip$Close	PTR FTN()void  size(2) Largest target is 1
		 -> SPI1_Close(), 

    ledstrip$Deinitialize	PTR FTN()void  size(2) Largest target is 1
		 -> SPI1_Deinitialize(), 

    ledstrip$Initialize	PTR FTN()void  size(2) Largest target is 1
		 -> SPI1_Initialize(), 

    ledstrip$IsRxReady	PTR FTN()_Bool  size(2) Largest target is 1
		 -> SPI1_IsRxReady(), 

    ledstrip$IsTxReady	PTR FTN()_Bool  size(2) Largest target is 1
		 -> SPI1_IsTxReady(), 

    ledstrip$Open	PTR FTN(unsigned char ,)_Bool  size(2) Largest target is 1
		 -> SPI1_Open(), 

    ledstrip$RxCompleteCallbackRegister	PTR FTN(PTR FTN()void ,)void  size(2) Largest target is 1
		 -> NULL(), 

    ledstrip$TxCompleteCallbackRegister	PTR FTN(PTR FTN()void ,)void  size(2) Largest target is 1
		 -> NULL(), 

    pad@buf	PTR unsigned char  size(1) Largest target is 32
		 -> dbuf(BANK3[32]), 

    pad@fp	PTR struct _IO_FILE size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    printf@ap	PTR void [1] size(1) Largest target is 2
		 -> ?_printf(BANK1[2]), 

    printf@fmt	PTR const unsigned char  size(2) Largest target is 25
		 -> STR_1(CODE[6]), STR_10(CODE[25]), STR_11(CODE[13]), STR_12(CODE[13]), 
		 -> STR_13(CODE[15]), STR_14(CODE[17]), STR_2(CODE[8]), STR_3(CODE[24]), 
		 -> STR_4(CODE[11]), STR_5(CODE[15]), STR_6(CODE[17]), STR_7(CODE[7]), 
		 -> STR_8(CODE[7]), STR_9(CODE[3]), 

    printOut@str	PTR unsigned char  size(2) Largest target is 6
		 -> STR_1(CODE[6]), 

    read_prec_or_width@ap	PTR PTR void [1] size(1) Largest target is 1
		 -> printf@ap(BANK1[1]), 

    read_prec_or_width@fmt	PTR PTR const unsigned char  size(1) Largest target is 2
		 -> vfprintf@cfmt(BANK1[2]), 

    S1621$2$1	PTR unsigned char  size(2) Largest target is 0

    S1621$3$1	PTR unsigned char  size(2) Largest target is 0

    S1621$4$1	PTR unsigned char  size(2) Largest target is 0

    S1621$4$3	PTR unsigned char  size(2) Largest target is 0

    S1621$8$0	PTR FTN()void  size(2) Largest target is 0

    S1621$CallbackRegister	PTR FTN(PTR FTN()void ,)void  size(2) Largest target is 1
		 -> I2C2_CallbackRegister(), 

    S1621$Deinitialize	PTR FTN()void  size(2) Largest target is 1
		 -> I2C2_Deinitialize(), 

    S1621$ErrorGet	PTR FTN()enum E6659 size(2) Largest target is 1
		 -> I2C2_ErrorGet(), 

    S1621$Initialize	PTR FTN()void  size(2) Largest target is 1
		 -> I2C2_Initialize(), 

    S1621$IsBusy	PTR FTN()_Bool  size(2) Largest target is 1
		 -> I2C2_IsBusy(), 

    S1621$Read	PTR FTN(unsigned short ,PTR unsigned char ,unsigned int ,)_Bool  size(2) Largest target is 1
		 -> I2C2_Read(), 

    S1621$Tasks	PTR FTN()void  size(2) Largest target is 1
		 -> NULL(), 

    S1621$TransferSetup	PTR FTN(PTR struct i2c_transfer_setup,unsigned long ,)_Bool  size(2) Largest target is 1
		 -> NULL(), 

    S1621$Write	PTR FTN(unsigned short ,PTR unsigned char ,unsigned int ,)_Bool  size(2) Largest target is 1
		 -> I2C2_Write(), 

    S1621$WriteRead	PTR FTN(unsigned short ,PTR unsigned char ,unsigned int ,PTR unsigned char ,unsigned int ,)_Bool  size(2) Largest target is 1
		 -> I2C2_WriteRead(), 

    S1717$readPtr	PTR unsigned char  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    S1717$writePtr	PTR unsigned char  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    S223$4$0	PTR void  size(2) Largest target is 0

    S223$5$0	PTR void  size(2) Largest target is 0

    S223$6$0	PTR void  size(2) Largest target is 0

    S223SPI_INTERFACE$BufferExchange	PTR FTN(PTR void ,unsigned int ,)void  size(2) Largest target is 1
		 -> SPI1_BufferExchange(), 

    S223SPI_INTERFACE$BufferRead	PTR FTN(PTR void ,unsigned int ,)void  size(2) Largest target is 1
		 -> SPI1_BufferRead(), 

    S223SPI_INTERFACE$BufferWrite	PTR FTN(PTR void ,unsigned int ,)void  size(2) Largest target is 1
		 -> SPI1_BufferWrite(), 

    S223SPI_INTERFACE$ByteExchange	PTR FTN(unsigned char ,)unsigned char  size(2) Largest target is 1
		 -> SPI1_ByteExchange(), 

    S223SPI_INTERFACE$ByteRead	PTR FTN()unsigned char  size(2) Largest target is 1
		 -> SPI1_ByteRead(), 

    S223SPI_INTERFACE$ByteWrite	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> SPI1_ByteWrite(), 

    S223SPI_INTERFACE$Close	PTR FTN()void  size(2) Largest target is 1
		 -> SPI1_Close(), 

    S223SPI_INTERFACE$Deinitialize	PTR FTN()void  size(2) Largest target is 1
		 -> SPI1_Deinitialize(), 

    S223SPI_INTERFACE$Initialize	PTR FTN()void  size(2) Largest target is 1
		 -> SPI1_Initialize(), 

    S223SPI_INTERFACE$IsRxReady	PTR FTN()_Bool  size(2) Largest target is 1
		 -> SPI1_IsRxReady(), 

    S223SPI_INTERFACE$IsTxReady	PTR FTN()_Bool  size(2) Largest target is 1
		 -> SPI1_IsTxReady(), 

    S223SPI_INTERFACE$Open	PTR FTN(unsigned char ,)_Bool  size(2) Largest target is 1
		 -> SPI1_Open(), 

    S223SPI_INTERFACE$RxCompleteCallbackRegister	PTR FTN(PTR FTN()void ,)void  size(2) Largest target is 1
		 -> NULL(), 

    S223SPI_INTERFACE$TxCompleteCallbackRegister	PTR FTN(PTR FTN()void ,)void  size(2) Largest target is 1
		 -> NULL(), 

    S2549$buffer	PTR unsigned char  size(2) Largest target is 0

    S2549$source	PTR const unsigned char  size(2) Largest target is 0

    S988$17$0	PTR FTN()void  size(2) Largest target is 0

    S988$18$0	PTR FTN()void  size(2) Largest target is 0

    S988$20$0	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART_DefaultFramingErrorCallback(), 

    S988$21$0	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART_DefaultOverrunErrorCallback(), 

    S988$AutoBaudEventEnableGet	PTR FTN()_Bool  size(2) Largest target is 1
		 -> NULL(), 

    S988$AutoBaudQuery	PTR FTN()_Bool  size(2) Largest target is 1
		 -> EUSART_AutoBaudQuery(), 

    S988$AutoBaudSet	PTR FTN(_Bool ,)void  size(2) Largest target is 1
		 -> EUSART_AutoBaudSet(), 

    S988$BaudRateGet	PTR FTN()unsigned long  size(2) Largest target is 1
		 -> NULL(), 

    S988$BaudRateSet	PTR FTN(unsigned long ,)void  size(2) Largest target is 1
		 -> NULL(), 

    S988$BRGCountGet	PTR FTN()unsigned long  size(2) Largest target is 1
		 -> NULL(), 

    S988$BRGCountSet	PTR FTN(unsigned long ,)void  size(2) Largest target is 1
		 -> NULL(), 

    S988$Deinitialize	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART_Deinitialize(), 

    S988$ErrorGet	PTR FTN()unsigned int  size(2) Largest target is 2
		 -> EUSART_ErrorGet(), 

    S988$EventCallbackRegister	PTR FTN(PTR FTN()void ,)void  size(2) Largest target is 1
		 -> NULL(), 

    S988$FramingErrorCallbackRegister	PTR FTN(PTR FTN()void ,)void  size(2) Largest target is 1
		 -> EUSART_FramingErrorCallbackRegister(), 

    S988$Initialize	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART_Initialize(), 

    S988$IsRxReady	PTR FTN()_Bool  size(2) Largest target is 1
		 -> EUSART_IsRxReady(), 

    S988$IsTxDone	PTR FTN()_Bool  size(2) Largest target is 1
		 -> EUSART_IsTxDone(), 

    S988$IsTxReady	PTR FTN()_Bool  size(2) Largest target is 1
		 -> EUSART_IsTxReady(), 

    S988$OverrunErrorCallbackRegister	PTR FTN(PTR FTN()void ,)void  size(2) Largest target is 1
		 -> EUSART_OverrunErrorCallbackRegister(), 

    S988$ParityErrorCallbackRegister	PTR FTN(PTR FTN()void ,)void  size(2) Largest target is 1
		 -> NULL(), 

    S988$Read	PTR FTN()unsigned char  size(2) Largest target is 1
		 -> EUSART_Read(), 

    S988$RxCompleteCallbackRegister	PTR FTN(PTR FTN()void ,)void  size(2) Largest target is 1
		 -> EUSART_RxCompleteCallbackRegister(), 

    S988$TransmitDisable	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART_TransmitDisable(), 

    S988$TransmitEnable	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART_TransmitEnable(), 

    S988$TxCollisionCallbackRegister	PTR FTN(PTR FTN()void ,)void  size(2) Largest target is 1
		 -> NULL(), 

    S988$TxCompleteCallbackRegister	PTR FTN(PTR FTN()void ,)void  size(2) Largest target is 1
		 -> EUSART_TxCompleteCallbackRegister(), 

    S988$Write	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> EUSART_Write(), 

    sp__readLine	PTR unsigned char  size(1) Largest target is 20
		 -> line(BANK3[20]), 

    str2float@str	PTR unsigned char  size(1) Largest target is 20
		 -> line(BANK3[20]), 

    strlen@a	PTR const unsigned char  size(1) Largest target is 32
		 -> dbuf(BANK3[32]), 

    strlen@s	PTR const unsigned char  size(1) Largest target is 32
		 -> dbuf(BANK3[32]), 

    TMR2_PeriodMatchCallback	PTR FTN()void  size(2) Largest target is 1
		 -> TMR2_DefaultPeriodMatchCallback(), NULL(), 

    TMR4_PeriodMatchCallback	PTR FTN()void  size(2) Largest target is 1
		 -> controller(), TMR4_DefaultPeriodMatchCallback(), NULL(), 

    TMR4_PeriodMatchCallbackRegister@CallbackHandler	PTR FTN()void  size(2) Largest target is 1
		 -> controller(), 

    TMR6_PeriodMatchCallback	PTR FTN()void  size(2) Largest target is 1
		 -> TMR6_DefaultPeriodMatchCallback(), updateLedstripAnimation(), NULL(), 

    UART1$AutoBaudEventEnableGet	PTR FTN()_Bool  size(2) Largest target is 1
		 -> NULL(), 

    UART1$AutoBaudQuery	PTR FTN()_Bool  size(2) Largest target is 1
		 -> EUSART_AutoBaudQuery(), 

    UART1$AutoBaudSet	PTR FTN(_Bool ,)void  size(2) Largest target is 1
		 -> EUSART_AutoBaudSet(), 

    UART1$BaudRateGet	PTR FTN()unsigned long  size(2) Largest target is 1
		 -> NULL(), 

    UART1$BaudRateSet	PTR FTN(unsigned long ,)void  size(2) Largest target is 1
		 -> NULL(), 

    UART1$BRGCountGet	PTR FTN()unsigned long  size(2) Largest target is 1
		 -> NULL(), 

    UART1$BRGCountSet	PTR FTN(unsigned long ,)void  size(2) Largest target is 1
		 -> NULL(), 

    UART1$Deinitialize	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART_Deinitialize(), 

    UART1$ErrorGet	PTR FTN()unsigned int  size(2) Largest target is 2
		 -> EUSART_ErrorGet(), 

    UART1$EventCallbackRegister	PTR FTN(PTR FTN()void ,)void  size(2) Largest target is 1
		 -> NULL(), 

    UART1$FramingErrorCallbackRegister	PTR FTN(PTR FTN()void ,)void  size(2) Largest target is 1
		 -> EUSART_FramingErrorCallbackRegister(), 

    UART1$Initialize	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART_Initialize(), 

    UART1$IsRxReady	PTR FTN()_Bool  size(2) Largest target is 1
		 -> EUSART_IsRxReady(), 

    UART1$IsTxDone	PTR FTN()_Bool  size(2) Largest target is 1
		 -> EUSART_IsTxDone(), 

    UART1$IsTxReady	PTR FTN()_Bool  size(2) Largest target is 1
		 -> EUSART_IsTxReady(), 

    UART1$OverrunErrorCallbackRegister	PTR FTN(PTR FTN()void ,)void  size(2) Largest target is 1
		 -> EUSART_OverrunErrorCallbackRegister(), 

    UART1$ParityErrorCallbackRegister	PTR FTN(PTR FTN()void ,)void  size(2) Largest target is 1
		 -> NULL(), 

    UART1$Read	PTR FTN()unsigned char  size(2) Largest target is 1
		 -> EUSART_Read(), 

    UART1$RxCompleteCallbackRegister	PTR FTN(PTR FTN()void ,)void  size(2) Largest target is 1
		 -> EUSART_RxCompleteCallbackRegister(), 

    UART1$TransmitDisable	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART_TransmitDisable(), 

    UART1$TransmitEnable	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART_TransmitEnable(), 

    UART1$TxCollisionCallbackRegister	PTR FTN(PTR FTN()void ,)void  size(2) Largest target is 1
		 -> NULL(), 

    UART1$TxCompleteCallbackRegister	PTR FTN(PTR FTN()void ,)void  size(2) Largest target is 1
		 -> EUSART_TxCompleteCallbackRegister(), 

    UART1$Write	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> EUSART_Write(), 

    uartHandler@str	PTR unsigned char  size(1) Largest target is 20
		 -> line(BANK3[20]), 

    utoa@fp	PTR struct _IO_FILE size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    vfpfcnvrt@ap	PTR PTR void  size(2) Largest target is 1
		 -> printf@ap(BANK1[1]), 

    vfpfcnvrt@cp	PTR unsigned char  size(2) Largest target is 25
		 -> STR_1(CODE[6]), STR_10(CODE[25]), STR_11(CODE[13]), STR_12(CODE[13]), 
		 -> STR_13(CODE[15]), STR_14(CODE[17]), STR_2(CODE[8]), STR_3(CODE[24]), 
		 -> STR_4(CODE[11]), STR_5(CODE[15]), STR_6(CODE[17]), STR_7(CODE[7]), 
		 -> STR_8(CODE[7]), STR_9(CODE[3]), 

    vfpfcnvrt@fmt	PTR PTR unsigned char  size(1) Largest target is 2
		 -> vfprintf@cfmt(BANK1[2]), 

    vfpfcnvrt@fp	PTR struct _IO_FILE size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    vfprintf@ap	PTR PTR void  size(1) Largest target is 1
		 -> printf@ap(BANK1[1]), 

    vfprintf@cfmt	PTR unsigned char  size(2) Largest target is 25
		 -> STR_1(CODE[6]), STR_10(CODE[25]), STR_11(CODE[13]), STR_12(CODE[13]), 
		 -> STR_13(CODE[15]), STR_14(CODE[17]), STR_2(CODE[8]), STR_3(CODE[24]), 
		 -> STR_4(CODE[11]), STR_5(CODE[15]), STR_6(CODE[17]), STR_7(CODE[7]), 
		 -> STR_8(CODE[7]), STR_9(CODE[3]), 

    vfprintf@fmt	PTR const unsigned char  size(2) Largest target is 25
		 -> STR_1(CODE[6]), STR_10(CODE[25]), STR_11(CODE[13]), STR_12(CODE[13]), 
		 -> STR_13(CODE[15]), STR_14(CODE[17]), STR_2(CODE[8]), STR_3(CODE[24]), 
		 -> STR_4(CODE[11]), STR_5(CODE[15]), STR_6(CODE[17]), STR_7(CODE[7]), 
		 -> STR_8(CODE[7]), STR_9(CODE[3]), 

    vfprintf@fp	PTR struct _IO_FILE size(2) Largest target is 0
		 -> NULL(NULL[0]), 


Critical Paths under _main in COMMON

    None.

Critical Paths under _INTERRUPT_InterruptManager in COMMON

    _controller->i1___xxtofl
    i1___flmul->i1___xxtofl
    i1___fladd->i1___xxtofl
    ___fltol->i1___xxtofl
    _I2C2_ISR->_I2C2_EventHandler
    _I2C2_EventHandler->_I2C2_EVENT_TX
    _I2C2_ERROR_ISR->_I2C2_ErrorEventHandler
    _I2C2_ErrorEventHandler->_I2C2_EVENT_TX
    _I2C2_EVENT_TX->_I2C2_DataTransmit
    _I2C2_EVENT_SEND_WR_ADDR->_I2C2_DataTransmit
    _ADC_ISR->_adcConversionDoneHandler
    _adcConversionDoneHandler->_ADC_GetConversionResult
    _adcConversionDoneHandler->i1_ADC_SelectChannel

Critical Paths under _main in BANK0

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK0

    _TMR4_ISR->_controller
    _controller->i1___fladd
    i1___fladd->i1___flmul
    ___fltol->i1___flmul

Critical Paths under _main in BANK1

    _main->_uartHandler
    _uartHandler->_readLine
    _str2float->___flmul
    ___flmul->__Umul8_16
    ___fladd->___xxtofl
    _setSetpoint->_atoi
    _setKp->_str2float
    _setKi->_str2float
    _readLine->_printf
    _atoi->___wmul
    _printOut->_printf
    _printf->_vfprintf
    _vfprintf->_vfpfcnvrt
    _vfpfcnvrt->_dtoa
    _utoa->_pad
    _read_prec_or_width->___wmul
    _dtoa->_pad
    _pad->_fputs
    _fputs->_fputc
    _fputc->_putch
    _putch->_EUSART_Write
    _abs->___awmod
    _initAdcMultiplexer->_ADC_SelectChannel
    _initAdcMultiplexer->_ADC_SetInterruptHandler
    _INTERRUPT_Initialize->_INT_SetInterruptHandler
    _EUSART_Initialize->_EUSART_FramingErrorCallbackRegister
    _EUSART_Initialize->_EUSART_OverrunErrorCallbackRegister
    _ADC_Initialize->_ADC_SetInterruptHandler

Critical Paths under _INTERRUPT_InterruptManager in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK12

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 2     2      0   22330
                                             76 BANK1      2     2      0
                    _I2C_Master_Init
                  _SYSTEM_Initialize
   _TMR4_PeriodMatchCallbackRegister
                 _initAdcMultiplexer
                           _printOut
                        _uartHandler
 ---------------------------------------------------------------------------------
 (1) _uartHandler                                          1     1      0   16704
                                             75 BANK1      1     1      0
                               _atoi
                             _printf
                           _readLine
                              _setKi
                              _setKp
                        _setSetpoint
                          _str2float
 ---------------------------------------------------------------------------------
 (2) _str2float                                           12     8      4    5361
                                             35 BANK1     12     8      4
                            ___fladd
                            ___fldiv
                            ___flmul
                           ___xxtofl
 ---------------------------------------------------------------------------------
 (3) ___xxtofl                                            14    10      4     339
                                              0 BANK1     14    10      4
 ---------------------------------------------------------------------------------
 (3) ___flmul                                             26    18      8    1611
                                              9 BANK1     26    18      8
                          __Umul8_16
 ---------------------------------------------------------------------------------
 (4) __Umul8_16                                            9     7      2     139
                                              0 BANK1      9     7      2
 ---------------------------------------------------------------------------------
 (3) ___fldiv                                             26    18      8    1123
                                              0 BANK1     26    18      8
 ---------------------------------------------------------------------------------
 (3) ___fladd                                             20    12      8    1988
                                             14 BANK1     20    12      8
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (2) _setSetpoint                                          2     0      2      23
                                             13 BANK1      2     0      2
                               _atoi (ARG)
 ---------------------------------------------------------------------------------
 (2) _setKp                                                4     0      4      23
                                             47 BANK1      4     0      4
                          _str2float (ARG)
 ---------------------------------------------------------------------------------
 (2) _setKi                                                4     0      4      23
                                             47 BANK1      4     0      4
                          _str2float (ARG)
 ---------------------------------------------------------------------------------
 (2) _readLine                                             3     1      2    5437
                                             72 BANK1      3     1      2
                   _EUSART_IsRxReady
                        _EUSART_Read
                             _printf
 ---------------------------------------------------------------------------------
 (3) _EUSART_Read                                          2     2      0      47
                                              0 BANK1      2     2      0
 ---------------------------------------------------------------------------------
 (3) _EUSART_IsRxReady                                     0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _atoi                                                 7     5      2     336
                                              6 BANK1      7     5      2
                             ___wmul
 ---------------------------------------------------------------------------------
 (1) _printOut                                             2     0      2    5413
                                             72 BANK1      2     0      2
                             _printf
 ---------------------------------------------------------------------------------
 (3) _printf                                               9     3      6    5390
                                             65 BANK1      7     1      6
                               _atoi (ARG)
                           _vfprintf
 ---------------------------------------------------------------------------------
 (4) _vfprintf                                             8     3      5    5316
                                             57 BANK1      8     3      5
                          _vfpfcnvrt
 ---------------------------------------------------------------------------------
 (5) _vfpfcnvrt                                           17    12      5    5175
                                             41 BANK1     16    11      5
                               _dtoa
                              _fputc
                 _read_prec_or_width
                               _utoa
 ---------------------------------------------------------------------------------
 (6) _utoa                                                10     6      4    1661
                                             28 BANK1     10     6      4
                            ___lwdiv
                            ___lwmod
                                _pad
 ---------------------------------------------------------------------------------
 (7) ___lwmod                                              5     1      4     161
                                              0 BANK1      5     1      4
 ---------------------------------------------------------------------------------
 (7) ___lwdiv                                              7     3      4     166
                                              0 BANK1      7     3      4
 ---------------------------------------------------------------------------------
 (6) _read_prec_or_width                                   8     6      2     288
                                              6 BANK1      8     6      2
                             ___wmul
 ---------------------------------------------------------------------------------
 (7) ___wmul                                               6     2      4     106
                                              0 BANK1      6     2      4
 ---------------------------------------------------------------------------------
 (6) _dtoa                                                13     9      4    2161
                                             28 BANK1     13     9      4
                            ___awdiv
                            ___awmod
                                _abs
                                _pad
 ---------------------------------------------------------------------------------
 (7) _pad                                                  8     3      5    1083
                                             20 BANK1      8     3      5
                              _fputc
                              _fputs
                             _strlen
 ---------------------------------------------------------------------------------
 (8) _strlen                                               3     1      2      91
                                              0 BANK1      3     1      2
 ---------------------------------------------------------------------------------
 (8) _fputs                                                8     5      3     432
                                             12 BANK1      8     5      3
                              _fputc
 ---------------------------------------------------------------------------------
 (9) _fputc                                                9     5      4     331
                                              3 BANK1      9     5      4
                              _putch
 ---------------------------------------------------------------------------------
 (10) _putch                                               1     1      0      97
                                              2 BANK1      1     1      0
                   _EUSART_IsTxReady
                       _EUSART_Write
 ---------------------------------------------------------------------------------
 (11) _EUSART_Write                                        2     1      1      68
                                              0 BANK1      2     1      1
 ---------------------------------------------------------------------------------
 (11) _EUSART_IsTxReady                                    0     0      0       0
 ---------------------------------------------------------------------------------
 (7) _abs                                                  4     2      2      67
                                              6 BANK1      4     2      2
                            ___awmod (ARG)
 ---------------------------------------------------------------------------------
 (7) ___awmod                                              6     2      4     298
                                              0 BANK1      6     2      4
 ---------------------------------------------------------------------------------
 (7) ___awdiv                                              8     4      4     302
                                              0 BANK1      8     4      4
 ---------------------------------------------------------------------------------
 (1) _initAdcMultiplexer                                   0     0      0      53
                  _ADC_SelectChannel
            _ADC_SetInterruptHandler
 ---------------------------------------------------------------------------------
 (2) _ADC_SelectChannel                                    2     2      0      29
                                              0 BANK1      2     2      0
 ---------------------------------------------------------------------------------
 (1) _TMR4_PeriodMatchCallbackRegister                     2     0      2      23
                                              0 BANK1      2     0      2
 ---------------------------------------------------------------------------------
 (1) _SYSTEM_Initialize                                    0     0      0     137
                     _ADC_Initialize
                   _CLOCK_Initialize
                  _EUSART_Initialize
                    _I2C2_Initialize
               _INTERRUPT_Initialize
             _PIN_MANAGER_Initialize
                    _SPI1_Initialize
                    _TMR2_Initialize
                    _TMR4_Initialize
                    _TMR6_Initialize
                 _pwm_fan_Initialize
 ---------------------------------------------------------------------------------
 (2) _pwm_fan_Initialize                                   0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _TMR6_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _TMR4_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _TMR2_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _SPI1_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _PIN_MANAGER_Initialize                               0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _INTERRUPT_Initialize                                 0     0      0      23
            _INT_SetInterruptHandler
 ---------------------------------------------------------------------------------
 (3) _INT_SetInterruptHandler                              2     0      2      23
                                              0 BANK1      2     0      2
 ---------------------------------------------------------------------------------
 (2) _EUSART_Initialize                                    0     0      0      90
_EUSART_FramingErrorCallbackRegister
_EUSART_OverrunErrorCallbackRegister
 ---------------------------------------------------------------------------------
 (3) _EUSART_OverrunErrorCallbackRegister                  2     0      2      45
                                              0 BANK1      2     0      2
 ---------------------------------------------------------------------------------
 (3) _EUSART_FramingErrorCallbackRegister                  2     0      2      45
                                              0 BANK1      2     0      2
 ---------------------------------------------------------------------------------
 (2) _CLOCK_Initialize                                     0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _ADC_Initialize                                       0     0      0      24
            _ADC_SetInterruptHandler
 ---------------------------------------------------------------------------------
 (2) _ADC_SetInterruptHandler                              2     0      2      24
                                              0 BANK1      2     0      2
 ---------------------------------------------------------------------------------
 (1) _I2C_Master_Init                                      0     0      0       0
                    _I2C2_Initialize
 ---------------------------------------------------------------------------------
 (2) _I2C2_Initialize                                      0     0      0       0
              _I2C2_InterruptsEnable
 ---------------------------------------------------------------------------------
 (3) _I2C2_InterruptsEnable                                0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 11
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (12) _INTERRUPT_InterruptManager                          0     0      0    4839
                                NULL *
                            _ADC_ISR
                  _EUSART_ReceiveISR *
                 _EUSART_TransmitISR *
                     _I2C2_ERROR_ISR
                           _I2C2_ISR
                           _TMR2_ISR
                           _TMR4_ISR
 ---------------------------------------------------------------------------------
 (13) _TMR4_ISR                                            0     0      0    4349
                                NULL *
    _TMR4_DefaultPeriodMatchCallback *
                         _controller *
 ---------------------------------------------------------------------------------
 (14) _controller                                          7     7      0    4349
                                             46 BANK0      7     7      0
                            ___fltol
                    _getHoogtesensor
              _pwm_fan_LoadDutyValue
                          i1___fladd
                          i1___flmul
                         i1___xxtofl
 ---------------------------------------------------------------------------------
 (15) i1___xxtofl                                         14    10      4     338
                                              0 COMMON    14    10      4
 ---------------------------------------------------------------------------------
 (15) i1___flmul                                          26    18      8    1611
                                              0 BANK0     26    18      8
                        i1__Umul8_16
                         i1___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (16) i1__Umul8_16                                         9     7      2     139
                                              0 COMMON     9     7      2
 ---------------------------------------------------------------------------------
 (15) i1___fladd                                          20    12      8    1986
                                             26 BANK0     20    12      8
                          i1___flmul (ARG)
                         i1___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (15) _pwm_fan_LoadDutyValue                               4     2      2      45
                                              0 COMMON     4     2      2
 ---------------------------------------------------------------------------------
 (15) _getHoogtesensor                                     2     0      2       0
                                              0 COMMON     2     0      2
 ---------------------------------------------------------------------------------
 (15) ___fltol                                            10     6      4     234
                                             26 BANK0     10     6      4
                          i1___flmul (ARG)
                         i1___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (14) _TMR4_DefaultPeriodMatchCallback                     0     0      0       0
 ---------------------------------------------------------------------------------
 (13) _TMR2_ISR                                            0     0      0       0
                                NULL *
    _TMR2_DefaultPeriodMatchCallback *
 ---------------------------------------------------------------------------------
 (14) _TMR2_DefaultPeriodMatchCallback                     0     0      0       0
 ---------------------------------------------------------------------------------
 (13) _I2C2_ISR                                            0     0      0     185
                  _I2C2_EventHandler
 ---------------------------------------------------------------------------------
 (14) _I2C2_EventHandler                                   2     2      0     185
                                              2 COMMON     2     2      0
                         _I2C2_Close
                   _I2C2_EVENT_ERROR *
                    _I2C2_EVENT_IDLE *
                    _I2C2_EVENT_NACK *
                   _I2C2_EVENT_RESET *
                      _I2C2_EVENT_RX *
            _I2C2_EVENT_SEND_RD_ADDR *
            _I2C2_EVENT_SEND_WR_ADDR *
                    _I2C2_EVENT_STOP *
                      _I2C2_EVENT_TX *
                _I2C2_InterruptClear
                        _I2C2_IsAddr
                        _I2C2_IsData
                        _I2C2_IsNack
 ---------------------------------------------------------------------------------
 (15) _I2C2_IsNack                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (15) _I2C2_IsData                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (15) _I2C2_IsAddr                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (13) _I2C2_ERROR_ISR                                      0     0      0     185
             _I2C2_ErrorEventHandler
 ---------------------------------------------------------------------------------
 (14) _I2C2_ErrorEventHandler                              2     2      0     185
                                              2 COMMON     2     2      0
                   _I2C2_EVENT_ERROR *
                    _I2C2_EVENT_IDLE *
                    _I2C2_EVENT_NACK *
                   _I2C2_EVENT_RESET *
                      _I2C2_EVENT_RX *
            _I2C2_EVENT_SEND_RD_ADDR *
            _I2C2_EVENT_SEND_WR_ADDR *
                    _I2C2_EVENT_STOP *
                      _I2C2_EVENT_TX *
           _I2C2_ErrorInterruptClear
 ---------------------------------------------------------------------------------
 (15) _I2C2_EVENT_TX                                       1     1      0      55
                                              1 COMMON     1     1      0
                  _I2C2_DataTransmit
                    _I2C2_EVENT_STOP
                 _I2C2_RestartEnable
 ---------------------------------------------------------------------------------
 (16) _I2C2_RestartEnable                                  0     0      0       0
 ---------------------------------------------------------------------------------
 (15) _I2C2_EVENT_SEND_WR_ADDR                             0     0      0      29
                  _I2C2_DataTransmit
 ---------------------------------------------------------------------------------
 (15) _I2C2_EVENT_SEND_RD_ADDR                             0     0      0      29
                  _I2C2_DataTransmit
 ---------------------------------------------------------------------------------
 (16) _I2C2_DataTransmit                                   1     1      0      29
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (15) _I2C2_EVENT_RX                                       1     1      0      24
                                              0 COMMON     1     1      0
                       _I2C2_AckSend
                   _I2C2_DataReceive
                   _I2C2_IsRxBufFull
                      _I2C2_NackSend
                 _I2C2_ReceiveEnable
                _I2C2_RestartDisable
 ---------------------------------------------------------------------------------
 (16) _I2C2_RestartDisable                                 0     0      0       0
 ---------------------------------------------------------------------------------
 (16) _I2C2_ReceiveEnable                                  0     0      0       0
 ---------------------------------------------------------------------------------
 (16) _I2C2_NackSend                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (16) _I2C2_IsRxBufFull                                    0     0      0       0
 ---------------------------------------------------------------------------------
 (16) _I2C2_DataReceive                                    0     0      0       0
 ---------------------------------------------------------------------------------
 (16) _I2C2_AckSend                                        0     0      0       0
 ---------------------------------------------------------------------------------
 (15) _I2C2_EVENT_NACK                                     1     1      0      24
                                              0 COMMON     1     1      0
                    _I2C2_EVENT_STOP
 ---------------------------------------------------------------------------------
 (16) _I2C2_EVENT_STOP                                     0     0      0       0
                         _I2C2_Close
                      _I2C2_StopSend
 ---------------------------------------------------------------------------------
 (17) _I2C2_StopSend                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (17) _I2C2_Close                                          0     0      0       0
           _I2C2_ErrorInterruptClear
                _I2C2_InterruptClear
              _I2C2_StatusFlagsClear
 ---------------------------------------------------------------------------------
 (18) _I2C2_StatusFlagsClear                               0     0      0       0
 ---------------------------------------------------------------------------------
 (15) _I2C2_InterruptClear                                 0     0      0       0
 ---------------------------------------------------------------------------------
 (18) _I2C2_ErrorInterruptClear                            0     0      0       0
 ---------------------------------------------------------------------------------
 (15) _I2C2_EVENT_IDLE                                     0     0      0       0
 ---------------------------------------------------------------------------------
 (15) _I2C2_EVENT_ERROR                                    1     1      0      24
                                              0 COMMON     1     1      0
                   _I2C2_EVENT_RESET
 ---------------------------------------------------------------------------------
 (15) _I2C2_EVENT_RESET                                    0     0      0       0
                      _I2C2_BusReset
 ---------------------------------------------------------------------------------
 (16) _I2C2_BusReset                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (13) _EUSART_TransmitISR                                  1     1      0      23
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (13) _EUSART_ReceiveISR                                   2     2      0      68
                                              0 COMMON     2     2      0
                                NULL *
 _EUSART_DefaultFramingErrorCallback *
 _EUSART_DefaultOverrunErrorCallback *
 ---------------------------------------------------------------------------------
 (14) _EUSART_DefaultOverrunErrorCallback                  0     0      0       0
 ---------------------------------------------------------------------------------
 (14) _EUSART_DefaultFramingErrorCallback                  0     0      0       0
 ---------------------------------------------------------------------------------
 (13) _ADC_ISR                                             0     0      0      29
                                NULL *
        _ADC_DefaultInterruptHandler *
           _adcConversionDoneHandler *
 ---------------------------------------------------------------------------------
 (14) _adcConversionDoneHandler                            2     2      0      29
                                              2 COMMON     2     2      0
            _ADC_GetConversionResult
                i1_ADC_SelectChannel
 ---------------------------------------------------------------------------------
 (15) i1_ADC_SelectChannel                                 2     2      0      29
                                              0 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 (15) _ADC_GetConversionResult                             2     0      2       0
                                              0 COMMON     2     0      2
 ---------------------------------------------------------------------------------
 (14) _ADC_DefaultInterruptHandler                         0     0      0       0
 ---------------------------------------------------------------------------------
 (14) NULL(Fake)                                           0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 18
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _I2C_Master_Init
     _I2C2_Initialize
       _I2C2_InterruptsEnable
   _SYSTEM_Initialize
     _ADC_Initialize
       _ADC_SetInterruptHandler
     _CLOCK_Initialize
     _EUSART_Initialize
       _EUSART_FramingErrorCallbackRegister
       _EUSART_OverrunErrorCallbackRegister
     _I2C2_Initialize
     _INTERRUPT_Initialize
       _INT_SetInterruptHandler
     _PIN_MANAGER_Initialize
     _SPI1_Initialize
     _TMR2_Initialize
     _TMR4_Initialize
     _TMR6_Initialize
     _pwm_fan_Initialize
   _TMR4_PeriodMatchCallbackRegister
   _initAdcMultiplexer
     _ADC_SelectChannel
     _ADC_SetInterruptHandler
   _printOut
     _printf
       _atoi (ARG)
         ___wmul
       _vfprintf (ARG)
         _vfpfcnvrt
           _dtoa
             ___awdiv
             ___awmod
             _abs
               ___awmod (ARG)
             _pad
               _fputc
                 _putch
                   _EUSART_IsTxReady
                   _EUSART_Write
               _fputs
                 _fputc
               _strlen
           _fputc
           _read_prec_or_width
             ___wmul
           _utoa
             ___lwdiv
             ___lwmod
             _pad
   _uartHandler
     _atoi
     _printf
     _readLine
       _EUSART_IsRxReady
       _EUSART_Read
       _printf
     _setKi
       _str2float (ARG)
         ___fladd
           ___xxtofl (ARG)
         ___fldiv
         ___flmul
           __Umul8_16
         ___xxtofl
     _setKp
       _str2float (ARG)
     _setSetpoint
       _atoi (ARG)
     _str2float

 _INTERRUPT_InterruptManager (ROOT)
   NULL(Fake) *
   _ADC_ISR *
     NULL(Fake) *
     _ADC_DefaultInterruptHandler *
     _adcConversionDoneHandler *
       _ADC_GetConversionResult
       i1_ADC_SelectChannel
   _EUSART_ReceiveISR *
     NULL(Fake) *
     _EUSART_DefaultFramingErrorCallback *
     _EUSART_DefaultOverrunErrorCallback *
   _EUSART_TransmitISR *
   _I2C2_ERROR_ISR *
     _I2C2_ErrorEventHandler
       _I2C2_EVENT_ERROR *
         _I2C2_EVENT_RESET
           _I2C2_BusReset
       _I2C2_EVENT_IDLE *
       _I2C2_EVENT_NACK *
         _I2C2_EVENT_STOP
           _I2C2_Close
             _I2C2_ErrorInterruptClear
             _I2C2_InterruptClear
             _I2C2_StatusFlagsClear
           _I2C2_StopSend
       _I2C2_EVENT_RESET *
       _I2C2_EVENT_RX *
         _I2C2_AckSend
         _I2C2_DataReceive
         _I2C2_IsRxBufFull
         _I2C2_NackSend
         _I2C2_ReceiveEnable
         _I2C2_RestartDisable
       _I2C2_EVENT_SEND_RD_ADDR *
         _I2C2_DataTransmit
       _I2C2_EVENT_SEND_WR_ADDR *
         _I2C2_DataTransmit
       _I2C2_EVENT_STOP *
       _I2C2_EVENT_TX *
         _I2C2_DataTransmit
         _I2C2_EVENT_STOP
         _I2C2_RestartEnable
       _I2C2_ErrorInterruptClear *
   _I2C2_ISR *
     _I2C2_EventHandler
       _I2C2_Close
       _I2C2_EVENT_ERROR *
       _I2C2_EVENT_IDLE *
       _I2C2_EVENT_NACK *
       _I2C2_EVENT_RESET *
       _I2C2_EVENT_RX *
       _I2C2_EVENT_SEND_RD_ADDR *
       _I2C2_EVENT_SEND_WR_ADDR *
       _I2C2_EVENT_STOP *
       _I2C2_EVENT_TX *
       _I2C2_InterruptClear *
       _I2C2_IsAddr *
       _I2C2_IsData *
       _I2C2_IsNack *
   _TMR2_ISR *
     NULL(Fake) *
     _TMR2_DefaultPeriodMatchCallback *
   _TMR4_ISR *
     NULL(Fake) *
     _TMR4_DefaultPeriodMatchCallback *
     _controller *
       ___fltol
         i1___flmul (ARG)
           i1__Umul8_16
           i1___xxtofl (ARG)
         i1___xxtofl (ARG)
       _getHoogtesensor
       _pwm_fan_LoadDutyValue
       i1___fladd
         i1___flmul (ARG)
         i1___xxtofl (ARG)
       i1___flmul
       i1___xxtofl

Address spaces:
Name               Size   Autos  Total    Usage
BITCOMMON           14      0       0      0.0%
BITBANK0            80      0       0      0.0%
BITBANK1            80      0       0      0.0%
BITBANK2            80      0       0      0.0%
BITBANK3            80      0       0      0.0%
BITBANK4            80      0       0      0.0%
BITBANK5            80      0       0      0.0%
BITBANK6            80      0       0      0.0%
BITBANK7            80      0       0      0.0%
BITBANK8            80      0       0      0.0%
BITBANK9            80      0       0      0.0%
BITBANK10           80      0       0      0.0%
BITBANK11           80      0       0      0.0%
BITBANK12           48      0       0      0.0%
BIGRAM            1008      0       0      0.0%
COMMON              14     14      14    100.0%
BANK0               80     53      80    100.0%
BANK1               80     78      80    100.0%
BANK2               80      0      80    100.0%
BANK3               80      0      54     67.5%
BANK4               80      0       0      0.0%
BANK5               80      0       0      0.0%
BANK6               80      0       0      0.0%
BANK7               80      0       0      0.0%
BANK8               80      0       0      0.0%
BANK9               80      0       0      0.0%
BANK10              80      0       0      0.0%
BANK11              80      0       0      0.0%
BANK12              48      0       0      0.0%
STACK                0      0       0      0.0%
DATA                 0      0     308      0.0%


Microchip Technology PIC Macro Assembler V3.00 build 20241204225717 
Symbol Table                                                                                   Wed Feb 19 16:25:57 2025

           __end_of_TMR4_DefaultPeriodMatchCallback 1DE4                   ??_TMR4_DefaultPeriodMatchCallback 0070  
                  ?_TMR4_DefaultPeriodMatchCallback 0070                     _TMR4_DefaultPeriodMatchCallback 1DE3  
                                 _SPI1_ByteExchange 0000                          __end_of_pwm_fan_Initialize 1EFE  
                                      ___fldiv@aexp 00B9                                        ___fldiv@bexp 00B8  
                                       i1___fladd@a 003E                                         i1___fladd@b 003A  
                                      ___fldiv@sign 00B1                                                  l30 1F09  
                                                l27 1027                                                  l55 1E86  
                                                l69 1EFD                                        ___awdiv@sign 00A5  
       __end_of_EUSART_OverrunErrorCallbackRegister 1F71               ??_EUSART_OverrunErrorCallbackRegister 00A2  
              ?_EUSART_OverrunErrorCallbackRegister 00A0                 _EUSART_OverrunErrorCallbackRegister 1F62  
                                       i1___flmul@a 0024                                                  _ki 0166  
                                       i1___flmul@b 0020                                                  _kp 016A  
                               ___wmul@multiplicand 00A2                      __end_of_I2C2_ErrorEventHandler 1077  
                               __Umul8_16@word_mpld 00A6                                          i1___xxtofl 175C  
                                               l119 1ECF                                                 l217 1EF1  
                                               l510 080E                                     ??_I2C2_NackSend 0070  
                                               l248 1E98                                                 l345 1326  
                                               l266 1E8F                                                 l451 1FA2  
                                               l373 10B8                                                 l392 1F91  
                                               l650 1268                                                 l706 1EBC  
                                               l709 1EAA                                                 l733 1149  
                                               l719 07FF                                                 l488 1EA1  
                                               l824 1F16                                                 l736 114B  
                                               l754 1FB3                                                 l914 175B  
                                               l764 1F61                                                 l768 1F70  
                                               l953 1EC5                                                 l962 1FC4  
                                               l883 146F                                                 l885 14C7  
                                               l869 09A0                                                 l878 09D7  
                                               l959 1FD5                                                 l899 1EB3  
                                   ??_I2C2_BusReset 0070                                                 _PR2 001E  
                                               _PR4 0416                                                 _PR6 041D  
                                               _abs 1000                                                 _pad 141A  
                                   __end_of_ADC_ISR 1F26                     __end_of_ADC_SetInterruptHandler 1E87  
                                      ___awmod@sign 00A5                                     _TMR2_Initialize 1F81  
                                               wreg 0009                                       i1___fladd@grs 004D  
                                      ___flmul@aexp 00BB                                        ___flmul@bexp 00BC  
                      ?_ADC_DefaultInterruptHandler 0070                                        ___flmul@sign 00B6  
                                      ___flmul@temp 00C1                                        ___flmul@prod 00BD  
                               i1_ADC_SelectChannel 1EDA                                        ?_EUSART_Read 0070  
                                      _BAUD1CONbits 019F                                    __end_of_I2C2_ISR 1E1D  
                                      ___fltol@exp1 0043                                                ?_abs 00A6  
                                              l1136 1F52                                                l2016 1011  
                                              l2009 1175                                                l2042 103D  
                                              l2028 15DD                                                l2036 10FF  
                                              l1440 1096                                                l1604 13C5  
                                              l1269 1E20                                                l1286 1E24  
                                              l1438 1082                                                l1811 0D79  
                                              l5020 0B04                                                l5012 0AE0  
                                              l1718 12DD                                                l5030 0B2B  
                                              l5022 0B09                                                l5014 0AF2  
                                              l1910 0887                                                l1591 1523  
                                              l1743 05F4                                                l1728 1231  
                                              l5040 0B4A                                                l5032 0B37  
                                              l5016 0AFA                                                l1760 0685  
                                              l1752 072A                                                l1816 0DC3  
                                              l1745 05CE                                                l1817 0DDD  
                                              l1841 0261                                                l5042 0B54  
                                              l5034 0B3B                                                l5026 0B16  
                                              l5018 0AFF                                                l5210 07F2  
                                              l5202 07E0                                                l1770 06CA  
                                              l1739 0575                                                l1819 0DE8  
                                              l1835 02E3                                                l5052 0B89  
                                              l5044 0B5E                                                l5036 0B3D  
                                              l5028 0B26                                                l5212 07F4  
                                              l5204 07E0                                                l1764 06A7  
                                              l5140 110F                                                l1941 1430  
                                              l1917 1F80                                                l1781 071D  
                                              l1773 06FD                                                l5070 0BE8  
                                              l5054 0B93                                                l5046 0B6B  
                                              l5038 0B43                                                l5150 1151  
                                              l5214 07FA                                                l5206 07E9  
                                              l1782 072A                                                l5142 111A  
                                              l1854 1113                                                l5134 1102  
                                              l1847 02D9                                                l5232 1E1D  
                                              l1944 1452                                                l5080 0C12  
                                              l5072 0BF6                                                l5064 0BBF  
                                              l5056 0BA0                                                l5048 0B78  
                                              l5152 1155                                                l5216 07FC  
                                              l5208 07EF                                                l5400 0558  
                                              l1856 1123                                                l5144 111F  
                                              l5136 1104                                                l1880 08BC  
                                              l1953 0750                                                l1881 092C  
                                              l1946 146E                                                l1962 07DF  
                                              l5082 0C1D                                                l5058 0BAE  
                                              l5066 0BC8                                                l5154 1169  
                                              l5226 1F71                                                l5218 07FE  
                                              l5402 055D                                                l5410 056D  
                                              l5138 110B                                                l1795 0C9F  
                                              l6300 12E6                                                l4700 159D  
                                              l1980 157F                                                l1972 16C1  
                                              l5068 0BD2                                                l5076 0BF9  
                                              l5092 0C2C                                                l5156 1173  
                                              l5148 114C                                                l5228 1F74  
                                              l5500 0676                                                l5420 0585  
                                              l5412 057B                                                l5404 0562  
                                              l1892 08F8                                                l1949 0752  
                                              l1797 0DF3                                                l1893 0904  
                                              l5174 1E7E                                                l5190 1F53  
                                              l6310 12F9                                                l6302 12E8  
                                              l4702 15BD                                                l4710 10E0  
                                              l5094 0C45                                                l5078 0C0A  
                                              l5086 0C23                                                l5510 069B  
                                              l5502 067D                                                l5430 058F  
                                              l5422 0587                                                l5414 057F  
                                              l5406 056A                                                ?_pad 00B4  
                                              l1879 08AB                                                l5192 1F5A  
                                              l6400 1264                                                l6320 1305  
                                              l6312 12FC                                                l6304 12EA  
                                              l4800 1393                                                l4704 15D3  
                                              l4712 10EE                                                l4720 102E  
                                              l5520 06B1                                                l5512 06A2  
                                              l5504 068D                                                l5440 0599  
                                              l5432 0591                                                l5424 0589  
                                              l5416 0581                                                l5408 056B  
                                              l5600 0C95                                                l6410 1F4B  
                                              l5194 1F62                                                l6402 1265  
                                              l6330 1313                                                l6322 1309  
                                              l6314 12FE                                                l6306 12ED  
                                              l4810 13AC                                                l4802 1398  
                                              l4714 10F3                                                l4722 1037  
                                              l4730 107E                                                l5530 06C1  
                                              l5522 06B6                                                l5514 06A6  
                                              l5506 0692                                                l5450 05B7  
                                              l5442 059B                                                l5434 0593  
                                              l5426 058B                                                l5418 0583  
                                              l5370 0523                                                l5602 0C97  
                                              l1995 0C4F                                                l1987 0B07  
                                              l6412 1F4D                                                l5196 1F69  
                                              l6404 1266                                                l5188 1E90  
                                              l6332 1316                                                l6324 130B  
                                              l6316 1300                                                l6308 12EF  
                                              l6340 1F85                                                l4740 14C8  
                                              l4812 13B1                                                l4804 139A  
                                              l4708 10DC                                                l4716 1028  
                                              l4732 1087                                                l6500 14A2  
                                              l5540 06DA                                                l5532 06C7  
                                              l5516 06AB                                                l5524 06B8  
                                              l5460 05E3                                                l5452 05D2  
                                              l5444 059D                                                l5436 0595  
                                              l5428 058D                                                l5380 0534  
                                              l5372 0525                                                l5620 0CDC  
                                              l5604 0CA7                                                l5612 0CBE  
                                              l1989 0B13                                                l6414 1F50  
                                              l6406 1F44                                                l6270 101B  
                                              l6262 1012                                                l6334 1319  
                                              l6326 130E                                                l6318 1303  
                                              l6342 1F8A                                                l6350 1F95  
                                              l4750 14D9                                                l4742 14CA  
                                              l4806 139E                                                l4814 13B7  
                                              l4670 1129                                                l4718 102C  
                                              l4910 073E                                                l4734 108C  
                                              l4726 1077                                                l4830 12B4  
                                              l4822 12A3                                                l5198 1EB4  
                                              l6502 14B0                                                l5550 070F  
                                              l5542 06DE                                                l5518 06AF  
                                              l5526 06BC                                                l5462 05EB  
                                              l5454 05DC                                                l5438 0597  
                                              l5446 059F                                                l5390 054A  
                                              l5382 053C                                                l5374 0529  
                                              l5630 0CFB                                                l5622 0CE4  
                                              l5614 0CC3                                                l5606 0CB3  
                                              l5710 00B3                                                l6408 1F49  
                                              l6272 101D                                                l6264 1015  
                                              l6328 1310                                                l6344 1F8C  
                                              l6336 1F81                                                l6352 1F96  
                                              l6360 0800                                                l6280 1EF9  
                                              l4760 14EB                                                l4752 14DE  
                                              l4744 14CE                                                l4816 13BC  
                                              l4808 13A8                                                l4664 1EA2  
                                              l4680 1144                                                l4672 112D  
                                              l4920 0759                                                l4912 0742  
                                              l4904 072B                                                l4736 1092  
                                              l4728 107A                                                l4840 12CE  
                                              l4832 12B6                                                l4824 12A6  
                                              l6520 0814                                                l6504 14BC  
                                              l6512 14C4                                                l5560 0725  
                                              l5552 0714                                                l5544 06FB  
                                              l5536 06CF                                                l5528 06BD  
                                              l5480 0620                                                l5472 0606  
                                              l5456 05DE                                                l5464 05ED  
                                              l5448 05A0                                                l5392 0550  
                                              l5384 053D                                                l5376 052A  
                                              l5368 051F                                                l5640 0D27  
                                              l5632 0D09                                                l5624 0CEC  
                                              l5608 0CB5                                                l5800 0241  
                                              l5720 00C8                                                l5712 00B4  
                                              l5704 00A9                                                l6440 0936  
                                              l6274 1025                                                l6266 1017  
                                              l6290 1E87                                                l6370 1232  
                                              l6282 1EC6                                                l6346 1F8E  
                                              l6338 1F84                                                l6354 1F9B  
                                              l6362 0803                                                l4770 1509  
                                              l4762 14F0                                                l4754 14E0  
                                              l4746 14D3                                                l4818 13C1  
                                              l4682 1146                                                l4674 1133  
                                              l4922 075E                                                l4930 078F  
                                              l4914 0747                                                l4906 072E  
                                              l4842 12D3                                                l4834 12BA  
                                              l4826 12AC                                                l4850 1206  
                                              l6530 0839                                                l6522 0816  
                                              l6506 14C2                                                l5562 0729  
                                              l5554 0715                                                l5546 0702  
                                              l5538 06D4                                                l5482 0622  
                                              l5474 060E                                                l5466 05F8  
                                              l5490 0632                                                l5458 05E2  
                                              l5394 0551                                                l5378 052F  
                                              l5386 053F                                                l5650 0D40  
                                              l5642 0D28                                                l5634 0D0D  
                                              l5626 0CF4                                                l5618 0CCC  
                                              l5570 0C5A                                                l5802 0245  
                                              l5730 00DA                                                l5722 00D0  
                                              l5714 00B9                                                l5706 00AD  
                                              l6450 094B                                                l6442 0937  
                                              l6268 1019                                                l6292 1E8B  
                                              l6380 1245                                                l6372 1234  
                                              l6284 1ECA                                                l6356 1F9D  
                                              l6348 1F92                                                l6364 0804  
                                              l6276 1F00                                                l4780 151F  
                                              l4772 150A                                                l4764 14F2  
                                              l4756 14E2                                                l4748 14D5  
                                              l4676 113B                                                l4668 1124  
                                              l4684 1FA5                                                l4692 1580  
                                              l4932 079D                                                l4940 07BB  
                                              l4924 077A                                                l4916 074C  
                                              l4908 0739                                                l4836 12C9  
                                              l4828 12AF                                                l4844 12D9  
                                              l4860 121E                                                l4852 1209  
                                              l6540 0865                                                l6532 083C  
                                              l6524 0820                                                l5556 0719  
                                              l5548 0707                                                l5492 0648  
                                              l5484 0626                                                l5476 0612  
                                              l5468 05FD                                                l5396 0553  
                                              l5388 0547                                                l5660 0D55  
                                              l5652 0D42                                                l5644 0D30  
                                              l5636 0D0E                                                l5628 0CF6  
                                              l5580 0C6E                                                l5572 0C5B  
                                              l5564 0C50                                                l5820 028D  
                                              l5812 0266                                                l5804 0246  
                                              l5740 00F6                                                l5732 00DF  
                                              l5724 00D3                                                l5716 00BE  
                                              l5708 00AF                                                l6460 09A4  
                                              l6452 0991                                                l6444 093D  
                                              l6390 125B                                                l6382 1247  
                                              l6374 1239                                                l6286 1EE6  
                                              l6294 12DE                                                l6358 1F9F  
                                              l6366 0809                                                l6278 1EF2  
                                              l4774 150F                                                l4766 14F6  
                                              l4758 14E8                                                l4790 137F  
                                              l4678 1141                                                l4686 1FA5  
                                              l4694 1587                                                l4870 141A  
                                              l4942 07C1                                                l4934 07A4  
                                              l4926 077B                                                l4918 0756  
                                              l4838 12CD                                                l4862 1222  
                                              l4854 120E                                                l4950 164D  
                                              l6542 0872                                                l6526 082D  
                                              l6518 080F                                                l6550 1EBD  
                                              l5558 071B                                                l5494 066C  
                                              l5486 0627                                                l5478 0616  
                                              l5398 0557                                                l5670 0D76  
                                              l5654 0D49                                                l5662 0D59  
                                              l5638 0D15                                                l5646 0D32  
                                              l5590 0C81                                                l5574 0C60  
                                              l5582 0C70                                                l5566 0C54  
                                              l5830 02BF                                                l5814 026B  
                                              l5822 0291                                                l5806 024A  
                                              l5750 0114                                                l5742 00FB  
                                              l5734 00E4                                                l5726 00D5  
                                              l5718 00C6                                                l6470 09CF  
                                              l6462 09A6                                                l6454 0994  
                                              l6446 093F                                                l6438 092D  
                                              l6392 125E                                                l6384 1249  
                                              l6376 1240                                                l6288 1EE9  
                                              l6296 12E0                                                l6368 080B  
                                              l4768 1505                                                l4776 1515  
                                              l4792 1381                                                l4784 1374  
                                              l4688 1FAD                                                l4696 158D  
                                              l4880 143F                                                l4872 141F  
                                              l4944 07C5                                                l4936 07A9  
                                              l4928 077F                                                l4864 1227  
                                              l4856 1210                                                l4848 11FF  
                                              l4960 1674                                                l4952 1650  
                                              l6544 0877                                                l6536 0847  
                                              l6528 0837                                                l6552 1FC5  
                                              l5496 066E                                                l5488 062F  
                                              l5680 0D8D                                                l5664 0D5D  
                                              l5656 0D4D                                                l5648 0D38  
                                              l5592 0C82                                                l5584 0C78  
                                              l5576 0C65                                                l5568 0C56  
                                              l5840 02DB                                                l5832 02C1  
                                              l5824 029E                                                l5816 0271  
                                              l5808 025E                                                l5760 016B  
                                              l5752 0121                                                l5744 0100  
                                              l5736 00EC                                                l5728 00D9  
                                              l6464 09C2                                                l6456 099A  
                                              l6448 0945                                                l6394 1260  
                                              l6386 124B                                                l6378 1243  
                                              l6298 12E3                                                l4778 151A  
                                              l4794 1385                                                l4786 1376  
                                              l4890 1000                                                l4698 1592  
                                              l4882 1444                                                l4874 1429  
                                              l4946 07CC                                                l4938 07B6  
                                              l4858 1214                                                l4866 122D  
                                              l4970 1696                                                l4962 1675  
                                              l4954 1658                                                l6546 0883  
                                              l6490 1494                                                l6482 1481  
                                              l6474 146F                                                l6554 1FB4  
                                              l5498 0671                                                l5690 0DD4  
                                              l5682 0DA5                                                l5674 0D7E  
                                              l5666 0D5E                                                l5658 0D4E  
                                              l5594 0C87                                                l5586 0C7B  
                                              l5578 0C6D                                                l5834 02CC  
                                              l5826 02A8                                                l5818 0275  
                                              l5770 019C                                                l5762 0178  
                                              l5754 0139                                                l5738 00EE  
                                              l5850 08A3                                                l6466 09C4  
                                              l6458 09A2                                                l6730 16C8  
                                              l6396 1261                                                l6388 1253  
                                              l6660 10A0                                                l6724 1F0A  
                                              l4796 138A                                                l4788 137A  
                                              l4892 1005                                                l4884 1457  
                                              l4876 142E                                                l4980 1524  
                                              l4972 169B                                                l4964 1679  
                                              l4956 165B                                                l6492 149C  
                                              l6476 1477                                                l5692 0DDC  
                                              l5676 0D83                                                l5684 0DA9  
                                              l5668 0D62                                                l5596 0C8C  
                                              l5588 0C7D                                                l5836 02D0  
                                              l5828 02B6                                                l5780 01D9  
                                              l5772 01A3                                                l5764 017F  
                                              l5756 0146                                                l5748 0109  
                                              l5860 08CF                                                l5852 08B3  
                                              l5844 088A                                                l6468 09C9  
                                              l6740 1717                                                l6732 16D6  
                                              l6726 1E21                                                l6398 1263  
                                              l6670 10B2                                                l6662 10A3  
                                              l4798 1390                                                l4894 1006  
                                              l4886 1461                                                l4878 1433  
                                              l4990 155F                                                l4982 1527  
                                              l4974 16A8                                                l4958 1660  
                                              l4966 1689                                                l6750 1EAB  
                                              l6494 149E                                                l6486 1489  
                                              l6478 147E                                                l5694 0DE0  
                                              l5686 0DB6                                                l5678 0D89  
                                              l5598 0C94                                                l5838 02D1  
                                              l5790 022A                                                l5782 01EB  
                                              l5774 01B5                                                l5766 018A  
                                              l5758 015E                                                l5870 08FC  
                                              l5862 08DE                                                l5846 088F  
                                              l6742 1720                                                l6734 16EA  
                                              l6910 11B6                                                l6902 11A3  
                                              l6672 10B5                                                l6664 10A6  
                                              l6656 1097                                                l4984 1538  
                                              l4992 1567                                                l4968 1690  
                                              l4976 16AD                                                l6496 14A0  
                                              l6488 148C                                                l5696 0DE4  
                                              l5688 0DD1                                                l5792 0231  
                                              l5784 0200                                                l5776 01BC  
                                              l5768 0191                                                l5880 0924  
                                              l5872 0906                                                l5864 08E5  
                                              l5856 08BF                                                l5848 0893  
                                              l6744 1729                                                l6736 16FC  
                                              l6728 16C2                                                l6912 11B9  
                                              l6904 11A6                                                l6666 10A9  
                                              l6658 109D                                                l6674 1E99  
                                              l4994 157B                                                l4986 1540  
                                              l5698 0DE6                                                l5794 0235  
                                              l5786 0217                                                l5778 01CE  
                                              l5874 091A                                                l5866 08EE  
                                              l5858 08C8                                                l6746 1732  
                                              l6738 1705                                                l6906 11A7  
                                              l6668 10AC                                                l4988 154D  
                                              l5796 0236                                                l5788 021E  
                                              l5876 091F                                                l5868 08F2  
                                              l6748 173A                                                l6908 11B3  
                                              l5798 023D                                                l5878 0923  
                                              STR_1 1928                                                STR_2 1912  
                                              STR_3 1865                                                STR_4 18FD  
                                              STR_5 18D4                                                STR_6 18B4  
                                              STR_7 1921                                                STR_8 191A  
                                              _LATA 010C                                                _LATB 010D  
                                              _LATC 010E                                                u4000 1EAA  
                                              u4010 1129                                                u4011 1128  
                                              u4020 1133                                                u4100 107E  
                                              u4021 1132                                                u4101 107D  
                                              u4030 1FAD                                                u4031 1FAC  
                                              u4200 1505                                                u4040 1587  
                                              u4201 1504                                                u4041 1586  
                                              u4050 158D                                                u4130 1092  
                                              u4051 158C                                                u4131 1091  
                                              u4115 1083                                                u4220 1515  
                                              u4140 14CE                                                u4060 159D  
                                              u5100 055D                                                u4221 1514  
                                              u4205 1501                                                u4141 14CD  
                                              u4061 159C                                                u4125 1088  
                                              u5101 055C                                                u4230 151A  
                                              u4150 14D9                                                u4310 13B7  
                                              u4070 15BD                                                u5110 0562  
                                              u4231 1519                                                u4215 150B  
                                              u4151 14D8                                                u4311 13B6  
                                              u4071 15BC                                                u5111 0561  
                                              u4160 14E8                                                u4320 13BC  
                                              u4240 137A                                                u4080 10FF  
                                              u4400 1206                                                u5120 057B  
                                              u6000 0265                                                u4161 14E7  
                                              u4321 13BB                                                u4305 13AD  
                                              u4241 1379                                                u4081 10FE  
                                              u4401 1205                                                u5121 057A  
                                              u6001 0264                                                u4250 1385  
                                              u4090 1037                                                u4330 12AC  
                                              u5210 05F4                                                u5130 057F  
                                              u5050 0529                                                u6010 026B  
                                              u4251 1384                                                u4075 15B9  
                                              u4091 1036                                                u4331 12AB  
                                              u5211 05F3                                                u5131 057E  
                                              u5051 0528                                                u6011 026A  
                                              u4180 14F6                                                u4260 1390  
                                              u4500 1005                                                u4420 1214  
                                              u5300 0676                                                u5220 05F8  
                                              u5140 05B7                                                u5060 052F  
                                              u6020 0275                                                u6100 08B3  
                                              u4181 14F5                                                u4261 138F  
                                              u4501 1004                                                u4421 1213  
                                              u5301 0675                                                u5221 05F7  
                                              u5205 05E5                                                u5141 05B6  
                                              u5061 052E                                                u6021 0274  
                                              u6101 08B2                                                u4510 0733  
                                              u4350 12BA                                                u4430 121E  
                                              u5310 068D                                                u5230 05FD  
                                              u5150 05C1                                                u5070 0534  
                                              u6030 0283                                                u4175 14EC  
                                              u4511 0731                                                u4351 12B9  
                                              u4431 121D                                                u4415 120A  
                                              u5311 068C                                                u5231 05FC  
                                              u5151 05BF                                                u5071 0533  
                                              u4280 139E                                                u4600 07C1  
                                              u4520 0734                                                u5400 06CE  
                                              u5320 0692                                                u5240 0612  
                                              u5160 05C2                                                u5080 0550  
                                              u6040 029E                                                u6200 091F  
                                              u6120 08CE                                                u4281 139D  
                                              u4601 07C0                                                u4345 12B0  
                                              u5401 06CD                                                u5321 0691  
                                              u5241 0611                                                u5145 05B3  
                                              u5081 054F                                                u6041 029D  
                                              u6201 091E                                                u6121 08CD  
                                              u4290 13A8                                                u4530 073E  
                                              u4370 12C9                                                u4450 122D  
                                              u4610 1690                                                u5410 06D4  
                                              u5250 0616                                                u5170 05D2  
                                              u5090 0557                                                u6050 02B6  
                                              u6210 0923                                                u4195 14F7  
                                              u4291 13A7                                                u4275 1394  
                                              u4531 073D                                                u4371 12C8  
                                              u4451 122C                                                u4435 121A  
                                              u4611 168F                                                u5411 06D3  
                                              u5251 0615                                                u5171 05D1  
                                              u5091 0556                                                u6051 02B5  
                                              u6035 027F                                                u6211 0922  
                                              u6115 08C2                                                u4460 141F  
                                              u4540 0747                                                u4620 1696  
                                              u4700 0B3B                                                u5500 0729  
                                              u5420 06DE                                                u5340 06A6  
                                              u6060 02D0                                                u6140 08E4  
                                              u7100 094B                                                u4461 141E  
                                              u4541 0746                                                u4365 12BB  
                                              u4445 1223                                                u4621 1695  
                                              u4701 0B3A                                                u5501 0728  
                                              u5421 06DD                                                u5341 06A5  
                                              u6061 02CF                                                u6045 029A  
                                              u6141 08E3                                                u7101 094A  
                                              i1l30 1EE5                                                u4470 142E  
                                              u4550 079D                                                u4390 12D9  
                                              u4630 169B                                                u4710 0B54  
                                              u5430 06EC                                                u5350 06AB  
                                              u5270 0626                                                u5190 05E2  
                                              u5510 0C5A                                                u7110 099A  
                                              u4295 13A4                                                u4471 142D  
                                              u4551 079C                                                u4391 12D8  
                                              u4375 12C5                                                u4631 169A  
                                              u4711 0B53                                                u5351 06AA  
                                              u5335 069C                                                u5271 0625  
                                              u5191 05E1                                                u5511 0C59  
                                              u6055 02B2                                                u6135 08D8  
                                              u7111 0999                                                u4480 1452  
                                              u4560 07A4                                                u4640 16A8  
                                              u4720 0B5E                                                u7200 082D  
                                              u5440 06FB                                                u5360 06B6  
                                              u5520 0C60                                                u6160 08F2  
                                              u6080 088F                                                u7120 09A0  
                                              u4481 1451                                                u4561 07A3  
                                              u4385 12CF                                                u4641 16A7  
                                              u4721 0B5D                                                u7201 082C  
                                              u5441 06FA                                                u5361 06B5  
                                              u5265 0619                                                u5185 05D5  
                                              u5521 0C5F                                                u6161 08F1  
                                              u6081 088E                                                u7121 099F  
                                              u4490 1457                                                u4570 07A9  
                                              u4650 16AD                                                u4730 0B93  
                                              u7210 0837                                                u5450 0702  
                                              u5370 06BC                                                u5290 0648  
                                              u5530 0C65                                                u6170 08F8  
                                              u6090 0893                                                u7130 09C9  
                                 ?_I2C2_DataReceive 0070                                                u4491 1456  
                                              u4571 07A8                                                u4555 0799  
                                              u4651 16AC                                                u4731 0B92  
                                              u7211 0836                                                u5451 0701  
                                              u5435 06E8                                                u5371 06BB  
                                              u5291 0647                                                u5531 0C64  
                                              u6075 02D4                                                u6171 08F7  
                                              u6155 08E8                                                u6091 0892  
                                              u7131 09C8                                                i1l52 1F25  
                                              u4580 07B6                                                u4660 1538  
                                              u4740 0BD2                                                u7220 0846  
                                              u5460 0707                                                u5380 06C1  
                                              u5700 0D5D                                                u5620 0D0D  
                                              u5540 0C81                                                u6180 08FC  
                                              u7140 09CF                                                u4485 144E  
                                              u4581 07B5                                                u4661 1537  
                                              u4645 16A4                                                u4741 0BD1  
                                              u7221 0845                                                u5461 0706  
                                              u5381 06C0                                                u5293 0644  
                                              u5285 0629                                                u5701 0D5C  
                                              u5621 0D0C                                                u5605 0CFC  
                                              u5541 0C80                                                u6181 08FB  
                                              u7141 09CE                                                u4590 07BB  
                                              u4670 157B                                                u4750 0C0A  
                                              u7230 0872                                                u7150 1477  
                                              u5470 0714                                                u5390 06C7  
                                              u5710 0D62                                                u5550 0C87  
                                              u6190 0910                                                i1l39 1E34  
                                              u4591 07BA                                                u4671 157A  
                                              u4751 0C09                                                u7231 0871  
                                              u7151 1476                                                u5471 0713  
                                              u5391 06C6                                                u5711 0D61  
                                              u5615 0D03                                                u5551 0C86  
                                              i1l72 1FFF                                                u4680 0AF2  
                                              u7240 0877                                                u7160 1488  
                                              u5480 0719                                                u5720 0D76  
                                              u5640 0D27                                                u5560 0C8C  
                                              u4760 110F                                                u4585 07B2  
                                              u4681 0AF1                                                u7241 0876  
                                              u7161 1487                                                u5481 0718  
                                              u5721 0D75                                                u5641 0D26  
                                              u5561 0C8B                                                u4761 110E  
                                              i1l58 1DE0                                                u4850 1F5A  
                                              u4690 0B2B                                                u7170 1494  
                                              u5730 0D7D                                                u5650 0D38  
                                              u5570 0CA7                                                u5810 00B3  
                                              u7090 0945                                                u4851 1F59  
                                              u4691 0B2A                                                u7171 1493  
                                              u5731 0D7C                                                u5651 0D37  
                                              u5635 0D0F                                                u5571 0CA6  
                                              u5811 00B2                                                u6195 090C  
                                              u7091 0944                                                u4860 1F69  
                                              u7180 14BC                                                u5740 0D83  
                                              u5660 0D40                                                u5580 0CC3  
                                              u4780 111F                                                u5820 00B9  
                                              u4861 1F68                                                u7181 14BB  
                                              u5805 0DEB                                                u5741 0D82  
                                              u5661 0D3F                                                u5645 0D23  
                                              u5581 0CC2                                                u4781 111E  
                                              u5821 00B8                                                u3990 1EA9  
                                              u4790 1173                                                u7190 0820  
                                              u4870 1EBB                                                u5750 0D8D  
                                              u5590 0CFB                                                u5910 01F6  
                                              u5830 00BE                                                u3991 1EA7  
                                              u4791 1172                                                u7191 081F  
                                              u4871 1EB9                                                u5495 0720  
                                              u5751 0D8C                                                u5591 0CFA  
                                              u4775 1114                                                u5831 00BD  
                                              u4880 1EBC                                                u5760 0D9B  
                                              u5680 0D4D                                                u5920 020D  
                                              u5840 00D9                                                u7440 1727  
                                              u5681 0D4C                                                u5905 01A4  
                                              u5841 00D8                                                u7441 1725  
                                              u4890 07FA                                                u5770 0DB6  
                                              u5850 00DF                                                u7450 1728  
                                              u4891 07F9                                                u5771 0DB5  
                                              u5675 0D43                                                u5915 01F2  
                                              u5851 00DE                                                u5780 0DD1  
                                              u5860 00E4                                                u5781 0DD0  
                                              u5765 0D97                                                u5925 0209  
                                              u5861 00E3                                                u5790 0DE4  
                                              u5950 0235                                                u5870 00FB  
                                              u5791 0DE3                                                u5775 0DB2  
                                              u5695 0D4F                                                u5951 0234  
                                              u5935 0218                                                u5871 00FA  
                                              u5880 0100                                                u5785 0DCD  
                                              u5945 022B                                                u5881 00FF  
                                              u5970 0245                                                u5971 0244  
                                              u5980 024A                                                u5981 0249  
                                              u5965 0237                                                u5990 025E  
                                              u5991 025D                                                u5895 0179  
                                              u7867 11BF                                                _TMR2 001D  
                                              _TMR4 0415                                                _TMR6 041C  
                                              _WPUA 020C                                                _WPUB 020D  
                                              _WPUC 020E                           EUSART_ReceiveISR@regValue 0070  
                                   _getHoogtesensor 1E47                                                abs@a 00A6  
                                              _dbuf 01A0                                                _atoi 080F  
                                              _main 11A3                                                _dtoa 072B  
                                              _line 01C0                                  ??_I2C2_DataReceive 0070  
                                     i1___flmul@grs 002E                                                _prec 0146  
                                              _nout 0144                                                pad@i 00BA  
                                              pad@p 00B7                                                fsr0h 0005  
                                              fsr1h 0007                                                indf0 0000  
                                              fsr0l 0004                                                indf1 0001  
                                              fsr1l 0006                                                btemp 007E  
                                              _utoa 164D                         _INT_DefaultInterruptHandler 0000  
                  __end_of_adcConversionDoneHandler 11FF                                      i1___fladd@aexp 004B  
                                    i1___fladd@bexp 004C                                                start 0074  
        __end_of_EUSART_DefaultOverrunErrorCallback 1DFD                ??_EUSART_DefaultOverrunErrorCallback 0070  
               ?_EUSART_DefaultOverrunErrorCallback 0070                  _EUSART_DefaultOverrunErrorCallback 1DF9  
                                   ??_I2C2_StopSend 0070                                     ___fldiv@new_exp 00B2  
                   __end_of_INT_SetInterruptHandler 1E99                       I2C2_EVENT_ERROR@retEventState 0070  
                             ??_I2C2_RestartDisable 0070                                ?i1_ADC_SelectChannel 0070  
                                        _i2c2Status 0055                                               ??_abs 00A8  
                                             ??_pad 00B9                                    ?_I2C_Master_Init 0070  
                                     ?_EUSART_Write 00A0                                       ___fltol@sign1 0042  
                                             _ADACT 009F                                               ?_atoi 00A6  
                                 __end_of_I2C2_Host 1891                                     __end_of___fladd 072B  
                                             ?_main 0070                                               ?_dtoa 00BC  
                                   __end_of___fldiv 0DF4                                     __end_of___awdiv 1524  
                                             STR_10 184C                                               STR_11 18F0  
                                             STR_12 18E3                                               STR_13 18C5  
                                             STR_14 18A3                                     __end_of___awmod 13C6  
                                   __end_of___flmul 02E4                                     __end_of___fltol 164D  
                                             ?_utoa 00BC                                     ___awdiv@divisor 00A0  
                                             _T2CON 001F                                               _T4CON 0417  
                                             _IOCAF 0393                                               _IOCBF 0396  
                                             _IOCCF 0399                                               _IOCAN 0392  
                                             _IOCAP 0391                                               _IOCBN 0395  
                                             _T6CON 041E                                               _IOCBP 0394  
                                             _IOCCN 0398                                               _IOCCP 0397  
                                   __end_of___lwdiv 12DE                                               i1l231 0056  
                                             i1l223 001B                                               i1l232 0072  
                                             i1l233 0064                                               i1l225 002C  
                                             i1l227 003A                                               i1l229 0048  
                                             i1l238 0072                                               i1l432 1DE2  
                                   __end_of___lwmod 1232                                               i1l426 1F34  
                                             i1l491 1DE3                                               i1l821 11FE  
                                             i1l485 1F43                                               i1l742 1059  
                                             i1l830 1E4C                                               i1l760 1DFC  
                                             i1l729 1419                                               i1l739 1057  
                                             i1l757 1DE1                                               i1l936 0AD8  
                                             i1l938 0ADF                                     ___awdiv@counter 00A4  
                                             _OSCEN 091D                                               _UART1 1800  
                                      vfpfcnvrt@fmt 00CB                                               _TRISA 008C  
                                             _TRISB 008D                                               _TRISC 008E  
                                             _RXPPS 0E24                                     _TMR4_Initialize 1F92  
                                  __end_of_TMR2_ISR 1F35                                    __end_of_TMR4_ISR 1F44  
                                 _I2C2_DataTransmit 1E25                                               _flags 0065  
                                _EUSART_TransmitISR 103E                                     _I2C2_EVENT_IDLE 1E11  
                                   _I2C2_EVENT_NACK 1E35                                      i1___flmul@aexp 0032  
                               read_prec_or_width@c 00AB                                      i1___flmul@bexp 0033  
                               read_prec_or_width@n 00AC                                               _fputc 1580  
                                             _fputs 10DC                                               _setKi 1FB4  
                                             _setKp 1FC5                                     _I2C2_EVENT_STOP 1E76  
                                    i1___flmul@sign 002D                                      i1___flmul@temp 0038  
                                    i1___flmul@prod 0034                                               atoi@n 00AB  
                                             pad@fp 00B4                                               atoi@s 00A6  
                                             _width 00EE                                               _putch 1FA3  
                                             dtoa@d 00BE                                               dtoa@i 00C7  
                                             dtoa@p 00C3                                               dtoa@s 00C6  
                                             dtoa@w 00C4                                  ?_I2C2_DataTransmit 0070  
                                _I2C2_ReceiveEnable 1DF0                                               pclath 000A  
                                             utoa@d 00BE                                               utoa@i 00C4  
                                             utoa@p 00C1                                               utoa@w 00C2  
                                             status 0003                                               wtemp0 007E  
                               ?_EUSART_TransmitISR 0070                                     i1___fladd@signs 004A  
                                       controller@I 0051                                         controller@P 004F  
                                      ??_I2C2_Close 0070                                 ??_I2C2_DataTransmit 0070  
                               ?_I2C2_ReceiveEnable 0070                               ??i1_ADC_SelectChannel 0070  
                                 ??_I2C2_Initialize 00A0                                     __initialization 0076  
                                      __end_of_atoi 0888                                        __end_of_main 11D0  
                                      __end_of_dtoa 07E0                                        __end_of_utoa 16C2  
                                    ??_EUSART_Write 00A1                   _EUSART_TxCompleteInterruptHandler 0156  
                           __end_of_TMR2_Initialize 1F92                                           ??_ADC_ISR 0074  
                       ?_INTERRUPT_InterruptManager 0070                       __end_of_I2C2_StatusFlagsClear 1E05  
                                            ??_atoi 00A8                                ??_EUSART_TransmitISR 0070  
                                            ??_main 00EC                                              ??_dtoa 00C0  
                                       ?i1___xxtofl 0070                                              ??_utoa 00C0  
                           setSetpoint@new_setpoint 00AD                                ??_I2C2_ReceiveEnable 0070  
                         __end_of_I2C2_DataTransmit 1E2A                          __end_of_read_prec_or_width 1580  
                                   _TMR6_Initialize 0800  EUSART_OverrunErrorCallbackRegister@callbackHandler 00A0  
EUSART_FramingErrorCallbackRegister@callbackHandler 00A0                             __end_of_getHoogtesensor 1E4D  
                                __end_of_I2C2_Close 1FEB                                              _ADCON0 009D  
                                            _ADCON1 009E                          _EUSART_OverrunErrorHandler 0150  
                                            ?_fputc 00A3                                              ?_fputs 00AC  
                                            _ADRESH 009C                                              _ADRESL 009B  
                                            ?_setKi 00CF                                              ?_setKp 00CF  
                                  ___awdiv@dividend 00A2                                   ?_I2C2_IsRxBufFull 0070  
                                            _ANSELA 018C                                              ?_putch 0070  
                                            _ANSELB 018D                                              _ANSELC 018E  
                                      ?_setSetpoint 00AD                                              _RC1REG 0199  
                                            _RC1STA 019D                                              _RB4PPS 0E9C  
                                            _RB5PPS 0E9D                                              _RB6PPS 0E9E  
                                            i1l1204 11A2                                              i1l1212 12A2  
                                            i1l1221 1E7D                                              i1l1230 1E29  
                                            i1l1215 1E3A                                              i1l1224 1E66  
                                            i1l1233 1E00                                              i1l1242 1DF5  
                                            i1l1218 1E40                                              i1l1251 1E08  
                                            i1l1227 1DEF                                              _RC5PPS 0EA5  
                                            i1l1236 1DF2                                              i1l1260 1E2E  
                                            i1l1164 1E1C                                              i1l1254 1E10  
                                            i1l1182 135F                                              i1l1239 1DF8  
                                            i1l1191 1E14                                              i1l1167 1E18  
                                            i1l1263 1E6D                                              i1l1176 1FEA  
                                            i1l1248 1DEC                                              i1l1281 1E04  
                                            i1l1257 1E46                                              i1l1185 1373  
                                            _ODCONA 028C                                              i1l1266 1E0C  
                                            i1l1194 1E75                                              _ODCONB 028D  
                                            i1l1275 1DE9                                              _ODCONC 028E  
                                            i1l1188 1076                                   _I2C2_Deinitialize 0000  
                                            i1l1197 1E5F                                              i1l1278 1DE6  
                                            i1l5000 1FD8                                              i1l1632 164C  
                                            i1l5010 1DFD                                              i1l5002 1FE1  
                                            i1l1642 164C                                              i1l5004 1FE4  
                                            i1l5100 1E26                                              i1l5006 1FE7  
                                            i1l5110 1E09                                              i1l5102 1DF6  
                                            i1l1639 1637                                              i1l1743 0EC9  
                                            i1l5008 1DEA                                              i1l5120 1DF3  
                                            i1l5104 1E76                                              i1l1760 0F5A  
                                            i1l6000 0EF7                                              i1l1752 0FFF  
                                            i1l1745 0EA3                                              i1l1841 049C  
                                            i1l5114 1DED                                              i1l5122 1E0D  
                                            i1l5106 1E7C                                              i1l5130 1E65  
                                            i1l1770 0F9F                                              i1l6010 0F1D  
                                            i1l6002 0EFB                                              i1l1739 0E4A  
                                            i1l1835 051E                                              i1l5124 1DF0  
                                            i1l5300 1287                                              i1l1764 0F7C  
                                            i1l6012 0F41                                              i1l6020 0F52  
                                            i1l6004 0EFC                                              i1l6100 030B  
                                            i1l1781 0FF2                                              i1l1773 0FD2  
                                            i1l5118 1E05                                              i1l5302 128B  
                                            i1l5310 129E                                              i1l5126 1E60  
                                            i1l5222 1E47                                              i1l1782 0FFF  
                                            i1l6030 0F77                                              i1l6022 0F62  
                                            i1l6014 0F43                                              i1l6006 0F04  
                                            i1l1854 10CB                                              i1l6110 031A  
                                            i1l6102 030E                                              i1l1847 0514  
                                            i1l5312 12A1                                              i1l5304 1291  
                                            i1l5320 1E39                                              i1l5128 1E63  
                                            i1l6040 0F8B                                              i1l6032 0F7B  
                                            i1l6024 0F67                                              i1l6016 0F46  
                                            i1l6008 0F07                                              i1l1856 10DB  
                                            i1l5160 10BA                                              i1l6200 04CC  
                                            i1l6120 0336                                              i1l6112 031F  
                                            i1l6104 0310                                              i1l1880 178F  
                                            i1l1881 17FF                                              i1l5306 1295  
                                            i1l5234 1E67                                              i1l5242 1E2A  
                                            i1l6050 0F9C                                              i1l6034 0F80  
                                            i1l6042 0F8D                                              i1l6018 0F4B  
                                            i1l5170 10D7                                              i1l5162 10BC  
                                            i1l6210 04FC                                              i1l6202 04D9  
                                            i1l6130 035C                                              i1l6122 033B  
                                            i1l6114 0327                                              i1l6106 0314  
                                            i1l5252 1E6E                                              i1l5260 1E5E  
                                            i1l5308 129B                                              i1l5316 1E35  
                                            i1l5324 1E3B                                              i1l5340 1602  
                                            i1l5332 15DE                                              i1l5180 1FEB  
                                            i1l6060 0FB3                                              i1l6036 0F84  
                                            i1l6028 0F70                                              i1l6044 0F91  
                                            i1l5164 10C3                                              i1l6212 0507  
                                            i1l6204 04E3                                              i1l6140 03B3  
                                            i1l6132 0374                                              i1l6116 0329  
                                            i1l6108 0315                                              i1l1892 17CB  
                                            i1l1893 17D7                                              i1l5270 1181  
                                            i1l5246 1E11                                              i1l5254 1E74  
                                            i1l5318 1E35                                              i1l5326 1E3B  
                                            i1l5238 1E41                                              i1l5342 1603  
                                            i1l5334 15E8                                              i1l6070 0FE9  
                                            i1l6062 0FD0                                              i1l6054 0FA4  
                                            i1l6046 0F92                                              i1l6038 0F86  
                                            i1l5166 10C7                                              i1l6214 050B  
                                            i1l6206 04F1                                              i1l6150 03DE  
                                            i1l6142 03BA                                              i1l6134 0381  
                                            i1l6126 0344                                              i1l6118 0331  
                                            i1l6230 1786                                              i1l6222 175D  
                                            i1l1879 177E                                              i1l5176 1E2F  
                                            i1l5280 1197                                              i1l5272 1189  
                                            i1l5264 1176                                              i1l5248 1E13  
                                            i1l5328 1E3F                                              i1l5344 160B  
                                            i1l6080 0FFE                                              i1l6072 0FEA  
                                            i1l6064 0FD7                                              i1l6056 0FA9  
                                            i1l6048 0F96                                              i1l5168 10D2  
                                            i1l6216 050C                                              i1l6208 04FA  
                                            i1l6160 0426                                              i1l6152 03F0  
                                            i1l6144 03C5                                              i1l6136 0399  
                                            i1l6128 034F                                              i1l6240 17B1  
                                            i1l6224 1762                                              i1l5282 119A  
                                            i1l5274 118E                                              i1l5266 1176  
                                            i1l5258 1E59                                              i1l5290 1269  
                                            i1l5362 162E                                              i1l5354 1619  
                                            i1l5346 160D                                              i1l5338 15F1  
                                            i1l6074 0FEE                                              i1l6066 0FDC  
                                            i1l6058 0FAF                                              i1l6218 0516  
                                            i1l6170 046C                                              i1l6162 043B  
                                            i1l6154 03F7                                              i1l6146 03CC  
                                            i1l6138 03A6                                              i1l6090 02EF  
                                            i1l6082 02E4                                              i1l6250 17D9  
                                            i1l6242 17B8                                              i1l6234 1792  
                                            i1l6226 1766                                              i1l6420 11D1  
                                            i1l4900 1DE4                                              i1l5284 119D  
                                            i1l5268 117D                                              i1l5276 1191  
                                            i1l5292 126B                                              i1l5364 163C  
                                            i1l5348 1611                                              i1l5356 1627  
                                            i1l6076 0FF0                                              i1l6068 0FE4  
                                            i1l6180 0480                                              i1l6172 0470  
                                            i1l6164 0452                                              i1l6156 0409  
                                            i1l6148 03D7                                              i1l6092 02F4  
                                            i1l6084 02E8                                              i1l6252 17ED  
                                            i1l6244 17C1                                              i1l6236 179B  
                                            i1l6228 1776                                              i1l6422 11D9  
                                            i1l6430 11E9                                              i1l4902 1E01  
                                            i1l5278 1196                                              i1l5286 11A1  
                                            i1l5294 1273                                              i1l5366 1641  
                                            i1l6078 0FFA                                              i1l6190 04A1  
                                            i1l6182 0481                                              i1l6174 0471  
                                            i1l6166 0459                                              i1l6158 0414  
                                            i1l6094 02F9                                              i1l6086 02EA  
                                            i1l6254 17F2                                              i1l6246 17C5  
                                            i1l6238 17A2                                              i1l7080 11F2  
                                            i1l6424 11DD                                              i1l6432 11FA  
                                            i1l6416 1DF9                                              i1l5296 127A  
                                            i1l6600 1333                                              i1l6192 04A6  
                                            i1l6184 0485                                              i1l6176 0478  
                                            i1l6168 0465                                              i1l6096 0301  
                                            i1l6088 02EE                                              i1l6256 17F6  
                                            i1l6248 17CF                                              i1l6426 11E5  
                                            i1l6418 11D0                                              i1l5298 1282  
                                            i1l6610 1359                                              i1l6602 133B  
                                            i1l6194 04AC                                              i1l6186 0499  
                                            i1l6178 047C                                              i1l6098 0303  
                                            i1l6258 17F7                                              i1l6620 1F17  
                                            i1l6700 1407                                              i1l6604 1343  
                                            i1l6612 135F                                              i1l5900 0E11  
                                            i1l6196 04B0                                              i1l6622 1F19  
                                            i1l6614 105A                                              i1l6606 1349  
                                            i1l5910 0E25                                              i1l5902 0E12  
                                            i1l6198 04C8                                              i1l6624 1F20  
                                            i1l6704 140E                                              i1l6720 1054  
                                            i1l6712 103E                                              i1l6616 105F  
                                            i1l6608 1351                                              i1l5920 0E32  
                                            i1l5912 0E26                                              i1l5904 0E14  
                                            i1l6560 09E9                                              i1l6640 1F35  
                                            i1l6706 1415                                              i1l6714 1045  
                                            i1l6618 1062                                              i1l6650 1F26  
                                            i1l5930 0E50                                              i1l5922 0E37  
                                            i1l5914 0E28                                              i1l5906 0E1C  
                                            i1l6570 0AB4                                              i1l6562 0A36  
                                            i1l6642 1F3C                                              i1l6708 1417  
                                            i1l6716 104D                                              i1l6652 1F2D  
                                            i1l5940 0E5C                                              i1l5932 0E54  
                                            i1l5924 0E3F                                              i1l5916 0E2C  
                                            i1l5908 0E1F                                              i1l6572 0AC1  
                                            i1l6564 0A71                                              i1l6556 09D8  
                                            i1l6644 1F41                                              i1l6718 1052  
                                            i1l6646 1E15                                              i1l6654 1F32  
                                            i1l5950 0E66                                              i1l5942 0E5E  
                                            i1l5934 0E56                                              i1l5926 0E40  
                                            i1l5918 0E2D                                              i1l6582 0AD8  
                                            i1l6574 0AC7                                              i1l6566 0AA5  
                                            i1l6558 09E0                                              i1l6680 13CF  
                                            i1l6648 1E19                                              i1l5960 0E70  
                                            i1l5952 0E68                                              i1l5944 0E60  
                                            i1l5936 0E58                                              i1l5928 0E42  
                                            i1l6576 0AD1                                              i1l6568 0AAB  
                                            i1l6840 0020                                              i1l6832 0006  
                                            i1l6690 13EC                                              i1l6682 13D4  
                                            i1l4898 1DE7                                              i1l6594 1327  
                                            i1l5970 0EA7                                              i1l5962 0E72  
                                            i1l5954 0E6A                                              i1l5946 0E62  
                                            i1l5938 0E5A                                              i1l5890 0DFA  
                                            i1l6578 0AD5                                              i1l6850 0044  
                                            i1l6842 0025                                              i1l6834 000A  
                                            i1l5884 1EDB                                              i1l6692 13F3  
                                            i1l6684 13DB                                              i1l6596 132A  
                                            i1l5980 0EC0                                              i1l5972 0EB1  
                                            i1l5956 0E6C                                              i1l5948 0E64  
                                            i1l5964 0E74                                              i1l5892 0DFE  
                                            i1l6860 0069                                              i1l6852 004D  
                                            i1l6844 0031                                              i1l6836 000F  
                                            i1l6694 13FA                                              i1l6686 13E2  
                                            i1l6678 13C6                                              i1l4998 1FD6  
                                            i1l6598 132F                                              i1l5990 0EDB  
                                            i1l5974 0EB3                                              i1l5982 0EC2  
                                            i1l5966 0E75                                              i1l5958 0E6E  
                                            i1l5894 0DFF                                              i1l5886 0DF4  
                                            i1l6862 006E                                              i1l6854 0052  
                                            i1l6846 0036                                              i1l6838 0014  
                                            i1l6696 13FF                                              i1l6688 13E7  
                                            i1l5992 0EE3                                              i1l5984 0ECD  
                                            i1l5976 0EB7                                              i1l5968 0E8C  
                                            i1l5896 0E04                                              i1l5888 0DF8  
                                            i1l6856 005B                                              i1l6848 003F  
                                            _INLVLA 038C                                              i1l6698 1402  
                                            i1l5994 0EE7                                              i1l5986 0ED2  
                                            i1l5978 0EB8                                              i1l5898 0E09  
                                            i1l6858 0060                                              _INLVLB 038D  
                                            _INLVLC 038E                                              i1l5996 0EEB  
                                            i1l5998 0EF5                                              u500_20 1626  
                                            u500_21 1625                                              u501_20 162D  
                                            u501_21 162C                                              u502_25 162F  
                                            u503_20 163C                                              u503_21 163B  
                                            u504_20 1641                                              u504_21 1640  
                                            u700_25 17AB                                              u701_20 17B7  
                                            u701_21 17B6                                              u630_20 0E54  
                                            u622_20 0DFE                                              u630_21 0E53  
                                            u622_21 0DFD                                              u702_25 17BB  
                                            u631_20 0E8C                                              u623_20 0E04  
                                            u703_20 17C5                                              u631_21 0E8B  
                                            u623_21 0E03                                              u703_21 17C4  
                                            u631_25 0E88                                              u640_20 0ED2  
                                            u632_20 0E96                                              u624_20 0E09  
                                            u480_20 10C7                                              u704_20 17CB  
                                            u640_21 0ED1                                              u632_21 0E94  
                                            u624_21 0E08                                              u480_21 10C6  
                                            u704_21 17CA                                              u641_20 0EE7  
                                            u633_20 0E97                                              u625_20 0E25  
                                            u705_20 17CF                                              u641_21 0EE6  
                                            u625_21 0E24                                              u705_21 17CE  
                                            u481_25 10CC                                              u490_20 117D  
                                            u730_20 133B                                              u642_20 0EEB  
                                            u634_20 0EA7                                              u626_20 0E2C  
                                            u482_20 10D7                                              u706_20 17E3  
                                            u490_21 117C                                              u730_21 133A  
                                            u642_21 0EEA                                              u634_21 0EA6  
                                            u626_21 0E2B                                              u482_21 10D6  
                                            u650_25 0F71                                              u706_25 17DF  
                                            u491_20 1196                                              u731_20 1343  
                                            u651_20 0F7B                                              u627_20 0E32  
                                            u707_20 17F2                                              u491_21 1195  
                                            u731_21 1342                                              u651_21 0F7A  
                                            u627_21 0E31                                              u707_21 17F1  
                                            u483_25 1FFA                                              u643_25 0EEE  
                                            u635_25 0EAA                                              u740_20 13EC  
                                            u492_20 1273                                              u732_20 1351  
                                            u660_20 0FC1                                              u652_20 0F80  
                                            u644_20 0EFB                                              u636_20 0EB7  
                                            u628_20 0E37                                              u708_20 17F6  
                                            u740_21 13EB                                              u492_21 1272  
                                            u732_21 1350                                              u652_21 0F7F  
                                            u644_21 0EFA                                              u636_21 0EB6  
                                            u628_21 0E36                                              u708_21 17F5  
                                            u660_25 0FBD                                              _OSCFRQ 091F  
                                            u741_20 13FA                                              u493_20 127A  
                                            u733_20 1359                                              u661_20 0FD0  
                                            u653_20 0F8B                                              u629_20 0E50  
                                            u725_20 0AB4                                              u741_21 13F9  
                                            u493_21 1279                                              u733_21 1358  
                                            u661_21 0FCF                                              u653_21 0F8A  
                                            u629_21 0E4F                                              u725_21 0AB3  
                                            u645_25 0EFE                                              u637_25 0EBA  
                                            u734_20 1F20                                              u742_20 140D  
                                            u494_20 1291                                              u662_20 0FD7  
                                            u654_20 0F91                                              u646_20 0F1D  
                                            u638_20 0EC9                                              u670_20 02F9  
                                            u726_20 0AC1                                              u734_21 1F1F  
                                            u742_21 140C                                              u494_21 1290  
                                            u662_21 0FD6                                              u654_21 0F90  
                                            u646_21 0F1C                                              u638_21 0EC8  
                                            u670_21 02F8                                              u726_21 0AC0  
                                            u646_23 0F19                                              u726_25 0ABD  
                                            u743_20 1045                                              u495_20 15E8  
                                            u663_20 0FDC                                              u655_20 0F96  
                                            u647_20 0F4B                                              u639_20 0ECD  
                                            u671_20 0314                                              u727_20 0AD1  
                                            u743_21 1044                                              u495_21 15E7  
                                            u663_21 0FDB                                              u655_21 0F95  
                                            u647_21 0F4A                                              u639_21 0ECC  
                                            u671_21 0313                                              u727_21 0AD0  
                                            u496_20 15FE                                              u664_20 0FE9  
                                            u656_20 0F9C                                              u648_20 0F62  
                                            u672_20 031A                                              u728_20 0AD5  
                                            u736_20 1F3C                                              u760_20 0014  
                                            u664_21 0FE8                                              u656_21 0F9B  
                                            u648_21 0F61                                              u672_21 0319  
                                            u728_21 0AD4                                              u736_21 1F3B  
                                            u760_21 0013                                              u496_25 15FA  
                                            u680_25 0453                                       vfpfcnvrt@done 00D2  
                                            u729_20 132F                                              u737_20 1F2D  
                                            u497_20 1611                                              u665_20 0FEE  
                                            u657_20 0FA3                                              u649_20 0F67  
                                            u673_20 031F                                              u761_20 0020  
                                            u729_21 132E                                              u737_21 1F2C  
                                            u497_21 1610                                              u665_21 0FED  
                                            u657_21 0FA2                                              u649_21 0F66  
                                            u673_21 031E                                              u761_21 001F  
                                            u681_25 0466                                              u738_20 13D4  
                                            u498_20 1618                                              u658_20 0FA9  
                                            u690_20 04BE                                              u682_20 0470  
                                            u674_20 0336                                              u770_20 0060  
                                            u762_20 0025                                  ??_I2C2_IsRxBufFull 0070  
                                            u738_21 13D3                                              u498_21 1617  
                                            u658_21 0FA8                                              u682_21 046F  
                                            u674_21 0335                                              u770_21 005F  
                                            u762_21 0024                                              u666_25 0FF5  
                                            u690_25 04BA                                              u739_20 13E2  
                                            u667_20 0FFE                                              u659_20 0FB3  
                                            u691_20 04D9                                              u675_20 033B  
                                            u771_20 0069                                              u763_20 0031  
                                            u739_21 13E1                                              u667_21 0FFD  
                                            u659_21 0FB2                                              u691_21 04D8  
                                            u675_21 033A                                              u771_21 0068  
                                            u763_21 0030                                              u499_25 161A  
                                            u691_25 04D5                                              u683_25 0472  
                                            u692_20 04F1                                              u684_20 0480  
                                            u668_20 02EE                                              u772_20 006E  
                                            u764_20 0036                                              u692_21 04F0  
                                            u684_21 047F                                              u668_21 02ED  
                                            u772_21 006D                                              u764_21 0035  
                                            u692_25 04ED                                              u676_25 03B4  
                                            u693_20 050B                                              u685_20 0485  
                                            u669_20 02F4                                              u765_20 003F  
                                            u693_21 050A                                              u685_21 0484  
                                            u669_21 02F3                                              u765_21 003E  
                                            u677_25 03DF                                              u686_20 0499  
                                            u678_20 0431                                              u766_20 0044  
                                            u758_20 000A                                              u686_21 0498  
                                            u766_21 0043                                              u758_21 0009  
                                            u694_25 050F                                              u678_25 042D  
                                            u687_20 04A0                                              u679_20 0448  
                                            u695_20 1762                                              u767_20 004D  
                                            u759_20 000F                                              u687_21 049F  
                                            u695_21 1761                                              u767_21 004C  
                                            u759_21 000E                                              u679_25 0444  
                                            u688_20 04A6                                              u696_20 1766  
                                            u768_20 0052                                              u688_21 04A5  
                                            u696_21 1765                                              u768_21 0051  
                                            u689_20 04B0                                              u697_20 1786  
                                            u769_20 005B                                              u689_21 04AF  
                                            u697_21 1785                                              u769_21 005A  
                                            _TX1REG 019A                                              u698_25 1795  
                                            u699_20 17A1                                              u699_21 17A0  
                                            _TX1STA 019E                                    __end_of___xxtofl 092D  
                        __end_of_I2C2_RestartEnable 1DF9                                        ?_uartHandler 0070  
                                 _ADC_potentiometer 014E                                        vfprintf@cfmt 00DF  
                                         ??___fladd 00B6                                              ___wmul 1077  
                           _updateLedstripAnimation 0000                                           ??___fldiv 00A8  
                                         ??___awdiv 00A4                                           ??___awmod 00A4  
                                         ??___flmul 00B1                                           ??___fltol 003E  
                                         ??___lwdiv 00A4                                           ??___lwmod 00A4  
                                  __end_of_ledstrip 184C                                    _I2C2_EVENT_ERROR 1E3B  
                                  __end_of_readLine 14C8                                    _I2C2_EVENT_RESET 1E60  
                              read_prec_or_width@ap 00A7                             __end_of_TMR4_Initialize 1FA3  
                                         ?_I2C2_ISR 0070                                    ___awdiv@quotient 00A6  
                                 ?_EUSART_IsRxReady 0070                                     ___awmod@divisor 00A0  
                                 ?_EUSART_IsTxReady 0070                    __end_of_I2C2_ErrorInterruptClear 1DE7  
                                   ___awmod@counter 00A4                                              _printf 1F71  
                                            pad@buf 00B6                                   ?_CLOCK_Initialize 0070  
                                            dtoa@fp 00BC                                              _strlen 1028  
                           __end_of_I2C2_EVENT_IDLE 1E15                             __end_of_I2C2_EVENT_NACK 1E3B  
                                 __end_ofi1___fladd 1000                                  ??_EUSART_IsRxReady 00A0  
                                 __end_ofi1___flmul 051F                             __end_of_I2C2_EVENT_STOP 1E7E  
                                            fputc@c 00A3                                  ??_EUSART_IsTxReady 00A0  
                                            fputs@c 00B1                                              fputs@i 00B2  
                                            fputs@s 00AC                           ?_adcConversionDoneHandler 0070  
                                ??_CLOCK_Initialize 00A0                          str2float@decimal_separator 00C7  
                                  __end_of_printOut 1EB4                         EUSART_ReceiveISR@tempRxHead 0071  
                                  __end_of_vfprintf 1176                               _pwm_fan_LoadDutyValue 1FEB  
                                            utoa@fp 00BC             INT_SetInterruptHandler@InterruptHandler 00A0  
           ADC_SetInterruptHandler@InterruptHandler 00A0                                      _SPI1_IsRxReady 0000  
                                    _SPI1_IsTxReady 0000                                        ___xxtofl@arg 00AA  
                                      ___xxtofl@exp 00A9                                   _SYSTEM_Initialize 1097  
                                      ___xxtofl@val 00A0                             __end_of__initialization 00A5  
                           _I2C2_EVENT_SEND_RD_ADDR 1E6E                                       ??_I2C2_IsAddr 0070  
                                     ??_I2C2_IsData 0070                                       ??_I2C2_IsNack 0070  
                                    _SPI1_ByteWrite 0000                                  ?_SYSTEM_Initialize 0070  
                                        ___fltol@f1 003A                                        ?i1__Umul8_16 0070  
                                     __end_of_UART1 1830                             _I2C2_EVENT_SEND_WR_ADDR 1E59  
                                    __pcstackCOMMON 0070                                        __pidataBANK0 0002  
                                      __pidataBANK2 1ED0                                 ??_SYSTEM_Initialize 00A2  
                                         ?_TMR2_ISR 0070                                           ?_TMR4_ISR 0070  
                                     __end_of_fputc 15DE                                       __end_of_fputs 1100  
                                 ??_SPI1_Initialize 00A0                                       __end_of_setKi 1FC5  
                                     __end_of_setKp 1FD6                                       __end_of_putch 1FB4  
                                        ??_I2C2_ISR 0074                                    ?_TMR2_Initialize 0070  
                           __end_of_TMR6_Initialize 080F                             _ADC_GetConversionResult 1E2F  
                                _spi1_configuration 1908                                _eusartRxStatusBuffer 0120  
                                  _ADC_hoogtesensor 014C                                  _pwm_fan_Initialize 1EF2  
                                  ?_getHoogtesensor 0070                                         setKi@new_ki 00CF  
                             __end_of_I2C2_EVENT_RX 12A3                               __end_of_I2C2_EVENT_TX 11A3  
                                           ??_fputc 00A7                           __end_of_SYSTEM_Initialize 10B9  
                                           ??_fputs 00AF                                             ??_setKi 00D3  
                                           ??_setKp 00D3                                             ??_putch 00A2  
                                        __pbssBANK0 0055                                          __pbssBANK1 00EE  
                                        __pbssBANK2 0120                                          __pbssBANK3 01A0  
                               ?_pwm_fan_Initialize 0070                                __end_of_EUSART_Write 114C  
                                       setKp@new_kp 00CF                                      i1___xxtofl@arg 007A  
                                    i1___xxtofl@exp 0079                                      i1___xxtofl@val 0070  
                               _I2C2_InterruptClear 1DE7                                   __end_of__Umul8_16 1124  
                          _TMR6_PeriodMatchCallback 015C                                          __pmaintext 11A3  
                               __end_of_I2C2_IsAddr 1E6E                                 __end_of_I2C2_IsData 1E2F  
                             _I2C2_InterruptsEnable 1E1D                                             ?___wmul 00A0  
                               __end_of_I2C2_IsNack 1E47                                          ??_TMR2_ISR 0070  
                                        ??_TMR4_ISR 007E                                          __pintentry 0004  
                              _EUSART_AutoBaudQuery 0000                                ??_pwm_fan_Initialize 00A0  
                                           _ADC_ISR 1F17                                    ?_TMR4_Initialize 0070  
                                           ?_printf 00E1                                             ?_strlen 00A0  
                                   _EUSART_IsTxDone 0000                                    ?_I2C2_EVENT_IDLE 0070  
                                  ?_I2C2_EVENT_NACK 0070                                       _eusartRxCount 0068  
                              ?_I2C2_InterruptClear 0070                   _EUSART_RxCompleteCallbackRegister 0000  
                                  ?_I2C2_EVENT_STOP 0070                                           ?___xxtofl 00A0  
                             __end_of_I2C2_NackSend 1E11                               __end_of_I2C2_BusReset 1E01  
                                   _EUSART_ErrorGet 0000                                             _SP1BRGH 019C  
                                           _SP1BRGL 019B                            _I2C2_ErrorInterruptClear 1DE4  
                                         _I2C2_Read 0000                                             _OSCCON1 0919  
                                           _OSCCON3 091B                                 i1__Umul8_16@product 0074  
                                         _I2C2_Host 187D                              ?_pwm_fan_LoadDutyValue 0070  
                                           _OSCTUNE 091E                                             _PWM5DCH 0618  
                                           _PWM5DCL 0617                                             _PWM5CON 0619  
                                           _SSP1ADD 0212                                             _SSP2ADD 021A  
                                           _SLRCONA 030C                                             _SLRCONB 030D  
                                           _SLRCONC 030E                                             _SSP1BUF 0211  
                                           _SSP2BUF 0219                           ??_I2C2_EVENT_SEND_RD_ADDR 0070  
                                   _I2C2_Initialize 1F44                         __end_of_I2C2_RestartDisable 1DF6  
                                         ?_readLine 00E8                           ??_I2C2_EVENT_SEND_WR_ADDR 0071  
                                        _controller 09D8                               EUSART_Read@tempRxTail 00A0  
                              _ADC_InterruptHandler 0164                             _ADC_SetInterruptHandler 1E7E  
                             __end_of_I2C2_StopSend 1DED                                           ?_printOut 00E8  
                                           ___fladd 051F                                             ___fldiv 0C50  
                                           ___awdiv 14C8                                             ___awmod 1374  
                                           ___flmul 00A9                                             ___fltol 15DE  
               adcConversionDoneHandler@new_channel 006F                                      uartHandler@str 00EB  
                                           ___lwdiv 12A3                                             ___lwmod 11FF  
                                         ?_vfprintf 00D9                           ??_ADC_GetConversionResult 0072  
                                        _hoogte_bal 014A                                    ?_TMR6_Initialize 0070  
                                      ??i1___xxtofl 0074                                             __ptext1 16C2  
                                           __ptext2 092D                                             __ptext3 0888  
                                           __ptext4 00A9                                             __ptext5 1100  
                                           __ptext6 0C50                                             __ptext7 051F  
                                           __ptext8 1EBD                                             __ptext9 1FC5  
                             ??_I2C2_InterruptClear 0070                                           _T2CONbits 001F  
                             read_prec_or_width@fmt 00A6                                          ??___xxtofl 00A4  
                                  ___awmod@dividend 00A2                                           _T4CONbits 0417  
                          ??_PIN_MANAGER_Initialize 00A0                             _INT_SetInterruptHandler 1E90  
                                         _T6CONbits 041E                                       ?_I2C2_AckSend 0070  
                                           atoi@neg 00AA                                             clrloop0 1E4E  
                                 _I2C2_EventHandler 1327                                end_of_initialization 00A5  
                          __end_of_I2C2_EVENT_ERROR 1E41                            __end_of_I2C2_EVENT_RESET 1E67  
                             I2C2_DataTransmit@data 0070                        I2C2_EVENT_NACK@retEventState 0070  
                                ?_I2C2_EventHandler 0070                                             fputc@fp 00A5  
                       __end_ofi1_ADC_SelectChannel 1EE6                                          ??_readLine 00EA  
                                           init_ram 1E53                                             fputs@fp 00AD  
                                           initloop 1E54                                  _read_prec_or_width 1524  
                                       _I2C2_IsAddr 1E67                                         _I2C2_IsData 1E2A  
                                       _I2C2_IsNack 1E41                                         _I2C2_IsBusy 0000  
                                 _EUSART_Initialize 1232                                   __end_of_str2float 09D8  
                                __end_ofi1___xxtofl 1800                                 ??_I2C2_EventHandler 0072  
                   _TMR6_DefaultPeriodMatchCallback 0000                                  ?_EUSART_Initialize 0070  
                            ?_I2C2_InterruptsEnable 0070                                     _i2c2_eventTable 1891  
                                 __end_of_vfpfcnvrt 0C50                            ??_I2C2_ErrorEventHandler 0072  
                                   _SPI1_BufferRead 0000                                   _EUSART_ReceiveISR 13C6  
                               ?_read_prec_or_width 00A6                                          ??_printOut 00EA  
                                  vfpfcnvrt@convarg 00D3                                          ??_vfprintf 00DE  
                                ?_EUSART_ReceiveISR 0070                                           _SPI1_Open 0000  
                                           strlen@a 00A2                                             strlen@s 00A0  
                               ??_EUSART_Initialize 00A2                               i1__Umul8_16@word_mpld 0076  
                                _I2C2_RestartEnable 1DF6                                 _SPI1_BufferExchange 0000  
                             _I2C2_StatusFlagsClear 1E01                                         ___fladd@grs 00C1  
                               ??_EUSART_ReceiveISR 0070                             __end_of_I2C2_Initialize 1F53  
               __end_of_ADC_DefaultInterruptHandler 1DE1                         _ADC_DefaultInterruptHandler 1DE0  
                                     ___xxtofl@sign 00A8     TMR4_PeriodMatchCallbackRegister@CallbackHandler 00A0  
                                    ??_I2C2_AckSend 0070                                 ?_I2C2_RestartEnable 0070  
                         __end_of_I2C2_EventHandler 1374                                           i1___fladd 0DF4  
                              ??_read_prec_or_width 00A8                                           i1___flmul 02E4  
                                       ___fldiv@grs 00B4                                         ___fldiv@rem 00AD  
                               _EUSART_Deinitialize 0000                          __end_of_initAdcMultiplexer 1F17  
                                       ___flmul@grs 00B7                           __end_of_EUSART_Initialize 1269  
                     ??_ADC_DefaultInterruptHandler 0070                           ??_ADC_SetInterruptHandler 00A2  
                                       printOut@str 00E8                                     _SPI1_Initialize 1EC6  
                                       ?_controller 0070                           __end_of_EUSART_ReceiveISR 141A  
                              ??_I2C2_RestartEnable 0070             __end_of_TMR2_DefaultPeriodMatchCallback 1DE3  
                 ??_TMR2_DefaultPeriodMatchCallback 0070                    ?_TMR2_DefaultPeriodMatchCallback 0070  
                   _TMR2_DefaultPeriodMatchCallback 1DE2                        __end_of_INTERRUPT_Initialize 1EF2  
                                  _I2C2_DataReceive 1DED                                         vfpfcnvrt@ap 00CC  
                                       vfpfcnvrt@cp 00D7                                         vfpfcnvrt@fp 00C9  
                                    __end_of___wmul 1097                                 str2float@multiplier 00C8  
                                      _EUSART_Write 1124                                      _ADC_Initialize 1012  
                         ??_INT_SetInterruptHandler 00A2                                      __end_of_printf 1F81  
                                    _I2C2_ERROR_ISR 1E15                                      __end_of_strlen 103E  
                               start_initialization 0076                                         __end_of_abs 1012  
                                        ?i1___fladd 003A                                         __end_of_pad 146F  
                                        ?i1___flmul 0020                                       ??_EUSART_Read 00A0  
          __end_of_TMR4_PeriodMatchCallbackRegister 1EA2                  ??_TMR4_PeriodMatchCallbackRegister 00A2  
                 ?_TMR4_PeriodMatchCallbackRegister 00A0                    _TMR4_PeriodMatchCallbackRegister 1E99  
                                       putch@txData 00A2                          I2C2_EVENT_RX@retEventState 0070  
                                 ??_I2C_Master_Init 00A0                             __end_of_i2c2_eventTable 18A3  
                         _EUSART_RxInterruptHandler 01D4                                     str2float@number 00CA  
                                       vfprintf@fmt 00DB                          _EUSART_FramingErrorHandler 0152  
                                          ??___wmul 00A4                              __end_of_ADC_Initialize 1028  
                                         __Umul8_16 1100                                         __pdataBANK0 006E  
                                       __pdataBANK2 0166                          ??_I2C2_ErrorInterruptClear 0070  
                                          ?_ADC_ISR 0070                            _adcConversionDoneHandler 11D0  
                            ?_I2C2_StatusFlagsClear 0070                              __end_of_I2C2_ERROR_ISR 1E19  
                                          ??_printf 00E7                                            ??_strlen 00A2  
                           ??_pwm_fan_LoadDutyValue 0072                                           ___fladd@a 00B2  
                                         ___fladd@b 00AE                                       _SPI1_ByteRead 0000  
                                         ___fldiv@a 00A0                                           ___fldiv@b 00A4  
                                         ___flmul@a 00AD                                           ___flmul@b 00A9  
                                  ?_I2C2_Initialize 0070                                           ___latbits 0002  
                                     __pcstackBANK0 0020                                       __pcstackBANK1 00A0  
                           __end_of_SPI1_Initialize 1ED0                                     i1___xxtofl@sign 0078  
                               __end_of_EUSART_Read 0800                              EUSART_Write@tempTxHead 00A1  
                                      _is_on_target 0066                                           __pnvBANK2 015C  
                                         __pnvBANK3 01D4                          I2C2_EVENT_TX@retEventState 0071  
                                  ___lwdiv@dividend 00A2                              _PIN_MANAGER_Initialize 12DE  
                                         _dtoa$2620 00C1                            _TMR4_PeriodMatchCallback 015E  
                              EUSART_Read@readValue 00A1                                __end_of_I2C2_AckSend 1E09  
                                 _ADC_SelectChannel 1EFE                            i1__Umul8_16@multiplicand 0070  
                                  _I2C2_IsRxBufFull 1E09                                            ?___fladd 00AE  
                                          ?___fldiv 00A0                                            ?___awdiv 00A0  
                                         __ptext100 13C6                                           __ptext101 1DF9  
                                         __ptext102 1DE1                                           __ptext103 1F17  
                                         __ptext104 1DE0                                           __ptext105 11D0  
                                         __ptext106 1EDA                                           __ptext107 1E2F  
                                          ?___awmod 00A0                                            ?___flmul 00A9  
                                          ?___fltol 003A                                          ?__Umul8_16 00A0  
                                          ?___lwdiv 00A0                                            ?___lwmod 00A0  
                                   ?_ADC_Initialize 0070                                        _eusartRxHead 006A  
                                ?_ADC_SelectChannel 0070                                        _eusartTxHead 006D  
                                      _eusartRxTail 0069                                        _eusartTxTail 006C  
                                          _I2C2_ISR 1E19                        ??_INTERRUPT_InterruptManager 007E  
                                   ?_I2C2_ERROR_ISR 0070                        EUSART_TransmitISR@tempTxTail 0070  
                           _eusartTxBufferRemaining 006B                                            _BAUD1CON 019F  
                            _EUSART_TransmitDisable 0000                                 ??_ADC_SelectChannel 00A0  
                                       ??i1___fladd 0042                              _I2C2_ErrorEventHandler 105A  
                                       ??i1___flmul 0028                                    ___lwdiv@quotient 00A4  
                                     ??_setSetpoint 00AF                                    _EUSART_IsRxReady 1EB4  
                              _INTERRUPT_Initialize 1EE6                                           _integraal 0140  
                                  _EUSART_IsTxReady 1EA2                                      _eusartRxBuffer 0130  
                                 ?_I2C2_EVENT_ERROR 0070                                    _CLOCK_Initialize 1E87  
                                 ?_I2C2_EVENT_RESET 0070                                           _dutycycle 0063  
                                    _eusartTxBuffer 0138                                      ___wmul@product 00A4  
                                      ?_I2C2_IsAddr 0070                                        ?_I2C2_IsData 0070  
                           ??_I2C2_InterruptsEnable 00A0                                        ?_I2C2_IsNack 0070  
                                ??_I2C2_EVENT_ERROR 0070                                           clear_ram0 1E4D  
                                ??_I2C2_EVENT_RESET 0070                                            _PIE1bits 0091  
                 _EUSART_TxCompleteCallbackRegister 0000                                            _PIE2bits 0092  
                                 _eusartRxLastError 0158                                       ??_uartHandler 00EB  
                                        _I2C2_Close 1FD6                           __end_of_ADC_SelectChannel 1F0A  
                                          _PIR0bits 0010                                            _PIR1bits 0011  
                                          _PIR2bits 0012                                          _I2C2_Write 0000  
                                          _OSCSTAT1 091C                                          str2float@i 00C9  
                                         _str2float 092D                                            _SSP1CON1 0215  
                                          _SSP1CON3 0217                                            _SSP2CON1 021D  
                                          _SSP2CON2 021E                                            _SSP2CON3 021F  
                                          _TMR2_ISR 1F26                         __end_of_I2C2_InterruptClear 1DEA  
                                          _TMR4_ISR 1F35                                            _SSP1STAT 0214  
                                          _SSP2STAT 021C                                           _vfpfcnvrt 0AE0  
                                    _I2C2_WriteRead 0000                                          _ADCON0bits 009D  
                                 _SPI1_Deinitialize 0000                                   ___wmul@multiplier 00A0  
                          ADC_SelectChannel@channel 00A1                            ?_I2C2_EVENT_SEND_RD_ADDR 0070  
                                     readLine@index 0067                                         _EUSART_Read 07E0  
                                  ?_SPI1_Initialize 0070                            __end_of_I2C2_DataReceive 1DF0  
                             ?_INTERRUPT_Initialize 0070                            ?_I2C2_EVENT_SEND_WR_ADDR 0070  
                                     _I2C2_EVENT_RX 1269                                       _I2C2_EVENT_TX 1176  
                 _EUSART_RxCompleteInterruptHandler 0154                                   ??_TMR2_Initialize 00A0  
                                      ??_controller 004E                                       ??i1__Umul8_16 0072  
                               __end_of_setSetpoint 1EC6                                      str2float@digit 00CE  
                                _initAdcMultiplexer 1F0A                                          vfprintf@ap 00DD  
                                        vfprintf@fp 00D9                            ?_ADC_GetConversionResult 0070  
                                        ?_str2float 00C3                          i1ADC_SelectChannel@channel 0071  
                                 ??_getHoogtesensor 0072                                         ??__Umul8_16 00A2  
                               __end_of_uartHandler 175C                          __end_of_EUSART_TransmitISR 105A  
                               ?_initAdcMultiplexer 0070                                          ?_vfpfcnvrt 00C9  
                                     _I2C2_Callback 0148                          __end_of_I2C2_ReceiveEnable 1DF3  
                                   _I2C_Master_Init 1E21                                            ___xxtofl 0888  
                                __end_of_controller 0AE0                                       _I2C2_NackSend 1E0D  
                                   ___lwdiv@divisor 00A0                                       _I2C2_BusReset 1DFD  
                                _EUSART_AutoBaudSet 0000                                     ___lwdiv@counter 00A6  
                                          __ptext10 1FB4                                            __ptext11 146F  
                                          __ptext20 11FF                                            __ptext12 07E0  
                                          __ptext21 12A3                                            __ptext13 1EB4  
                                          __ptext30 1124                                            __ptext22 1524  
                                          __ptext14 080F                                            __ptext31 1EA2  
                                          __ptext23 1077                                            __ptext15 1EAB  
                                          __ptext40 0800                                            __ptext32 1000  
                                          __ptext24 072B                                            __ptext16 1F71  
                                          __ptext41 1F92                                            __ptext33 1374  
                                          __ptext25 141A                                            __ptext17 114C  
                                          __ptext50 1E87                                            __ptext42 1F81  
                                          __ptext34 14C8                                            __ptext26 1028  
                                          __ptext18 0AE0                                            __ptext51 1012  
                                          __ptext43 1EC6                                            __ptext35 1F0A  
                                          __ptext27 10DC                                            __ptext19 164D  
                                          __ptext60 175C                                            __ptext52 1E7E  
                                          __ptext44 12DE                                            __ptext36 1EFE  
                                          __ptext28 1580                                            __ptext61 02E4  
                                          __ptext53 1E21                                            __ptext45 1EE6  
                                          __ptext37 1E99                                            __ptext29 1FA3  
                                          __ptext70 1327                                            __ptext62 10B9  
                                          __ptext54 1F44                                            __ptext46 1E90  
                                          __ptext38 1097                                            __ptext71 1E41  
                                          __ptext63 0DF4                                            __ptext55 1E1D  
                                          __ptext47 1232                                            __ptext39 1EF2  
                                          __ptext80 1269                                            __ptext72 1E2A  
                                          __ptext64 1FEB                                            __ptext48 1F62  
                                          __ptext81 1E59                                            __ptext73 1E67  
                                          __ptext65 1E47                                            __ptext57 1F35  
                                          __ptext49 1F53                                            __ptext90 1E09  
                                          __ptext82 1E6E                                            __ptext74 1E15  
                                          __ptext66 15DE                                            __ptext58 1DE3  
                                          __ptext91 1DED                                            __ptext83 1E11  
                                          __ptext75 105A                                            __ptext67 1F26  
                                          __ptext59 09D8                                            __ptext92 1E05  
                                          __ptext84 1176                                            __ptext76 1E60  
                                          __ptext68 1DE2                                            __ptext93 1DEA  
                                          __ptext85 1DF6                                            __ptext77 1E76  
                                          __ptext69 1E19                                            __ptext94 1FD6  
                                          __ptext86 1E25                                            __ptext78 1E3B  
                                          __ptext95 1E01                                            __ptext87 1DF3  
                                          __ptext79 1E35                                            __ptext96 1DE7  
                                          __ptext88 1DF0                                            __ptext97 1DE4  
                                          __ptext89 1E0D                                            __ptext98 1DFD  
                                          __ptext99 103E                                        _SSP1CON1bits 0215  
                                    ?_I2C2_EVENT_RX 0070                                      ?_I2C2_EVENT_TX 0070  
                                     _I2C2_ErrorGet 0000                                        _SSP2CON1bits 021D  
                                      _SSP2CON2bits 021E                                ??_initAdcMultiplexer 00A2  
                             _EUSART_TransmitEnable 0000                                            _ledstrip 1830  
                                          _readLine 146F                                   ??_TMR4_Initialize 00A0  
                                 ??_I2C2_EVENT_IDLE 0070                          ??_adcConversionDoneHandler 0072  
                                 ??_I2C2_EVENT_NACK 0070                                         ?_I2C2_Close 0070  
                                 ??_I2C2_EVENT_STOP 0070                                          _RC1STAbits 019D  
                                     _I2C2_StopSend 1DEA                                            _setpoint 016E  
                                          _printOut 1EAB                             ??_I2C2_StatusFlagsClear 0070  
                                          int$flags 007E                                 __end_ofi1__Umul8_16 10DC  
                                          _vfprintf 114C                  __end_of_INTERRUPT_InterruptManager 0074  
                        _INTERRUPT_InterruptManager 0004         __end_of_EUSART_FramingErrorCallbackRegister 1F62  
             ??_EUSART_FramingErrorCallbackRegister 00A2                ?_EUSART_FramingErrorCallbackRegister 00A0  
               _EUSART_FramingErrorCallbackRegister 1F53                                           printf@fmt 00E1  
                   __end_of_I2C2_EVENT_SEND_RD_ADDR 1E76                                        _SSP2STATbits 021C  
                             _I2C2_CallbackRegister 0000                      pwm_fan_LoadDutyValue@dutyValue 0070  
                                        _INTCONbits 000B                       __end_of_pwm_fan_LoadDutyValue 2000  
                                    ?_I2C2_NackSend 0070                     __end_of_I2C2_EVENT_SEND_WR_ADDR 1E60  
                                    ?_I2C2_BusReset 0070                                _INT_InterruptHandler 015A  
                                    __pstringtext10 18C5                                      __pstringtext11 18D4  
                                    __pstringtext12 18E3                                      __pstringtext13 18F0  
                                    __pstringtext14 18FD                                      __pstringtext15 1912  
                                    __pstringtext16 191A                                      __pstringtext17 1921  
                                    __pstringtext18 1928                                      __pstringtext19 0000  
                            ??_INTERRUPT_Initialize 00A2                                        _I2C2_AckSend 1E05  
                          __end_of_I2C2_IsRxBufFull 1E0D                            ?_ADC_SetInterruptHandler 00A0  
                                       _setSetpoint 1EBD                                            intlevel1 0000  
                            i1__Umul8_16@multiplier 0078                                    ___lwmod@dividend 00A2  
                         _EUSART_TxInterruptHandler 0162                             ?_PIN_MANAGER_Initialize 0070  
                                 ??_TMR6_Initialize 00A0          __end_of_EUSART_DefaultFramingErrorCallback 1DE2  
              ??_EUSART_DefaultFramingErrorCallback 0070                 ?_EUSART_DefaultFramingErrorCallback 0070  
                _EUSART_DefaultFramingErrorCallback 1DE1                     __end_of_ADC_GetConversionResult 1E35  
                                  ??_ADC_Initialize 00A2                                         _uartHandler 16C2  
                                    ?_I2C2_StopSend 0070                                    ??_I2C2_ERROR_ISR 0074  
                                       ??_str2float 00C7                                       _mustPrintLogs 006E  
                                          printf@ap 00E7                                    _SPI1_BufferWrite 0000  
                          ?_INT_SetInterruptHandler 00A0                             __end_of_I2C_Master_Init 1E25  
                          __end_of_EUSART_IsRxReady 1EBD                                         ??_vfpfcnvrt 00CE  
                          __end_of_EUSART_IsTxReady 1EAB                                        str2float@str 00C3  
                          __end_of_CLOCK_Initialize 1E90                                       __pstringtext1 1800  
                                     __pstringtext2 1830                                       __pstringtext3 187D  
                                     __pstringtext4 1891                                       __pstringtext5 1908  
                                     __pstringtext6 184C                                       __pstringtext7 1865  
                                     __pstringtext8 18A3                                       __pstringtext9 18B4  
                                        _SPI1_Close 0000                              __Umul8_16@multiplicand 00A0  
                           ?_I2C2_ErrorEventHandler 0070                                          _SSP1DATPPS 0E21  
                                        _SSP2DATPPS 0E1E                                          _SSP2CLKPPS 0E1D  
                                   ___lwmod@divisor 00A0                                     ___lwmod@counter 00A4  
                                   ??_I2C2_EVENT_RX 0070                                     ??_I2C2_EVENT_TX 0071  
                               _I2C2_RestartDisable 1DF3                                          _TX1STAbits 019E  
                                     ___fladd@signs 00BE                                     controller@error 0053  
                         ?_I2C2_ErrorInterruptClear 0070                                  EUSART_Write@txData 00A0  
                    __end_of_PIN_MANAGER_Initialize 1327                                         _PWMTMRSbits 061F  
                                      ___fladd@aexp 00BF                                        ___fladd@bexp 00C0  
                              __Umul8_16@multiplier 00A8                                         i1__Umul8_16 10B9  
                     __end_of_I2C2_InterruptsEnable 1E21                            _TMR2_PeriodMatchCallback 0160  
                        __end_of_spi1_configuration 1912                                   __Umul8_16@product 00A4  
                              ?_I2C2_RestartDisable 0070  
