

Microchip MPLAB XC8 Assembler V3.00 build 20241204225717 
                                                                                               Wed Feb 26 16:27:45 2025

Microchip MPLAB XC8 C Compiler v3.00 (Free license) build 20241204225717 Og1 
     1                           	processor	16F18345
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	idataBANK0,global,class=CODE,space=0,delta=2,noexec
     5                           	psect	idataBANK2,global,class=CODE,space=0,delta=2,noexec
     6                           	psect	stringtext1,global,class=STRCODE,space=0,delta=2,noexec
     7                           	psect	stringtext2,global,class=STRCODE,space=0,delta=2,noexec
     8                           	psect	stringtext3,global,class=STRCODE,space=0,delta=2,noexec
     9                           	psect	nvBANK2,global,class=BANK2,space=1,delta=1,noexec
    10                           	psect	nvBANK3,global,class=BANK3,space=1,delta=1,noexec
    11                           	psect	stringtext4,global,class=STRCODE,space=0,delta=2,noexec
    12                           	psect	stringtext5,global,class=STRCODE,space=0,delta=2,noexec
    13                           	psect	stringtext6,global,class=STRCODE,space=0,delta=2,noexec
    14                           	psect	stringtext7,global,class=STRCODE,space=0,delta=2,noexec
    15                           	psect	stringtext8,global,class=STRCODE,space=0,delta=2,noexec
    16                           	psect	stringtext9,global,class=STRCODE,space=0,delta=2,noexec
    17                           	psect	stringtext10,global,class=STRCODE,space=0,delta=2,noexec
    18                           	psect	stringtext11,global,class=STRCODE,space=0,delta=2,noexec
    19                           	psect	stringtext12,global,class=STRCODE,space=0,delta=2,noexec
    20                           	psect	stringtext13,global,class=STRCODE,space=0,delta=2,noexec
    21                           	psect	stringtext14,global,class=STRCODE,space=0,delta=2,noexec
    22                           	psect	stringtext15,global,class=STRCODE,space=0,delta=2,noexec
    23                           	psect	stringtext16,global,class=STRCODE,space=0,delta=2,noexec
    24                           	psect	cinit,global,class=CODE,space=0,merge=1,delta=2
    25                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,noexec
    26                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,noexec
    27                           	psect	bssBANK2,global,class=BANK2,space=1,delta=1,noexec
    28                           	psect	dataBANK2,global,class=BANK2,space=1,delta=1,noexec
    29                           	psect	bssBANK3,global,class=BANK3,space=1,delta=1,noexec
    30                           	psect	inittext,global,class=CODE,space=0,delta=2
    31                           	psect	clrtext,global,class=CODE,space=0,delta=2
    32                           	psect	cstackBANK2,global,class=BANK2,space=1,delta=1,noexec
    33                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1,noexec
    34                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
    35                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    36                           	psect	maintext,global,class=CODE,space=0,merge=1,split=1,delta=2
    37                           	psect	text1,local,class=CODE,space=0,merge=1,delta=2
    38                           	psect	text2,local,class=CODE,space=0,merge=1,delta=2
    39                           	psect	text3,local,class=CODE,space=0,merge=1,delta=2,group=2
    40                           	psect	text4,local,class=CODE,space=0,merge=1,delta=2
    41                           	psect	text5,local,class=CODE,space=0,merge=1,delta=2
    42                           	psect	text6,local,class=CODE,space=0,merge=1,delta=2
    43                           	psect	text7,local,class=CODE,space=0,merge=1,delta=2
    44                           	psect	text8,local,class=CODE,space=0,merge=1,delta=2
    45                           	psect	text9,local,class=CODE,space=0,merge=1,delta=2
    46                           	psect	text10,local,class=CODE,space=0,merge=1,delta=2,group=3
    47                           	psect	text11,local,class=CODE,space=0,merge=1,delta=2
    48                           	psect	text12,local,class=CODE,space=0,merge=1,delta=2
    49                           	psect	text13,local,class=CODE,space=0,merge=1,delta=2,group=3
    50                           	psect	text14,local,class=CODE,space=0,merge=1,delta=2,group=1
    51                           	psect	text15,local,class=CODE,space=0,merge=1,delta=2,group=1
    52                           	psect	text16,local,class=CODE,space=0,merge=1,delta=2,group=1
    53                           	psect	text17,local,class=CODE,space=0,merge=1,delta=2,group=2
    54                           	psect	text18,local,class=CODE,space=0,merge=1,delta=2,group=2
    55                           	psect	text19,local,class=CODE,space=0,merge=1,delta=2,group=1
    56                           	psect	text20,local,class=CODE,space=0,merge=1,delta=2,group=1
    57                           	psect	text21,local,class=CODE,space=0,merge=1,delta=2,group=1
    58                           	psect	text22,local,class=CODE,space=0,merge=1,delta=2,group=3
    59                           	psect	text23,local,class=CODE,space=0,merge=1,delta=2,group=3
    60                           	psect	text24,local,class=CODE,space=0,merge=1,delta=2,group=3
    61                           	psect	text25,local,class=CODE,space=0,merge=1,delta=2
    62                           	psect	text26,local,class=CODE,space=0,merge=1,delta=2
    63                           	psect	text27,local,class=CODE,space=0,merge=1,delta=2
    64                           	psect	text28,local,class=CODE,space=0,merge=1,delta=2,group=3
    65                           	psect	text29,local,class=CODE,space=0,merge=1,delta=2,group=2
    66                           	psect	text30,local,class=CODE,space=0,merge=1,delta=2,group=2
    67                           	psect	text31,local,class=CODE,space=0,merge=1,delta=2,group=2
    68                           	psect	text32,local,class=CODE,space=0,merge=1,delta=2
    69                           	psect	text33,local,class=CODE,space=0,merge=1,delta=2
    70                           	psect	text34,local,class=CODE,space=0,merge=1,delta=2
    71                           	psect	text35,local,class=CODE,space=0,merge=1,delta=2
    72                           	psect	text36,local,class=CODE,space=0,merge=1,delta=2
    73                           	psect	text37,local,class=CODE,space=0,merge=1,delta=2
    74                           	psect	text38,local,class=CODE,space=0,merge=1,delta=2,group=2
    75                           	psect	text39,local,class=CODE,space=0,merge=1,delta=2
    76                           	psect	text40,local,class=CODE,space=0,merge=1,delta=2
    77                           	psect	text41,local,class=CODE,space=0,merge=1,delta=2
    78                           	psect	text42,local,class=CODE,space=0,merge=1,delta=2
    79                           	psect	text43,local,class=CODE,space=0,merge=1,delta=2
    80                           	psect	text44,local,class=CODE,space=0,merge=1,delta=2
    81                           	psect	text45,local,class=CODE,space=0,merge=1,delta=2
    82                           	psect	text46,local,class=CODE,space=0,merge=1,delta=2
    83                           	psect	text47,local,class=CODE,space=0,merge=1,delta=2
    84                           	psect	text48,local,class=CODE,space=0,merge=1,delta=2
    85                           	psect	text49,local,class=CODE,space=0,merge=1,delta=2
    86                           	psect	text50,local,class=CODE,space=0,merge=1,delta=2
    87                           	psect	text51,local,class=CODE,space=0,merge=1,delta=2,group=2
    88                           	psect	text52,local,class=CODE,space=0,merge=1,delta=2,group=2
    89                           	psect	text53,local,class=CODE,space=0,merge=1,delta=2,group=2
    90                           	psect	text54,local,class=CODE,space=0,merge=1,delta=2,group=2
    91                           	psect	text55,local,class=CODE,space=0,merge=1,delta=2,group=2
    92                           	psect	text56,local,class=CODE,space=0,merge=1,delta=2
    93                           	psect	text57,local,class=CODE,space=0,merge=1,delta=2
    94                           	psect	text58,local,class=CODE,space=0,merge=1,delta=2
    95                           	psect	text59,local,class=CODE,space=0,merge=1,delta=2
    96                           	psect	text60,local,class=CODE,space=0,merge=1,delta=2
    97                           	psect	text61,local,class=CODE,space=0,merge=1,delta=2
    98                           	psect	text62,local,class=CODE,space=0,merge=1,delta=2
    99                           	psect	text63,local,class=CODE,space=0,merge=1,delta=2
   100                           	psect	text64,local,class=CODE,space=0,merge=1,delta=2
   101                           	psect	text65,local,class=CODE,space=0,merge=1,delta=2
   102                           	psect	text66,local,class=CODE,space=0,merge=1,delta=2
   103                           	psect	text67,local,class=CODE,space=0,merge=1,delta=2
   104                           	psect	text68,local,class=CODE,space=0,merge=1,delta=2
   105                           	psect	text69,local,class=CODE,space=0,merge=1,delta=2
   106                           	psect	text70,local,class=CODE,space=0,merge=1,delta=2
   107                           	psect	text71,local,class=CODE,space=0,merge=1,delta=2
   108                           	psect	text72,local,class=CODE,space=0,merge=1,delta=2
   109                           	psect	intentry,global,class=CODE,space=0,delta=2
   110                           	psect	text74,local,class=CODE,space=0,merge=1,delta=2
   111                           	psect	text75,local,class=CODE,space=0,merge=1,delta=2
   112                           	psect	text76,local,class=CODE,space=0,merge=1,delta=2
   113                           	psect	text77,local,class=CODE,space=0,merge=1,delta=2
   114                           	psect	text78,local,class=CODE,space=0,merge=1,delta=2
   115                           	psect	text79,local,class=CODE,space=0,merge=1,delta=2
   116                           	psect	text80,local,class=CODE,space=0,merge=1,delta=2
   117                           	psect	text81,local,class=CODE,space=0,merge=1,delta=2
   118                           	psect	text82,local,class=CODE,space=0,merge=1,delta=2
   119                           	psect	text83,local,class=CODE,space=0,merge=1,delta=2
   120                           	psect	text84,local,class=CODE,space=0,merge=1,delta=2
   121                           	psect	text85,local,class=CODE,space=0,merge=1,delta=2
   122                           	psect	text86,local,class=CODE,space=0,merge=1,delta=2
   123                           	psect	text87,local,class=CODE,space=0,merge=1,delta=2
   124                           	psect	text88,local,class=CODE,space=0,merge=1,delta=2
   125                           	psect	text89,local,class=CODE,space=0,merge=1,delta=2
   126                           	psect	text90,local,class=CODE,space=0,merge=1,delta=2
   127                           	psect	text91,local,class=CODE,space=0,merge=1,delta=2
   128                           	psect	text92,local,class=CODE,space=0,merge=1,delta=2
   129                           	psect	text93,local,class=CODE,space=0,merge=1,delta=2
   130                           	psect	text94,local,class=CODE,space=0,merge=1,delta=2
   131                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
   132                           	dabs	1,0x7E,2
   133     0000                     
   134                           ; Generated 11/01/2024 GMT
   135                           ; 
   136                           ; Copyright © 2024, Microchip Technology Inc. and its subsidiaries ("Microchip")
   137                           ; All rights reserved.
   138                           ; 
   139                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
   140                           ; 
   141                           ; Redistribution and use in source and binary forms, with or without modification, are
   142                           ; permitted provided that the following conditions are met:
   143                           ; 
   144                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
   145                           ;        conditions and the following disclaimer.
   146                           ; 
   147                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
   148                           ;        of conditions and the following disclaimer in the documentation and/or other
   149                           ;        materials provided with the distribution. Publication is not required when
   150                           ;        this file is used in an embedded application.
   151                           ; 
   152                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
   153                           ;        software without specific prior written permission.
   154                           ; 
   155                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
   156                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
   157                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
   158                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
   159                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
   160                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
   161                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
   162                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
   163                           ; 
   164                           ; 
   165                           ; Code-generator required, PIC16F18345 Definitions
   166                           ; 
   167                           ; SFR Addresses
   168     0008                     bsr             equ	8
   169     0005                     fsr0h           equ	5
   170     0004                     fsr0l           equ	4
   171     0007                     fsr1h           equ	7
   172     0006                     fsr1l           equ	6
   173     0000                     indf            equ	0
   174     0000                     indf0           equ	0
   175     0001                     indf1           equ	1
   176     000B                     intcon          equ	11
   177     0002                     pc              equ	2
   178     0002                     pcl             equ	2
   179     000A                     pclath          equ	10
   180     0003                     status          equ	3
   181     0009                     wreg            equ	9
   182     0000                     INDF0           equ	0	;# 
   183     0001                     INDF1           equ	1	;# 
   184     0002                     PCL             equ	2	;# 
   185     0003                     STATUS          equ	3	;# 
   186     0004                     FSR0L           equ	4	;# 
   187     0005                     FSR0H           equ	5	;# 
   188     0006                     FSR1L           equ	6	;# 
   189     0007                     FSR1H           equ	7	;# 
   190     0008                     BSR             equ	8	;# 
   191     0009                     WREG            equ	9	;# 
   192     000A                     PCLATH          equ	10	;# 
   193     000B                     INTCON          equ	11	;# 
   194     000C                     PORTA           equ	12	;# 
   195     000D                     PORTB           equ	13	;# 
   196     000E                     PORTC           equ	14	;# 
   197     0010                     PIR0            equ	16	;# 
   198     0011                     PIR1            equ	17	;# 
   199     0012                     PIR2            equ	18	;# 
   200     0013                     PIR3            equ	19	;# 
   201     0014                     PIR4            equ	20	;# 
   202     0015                     TMR0L           equ	21	;# 
   203     0015                     TMR0            equ	21	;# 
   204     0016                     TMR0H           equ	22	;# 
   205     0016                     PR0             equ	22	;# 
   206     0017                     T0CON0          equ	23	;# 
   207     0018                     T0CON1          equ	24	;# 
   208     0019                     TMR1            equ	25	;# 
   209     0019                     TMR1L           equ	25	;# 
   210     001A                     TMR1H           equ	26	;# 
   211     001B                     T1CON           equ	27	;# 
   212     001C                     T1GCON          equ	28	;# 
   213     001D                     TMR2            equ	29	;# 
   214     001E                     PR2             equ	30	;# 
   215     001F                     T2CON           equ	31	;# 
   216     008C                     TRISA           equ	140	;# 
   217     008D                     TRISB           equ	141	;# 
   218     008E                     TRISC           equ	142	;# 
   219     0090                     PIE0            equ	144	;# 
   220     0091                     PIE1            equ	145	;# 
   221     0092                     PIE2            equ	146	;# 
   222     0093                     PIE3            equ	147	;# 
   223     0094                     PIE4            equ	148	;# 
   224     0097                     WDTCON          equ	151	;# 
   225     009B                     ADRES           equ	155	;# 
   226     009B                     ADRESL          equ	155	;# 
   227     009C                     ADRESH          equ	156	;# 
   228     009D                     ADCON0          equ	157	;# 
   229     009E                     ADCON1          equ	158	;# 
   230     009F                     ADACT           equ	159	;# 
   231     010C                     LATA            equ	268	;# 
   232     010D                     LATB            equ	269	;# 
   233     010E                     LATC            equ	270	;# 
   234     0111                     CM1CON0         equ	273	;# 
   235     0112                     CM1CON1         equ	274	;# 
   236     0113                     CM2CON0         equ	275	;# 
   237     0114                     CM2CON1         equ	276	;# 
   238     0115                     CMOUT           equ	277	;# 
   239     0116                     BORCON          equ	278	;# 
   240     0117                     FVRCON          equ	279	;# 
   241     0118                     DACCON0         equ	280	;# 
   242     0119                     DACCON1         equ	281	;# 
   243     018C                     ANSELA          equ	396	;# 
   244     018D                     ANSELB          equ	397	;# 
   245     018E                     ANSELC          equ	398	;# 
   246     0197                     VREGCON         equ	407	;# 
   247     0199                     RC1REG          equ	409	;# 
   248     0199                     RCREG           equ	409	;# 
   249     0199                     RCREG1          equ	409	;# 
   250     019A                     TX1REG          equ	410	;# 
   251     019A                     TXREG1          equ	410	;# 
   252     019A                     TXREG           equ	410	;# 
   253     019B                     SP1BRG          equ	411	;# 
   254     019B                     SPBRG           equ	411	;# 
   255     019B                     SP1BRGL         equ	411	;# 
   256     019B                     SPBRG1          equ	411	;# 
   257     019B                     SPBRGL          equ	411	;# 
   258     019C                     SP1BRGH         equ	412	;# 
   259     019C                     SPBRGH          equ	412	;# 
   260     019C                     SPBRGH1         equ	412	;# 
   261     019D                     RC1STA          equ	413	;# 
   262     019D                     RCSTA1          equ	413	;# 
   263     019D                     RCSTA           equ	413	;# 
   264     019E                     TX1STA          equ	414	;# 
   265     019E                     TXSTA1          equ	414	;# 
   266     019E                     TXSTA           equ	414	;# 
   267     019F                     BAUD1CON        equ	415	;# 
   268     019F                     BAUDCON1        equ	415	;# 
   269     019F                     BAUDCTL1        equ	415	;# 
   270     019F                     BAUDCON         equ	415	;# 
   271     019F                     BAUDCTL         equ	415	;# 
   272     020C                     WPUA            equ	524	;# 
   273     020D                     WPUB            equ	525	;# 
   274     020E                     WPUC            equ	526	;# 
   275     0211                     SSP1BUF         equ	529	;# 
   276     0211                     SSPBUF          equ	529	;# 
   277     0212                     SSP1ADD         equ	530	;# 
   278     0212                     SSPADD          equ	530	;# 
   279     0213                     SSP1MSK         equ	531	;# 
   280     0213                     SSPMSK          equ	531	;# 
   281     0214                     SSP1STAT        equ	532	;# 
   282     0214                     SSPSTAT         equ	532	;# 
   283     0215                     SSP1CON1        equ	533	;# 
   284     0215                     SSPCON          equ	533	;# 
   285     0215                     SSPCON1         equ	533	;# 
   286     0215                     SSP1CON         equ	533	;# 
   287     0216                     SSP1CON2        equ	534	;# 
   288     0216                     SSPCON2         equ	534	;# 
   289     0217                     SSP1CON3        equ	535	;# 
   290     0217                     SSPCON3         equ	535	;# 
   291     0219                     SSP2BUF         equ	537	;# 
   292     021A                     SSP2ADD         equ	538	;# 
   293     021B                     SSP2MSK         equ	539	;# 
   294     021C                     SSP2STAT        equ	540	;# 
   295     021D                     SSP2CON1        equ	541	;# 
   296     021D                     SSP2CON         equ	541	;# 
   297     021E                     SSP2CON2        equ	542	;# 
   298     021F                     SSP2CON3        equ	543	;# 
   299     028C                     ODCONA          equ	652	;# 
   300     028D                     ODCONB          equ	653	;# 
   301     028E                     ODCONC          equ	654	;# 
   302     0291                     CCPR1           equ	657	;# 
   303     0291                     CCPR1L          equ	657	;# 
   304     0292                     CCPR1H          equ	658	;# 
   305     0293                     CCP1CON         equ	659	;# 
   306     0294                     CCP1CAP         equ	660	;# 
   307     0295                     CCPR2           equ	661	;# 
   308     0295                     CCPR2L          equ	661	;# 
   309     0296                     CCPR2H          equ	662	;# 
   310     0297                     CCP2CON         equ	663	;# 
   311     0298                     CCP2CAP         equ	664	;# 
   312     029F                     CCPTMRS         equ	671	;# 
   313     030C                     SLRCONA         equ	780	;# 
   314     030D                     SLRCONB         equ	781	;# 
   315     030E                     SLRCONC         equ	782	;# 
   316     0311                     CCPR3           equ	785	;# 
   317     0311                     CCPR3L          equ	785	;# 
   318     0312                     CCPR3H          equ	786	;# 
   319     0313                     CCP3CON         equ	787	;# 
   320     0314                     CCP3CAP         equ	788	;# 
   321     0315                     CCPR4           equ	789	;# 
   322     0315                     CCPR4L          equ	789	;# 
   323     0316                     CCPR4H          equ	790	;# 
   324     0317                     CCP4CON         equ	791	;# 
   325     0318                     CCP4CAP         equ	792	;# 
   326     038C                     INLVLA          equ	908	;# 
   327     038D                     INLVLB          equ	909	;# 
   328     038E                     INLVLC          equ	910	;# 
   329     0391                     IOCAP           equ	913	;# 
   330     0392                     IOCAN           equ	914	;# 
   331     0393                     IOCAF           equ	915	;# 
   332     0394                     IOCBP           equ	916	;# 
   333     0395                     IOCBN           equ	917	;# 
   334     0396                     IOCBF           equ	918	;# 
   335     0397                     IOCCP           equ	919	;# 
   336     0398                     IOCCN           equ	920	;# 
   337     0399                     IOCCF           equ	921	;# 
   338     039A                     CLKRCON         equ	922	;# 
   339     039C                     MDCON           equ	924	;# 
   340     039D                     MDSRC           equ	925	;# 
   341     039E                     MDCARH          equ	926	;# 
   342     039F                     MDCARL          equ	927	;# 
   343     0411                     TMR3            equ	1041	;# 
   344     0411                     TMR3L           equ	1041	;# 
   345     0412                     TMR3H           equ	1042	;# 
   346     0413                     T3CON           equ	1043	;# 
   347     0414                     T3GCON          equ	1044	;# 
   348     0415                     TMR4            equ	1045	;# 
   349     0416                     PR4             equ	1046	;# 
   350     0417                     T4CON           equ	1047	;# 
   351     0418                     TMR5            equ	1048	;# 
   352     0418                     TMR5L           equ	1048	;# 
   353     0419                     TMR5H           equ	1049	;# 
   354     041A                     T5CON           equ	1050	;# 
   355     041B                     T5GCON          equ	1051	;# 
   356     041C                     TMR6            equ	1052	;# 
   357     041D                     PR6             equ	1053	;# 
   358     041E                     T6CON           equ	1054	;# 
   359     041F                     CCDCON          equ	1055	;# 
   360     0498                     NCO1ACC         equ	1176	;# 
   361     0498                     NCO1ACCL        equ	1176	;# 
   362     0499                     NCO1ACCH        equ	1177	;# 
   363     049A                     NCO1ACCU        equ	1178	;# 
   364     049B                     NCO1INC         equ	1179	;# 
   365     049B                     NCO1INCL        equ	1179	;# 
   366     049C                     NCO1INCH        equ	1180	;# 
   367     049D                     NCO1INCU        equ	1181	;# 
   368     049E                     NCO1CON         equ	1182	;# 
   369     049F                     NCO1CLK         equ	1183	;# 
   370     0617                     PWM5DCL         equ	1559	;# 
   371     0618                     PWM5DCH         equ	1560	;# 
   372     0619                     PWM5CON         equ	1561	;# 
   373     0619                     PWM5CON0        equ	1561	;# 
   374     061A                     PWM6DCL         equ	1562	;# 
   375     061B                     PWM6DCH         equ	1563	;# 
   376     061C                     PWM6CON         equ	1564	;# 
   377     061C                     PWM6CON0        equ	1564	;# 
   378     061F                     PWMTMRS         equ	1567	;# 
   379     0691                     CWG1CLKCON      equ	1681	;# 
   380     0692                     CWG1DAT         equ	1682	;# 
   381     0693                     CWG1DBR         equ	1683	;# 
   382     0694                     CWG1DBF         equ	1684	;# 
   383     0695                     CWG1CON0        equ	1685	;# 
   384     0696                     CWG1CON1        equ	1686	;# 
   385     0697                     CWG1AS0         equ	1687	;# 
   386     0698                     CWG1AS1         equ	1688	;# 
   387     0699                     CWG1STR         equ	1689	;# 
   388     0711                     CWG2CLKCON      equ	1809	;# 
   389     0712                     CWG2DAT         equ	1810	;# 
   390     0713                     CWG2DBR         equ	1811	;# 
   391     0714                     CWG2DBF         equ	1812	;# 
   392     0715                     CWG2CON0        equ	1813	;# 
   393     0716                     CWG2CON1        equ	1814	;# 
   394     0717                     CWG2AS0         equ	1815	;# 
   395     0718                     CWG2AS1         equ	1816	;# 
   396     0719                     CWG2STR         equ	1817	;# 
   397     0891                     NVMADR          equ	2193	;# 
   398     0891                     EEADR           equ	2193	;# 
   399     0891                     PMADR           equ	2193	;# 
   400     0891                     NVMADRL         equ	2193	;# 
   401     0891                     EEADRL          equ	2193	;# 
   402     0891                     PMADRL          equ	2193	;# 
   403     0892                     NVMADRH         equ	2194	;# 
   404     0892                     EEADRH          equ	2194	;# 
   405     0892                     PMADRH          equ	2194	;# 
   406     0893                     NVMDAT          equ	2195	;# 
   407     0893                     EEDAT           equ	2195	;# 
   408     0893                     PMDAT           equ	2195	;# 
   409     0893                     NVMDATL         equ	2195	;# 
   410     0893                     EEDATL          equ	2195	;# 
   411     0893                     PMDATL          equ	2195	;# 
   412     0894                     NVMDATH         equ	2196	;# 
   413     0894                     EEDATH          equ	2196	;# 
   414     0894                     PMDATH          equ	2196	;# 
   415     0895                     NVMCON1         equ	2197	;# 
   416     0895                     EECON1          equ	2197	;# 
   417     0895                     PMCON1          equ	2197	;# 
   418     0896                     NVMCON2         equ	2198	;# 
   419     0896                     EECON2          equ	2198	;# 
   420     0896                     PMCON2          equ	2198	;# 
   421     089B                     PCON0           equ	2203	;# 
   422     0911                     PMD0            equ	2321	;# 
   423     0912                     PMD1            equ	2322	;# 
   424     0913                     PMD2            equ	2323	;# 
   425     0914                     PMD3            equ	2324	;# 
   426     0915                     PMD4            equ	2325	;# 
   427     0916                     PMD5            equ	2326	;# 
   428     0918                     CPUDOZE         equ	2328	;# 
   429     0919                     OSCCON1         equ	2329	;# 
   430     091A                     OSCCON2         equ	2330	;# 
   431     091B                     OSCCON3         equ	2331	;# 
   432     091C                     OSCSTAT1        equ	2332	;# 
   433     091D                     OSCEN           equ	2333	;# 
   434     091E                     OSCTUNE         equ	2334	;# 
   435     091F                     OSCFRQ          equ	2335	;# 
   436     0E0F                     PPSLOCK         equ	3599	;# 
   437     0E10                     INTPPS          equ	3600	;# 
   438     0E11                     T0CKIPPS        equ	3601	;# 
   439     0E12                     T1CKIPPS        equ	3602	;# 
   440     0E13                     T1GPPS          equ	3603	;# 
   441     0E14                     CCP1PPS         equ	3604	;# 
   442     0E15                     CCP2PPS         equ	3605	;# 
   443     0E16                     CCP3PPS         equ	3606	;# 
   444     0E17                     CCP4PPS         equ	3607	;# 
   445     0E18                     CWG1PPS         equ	3608	;# 
   446     0E19                     CWG2PPS         equ	3609	;# 
   447     0E1A                     MDCIN1PPS       equ	3610	;# 
   448     0E1B                     MDCIN2PPS       equ	3611	;# 
   449     0E1C                     MDMINPPS        equ	3612	;# 
   450     0E1D                     SSP2CLKPPS      equ	3613	;# 
   451     0E1E                     SSP2DATPPS      equ	3614	;# 
   452     0E1F                     SSP2SSPPS       equ	3615	;# 
   453     0E20                     SSP1CLKPPS      equ	3616	;# 
   454     0E21                     SSP1DATPPS      equ	3617	;# 
   455     0E22                     SSP1SSPPS       equ	3618	;# 
   456     0E24                     RXPPS           equ	3620	;# 
   457     0E25                     TXPPS           equ	3621	;# 
   458     0E28                     CLCIN0PPS       equ	3624	;# 
   459     0E29                     CLCIN1PPS       equ	3625	;# 
   460     0E2A                     CLCIN2PPS       equ	3626	;# 
   461     0E2B                     CLCIN3PPS       equ	3627	;# 
   462     0E2C                     T3CKIPPS        equ	3628	;# 
   463     0E2D                     T3GPPS          equ	3629	;# 
   464     0E2E                     T5CKIPPS        equ	3630	;# 
   465     0E2F                     T5GPPS          equ	3631	;# 
   466     0E90                     RA0PPS          equ	3728	;# 
   467     0E91                     RA1PPS          equ	3729	;# 
   468     0E92                     RA2PPS          equ	3730	;# 
   469     0E94                     RA4PPS          equ	3732	;# 
   470     0E95                     RA5PPS          equ	3733	;# 
   471     0E9C                     RB4PPS          equ	3740	;# 
   472     0E9D                     RB5PPS          equ	3741	;# 
   473     0E9E                     RB6PPS          equ	3742	;# 
   474     0E9F                     RB7PPS          equ	3743	;# 
   475     0EA0                     RC0PPS          equ	3744	;# 
   476     0EA1                     RC1PPS          equ	3745	;# 
   477     0EA2                     RC2PPS          equ	3746	;# 
   478     0EA3                     RC3PPS          equ	3747	;# 
   479     0EA4                     RC4PPS          equ	3748	;# 
   480     0EA5                     RC5PPS          equ	3749	;# 
   481     0EA6                     RC6PPS          equ	3750	;# 
   482     0EA7                     RC7PPS          equ	3751	;# 
   483     0F0F                     CLCDATA         equ	3855	;# 
   484     0F10                     CLC1CON         equ	3856	;# 
   485     0F11                     CLC1POL         equ	3857	;# 
   486     0F12                     CLC1SEL0        equ	3858	;# 
   487     0F13                     CLC1SEL1        equ	3859	;# 
   488     0F14                     CLC1SEL2        equ	3860	;# 
   489     0F15                     CLC1SEL3        equ	3861	;# 
   490     0F16                     CLC1GLS0        equ	3862	;# 
   491     0F17                     CLC1GLS1        equ	3863	;# 
   492     0F18                     CLC1GLS2        equ	3864	;# 
   493     0F19                     CLC1GLS3        equ	3865	;# 
   494     0F1A                     CLC2CON         equ	3866	;# 
   495     0F1B                     CLC2POL         equ	3867	;# 
   496     0F1C                     CLC2SEL0        equ	3868	;# 
   497     0F1D                     CLC2SEL1        equ	3869	;# 
   498     0F1E                     CLC2SEL2        equ	3870	;# 
   499     0F1F                     CLC2SEL3        equ	3871	;# 
   500     0F20                     CLC2GLS0        equ	3872	;# 
   501     0F21                     CLC2GLS1        equ	3873	;# 
   502     0F22                     CLC2GLS2        equ	3874	;# 
   503     0F23                     CLC2GLS3        equ	3875	;# 
   504     0F24                     CLC3CON         equ	3876	;# 
   505     0F25                     CLC3POL         equ	3877	;# 
   506     0F26                     CLC3SEL0        equ	3878	;# 
   507     0F27                     CLC3SEL1        equ	3879	;# 
   508     0F28                     CLC3SEL2        equ	3880	;# 
   509     0F29                     CLC3SEL3        equ	3881	;# 
   510     0F2A                     CLC3GLS0        equ	3882	;# 
   511     0F2B                     CLC3GLS1        equ	3883	;# 
   512     0F2C                     CLC3GLS2        equ	3884	;# 
   513     0F2D                     CLC3GLS3        equ	3885	;# 
   514     0F2E                     CLC4CON         equ	3886	;# 
   515     0F2F                     CLC4POL         equ	3887	;# 
   516     0F30                     CLC4SEL0        equ	3888	;# 
   517     0F31                     CLC4SEL1        equ	3889	;# 
   518     0F32                     CLC4SEL2        equ	3890	;# 
   519     0F33                     CLC4SEL3        equ	3891	;# 
   520     0F34                     CLC4GLS0        equ	3892	;# 
   521     0F35                     CLC4GLS1        equ	3893	;# 
   522     0F36                     CLC4GLS2        equ	3894	;# 
   523     0F37                     CLC4GLS3        equ	3895	;# 
   524     0FE4                     STATUS_SHAD     equ	4068	;# 
   525     0FE5                     WREG_SHAD       equ	4069	;# 
   526     0FE6                     BSR_SHAD        equ	4070	;# 
   527     0FE7                     PCLATH_SHAD     equ	4071	;# 
   528     0FE8                     FSR0L_SHAD      equ	4072	;# 
   529     0FE9                     FSR0H_SHAD      equ	4073	;# 
   530     0FEA                     FSR1L_SHAD      equ	4074	;# 
   531     0FEB                     FSR1H_SHAD      equ	4075	;# 
   532     0FED                     STKPTR          equ	4077	;# 
   533     0FEE                     TOSL            equ	4078	;# 
   534     0FEF                     TOSH            equ	4079	;# 
   535     0000                     INDF0           equ	0	;# 
   536     0001                     INDF1           equ	1	;# 
   537     0002                     PCL             equ	2	;# 
   538     0003                     STATUS          equ	3	;# 
   539     0004                     FSR0L           equ	4	;# 
   540     0005                     FSR0H           equ	5	;# 
   541     0006                     FSR1L           equ	6	;# 
   542     0007                     FSR1H           equ	7	;# 
   543     0008                     BSR             equ	8	;# 
   544     0009                     WREG            equ	9	;# 
   545     000A                     PCLATH          equ	10	;# 
   546     000B                     INTCON          equ	11	;# 
   547     000C                     PORTA           equ	12	;# 
   548     000D                     PORTB           equ	13	;# 
   549     000E                     PORTC           equ	14	;# 
   550     0010                     PIR0            equ	16	;# 
   551     0011                     PIR1            equ	17	;# 
   552     0012                     PIR2            equ	18	;# 
   553     0013                     PIR3            equ	19	;# 
   554     0014                     PIR4            equ	20	;# 
   555     0015                     TMR0L           equ	21	;# 
   556     0015                     TMR0            equ	21	;# 
   557     0016                     TMR0H           equ	22	;# 
   558     0016                     PR0             equ	22	;# 
   559     0017                     T0CON0          equ	23	;# 
   560     0018                     T0CON1          equ	24	;# 
   561     0019                     TMR1            equ	25	;# 
   562     0019                     TMR1L           equ	25	;# 
   563     001A                     TMR1H           equ	26	;# 
   564     001B                     T1CON           equ	27	;# 
   565     001C                     T1GCON          equ	28	;# 
   566     001D                     TMR2            equ	29	;# 
   567     001E                     PR2             equ	30	;# 
   568     001F                     T2CON           equ	31	;# 
   569     008C                     TRISA           equ	140	;# 
   570     008D                     TRISB           equ	141	;# 
   571     008E                     TRISC           equ	142	;# 
   572     0090                     PIE0            equ	144	;# 
   573     0091                     PIE1            equ	145	;# 
   574     0092                     PIE2            equ	146	;# 
   575     0093                     PIE3            equ	147	;# 
   576     0094                     PIE4            equ	148	;# 
   577     0097                     WDTCON          equ	151	;# 
   578     009B                     ADRES           equ	155	;# 
   579     009B                     ADRESL          equ	155	;# 
   580     009C                     ADRESH          equ	156	;# 
   581     009D                     ADCON0          equ	157	;# 
   582     009E                     ADCON1          equ	158	;# 
   583     009F                     ADACT           equ	159	;# 
   584     010C                     LATA            equ	268	;# 
   585     010D                     LATB            equ	269	;# 
   586     010E                     LATC            equ	270	;# 
   587     0111                     CM1CON0         equ	273	;# 
   588     0112                     CM1CON1         equ	274	;# 
   589     0113                     CM2CON0         equ	275	;# 
   590     0114                     CM2CON1         equ	276	;# 
   591     0115                     CMOUT           equ	277	;# 
   592     0116                     BORCON          equ	278	;# 
   593     0117                     FVRCON          equ	279	;# 
   594     0118                     DACCON0         equ	280	;# 
   595     0119                     DACCON1         equ	281	;# 
   596     018C                     ANSELA          equ	396	;# 
   597     018D                     ANSELB          equ	397	;# 
   598     018E                     ANSELC          equ	398	;# 
   599     0197                     VREGCON         equ	407	;# 
   600     0199                     RC1REG          equ	409	;# 
   601     0199                     RCREG           equ	409	;# 
   602     0199                     RCREG1          equ	409	;# 
   603     019A                     TX1REG          equ	410	;# 
   604     019A                     TXREG1          equ	410	;# 
   605     019A                     TXREG           equ	410	;# 
   606     019B                     SP1BRG          equ	411	;# 
   607     019B                     SPBRG           equ	411	;# 
   608     019B                     SP1BRGL         equ	411	;# 
   609     019B                     SPBRG1          equ	411	;# 
   610     019B                     SPBRGL          equ	411	;# 
   611     019C                     SP1BRGH         equ	412	;# 
   612     019C                     SPBRGH          equ	412	;# 
   613     019C                     SPBRGH1         equ	412	;# 
   614     019D                     RC1STA          equ	413	;# 
   615     019D                     RCSTA1          equ	413	;# 
   616     019D                     RCSTA           equ	413	;# 
   617     019E                     TX1STA          equ	414	;# 
   618     019E                     TXSTA1          equ	414	;# 
   619     019E                     TXSTA           equ	414	;# 
   620     019F                     BAUD1CON        equ	415	;# 
   621     019F                     BAUDCON1        equ	415	;# 
   622     019F                     BAUDCTL1        equ	415	;# 
   623     019F                     BAUDCON         equ	415	;# 
   624     019F                     BAUDCTL         equ	415	;# 
   625     020C                     WPUA            equ	524	;# 
   626     020D                     WPUB            equ	525	;# 
   627     020E                     WPUC            equ	526	;# 
   628     0211                     SSP1BUF         equ	529	;# 
   629     0211                     SSPBUF          equ	529	;# 
   630     0212                     SSP1ADD         equ	530	;# 
   631     0212                     SSPADD          equ	530	;# 
   632     0213                     SSP1MSK         equ	531	;# 
   633     0213                     SSPMSK          equ	531	;# 
   634     0214                     SSP1STAT        equ	532	;# 
   635     0214                     SSPSTAT         equ	532	;# 
   636     0215                     SSP1CON1        equ	533	;# 
   637     0215                     SSPCON          equ	533	;# 
   638     0215                     SSPCON1         equ	533	;# 
   639     0215                     SSP1CON         equ	533	;# 
   640     0216                     SSP1CON2        equ	534	;# 
   641     0216                     SSPCON2         equ	534	;# 
   642     0217                     SSP1CON3        equ	535	;# 
   643     0217                     SSPCON3         equ	535	;# 
   644     0219                     SSP2BUF         equ	537	;# 
   645     021A                     SSP2ADD         equ	538	;# 
   646     021B                     SSP2MSK         equ	539	;# 
   647     021C                     SSP2STAT        equ	540	;# 
   648     021D                     SSP2CON1        equ	541	;# 
   649     021D                     SSP2CON         equ	541	;# 
   650     021E                     SSP2CON2        equ	542	;# 
   651     021F                     SSP2CON3        equ	543	;# 
   652     028C                     ODCONA          equ	652	;# 
   653     028D                     ODCONB          equ	653	;# 
   654     028E                     ODCONC          equ	654	;# 
   655     0291                     CCPR1           equ	657	;# 
   656     0291                     CCPR1L          equ	657	;# 
   657     0292                     CCPR1H          equ	658	;# 
   658     0293                     CCP1CON         equ	659	;# 
   659     0294                     CCP1CAP         equ	660	;# 
   660     0295                     CCPR2           equ	661	;# 
   661     0295                     CCPR2L          equ	661	;# 
   662     0296                     CCPR2H          equ	662	;# 
   663     0297                     CCP2CON         equ	663	;# 
   664     0298                     CCP2CAP         equ	664	;# 
   665     029F                     CCPTMRS         equ	671	;# 
   666     030C                     SLRCONA         equ	780	;# 
   667     030D                     SLRCONB         equ	781	;# 
   668     030E                     SLRCONC         equ	782	;# 
   669     0311                     CCPR3           equ	785	;# 
   670     0311                     CCPR3L          equ	785	;# 
   671     0312                     CCPR3H          equ	786	;# 
   672     0313                     CCP3CON         equ	787	;# 
   673     0314                     CCP3CAP         equ	788	;# 
   674     0315                     CCPR4           equ	789	;# 
   675     0315                     CCPR4L          equ	789	;# 
   676     0316                     CCPR4H          equ	790	;# 
   677     0317                     CCP4CON         equ	791	;# 
   678     0318                     CCP4CAP         equ	792	;# 
   679     038C                     INLVLA          equ	908	;# 
   680     038D                     INLVLB          equ	909	;# 
   681     038E                     INLVLC          equ	910	;# 
   682     0391                     IOCAP           equ	913	;# 
   683     0392                     IOCAN           equ	914	;# 
   684     0393                     IOCAF           equ	915	;# 
   685     0394                     IOCBP           equ	916	;# 
   686     0395                     IOCBN           equ	917	;# 
   687     0396                     IOCBF           equ	918	;# 
   688     0397                     IOCCP           equ	919	;# 
   689     0398                     IOCCN           equ	920	;# 
   690     0399                     IOCCF           equ	921	;# 
   691     039A                     CLKRCON         equ	922	;# 
   692     039C                     MDCON           equ	924	;# 
   693     039D                     MDSRC           equ	925	;# 
   694     039E                     MDCARH          equ	926	;# 
   695     039F                     MDCARL          equ	927	;# 
   696     0411                     TMR3            equ	1041	;# 
   697     0411                     TMR3L           equ	1041	;# 
   698     0412                     TMR3H           equ	1042	;# 
   699     0413                     T3CON           equ	1043	;# 
   700     0414                     T3GCON          equ	1044	;# 
   701     0415                     TMR4            equ	1045	;# 
   702     0416                     PR4             equ	1046	;# 
   703     0417                     T4CON           equ	1047	;# 
   704     0418                     TMR5            equ	1048	;# 
   705     0418                     TMR5L           equ	1048	;# 
   706     0419                     TMR5H           equ	1049	;# 
   707     041A                     T5CON           equ	1050	;# 
   708     041B                     T5GCON          equ	1051	;# 
   709     041C                     TMR6            equ	1052	;# 
   710     041D                     PR6             equ	1053	;# 
   711     041E                     T6CON           equ	1054	;# 
   712     041F                     CCDCON          equ	1055	;# 
   713     0498                     NCO1ACC         equ	1176	;# 
   714     0498                     NCO1ACCL        equ	1176	;# 
   715     0499                     NCO1ACCH        equ	1177	;# 
   716     049A                     NCO1ACCU        equ	1178	;# 
   717     049B                     NCO1INC         equ	1179	;# 
   718     049B                     NCO1INCL        equ	1179	;# 
   719     049C                     NCO1INCH        equ	1180	;# 
   720     049D                     NCO1INCU        equ	1181	;# 
   721     049E                     NCO1CON         equ	1182	;# 
   722     049F                     NCO1CLK         equ	1183	;# 
   723     0617                     PWM5DCL         equ	1559	;# 
   724     0618                     PWM5DCH         equ	1560	;# 
   725     0619                     PWM5CON         equ	1561	;# 
   726     0619                     PWM5CON0        equ	1561	;# 
   727     061A                     PWM6DCL         equ	1562	;# 
   728     061B                     PWM6DCH         equ	1563	;# 
   729     061C                     PWM6CON         equ	1564	;# 
   730     061C                     PWM6CON0        equ	1564	;# 
   731     061F                     PWMTMRS         equ	1567	;# 
   732     0691                     CWG1CLKCON      equ	1681	;# 
   733     0692                     CWG1DAT         equ	1682	;# 
   734     0693                     CWG1DBR         equ	1683	;# 
   735     0694                     CWG1DBF         equ	1684	;# 
   736     0695                     CWG1CON0        equ	1685	;# 
   737     0696                     CWG1CON1        equ	1686	;# 
   738     0697                     CWG1AS0         equ	1687	;# 
   739     0698                     CWG1AS1         equ	1688	;# 
   740     0699                     CWG1STR         equ	1689	;# 
   741     0711                     CWG2CLKCON      equ	1809	;# 
   742     0712                     CWG2DAT         equ	1810	;# 
   743     0713                     CWG2DBR         equ	1811	;# 
   744     0714                     CWG2DBF         equ	1812	;# 
   745     0715                     CWG2CON0        equ	1813	;# 
   746     0716                     CWG2CON1        equ	1814	;# 
   747     0717                     CWG2AS0         equ	1815	;# 
   748     0718                     CWG2AS1         equ	1816	;# 
   749     0719                     CWG2STR         equ	1817	;# 
   750     0891                     NVMADR          equ	2193	;# 
   751     0891                     EEADR           equ	2193	;# 
   752     0891                     PMADR           equ	2193	;# 
   753     0891                     NVMADRL         equ	2193	;# 
   754     0891                     EEADRL          equ	2193	;# 
   755     0891                     PMADRL          equ	2193	;# 
   756     0892                     NVMADRH         equ	2194	;# 
   757     0892                     EEADRH          equ	2194	;# 
   758     0892                     PMADRH          equ	2194	;# 
   759     0893                     NVMDAT          equ	2195	;# 
   760     0893                     EEDAT           equ	2195	;# 
   761     0893                     PMDAT           equ	2195	;# 
   762     0893                     NVMDATL         equ	2195	;# 
   763     0893                     EEDATL          equ	2195	;# 
   764     0893                     PMDATL          equ	2195	;# 
   765     0894                     NVMDATH         equ	2196	;# 
   766     0894                     EEDATH          equ	2196	;# 
   767     0894                     PMDATH          equ	2196	;# 
   768     0895                     NVMCON1         equ	2197	;# 
   769     0895                     EECON1          equ	2197	;# 
   770     0895                     PMCON1          equ	2197	;# 
   771     0896                     NVMCON2         equ	2198	;# 
   772     0896                     EECON2          equ	2198	;# 
   773     0896                     PMCON2          equ	2198	;# 
   774     089B                     PCON0           equ	2203	;# 
   775     0911                     PMD0            equ	2321	;# 
   776     0912                     PMD1            equ	2322	;# 
   777     0913                     PMD2            equ	2323	;# 
   778     0914                     PMD3            equ	2324	;# 
   779     0915                     PMD4            equ	2325	;# 
   780     0916                     PMD5            equ	2326	;# 
   781     0918                     CPUDOZE         equ	2328	;# 
   782     0919                     OSCCON1         equ	2329	;# 
   783     091A                     OSCCON2         equ	2330	;# 
   784     091B                     OSCCON3         equ	2331	;# 
   785     091C                     OSCSTAT1        equ	2332	;# 
   786     091D                     OSCEN           equ	2333	;# 
   787     091E                     OSCTUNE         equ	2334	;# 
   788     091F                     OSCFRQ          equ	2335	;# 
   789     0E0F                     PPSLOCK         equ	3599	;# 
   790     0E10                     INTPPS          equ	3600	;# 
   791     0E11                     T0CKIPPS        equ	3601	;# 
   792     0E12                     T1CKIPPS        equ	3602	;# 
   793     0E13                     T1GPPS          equ	3603	;# 
   794     0E14                     CCP1PPS         equ	3604	;# 
   795     0E15                     CCP2PPS         equ	3605	;# 
   796     0E16                     CCP3PPS         equ	3606	;# 
   797     0E17                     CCP4PPS         equ	3607	;# 
   798     0E18                     CWG1PPS         equ	3608	;# 
   799     0E19                     CWG2PPS         equ	3609	;# 
   800     0E1A                     MDCIN1PPS       equ	3610	;# 
   801     0E1B                     MDCIN2PPS       equ	3611	;# 
   802     0E1C                     MDMINPPS        equ	3612	;# 
   803     0E1D                     SSP2CLKPPS      equ	3613	;# 
   804     0E1E                     SSP2DATPPS      equ	3614	;# 
   805     0E1F                     SSP2SSPPS       equ	3615	;# 
   806     0E20                     SSP1CLKPPS      equ	3616	;# 
   807     0E21                     SSP1DATPPS      equ	3617	;# 
   808     0E22                     SSP1SSPPS       equ	3618	;# 
   809     0E24                     RXPPS           equ	3620	;# 
   810     0E25                     TXPPS           equ	3621	;# 
   811     0E28                     CLCIN0PPS       equ	3624	;# 
   812     0E29                     CLCIN1PPS       equ	3625	;# 
   813     0E2A                     CLCIN2PPS       equ	3626	;# 
   814     0E2B                     CLCIN3PPS       equ	3627	;# 
   815     0E2C                     T3CKIPPS        equ	3628	;# 
   816     0E2D                     T3GPPS          equ	3629	;# 
   817     0E2E                     T5CKIPPS        equ	3630	;# 
   818     0E2F                     T5GPPS          equ	3631	;# 
   819     0E90                     RA0PPS          equ	3728	;# 
   820     0E91                     RA1PPS          equ	3729	;# 
   821     0E92                     RA2PPS          equ	3730	;# 
   822     0E94                     RA4PPS          equ	3732	;# 
   823     0E95                     RA5PPS          equ	3733	;# 
   824     0E9C                     RB4PPS          equ	3740	;# 
   825     0E9D                     RB5PPS          equ	3741	;# 
   826     0E9E                     RB6PPS          equ	3742	;# 
   827     0E9F                     RB7PPS          equ	3743	;# 
   828     0EA0                     RC0PPS          equ	3744	;# 
   829     0EA1                     RC1PPS          equ	3745	;# 
   830     0EA2                     RC2PPS          equ	3746	;# 
   831     0EA3                     RC3PPS          equ	3747	;# 
   832     0EA4                     RC4PPS          equ	3748	;# 
   833     0EA5                     RC5PPS          equ	3749	;# 
   834     0EA6                     RC6PPS          equ	3750	;# 
   835     0EA7                     RC7PPS          equ	3751	;# 
   836     0F0F                     CLCDATA         equ	3855	;# 
   837     0F10                     CLC1CON         equ	3856	;# 
   838     0F11                     CLC1POL         equ	3857	;# 
   839     0F12                     CLC1SEL0        equ	3858	;# 
   840     0F13                     CLC1SEL1        equ	3859	;# 
   841     0F14                     CLC1SEL2        equ	3860	;# 
   842     0F15                     CLC1SEL3        equ	3861	;# 
   843     0F16                     CLC1GLS0        equ	3862	;# 
   844     0F17                     CLC1GLS1        equ	3863	;# 
   845     0F18                     CLC1GLS2        equ	3864	;# 
   846     0F19                     CLC1GLS3        equ	3865	;# 
   847     0F1A                     CLC2CON         equ	3866	;# 
   848     0F1B                     CLC2POL         equ	3867	;# 
   849     0F1C                     CLC2SEL0        equ	3868	;# 
   850     0F1D                     CLC2SEL1        equ	3869	;# 
   851     0F1E                     CLC2SEL2        equ	3870	;# 
   852     0F1F                     CLC2SEL3        equ	3871	;# 
   853     0F20                     CLC2GLS0        equ	3872	;# 
   854     0F21                     CLC2GLS1        equ	3873	;# 
   855     0F22                     CLC2GLS2        equ	3874	;# 
   856     0F23                     CLC2GLS3        equ	3875	;# 
   857     0F24                     CLC3CON         equ	3876	;# 
   858     0F25                     CLC3POL         equ	3877	;# 
   859     0F26                     CLC3SEL0        equ	3878	;# 
   860     0F27                     CLC3SEL1        equ	3879	;# 
   861     0F28                     CLC3SEL2        equ	3880	;# 
   862     0F29                     CLC3SEL3        equ	3881	;# 
   863     0F2A                     CLC3GLS0        equ	3882	;# 
   864     0F2B                     CLC3GLS1        equ	3883	;# 
   865     0F2C                     CLC3GLS2        equ	3884	;# 
   866     0F2D                     CLC3GLS3        equ	3885	;# 
   867     0F2E                     CLC4CON         equ	3886	;# 
   868     0F2F                     CLC4POL         equ	3887	;# 
   869     0F30                     CLC4SEL0        equ	3888	;# 
   870     0F31                     CLC4SEL1        equ	3889	;# 
   871     0F32                     CLC4SEL2        equ	3890	;# 
   872     0F33                     CLC4SEL3        equ	3891	;# 
   873     0F34                     CLC4GLS0        equ	3892	;# 
   874     0F35                     CLC4GLS1        equ	3893	;# 
   875     0F36                     CLC4GLS2        equ	3894	;# 
   876     0F37                     CLC4GLS3        equ	3895	;# 
   877     0FE4                     STATUS_SHAD     equ	4068	;# 
   878     0FE5                     WREG_SHAD       equ	4069	;# 
   879     0FE6                     BSR_SHAD        equ	4070	;# 
   880     0FE7                     PCLATH_SHAD     equ	4071	;# 
   881     0FE8                     FSR0L_SHAD      equ	4072	;# 
   882     0FE9                     FSR0H_SHAD      equ	4073	;# 
   883     0FEA                     FSR1L_SHAD      equ	4074	;# 
   884     0FEB                     FSR1H_SHAD      equ	4075	;# 
   885     0FED                     STKPTR          equ	4077	;# 
   886     0FEE                     TOSL            equ	4078	;# 
   887     0FEF                     TOSH            equ	4079	;# 
   888     0000                     INDF0           equ	0	;# 
   889     0001                     INDF1           equ	1	;# 
   890     0002                     PCL             equ	2	;# 
   891     0003                     STATUS          equ	3	;# 
   892     0004                     FSR0L           equ	4	;# 
   893     0005                     FSR0H           equ	5	;# 
   894     0006                     FSR1L           equ	6	;# 
   895     0007                     FSR1H           equ	7	;# 
   896     0008                     BSR             equ	8	;# 
   897     0009                     WREG            equ	9	;# 
   898     000A                     PCLATH          equ	10	;# 
   899     000B                     INTCON          equ	11	;# 
   900     000C                     PORTA           equ	12	;# 
   901     000D                     PORTB           equ	13	;# 
   902     000E                     PORTC           equ	14	;# 
   903     0010                     PIR0            equ	16	;# 
   904     0011                     PIR1            equ	17	;# 
   905     0012                     PIR2            equ	18	;# 
   906     0013                     PIR3            equ	19	;# 
   907     0014                     PIR4            equ	20	;# 
   908     0015                     TMR0L           equ	21	;# 
   909     0015                     TMR0            equ	21	;# 
   910     0016                     TMR0H           equ	22	;# 
   911     0016                     PR0             equ	22	;# 
   912     0017                     T0CON0          equ	23	;# 
   913     0018                     T0CON1          equ	24	;# 
   914     0019                     TMR1            equ	25	;# 
   915     0019                     TMR1L           equ	25	;# 
   916     001A                     TMR1H           equ	26	;# 
   917     001B                     T1CON           equ	27	;# 
   918     001C                     T1GCON          equ	28	;# 
   919     001D                     TMR2            equ	29	;# 
   920     001E                     PR2             equ	30	;# 
   921     001F                     T2CON           equ	31	;# 
   922     008C                     TRISA           equ	140	;# 
   923     008D                     TRISB           equ	141	;# 
   924     008E                     TRISC           equ	142	;# 
   925     0090                     PIE0            equ	144	;# 
   926     0091                     PIE1            equ	145	;# 
   927     0092                     PIE2            equ	146	;# 
   928     0093                     PIE3            equ	147	;# 
   929     0094                     PIE4            equ	148	;# 
   930     0097                     WDTCON          equ	151	;# 
   931     009B                     ADRES           equ	155	;# 
   932     009B                     ADRESL          equ	155	;# 
   933     009C                     ADRESH          equ	156	;# 
   934     009D                     ADCON0          equ	157	;# 
   935     009E                     ADCON1          equ	158	;# 
   936     009F                     ADACT           equ	159	;# 
   937     010C                     LATA            equ	268	;# 
   938     010D                     LATB            equ	269	;# 
   939     010E                     LATC            equ	270	;# 
   940     0111                     CM1CON0         equ	273	;# 
   941     0112                     CM1CON1         equ	274	;# 
   942     0113                     CM2CON0         equ	275	;# 
   943     0114                     CM2CON1         equ	276	;# 
   944     0115                     CMOUT           equ	277	;# 
   945     0116                     BORCON          equ	278	;# 
   946     0117                     FVRCON          equ	279	;# 
   947     0118                     DACCON0         equ	280	;# 
   948     0119                     DACCON1         equ	281	;# 
   949     018C                     ANSELA          equ	396	;# 
   950     018D                     ANSELB          equ	397	;# 
   951     018E                     ANSELC          equ	398	;# 
   952     0197                     VREGCON         equ	407	;# 
   953     0199                     RC1REG          equ	409	;# 
   954     0199                     RCREG           equ	409	;# 
   955     0199                     RCREG1          equ	409	;# 
   956     019A                     TX1REG          equ	410	;# 
   957     019A                     TXREG1          equ	410	;# 
   958     019A                     TXREG           equ	410	;# 
   959     019B                     SP1BRG          equ	411	;# 
   960     019B                     SPBRG           equ	411	;# 
   961     019B                     SP1BRGL         equ	411	;# 
   962     019B                     SPBRG1          equ	411	;# 
   963     019B                     SPBRGL          equ	411	;# 
   964     019C                     SP1BRGH         equ	412	;# 
   965     019C                     SPBRGH          equ	412	;# 
   966     019C                     SPBRGH1         equ	412	;# 
   967     019D                     RC1STA          equ	413	;# 
   968     019D                     RCSTA1          equ	413	;# 
   969     019D                     RCSTA           equ	413	;# 
   970     019E                     TX1STA          equ	414	;# 
   971     019E                     TXSTA1          equ	414	;# 
   972     019E                     TXSTA           equ	414	;# 
   973     019F                     BAUD1CON        equ	415	;# 
   974     019F                     BAUDCON1        equ	415	;# 
   975     019F                     BAUDCTL1        equ	415	;# 
   976     019F                     BAUDCON         equ	415	;# 
   977     019F                     BAUDCTL         equ	415	;# 
   978     020C                     WPUA            equ	524	;# 
   979     020D                     WPUB            equ	525	;# 
   980     020E                     WPUC            equ	526	;# 
   981     0211                     SSP1BUF         equ	529	;# 
   982     0211                     SSPBUF          equ	529	;# 
   983     0212                     SSP1ADD         equ	530	;# 
   984     0212                     SSPADD          equ	530	;# 
   985     0213                     SSP1MSK         equ	531	;# 
   986     0213                     SSPMSK          equ	531	;# 
   987     0214                     SSP1STAT        equ	532	;# 
   988     0214                     SSPSTAT         equ	532	;# 
   989     0215                     SSP1CON1        equ	533	;# 
   990     0215                     SSPCON          equ	533	;# 
   991     0215                     SSPCON1         equ	533	;# 
   992     0215                     SSP1CON         equ	533	;# 
   993     0216                     SSP1CON2        equ	534	;# 
   994     0216                     SSPCON2         equ	534	;# 
   995     0217                     SSP1CON3        equ	535	;# 
   996     0217                     SSPCON3         equ	535	;# 
   997     0219                     SSP2BUF         equ	537	;# 
   998     021A                     SSP2ADD         equ	538	;# 
   999     021B                     SSP2MSK         equ	539	;# 
  1000     021C                     SSP2STAT        equ	540	;# 
  1001     021D                     SSP2CON1        equ	541	;# 
  1002     021D                     SSP2CON         equ	541	;# 
  1003     021E                     SSP2CON2        equ	542	;# 
  1004     021F                     SSP2CON3        equ	543	;# 
  1005     028C                     ODCONA          equ	652	;# 
  1006     028D                     ODCONB          equ	653	;# 
  1007     028E                     ODCONC          equ	654	;# 
  1008     0291                     CCPR1           equ	657	;# 
  1009     0291                     CCPR1L          equ	657	;# 
  1010     0292                     CCPR1H          equ	658	;# 
  1011     0293                     CCP1CON         equ	659	;# 
  1012     0294                     CCP1CAP         equ	660	;# 
  1013     0295                     CCPR2           equ	661	;# 
  1014     0295                     CCPR2L          equ	661	;# 
  1015     0296                     CCPR2H          equ	662	;# 
  1016     0297                     CCP2CON         equ	663	;# 
  1017     0298                     CCP2CAP         equ	664	;# 
  1018     029F                     CCPTMRS         equ	671	;# 
  1019     030C                     SLRCONA         equ	780	;# 
  1020     030D                     SLRCONB         equ	781	;# 
  1021     030E                     SLRCONC         equ	782	;# 
  1022     0311                     CCPR3           equ	785	;# 
  1023     0311                     CCPR3L          equ	785	;# 
  1024     0312                     CCPR3H          equ	786	;# 
  1025     0313                     CCP3CON         equ	787	;# 
  1026     0314                     CCP3CAP         equ	788	;# 
  1027     0315                     CCPR4           equ	789	;# 
  1028     0315                     CCPR4L          equ	789	;# 
  1029     0316                     CCPR4H          equ	790	;# 
  1030     0317                     CCP4CON         equ	791	;# 
  1031     0318                     CCP4CAP         equ	792	;# 
  1032     038C                     INLVLA          equ	908	;# 
  1033     038D                     INLVLB          equ	909	;# 
  1034     038E                     INLVLC          equ	910	;# 
  1035     0391                     IOCAP           equ	913	;# 
  1036     0392                     IOCAN           equ	914	;# 
  1037     0393                     IOCAF           equ	915	;# 
  1038     0394                     IOCBP           equ	916	;# 
  1039     0395                     IOCBN           equ	917	;# 
  1040     0396                     IOCBF           equ	918	;# 
  1041     0397                     IOCCP           equ	919	;# 
  1042     0398                     IOCCN           equ	920	;# 
  1043     0399                     IOCCF           equ	921	;# 
  1044     039A                     CLKRCON         equ	922	;# 
  1045     039C                     MDCON           equ	924	;# 
  1046     039D                     MDSRC           equ	925	;# 
  1047     039E                     MDCARH          equ	926	;# 
  1048     039F                     MDCARL          equ	927	;# 
  1049     0411                     TMR3            equ	1041	;# 
  1050     0411                     TMR3L           equ	1041	;# 
  1051     0412                     TMR3H           equ	1042	;# 
  1052     0413                     T3CON           equ	1043	;# 
  1053     0414                     T3GCON          equ	1044	;# 
  1054     0415                     TMR4            equ	1045	;# 
  1055     0416                     PR4             equ	1046	;# 
  1056     0417                     T4CON           equ	1047	;# 
  1057     0418                     TMR5            equ	1048	;# 
  1058     0418                     TMR5L           equ	1048	;# 
  1059     0419                     TMR5H           equ	1049	;# 
  1060     041A                     T5CON           equ	1050	;# 
  1061     041B                     T5GCON          equ	1051	;# 
  1062     041C                     TMR6            equ	1052	;# 
  1063     041D                     PR6             equ	1053	;# 
  1064     041E                     T6CON           equ	1054	;# 
  1065     041F                     CCDCON          equ	1055	;# 
  1066     0498                     NCO1ACC         equ	1176	;# 
  1067     0498                     NCO1ACCL        equ	1176	;# 
  1068     0499                     NCO1ACCH        equ	1177	;# 
  1069     049A                     NCO1ACCU        equ	1178	;# 
  1070     049B                     NCO1INC         equ	1179	;# 
  1071     049B                     NCO1INCL        equ	1179	;# 
  1072     049C                     NCO1INCH        equ	1180	;# 
  1073     049D                     NCO1INCU        equ	1181	;# 
  1074     049E                     NCO1CON         equ	1182	;# 
  1075     049F                     NCO1CLK         equ	1183	;# 
  1076     0617                     PWM5DCL         equ	1559	;# 
  1077     0618                     PWM5DCH         equ	1560	;# 
  1078     0619                     PWM5CON         equ	1561	;# 
  1079     0619                     PWM5CON0        equ	1561	;# 
  1080     061A                     PWM6DCL         equ	1562	;# 
  1081     061B                     PWM6DCH         equ	1563	;# 
  1082     061C                     PWM6CON         equ	1564	;# 
  1083     061C                     PWM6CON0        equ	1564	;# 
  1084     061F                     PWMTMRS         equ	1567	;# 
  1085     0691                     CWG1CLKCON      equ	1681	;# 
  1086     0692                     CWG1DAT         equ	1682	;# 
  1087     0693                     CWG1DBR         equ	1683	;# 
  1088     0694                     CWG1DBF         equ	1684	;# 
  1089     0695                     CWG1CON0        equ	1685	;# 
  1090     0696                     CWG1CON1        equ	1686	;# 
  1091     0697                     CWG1AS0         equ	1687	;# 
  1092     0698                     CWG1AS1         equ	1688	;# 
  1093     0699                     CWG1STR         equ	1689	;# 
  1094     0711                     CWG2CLKCON      equ	1809	;# 
  1095     0712                     CWG2DAT         equ	1810	;# 
  1096     0713                     CWG2DBR         equ	1811	;# 
  1097     0714                     CWG2DBF         equ	1812	;# 
  1098     0715                     CWG2CON0        equ	1813	;# 
  1099     0716                     CWG2CON1        equ	1814	;# 
  1100     0717                     CWG2AS0         equ	1815	;# 
  1101     0718                     CWG2AS1         equ	1816	;# 
  1102     0719                     CWG2STR         equ	1817	;# 
  1103     0891                     NVMADR          equ	2193	;# 
  1104     0891                     EEADR           equ	2193	;# 
  1105     0891                     PMADR           equ	2193	;# 
  1106     0891                     NVMADRL         equ	2193	;# 
  1107     0891                     EEADRL          equ	2193	;# 
  1108     0891                     PMADRL          equ	2193	;# 
  1109     0892                     NVMADRH         equ	2194	;# 
  1110     0892                     EEADRH          equ	2194	;# 
  1111     0892                     PMADRH          equ	2194	;# 
  1112     0893                     NVMDAT          equ	2195	;# 
  1113     0893                     EEDAT           equ	2195	;# 
  1114     0893                     PMDAT           equ	2195	;# 
  1115     0893                     NVMDATL         equ	2195	;# 
  1116     0893                     EEDATL          equ	2195	;# 
  1117     0893                     PMDATL          equ	2195	;# 
  1118     0894                     NVMDATH         equ	2196	;# 
  1119     0894                     EEDATH          equ	2196	;# 
  1120     0894                     PMDATH          equ	2196	;# 
  1121     0895                     NVMCON1         equ	2197	;# 
  1122     0895                     EECON1          equ	2197	;# 
  1123     0895                     PMCON1          equ	2197	;# 
  1124     0896                     NVMCON2         equ	2198	;# 
  1125     0896                     EECON2          equ	2198	;# 
  1126     0896                     PMCON2          equ	2198	;# 
  1127     089B                     PCON0           equ	2203	;# 
  1128     0911                     PMD0            equ	2321	;# 
  1129     0912                     PMD1            equ	2322	;# 
  1130     0913                     PMD2            equ	2323	;# 
  1131     0914                     PMD3            equ	2324	;# 
  1132     0915                     PMD4            equ	2325	;# 
  1133     0916                     PMD5            equ	2326	;# 
  1134     0918                     CPUDOZE         equ	2328	;# 
  1135     0919                     OSCCON1         equ	2329	;# 
  1136     091A                     OSCCON2         equ	2330	;# 
  1137     091B                     OSCCON3         equ	2331	;# 
  1138     091C                     OSCSTAT1        equ	2332	;# 
  1139     091D                     OSCEN           equ	2333	;# 
  1140     091E                     OSCTUNE         equ	2334	;# 
  1141     091F                     OSCFRQ          equ	2335	;# 
  1142     0E0F                     PPSLOCK         equ	3599	;# 
  1143     0E10                     INTPPS          equ	3600	;# 
  1144     0E11                     T0CKIPPS        equ	3601	;# 
  1145     0E12                     T1CKIPPS        equ	3602	;# 
  1146     0E13                     T1GPPS          equ	3603	;# 
  1147     0E14                     CCP1PPS         equ	3604	;# 
  1148     0E15                     CCP2PPS         equ	3605	;# 
  1149     0E16                     CCP3PPS         equ	3606	;# 
  1150     0E17                     CCP4PPS         equ	3607	;# 
  1151     0E18                     CWG1PPS         equ	3608	;# 
  1152     0E19                     CWG2PPS         equ	3609	;# 
  1153     0E1A                     MDCIN1PPS       equ	3610	;# 
  1154     0E1B                     MDCIN2PPS       equ	3611	;# 
  1155     0E1C                     MDMINPPS        equ	3612	;# 
  1156     0E1D                     SSP2CLKPPS      equ	3613	;# 
  1157     0E1E                     SSP2DATPPS      equ	3614	;# 
  1158     0E1F                     SSP2SSPPS       equ	3615	;# 
  1159     0E20                     SSP1CLKPPS      equ	3616	;# 
  1160     0E21                     SSP1DATPPS      equ	3617	;# 
  1161     0E22                     SSP1SSPPS       equ	3618	;# 
  1162     0E24                     RXPPS           equ	3620	;# 
  1163     0E25                     TXPPS           equ	3621	;# 
  1164     0E28                     CLCIN0PPS       equ	3624	;# 
  1165     0E29                     CLCIN1PPS       equ	3625	;# 
  1166     0E2A                     CLCIN2PPS       equ	3626	;# 
  1167     0E2B                     CLCIN3PPS       equ	3627	;# 
  1168     0E2C                     T3CKIPPS        equ	3628	;# 
  1169     0E2D                     T3GPPS          equ	3629	;# 
  1170     0E2E                     T5CKIPPS        equ	3630	;# 
  1171     0E2F                     T5GPPS          equ	3631	;# 
  1172     0E90                     RA0PPS          equ	3728	;# 
  1173     0E91                     RA1PPS          equ	3729	;# 
  1174     0E92                     RA2PPS          equ	3730	;# 
  1175     0E94                     RA4PPS          equ	3732	;# 
  1176     0E95                     RA5PPS          equ	3733	;# 
  1177     0E9C                     RB4PPS          equ	3740	;# 
  1178     0E9D                     RB5PPS          equ	3741	;# 
  1179     0E9E                     RB6PPS          equ	3742	;# 
  1180     0E9F                     RB7PPS          equ	3743	;# 
  1181     0EA0                     RC0PPS          equ	3744	;# 
  1182     0EA1                     RC1PPS          equ	3745	;# 
  1183     0EA2                     RC2PPS          equ	3746	;# 
  1184     0EA3                     RC3PPS          equ	3747	;# 
  1185     0EA4                     RC4PPS          equ	3748	;# 
  1186     0EA5                     RC5PPS          equ	3749	;# 
  1187     0EA6                     RC6PPS          equ	3750	;# 
  1188     0EA7                     RC7PPS          equ	3751	;# 
  1189     0F0F                     CLCDATA         equ	3855	;# 
  1190     0F10                     CLC1CON         equ	3856	;# 
  1191     0F11                     CLC1POL         equ	3857	;# 
  1192     0F12                     CLC1SEL0        equ	3858	;# 
  1193     0F13                     CLC1SEL1        equ	3859	;# 
  1194     0F14                     CLC1SEL2        equ	3860	;# 
  1195     0F15                     CLC1SEL3        equ	3861	;# 
  1196     0F16                     CLC1GLS0        equ	3862	;# 
  1197     0F17                     CLC1GLS1        equ	3863	;# 
  1198     0F18                     CLC1GLS2        equ	3864	;# 
  1199     0F19                     CLC1GLS3        equ	3865	;# 
  1200     0F1A                     CLC2CON         equ	3866	;# 
  1201     0F1B                     CLC2POL         equ	3867	;# 
  1202     0F1C                     CLC2SEL0        equ	3868	;# 
  1203     0F1D                     CLC2SEL1        equ	3869	;# 
  1204     0F1E                     CLC2SEL2        equ	3870	;# 
  1205     0F1F                     CLC2SEL3        equ	3871	;# 
  1206     0F20                     CLC2GLS0        equ	3872	;# 
  1207     0F21                     CLC2GLS1        equ	3873	;# 
  1208     0F22                     CLC2GLS2        equ	3874	;# 
  1209     0F23                     CLC2GLS3        equ	3875	;# 
  1210     0F24                     CLC3CON         equ	3876	;# 
  1211     0F25                     CLC3POL         equ	3877	;# 
  1212     0F26                     CLC3SEL0        equ	3878	;# 
  1213     0F27                     CLC3SEL1        equ	3879	;# 
  1214     0F28                     CLC3SEL2        equ	3880	;# 
  1215     0F29                     CLC3SEL3        equ	3881	;# 
  1216     0F2A                     CLC3GLS0        equ	3882	;# 
  1217     0F2B                     CLC3GLS1        equ	3883	;# 
  1218     0F2C                     CLC3GLS2        equ	3884	;# 
  1219     0F2D                     CLC3GLS3        equ	3885	;# 
  1220     0F2E                     CLC4CON         equ	3886	;# 
  1221     0F2F                     CLC4POL         equ	3887	;# 
  1222     0F30                     CLC4SEL0        equ	3888	;# 
  1223     0F31                     CLC4SEL1        equ	3889	;# 
  1224     0F32                     CLC4SEL2        equ	3890	;# 
  1225     0F33                     CLC4SEL3        equ	3891	;# 
  1226     0F34                     CLC4GLS0        equ	3892	;# 
  1227     0F35                     CLC4GLS1        equ	3893	;# 
  1228     0F36                     CLC4GLS2        equ	3894	;# 
  1229     0F37                     CLC4GLS3        equ	3895	;# 
  1230     0FE4                     STATUS_SHAD     equ	4068	;# 
  1231     0FE5                     WREG_SHAD       equ	4069	;# 
  1232     0FE6                     BSR_SHAD        equ	4070	;# 
  1233     0FE7                     PCLATH_SHAD     equ	4071	;# 
  1234     0FE8                     FSR0L_SHAD      equ	4072	;# 
  1235     0FE9                     FSR0H_SHAD      equ	4073	;# 
  1236     0FEA                     FSR1L_SHAD      equ	4074	;# 
  1237     0FEB                     FSR1H_SHAD      equ	4075	;# 
  1238     0FED                     STKPTR          equ	4077	;# 
  1239     0FEE                     TOSL            equ	4078	;# 
  1240     0FEF                     TOSH            equ	4079	;# 
  1241     0000                     INDF0           equ	0	;# 
  1242     0001                     INDF1           equ	1	;# 
  1243     0002                     PCL             equ	2	;# 
  1244     0003                     STATUS          equ	3	;# 
  1245     0004                     FSR0L           equ	4	;# 
  1246     0005                     FSR0H           equ	5	;# 
  1247     0006                     FSR1L           equ	6	;# 
  1248     0007                     FSR1H           equ	7	;# 
  1249     0008                     BSR             equ	8	;# 
  1250     0009                     WREG            equ	9	;# 
  1251     000A                     PCLATH          equ	10	;# 
  1252     000B                     INTCON          equ	11	;# 
  1253     000C                     PORTA           equ	12	;# 
  1254     000D                     PORTB           equ	13	;# 
  1255     000E                     PORTC           equ	14	;# 
  1256     0010                     PIR0            equ	16	;# 
  1257     0011                     PIR1            equ	17	;# 
  1258     0012                     PIR2            equ	18	;# 
  1259     0013                     PIR3            equ	19	;# 
  1260     0014                     PIR4            equ	20	;# 
  1261     0015                     TMR0L           equ	21	;# 
  1262     0015                     TMR0            equ	21	;# 
  1263     0016                     TMR0H           equ	22	;# 
  1264     0016                     PR0             equ	22	;# 
  1265     0017                     T0CON0          equ	23	;# 
  1266     0018                     T0CON1          equ	24	;# 
  1267     0019                     TMR1            equ	25	;# 
  1268     0019                     TMR1L           equ	25	;# 
  1269     001A                     TMR1H           equ	26	;# 
  1270     001B                     T1CON           equ	27	;# 
  1271     001C                     T1GCON          equ	28	;# 
  1272     001D                     TMR2            equ	29	;# 
  1273     001E                     PR2             equ	30	;# 
  1274     001F                     T2CON           equ	31	;# 
  1275     008C                     TRISA           equ	140	;# 
  1276     008D                     TRISB           equ	141	;# 
  1277     008E                     TRISC           equ	142	;# 
  1278     0090                     PIE0            equ	144	;# 
  1279     0091                     PIE1            equ	145	;# 
  1280     0092                     PIE2            equ	146	;# 
  1281     0093                     PIE3            equ	147	;# 
  1282     0094                     PIE4            equ	148	;# 
  1283     0097                     WDTCON          equ	151	;# 
  1284     009B                     ADRES           equ	155	;# 
  1285     009B                     ADRESL          equ	155	;# 
  1286     009C                     ADRESH          equ	156	;# 
  1287     009D                     ADCON0          equ	157	;# 
  1288     009E                     ADCON1          equ	158	;# 
  1289     009F                     ADACT           equ	159	;# 
  1290     010C                     LATA            equ	268	;# 
  1291     010D                     LATB            equ	269	;# 
  1292     010E                     LATC            equ	270	;# 
  1293     0111                     CM1CON0         equ	273	;# 
  1294     0112                     CM1CON1         equ	274	;# 
  1295     0113                     CM2CON0         equ	275	;# 
  1296     0114                     CM2CON1         equ	276	;# 
  1297     0115                     CMOUT           equ	277	;# 
  1298     0116                     BORCON          equ	278	;# 
  1299     0117                     FVRCON          equ	279	;# 
  1300     0118                     DACCON0         equ	280	;# 
  1301     0119                     DACCON1         equ	281	;# 
  1302     018C                     ANSELA          equ	396	;# 
  1303     018D                     ANSELB          equ	397	;# 
  1304     018E                     ANSELC          equ	398	;# 
  1305     0197                     VREGCON         equ	407	;# 
  1306     0199                     RC1REG          equ	409	;# 
  1307     0199                     RCREG           equ	409	;# 
  1308     0199                     RCREG1          equ	409	;# 
  1309     019A                     TX1REG          equ	410	;# 
  1310     019A                     TXREG1          equ	410	;# 
  1311     019A                     TXREG           equ	410	;# 
  1312     019B                     SP1BRG          equ	411	;# 
  1313     019B                     SPBRG           equ	411	;# 
  1314     019B                     SP1BRGL         equ	411	;# 
  1315     019B                     SPBRG1          equ	411	;# 
  1316     019B                     SPBRGL          equ	411	;# 
  1317     019C                     SP1BRGH         equ	412	;# 
  1318     019C                     SPBRGH          equ	412	;# 
  1319     019C                     SPBRGH1         equ	412	;# 
  1320     019D                     RC1STA          equ	413	;# 
  1321     019D                     RCSTA1          equ	413	;# 
  1322     019D                     RCSTA           equ	413	;# 
  1323     019E                     TX1STA          equ	414	;# 
  1324     019E                     TXSTA1          equ	414	;# 
  1325     019E                     TXSTA           equ	414	;# 
  1326     019F                     BAUD1CON        equ	415	;# 
  1327     019F                     BAUDCON1        equ	415	;# 
  1328     019F                     BAUDCTL1        equ	415	;# 
  1329     019F                     BAUDCON         equ	415	;# 
  1330     019F                     BAUDCTL         equ	415	;# 
  1331     020C                     WPUA            equ	524	;# 
  1332     020D                     WPUB            equ	525	;# 
  1333     020E                     WPUC            equ	526	;# 
  1334     0211                     SSP1BUF         equ	529	;# 
  1335     0211                     SSPBUF          equ	529	;# 
  1336     0212                     SSP1ADD         equ	530	;# 
  1337     0212                     SSPADD          equ	530	;# 
  1338     0213                     SSP1MSK         equ	531	;# 
  1339     0213                     SSPMSK          equ	531	;# 
  1340     0214                     SSP1STAT        equ	532	;# 
  1341     0214                     SSPSTAT         equ	532	;# 
  1342     0215                     SSP1CON1        equ	533	;# 
  1343     0215                     SSPCON          equ	533	;# 
  1344     0215                     SSPCON1         equ	533	;# 
  1345     0215                     SSP1CON         equ	533	;# 
  1346     0216                     SSP1CON2        equ	534	;# 
  1347     0216                     SSPCON2         equ	534	;# 
  1348     0217                     SSP1CON3        equ	535	;# 
  1349     0217                     SSPCON3         equ	535	;# 
  1350     0219                     SSP2BUF         equ	537	;# 
  1351     021A                     SSP2ADD         equ	538	;# 
  1352     021B                     SSP2MSK         equ	539	;# 
  1353     021C                     SSP2STAT        equ	540	;# 
  1354     021D                     SSP2CON1        equ	541	;# 
  1355     021D                     SSP2CON         equ	541	;# 
  1356     021E                     SSP2CON2        equ	542	;# 
  1357     021F                     SSP2CON3        equ	543	;# 
  1358     028C                     ODCONA          equ	652	;# 
  1359     028D                     ODCONB          equ	653	;# 
  1360     028E                     ODCONC          equ	654	;# 
  1361     0291                     CCPR1           equ	657	;# 
  1362     0291                     CCPR1L          equ	657	;# 
  1363     0292                     CCPR1H          equ	658	;# 
  1364     0293                     CCP1CON         equ	659	;# 
  1365     0294                     CCP1CAP         equ	660	;# 
  1366     0295                     CCPR2           equ	661	;# 
  1367     0295                     CCPR2L          equ	661	;# 
  1368     0296                     CCPR2H          equ	662	;# 
  1369     0297                     CCP2CON         equ	663	;# 
  1370     0298                     CCP2CAP         equ	664	;# 
  1371     029F                     CCPTMRS         equ	671	;# 
  1372     030C                     SLRCONA         equ	780	;# 
  1373     030D                     SLRCONB         equ	781	;# 
  1374     030E                     SLRCONC         equ	782	;# 
  1375     0311                     CCPR3           equ	785	;# 
  1376     0311                     CCPR3L          equ	785	;# 
  1377     0312                     CCPR3H          equ	786	;# 
  1378     0313                     CCP3CON         equ	787	;# 
  1379     0314                     CCP3CAP         equ	788	;# 
  1380     0315                     CCPR4           equ	789	;# 
  1381     0315                     CCPR4L          equ	789	;# 
  1382     0316                     CCPR4H          equ	790	;# 
  1383     0317                     CCP4CON         equ	791	;# 
  1384     0318                     CCP4CAP         equ	792	;# 
  1385     038C                     INLVLA          equ	908	;# 
  1386     038D                     INLVLB          equ	909	;# 
  1387     038E                     INLVLC          equ	910	;# 
  1388     0391                     IOCAP           equ	913	;# 
  1389     0392                     IOCAN           equ	914	;# 
  1390     0393                     IOCAF           equ	915	;# 
  1391     0394                     IOCBP           equ	916	;# 
  1392     0395                     IOCBN           equ	917	;# 
  1393     0396                     IOCBF           equ	918	;# 
  1394     0397                     IOCCP           equ	919	;# 
  1395     0398                     IOCCN           equ	920	;# 
  1396     0399                     IOCCF           equ	921	;# 
  1397     039A                     CLKRCON         equ	922	;# 
  1398     039C                     MDCON           equ	924	;# 
  1399     039D                     MDSRC           equ	925	;# 
  1400     039E                     MDCARH          equ	926	;# 
  1401     039F                     MDCARL          equ	927	;# 
  1402     0411                     TMR3            equ	1041	;# 
  1403     0411                     TMR3L           equ	1041	;# 
  1404     0412                     TMR3H           equ	1042	;# 
  1405     0413                     T3CON           equ	1043	;# 
  1406     0414                     T3GCON          equ	1044	;# 
  1407     0415                     TMR4            equ	1045	;# 
  1408     0416                     PR4             equ	1046	;# 
  1409     0417                     T4CON           equ	1047	;# 
  1410     0418                     TMR5            equ	1048	;# 
  1411     0418                     TMR5L           equ	1048	;# 
  1412     0419                     TMR5H           equ	1049	;# 
  1413     041A                     T5CON           equ	1050	;# 
  1414     041B                     T5GCON          equ	1051	;# 
  1415     041C                     TMR6            equ	1052	;# 
  1416     041D                     PR6             equ	1053	;# 
  1417     041E                     T6CON           equ	1054	;# 
  1418     041F                     CCDCON          equ	1055	;# 
  1419     0498                     NCO1ACC         equ	1176	;# 
  1420     0498                     NCO1ACCL        equ	1176	;# 
  1421     0499                     NCO1ACCH        equ	1177	;# 
  1422     049A                     NCO1ACCU        equ	1178	;# 
  1423     049B                     NCO1INC         equ	1179	;# 
  1424     049B                     NCO1INCL        equ	1179	;# 
  1425     049C                     NCO1INCH        equ	1180	;# 
  1426     049D                     NCO1INCU        equ	1181	;# 
  1427     049E                     NCO1CON         equ	1182	;# 
  1428     049F                     NCO1CLK         equ	1183	;# 
  1429     0617                     PWM5DCL         equ	1559	;# 
  1430     0618                     PWM5DCH         equ	1560	;# 
  1431     0619                     PWM5CON         equ	1561	;# 
  1432     0619                     PWM5CON0        equ	1561	;# 
  1433     061A                     PWM6DCL         equ	1562	;# 
  1434     061B                     PWM6DCH         equ	1563	;# 
  1435     061C                     PWM6CON         equ	1564	;# 
  1436     061C                     PWM6CON0        equ	1564	;# 
  1437     061F                     PWMTMRS         equ	1567	;# 
  1438     0691                     CWG1CLKCON      equ	1681	;# 
  1439     0692                     CWG1DAT         equ	1682	;# 
  1440     0693                     CWG1DBR         equ	1683	;# 
  1441     0694                     CWG1DBF         equ	1684	;# 
  1442     0695                     CWG1CON0        equ	1685	;# 
  1443     0696                     CWG1CON1        equ	1686	;# 
  1444     0697                     CWG1AS0         equ	1687	;# 
  1445     0698                     CWG1AS1         equ	1688	;# 
  1446     0699                     CWG1STR         equ	1689	;# 
  1447     0711                     CWG2CLKCON      equ	1809	;# 
  1448     0712                     CWG2DAT         equ	1810	;# 
  1449     0713                     CWG2DBR         equ	1811	;# 
  1450     0714                     CWG2DBF         equ	1812	;# 
  1451     0715                     CWG2CON0        equ	1813	;# 
  1452     0716                     CWG2CON1        equ	1814	;# 
  1453     0717                     CWG2AS0         equ	1815	;# 
  1454     0718                     CWG2AS1         equ	1816	;# 
  1455     0719                     CWG2STR         equ	1817	;# 
  1456     0891                     NVMADR          equ	2193	;# 
  1457     0891                     EEADR           equ	2193	;# 
  1458     0891                     PMADR           equ	2193	;# 
  1459     0891                     NVMADRL         equ	2193	;# 
  1460     0891                     EEADRL          equ	2193	;# 
  1461     0891                     PMADRL          equ	2193	;# 
  1462     0892                     NVMADRH         equ	2194	;# 
  1463     0892                     EEADRH          equ	2194	;# 
  1464     0892                     PMADRH          equ	2194	;# 
  1465     0893                     NVMDAT          equ	2195	;# 
  1466     0893                     EEDAT           equ	2195	;# 
  1467     0893                     PMDAT           equ	2195	;# 
  1468     0893                     NVMDATL         equ	2195	;# 
  1469     0893                     EEDATL          equ	2195	;# 
  1470     0893                     PMDATL          equ	2195	;# 
  1471     0894                     NVMDATH         equ	2196	;# 
  1472     0894                     EEDATH          equ	2196	;# 
  1473     0894                     PMDATH          equ	2196	;# 
  1474     0895                     NVMCON1         equ	2197	;# 
  1475     0895                     EECON1          equ	2197	;# 
  1476     0895                     PMCON1          equ	2197	;# 
  1477     0896                     NVMCON2         equ	2198	;# 
  1478     0896                     EECON2          equ	2198	;# 
  1479     0896                     PMCON2          equ	2198	;# 
  1480     089B                     PCON0           equ	2203	;# 
  1481     0911                     PMD0            equ	2321	;# 
  1482     0912                     PMD1            equ	2322	;# 
  1483     0913                     PMD2            equ	2323	;# 
  1484     0914                     PMD3            equ	2324	;# 
  1485     0915                     PMD4            equ	2325	;# 
  1486     0916                     PMD5            equ	2326	;# 
  1487     0918                     CPUDOZE         equ	2328	;# 
  1488     0919                     OSCCON1         equ	2329	;# 
  1489     091A                     OSCCON2         equ	2330	;# 
  1490     091B                     OSCCON3         equ	2331	;# 
  1491     091C                     OSCSTAT1        equ	2332	;# 
  1492     091D                     OSCEN           equ	2333	;# 
  1493     091E                     OSCTUNE         equ	2334	;# 
  1494     091F                     OSCFRQ          equ	2335	;# 
  1495     0E0F                     PPSLOCK         equ	3599	;# 
  1496     0E10                     INTPPS          equ	3600	;# 
  1497     0E11                     T0CKIPPS        equ	3601	;# 
  1498     0E12                     T1CKIPPS        equ	3602	;# 
  1499     0E13                     T1GPPS          equ	3603	;# 
  1500     0E14                     CCP1PPS         equ	3604	;# 
  1501     0E15                     CCP2PPS         equ	3605	;# 
  1502     0E16                     CCP3PPS         equ	3606	;# 
  1503     0E17                     CCP4PPS         equ	3607	;# 
  1504     0E18                     CWG1PPS         equ	3608	;# 
  1505     0E19                     CWG2PPS         equ	3609	;# 
  1506     0E1A                     MDCIN1PPS       equ	3610	;# 
  1507     0E1B                     MDCIN2PPS       equ	3611	;# 
  1508     0E1C                     MDMINPPS        equ	3612	;# 
  1509     0E1D                     SSP2CLKPPS      equ	3613	;# 
  1510     0E1E                     SSP2DATPPS      equ	3614	;# 
  1511     0E1F                     SSP2SSPPS       equ	3615	;# 
  1512     0E20                     SSP1CLKPPS      equ	3616	;# 
  1513     0E21                     SSP1DATPPS      equ	3617	;# 
  1514     0E22                     SSP1SSPPS       equ	3618	;# 
  1515     0E24                     RXPPS           equ	3620	;# 
  1516     0E25                     TXPPS           equ	3621	;# 
  1517     0E28                     CLCIN0PPS       equ	3624	;# 
  1518     0E29                     CLCIN1PPS       equ	3625	;# 
  1519     0E2A                     CLCIN2PPS       equ	3626	;# 
  1520     0E2B                     CLCIN3PPS       equ	3627	;# 
  1521     0E2C                     T3CKIPPS        equ	3628	;# 
  1522     0E2D                     T3GPPS          equ	3629	;# 
  1523     0E2E                     T5CKIPPS        equ	3630	;# 
  1524     0E2F                     T5GPPS          equ	3631	;# 
  1525     0E90                     RA0PPS          equ	3728	;# 
  1526     0E91                     RA1PPS          equ	3729	;# 
  1527     0E92                     RA2PPS          equ	3730	;# 
  1528     0E94                     RA4PPS          equ	3732	;# 
  1529     0E95                     RA5PPS          equ	3733	;# 
  1530     0E9C                     RB4PPS          equ	3740	;# 
  1531     0E9D                     RB5PPS          equ	3741	;# 
  1532     0E9E                     RB6PPS          equ	3742	;# 
  1533     0E9F                     RB7PPS          equ	3743	;# 
  1534     0EA0                     RC0PPS          equ	3744	;# 
  1535     0EA1                     RC1PPS          equ	3745	;# 
  1536     0EA2                     RC2PPS          equ	3746	;# 
  1537     0EA3                     RC3PPS          equ	3747	;# 
  1538     0EA4                     RC4PPS          equ	3748	;# 
  1539     0EA5                     RC5PPS          equ	3749	;# 
  1540     0EA6                     RC6PPS          equ	3750	;# 
  1541     0EA7                     RC7PPS          equ	3751	;# 
  1542     0F0F                     CLCDATA         equ	3855	;# 
  1543     0F10                     CLC1CON         equ	3856	;# 
  1544     0F11                     CLC1POL         equ	3857	;# 
  1545     0F12                     CLC1SEL0        equ	3858	;# 
  1546     0F13                     CLC1SEL1        equ	3859	;# 
  1547     0F14                     CLC1SEL2        equ	3860	;# 
  1548     0F15                     CLC1SEL3        equ	3861	;# 
  1549     0F16                     CLC1GLS0        equ	3862	;# 
  1550     0F17                     CLC1GLS1        equ	3863	;# 
  1551     0F18                     CLC1GLS2        equ	3864	;# 
  1552     0F19                     CLC1GLS3        equ	3865	;# 
  1553     0F1A                     CLC2CON         equ	3866	;# 
  1554     0F1B                     CLC2POL         equ	3867	;# 
  1555     0F1C                     CLC2SEL0        equ	3868	;# 
  1556     0F1D                     CLC2SEL1        equ	3869	;# 
  1557     0F1E                     CLC2SEL2        equ	3870	;# 
  1558     0F1F                     CLC2SEL3        equ	3871	;# 
  1559     0F20                     CLC2GLS0        equ	3872	;# 
  1560     0F21                     CLC2GLS1        equ	3873	;# 
  1561     0F22                     CLC2GLS2        equ	3874	;# 
  1562     0F23                     CLC2GLS3        equ	3875	;# 
  1563     0F24                     CLC3CON         equ	3876	;# 
  1564     0F25                     CLC3POL         equ	3877	;# 
  1565     0F26                     CLC3SEL0        equ	3878	;# 
  1566     0F27                     CLC3SEL1        equ	3879	;# 
  1567     0F28                     CLC3SEL2        equ	3880	;# 
  1568     0F29                     CLC3SEL3        equ	3881	;# 
  1569     0F2A                     CLC3GLS0        equ	3882	;# 
  1570     0F2B                     CLC3GLS1        equ	3883	;# 
  1571     0F2C                     CLC3GLS2        equ	3884	;# 
  1572     0F2D                     CLC3GLS3        equ	3885	;# 
  1573     0F2E                     CLC4CON         equ	3886	;# 
  1574     0F2F                     CLC4POL         equ	3887	;# 
  1575     0F30                     CLC4SEL0        equ	3888	;# 
  1576     0F31                     CLC4SEL1        equ	3889	;# 
  1577     0F32                     CLC4SEL2        equ	3890	;# 
  1578     0F33                     CLC4SEL3        equ	3891	;# 
  1579     0F34                     CLC4GLS0        equ	3892	;# 
  1580     0F35                     CLC4GLS1        equ	3893	;# 
  1581     0F36                     CLC4GLS2        equ	3894	;# 
  1582     0F37                     CLC4GLS3        equ	3895	;# 
  1583     0FE4                     STATUS_SHAD     equ	4068	;# 
  1584     0FE5                     WREG_SHAD       equ	4069	;# 
  1585     0FE6                     BSR_SHAD        equ	4070	;# 
  1586     0FE7                     PCLATH_SHAD     equ	4071	;# 
  1587     0FE8                     FSR0L_SHAD      equ	4072	;# 
  1588     0FE9                     FSR0H_SHAD      equ	4073	;# 
  1589     0FEA                     FSR1L_SHAD      equ	4074	;# 
  1590     0FEB                     FSR1H_SHAD      equ	4075	;# 
  1591     0FED                     STKPTR          equ	4077	;# 
  1592     0FEE                     TOSL            equ	4078	;# 
  1593     0FEF                     TOSH            equ	4079	;# 
  1594     0000                     INDF0           equ	0	;# 
  1595     0001                     INDF1           equ	1	;# 
  1596     0002                     PCL             equ	2	;# 
  1597     0003                     STATUS          equ	3	;# 
  1598     0004                     FSR0L           equ	4	;# 
  1599     0005                     FSR0H           equ	5	;# 
  1600     0006                     FSR1L           equ	6	;# 
  1601     0007                     FSR1H           equ	7	;# 
  1602     0008                     BSR             equ	8	;# 
  1603     0009                     WREG            equ	9	;# 
  1604     000A                     PCLATH          equ	10	;# 
  1605     000B                     INTCON          equ	11	;# 
  1606     000C                     PORTA           equ	12	;# 
  1607     000D                     PORTB           equ	13	;# 
  1608     000E                     PORTC           equ	14	;# 
  1609     0010                     PIR0            equ	16	;# 
  1610     0011                     PIR1            equ	17	;# 
  1611     0012                     PIR2            equ	18	;# 
  1612     0013                     PIR3            equ	19	;# 
  1613     0014                     PIR4            equ	20	;# 
  1614     0015                     TMR0L           equ	21	;# 
  1615     0015                     TMR0            equ	21	;# 
  1616     0016                     TMR0H           equ	22	;# 
  1617     0016                     PR0             equ	22	;# 
  1618     0017                     T0CON0          equ	23	;# 
  1619     0018                     T0CON1          equ	24	;# 
  1620     0019                     TMR1            equ	25	;# 
  1621     0019                     TMR1L           equ	25	;# 
  1622     001A                     TMR1H           equ	26	;# 
  1623     001B                     T1CON           equ	27	;# 
  1624     001C                     T1GCON          equ	28	;# 
  1625     001D                     TMR2            equ	29	;# 
  1626     001E                     PR2             equ	30	;# 
  1627     001F                     T2CON           equ	31	;# 
  1628     008C                     TRISA           equ	140	;# 
  1629     008D                     TRISB           equ	141	;# 
  1630     008E                     TRISC           equ	142	;# 
  1631     0090                     PIE0            equ	144	;# 
  1632     0091                     PIE1            equ	145	;# 
  1633     0092                     PIE2            equ	146	;# 
  1634     0093                     PIE3            equ	147	;# 
  1635     0094                     PIE4            equ	148	;# 
  1636     0097                     WDTCON          equ	151	;# 
  1637     009B                     ADRES           equ	155	;# 
  1638     009B                     ADRESL          equ	155	;# 
  1639     009C                     ADRESH          equ	156	;# 
  1640     009D                     ADCON0          equ	157	;# 
  1641     009E                     ADCON1          equ	158	;# 
  1642     009F                     ADACT           equ	159	;# 
  1643     010C                     LATA            equ	268	;# 
  1644     010D                     LATB            equ	269	;# 
  1645     010E                     LATC            equ	270	;# 
  1646     0111                     CM1CON0         equ	273	;# 
  1647     0112                     CM1CON1         equ	274	;# 
  1648     0113                     CM2CON0         equ	275	;# 
  1649     0114                     CM2CON1         equ	276	;# 
  1650     0115                     CMOUT           equ	277	;# 
  1651     0116                     BORCON          equ	278	;# 
  1652     0117                     FVRCON          equ	279	;# 
  1653     0118                     DACCON0         equ	280	;# 
  1654     0119                     DACCON1         equ	281	;# 
  1655     018C                     ANSELA          equ	396	;# 
  1656     018D                     ANSELB          equ	397	;# 
  1657     018E                     ANSELC          equ	398	;# 
  1658     0197                     VREGCON         equ	407	;# 
  1659     0199                     RC1REG          equ	409	;# 
  1660     0199                     RCREG           equ	409	;# 
  1661     0199                     RCREG1          equ	409	;# 
  1662     019A                     TX1REG          equ	410	;# 
  1663     019A                     TXREG1          equ	410	;# 
  1664     019A                     TXREG           equ	410	;# 
  1665     019B                     SP1BRG          equ	411	;# 
  1666     019B                     SPBRG           equ	411	;# 
  1667     019B                     SP1BRGL         equ	411	;# 
  1668     019B                     SPBRG1          equ	411	;# 
  1669     019B                     SPBRGL          equ	411	;# 
  1670     019C                     SP1BRGH         equ	412	;# 
  1671     019C                     SPBRGH          equ	412	;# 
  1672     019C                     SPBRGH1         equ	412	;# 
  1673     019D                     RC1STA          equ	413	;# 
  1674     019D                     RCSTA1          equ	413	;# 
  1675     019D                     RCSTA           equ	413	;# 
  1676     019E                     TX1STA          equ	414	;# 
  1677     019E                     TXSTA1          equ	414	;# 
  1678     019E                     TXSTA           equ	414	;# 
  1679     019F                     BAUD1CON        equ	415	;# 
  1680     019F                     BAUDCON1        equ	415	;# 
  1681     019F                     BAUDCTL1        equ	415	;# 
  1682     019F                     BAUDCON         equ	415	;# 
  1683     019F                     BAUDCTL         equ	415	;# 
  1684     020C                     WPUA            equ	524	;# 
  1685     020D                     WPUB            equ	525	;# 
  1686     020E                     WPUC            equ	526	;# 
  1687     0211                     SSP1BUF         equ	529	;# 
  1688     0211                     SSPBUF          equ	529	;# 
  1689     0212                     SSP1ADD         equ	530	;# 
  1690     0212                     SSPADD          equ	530	;# 
  1691     0213                     SSP1MSK         equ	531	;# 
  1692     0213                     SSPMSK          equ	531	;# 
  1693     0214                     SSP1STAT        equ	532	;# 
  1694     0214                     SSPSTAT         equ	532	;# 
  1695     0215                     SSP1CON1        equ	533	;# 
  1696     0215                     SSPCON          equ	533	;# 
  1697     0215                     SSPCON1         equ	533	;# 
  1698     0215                     SSP1CON         equ	533	;# 
  1699     0216                     SSP1CON2        equ	534	;# 
  1700     0216                     SSPCON2         equ	534	;# 
  1701     0217                     SSP1CON3        equ	535	;# 
  1702     0217                     SSPCON3         equ	535	;# 
  1703     0219                     SSP2BUF         equ	537	;# 
  1704     021A                     SSP2ADD         equ	538	;# 
  1705     021B                     SSP2MSK         equ	539	;# 
  1706     021C                     SSP2STAT        equ	540	;# 
  1707     021D                     SSP2CON1        equ	541	;# 
  1708     021D                     SSP2CON         equ	541	;# 
  1709     021E                     SSP2CON2        equ	542	;# 
  1710     021F                     SSP2CON3        equ	543	;# 
  1711     028C                     ODCONA          equ	652	;# 
  1712     028D                     ODCONB          equ	653	;# 
  1713     028E                     ODCONC          equ	654	;# 
  1714     0291                     CCPR1           equ	657	;# 
  1715     0291                     CCPR1L          equ	657	;# 
  1716     0292                     CCPR1H          equ	658	;# 
  1717     0293                     CCP1CON         equ	659	;# 
  1718     0294                     CCP1CAP         equ	660	;# 
  1719     0295                     CCPR2           equ	661	;# 
  1720     0295                     CCPR2L          equ	661	;# 
  1721     0296                     CCPR2H          equ	662	;# 
  1722     0297                     CCP2CON         equ	663	;# 
  1723     0298                     CCP2CAP         equ	664	;# 
  1724     029F                     CCPTMRS         equ	671	;# 
  1725     030C                     SLRCONA         equ	780	;# 
  1726     030D                     SLRCONB         equ	781	;# 
  1727     030E                     SLRCONC         equ	782	;# 
  1728     0311                     CCPR3           equ	785	;# 
  1729     0311                     CCPR3L          equ	785	;# 
  1730     0312                     CCPR3H          equ	786	;# 
  1731     0313                     CCP3CON         equ	787	;# 
  1732     0314                     CCP3CAP         equ	788	;# 
  1733     0315                     CCPR4           equ	789	;# 
  1734     0315                     CCPR4L          equ	789	;# 
  1735     0316                     CCPR4H          equ	790	;# 
  1736     0317                     CCP4CON         equ	791	;# 
  1737     0318                     CCP4CAP         equ	792	;# 
  1738     038C                     INLVLA          equ	908	;# 
  1739     038D                     INLVLB          equ	909	;# 
  1740     038E                     INLVLC          equ	910	;# 
  1741     0391                     IOCAP           equ	913	;# 
  1742     0392                     IOCAN           equ	914	;# 
  1743     0393                     IOCAF           equ	915	;# 
  1744     0394                     IOCBP           equ	916	;# 
  1745     0395                     IOCBN           equ	917	;# 
  1746     0396                     IOCBF           equ	918	;# 
  1747     0397                     IOCCP           equ	919	;# 
  1748     0398                     IOCCN           equ	920	;# 
  1749     0399                     IOCCF           equ	921	;# 
  1750     039A                     CLKRCON         equ	922	;# 
  1751     039C                     MDCON           equ	924	;# 
  1752     039D                     MDSRC           equ	925	;# 
  1753     039E                     MDCARH          equ	926	;# 
  1754     039F                     MDCARL          equ	927	;# 
  1755     0411                     TMR3            equ	1041	;# 
  1756     0411                     TMR3L           equ	1041	;# 
  1757     0412                     TMR3H           equ	1042	;# 
  1758     0413                     T3CON           equ	1043	;# 
  1759     0414                     T3GCON          equ	1044	;# 
  1760     0415                     TMR4            equ	1045	;# 
  1761     0416                     PR4             equ	1046	;# 
  1762     0417                     T4CON           equ	1047	;# 
  1763     0418                     TMR5            equ	1048	;# 
  1764     0418                     TMR5L           equ	1048	;# 
  1765     0419                     TMR5H           equ	1049	;# 
  1766     041A                     T5CON           equ	1050	;# 
  1767     041B                     T5GCON          equ	1051	;# 
  1768     041C                     TMR6            equ	1052	;# 
  1769     041D                     PR6             equ	1053	;# 
  1770     041E                     T6CON           equ	1054	;# 
  1771     041F                     CCDCON          equ	1055	;# 
  1772     0498                     NCO1ACC         equ	1176	;# 
  1773     0498                     NCO1ACCL        equ	1176	;# 
  1774     0499                     NCO1ACCH        equ	1177	;# 
  1775     049A                     NCO1ACCU        equ	1178	;# 
  1776     049B                     NCO1INC         equ	1179	;# 
  1777     049B                     NCO1INCL        equ	1179	;# 
  1778     049C                     NCO1INCH        equ	1180	;# 
  1779     049D                     NCO1INCU        equ	1181	;# 
  1780     049E                     NCO1CON         equ	1182	;# 
  1781     049F                     NCO1CLK         equ	1183	;# 
  1782     0617                     PWM5DCL         equ	1559	;# 
  1783     0618                     PWM5DCH         equ	1560	;# 
  1784     0619                     PWM5CON         equ	1561	;# 
  1785     0619                     PWM5CON0        equ	1561	;# 
  1786     061A                     PWM6DCL         equ	1562	;# 
  1787     061B                     PWM6DCH         equ	1563	;# 
  1788     061C                     PWM6CON         equ	1564	;# 
  1789     061C                     PWM6CON0        equ	1564	;# 
  1790     061F                     PWMTMRS         equ	1567	;# 
  1791     0691                     CWG1CLKCON      equ	1681	;# 
  1792     0692                     CWG1DAT         equ	1682	;# 
  1793     0693                     CWG1DBR         equ	1683	;# 
  1794     0694                     CWG1DBF         equ	1684	;# 
  1795     0695                     CWG1CON0        equ	1685	;# 
  1796     0696                     CWG1CON1        equ	1686	;# 
  1797     0697                     CWG1AS0         equ	1687	;# 
  1798     0698                     CWG1AS1         equ	1688	;# 
  1799     0699                     CWG1STR         equ	1689	;# 
  1800     0711                     CWG2CLKCON      equ	1809	;# 
  1801     0712                     CWG2DAT         equ	1810	;# 
  1802     0713                     CWG2DBR         equ	1811	;# 
  1803     0714                     CWG2DBF         equ	1812	;# 
  1804     0715                     CWG2CON0        equ	1813	;# 
  1805     0716                     CWG2CON1        equ	1814	;# 
  1806     0717                     CWG2AS0         equ	1815	;# 
  1807     0718                     CWG2AS1         equ	1816	;# 
  1808     0719                     CWG2STR         equ	1817	;# 
  1809     0891                     NVMADR          equ	2193	;# 
  1810     0891                     EEADR           equ	2193	;# 
  1811     0891                     PMADR           equ	2193	;# 
  1812     0891                     NVMADRL         equ	2193	;# 
  1813     0891                     EEADRL          equ	2193	;# 
  1814     0891                     PMADRL          equ	2193	;# 
  1815     0892                     NVMADRH         equ	2194	;# 
  1816     0892                     EEADRH          equ	2194	;# 
  1817     0892                     PMADRH          equ	2194	;# 
  1818     0893                     NVMDAT          equ	2195	;# 
  1819     0893                     EEDAT           equ	2195	;# 
  1820     0893                     PMDAT           equ	2195	;# 
  1821     0893                     NVMDATL         equ	2195	;# 
  1822     0893                     EEDATL          equ	2195	;# 
  1823     0893                     PMDATL          equ	2195	;# 
  1824     0894                     NVMDATH         equ	2196	;# 
  1825     0894                     EEDATH          equ	2196	;# 
  1826     0894                     PMDATH          equ	2196	;# 
  1827     0895                     NVMCON1         equ	2197	;# 
  1828     0895                     EECON1          equ	2197	;# 
  1829     0895                     PMCON1          equ	2197	;# 
  1830     0896                     NVMCON2         equ	2198	;# 
  1831     0896                     EECON2          equ	2198	;# 
  1832     0896                     PMCON2          equ	2198	;# 
  1833     089B                     PCON0           equ	2203	;# 
  1834     0911                     PMD0            equ	2321	;# 
  1835     0912                     PMD1            equ	2322	;# 
  1836     0913                     PMD2            equ	2323	;# 
  1837     0914                     PMD3            equ	2324	;# 
  1838     0915                     PMD4            equ	2325	;# 
  1839     0916                     PMD5            equ	2326	;# 
  1840     0918                     CPUDOZE         equ	2328	;# 
  1841     0919                     OSCCON1         equ	2329	;# 
  1842     091A                     OSCCON2         equ	2330	;# 
  1843     091B                     OSCCON3         equ	2331	;# 
  1844     091C                     OSCSTAT1        equ	2332	;# 
  1845     091D                     OSCEN           equ	2333	;# 
  1846     091E                     OSCTUNE         equ	2334	;# 
  1847     091F                     OSCFRQ          equ	2335	;# 
  1848     0E0F                     PPSLOCK         equ	3599	;# 
  1849     0E10                     INTPPS          equ	3600	;# 
  1850     0E11                     T0CKIPPS        equ	3601	;# 
  1851     0E12                     T1CKIPPS        equ	3602	;# 
  1852     0E13                     T1GPPS          equ	3603	;# 
  1853     0E14                     CCP1PPS         equ	3604	;# 
  1854     0E15                     CCP2PPS         equ	3605	;# 
  1855     0E16                     CCP3PPS         equ	3606	;# 
  1856     0E17                     CCP4PPS         equ	3607	;# 
  1857     0E18                     CWG1PPS         equ	3608	;# 
  1858     0E19                     CWG2PPS         equ	3609	;# 
  1859     0E1A                     MDCIN1PPS       equ	3610	;# 
  1860     0E1B                     MDCIN2PPS       equ	3611	;# 
  1861     0E1C                     MDMINPPS        equ	3612	;# 
  1862     0E1D                     SSP2CLKPPS      equ	3613	;# 
  1863     0E1E                     SSP2DATPPS      equ	3614	;# 
  1864     0E1F                     SSP2SSPPS       equ	3615	;# 
  1865     0E20                     SSP1CLKPPS      equ	3616	;# 
  1866     0E21                     SSP1DATPPS      equ	3617	;# 
  1867     0E22                     SSP1SSPPS       equ	3618	;# 
  1868     0E24                     RXPPS           equ	3620	;# 
  1869     0E25                     TXPPS           equ	3621	;# 
  1870     0E28                     CLCIN0PPS       equ	3624	;# 
  1871     0E29                     CLCIN1PPS       equ	3625	;# 
  1872     0E2A                     CLCIN2PPS       equ	3626	;# 
  1873     0E2B                     CLCIN3PPS       equ	3627	;# 
  1874     0E2C                     T3CKIPPS        equ	3628	;# 
  1875     0E2D                     T3GPPS          equ	3629	;# 
  1876     0E2E                     T5CKIPPS        equ	3630	;# 
  1877     0E2F                     T5GPPS          equ	3631	;# 
  1878     0E90                     RA0PPS          equ	3728	;# 
  1879     0E91                     RA1PPS          equ	3729	;# 
  1880     0E92                     RA2PPS          equ	3730	;# 
  1881     0E94                     RA4PPS          equ	3732	;# 
  1882     0E95                     RA5PPS          equ	3733	;# 
  1883     0E9C                     RB4PPS          equ	3740	;# 
  1884     0E9D                     RB5PPS          equ	3741	;# 
  1885     0E9E                     RB6PPS          equ	3742	;# 
  1886     0E9F                     RB7PPS          equ	3743	;# 
  1887     0EA0                     RC0PPS          equ	3744	;# 
  1888     0EA1                     RC1PPS          equ	3745	;# 
  1889     0EA2                     RC2PPS          equ	3746	;# 
  1890     0EA3                     RC3PPS          equ	3747	;# 
  1891     0EA4                     RC4PPS          equ	3748	;# 
  1892     0EA5                     RC5PPS          equ	3749	;# 
  1893     0EA6                     RC6PPS          equ	3750	;# 
  1894     0EA7                     RC7PPS          equ	3751	;# 
  1895     0F0F                     CLCDATA         equ	3855	;# 
  1896     0F10                     CLC1CON         equ	3856	;# 
  1897     0F11                     CLC1POL         equ	3857	;# 
  1898     0F12                     CLC1SEL0        equ	3858	;# 
  1899     0F13                     CLC1SEL1        equ	3859	;# 
  1900     0F14                     CLC1SEL2        equ	3860	;# 
  1901     0F15                     CLC1SEL3        equ	3861	;# 
  1902     0F16                     CLC1GLS0        equ	3862	;# 
  1903     0F17                     CLC1GLS1        equ	3863	;# 
  1904     0F18                     CLC1GLS2        equ	3864	;# 
  1905     0F19                     CLC1GLS3        equ	3865	;# 
  1906     0F1A                     CLC2CON         equ	3866	;# 
  1907     0F1B                     CLC2POL         equ	3867	;# 
  1908     0F1C                     CLC2SEL0        equ	3868	;# 
  1909     0F1D                     CLC2SEL1        equ	3869	;# 
  1910     0F1E                     CLC2SEL2        equ	3870	;# 
  1911     0F1F                     CLC2SEL3        equ	3871	;# 
  1912     0F20                     CLC2GLS0        equ	3872	;# 
  1913     0F21                     CLC2GLS1        equ	3873	;# 
  1914     0F22                     CLC2GLS2        equ	3874	;# 
  1915     0F23                     CLC2GLS3        equ	3875	;# 
  1916     0F24                     CLC3CON         equ	3876	;# 
  1917     0F25                     CLC3POL         equ	3877	;# 
  1918     0F26                     CLC3SEL0        equ	3878	;# 
  1919     0F27                     CLC3SEL1        equ	3879	;# 
  1920     0F28                     CLC3SEL2        equ	3880	;# 
  1921     0F29                     CLC3SEL3        equ	3881	;# 
  1922     0F2A                     CLC3GLS0        equ	3882	;# 
  1923     0F2B                     CLC3GLS1        equ	3883	;# 
  1924     0F2C                     CLC3GLS2        equ	3884	;# 
  1925     0F2D                     CLC3GLS3        equ	3885	;# 
  1926     0F2E                     CLC4CON         equ	3886	;# 
  1927     0F2F                     CLC4POL         equ	3887	;# 
  1928     0F30                     CLC4SEL0        equ	3888	;# 
  1929     0F31                     CLC4SEL1        equ	3889	;# 
  1930     0F32                     CLC4SEL2        equ	3890	;# 
  1931     0F33                     CLC4SEL3        equ	3891	;# 
  1932     0F34                     CLC4GLS0        equ	3892	;# 
  1933     0F35                     CLC4GLS1        equ	3893	;# 
  1934     0F36                     CLC4GLS2        equ	3894	;# 
  1935     0F37                     CLC4GLS3        equ	3895	;# 
  1936     0FE4                     STATUS_SHAD     equ	4068	;# 
  1937     0FE5                     WREG_SHAD       equ	4069	;# 
  1938     0FE6                     BSR_SHAD        equ	4070	;# 
  1939     0FE7                     PCLATH_SHAD     equ	4071	;# 
  1940     0FE8                     FSR0L_SHAD      equ	4072	;# 
  1941     0FE9                     FSR0H_SHAD      equ	4073	;# 
  1942     0FEA                     FSR1L_SHAD      equ	4074	;# 
  1943     0FEB                     FSR1H_SHAD      equ	4075	;# 
  1944     0FED                     STKPTR          equ	4077	;# 
  1945     0FEE                     TOSL            equ	4078	;# 
  1946     0FEF                     TOSH            equ	4079	;# 
  1947     0000                     INDF0           equ	0	;# 
  1948     0001                     INDF1           equ	1	;# 
  1949     0002                     PCL             equ	2	;# 
  1950     0003                     STATUS          equ	3	;# 
  1951     0004                     FSR0L           equ	4	;# 
  1952     0005                     FSR0H           equ	5	;# 
  1953     0006                     FSR1L           equ	6	;# 
  1954     0007                     FSR1H           equ	7	;# 
  1955     0008                     BSR             equ	8	;# 
  1956     0009                     WREG            equ	9	;# 
  1957     000A                     PCLATH          equ	10	;# 
  1958     000B                     INTCON          equ	11	;# 
  1959     000C                     PORTA           equ	12	;# 
  1960     000D                     PORTB           equ	13	;# 
  1961     000E                     PORTC           equ	14	;# 
  1962     0010                     PIR0            equ	16	;# 
  1963     0011                     PIR1            equ	17	;# 
  1964     0012                     PIR2            equ	18	;# 
  1965     0013                     PIR3            equ	19	;# 
  1966     0014                     PIR4            equ	20	;# 
  1967     0015                     TMR0L           equ	21	;# 
  1968     0015                     TMR0            equ	21	;# 
  1969     0016                     TMR0H           equ	22	;# 
  1970     0016                     PR0             equ	22	;# 
  1971     0017                     T0CON0          equ	23	;# 
  1972     0018                     T0CON1          equ	24	;# 
  1973     0019                     TMR1            equ	25	;# 
  1974     0019                     TMR1L           equ	25	;# 
  1975     001A                     TMR1H           equ	26	;# 
  1976     001B                     T1CON           equ	27	;# 
  1977     001C                     T1GCON          equ	28	;# 
  1978     001D                     TMR2            equ	29	;# 
  1979     001E                     PR2             equ	30	;# 
  1980     001F                     T2CON           equ	31	;# 
  1981     008C                     TRISA           equ	140	;# 
  1982     008D                     TRISB           equ	141	;# 
  1983     008E                     TRISC           equ	142	;# 
  1984     0090                     PIE0            equ	144	;# 
  1985     0091                     PIE1            equ	145	;# 
  1986     0092                     PIE2            equ	146	;# 
  1987     0093                     PIE3            equ	147	;# 
  1988     0094                     PIE4            equ	148	;# 
  1989     0097                     WDTCON          equ	151	;# 
  1990     009B                     ADRES           equ	155	;# 
  1991     009B                     ADRESL          equ	155	;# 
  1992     009C                     ADRESH          equ	156	;# 
  1993     009D                     ADCON0          equ	157	;# 
  1994     009E                     ADCON1          equ	158	;# 
  1995     009F                     ADACT           equ	159	;# 
  1996     010C                     LATA            equ	268	;# 
  1997     010D                     LATB            equ	269	;# 
  1998     010E                     LATC            equ	270	;# 
  1999     0111                     CM1CON0         equ	273	;# 
  2000     0112                     CM1CON1         equ	274	;# 
  2001     0113                     CM2CON0         equ	275	;# 
  2002     0114                     CM2CON1         equ	276	;# 
  2003     0115                     CMOUT           equ	277	;# 
  2004     0116                     BORCON          equ	278	;# 
  2005     0117                     FVRCON          equ	279	;# 
  2006     0118                     DACCON0         equ	280	;# 
  2007     0119                     DACCON1         equ	281	;# 
  2008     018C                     ANSELA          equ	396	;# 
  2009     018D                     ANSELB          equ	397	;# 
  2010     018E                     ANSELC          equ	398	;# 
  2011     0197                     VREGCON         equ	407	;# 
  2012     0199                     RC1REG          equ	409	;# 
  2013     0199                     RCREG           equ	409	;# 
  2014     0199                     RCREG1          equ	409	;# 
  2015     019A                     TX1REG          equ	410	;# 
  2016     019A                     TXREG1          equ	410	;# 
  2017     019A                     TXREG           equ	410	;# 
  2018     019B                     SP1BRG          equ	411	;# 
  2019     019B                     SPBRG           equ	411	;# 
  2020     019B                     SP1BRGL         equ	411	;# 
  2021     019B                     SPBRG1          equ	411	;# 
  2022     019B                     SPBRGL          equ	411	;# 
  2023     019C                     SP1BRGH         equ	412	;# 
  2024     019C                     SPBRGH          equ	412	;# 
  2025     019C                     SPBRGH1         equ	412	;# 
  2026     019D                     RC1STA          equ	413	;# 
  2027     019D                     RCSTA1          equ	413	;# 
  2028     019D                     RCSTA           equ	413	;# 
  2029     019E                     TX1STA          equ	414	;# 
  2030     019E                     TXSTA1          equ	414	;# 
  2031     019E                     TXSTA           equ	414	;# 
  2032     019F                     BAUD1CON        equ	415	;# 
  2033     019F                     BAUDCON1        equ	415	;# 
  2034     019F                     BAUDCTL1        equ	415	;# 
  2035     019F                     BAUDCON         equ	415	;# 
  2036     019F                     BAUDCTL         equ	415	;# 
  2037     020C                     WPUA            equ	524	;# 
  2038     020D                     WPUB            equ	525	;# 
  2039     020E                     WPUC            equ	526	;# 
  2040     0211                     SSP1BUF         equ	529	;# 
  2041     0211                     SSPBUF          equ	529	;# 
  2042     0212                     SSP1ADD         equ	530	;# 
  2043     0212                     SSPADD          equ	530	;# 
  2044     0213                     SSP1MSK         equ	531	;# 
  2045     0213                     SSPMSK          equ	531	;# 
  2046     0214                     SSP1STAT        equ	532	;# 
  2047     0214                     SSPSTAT         equ	532	;# 
  2048     0215                     SSP1CON1        equ	533	;# 
  2049     0215                     SSPCON          equ	533	;# 
  2050     0215                     SSPCON1         equ	533	;# 
  2051     0215                     SSP1CON         equ	533	;# 
  2052     0216                     SSP1CON2        equ	534	;# 
  2053     0216                     SSPCON2         equ	534	;# 
  2054     0217                     SSP1CON3        equ	535	;# 
  2055     0217                     SSPCON3         equ	535	;# 
  2056     0219                     SSP2BUF         equ	537	;# 
  2057     021A                     SSP2ADD         equ	538	;# 
  2058     021B                     SSP2MSK         equ	539	;# 
  2059     021C                     SSP2STAT        equ	540	;# 
  2060     021D                     SSP2CON1        equ	541	;# 
  2061     021D                     SSP2CON         equ	541	;# 
  2062     021E                     SSP2CON2        equ	542	;# 
  2063     021F                     SSP2CON3        equ	543	;# 
  2064     028C                     ODCONA          equ	652	;# 
  2065     028D                     ODCONB          equ	653	;# 
  2066     028E                     ODCONC          equ	654	;# 
  2067     0291                     CCPR1           equ	657	;# 
  2068     0291                     CCPR1L          equ	657	;# 
  2069     0292                     CCPR1H          equ	658	;# 
  2070     0293                     CCP1CON         equ	659	;# 
  2071     0294                     CCP1CAP         equ	660	;# 
  2072     0295                     CCPR2           equ	661	;# 
  2073     0295                     CCPR2L          equ	661	;# 
  2074     0296                     CCPR2H          equ	662	;# 
  2075     0297                     CCP2CON         equ	663	;# 
  2076     0298                     CCP2CAP         equ	664	;# 
  2077     029F                     CCPTMRS         equ	671	;# 
  2078     030C                     SLRCONA         equ	780	;# 
  2079     030D                     SLRCONB         equ	781	;# 
  2080     030E                     SLRCONC         equ	782	;# 
  2081     0311                     CCPR3           equ	785	;# 
  2082     0311                     CCPR3L          equ	785	;# 
  2083     0312                     CCPR3H          equ	786	;# 
  2084     0313                     CCP3CON         equ	787	;# 
  2085     0314                     CCP3CAP         equ	788	;# 
  2086     0315                     CCPR4           equ	789	;# 
  2087     0315                     CCPR4L          equ	789	;# 
  2088     0316                     CCPR4H          equ	790	;# 
  2089     0317                     CCP4CON         equ	791	;# 
  2090     0318                     CCP4CAP         equ	792	;# 
  2091     038C                     INLVLA          equ	908	;# 
  2092     038D                     INLVLB          equ	909	;# 
  2093     038E                     INLVLC          equ	910	;# 
  2094     0391                     IOCAP           equ	913	;# 
  2095     0392                     IOCAN           equ	914	;# 
  2096     0393                     IOCAF           equ	915	;# 
  2097     0394                     IOCBP           equ	916	;# 
  2098     0395                     IOCBN           equ	917	;# 
  2099     0396                     IOCBF           equ	918	;# 
  2100     0397                     IOCCP           equ	919	;# 
  2101     0398                     IOCCN           equ	920	;# 
  2102     0399                     IOCCF           equ	921	;# 
  2103     039A                     CLKRCON         equ	922	;# 
  2104     039C                     MDCON           equ	924	;# 
  2105     039D                     MDSRC           equ	925	;# 
  2106     039E                     MDCARH          equ	926	;# 
  2107     039F                     MDCARL          equ	927	;# 
  2108     0411                     TMR3            equ	1041	;# 
  2109     0411                     TMR3L           equ	1041	;# 
  2110     0412                     TMR3H           equ	1042	;# 
  2111     0413                     T3CON           equ	1043	;# 
  2112     0414                     T3GCON          equ	1044	;# 
  2113     0415                     TMR4            equ	1045	;# 
  2114     0416                     PR4             equ	1046	;# 
  2115     0417                     T4CON           equ	1047	;# 
  2116     0418                     TMR5            equ	1048	;# 
  2117     0418                     TMR5L           equ	1048	;# 
  2118     0419                     TMR5H           equ	1049	;# 
  2119     041A                     T5CON           equ	1050	;# 
  2120     041B                     T5GCON          equ	1051	;# 
  2121     041C                     TMR6            equ	1052	;# 
  2122     041D                     PR6             equ	1053	;# 
  2123     041E                     T6CON           equ	1054	;# 
  2124     041F                     CCDCON          equ	1055	;# 
  2125     0498                     NCO1ACC         equ	1176	;# 
  2126     0498                     NCO1ACCL        equ	1176	;# 
  2127     0499                     NCO1ACCH        equ	1177	;# 
  2128     049A                     NCO1ACCU        equ	1178	;# 
  2129     049B                     NCO1INC         equ	1179	;# 
  2130     049B                     NCO1INCL        equ	1179	;# 
  2131     049C                     NCO1INCH        equ	1180	;# 
  2132     049D                     NCO1INCU        equ	1181	;# 
  2133     049E                     NCO1CON         equ	1182	;# 
  2134     049F                     NCO1CLK         equ	1183	;# 
  2135     0617                     PWM5DCL         equ	1559	;# 
  2136     0618                     PWM5DCH         equ	1560	;# 
  2137     0619                     PWM5CON         equ	1561	;# 
  2138     0619                     PWM5CON0        equ	1561	;# 
  2139     061A                     PWM6DCL         equ	1562	;# 
  2140     061B                     PWM6DCH         equ	1563	;# 
  2141     061C                     PWM6CON         equ	1564	;# 
  2142     061C                     PWM6CON0        equ	1564	;# 
  2143     061F                     PWMTMRS         equ	1567	;# 
  2144     0691                     CWG1CLKCON      equ	1681	;# 
  2145     0692                     CWG1DAT         equ	1682	;# 
  2146     0693                     CWG1DBR         equ	1683	;# 
  2147     0694                     CWG1DBF         equ	1684	;# 
  2148     0695                     CWG1CON0        equ	1685	;# 
  2149     0696                     CWG1CON1        equ	1686	;# 
  2150     0697                     CWG1AS0         equ	1687	;# 
  2151     0698                     CWG1AS1         equ	1688	;# 
  2152     0699                     CWG1STR         equ	1689	;# 
  2153     0711                     CWG2CLKCON      equ	1809	;# 
  2154     0712                     CWG2DAT         equ	1810	;# 
  2155     0713                     CWG2DBR         equ	1811	;# 
  2156     0714                     CWG2DBF         equ	1812	;# 
  2157     0715                     CWG2CON0        equ	1813	;# 
  2158     0716                     CWG2CON1        equ	1814	;# 
  2159     0717                     CWG2AS0         equ	1815	;# 
  2160     0718                     CWG2AS1         equ	1816	;# 
  2161     0719                     CWG2STR         equ	1817	;# 
  2162     0891                     NVMADR          equ	2193	;# 
  2163     0891                     EEADR           equ	2193	;# 
  2164     0891                     PMADR           equ	2193	;# 
  2165     0891                     NVMADRL         equ	2193	;# 
  2166     0891                     EEADRL          equ	2193	;# 
  2167     0891                     PMADRL          equ	2193	;# 
  2168     0892                     NVMADRH         equ	2194	;# 
  2169     0892                     EEADRH          equ	2194	;# 
  2170     0892                     PMADRH          equ	2194	;# 
  2171     0893                     NVMDAT          equ	2195	;# 
  2172     0893                     EEDAT           equ	2195	;# 
  2173     0893                     PMDAT           equ	2195	;# 
  2174     0893                     NVMDATL         equ	2195	;# 
  2175     0893                     EEDATL          equ	2195	;# 
  2176     0893                     PMDATL          equ	2195	;# 
  2177     0894                     NVMDATH         equ	2196	;# 
  2178     0894                     EEDATH          equ	2196	;# 
  2179     0894                     PMDATH          equ	2196	;# 
  2180     0895                     NVMCON1         equ	2197	;# 
  2181     0895                     EECON1          equ	2197	;# 
  2182     0895                     PMCON1          equ	2197	;# 
  2183     0896                     NVMCON2         equ	2198	;# 
  2184     0896                     EECON2          equ	2198	;# 
  2185     0896                     PMCON2          equ	2198	;# 
  2186     089B                     PCON0           equ	2203	;# 
  2187     0911                     PMD0            equ	2321	;# 
  2188     0912                     PMD1            equ	2322	;# 
  2189     0913                     PMD2            equ	2323	;# 
  2190     0914                     PMD3            equ	2324	;# 
  2191     0915                     PMD4            equ	2325	;# 
  2192     0916                     PMD5            equ	2326	;# 
  2193     0918                     CPUDOZE         equ	2328	;# 
  2194     0919                     OSCCON1         equ	2329	;# 
  2195     091A                     OSCCON2         equ	2330	;# 
  2196     091B                     OSCCON3         equ	2331	;# 
  2197     091C                     OSCSTAT1        equ	2332	;# 
  2198     091D                     OSCEN           equ	2333	;# 
  2199     091E                     OSCTUNE         equ	2334	;# 
  2200     091F                     OSCFRQ          equ	2335	;# 
  2201     0E0F                     PPSLOCK         equ	3599	;# 
  2202     0E10                     INTPPS          equ	3600	;# 
  2203     0E11                     T0CKIPPS        equ	3601	;# 
  2204     0E12                     T1CKIPPS        equ	3602	;# 
  2205     0E13                     T1GPPS          equ	3603	;# 
  2206     0E14                     CCP1PPS         equ	3604	;# 
  2207     0E15                     CCP2PPS         equ	3605	;# 
  2208     0E16                     CCP3PPS         equ	3606	;# 
  2209     0E17                     CCP4PPS         equ	3607	;# 
  2210     0E18                     CWG1PPS         equ	3608	;# 
  2211     0E19                     CWG2PPS         equ	3609	;# 
  2212     0E1A                     MDCIN1PPS       equ	3610	;# 
  2213     0E1B                     MDCIN2PPS       equ	3611	;# 
  2214     0E1C                     MDMINPPS        equ	3612	;# 
  2215     0E1D                     SSP2CLKPPS      equ	3613	;# 
  2216     0E1E                     SSP2DATPPS      equ	3614	;# 
  2217     0E1F                     SSP2SSPPS       equ	3615	;# 
  2218     0E20                     SSP1CLKPPS      equ	3616	;# 
  2219     0E21                     SSP1DATPPS      equ	3617	;# 
  2220     0E22                     SSP1SSPPS       equ	3618	;# 
  2221     0E24                     RXPPS           equ	3620	;# 
  2222     0E25                     TXPPS           equ	3621	;# 
  2223     0E28                     CLCIN0PPS       equ	3624	;# 
  2224     0E29                     CLCIN1PPS       equ	3625	;# 
  2225     0E2A                     CLCIN2PPS       equ	3626	;# 
  2226     0E2B                     CLCIN3PPS       equ	3627	;# 
  2227     0E2C                     T3CKIPPS        equ	3628	;# 
  2228     0E2D                     T3GPPS          equ	3629	;# 
  2229     0E2E                     T5CKIPPS        equ	3630	;# 
  2230     0E2F                     T5GPPS          equ	3631	;# 
  2231     0E90                     RA0PPS          equ	3728	;# 
  2232     0E91                     RA1PPS          equ	3729	;# 
  2233     0E92                     RA2PPS          equ	3730	;# 
  2234     0E94                     RA4PPS          equ	3732	;# 
  2235     0E95                     RA5PPS          equ	3733	;# 
  2236     0E9C                     RB4PPS          equ	3740	;# 
  2237     0E9D                     RB5PPS          equ	3741	;# 
  2238     0E9E                     RB6PPS          equ	3742	;# 
  2239     0E9F                     RB7PPS          equ	3743	;# 
  2240     0EA0                     RC0PPS          equ	3744	;# 
  2241     0EA1                     RC1PPS          equ	3745	;# 
  2242     0EA2                     RC2PPS          equ	3746	;# 
  2243     0EA3                     RC3PPS          equ	3747	;# 
  2244     0EA4                     RC4PPS          equ	3748	;# 
  2245     0EA5                     RC5PPS          equ	3749	;# 
  2246     0EA6                     RC6PPS          equ	3750	;# 
  2247     0EA7                     RC7PPS          equ	3751	;# 
  2248     0F0F                     CLCDATA         equ	3855	;# 
  2249     0F10                     CLC1CON         equ	3856	;# 
  2250     0F11                     CLC1POL         equ	3857	;# 
  2251     0F12                     CLC1SEL0        equ	3858	;# 
  2252     0F13                     CLC1SEL1        equ	3859	;# 
  2253     0F14                     CLC1SEL2        equ	3860	;# 
  2254     0F15                     CLC1SEL3        equ	3861	;# 
  2255     0F16                     CLC1GLS0        equ	3862	;# 
  2256     0F17                     CLC1GLS1        equ	3863	;# 
  2257     0F18                     CLC1GLS2        equ	3864	;# 
  2258     0F19                     CLC1GLS3        equ	3865	;# 
  2259     0F1A                     CLC2CON         equ	3866	;# 
  2260     0F1B                     CLC2POL         equ	3867	;# 
  2261     0F1C                     CLC2SEL0        equ	3868	;# 
  2262     0F1D                     CLC2SEL1        equ	3869	;# 
  2263     0F1E                     CLC2SEL2        equ	3870	;# 
  2264     0F1F                     CLC2SEL3        equ	3871	;# 
  2265     0F20                     CLC2GLS0        equ	3872	;# 
  2266     0F21                     CLC2GLS1        equ	3873	;# 
  2267     0F22                     CLC2GLS2        equ	3874	;# 
  2268     0F23                     CLC2GLS3        equ	3875	;# 
  2269     0F24                     CLC3CON         equ	3876	;# 
  2270     0F25                     CLC3POL         equ	3877	;# 
  2271     0F26                     CLC3SEL0        equ	3878	;# 
  2272     0F27                     CLC3SEL1        equ	3879	;# 
  2273     0F28                     CLC3SEL2        equ	3880	;# 
  2274     0F29                     CLC3SEL3        equ	3881	;# 
  2275     0F2A                     CLC3GLS0        equ	3882	;# 
  2276     0F2B                     CLC3GLS1        equ	3883	;# 
  2277     0F2C                     CLC3GLS2        equ	3884	;# 
  2278     0F2D                     CLC3GLS3        equ	3885	;# 
  2279     0F2E                     CLC4CON         equ	3886	;# 
  2280     0F2F                     CLC4POL         equ	3887	;# 
  2281     0F30                     CLC4SEL0        equ	3888	;# 
  2282     0F31                     CLC4SEL1        equ	3889	;# 
  2283     0F32                     CLC4SEL2        equ	3890	;# 
  2284     0F33                     CLC4SEL3        equ	3891	;# 
  2285     0F34                     CLC4GLS0        equ	3892	;# 
  2286     0F35                     CLC4GLS1        equ	3893	;# 
  2287     0F36                     CLC4GLS2        equ	3894	;# 
  2288     0F37                     CLC4GLS3        equ	3895	;# 
  2289     0FE4                     STATUS_SHAD     equ	4068	;# 
  2290     0FE5                     WREG_SHAD       equ	4069	;# 
  2291     0FE6                     BSR_SHAD        equ	4070	;# 
  2292     0FE7                     PCLATH_SHAD     equ	4071	;# 
  2293     0FE8                     FSR0L_SHAD      equ	4072	;# 
  2294     0FE9                     FSR0H_SHAD      equ	4073	;# 
  2295     0FEA                     FSR1L_SHAD      equ	4074	;# 
  2296     0FEB                     FSR1H_SHAD      equ	4075	;# 
  2297     0FED                     STKPTR          equ	4077	;# 
  2298     0FEE                     TOSL            equ	4078	;# 
  2299     0FEF                     TOSH            equ	4079	;# 
  2300     0000                     INDF0           equ	0	;# 
  2301     0001                     INDF1           equ	1	;# 
  2302     0002                     PCL             equ	2	;# 
  2303     0003                     STATUS          equ	3	;# 
  2304     0004                     FSR0L           equ	4	;# 
  2305     0005                     FSR0H           equ	5	;# 
  2306     0006                     FSR1L           equ	6	;# 
  2307     0007                     FSR1H           equ	7	;# 
  2308     0008                     BSR             equ	8	;# 
  2309     0009                     WREG            equ	9	;# 
  2310     000A                     PCLATH          equ	10	;# 
  2311     000B                     INTCON          equ	11	;# 
  2312     000C                     PORTA           equ	12	;# 
  2313     000D                     PORTB           equ	13	;# 
  2314     000E                     PORTC           equ	14	;# 
  2315     0010                     PIR0            equ	16	;# 
  2316     0011                     PIR1            equ	17	;# 
  2317     0012                     PIR2            equ	18	;# 
  2318     0013                     PIR3            equ	19	;# 
  2319     0014                     PIR4            equ	20	;# 
  2320     0015                     TMR0L           equ	21	;# 
  2321     0015                     TMR0            equ	21	;# 
  2322     0016                     TMR0H           equ	22	;# 
  2323     0016                     PR0             equ	22	;# 
  2324     0017                     T0CON0          equ	23	;# 
  2325     0018                     T0CON1          equ	24	;# 
  2326     0019                     TMR1            equ	25	;# 
  2327     0019                     TMR1L           equ	25	;# 
  2328     001A                     TMR1H           equ	26	;# 
  2329     001B                     T1CON           equ	27	;# 
  2330     001C                     T1GCON          equ	28	;# 
  2331     001D                     TMR2            equ	29	;# 
  2332     001E                     PR2             equ	30	;# 
  2333     001F                     T2CON           equ	31	;# 
  2334     008C                     TRISA           equ	140	;# 
  2335     008D                     TRISB           equ	141	;# 
  2336     008E                     TRISC           equ	142	;# 
  2337     0090                     PIE0            equ	144	;# 
  2338     0091                     PIE1            equ	145	;# 
  2339     0092                     PIE2            equ	146	;# 
  2340     0093                     PIE3            equ	147	;# 
  2341     0094                     PIE4            equ	148	;# 
  2342     0097                     WDTCON          equ	151	;# 
  2343     009B                     ADRES           equ	155	;# 
  2344     009B                     ADRESL          equ	155	;# 
  2345     009C                     ADRESH          equ	156	;# 
  2346     009D                     ADCON0          equ	157	;# 
  2347     009E                     ADCON1          equ	158	;# 
  2348     009F                     ADACT           equ	159	;# 
  2349     010C                     LATA            equ	268	;# 
  2350     010D                     LATB            equ	269	;# 
  2351     010E                     LATC            equ	270	;# 
  2352     0111                     CM1CON0         equ	273	;# 
  2353     0112                     CM1CON1         equ	274	;# 
  2354     0113                     CM2CON0         equ	275	;# 
  2355     0114                     CM2CON1         equ	276	;# 
  2356     0115                     CMOUT           equ	277	;# 
  2357     0116                     BORCON          equ	278	;# 
  2358     0117                     FVRCON          equ	279	;# 
  2359     0118                     DACCON0         equ	280	;# 
  2360     0119                     DACCON1         equ	281	;# 
  2361     018C                     ANSELA          equ	396	;# 
  2362     018D                     ANSELB          equ	397	;# 
  2363     018E                     ANSELC          equ	398	;# 
  2364     0197                     VREGCON         equ	407	;# 
  2365     0199                     RC1REG          equ	409	;# 
  2366     0199                     RCREG           equ	409	;# 
  2367     0199                     RCREG1          equ	409	;# 
  2368     019A                     TX1REG          equ	410	;# 
  2369     019A                     TXREG1          equ	410	;# 
  2370     019A                     TXREG           equ	410	;# 
  2371     019B                     SP1BRG          equ	411	;# 
  2372     019B                     SPBRG           equ	411	;# 
  2373     019B                     SP1BRGL         equ	411	;# 
  2374     019B                     SPBRG1          equ	411	;# 
  2375     019B                     SPBRGL          equ	411	;# 
  2376     019C                     SP1BRGH         equ	412	;# 
  2377     019C                     SPBRGH          equ	412	;# 
  2378     019C                     SPBRGH1         equ	412	;# 
  2379     019D                     RC1STA          equ	413	;# 
  2380     019D                     RCSTA1          equ	413	;# 
  2381     019D                     RCSTA           equ	413	;# 
  2382     019E                     TX1STA          equ	414	;# 
  2383     019E                     TXSTA1          equ	414	;# 
  2384     019E                     TXSTA           equ	414	;# 
  2385     019F                     BAUD1CON        equ	415	;# 
  2386     019F                     BAUDCON1        equ	415	;# 
  2387     019F                     BAUDCTL1        equ	415	;# 
  2388     019F                     BAUDCON         equ	415	;# 
  2389     019F                     BAUDCTL         equ	415	;# 
  2390     020C                     WPUA            equ	524	;# 
  2391     020D                     WPUB            equ	525	;# 
  2392     020E                     WPUC            equ	526	;# 
  2393     0211                     SSP1BUF         equ	529	;# 
  2394     0211                     SSPBUF          equ	529	;# 
  2395     0212                     SSP1ADD         equ	530	;# 
  2396     0212                     SSPADD          equ	530	;# 
  2397     0213                     SSP1MSK         equ	531	;# 
  2398     0213                     SSPMSK          equ	531	;# 
  2399     0214                     SSP1STAT        equ	532	;# 
  2400     0214                     SSPSTAT         equ	532	;# 
  2401     0215                     SSP1CON1        equ	533	;# 
  2402     0215                     SSPCON          equ	533	;# 
  2403     0215                     SSPCON1         equ	533	;# 
  2404     0215                     SSP1CON         equ	533	;# 
  2405     0216                     SSP1CON2        equ	534	;# 
  2406     0216                     SSPCON2         equ	534	;# 
  2407     0217                     SSP1CON3        equ	535	;# 
  2408     0217                     SSPCON3         equ	535	;# 
  2409     0219                     SSP2BUF         equ	537	;# 
  2410     021A                     SSP2ADD         equ	538	;# 
  2411     021B                     SSP2MSK         equ	539	;# 
  2412     021C                     SSP2STAT        equ	540	;# 
  2413     021D                     SSP2CON1        equ	541	;# 
  2414     021D                     SSP2CON         equ	541	;# 
  2415     021E                     SSP2CON2        equ	542	;# 
  2416     021F                     SSP2CON3        equ	543	;# 
  2417     028C                     ODCONA          equ	652	;# 
  2418     028D                     ODCONB          equ	653	;# 
  2419     028E                     ODCONC          equ	654	;# 
  2420     0291                     CCPR1           equ	657	;# 
  2421     0291                     CCPR1L          equ	657	;# 
  2422     0292                     CCPR1H          equ	658	;# 
  2423     0293                     CCP1CON         equ	659	;# 
  2424     0294                     CCP1CAP         equ	660	;# 
  2425     0295                     CCPR2           equ	661	;# 
  2426     0295                     CCPR2L          equ	661	;# 
  2427     0296                     CCPR2H          equ	662	;# 
  2428     0297                     CCP2CON         equ	663	;# 
  2429     0298                     CCP2CAP         equ	664	;# 
  2430     029F                     CCPTMRS         equ	671	;# 
  2431     030C                     SLRCONA         equ	780	;# 
  2432     030D                     SLRCONB         equ	781	;# 
  2433     030E                     SLRCONC         equ	782	;# 
  2434     0311                     CCPR3           equ	785	;# 
  2435     0311                     CCPR3L          equ	785	;# 
  2436     0312                     CCPR3H          equ	786	;# 
  2437     0313                     CCP3CON         equ	787	;# 
  2438     0314                     CCP3CAP         equ	788	;# 
  2439     0315                     CCPR4           equ	789	;# 
  2440     0315                     CCPR4L          equ	789	;# 
  2441     0316                     CCPR4H          equ	790	;# 
  2442     0317                     CCP4CON         equ	791	;# 
  2443     0318                     CCP4CAP         equ	792	;# 
  2444     038C                     INLVLA          equ	908	;# 
  2445     038D                     INLVLB          equ	909	;# 
  2446     038E                     INLVLC          equ	910	;# 
  2447     0391                     IOCAP           equ	913	;# 
  2448     0392                     IOCAN           equ	914	;# 
  2449     0393                     IOCAF           equ	915	;# 
  2450     0394                     IOCBP           equ	916	;# 
  2451     0395                     IOCBN           equ	917	;# 
  2452     0396                     IOCBF           equ	918	;# 
  2453     0397                     IOCCP           equ	919	;# 
  2454     0398                     IOCCN           equ	920	;# 
  2455     0399                     IOCCF           equ	921	;# 
  2456     039A                     CLKRCON         equ	922	;# 
  2457     039C                     MDCON           equ	924	;# 
  2458     039D                     MDSRC           equ	925	;# 
  2459     039E                     MDCARH          equ	926	;# 
  2460     039F                     MDCARL          equ	927	;# 
  2461     0411                     TMR3            equ	1041	;# 
  2462     0411                     TMR3L           equ	1041	;# 
  2463     0412                     TMR3H           equ	1042	;# 
  2464     0413                     T3CON           equ	1043	;# 
  2465     0414                     T3GCON          equ	1044	;# 
  2466     0415                     TMR4            equ	1045	;# 
  2467     0416                     PR4             equ	1046	;# 
  2468     0417                     T4CON           equ	1047	;# 
  2469     0418                     TMR5            equ	1048	;# 
  2470     0418                     TMR5L           equ	1048	;# 
  2471     0419                     TMR5H           equ	1049	;# 
  2472     041A                     T5CON           equ	1050	;# 
  2473     041B                     T5GCON          equ	1051	;# 
  2474     041C                     TMR6            equ	1052	;# 
  2475     041D                     PR6             equ	1053	;# 
  2476     041E                     T6CON           equ	1054	;# 
  2477     041F                     CCDCON          equ	1055	;# 
  2478     0498                     NCO1ACC         equ	1176	;# 
  2479     0498                     NCO1ACCL        equ	1176	;# 
  2480     0499                     NCO1ACCH        equ	1177	;# 
  2481     049A                     NCO1ACCU        equ	1178	;# 
  2482     049B                     NCO1INC         equ	1179	;# 
  2483     049B                     NCO1INCL        equ	1179	;# 
  2484     049C                     NCO1INCH        equ	1180	;# 
  2485     049D                     NCO1INCU        equ	1181	;# 
  2486     049E                     NCO1CON         equ	1182	;# 
  2487     049F                     NCO1CLK         equ	1183	;# 
  2488     0617                     PWM5DCL         equ	1559	;# 
  2489     0618                     PWM5DCH         equ	1560	;# 
  2490     0619                     PWM5CON         equ	1561	;# 
  2491     0619                     PWM5CON0        equ	1561	;# 
  2492     061A                     PWM6DCL         equ	1562	;# 
  2493     061B                     PWM6DCH         equ	1563	;# 
  2494     061C                     PWM6CON         equ	1564	;# 
  2495     061C                     PWM6CON0        equ	1564	;# 
  2496     061F                     PWMTMRS         equ	1567	;# 
  2497     0691                     CWG1CLKCON      equ	1681	;# 
  2498     0692                     CWG1DAT         equ	1682	;# 
  2499     0693                     CWG1DBR         equ	1683	;# 
  2500     0694                     CWG1DBF         equ	1684	;# 
  2501     0695                     CWG1CON0        equ	1685	;# 
  2502     0696                     CWG1CON1        equ	1686	;# 
  2503     0697                     CWG1AS0         equ	1687	;# 
  2504     0698                     CWG1AS1         equ	1688	;# 
  2505     0699                     CWG1STR         equ	1689	;# 
  2506     0711                     CWG2CLKCON      equ	1809	;# 
  2507     0712                     CWG2DAT         equ	1810	;# 
  2508     0713                     CWG2DBR         equ	1811	;# 
  2509     0714                     CWG2DBF         equ	1812	;# 
  2510     0715                     CWG2CON0        equ	1813	;# 
  2511     0716                     CWG2CON1        equ	1814	;# 
  2512     0717                     CWG2AS0         equ	1815	;# 
  2513     0718                     CWG2AS1         equ	1816	;# 
  2514     0719                     CWG2STR         equ	1817	;# 
  2515     0891                     NVMADR          equ	2193	;# 
  2516     0891                     EEADR           equ	2193	;# 
  2517     0891                     PMADR           equ	2193	;# 
  2518     0891                     NVMADRL         equ	2193	;# 
  2519     0891                     EEADRL          equ	2193	;# 
  2520     0891                     PMADRL          equ	2193	;# 
  2521     0892                     NVMADRH         equ	2194	;# 
  2522     0892                     EEADRH          equ	2194	;# 
  2523     0892                     PMADRH          equ	2194	;# 
  2524     0893                     NVMDAT          equ	2195	;# 
  2525     0893                     EEDAT           equ	2195	;# 
  2526     0893                     PMDAT           equ	2195	;# 
  2527     0893                     NVMDATL         equ	2195	;# 
  2528     0893                     EEDATL          equ	2195	;# 
  2529     0893                     PMDATL          equ	2195	;# 
  2530     0894                     NVMDATH         equ	2196	;# 
  2531     0894                     EEDATH          equ	2196	;# 
  2532     0894                     PMDATH          equ	2196	;# 
  2533     0895                     NVMCON1         equ	2197	;# 
  2534     0895                     EECON1          equ	2197	;# 
  2535     0895                     PMCON1          equ	2197	;# 
  2536     0896                     NVMCON2         equ	2198	;# 
  2537     0896                     EECON2          equ	2198	;# 
  2538     0896                     PMCON2          equ	2198	;# 
  2539     089B                     PCON0           equ	2203	;# 
  2540     0911                     PMD0            equ	2321	;# 
  2541     0912                     PMD1            equ	2322	;# 
  2542     0913                     PMD2            equ	2323	;# 
  2543     0914                     PMD3            equ	2324	;# 
  2544     0915                     PMD4            equ	2325	;# 
  2545     0916                     PMD5            equ	2326	;# 
  2546     0918                     CPUDOZE         equ	2328	;# 
  2547     0919                     OSCCON1         equ	2329	;# 
  2548     091A                     OSCCON2         equ	2330	;# 
  2549     091B                     OSCCON3         equ	2331	;# 
  2550     091C                     OSCSTAT1        equ	2332	;# 
  2551     091D                     OSCEN           equ	2333	;# 
  2552     091E                     OSCTUNE         equ	2334	;# 
  2553     091F                     OSCFRQ          equ	2335	;# 
  2554     0E0F                     PPSLOCK         equ	3599	;# 
  2555     0E10                     INTPPS          equ	3600	;# 
  2556     0E11                     T0CKIPPS        equ	3601	;# 
  2557     0E12                     T1CKIPPS        equ	3602	;# 
  2558     0E13                     T1GPPS          equ	3603	;# 
  2559     0E14                     CCP1PPS         equ	3604	;# 
  2560     0E15                     CCP2PPS         equ	3605	;# 
  2561     0E16                     CCP3PPS         equ	3606	;# 
  2562     0E17                     CCP4PPS         equ	3607	;# 
  2563     0E18                     CWG1PPS         equ	3608	;# 
  2564     0E19                     CWG2PPS         equ	3609	;# 
  2565     0E1A                     MDCIN1PPS       equ	3610	;# 
  2566     0E1B                     MDCIN2PPS       equ	3611	;# 
  2567     0E1C                     MDMINPPS        equ	3612	;# 
  2568     0E1D                     SSP2CLKPPS      equ	3613	;# 
  2569     0E1E                     SSP2DATPPS      equ	3614	;# 
  2570     0E1F                     SSP2SSPPS       equ	3615	;# 
  2571     0E20                     SSP1CLKPPS      equ	3616	;# 
  2572     0E21                     SSP1DATPPS      equ	3617	;# 
  2573     0E22                     SSP1SSPPS       equ	3618	;# 
  2574     0E24                     RXPPS           equ	3620	;# 
  2575     0E25                     TXPPS           equ	3621	;# 
  2576     0E28                     CLCIN0PPS       equ	3624	;# 
  2577     0E29                     CLCIN1PPS       equ	3625	;# 
  2578     0E2A                     CLCIN2PPS       equ	3626	;# 
  2579     0E2B                     CLCIN3PPS       equ	3627	;# 
  2580     0E2C                     T3CKIPPS        equ	3628	;# 
  2581     0E2D                     T3GPPS          equ	3629	;# 
  2582     0E2E                     T5CKIPPS        equ	3630	;# 
  2583     0E2F                     T5GPPS          equ	3631	;# 
  2584     0E90                     RA0PPS          equ	3728	;# 
  2585     0E91                     RA1PPS          equ	3729	;# 
  2586     0E92                     RA2PPS          equ	3730	;# 
  2587     0E94                     RA4PPS          equ	3732	;# 
  2588     0E95                     RA5PPS          equ	3733	;# 
  2589     0E9C                     RB4PPS          equ	3740	;# 
  2590     0E9D                     RB5PPS          equ	3741	;# 
  2591     0E9E                     RB6PPS          equ	3742	;# 
  2592     0E9F                     RB7PPS          equ	3743	;# 
  2593     0EA0                     RC0PPS          equ	3744	;# 
  2594     0EA1                     RC1PPS          equ	3745	;# 
  2595     0EA2                     RC2PPS          equ	3746	;# 
  2596     0EA3                     RC3PPS          equ	3747	;# 
  2597     0EA4                     RC4PPS          equ	3748	;# 
  2598     0EA5                     RC5PPS          equ	3749	;# 
  2599     0EA6                     RC6PPS          equ	3750	;# 
  2600     0EA7                     RC7PPS          equ	3751	;# 
  2601     0F0F                     CLCDATA         equ	3855	;# 
  2602     0F10                     CLC1CON         equ	3856	;# 
  2603     0F11                     CLC1POL         equ	3857	;# 
  2604     0F12                     CLC1SEL0        equ	3858	;# 
  2605     0F13                     CLC1SEL1        equ	3859	;# 
  2606     0F14                     CLC1SEL2        equ	3860	;# 
  2607     0F15                     CLC1SEL3        equ	3861	;# 
  2608     0F16                     CLC1GLS0        equ	3862	;# 
  2609     0F17                     CLC1GLS1        equ	3863	;# 
  2610     0F18                     CLC1GLS2        equ	3864	;# 
  2611     0F19                     CLC1GLS3        equ	3865	;# 
  2612     0F1A                     CLC2CON         equ	3866	;# 
  2613     0F1B                     CLC2POL         equ	3867	;# 
  2614     0F1C                     CLC2SEL0        equ	3868	;# 
  2615     0F1D                     CLC2SEL1        equ	3869	;# 
  2616     0F1E                     CLC2SEL2        equ	3870	;# 
  2617     0F1F                     CLC2SEL3        equ	3871	;# 
  2618     0F20                     CLC2GLS0        equ	3872	;# 
  2619     0F21                     CLC2GLS1        equ	3873	;# 
  2620     0F22                     CLC2GLS2        equ	3874	;# 
  2621     0F23                     CLC2GLS3        equ	3875	;# 
  2622     0F24                     CLC3CON         equ	3876	;# 
  2623     0F25                     CLC3POL         equ	3877	;# 
  2624     0F26                     CLC3SEL0        equ	3878	;# 
  2625     0F27                     CLC3SEL1        equ	3879	;# 
  2626     0F28                     CLC3SEL2        equ	3880	;# 
  2627     0F29                     CLC3SEL3        equ	3881	;# 
  2628     0F2A                     CLC3GLS0        equ	3882	;# 
  2629     0F2B                     CLC3GLS1        equ	3883	;# 
  2630     0F2C                     CLC3GLS2        equ	3884	;# 
  2631     0F2D                     CLC3GLS3        equ	3885	;# 
  2632     0F2E                     CLC4CON         equ	3886	;# 
  2633     0F2F                     CLC4POL         equ	3887	;# 
  2634     0F30                     CLC4SEL0        equ	3888	;# 
  2635     0F31                     CLC4SEL1        equ	3889	;# 
  2636     0F32                     CLC4SEL2        equ	3890	;# 
  2637     0F33                     CLC4SEL3        equ	3891	;# 
  2638     0F34                     CLC4GLS0        equ	3892	;# 
  2639     0F35                     CLC4GLS1        equ	3893	;# 
  2640     0F36                     CLC4GLS2        equ	3894	;# 
  2641     0F37                     CLC4GLS3        equ	3895	;# 
  2642     0FE4                     STATUS_SHAD     equ	4068	;# 
  2643     0FE5                     WREG_SHAD       equ	4069	;# 
  2644     0FE6                     BSR_SHAD        equ	4070	;# 
  2645     0FE7                     PCLATH_SHAD     equ	4071	;# 
  2646     0FE8                     FSR0L_SHAD      equ	4072	;# 
  2647     0FE9                     FSR0H_SHAD      equ	4073	;# 
  2648     0FEA                     FSR1L_SHAD      equ	4074	;# 
  2649     0FEB                     FSR1H_SHAD      equ	4075	;# 
  2650     0FED                     STKPTR          equ	4077	;# 
  2651     0FEE                     TOSL            equ	4078	;# 
  2652     0FEF                     TOSH            equ	4079	;# 
  2653     0000                     INDF0           equ	0	;# 
  2654     0001                     INDF1           equ	1	;# 
  2655     0002                     PCL             equ	2	;# 
  2656     0003                     STATUS          equ	3	;# 
  2657     0004                     FSR0L           equ	4	;# 
  2658     0005                     FSR0H           equ	5	;# 
  2659     0006                     FSR1L           equ	6	;# 
  2660     0007                     FSR1H           equ	7	;# 
  2661     0008                     BSR             equ	8	;# 
  2662     0009                     WREG            equ	9	;# 
  2663     000A                     PCLATH          equ	10	;# 
  2664     000B                     INTCON          equ	11	;# 
  2665     000C                     PORTA           equ	12	;# 
  2666     000D                     PORTB           equ	13	;# 
  2667     000E                     PORTC           equ	14	;# 
  2668     0010                     PIR0            equ	16	;# 
  2669     0011                     PIR1            equ	17	;# 
  2670     0012                     PIR2            equ	18	;# 
  2671     0013                     PIR3            equ	19	;# 
  2672     0014                     PIR4            equ	20	;# 
  2673     0015                     TMR0L           equ	21	;# 
  2674     0015                     TMR0            equ	21	;# 
  2675     0016                     TMR0H           equ	22	;# 
  2676     0016                     PR0             equ	22	;# 
  2677     0017                     T0CON0          equ	23	;# 
  2678     0018                     T0CON1          equ	24	;# 
  2679     0019                     TMR1            equ	25	;# 
  2680     0019                     TMR1L           equ	25	;# 
  2681     001A                     TMR1H           equ	26	;# 
  2682     001B                     T1CON           equ	27	;# 
  2683     001C                     T1GCON          equ	28	;# 
  2684     001D                     TMR2            equ	29	;# 
  2685     001E                     PR2             equ	30	;# 
  2686     001F                     T2CON           equ	31	;# 
  2687     008C                     TRISA           equ	140	;# 
  2688     008D                     TRISB           equ	141	;# 
  2689     008E                     TRISC           equ	142	;# 
  2690     0090                     PIE0            equ	144	;# 
  2691     0091                     PIE1            equ	145	;# 
  2692     0092                     PIE2            equ	146	;# 
  2693     0093                     PIE3            equ	147	;# 
  2694     0094                     PIE4            equ	148	;# 
  2695     0097                     WDTCON          equ	151	;# 
  2696     009B                     ADRES           equ	155	;# 
  2697     009B                     ADRESL          equ	155	;# 
  2698     009C                     ADRESH          equ	156	;# 
  2699     009D                     ADCON0          equ	157	;# 
  2700     009E                     ADCON1          equ	158	;# 
  2701     009F                     ADACT           equ	159	;# 
  2702     010C                     LATA            equ	268	;# 
  2703     010D                     LATB            equ	269	;# 
  2704     010E                     LATC            equ	270	;# 
  2705     0111                     CM1CON0         equ	273	;# 
  2706     0112                     CM1CON1         equ	274	;# 
  2707     0113                     CM2CON0         equ	275	;# 
  2708     0114                     CM2CON1         equ	276	;# 
  2709     0115                     CMOUT           equ	277	;# 
  2710     0116                     BORCON          equ	278	;# 
  2711     0117                     FVRCON          equ	279	;# 
  2712     0118                     DACCON0         equ	280	;# 
  2713     0119                     DACCON1         equ	281	;# 
  2714     018C                     ANSELA          equ	396	;# 
  2715     018D                     ANSELB          equ	397	;# 
  2716     018E                     ANSELC          equ	398	;# 
  2717     0197                     VREGCON         equ	407	;# 
  2718     0199                     RC1REG          equ	409	;# 
  2719     0199                     RCREG           equ	409	;# 
  2720     0199                     RCREG1          equ	409	;# 
  2721     019A                     TX1REG          equ	410	;# 
  2722     019A                     TXREG1          equ	410	;# 
  2723     019A                     TXREG           equ	410	;# 
  2724     019B                     SP1BRG          equ	411	;# 
  2725     019B                     SPBRG           equ	411	;# 
  2726     019B                     SP1BRGL         equ	411	;# 
  2727     019B                     SPBRG1          equ	411	;# 
  2728     019B                     SPBRGL          equ	411	;# 
  2729     019C                     SP1BRGH         equ	412	;# 
  2730     019C                     SPBRGH          equ	412	;# 
  2731     019C                     SPBRGH1         equ	412	;# 
  2732     019D                     RC1STA          equ	413	;# 
  2733     019D                     RCSTA1          equ	413	;# 
  2734     019D                     RCSTA           equ	413	;# 
  2735     019E                     TX1STA          equ	414	;# 
  2736     019E                     TXSTA1          equ	414	;# 
  2737     019E                     TXSTA           equ	414	;# 
  2738     019F                     BAUD1CON        equ	415	;# 
  2739     019F                     BAUDCON1        equ	415	;# 
  2740     019F                     BAUDCTL1        equ	415	;# 
  2741     019F                     BAUDCON         equ	415	;# 
  2742     019F                     BAUDCTL         equ	415	;# 
  2743     020C                     WPUA            equ	524	;# 
  2744     020D                     WPUB            equ	525	;# 
  2745     020E                     WPUC            equ	526	;# 
  2746     0211                     SSP1BUF         equ	529	;# 
  2747     0211                     SSPBUF          equ	529	;# 
  2748     0212                     SSP1ADD         equ	530	;# 
  2749     0212                     SSPADD          equ	530	;# 
  2750     0213                     SSP1MSK         equ	531	;# 
  2751     0213                     SSPMSK          equ	531	;# 
  2752     0214                     SSP1STAT        equ	532	;# 
  2753     0214                     SSPSTAT         equ	532	;# 
  2754     0215                     SSP1CON1        equ	533	;# 
  2755     0215                     SSPCON          equ	533	;# 
  2756     0215                     SSPCON1         equ	533	;# 
  2757     0215                     SSP1CON         equ	533	;# 
  2758     0216                     SSP1CON2        equ	534	;# 
  2759     0216                     SSPCON2         equ	534	;# 
  2760     0217                     SSP1CON3        equ	535	;# 
  2761     0217                     SSPCON3         equ	535	;# 
  2762     0219                     SSP2BUF         equ	537	;# 
  2763     021A                     SSP2ADD         equ	538	;# 
  2764     021B                     SSP2MSK         equ	539	;# 
  2765     021C                     SSP2STAT        equ	540	;# 
  2766     021D                     SSP2CON1        equ	541	;# 
  2767     021D                     SSP2CON         equ	541	;# 
  2768     021E                     SSP2CON2        equ	542	;# 
  2769     021F                     SSP2CON3        equ	543	;# 
  2770     028C                     ODCONA          equ	652	;# 
  2771     028D                     ODCONB          equ	653	;# 
  2772     028E                     ODCONC          equ	654	;# 
  2773     0291                     CCPR1           equ	657	;# 
  2774     0291                     CCPR1L          equ	657	;# 
  2775     0292                     CCPR1H          equ	658	;# 
  2776     0293                     CCP1CON         equ	659	;# 
  2777     0294                     CCP1CAP         equ	660	;# 
  2778     0295                     CCPR2           equ	661	;# 
  2779     0295                     CCPR2L          equ	661	;# 
  2780     0296                     CCPR2H          equ	662	;# 
  2781     0297                     CCP2CON         equ	663	;# 
  2782     0298                     CCP2CAP         equ	664	;# 
  2783     029F                     CCPTMRS         equ	671	;# 
  2784     030C                     SLRCONA         equ	780	;# 
  2785     030D                     SLRCONB         equ	781	;# 
  2786     030E                     SLRCONC         equ	782	;# 
  2787     0311                     CCPR3           equ	785	;# 
  2788     0311                     CCPR3L          equ	785	;# 
  2789     0312                     CCPR3H          equ	786	;# 
  2790     0313                     CCP3CON         equ	787	;# 
  2791     0314                     CCP3CAP         equ	788	;# 
  2792     0315                     CCPR4           equ	789	;# 
  2793     0315                     CCPR4L          equ	789	;# 
  2794     0316                     CCPR4H          equ	790	;# 
  2795     0317                     CCP4CON         equ	791	;# 
  2796     0318                     CCP4CAP         equ	792	;# 
  2797     038C                     INLVLA          equ	908	;# 
  2798     038D                     INLVLB          equ	909	;# 
  2799     038E                     INLVLC          equ	910	;# 
  2800     0391                     IOCAP           equ	913	;# 
  2801     0392                     IOCAN           equ	914	;# 
  2802     0393                     IOCAF           equ	915	;# 
  2803     0394                     IOCBP           equ	916	;# 
  2804     0395                     IOCBN           equ	917	;# 
  2805     0396                     IOCBF           equ	918	;# 
  2806     0397                     IOCCP           equ	919	;# 
  2807     0398                     IOCCN           equ	920	;# 
  2808     0399                     IOCCF           equ	921	;# 
  2809     039A                     CLKRCON         equ	922	;# 
  2810     039C                     MDCON           equ	924	;# 
  2811     039D                     MDSRC           equ	925	;# 
  2812     039E                     MDCARH          equ	926	;# 
  2813     039F                     MDCARL          equ	927	;# 
  2814     0411                     TMR3            equ	1041	;# 
  2815     0411                     TMR3L           equ	1041	;# 
  2816     0412                     TMR3H           equ	1042	;# 
  2817     0413                     T3CON           equ	1043	;# 
  2818     0414                     T3GCON          equ	1044	;# 
  2819     0415                     TMR4            equ	1045	;# 
  2820     0416                     PR4             equ	1046	;# 
  2821     0417                     T4CON           equ	1047	;# 
  2822     0418                     TMR5            equ	1048	;# 
  2823     0418                     TMR5L           equ	1048	;# 
  2824     0419                     TMR5H           equ	1049	;# 
  2825     041A                     T5CON           equ	1050	;# 
  2826     041B                     T5GCON          equ	1051	;# 
  2827     041C                     TMR6            equ	1052	;# 
  2828     041D                     PR6             equ	1053	;# 
  2829     041E                     T6CON           equ	1054	;# 
  2830     041F                     CCDCON          equ	1055	;# 
  2831     0498                     NCO1ACC         equ	1176	;# 
  2832     0498                     NCO1ACCL        equ	1176	;# 
  2833     0499                     NCO1ACCH        equ	1177	;# 
  2834     049A                     NCO1ACCU        equ	1178	;# 
  2835     049B                     NCO1INC         equ	1179	;# 
  2836     049B                     NCO1INCL        equ	1179	;# 
  2837     049C                     NCO1INCH        equ	1180	;# 
  2838     049D                     NCO1INCU        equ	1181	;# 
  2839     049E                     NCO1CON         equ	1182	;# 
  2840     049F                     NCO1CLK         equ	1183	;# 
  2841     0617                     PWM5DCL         equ	1559	;# 
  2842     0618                     PWM5DCH         equ	1560	;# 
  2843     0619                     PWM5CON         equ	1561	;# 
  2844     0619                     PWM5CON0        equ	1561	;# 
  2845     061A                     PWM6DCL         equ	1562	;# 
  2846     061B                     PWM6DCH         equ	1563	;# 
  2847     061C                     PWM6CON         equ	1564	;# 
  2848     061C                     PWM6CON0        equ	1564	;# 
  2849     061F                     PWMTMRS         equ	1567	;# 
  2850     0691                     CWG1CLKCON      equ	1681	;# 
  2851     0692                     CWG1DAT         equ	1682	;# 
  2852     0693                     CWG1DBR         equ	1683	;# 
  2853     0694                     CWG1DBF         equ	1684	;# 
  2854     0695                     CWG1CON0        equ	1685	;# 
  2855     0696                     CWG1CON1        equ	1686	;# 
  2856     0697                     CWG1AS0         equ	1687	;# 
  2857     0698                     CWG1AS1         equ	1688	;# 
  2858     0699                     CWG1STR         equ	1689	;# 
  2859     0711                     CWG2CLKCON      equ	1809	;# 
  2860     0712                     CWG2DAT         equ	1810	;# 
  2861     0713                     CWG2DBR         equ	1811	;# 
  2862     0714                     CWG2DBF         equ	1812	;# 
  2863     0715                     CWG2CON0        equ	1813	;# 
  2864     0716                     CWG2CON1        equ	1814	;# 
  2865     0717                     CWG2AS0         equ	1815	;# 
  2866     0718                     CWG2AS1         equ	1816	;# 
  2867     0719                     CWG2STR         equ	1817	;# 
  2868     0891                     NVMADR          equ	2193	;# 
  2869     0891                     EEADR           equ	2193	;# 
  2870     0891                     PMADR           equ	2193	;# 
  2871     0891                     NVMADRL         equ	2193	;# 
  2872     0891                     EEADRL          equ	2193	;# 
  2873     0891                     PMADRL          equ	2193	;# 
  2874     0892                     NVMADRH         equ	2194	;# 
  2875     0892                     EEADRH          equ	2194	;# 
  2876     0892                     PMADRH          equ	2194	;# 
  2877     0893                     NVMDAT          equ	2195	;# 
  2878     0893                     EEDAT           equ	2195	;# 
  2879     0893                     PMDAT           equ	2195	;# 
  2880     0893                     NVMDATL         equ	2195	;# 
  2881     0893                     EEDATL          equ	2195	;# 
  2882     0893                     PMDATL          equ	2195	;# 
  2883     0894                     NVMDATH         equ	2196	;# 
  2884     0894                     EEDATH          equ	2196	;# 
  2885     0894                     PMDATH          equ	2196	;# 
  2886     0895                     NVMCON1         equ	2197	;# 
  2887     0895                     EECON1          equ	2197	;# 
  2888     0895                     PMCON1          equ	2197	;# 
  2889     0896                     NVMCON2         equ	2198	;# 
  2890     0896                     EECON2          equ	2198	;# 
  2891     0896                     PMCON2          equ	2198	;# 
  2892     089B                     PCON0           equ	2203	;# 
  2893     0911                     PMD0            equ	2321	;# 
  2894     0912                     PMD1            equ	2322	;# 
  2895     0913                     PMD2            equ	2323	;# 
  2896     0914                     PMD3            equ	2324	;# 
  2897     0915                     PMD4            equ	2325	;# 
  2898     0916                     PMD5            equ	2326	;# 
  2899     0918                     CPUDOZE         equ	2328	;# 
  2900     0919                     OSCCON1         equ	2329	;# 
  2901     091A                     OSCCON2         equ	2330	;# 
  2902     091B                     OSCCON3         equ	2331	;# 
  2903     091C                     OSCSTAT1        equ	2332	;# 
  2904     091D                     OSCEN           equ	2333	;# 
  2905     091E                     OSCTUNE         equ	2334	;# 
  2906     091F                     OSCFRQ          equ	2335	;# 
  2907     0E0F                     PPSLOCK         equ	3599	;# 
  2908     0E10                     INTPPS          equ	3600	;# 
  2909     0E11                     T0CKIPPS        equ	3601	;# 
  2910     0E12                     T1CKIPPS        equ	3602	;# 
  2911     0E13                     T1GPPS          equ	3603	;# 
  2912     0E14                     CCP1PPS         equ	3604	;# 
  2913     0E15                     CCP2PPS         equ	3605	;# 
  2914     0E16                     CCP3PPS         equ	3606	;# 
  2915     0E17                     CCP4PPS         equ	3607	;# 
  2916     0E18                     CWG1PPS         equ	3608	;# 
  2917     0E19                     CWG2PPS         equ	3609	;# 
  2918     0E1A                     MDCIN1PPS       equ	3610	;# 
  2919     0E1B                     MDCIN2PPS       equ	3611	;# 
  2920     0E1C                     MDMINPPS        equ	3612	;# 
  2921     0E1D                     SSP2CLKPPS      equ	3613	;# 
  2922     0E1E                     SSP2DATPPS      equ	3614	;# 
  2923     0E1F                     SSP2SSPPS       equ	3615	;# 
  2924     0E20                     SSP1CLKPPS      equ	3616	;# 
  2925     0E21                     SSP1DATPPS      equ	3617	;# 
  2926     0E22                     SSP1SSPPS       equ	3618	;# 
  2927     0E24                     RXPPS           equ	3620	;# 
  2928     0E25                     TXPPS           equ	3621	;# 
  2929     0E28                     CLCIN0PPS       equ	3624	;# 
  2930     0E29                     CLCIN1PPS       equ	3625	;# 
  2931     0E2A                     CLCIN2PPS       equ	3626	;# 
  2932     0E2B                     CLCIN3PPS       equ	3627	;# 
  2933     0E2C                     T3CKIPPS        equ	3628	;# 
  2934     0E2D                     T3GPPS          equ	3629	;# 
  2935     0E2E                     T5CKIPPS        equ	3630	;# 
  2936     0E2F                     T5GPPS          equ	3631	;# 
  2937     0E90                     RA0PPS          equ	3728	;# 
  2938     0E91                     RA1PPS          equ	3729	;# 
  2939     0E92                     RA2PPS          equ	3730	;# 
  2940     0E94                     RA4PPS          equ	3732	;# 
  2941     0E95                     RA5PPS          equ	3733	;# 
  2942     0E9C                     RB4PPS          equ	3740	;# 
  2943     0E9D                     RB5PPS          equ	3741	;# 
  2944     0E9E                     RB6PPS          equ	3742	;# 
  2945     0E9F                     RB7PPS          equ	3743	;# 
  2946     0EA0                     RC0PPS          equ	3744	;# 
  2947     0EA1                     RC1PPS          equ	3745	;# 
  2948     0EA2                     RC2PPS          equ	3746	;# 
  2949     0EA3                     RC3PPS          equ	3747	;# 
  2950     0EA4                     RC4PPS          equ	3748	;# 
  2951     0EA5                     RC5PPS          equ	3749	;# 
  2952     0EA6                     RC6PPS          equ	3750	;# 
  2953     0EA7                     RC7PPS          equ	3751	;# 
  2954     0F0F                     CLCDATA         equ	3855	;# 
  2955     0F10                     CLC1CON         equ	3856	;# 
  2956     0F11                     CLC1POL         equ	3857	;# 
  2957     0F12                     CLC1SEL0        equ	3858	;# 
  2958     0F13                     CLC1SEL1        equ	3859	;# 
  2959     0F14                     CLC1SEL2        equ	3860	;# 
  2960     0F15                     CLC1SEL3        equ	3861	;# 
  2961     0F16                     CLC1GLS0        equ	3862	;# 
  2962     0F17                     CLC1GLS1        equ	3863	;# 
  2963     0F18                     CLC1GLS2        equ	3864	;# 
  2964     0F19                     CLC1GLS3        equ	3865	;# 
  2965     0F1A                     CLC2CON         equ	3866	;# 
  2966     0F1B                     CLC2POL         equ	3867	;# 
  2967     0F1C                     CLC2SEL0        equ	3868	;# 
  2968     0F1D                     CLC2SEL1        equ	3869	;# 
  2969     0F1E                     CLC2SEL2        equ	3870	;# 
  2970     0F1F                     CLC2SEL3        equ	3871	;# 
  2971     0F20                     CLC2GLS0        equ	3872	;# 
  2972     0F21                     CLC2GLS1        equ	3873	;# 
  2973     0F22                     CLC2GLS2        equ	3874	;# 
  2974     0F23                     CLC2GLS3        equ	3875	;# 
  2975     0F24                     CLC3CON         equ	3876	;# 
  2976     0F25                     CLC3POL         equ	3877	;# 
  2977     0F26                     CLC3SEL0        equ	3878	;# 
  2978     0F27                     CLC3SEL1        equ	3879	;# 
  2979     0F28                     CLC3SEL2        equ	3880	;# 
  2980     0F29                     CLC3SEL3        equ	3881	;# 
  2981     0F2A                     CLC3GLS0        equ	3882	;# 
  2982     0F2B                     CLC3GLS1        equ	3883	;# 
  2983     0F2C                     CLC3GLS2        equ	3884	;# 
  2984     0F2D                     CLC3GLS3        equ	3885	;# 
  2985     0F2E                     CLC4CON         equ	3886	;# 
  2986     0F2F                     CLC4POL         equ	3887	;# 
  2987     0F30                     CLC4SEL0        equ	3888	;# 
  2988     0F31                     CLC4SEL1        equ	3889	;# 
  2989     0F32                     CLC4SEL2        equ	3890	;# 
  2990     0F33                     CLC4SEL3        equ	3891	;# 
  2991     0F34                     CLC4GLS0        equ	3892	;# 
  2992     0F35                     CLC4GLS1        equ	3893	;# 
  2993     0F36                     CLC4GLS2        equ	3894	;# 
  2994     0F37                     CLC4GLS3        equ	3895	;# 
  2995     0FE4                     STATUS_SHAD     equ	4068	;# 
  2996     0FE5                     WREG_SHAD       equ	4069	;# 
  2997     0FE6                     BSR_SHAD        equ	4070	;# 
  2998     0FE7                     PCLATH_SHAD     equ	4071	;# 
  2999     0FE8                     FSR0L_SHAD      equ	4072	;# 
  3000     0FE9                     FSR0H_SHAD      equ	4073	;# 
  3001     0FEA                     FSR1L_SHAD      equ	4074	;# 
  3002     0FEB                     FSR1H_SHAD      equ	4075	;# 
  3003     0FED                     STKPTR          equ	4077	;# 
  3004     0FEE                     TOSL            equ	4078	;# 
  3005     0FEF                     TOSH            equ	4079	;# 
  3006     0000                     INDF0           equ	0	;# 
  3007     0001                     INDF1           equ	1	;# 
  3008     0002                     PCL             equ	2	;# 
  3009     0003                     STATUS          equ	3	;# 
  3010     0004                     FSR0L           equ	4	;# 
  3011     0005                     FSR0H           equ	5	;# 
  3012     0006                     FSR1L           equ	6	;# 
  3013     0007                     FSR1H           equ	7	;# 
  3014     0008                     BSR             equ	8	;# 
  3015     0009                     WREG            equ	9	;# 
  3016     000A                     PCLATH          equ	10	;# 
  3017     000B                     INTCON          equ	11	;# 
  3018     000C                     PORTA           equ	12	;# 
  3019     000D                     PORTB           equ	13	;# 
  3020     000E                     PORTC           equ	14	;# 
  3021     0010                     PIR0            equ	16	;# 
  3022     0011                     PIR1            equ	17	;# 
  3023     0012                     PIR2            equ	18	;# 
  3024     0013                     PIR3            equ	19	;# 
  3025     0014                     PIR4            equ	20	;# 
  3026     0015                     TMR0L           equ	21	;# 
  3027     0015                     TMR0            equ	21	;# 
  3028     0016                     TMR0H           equ	22	;# 
  3029     0016                     PR0             equ	22	;# 
  3030     0017                     T0CON0          equ	23	;# 
  3031     0018                     T0CON1          equ	24	;# 
  3032     0019                     TMR1            equ	25	;# 
  3033     0019                     TMR1L           equ	25	;# 
  3034     001A                     TMR1H           equ	26	;# 
  3035     001B                     T1CON           equ	27	;# 
  3036     001C                     T1GCON          equ	28	;# 
  3037     001D                     TMR2            equ	29	;# 
  3038     001E                     PR2             equ	30	;# 
  3039     001F                     T2CON           equ	31	;# 
  3040     008C                     TRISA           equ	140	;# 
  3041     008D                     TRISB           equ	141	;# 
  3042     008E                     TRISC           equ	142	;# 
  3043     0090                     PIE0            equ	144	;# 
  3044     0091                     PIE1            equ	145	;# 
  3045     0092                     PIE2            equ	146	;# 
  3046     0093                     PIE3            equ	147	;# 
  3047     0094                     PIE4            equ	148	;# 
  3048     0097                     WDTCON          equ	151	;# 
  3049     009B                     ADRES           equ	155	;# 
  3050     009B                     ADRESL          equ	155	;# 
  3051     009C                     ADRESH          equ	156	;# 
  3052     009D                     ADCON0          equ	157	;# 
  3053     009E                     ADCON1          equ	158	;# 
  3054     009F                     ADACT           equ	159	;# 
  3055     010C                     LATA            equ	268	;# 
  3056     010D                     LATB            equ	269	;# 
  3057     010E                     LATC            equ	270	;# 
  3058     0111                     CM1CON0         equ	273	;# 
  3059     0112                     CM1CON1         equ	274	;# 
  3060     0113                     CM2CON0         equ	275	;# 
  3061     0114                     CM2CON1         equ	276	;# 
  3062     0115                     CMOUT           equ	277	;# 
  3063     0116                     BORCON          equ	278	;# 
  3064     0117                     FVRCON          equ	279	;# 
  3065     0118                     DACCON0         equ	280	;# 
  3066     0119                     DACCON1         equ	281	;# 
  3067     018C                     ANSELA          equ	396	;# 
  3068     018D                     ANSELB          equ	397	;# 
  3069     018E                     ANSELC          equ	398	;# 
  3070     0197                     VREGCON         equ	407	;# 
  3071     0199                     RC1REG          equ	409	;# 
  3072     0199                     RCREG           equ	409	;# 
  3073     0199                     RCREG1          equ	409	;# 
  3074     019A                     TX1REG          equ	410	;# 
  3075     019A                     TXREG1          equ	410	;# 
  3076     019A                     TXREG           equ	410	;# 
  3077     019B                     SP1BRG          equ	411	;# 
  3078     019B                     SPBRG           equ	411	;# 
  3079     019B                     SP1BRGL         equ	411	;# 
  3080     019B                     SPBRG1          equ	411	;# 
  3081     019B                     SPBRGL          equ	411	;# 
  3082     019C                     SP1BRGH         equ	412	;# 
  3083     019C                     SPBRGH          equ	412	;# 
  3084     019C                     SPBRGH1         equ	412	;# 
  3085     019D                     RC1STA          equ	413	;# 
  3086     019D                     RCSTA1          equ	413	;# 
  3087     019D                     RCSTA           equ	413	;# 
  3088     019E                     TX1STA          equ	414	;# 
  3089     019E                     TXSTA1          equ	414	;# 
  3090     019E                     TXSTA           equ	414	;# 
  3091     019F                     BAUD1CON        equ	415	;# 
  3092     019F                     BAUDCON1        equ	415	;# 
  3093     019F                     BAUDCTL1        equ	415	;# 
  3094     019F                     BAUDCON         equ	415	;# 
  3095     019F                     BAUDCTL         equ	415	;# 
  3096     020C                     WPUA            equ	524	;# 
  3097     020D                     WPUB            equ	525	;# 
  3098     020E                     WPUC            equ	526	;# 
  3099     0211                     SSP1BUF         equ	529	;# 
  3100     0211                     SSPBUF          equ	529	;# 
  3101     0212                     SSP1ADD         equ	530	;# 
  3102     0212                     SSPADD          equ	530	;# 
  3103     0213                     SSP1MSK         equ	531	;# 
  3104     0213                     SSPMSK          equ	531	;# 
  3105     0214                     SSP1STAT        equ	532	;# 
  3106     0214                     SSPSTAT         equ	532	;# 
  3107     0215                     SSP1CON1        equ	533	;# 
  3108     0215                     SSPCON          equ	533	;# 
  3109     0215                     SSPCON1         equ	533	;# 
  3110     0215                     SSP1CON         equ	533	;# 
  3111     0216                     SSP1CON2        equ	534	;# 
  3112     0216                     SSPCON2         equ	534	;# 
  3113     0217                     SSP1CON3        equ	535	;# 
  3114     0217                     SSPCON3         equ	535	;# 
  3115     0219                     SSP2BUF         equ	537	;# 
  3116     021A                     SSP2ADD         equ	538	;# 
  3117     021B                     SSP2MSK         equ	539	;# 
  3118     021C                     SSP2STAT        equ	540	;# 
  3119     021D                     SSP2CON1        equ	541	;# 
  3120     021D                     SSP2CON         equ	541	;# 
  3121     021E                     SSP2CON2        equ	542	;# 
  3122     021F                     SSP2CON3        equ	543	;# 
  3123     028C                     ODCONA          equ	652	;# 
  3124     028D                     ODCONB          equ	653	;# 
  3125     028E                     ODCONC          equ	654	;# 
  3126     0291                     CCPR1           equ	657	;# 
  3127     0291                     CCPR1L          equ	657	;# 
  3128     0292                     CCPR1H          equ	658	;# 
  3129     0293                     CCP1CON         equ	659	;# 
  3130     0294                     CCP1CAP         equ	660	;# 
  3131     0295                     CCPR2           equ	661	;# 
  3132     0295                     CCPR2L          equ	661	;# 
  3133     0296                     CCPR2H          equ	662	;# 
  3134     0297                     CCP2CON         equ	663	;# 
  3135     0298                     CCP2CAP         equ	664	;# 
  3136     029F                     CCPTMRS         equ	671	;# 
  3137     030C                     SLRCONA         equ	780	;# 
  3138     030D                     SLRCONB         equ	781	;# 
  3139     030E                     SLRCONC         equ	782	;# 
  3140     0311                     CCPR3           equ	785	;# 
  3141     0311                     CCPR3L          equ	785	;# 
  3142     0312                     CCPR3H          equ	786	;# 
  3143     0313                     CCP3CON         equ	787	;# 
  3144     0314                     CCP3CAP         equ	788	;# 
  3145     0315                     CCPR4           equ	789	;# 
  3146     0315                     CCPR4L          equ	789	;# 
  3147     0316                     CCPR4H          equ	790	;# 
  3148     0317                     CCP4CON         equ	791	;# 
  3149     0318                     CCP4CAP         equ	792	;# 
  3150     038C                     INLVLA          equ	908	;# 
  3151     038D                     INLVLB          equ	909	;# 
  3152     038E                     INLVLC          equ	910	;# 
  3153     0391                     IOCAP           equ	913	;# 
  3154     0392                     IOCAN           equ	914	;# 
  3155     0393                     IOCAF           equ	915	;# 
  3156     0394                     IOCBP           equ	916	;# 
  3157     0395                     IOCBN           equ	917	;# 
  3158     0396                     IOCBF           equ	918	;# 
  3159     0397                     IOCCP           equ	919	;# 
  3160     0398                     IOCCN           equ	920	;# 
  3161     0399                     IOCCF           equ	921	;# 
  3162     039A                     CLKRCON         equ	922	;# 
  3163     039C                     MDCON           equ	924	;# 
  3164     039D                     MDSRC           equ	925	;# 
  3165     039E                     MDCARH          equ	926	;# 
  3166     039F                     MDCARL          equ	927	;# 
  3167     0411                     TMR3            equ	1041	;# 
  3168     0411                     TMR3L           equ	1041	;# 
  3169     0412                     TMR3H           equ	1042	;# 
  3170     0413                     T3CON           equ	1043	;# 
  3171     0414                     T3GCON          equ	1044	;# 
  3172     0415                     TMR4            equ	1045	;# 
  3173     0416                     PR4             equ	1046	;# 
  3174     0417                     T4CON           equ	1047	;# 
  3175     0418                     TMR5            equ	1048	;# 
  3176     0418                     TMR5L           equ	1048	;# 
  3177     0419                     TMR5H           equ	1049	;# 
  3178     041A                     T5CON           equ	1050	;# 
  3179     041B                     T5GCON          equ	1051	;# 
  3180     041C                     TMR6            equ	1052	;# 
  3181     041D                     PR6             equ	1053	;# 
  3182     041E                     T6CON           equ	1054	;# 
  3183     041F                     CCDCON          equ	1055	;# 
  3184     0498                     NCO1ACC         equ	1176	;# 
  3185     0498                     NCO1ACCL        equ	1176	;# 
  3186     0499                     NCO1ACCH        equ	1177	;# 
  3187     049A                     NCO1ACCU        equ	1178	;# 
  3188     049B                     NCO1INC         equ	1179	;# 
  3189     049B                     NCO1INCL        equ	1179	;# 
  3190     049C                     NCO1INCH        equ	1180	;# 
  3191     049D                     NCO1INCU        equ	1181	;# 
  3192     049E                     NCO1CON         equ	1182	;# 
  3193     049F                     NCO1CLK         equ	1183	;# 
  3194     0617                     PWM5DCL         equ	1559	;# 
  3195     0618                     PWM5DCH         equ	1560	;# 
  3196     0619                     PWM5CON         equ	1561	;# 
  3197     0619                     PWM5CON0        equ	1561	;# 
  3198     061A                     PWM6DCL         equ	1562	;# 
  3199     061B                     PWM6DCH         equ	1563	;# 
  3200     061C                     PWM6CON         equ	1564	;# 
  3201     061C                     PWM6CON0        equ	1564	;# 
  3202     061F                     PWMTMRS         equ	1567	;# 
  3203     0691                     CWG1CLKCON      equ	1681	;# 
  3204     0692                     CWG1DAT         equ	1682	;# 
  3205     0693                     CWG1DBR         equ	1683	;# 
  3206     0694                     CWG1DBF         equ	1684	;# 
  3207     0695                     CWG1CON0        equ	1685	;# 
  3208     0696                     CWG1CON1        equ	1686	;# 
  3209     0697                     CWG1AS0         equ	1687	;# 
  3210     0698                     CWG1AS1         equ	1688	;# 
  3211     0699                     CWG1STR         equ	1689	;# 
  3212     0711                     CWG2CLKCON      equ	1809	;# 
  3213     0712                     CWG2DAT         equ	1810	;# 
  3214     0713                     CWG2DBR         equ	1811	;# 
  3215     0714                     CWG2DBF         equ	1812	;# 
  3216     0715                     CWG2CON0        equ	1813	;# 
  3217     0716                     CWG2CON1        equ	1814	;# 
  3218     0717                     CWG2AS0         equ	1815	;# 
  3219     0718                     CWG2AS1         equ	1816	;# 
  3220     0719                     CWG2STR         equ	1817	;# 
  3221     0891                     NVMADR          equ	2193	;# 
  3222     0891                     EEADR           equ	2193	;# 
  3223     0891                     PMADR           equ	2193	;# 
  3224     0891                     NVMADRL         equ	2193	;# 
  3225     0891                     EEADRL          equ	2193	;# 
  3226     0891                     PMADRL          equ	2193	;# 
  3227     0892                     NVMADRH         equ	2194	;# 
  3228     0892                     EEADRH          equ	2194	;# 
  3229     0892                     PMADRH          equ	2194	;# 
  3230     0893                     NVMDAT          equ	2195	;# 
  3231     0893                     EEDAT           equ	2195	;# 
  3232     0893                     PMDAT           equ	2195	;# 
  3233     0893                     NVMDATL         equ	2195	;# 
  3234     0893                     EEDATL          equ	2195	;# 
  3235     0893                     PMDATL          equ	2195	;# 
  3236     0894                     NVMDATH         equ	2196	;# 
  3237     0894                     EEDATH          equ	2196	;# 
  3238     0894                     PMDATH          equ	2196	;# 
  3239     0895                     NVMCON1         equ	2197	;# 
  3240     0895                     EECON1          equ	2197	;# 
  3241     0895                     PMCON1          equ	2197	;# 
  3242     0896                     NVMCON2         equ	2198	;# 
  3243     0896                     EECON2          equ	2198	;# 
  3244     0896                     PMCON2          equ	2198	;# 
  3245     089B                     PCON0           equ	2203	;# 
  3246     0911                     PMD0            equ	2321	;# 
  3247     0912                     PMD1            equ	2322	;# 
  3248     0913                     PMD2            equ	2323	;# 
  3249     0914                     PMD3            equ	2324	;# 
  3250     0915                     PMD4            equ	2325	;# 
  3251     0916                     PMD5            equ	2326	;# 
  3252     0918                     CPUDOZE         equ	2328	;# 
  3253     0919                     OSCCON1         equ	2329	;# 
  3254     091A                     OSCCON2         equ	2330	;# 
  3255     091B                     OSCCON3         equ	2331	;# 
  3256     091C                     OSCSTAT1        equ	2332	;# 
  3257     091D                     OSCEN           equ	2333	;# 
  3258     091E                     OSCTUNE         equ	2334	;# 
  3259     091F                     OSCFRQ          equ	2335	;# 
  3260     0E0F                     PPSLOCK         equ	3599	;# 
  3261     0E10                     INTPPS          equ	3600	;# 
  3262     0E11                     T0CKIPPS        equ	3601	;# 
  3263     0E12                     T1CKIPPS        equ	3602	;# 
  3264     0E13                     T1GPPS          equ	3603	;# 
  3265     0E14                     CCP1PPS         equ	3604	;# 
  3266     0E15                     CCP2PPS         equ	3605	;# 
  3267     0E16                     CCP3PPS         equ	3606	;# 
  3268     0E17                     CCP4PPS         equ	3607	;# 
  3269     0E18                     CWG1PPS         equ	3608	;# 
  3270     0E19                     CWG2PPS         equ	3609	;# 
  3271     0E1A                     MDCIN1PPS       equ	3610	;# 
  3272     0E1B                     MDCIN2PPS       equ	3611	;# 
  3273     0E1C                     MDMINPPS        equ	3612	;# 
  3274     0E1D                     SSP2CLKPPS      equ	3613	;# 
  3275     0E1E                     SSP2DATPPS      equ	3614	;# 
  3276     0E1F                     SSP2SSPPS       equ	3615	;# 
  3277     0E20                     SSP1CLKPPS      equ	3616	;# 
  3278     0E21                     SSP1DATPPS      equ	3617	;# 
  3279     0E22                     SSP1SSPPS       equ	3618	;# 
  3280     0E24                     RXPPS           equ	3620	;# 
  3281     0E25                     TXPPS           equ	3621	;# 
  3282     0E28                     CLCIN0PPS       equ	3624	;# 
  3283     0E29                     CLCIN1PPS       equ	3625	;# 
  3284     0E2A                     CLCIN2PPS       equ	3626	;# 
  3285     0E2B                     CLCIN3PPS       equ	3627	;# 
  3286     0E2C                     T3CKIPPS        equ	3628	;# 
  3287     0E2D                     T3GPPS          equ	3629	;# 
  3288     0E2E                     T5CKIPPS        equ	3630	;# 
  3289     0E2F                     T5GPPS          equ	3631	;# 
  3290     0E90                     RA0PPS          equ	3728	;# 
  3291     0E91                     RA1PPS          equ	3729	;# 
  3292     0E92                     RA2PPS          equ	3730	;# 
  3293     0E94                     RA4PPS          equ	3732	;# 
  3294     0E95                     RA5PPS          equ	3733	;# 
  3295     0E9C                     RB4PPS          equ	3740	;# 
  3296     0E9D                     RB5PPS          equ	3741	;# 
  3297     0E9E                     RB6PPS          equ	3742	;# 
  3298     0E9F                     RB7PPS          equ	3743	;# 
  3299     0EA0                     RC0PPS          equ	3744	;# 
  3300     0EA1                     RC1PPS          equ	3745	;# 
  3301     0EA2                     RC2PPS          equ	3746	;# 
  3302     0EA3                     RC3PPS          equ	3747	;# 
  3303     0EA4                     RC4PPS          equ	3748	;# 
  3304     0EA5                     RC5PPS          equ	3749	;# 
  3305     0EA6                     RC6PPS          equ	3750	;# 
  3306     0EA7                     RC7PPS          equ	3751	;# 
  3307     0F0F                     CLCDATA         equ	3855	;# 
  3308     0F10                     CLC1CON         equ	3856	;# 
  3309     0F11                     CLC1POL         equ	3857	;# 
  3310     0F12                     CLC1SEL0        equ	3858	;# 
  3311     0F13                     CLC1SEL1        equ	3859	;# 
  3312     0F14                     CLC1SEL2        equ	3860	;# 
  3313     0F15                     CLC1SEL3        equ	3861	;# 
  3314     0F16                     CLC1GLS0        equ	3862	;# 
  3315     0F17                     CLC1GLS1        equ	3863	;# 
  3316     0F18                     CLC1GLS2        equ	3864	;# 
  3317     0F19                     CLC1GLS3        equ	3865	;# 
  3318     0F1A                     CLC2CON         equ	3866	;# 
  3319     0F1B                     CLC2POL         equ	3867	;# 
  3320     0F1C                     CLC2SEL0        equ	3868	;# 
  3321     0F1D                     CLC2SEL1        equ	3869	;# 
  3322     0F1E                     CLC2SEL2        equ	3870	;# 
  3323     0F1F                     CLC2SEL3        equ	3871	;# 
  3324     0F20                     CLC2GLS0        equ	3872	;# 
  3325     0F21                     CLC2GLS1        equ	3873	;# 
  3326     0F22                     CLC2GLS2        equ	3874	;# 
  3327     0F23                     CLC2GLS3        equ	3875	;# 
  3328     0F24                     CLC3CON         equ	3876	;# 
  3329     0F25                     CLC3POL         equ	3877	;# 
  3330     0F26                     CLC3SEL0        equ	3878	;# 
  3331     0F27                     CLC3SEL1        equ	3879	;# 
  3332     0F28                     CLC3SEL2        equ	3880	;# 
  3333     0F29                     CLC3SEL3        equ	3881	;# 
  3334     0F2A                     CLC3GLS0        equ	3882	;# 
  3335     0F2B                     CLC3GLS1        equ	3883	;# 
  3336     0F2C                     CLC3GLS2        equ	3884	;# 
  3337     0F2D                     CLC3GLS3        equ	3885	;# 
  3338     0F2E                     CLC4CON         equ	3886	;# 
  3339     0F2F                     CLC4POL         equ	3887	;# 
  3340     0F30                     CLC4SEL0        equ	3888	;# 
  3341     0F31                     CLC4SEL1        equ	3889	;# 
  3342     0F32                     CLC4SEL2        equ	3890	;# 
  3343     0F33                     CLC4SEL3        equ	3891	;# 
  3344     0F34                     CLC4GLS0        equ	3892	;# 
  3345     0F35                     CLC4GLS1        equ	3893	;# 
  3346     0F36                     CLC4GLS2        equ	3894	;# 
  3347     0F37                     CLC4GLS3        equ	3895	;# 
  3348     0FE4                     STATUS_SHAD     equ	4068	;# 
  3349     0FE5                     WREG_SHAD       equ	4069	;# 
  3350     0FE6                     BSR_SHAD        equ	4070	;# 
  3351     0FE7                     PCLATH_SHAD     equ	4071	;# 
  3352     0FE8                     FSR0L_SHAD      equ	4072	;# 
  3353     0FE9                     FSR0H_SHAD      equ	4073	;# 
  3354     0FEA                     FSR1L_SHAD      equ	4074	;# 
  3355     0FEB                     FSR1H_SHAD      equ	4075	;# 
  3356     0FED                     STKPTR          equ	4077	;# 
  3357     0FEE                     TOSL            equ	4078	;# 
  3358     0FEF                     TOSH            equ	4079	;# 
  3359     0000                     INDF0           equ	0	;# 
  3360     0001                     INDF1           equ	1	;# 
  3361     0002                     PCL             equ	2	;# 
  3362     0003                     STATUS          equ	3	;# 
  3363     0004                     FSR0L           equ	4	;# 
  3364     0005                     FSR0H           equ	5	;# 
  3365     0006                     FSR1L           equ	6	;# 
  3366     0007                     FSR1H           equ	7	;# 
  3367     0008                     BSR             equ	8	;# 
  3368     0009                     WREG            equ	9	;# 
  3369     000A                     PCLATH          equ	10	;# 
  3370     000B                     INTCON          equ	11	;# 
  3371     000C                     PORTA           equ	12	;# 
  3372     000D                     PORTB           equ	13	;# 
  3373     000E                     PORTC           equ	14	;# 
  3374     0010                     PIR0            equ	16	;# 
  3375     0011                     PIR1            equ	17	;# 
  3376     0012                     PIR2            equ	18	;# 
  3377     0013                     PIR3            equ	19	;# 
  3378     0014                     PIR4            equ	20	;# 
  3379     0015                     TMR0L           equ	21	;# 
  3380     0015                     TMR0            equ	21	;# 
  3381     0016                     TMR0H           equ	22	;# 
  3382     0016                     PR0             equ	22	;# 
  3383     0017                     T0CON0          equ	23	;# 
  3384     0018                     T0CON1          equ	24	;# 
  3385     0019                     TMR1            equ	25	;# 
  3386     0019                     TMR1L           equ	25	;# 
  3387     001A                     TMR1H           equ	26	;# 
  3388     001B                     T1CON           equ	27	;# 
  3389     001C                     T1GCON          equ	28	;# 
  3390     001D                     TMR2            equ	29	;# 
  3391     001E                     PR2             equ	30	;# 
  3392     001F                     T2CON           equ	31	;# 
  3393     008C                     TRISA           equ	140	;# 
  3394     008D                     TRISB           equ	141	;# 
  3395     008E                     TRISC           equ	142	;# 
  3396     0090                     PIE0            equ	144	;# 
  3397     0091                     PIE1            equ	145	;# 
  3398     0092                     PIE2            equ	146	;# 
  3399     0093                     PIE3            equ	147	;# 
  3400     0094                     PIE4            equ	148	;# 
  3401     0097                     WDTCON          equ	151	;# 
  3402     009B                     ADRES           equ	155	;# 
  3403     009B                     ADRESL          equ	155	;# 
  3404     009C                     ADRESH          equ	156	;# 
  3405     009D                     ADCON0          equ	157	;# 
  3406     009E                     ADCON1          equ	158	;# 
  3407     009F                     ADACT           equ	159	;# 
  3408     010C                     LATA            equ	268	;# 
  3409     010D                     LATB            equ	269	;# 
  3410     010E                     LATC            equ	270	;# 
  3411     0111                     CM1CON0         equ	273	;# 
  3412     0112                     CM1CON1         equ	274	;# 
  3413     0113                     CM2CON0         equ	275	;# 
  3414     0114                     CM2CON1         equ	276	;# 
  3415     0115                     CMOUT           equ	277	;# 
  3416     0116                     BORCON          equ	278	;# 
  3417     0117                     FVRCON          equ	279	;# 
  3418     0118                     DACCON0         equ	280	;# 
  3419     0119                     DACCON1         equ	281	;# 
  3420     018C                     ANSELA          equ	396	;# 
  3421     018D                     ANSELB          equ	397	;# 
  3422     018E                     ANSELC          equ	398	;# 
  3423     0197                     VREGCON         equ	407	;# 
  3424     0199                     RC1REG          equ	409	;# 
  3425     0199                     RCREG           equ	409	;# 
  3426     0199                     RCREG1          equ	409	;# 
  3427     019A                     TX1REG          equ	410	;# 
  3428     019A                     TXREG1          equ	410	;# 
  3429     019A                     TXREG           equ	410	;# 
  3430     019B                     SP1BRG          equ	411	;# 
  3431     019B                     SPBRG           equ	411	;# 
  3432     019B                     SP1BRGL         equ	411	;# 
  3433     019B                     SPBRG1          equ	411	;# 
  3434     019B                     SPBRGL          equ	411	;# 
  3435     019C                     SP1BRGH         equ	412	;# 
  3436     019C                     SPBRGH          equ	412	;# 
  3437     019C                     SPBRGH1         equ	412	;# 
  3438     019D                     RC1STA          equ	413	;# 
  3439     019D                     RCSTA1          equ	413	;# 
  3440     019D                     RCSTA           equ	413	;# 
  3441     019E                     TX1STA          equ	414	;# 
  3442     019E                     TXSTA1          equ	414	;# 
  3443     019E                     TXSTA           equ	414	;# 
  3444     019F                     BAUD1CON        equ	415	;# 
  3445     019F                     BAUDCON1        equ	415	;# 
  3446     019F                     BAUDCTL1        equ	415	;# 
  3447     019F                     BAUDCON         equ	415	;# 
  3448     019F                     BAUDCTL         equ	415	;# 
  3449     020C                     WPUA            equ	524	;# 
  3450     020D                     WPUB            equ	525	;# 
  3451     020E                     WPUC            equ	526	;# 
  3452     0211                     SSP1BUF         equ	529	;# 
  3453     0211                     SSPBUF          equ	529	;# 
  3454     0212                     SSP1ADD         equ	530	;# 
  3455     0212                     SSPADD          equ	530	;# 
  3456     0213                     SSP1MSK         equ	531	;# 
  3457     0213                     SSPMSK          equ	531	;# 
  3458     0214                     SSP1STAT        equ	532	;# 
  3459     0214                     SSPSTAT         equ	532	;# 
  3460     0215                     SSP1CON1        equ	533	;# 
  3461     0215                     SSPCON          equ	533	;# 
  3462     0215                     SSPCON1         equ	533	;# 
  3463     0215                     SSP1CON         equ	533	;# 
  3464     0216                     SSP1CON2        equ	534	;# 
  3465     0216                     SSPCON2         equ	534	;# 
  3466     0217                     SSP1CON3        equ	535	;# 
  3467     0217                     SSPCON3         equ	535	;# 
  3468     0219                     SSP2BUF         equ	537	;# 
  3469     021A                     SSP2ADD         equ	538	;# 
  3470     021B                     SSP2MSK         equ	539	;# 
  3471     021C                     SSP2STAT        equ	540	;# 
  3472     021D                     SSP2CON1        equ	541	;# 
  3473     021D                     SSP2CON         equ	541	;# 
  3474     021E                     SSP2CON2        equ	542	;# 
  3475     021F                     SSP2CON3        equ	543	;# 
  3476     028C                     ODCONA          equ	652	;# 
  3477     028D                     ODCONB          equ	653	;# 
  3478     028E                     ODCONC          equ	654	;# 
  3479     0291                     CCPR1           equ	657	;# 
  3480     0291                     CCPR1L          equ	657	;# 
  3481     0292                     CCPR1H          equ	658	;# 
  3482     0293                     CCP1CON         equ	659	;# 
  3483     0294                     CCP1CAP         equ	660	;# 
  3484     0295                     CCPR2           equ	661	;# 
  3485     0295                     CCPR2L          equ	661	;# 
  3486     0296                     CCPR2H          equ	662	;# 
  3487     0297                     CCP2CON         equ	663	;# 
  3488     0298                     CCP2CAP         equ	664	;# 
  3489     029F                     CCPTMRS         equ	671	;# 
  3490     030C                     SLRCONA         equ	780	;# 
  3491     030D                     SLRCONB         equ	781	;# 
  3492     030E                     SLRCONC         equ	782	;# 
  3493     0311                     CCPR3           equ	785	;# 
  3494     0311                     CCPR3L          equ	785	;# 
  3495     0312                     CCPR3H          equ	786	;# 
  3496     0313                     CCP3CON         equ	787	;# 
  3497     0314                     CCP3CAP         equ	788	;# 
  3498     0315                     CCPR4           equ	789	;# 
  3499     0315                     CCPR4L          equ	789	;# 
  3500     0316                     CCPR4H          equ	790	;# 
  3501     0317                     CCP4CON         equ	791	;# 
  3502     0318                     CCP4CAP         equ	792	;# 
  3503     038C                     INLVLA          equ	908	;# 
  3504     038D                     INLVLB          equ	909	;# 
  3505     038E                     INLVLC          equ	910	;# 
  3506     0391                     IOCAP           equ	913	;# 
  3507     0392                     IOCAN           equ	914	;# 
  3508     0393                     IOCAF           equ	915	;# 
  3509     0394                     IOCBP           equ	916	;# 
  3510     0395                     IOCBN           equ	917	;# 
  3511     0396                     IOCBF           equ	918	;# 
  3512     0397                     IOCCP           equ	919	;# 
  3513     0398                     IOCCN           equ	920	;# 
  3514     0399                     IOCCF           equ	921	;# 
  3515     039A                     CLKRCON         equ	922	;# 
  3516     039C                     MDCON           equ	924	;# 
  3517     039D                     MDSRC           equ	925	;# 
  3518     039E                     MDCARH          equ	926	;# 
  3519     039F                     MDCARL          equ	927	;# 
  3520     0411                     TMR3            equ	1041	;# 
  3521     0411                     TMR3L           equ	1041	;# 
  3522     0412                     TMR3H           equ	1042	;# 
  3523     0413                     T3CON           equ	1043	;# 
  3524     0414                     T3GCON          equ	1044	;# 
  3525     0415                     TMR4            equ	1045	;# 
  3526     0416                     PR4             equ	1046	;# 
  3527     0417                     T4CON           equ	1047	;# 
  3528     0418                     TMR5            equ	1048	;# 
  3529     0418                     TMR5L           equ	1048	;# 
  3530     0419                     TMR5H           equ	1049	;# 
  3531     041A                     T5CON           equ	1050	;# 
  3532     041B                     T5GCON          equ	1051	;# 
  3533     041C                     TMR6            equ	1052	;# 
  3534     041D                     PR6             equ	1053	;# 
  3535     041E                     T6CON           equ	1054	;# 
  3536     041F                     CCDCON          equ	1055	;# 
  3537     0498                     NCO1ACC         equ	1176	;# 
  3538     0498                     NCO1ACCL        equ	1176	;# 
  3539     0499                     NCO1ACCH        equ	1177	;# 
  3540     049A                     NCO1ACCU        equ	1178	;# 
  3541     049B                     NCO1INC         equ	1179	;# 
  3542     049B                     NCO1INCL        equ	1179	;# 
  3543     049C                     NCO1INCH        equ	1180	;# 
  3544     049D                     NCO1INCU        equ	1181	;# 
  3545     049E                     NCO1CON         equ	1182	;# 
  3546     049F                     NCO1CLK         equ	1183	;# 
  3547     0617                     PWM5DCL         equ	1559	;# 
  3548     0618                     PWM5DCH         equ	1560	;# 
  3549     0619                     PWM5CON         equ	1561	;# 
  3550     0619                     PWM5CON0        equ	1561	;# 
  3551     061A                     PWM6DCL         equ	1562	;# 
  3552     061B                     PWM6DCH         equ	1563	;# 
  3553     061C                     PWM6CON         equ	1564	;# 
  3554     061C                     PWM6CON0        equ	1564	;# 
  3555     061F                     PWMTMRS         equ	1567	;# 
  3556     0691                     CWG1CLKCON      equ	1681	;# 
  3557     0692                     CWG1DAT         equ	1682	;# 
  3558     0693                     CWG1DBR         equ	1683	;# 
  3559     0694                     CWG1DBF         equ	1684	;# 
  3560     0695                     CWG1CON0        equ	1685	;# 
  3561     0696                     CWG1CON1        equ	1686	;# 
  3562     0697                     CWG1AS0         equ	1687	;# 
  3563     0698                     CWG1AS1         equ	1688	;# 
  3564     0699                     CWG1STR         equ	1689	;# 
  3565     0711                     CWG2CLKCON      equ	1809	;# 
  3566     0712                     CWG2DAT         equ	1810	;# 
  3567     0713                     CWG2DBR         equ	1811	;# 
  3568     0714                     CWG2DBF         equ	1812	;# 
  3569     0715                     CWG2CON0        equ	1813	;# 
  3570     0716                     CWG2CON1        equ	1814	;# 
  3571     0717                     CWG2AS0         equ	1815	;# 
  3572     0718                     CWG2AS1         equ	1816	;# 
  3573     0719                     CWG2STR         equ	1817	;# 
  3574     0891                     NVMADR          equ	2193	;# 
  3575     0891                     EEADR           equ	2193	;# 
  3576     0891                     PMADR           equ	2193	;# 
  3577     0891                     NVMADRL         equ	2193	;# 
  3578     0891                     EEADRL          equ	2193	;# 
  3579     0891                     PMADRL          equ	2193	;# 
  3580     0892                     NVMADRH         equ	2194	;# 
  3581     0892                     EEADRH          equ	2194	;# 
  3582     0892                     PMADRH          equ	2194	;# 
  3583     0893                     NVMDAT          equ	2195	;# 
  3584     0893                     EEDAT           equ	2195	;# 
  3585     0893                     PMDAT           equ	2195	;# 
  3586     0893                     NVMDATL         equ	2195	;# 
  3587     0893                     EEDATL          equ	2195	;# 
  3588     0893                     PMDATL          equ	2195	;# 
  3589     0894                     NVMDATH         equ	2196	;# 
  3590     0894                     EEDATH          equ	2196	;# 
  3591     0894                     PMDATH          equ	2196	;# 
  3592     0895                     NVMCON1         equ	2197	;# 
  3593     0895                     EECON1          equ	2197	;# 
  3594     0895                     PMCON1          equ	2197	;# 
  3595     0896                     NVMCON2         equ	2198	;# 
  3596     0896                     EECON2          equ	2198	;# 
  3597     0896                     PMCON2          equ	2198	;# 
  3598     089B                     PCON0           equ	2203	;# 
  3599     0911                     PMD0            equ	2321	;# 
  3600     0912                     PMD1            equ	2322	;# 
  3601     0913                     PMD2            equ	2323	;# 
  3602     0914                     PMD3            equ	2324	;# 
  3603     0915                     PMD4            equ	2325	;# 
  3604     0916                     PMD5            equ	2326	;# 
  3605     0918                     CPUDOZE         equ	2328	;# 
  3606     0919                     OSCCON1         equ	2329	;# 
  3607     091A                     OSCCON2         equ	2330	;# 
  3608     091B                     OSCCON3         equ	2331	;# 
  3609     091C                     OSCSTAT1        equ	2332	;# 
  3610     091D                     OSCEN           equ	2333	;# 
  3611     091E                     OSCTUNE         equ	2334	;# 
  3612     091F                     OSCFRQ          equ	2335	;# 
  3613     0E0F                     PPSLOCK         equ	3599	;# 
  3614     0E10                     INTPPS          equ	3600	;# 
  3615     0E11                     T0CKIPPS        equ	3601	;# 
  3616     0E12                     T1CKIPPS        equ	3602	;# 
  3617     0E13                     T1GPPS          equ	3603	;# 
  3618     0E14                     CCP1PPS         equ	3604	;# 
  3619     0E15                     CCP2PPS         equ	3605	;# 
  3620     0E16                     CCP3PPS         equ	3606	;# 
  3621     0E17                     CCP4PPS         equ	3607	;# 
  3622     0E18                     CWG1PPS         equ	3608	;# 
  3623     0E19                     CWG2PPS         equ	3609	;# 
  3624     0E1A                     MDCIN1PPS       equ	3610	;# 
  3625     0E1B                     MDCIN2PPS       equ	3611	;# 
  3626     0E1C                     MDMINPPS        equ	3612	;# 
  3627     0E1D                     SSP2CLKPPS      equ	3613	;# 
  3628     0E1E                     SSP2DATPPS      equ	3614	;# 
  3629     0E1F                     SSP2SSPPS       equ	3615	;# 
  3630     0E20                     SSP1CLKPPS      equ	3616	;# 
  3631     0E21                     SSP1DATPPS      equ	3617	;# 
  3632     0E22                     SSP1SSPPS       equ	3618	;# 
  3633     0E24                     RXPPS           equ	3620	;# 
  3634     0E25                     TXPPS           equ	3621	;# 
  3635     0E28                     CLCIN0PPS       equ	3624	;# 
  3636     0E29                     CLCIN1PPS       equ	3625	;# 
  3637     0E2A                     CLCIN2PPS       equ	3626	;# 
  3638     0E2B                     CLCIN3PPS       equ	3627	;# 
  3639     0E2C                     T3CKIPPS        equ	3628	;# 
  3640     0E2D                     T3GPPS          equ	3629	;# 
  3641     0E2E                     T5CKIPPS        equ	3630	;# 
  3642     0E2F                     T5GPPS          equ	3631	;# 
  3643     0E90                     RA0PPS          equ	3728	;# 
  3644     0E91                     RA1PPS          equ	3729	;# 
  3645     0E92                     RA2PPS          equ	3730	;# 
  3646     0E94                     RA4PPS          equ	3732	;# 
  3647     0E95                     RA5PPS          equ	3733	;# 
  3648     0E9C                     RB4PPS          equ	3740	;# 
  3649     0E9D                     RB5PPS          equ	3741	;# 
  3650     0E9E                     RB6PPS          equ	3742	;# 
  3651     0E9F                     RB7PPS          equ	3743	;# 
  3652     0EA0                     RC0PPS          equ	3744	;# 
  3653     0EA1                     RC1PPS          equ	3745	;# 
  3654     0EA2                     RC2PPS          equ	3746	;# 
  3655     0EA3                     RC3PPS          equ	3747	;# 
  3656     0EA4                     RC4PPS          equ	3748	;# 
  3657     0EA5                     RC5PPS          equ	3749	;# 
  3658     0EA6                     RC6PPS          equ	3750	;# 
  3659     0EA7                     RC7PPS          equ	3751	;# 
  3660     0F0F                     CLCDATA         equ	3855	;# 
  3661     0F10                     CLC1CON         equ	3856	;# 
  3662     0F11                     CLC1POL         equ	3857	;# 
  3663     0F12                     CLC1SEL0        equ	3858	;# 
  3664     0F13                     CLC1SEL1        equ	3859	;# 
  3665     0F14                     CLC1SEL2        equ	3860	;# 
  3666     0F15                     CLC1SEL3        equ	3861	;# 
  3667     0F16                     CLC1GLS0        equ	3862	;# 
  3668     0F17                     CLC1GLS1        equ	3863	;# 
  3669     0F18                     CLC1GLS2        equ	3864	;# 
  3670     0F19                     CLC1GLS3        equ	3865	;# 
  3671     0F1A                     CLC2CON         equ	3866	;# 
  3672     0F1B                     CLC2POL         equ	3867	;# 
  3673     0F1C                     CLC2SEL0        equ	3868	;# 
  3674     0F1D                     CLC2SEL1        equ	3869	;# 
  3675     0F1E                     CLC2SEL2        equ	3870	;# 
  3676     0F1F                     CLC2SEL3        equ	3871	;# 
  3677     0F20                     CLC2GLS0        equ	3872	;# 
  3678     0F21                     CLC2GLS1        equ	3873	;# 
  3679     0F22                     CLC2GLS2        equ	3874	;# 
  3680     0F23                     CLC2GLS3        equ	3875	;# 
  3681     0F24                     CLC3CON         equ	3876	;# 
  3682     0F25                     CLC3POL         equ	3877	;# 
  3683     0F26                     CLC3SEL0        equ	3878	;# 
  3684     0F27                     CLC3SEL1        equ	3879	;# 
  3685     0F28                     CLC3SEL2        equ	3880	;# 
  3686     0F29                     CLC3SEL3        equ	3881	;# 
  3687     0F2A                     CLC3GLS0        equ	3882	;# 
  3688     0F2B                     CLC3GLS1        equ	3883	;# 
  3689     0F2C                     CLC3GLS2        equ	3884	;# 
  3690     0F2D                     CLC3GLS3        equ	3885	;# 
  3691     0F2E                     CLC4CON         equ	3886	;# 
  3692     0F2F                     CLC4POL         equ	3887	;# 
  3693     0F30                     CLC4SEL0        equ	3888	;# 
  3694     0F31                     CLC4SEL1        equ	3889	;# 
  3695     0F32                     CLC4SEL2        equ	3890	;# 
  3696     0F33                     CLC4SEL3        equ	3891	;# 
  3697     0F34                     CLC4GLS0        equ	3892	;# 
  3698     0F35                     CLC4GLS1        equ	3893	;# 
  3699     0F36                     CLC4GLS2        equ	3894	;# 
  3700     0F37                     CLC4GLS3        equ	3895	;# 
  3701     0FE4                     STATUS_SHAD     equ	4068	;# 
  3702     0FE5                     WREG_SHAD       equ	4069	;# 
  3703     0FE6                     BSR_SHAD        equ	4070	;# 
  3704     0FE7                     PCLATH_SHAD     equ	4071	;# 
  3705     0FE8                     FSR0L_SHAD      equ	4072	;# 
  3706     0FE9                     FSR0H_SHAD      equ	4073	;# 
  3707     0FEA                     FSR1L_SHAD      equ	4074	;# 
  3708     0FEB                     FSR1H_SHAD      equ	4075	;# 
  3709     0FED                     STKPTR          equ	4077	;# 
  3710     0FEE                     TOSL            equ	4078	;# 
  3711     0FEF                     TOSH            equ	4079	;# 
  3712     0000                     INDF0           equ	0	;# 
  3713     0001                     INDF1           equ	1	;# 
  3714     0002                     PCL             equ	2	;# 
  3715     0003                     STATUS          equ	3	;# 
  3716     0004                     FSR0L           equ	4	;# 
  3717     0005                     FSR0H           equ	5	;# 
  3718     0006                     FSR1L           equ	6	;# 
  3719     0007                     FSR1H           equ	7	;# 
  3720     0008                     BSR             equ	8	;# 
  3721     0009                     WREG            equ	9	;# 
  3722     000A                     PCLATH          equ	10	;# 
  3723     000B                     INTCON          equ	11	;# 
  3724     000C                     PORTA           equ	12	;# 
  3725     000D                     PORTB           equ	13	;# 
  3726     000E                     PORTC           equ	14	;# 
  3727     0010                     PIR0            equ	16	;# 
  3728     0011                     PIR1            equ	17	;# 
  3729     0012                     PIR2            equ	18	;# 
  3730     0013                     PIR3            equ	19	;# 
  3731     0014                     PIR4            equ	20	;# 
  3732     0015                     TMR0L           equ	21	;# 
  3733     0015                     TMR0            equ	21	;# 
  3734     0016                     TMR0H           equ	22	;# 
  3735     0016                     PR0             equ	22	;# 
  3736     0017                     T0CON0          equ	23	;# 
  3737     0018                     T0CON1          equ	24	;# 
  3738     0019                     TMR1            equ	25	;# 
  3739     0019                     TMR1L           equ	25	;# 
  3740     001A                     TMR1H           equ	26	;# 
  3741     001B                     T1CON           equ	27	;# 
  3742     001C                     T1GCON          equ	28	;# 
  3743     001D                     TMR2            equ	29	;# 
  3744     001E                     PR2             equ	30	;# 
  3745     001F                     T2CON           equ	31	;# 
  3746     008C                     TRISA           equ	140	;# 
  3747     008D                     TRISB           equ	141	;# 
  3748     008E                     TRISC           equ	142	;# 
  3749     0090                     PIE0            equ	144	;# 
  3750     0091                     PIE1            equ	145	;# 
  3751     0092                     PIE2            equ	146	;# 
  3752     0093                     PIE3            equ	147	;# 
  3753     0094                     PIE4            equ	148	;# 
  3754     0097                     WDTCON          equ	151	;# 
  3755     009B                     ADRES           equ	155	;# 
  3756     009B                     ADRESL          equ	155	;# 
  3757     009C                     ADRESH          equ	156	;# 
  3758     009D                     ADCON0          equ	157	;# 
  3759     009E                     ADCON1          equ	158	;# 
  3760     009F                     ADACT           equ	159	;# 
  3761     010C                     LATA            equ	268	;# 
  3762     010D                     LATB            equ	269	;# 
  3763     010E                     LATC            equ	270	;# 
  3764     0111                     CM1CON0         equ	273	;# 
  3765     0112                     CM1CON1         equ	274	;# 
  3766     0113                     CM2CON0         equ	275	;# 
  3767     0114                     CM2CON1         equ	276	;# 
  3768     0115                     CMOUT           equ	277	;# 
  3769     0116                     BORCON          equ	278	;# 
  3770     0117                     FVRCON          equ	279	;# 
  3771     0118                     DACCON0         equ	280	;# 
  3772     0119                     DACCON1         equ	281	;# 
  3773     018C                     ANSELA          equ	396	;# 
  3774     018D                     ANSELB          equ	397	;# 
  3775     018E                     ANSELC          equ	398	;# 
  3776     0197                     VREGCON         equ	407	;# 
  3777     0199                     RC1REG          equ	409	;# 
  3778     0199                     RCREG           equ	409	;# 
  3779     0199                     RCREG1          equ	409	;# 
  3780     019A                     TX1REG          equ	410	;# 
  3781     019A                     TXREG1          equ	410	;# 
  3782     019A                     TXREG           equ	410	;# 
  3783     019B                     SP1BRG          equ	411	;# 
  3784     019B                     SPBRG           equ	411	;# 
  3785     019B                     SP1BRGL         equ	411	;# 
  3786     019B                     SPBRG1          equ	411	;# 
  3787     019B                     SPBRGL          equ	411	;# 
  3788     019C                     SP1BRGH         equ	412	;# 
  3789     019C                     SPBRGH          equ	412	;# 
  3790     019C                     SPBRGH1         equ	412	;# 
  3791     019D                     RC1STA          equ	413	;# 
  3792     019D                     RCSTA1          equ	413	;# 
  3793     019D                     RCSTA           equ	413	;# 
  3794     019E                     TX1STA          equ	414	;# 
  3795     019E                     TXSTA1          equ	414	;# 
  3796     019E                     TXSTA           equ	414	;# 
  3797     019F                     BAUD1CON        equ	415	;# 
  3798     019F                     BAUDCON1        equ	415	;# 
  3799     019F                     BAUDCTL1        equ	415	;# 
  3800     019F                     BAUDCON         equ	415	;# 
  3801     019F                     BAUDCTL         equ	415	;# 
  3802     020C                     WPUA            equ	524	;# 
  3803     020D                     WPUB            equ	525	;# 
  3804     020E                     WPUC            equ	526	;# 
  3805     0211                     SSP1BUF         equ	529	;# 
  3806     0211                     SSPBUF          equ	529	;# 
  3807     0212                     SSP1ADD         equ	530	;# 
  3808     0212                     SSPADD          equ	530	;# 
  3809     0213                     SSP1MSK         equ	531	;# 
  3810     0213                     SSPMSK          equ	531	;# 
  3811     0214                     SSP1STAT        equ	532	;# 
  3812     0214                     SSPSTAT         equ	532	;# 
  3813     0215                     SSP1CON1        equ	533	;# 
  3814     0215                     SSPCON          equ	533	;# 
  3815     0215                     SSPCON1         equ	533	;# 
  3816     0215                     SSP1CON         equ	533	;# 
  3817     0216                     SSP1CON2        equ	534	;# 
  3818     0216                     SSPCON2         equ	534	;# 
  3819     0217                     SSP1CON3        equ	535	;# 
  3820     0217                     SSPCON3         equ	535	;# 
  3821     0219                     SSP2BUF         equ	537	;# 
  3822     021A                     SSP2ADD         equ	538	;# 
  3823     021B                     SSP2MSK         equ	539	;# 
  3824     021C                     SSP2STAT        equ	540	;# 
  3825     021D                     SSP2CON1        equ	541	;# 
  3826     021D                     SSP2CON         equ	541	;# 
  3827     021E                     SSP2CON2        equ	542	;# 
  3828     021F                     SSP2CON3        equ	543	;# 
  3829     028C                     ODCONA          equ	652	;# 
  3830     028D                     ODCONB          equ	653	;# 
  3831     028E                     ODCONC          equ	654	;# 
  3832     0291                     CCPR1           equ	657	;# 
  3833     0291                     CCPR1L          equ	657	;# 
  3834     0292                     CCPR1H          equ	658	;# 
  3835     0293                     CCP1CON         equ	659	;# 
  3836     0294                     CCP1CAP         equ	660	;# 
  3837     0295                     CCPR2           equ	661	;# 
  3838     0295                     CCPR2L          equ	661	;# 
  3839     0296                     CCPR2H          equ	662	;# 
  3840     0297                     CCP2CON         equ	663	;# 
  3841     0298                     CCP2CAP         equ	664	;# 
  3842     029F                     CCPTMRS         equ	671	;# 
  3843     030C                     SLRCONA         equ	780	;# 
  3844     030D                     SLRCONB         equ	781	;# 
  3845     030E                     SLRCONC         equ	782	;# 
  3846     0311                     CCPR3           equ	785	;# 
  3847     0311                     CCPR3L          equ	785	;# 
  3848     0312                     CCPR3H          equ	786	;# 
  3849     0313                     CCP3CON         equ	787	;# 
  3850     0314                     CCP3CAP         equ	788	;# 
  3851     0315                     CCPR4           equ	789	;# 
  3852     0315                     CCPR4L          equ	789	;# 
  3853     0316                     CCPR4H          equ	790	;# 
  3854     0317                     CCP4CON         equ	791	;# 
  3855     0318                     CCP4CAP         equ	792	;# 
  3856     038C                     INLVLA          equ	908	;# 
  3857     038D                     INLVLB          equ	909	;# 
  3858     038E                     INLVLC          equ	910	;# 
  3859     0391                     IOCAP           equ	913	;# 
  3860     0392                     IOCAN           equ	914	;# 
  3861     0393                     IOCAF           equ	915	;# 
  3862     0394                     IOCBP           equ	916	;# 
  3863     0395                     IOCBN           equ	917	;# 
  3864     0396                     IOCBF           equ	918	;# 
  3865     0397                     IOCCP           equ	919	;# 
  3866     0398                     IOCCN           equ	920	;# 
  3867     0399                     IOCCF           equ	921	;# 
  3868     039A                     CLKRCON         equ	922	;# 
  3869     039C                     MDCON           equ	924	;# 
  3870     039D                     MDSRC           equ	925	;# 
  3871     039E                     MDCARH          equ	926	;# 
  3872     039F                     MDCARL          equ	927	;# 
  3873     0411                     TMR3            equ	1041	;# 
  3874     0411                     TMR3L           equ	1041	;# 
  3875     0412                     TMR3H           equ	1042	;# 
  3876     0413                     T3CON           equ	1043	;# 
  3877     0414                     T3GCON          equ	1044	;# 
  3878     0415                     TMR4            equ	1045	;# 
  3879     0416                     PR4             equ	1046	;# 
  3880     0417                     T4CON           equ	1047	;# 
  3881     0418                     TMR5            equ	1048	;# 
  3882     0418                     TMR5L           equ	1048	;# 
  3883     0419                     TMR5H           equ	1049	;# 
  3884     041A                     T5CON           equ	1050	;# 
  3885     041B                     T5GCON          equ	1051	;# 
  3886     041C                     TMR6            equ	1052	;# 
  3887     041D                     PR6             equ	1053	;# 
  3888     041E                     T6CON           equ	1054	;# 
  3889     041F                     CCDCON          equ	1055	;# 
  3890     0498                     NCO1ACC         equ	1176	;# 
  3891     0498                     NCO1ACCL        equ	1176	;# 
  3892     0499                     NCO1ACCH        equ	1177	;# 
  3893     049A                     NCO1ACCU        equ	1178	;# 
  3894     049B                     NCO1INC         equ	1179	;# 
  3895     049B                     NCO1INCL        equ	1179	;# 
  3896     049C                     NCO1INCH        equ	1180	;# 
  3897     049D                     NCO1INCU        equ	1181	;# 
  3898     049E                     NCO1CON         equ	1182	;# 
  3899     049F                     NCO1CLK         equ	1183	;# 
  3900     0617                     PWM5DCL         equ	1559	;# 
  3901     0618                     PWM5DCH         equ	1560	;# 
  3902     0619                     PWM5CON         equ	1561	;# 
  3903     0619                     PWM5CON0        equ	1561	;# 
  3904     061A                     PWM6DCL         equ	1562	;# 
  3905     061B                     PWM6DCH         equ	1563	;# 
  3906     061C                     PWM6CON         equ	1564	;# 
  3907     061C                     PWM6CON0        equ	1564	;# 
  3908     061F                     PWMTMRS         equ	1567	;# 
  3909     0691                     CWG1CLKCON      equ	1681	;# 
  3910     0692                     CWG1DAT         equ	1682	;# 
  3911     0693                     CWG1DBR         equ	1683	;# 
  3912     0694                     CWG1DBF         equ	1684	;# 
  3913     0695                     CWG1CON0        equ	1685	;# 
  3914     0696                     CWG1CON1        equ	1686	;# 
  3915     0697                     CWG1AS0         equ	1687	;# 
  3916     0698                     CWG1AS1         equ	1688	;# 
  3917     0699                     CWG1STR         equ	1689	;# 
  3918     0711                     CWG2CLKCON      equ	1809	;# 
  3919     0712                     CWG2DAT         equ	1810	;# 
  3920     0713                     CWG2DBR         equ	1811	;# 
  3921     0714                     CWG2DBF         equ	1812	;# 
  3922     0715                     CWG2CON0        equ	1813	;# 
  3923     0716                     CWG2CON1        equ	1814	;# 
  3924     0717                     CWG2AS0         equ	1815	;# 
  3925     0718                     CWG2AS1         equ	1816	;# 
  3926     0719                     CWG2STR         equ	1817	;# 
  3927     0891                     NVMADR          equ	2193	;# 
  3928     0891                     EEADR           equ	2193	;# 
  3929     0891                     PMADR           equ	2193	;# 
  3930     0891                     NVMADRL         equ	2193	;# 
  3931     0891                     EEADRL          equ	2193	;# 
  3932     0891                     PMADRL          equ	2193	;# 
  3933     0892                     NVMADRH         equ	2194	;# 
  3934     0892                     EEADRH          equ	2194	;# 
  3935     0892                     PMADRH          equ	2194	;# 
  3936     0893                     NVMDAT          equ	2195	;# 
  3937     0893                     EEDAT           equ	2195	;# 
  3938     0893                     PMDAT           equ	2195	;# 
  3939     0893                     NVMDATL         equ	2195	;# 
  3940     0893                     EEDATL          equ	2195	;# 
  3941     0893                     PMDATL          equ	2195	;# 
  3942     0894                     NVMDATH         equ	2196	;# 
  3943     0894                     EEDATH          equ	2196	;# 
  3944     0894                     PMDATH          equ	2196	;# 
  3945     0895                     NVMCON1         equ	2197	;# 
  3946     0895                     EECON1          equ	2197	;# 
  3947     0895                     PMCON1          equ	2197	;# 
  3948     0896                     NVMCON2         equ	2198	;# 
  3949     0896                     EECON2          equ	2198	;# 
  3950     0896                     PMCON2          equ	2198	;# 
  3951     089B                     PCON0           equ	2203	;# 
  3952     0911                     PMD0            equ	2321	;# 
  3953     0912                     PMD1            equ	2322	;# 
  3954     0913                     PMD2            equ	2323	;# 
  3955     0914                     PMD3            equ	2324	;# 
  3956     0915                     PMD4            equ	2325	;# 
  3957     0916                     PMD5            equ	2326	;# 
  3958     0918                     CPUDOZE         equ	2328	;# 
  3959     0919                     OSCCON1         equ	2329	;# 
  3960     091A                     OSCCON2         equ	2330	;# 
  3961     091B                     OSCCON3         equ	2331	;# 
  3962     091C                     OSCSTAT1        equ	2332	;# 
  3963     091D                     OSCEN           equ	2333	;# 
  3964     091E                     OSCTUNE         equ	2334	;# 
  3965     091F                     OSCFRQ          equ	2335	;# 
  3966     0E0F                     PPSLOCK         equ	3599	;# 
  3967     0E10                     INTPPS          equ	3600	;# 
  3968     0E11                     T0CKIPPS        equ	3601	;# 
  3969     0E12                     T1CKIPPS        equ	3602	;# 
  3970     0E13                     T1GPPS          equ	3603	;# 
  3971     0E14                     CCP1PPS         equ	3604	;# 
  3972     0E15                     CCP2PPS         equ	3605	;# 
  3973     0E16                     CCP3PPS         equ	3606	;# 
  3974     0E17                     CCP4PPS         equ	3607	;# 
  3975     0E18                     CWG1PPS         equ	3608	;# 
  3976     0E19                     CWG2PPS         equ	3609	;# 
  3977     0E1A                     MDCIN1PPS       equ	3610	;# 
  3978     0E1B                     MDCIN2PPS       equ	3611	;# 
  3979     0E1C                     MDMINPPS        equ	3612	;# 
  3980     0E1D                     SSP2CLKPPS      equ	3613	;# 
  3981     0E1E                     SSP2DATPPS      equ	3614	;# 
  3982     0E1F                     SSP2SSPPS       equ	3615	;# 
  3983     0E20                     SSP1CLKPPS      equ	3616	;# 
  3984     0E21                     SSP1DATPPS      equ	3617	;# 
  3985     0E22                     SSP1SSPPS       equ	3618	;# 
  3986     0E24                     RXPPS           equ	3620	;# 
  3987     0E25                     TXPPS           equ	3621	;# 
  3988     0E28                     CLCIN0PPS       equ	3624	;# 
  3989     0E29                     CLCIN1PPS       equ	3625	;# 
  3990     0E2A                     CLCIN2PPS       equ	3626	;# 
  3991     0E2B                     CLCIN3PPS       equ	3627	;# 
  3992     0E2C                     T3CKIPPS        equ	3628	;# 
  3993     0E2D                     T3GPPS          equ	3629	;# 
  3994     0E2E                     T5CKIPPS        equ	3630	;# 
  3995     0E2F                     T5GPPS          equ	3631	;# 
  3996     0E90                     RA0PPS          equ	3728	;# 
  3997     0E91                     RA1PPS          equ	3729	;# 
  3998     0E92                     RA2PPS          equ	3730	;# 
  3999     0E94                     RA4PPS          equ	3732	;# 
  4000     0E95                     RA5PPS          equ	3733	;# 
  4001     0E9C                     RB4PPS          equ	3740	;# 
  4002     0E9D                     RB5PPS          equ	3741	;# 
  4003     0E9E                     RB6PPS          equ	3742	;# 
  4004     0E9F                     RB7PPS          equ	3743	;# 
  4005     0EA0                     RC0PPS          equ	3744	;# 
  4006     0EA1                     RC1PPS          equ	3745	;# 
  4007     0EA2                     RC2PPS          equ	3746	;# 
  4008     0EA3                     RC3PPS          equ	3747	;# 
  4009     0EA4                     RC4PPS          equ	3748	;# 
  4010     0EA5                     RC5PPS          equ	3749	;# 
  4011     0EA6                     RC6PPS          equ	3750	;# 
  4012     0EA7                     RC7PPS          equ	3751	;# 
  4013     0F0F                     CLCDATA         equ	3855	;# 
  4014     0F10                     CLC1CON         equ	3856	;# 
  4015     0F11                     CLC1POL         equ	3857	;# 
  4016     0F12                     CLC1SEL0        equ	3858	;# 
  4017     0F13                     CLC1SEL1        equ	3859	;# 
  4018     0F14                     CLC1SEL2        equ	3860	;# 
  4019     0F15                     CLC1SEL3        equ	3861	;# 
  4020     0F16                     CLC1GLS0        equ	3862	;# 
  4021     0F17                     CLC1GLS1        equ	3863	;# 
  4022     0F18                     CLC1GLS2        equ	3864	;# 
  4023     0F19                     CLC1GLS3        equ	3865	;# 
  4024     0F1A                     CLC2CON         equ	3866	;# 
  4025     0F1B                     CLC2POL         equ	3867	;# 
  4026     0F1C                     CLC2SEL0        equ	3868	;# 
  4027     0F1D                     CLC2SEL1        equ	3869	;# 
  4028     0F1E                     CLC2SEL2        equ	3870	;# 
  4029     0F1F                     CLC2SEL3        equ	3871	;# 
  4030     0F20                     CLC2GLS0        equ	3872	;# 
  4031     0F21                     CLC2GLS1        equ	3873	;# 
  4032     0F22                     CLC2GLS2        equ	3874	;# 
  4033     0F23                     CLC2GLS3        equ	3875	;# 
  4034     0F24                     CLC3CON         equ	3876	;# 
  4035     0F25                     CLC3POL         equ	3877	;# 
  4036     0F26                     CLC3SEL0        equ	3878	;# 
  4037     0F27                     CLC3SEL1        equ	3879	;# 
  4038     0F28                     CLC3SEL2        equ	3880	;# 
  4039     0F29                     CLC3SEL3        equ	3881	;# 
  4040     0F2A                     CLC3GLS0        equ	3882	;# 
  4041     0F2B                     CLC3GLS1        equ	3883	;# 
  4042     0F2C                     CLC3GLS2        equ	3884	;# 
  4043     0F2D                     CLC3GLS3        equ	3885	;# 
  4044     0F2E                     CLC4CON         equ	3886	;# 
  4045     0F2F                     CLC4POL         equ	3887	;# 
  4046     0F30                     CLC4SEL0        equ	3888	;# 
  4047     0F31                     CLC4SEL1        equ	3889	;# 
  4048     0F32                     CLC4SEL2        equ	3890	;# 
  4049     0F33                     CLC4SEL3        equ	3891	;# 
  4050     0F34                     CLC4GLS0        equ	3892	;# 
  4051     0F35                     CLC4GLS1        equ	3893	;# 
  4052     0F36                     CLC4GLS2        equ	3894	;# 
  4053     0F37                     CLC4GLS3        equ	3895	;# 
  4054     0FE4                     STATUS_SHAD     equ	4068	;# 
  4055     0FE5                     WREG_SHAD       equ	4069	;# 
  4056     0FE6                     BSR_SHAD        equ	4070	;# 
  4057     0FE7                     PCLATH_SHAD     equ	4071	;# 
  4058     0FE8                     FSR0L_SHAD      equ	4072	;# 
  4059     0FE9                     FSR0H_SHAD      equ	4073	;# 
  4060     0FEA                     FSR1L_SHAD      equ	4074	;# 
  4061     0FEB                     FSR1H_SHAD      equ	4075	;# 
  4062     0FED                     STKPTR          equ	4077	;# 
  4063     0FEE                     TOSL            equ	4078	;# 
  4064     0FEF                     TOSH            equ	4079	;# 
  4065     0000                     INDF0           equ	0	;# 
  4066     0001                     INDF1           equ	1	;# 
  4067     0002                     PCL             equ	2	;# 
  4068     0003                     STATUS          equ	3	;# 
  4069     0004                     FSR0L           equ	4	;# 
  4070     0005                     FSR0H           equ	5	;# 
  4071     0006                     FSR1L           equ	6	;# 
  4072     0007                     FSR1H           equ	7	;# 
  4073     0008                     BSR             equ	8	;# 
  4074     0009                     WREG            equ	9	;# 
  4075     000A                     PCLATH          equ	10	;# 
  4076     000B                     INTCON          equ	11	;# 
  4077     000C                     PORTA           equ	12	;# 
  4078     000D                     PORTB           equ	13	;# 
  4079     000E                     PORTC           equ	14	;# 
  4080     0010                     PIR0            equ	16	;# 
  4081     0011                     PIR1            equ	17	;# 
  4082     0012                     PIR2            equ	18	;# 
  4083     0013                     PIR3            equ	19	;# 
  4084     0014                     PIR4            equ	20	;# 
  4085     0015                     TMR0L           equ	21	;# 
  4086     0015                     TMR0            equ	21	;# 
  4087     0016                     TMR0H           equ	22	;# 
  4088     0016                     PR0             equ	22	;# 
  4089     0017                     T0CON0          equ	23	;# 
  4090     0018                     T0CON1          equ	24	;# 
  4091     0019                     TMR1            equ	25	;# 
  4092     0019                     TMR1L           equ	25	;# 
  4093     001A                     TMR1H           equ	26	;# 
  4094     001B                     T1CON           equ	27	;# 
  4095     001C                     T1GCON          equ	28	;# 
  4096     001D                     TMR2            equ	29	;# 
  4097     001E                     PR2             equ	30	;# 
  4098     001F                     T2CON           equ	31	;# 
  4099     008C                     TRISA           equ	140	;# 
  4100     008D                     TRISB           equ	141	;# 
  4101     008E                     TRISC           equ	142	;# 
  4102     0090                     PIE0            equ	144	;# 
  4103     0091                     PIE1            equ	145	;# 
  4104     0092                     PIE2            equ	146	;# 
  4105     0093                     PIE3            equ	147	;# 
  4106     0094                     PIE4            equ	148	;# 
  4107     0097                     WDTCON          equ	151	;# 
  4108     009B                     ADRES           equ	155	;# 
  4109     009B                     ADRESL          equ	155	;# 
  4110     009C                     ADRESH          equ	156	;# 
  4111     009D                     ADCON0          equ	157	;# 
  4112     009E                     ADCON1          equ	158	;# 
  4113     009F                     ADACT           equ	159	;# 
  4114     010C                     LATA            equ	268	;# 
  4115     010D                     LATB            equ	269	;# 
  4116     010E                     LATC            equ	270	;# 
  4117     0111                     CM1CON0         equ	273	;# 
  4118     0112                     CM1CON1         equ	274	;# 
  4119     0113                     CM2CON0         equ	275	;# 
  4120     0114                     CM2CON1         equ	276	;# 
  4121     0115                     CMOUT           equ	277	;# 
  4122     0116                     BORCON          equ	278	;# 
  4123     0117                     FVRCON          equ	279	;# 
  4124     0118                     DACCON0         equ	280	;# 
  4125     0119                     DACCON1         equ	281	;# 
  4126     018C                     ANSELA          equ	396	;# 
  4127     018D                     ANSELB          equ	397	;# 
  4128     018E                     ANSELC          equ	398	;# 
  4129     0197                     VREGCON         equ	407	;# 
  4130     0199                     RC1REG          equ	409	;# 
  4131     0199                     RCREG           equ	409	;# 
  4132     0199                     RCREG1          equ	409	;# 
  4133     019A                     TX1REG          equ	410	;# 
  4134     019A                     TXREG1          equ	410	;# 
  4135     019A                     TXREG           equ	410	;# 
  4136     019B                     SP1BRG          equ	411	;# 
  4137     019B                     SPBRG           equ	411	;# 
  4138     019B                     SP1BRGL         equ	411	;# 
  4139     019B                     SPBRG1          equ	411	;# 
  4140     019B                     SPBRGL          equ	411	;# 
  4141     019C                     SP1BRGH         equ	412	;# 
  4142     019C                     SPBRGH          equ	412	;# 
  4143     019C                     SPBRGH1         equ	412	;# 
  4144     019D                     RC1STA          equ	413	;# 
  4145     019D                     RCSTA1          equ	413	;# 
  4146     019D                     RCSTA           equ	413	;# 
  4147     019E                     TX1STA          equ	414	;# 
  4148     019E                     TXSTA1          equ	414	;# 
  4149     019E                     TXSTA           equ	414	;# 
  4150     019F                     BAUD1CON        equ	415	;# 
  4151     019F                     BAUDCON1        equ	415	;# 
  4152     019F                     BAUDCTL1        equ	415	;# 
  4153     019F                     BAUDCON         equ	415	;# 
  4154     019F                     BAUDCTL         equ	415	;# 
  4155     020C                     WPUA            equ	524	;# 
  4156     020D                     WPUB            equ	525	;# 
  4157     020E                     WPUC            equ	526	;# 
  4158     0211                     SSP1BUF         equ	529	;# 
  4159     0211                     SSPBUF          equ	529	;# 
  4160     0212                     SSP1ADD         equ	530	;# 
  4161     0212                     SSPADD          equ	530	;# 
  4162     0213                     SSP1MSK         equ	531	;# 
  4163     0213                     SSPMSK          equ	531	;# 
  4164     0214                     SSP1STAT        equ	532	;# 
  4165     0214                     SSPSTAT         equ	532	;# 
  4166     0215                     SSP1CON1        equ	533	;# 
  4167     0215                     SSPCON          equ	533	;# 
  4168     0215                     SSPCON1         equ	533	;# 
  4169     0215                     SSP1CON         equ	533	;# 
  4170     0216                     SSP1CON2        equ	534	;# 
  4171     0216                     SSPCON2         equ	534	;# 
  4172     0217                     SSP1CON3        equ	535	;# 
  4173     0217                     SSPCON3         equ	535	;# 
  4174     0219                     SSP2BUF         equ	537	;# 
  4175     021A                     SSP2ADD         equ	538	;# 
  4176     021B                     SSP2MSK         equ	539	;# 
  4177     021C                     SSP2STAT        equ	540	;# 
  4178     021D                     SSP2CON1        equ	541	;# 
  4179     021D                     SSP2CON         equ	541	;# 
  4180     021E                     SSP2CON2        equ	542	;# 
  4181     021F                     SSP2CON3        equ	543	;# 
  4182     028C                     ODCONA          equ	652	;# 
  4183     028D                     ODCONB          equ	653	;# 
  4184     028E                     ODCONC          equ	654	;# 
  4185     0291                     CCPR1           equ	657	;# 
  4186     0291                     CCPR1L          equ	657	;# 
  4187     0292                     CCPR1H          equ	658	;# 
  4188     0293                     CCP1CON         equ	659	;# 
  4189     0294                     CCP1CAP         equ	660	;# 
  4190     0295                     CCPR2           equ	661	;# 
  4191     0295                     CCPR2L          equ	661	;# 
  4192     0296                     CCPR2H          equ	662	;# 
  4193     0297                     CCP2CON         equ	663	;# 
  4194     0298                     CCP2CAP         equ	664	;# 
  4195     029F                     CCPTMRS         equ	671	;# 
  4196     030C                     SLRCONA         equ	780	;# 
  4197     030D                     SLRCONB         equ	781	;# 
  4198     030E                     SLRCONC         equ	782	;# 
  4199     0311                     CCPR3           equ	785	;# 
  4200     0311                     CCPR3L          equ	785	;# 
  4201     0312                     CCPR3H          equ	786	;# 
  4202     0313                     CCP3CON         equ	787	;# 
  4203     0314                     CCP3CAP         equ	788	;# 
  4204     0315                     CCPR4           equ	789	;# 
  4205     0315                     CCPR4L          equ	789	;# 
  4206     0316                     CCPR4H          equ	790	;# 
  4207     0317                     CCP4CON         equ	791	;# 
  4208     0318                     CCP4CAP         equ	792	;# 
  4209     038C                     INLVLA          equ	908	;# 
  4210     038D                     INLVLB          equ	909	;# 
  4211     038E                     INLVLC          equ	910	;# 
  4212     0391                     IOCAP           equ	913	;# 
  4213     0392                     IOCAN           equ	914	;# 
  4214     0393                     IOCAF           equ	915	;# 
  4215     0394                     IOCBP           equ	916	;# 
  4216     0395                     IOCBN           equ	917	;# 
  4217     0396                     IOCBF           equ	918	;# 
  4218     0397                     IOCCP           equ	919	;# 
  4219     0398                     IOCCN           equ	920	;# 
  4220     0399                     IOCCF           equ	921	;# 
  4221     039A                     CLKRCON         equ	922	;# 
  4222     039C                     MDCON           equ	924	;# 
  4223     039D                     MDSRC           equ	925	;# 
  4224     039E                     MDCARH          equ	926	;# 
  4225     039F                     MDCARL          equ	927	;# 
  4226     0411                     TMR3            equ	1041	;# 
  4227     0411                     TMR3L           equ	1041	;# 
  4228     0412                     TMR3H           equ	1042	;# 
  4229     0413                     T3CON           equ	1043	;# 
  4230     0414                     T3GCON          equ	1044	;# 
  4231     0415                     TMR4            equ	1045	;# 
  4232     0416                     PR4             equ	1046	;# 
  4233     0417                     T4CON           equ	1047	;# 
  4234     0418                     TMR5            equ	1048	;# 
  4235     0418                     TMR5L           equ	1048	;# 
  4236     0419                     TMR5H           equ	1049	;# 
  4237     041A                     T5CON           equ	1050	;# 
  4238     041B                     T5GCON          equ	1051	;# 
  4239     041C                     TMR6            equ	1052	;# 
  4240     041D                     PR6             equ	1053	;# 
  4241     041E                     T6CON           equ	1054	;# 
  4242     041F                     CCDCON          equ	1055	;# 
  4243     0498                     NCO1ACC         equ	1176	;# 
  4244     0498                     NCO1ACCL        equ	1176	;# 
  4245     0499                     NCO1ACCH        equ	1177	;# 
  4246     049A                     NCO1ACCU        equ	1178	;# 
  4247     049B                     NCO1INC         equ	1179	;# 
  4248     049B                     NCO1INCL        equ	1179	;# 
  4249     049C                     NCO1INCH        equ	1180	;# 
  4250     049D                     NCO1INCU        equ	1181	;# 
  4251     049E                     NCO1CON         equ	1182	;# 
  4252     049F                     NCO1CLK         equ	1183	;# 
  4253     0617                     PWM5DCL         equ	1559	;# 
  4254     0618                     PWM5DCH         equ	1560	;# 
  4255     0619                     PWM5CON         equ	1561	;# 
  4256     0619                     PWM5CON0        equ	1561	;# 
  4257     061A                     PWM6DCL         equ	1562	;# 
  4258     061B                     PWM6DCH         equ	1563	;# 
  4259     061C                     PWM6CON         equ	1564	;# 
  4260     061C                     PWM6CON0        equ	1564	;# 
  4261     061F                     PWMTMRS         equ	1567	;# 
  4262     0691                     CWG1CLKCON      equ	1681	;# 
  4263     0692                     CWG1DAT         equ	1682	;# 
  4264     0693                     CWG1DBR         equ	1683	;# 
  4265     0694                     CWG1DBF         equ	1684	;# 
  4266     0695                     CWG1CON0        equ	1685	;# 
  4267     0696                     CWG1CON1        equ	1686	;# 
  4268     0697                     CWG1AS0         equ	1687	;# 
  4269     0698                     CWG1AS1         equ	1688	;# 
  4270     0699                     CWG1STR         equ	1689	;# 
  4271     0711                     CWG2CLKCON      equ	1809	;# 
  4272     0712                     CWG2DAT         equ	1810	;# 
  4273     0713                     CWG2DBR         equ	1811	;# 
  4274     0714                     CWG2DBF         equ	1812	;# 
  4275     0715                     CWG2CON0        equ	1813	;# 
  4276     0716                     CWG2CON1        equ	1814	;# 
  4277     0717                     CWG2AS0         equ	1815	;# 
  4278     0718                     CWG2AS1         equ	1816	;# 
  4279     0719                     CWG2STR         equ	1817	;# 
  4280     0891                     NVMADR          equ	2193	;# 
  4281     0891                     EEADR           equ	2193	;# 
  4282     0891                     PMADR           equ	2193	;# 
  4283     0891                     NVMADRL         equ	2193	;# 
  4284     0891                     EEADRL          equ	2193	;# 
  4285     0891                     PMADRL          equ	2193	;# 
  4286     0892                     NVMADRH         equ	2194	;# 
  4287     0892                     EEADRH          equ	2194	;# 
  4288     0892                     PMADRH          equ	2194	;# 
  4289     0893                     NVMDAT          equ	2195	;# 
  4290     0893                     EEDAT           equ	2195	;# 
  4291     0893                     PMDAT           equ	2195	;# 
  4292     0893                     NVMDATL         equ	2195	;# 
  4293     0893                     EEDATL          equ	2195	;# 
  4294     0893                     PMDATL          equ	2195	;# 
  4295     0894                     NVMDATH         equ	2196	;# 
  4296     0894                     EEDATH          equ	2196	;# 
  4297     0894                     PMDATH          equ	2196	;# 
  4298     0895                     NVMCON1         equ	2197	;# 
  4299     0895                     EECON1          equ	2197	;# 
  4300     0895                     PMCON1          equ	2197	;# 
  4301     0896                     NVMCON2         equ	2198	;# 
  4302     0896                     EECON2          equ	2198	;# 
  4303     0896                     PMCON2          equ	2198	;# 
  4304     089B                     PCON0           equ	2203	;# 
  4305     0911                     PMD0            equ	2321	;# 
  4306     0912                     PMD1            equ	2322	;# 
  4307     0913                     PMD2            equ	2323	;# 
  4308     0914                     PMD3            equ	2324	;# 
  4309     0915                     PMD4            equ	2325	;# 
  4310     0916                     PMD5            equ	2326	;# 
  4311     0918                     CPUDOZE         equ	2328	;# 
  4312     0919                     OSCCON1         equ	2329	;# 
  4313     091A                     OSCCON2         equ	2330	;# 
  4314     091B                     OSCCON3         equ	2331	;# 
  4315     091C                     OSCSTAT1        equ	2332	;# 
  4316     091D                     OSCEN           equ	2333	;# 
  4317     091E                     OSCTUNE         equ	2334	;# 
  4318     091F                     OSCFRQ          equ	2335	;# 
  4319     0E0F                     PPSLOCK         equ	3599	;# 
  4320     0E10                     INTPPS          equ	3600	;# 
  4321     0E11                     T0CKIPPS        equ	3601	;# 
  4322     0E12                     T1CKIPPS        equ	3602	;# 
  4323     0E13                     T1GPPS          equ	3603	;# 
  4324     0E14                     CCP1PPS         equ	3604	;# 
  4325     0E15                     CCP2PPS         equ	3605	;# 
  4326     0E16                     CCP3PPS         equ	3606	;# 
  4327     0E17                     CCP4PPS         equ	3607	;# 
  4328     0E18                     CWG1PPS         equ	3608	;# 
  4329     0E19                     CWG2PPS         equ	3609	;# 
  4330     0E1A                     MDCIN1PPS       equ	3610	;# 
  4331     0E1B                     MDCIN2PPS       equ	3611	;# 
  4332     0E1C                     MDMINPPS        equ	3612	;# 
  4333     0E1D                     SSP2CLKPPS      equ	3613	;# 
  4334     0E1E                     SSP2DATPPS      equ	3614	;# 
  4335     0E1F                     SSP2SSPPS       equ	3615	;# 
  4336     0E20                     SSP1CLKPPS      equ	3616	;# 
  4337     0E21                     SSP1DATPPS      equ	3617	;# 
  4338     0E22                     SSP1SSPPS       equ	3618	;# 
  4339     0E24                     RXPPS           equ	3620	;# 
  4340     0E25                     TXPPS           equ	3621	;# 
  4341     0E28                     CLCIN0PPS       equ	3624	;# 
  4342     0E29                     CLCIN1PPS       equ	3625	;# 
  4343     0E2A                     CLCIN2PPS       equ	3626	;# 
  4344     0E2B                     CLCIN3PPS       equ	3627	;# 
  4345     0E2C                     T3CKIPPS        equ	3628	;# 
  4346     0E2D                     T3GPPS          equ	3629	;# 
  4347     0E2E                     T5CKIPPS        equ	3630	;# 
  4348     0E2F                     T5GPPS          equ	3631	;# 
  4349     0E90                     RA0PPS          equ	3728	;# 
  4350     0E91                     RA1PPS          equ	3729	;# 
  4351     0E92                     RA2PPS          equ	3730	;# 
  4352     0E94                     RA4PPS          equ	3732	;# 
  4353     0E95                     RA5PPS          equ	3733	;# 
  4354     0E9C                     RB4PPS          equ	3740	;# 
  4355     0E9D                     RB5PPS          equ	3741	;# 
  4356     0E9E                     RB6PPS          equ	3742	;# 
  4357     0E9F                     RB7PPS          equ	3743	;# 
  4358     0EA0                     RC0PPS          equ	3744	;# 
  4359     0EA1                     RC1PPS          equ	3745	;# 
  4360     0EA2                     RC2PPS          equ	3746	;# 
  4361     0EA3                     RC3PPS          equ	3747	;# 
  4362     0EA4                     RC4PPS          equ	3748	;# 
  4363     0EA5                     RC5PPS          equ	3749	;# 
  4364     0EA6                     RC6PPS          equ	3750	;# 
  4365     0EA7                     RC7PPS          equ	3751	;# 
  4366     0F0F                     CLCDATA         equ	3855	;# 
  4367     0F10                     CLC1CON         equ	3856	;# 
  4368     0F11                     CLC1POL         equ	3857	;# 
  4369     0F12                     CLC1SEL0        equ	3858	;# 
  4370     0F13                     CLC1SEL1        equ	3859	;# 
  4371     0F14                     CLC1SEL2        equ	3860	;# 
  4372     0F15                     CLC1SEL3        equ	3861	;# 
  4373     0F16                     CLC1GLS0        equ	3862	;# 
  4374     0F17                     CLC1GLS1        equ	3863	;# 
  4375     0F18                     CLC1GLS2        equ	3864	;# 
  4376     0F19                     CLC1GLS3        equ	3865	;# 
  4377     0F1A                     CLC2CON         equ	3866	;# 
  4378     0F1B                     CLC2POL         equ	3867	;# 
  4379     0F1C                     CLC2SEL0        equ	3868	;# 
  4380     0F1D                     CLC2SEL1        equ	3869	;# 
  4381     0F1E                     CLC2SEL2        equ	3870	;# 
  4382     0F1F                     CLC2SEL3        equ	3871	;# 
  4383     0F20                     CLC2GLS0        equ	3872	;# 
  4384     0F21                     CLC2GLS1        equ	3873	;# 
  4385     0F22                     CLC2GLS2        equ	3874	;# 
  4386     0F23                     CLC2GLS3        equ	3875	;# 
  4387     0F24                     CLC3CON         equ	3876	;# 
  4388     0F25                     CLC3POL         equ	3877	;# 
  4389     0F26                     CLC3SEL0        equ	3878	;# 
  4390     0F27                     CLC3SEL1        equ	3879	;# 
  4391     0F28                     CLC3SEL2        equ	3880	;# 
  4392     0F29                     CLC3SEL3        equ	3881	;# 
  4393     0F2A                     CLC3GLS0        equ	3882	;# 
  4394     0F2B                     CLC3GLS1        equ	3883	;# 
  4395     0F2C                     CLC3GLS2        equ	3884	;# 
  4396     0F2D                     CLC3GLS3        equ	3885	;# 
  4397     0F2E                     CLC4CON         equ	3886	;# 
  4398     0F2F                     CLC4POL         equ	3887	;# 
  4399     0F30                     CLC4SEL0        equ	3888	;# 
  4400     0F31                     CLC4SEL1        equ	3889	;# 
  4401     0F32                     CLC4SEL2        equ	3890	;# 
  4402     0F33                     CLC4SEL3        equ	3891	;# 
  4403     0F34                     CLC4GLS0        equ	3892	;# 
  4404     0F35                     CLC4GLS1        equ	3893	;# 
  4405     0F36                     CLC4GLS2        equ	3894	;# 
  4406     0F37                     CLC4GLS3        equ	3895	;# 
  4407     0FE4                     STATUS_SHAD     equ	4068	;# 
  4408     0FE5                     WREG_SHAD       equ	4069	;# 
  4409     0FE6                     BSR_SHAD        equ	4070	;# 
  4410     0FE7                     PCLATH_SHAD     equ	4071	;# 
  4411     0FE8                     FSR0L_SHAD      equ	4072	;# 
  4412     0FE9                     FSR0H_SHAD      equ	4073	;# 
  4413     0FEA                     FSR1L_SHAD      equ	4074	;# 
  4414     0FEB                     FSR1H_SHAD      equ	4075	;# 
  4415     0FED                     STKPTR          equ	4077	;# 
  4416     0FEE                     TOSL            equ	4078	;# 
  4417     0FEF                     TOSH            equ	4079	;# 
  4418     0000                     INDF0           equ	0	;# 
  4419     0001                     INDF1           equ	1	;# 
  4420     0002                     PCL             equ	2	;# 
  4421     0003                     STATUS          equ	3	;# 
  4422     0004                     FSR0L           equ	4	;# 
  4423     0005                     FSR0H           equ	5	;# 
  4424     0006                     FSR1L           equ	6	;# 
  4425     0007                     FSR1H           equ	7	;# 
  4426     0008                     BSR             equ	8	;# 
  4427     0009                     WREG            equ	9	;# 
  4428     000A                     PCLATH          equ	10	;# 
  4429     000B                     INTCON          equ	11	;# 
  4430     000C                     PORTA           equ	12	;# 
  4431     000D                     PORTB           equ	13	;# 
  4432     000E                     PORTC           equ	14	;# 
  4433     0010                     PIR0            equ	16	;# 
  4434     0011                     PIR1            equ	17	;# 
  4435     0012                     PIR2            equ	18	;# 
  4436     0013                     PIR3            equ	19	;# 
  4437     0014                     PIR4            equ	20	;# 
  4438     0015                     TMR0L           equ	21	;# 
  4439     0015                     TMR0            equ	21	;# 
  4440     0016                     TMR0H           equ	22	;# 
  4441     0016                     PR0             equ	22	;# 
  4442     0017                     T0CON0          equ	23	;# 
  4443     0018                     T0CON1          equ	24	;# 
  4444     0019                     TMR1            equ	25	;# 
  4445     0019                     TMR1L           equ	25	;# 
  4446     001A                     TMR1H           equ	26	;# 
  4447     001B                     T1CON           equ	27	;# 
  4448     001C                     T1GCON          equ	28	;# 
  4449     001D                     TMR2            equ	29	;# 
  4450     001E                     PR2             equ	30	;# 
  4451     001F                     T2CON           equ	31	;# 
  4452     008C                     TRISA           equ	140	;# 
  4453     008D                     TRISB           equ	141	;# 
  4454     008E                     TRISC           equ	142	;# 
  4455     0090                     PIE0            equ	144	;# 
  4456     0091                     PIE1            equ	145	;# 
  4457     0092                     PIE2            equ	146	;# 
  4458     0093                     PIE3            equ	147	;# 
  4459     0094                     PIE4            equ	148	;# 
  4460     0097                     WDTCON          equ	151	;# 
  4461     009B                     ADRES           equ	155	;# 
  4462     009B                     ADRESL          equ	155	;# 
  4463     009C                     ADRESH          equ	156	;# 
  4464     009D                     ADCON0          equ	157	;# 
  4465     009E                     ADCON1          equ	158	;# 
  4466     009F                     ADACT           equ	159	;# 
  4467     010C                     LATA            equ	268	;# 
  4468     010D                     LATB            equ	269	;# 
  4469     010E                     LATC            equ	270	;# 
  4470     0111                     CM1CON0         equ	273	;# 
  4471     0112                     CM1CON1         equ	274	;# 
  4472     0113                     CM2CON0         equ	275	;# 
  4473     0114                     CM2CON1         equ	276	;# 
  4474     0115                     CMOUT           equ	277	;# 
  4475     0116                     BORCON          equ	278	;# 
  4476     0117                     FVRCON          equ	279	;# 
  4477     0118                     DACCON0         equ	280	;# 
  4478     0119                     DACCON1         equ	281	;# 
  4479     018C                     ANSELA          equ	396	;# 
  4480     018D                     ANSELB          equ	397	;# 
  4481     018E                     ANSELC          equ	398	;# 
  4482     0197                     VREGCON         equ	407	;# 
  4483     0199                     RC1REG          equ	409	;# 
  4484     0199                     RCREG           equ	409	;# 
  4485     0199                     RCREG1          equ	409	;# 
  4486     019A                     TX1REG          equ	410	;# 
  4487     019A                     TXREG1          equ	410	;# 
  4488     019A                     TXREG           equ	410	;# 
  4489     019B                     SP1BRG          equ	411	;# 
  4490     019B                     SPBRG           equ	411	;# 
  4491     019B                     SP1BRGL         equ	411	;# 
  4492     019B                     SPBRG1          equ	411	;# 
  4493     019B                     SPBRGL          equ	411	;# 
  4494     019C                     SP1BRGH         equ	412	;# 
  4495     019C                     SPBRGH          equ	412	;# 
  4496     019C                     SPBRGH1         equ	412	;# 
  4497     019D                     RC1STA          equ	413	;# 
  4498     019D                     RCSTA1          equ	413	;# 
  4499     019D                     RCSTA           equ	413	;# 
  4500     019E                     TX1STA          equ	414	;# 
  4501     019E                     TXSTA1          equ	414	;# 
  4502     019E                     TXSTA           equ	414	;# 
  4503     019F                     BAUD1CON        equ	415	;# 
  4504     019F                     BAUDCON1        equ	415	;# 
  4505     019F                     BAUDCTL1        equ	415	;# 
  4506     019F                     BAUDCON         equ	415	;# 
  4507     019F                     BAUDCTL         equ	415	;# 
  4508     020C                     WPUA            equ	524	;# 
  4509     020D                     WPUB            equ	525	;# 
  4510     020E                     WPUC            equ	526	;# 
  4511     0211                     SSP1BUF         equ	529	;# 
  4512     0211                     SSPBUF          equ	529	;# 
  4513     0212                     SSP1ADD         equ	530	;# 
  4514     0212                     SSPADD          equ	530	;# 
  4515     0213                     SSP1MSK         equ	531	;# 
  4516     0213                     SSPMSK          equ	531	;# 
  4517     0214                     SSP1STAT        equ	532	;# 
  4518     0214                     SSPSTAT         equ	532	;# 
  4519     0215                     SSP1CON1        equ	533	;# 
  4520     0215                     SSPCON          equ	533	;# 
  4521     0215                     SSPCON1         equ	533	;# 
  4522     0215                     SSP1CON         equ	533	;# 
  4523     0216                     SSP1CON2        equ	534	;# 
  4524     0216                     SSPCON2         equ	534	;# 
  4525     0217                     SSP1CON3        equ	535	;# 
  4526     0217                     SSPCON3         equ	535	;# 
  4527     0219                     SSP2BUF         equ	537	;# 
  4528     021A                     SSP2ADD         equ	538	;# 
  4529     021B                     SSP2MSK         equ	539	;# 
  4530     021C                     SSP2STAT        equ	540	;# 
  4531     021D                     SSP2CON1        equ	541	;# 
  4532     021D                     SSP2CON         equ	541	;# 
  4533     021E                     SSP2CON2        equ	542	;# 
  4534     021F                     SSP2CON3        equ	543	;# 
  4535     028C                     ODCONA          equ	652	;# 
  4536     028D                     ODCONB          equ	653	;# 
  4537     028E                     ODCONC          equ	654	;# 
  4538     0291                     CCPR1           equ	657	;# 
  4539     0291                     CCPR1L          equ	657	;# 
  4540     0292                     CCPR1H          equ	658	;# 
  4541     0293                     CCP1CON         equ	659	;# 
  4542     0294                     CCP1CAP         equ	660	;# 
  4543     0295                     CCPR2           equ	661	;# 
  4544     0295                     CCPR2L          equ	661	;# 
  4545     0296                     CCPR2H          equ	662	;# 
  4546     0297                     CCP2CON         equ	663	;# 
  4547     0298                     CCP2CAP         equ	664	;# 
  4548     029F                     CCPTMRS         equ	671	;# 
  4549     030C                     SLRCONA         equ	780	;# 
  4550     030D                     SLRCONB         equ	781	;# 
  4551     030E                     SLRCONC         equ	782	;# 
  4552     0311                     CCPR3           equ	785	;# 
  4553     0311                     CCPR3L          equ	785	;# 
  4554     0312                     CCPR3H          equ	786	;# 
  4555     0313                     CCP3CON         equ	787	;# 
  4556     0314                     CCP3CAP         equ	788	;# 
  4557     0315                     CCPR4           equ	789	;# 
  4558     0315                     CCPR4L          equ	789	;# 
  4559     0316                     CCPR4H          equ	790	;# 
  4560     0317                     CCP4CON         equ	791	;# 
  4561     0318                     CCP4CAP         equ	792	;# 
  4562     038C                     INLVLA          equ	908	;# 
  4563     038D                     INLVLB          equ	909	;# 
  4564     038E                     INLVLC          equ	910	;# 
  4565     0391                     IOCAP           equ	913	;# 
  4566     0392                     IOCAN           equ	914	;# 
  4567     0393                     IOCAF           equ	915	;# 
  4568     0394                     IOCBP           equ	916	;# 
  4569     0395                     IOCBN           equ	917	;# 
  4570     0396                     IOCBF           equ	918	;# 
  4571     0397                     IOCCP           equ	919	;# 
  4572     0398                     IOCCN           equ	920	;# 
  4573     0399                     IOCCF           equ	921	;# 
  4574     039A                     CLKRCON         equ	922	;# 
  4575     039C                     MDCON           equ	924	;# 
  4576     039D                     MDSRC           equ	925	;# 
  4577     039E                     MDCARH          equ	926	;# 
  4578     039F                     MDCARL          equ	927	;# 
  4579     0411                     TMR3            equ	1041	;# 
  4580     0411                     TMR3L           equ	1041	;# 
  4581     0412                     TMR3H           equ	1042	;# 
  4582     0413                     T3CON           equ	1043	;# 
  4583     0414                     T3GCON          equ	1044	;# 
  4584     0415                     TMR4            equ	1045	;# 
  4585     0416                     PR4             equ	1046	;# 
  4586     0417                     T4CON           equ	1047	;# 
  4587     0418                     TMR5            equ	1048	;# 
  4588     0418                     TMR5L           equ	1048	;# 
  4589     0419                     TMR5H           equ	1049	;# 
  4590     041A                     T5CON           equ	1050	;# 
  4591     041B                     T5GCON          equ	1051	;# 
  4592     041C                     TMR6            equ	1052	;# 
  4593     041D                     PR6             equ	1053	;# 
  4594     041E                     T6CON           equ	1054	;# 
  4595     041F                     CCDCON          equ	1055	;# 
  4596     0498                     NCO1ACC         equ	1176	;# 
  4597     0498                     NCO1ACCL        equ	1176	;# 
  4598     0499                     NCO1ACCH        equ	1177	;# 
  4599     049A                     NCO1ACCU        equ	1178	;# 
  4600     049B                     NCO1INC         equ	1179	;# 
  4601     049B                     NCO1INCL        equ	1179	;# 
  4602     049C                     NCO1INCH        equ	1180	;# 
  4603     049D                     NCO1INCU        equ	1181	;# 
  4604     049E                     NCO1CON         equ	1182	;# 
  4605     049F                     NCO1CLK         equ	1183	;# 
  4606     0617                     PWM5DCL         equ	1559	;# 
  4607     0618                     PWM5DCH         equ	1560	;# 
  4608     0619                     PWM5CON         equ	1561	;# 
  4609     0619                     PWM5CON0        equ	1561	;# 
  4610     061A                     PWM6DCL         equ	1562	;# 
  4611     061B                     PWM6DCH         equ	1563	;# 
  4612     061C                     PWM6CON         equ	1564	;# 
  4613     061C                     PWM6CON0        equ	1564	;# 
  4614     061F                     PWMTMRS         equ	1567	;# 
  4615     0691                     CWG1CLKCON      equ	1681	;# 
  4616     0692                     CWG1DAT         equ	1682	;# 
  4617     0693                     CWG1DBR         equ	1683	;# 
  4618     0694                     CWG1DBF         equ	1684	;# 
  4619     0695                     CWG1CON0        equ	1685	;# 
  4620     0696                     CWG1CON1        equ	1686	;# 
  4621     0697                     CWG1AS0         equ	1687	;# 
  4622     0698                     CWG1AS1         equ	1688	;# 
  4623     0699                     CWG1STR         equ	1689	;# 
  4624     0711                     CWG2CLKCON      equ	1809	;# 
  4625     0712                     CWG2DAT         equ	1810	;# 
  4626     0713                     CWG2DBR         equ	1811	;# 
  4627     0714                     CWG2DBF         equ	1812	;# 
  4628     0715                     CWG2CON0        equ	1813	;# 
  4629     0716                     CWG2CON1        equ	1814	;# 
  4630     0717                     CWG2AS0         equ	1815	;# 
  4631     0718                     CWG2AS1         equ	1816	;# 
  4632     0719                     CWG2STR         equ	1817	;# 
  4633     0891                     NVMADR          equ	2193	;# 
  4634     0891                     EEADR           equ	2193	;# 
  4635     0891                     PMADR           equ	2193	;# 
  4636     0891                     NVMADRL         equ	2193	;# 
  4637     0891                     EEADRL          equ	2193	;# 
  4638     0891                     PMADRL          equ	2193	;# 
  4639     0892                     NVMADRH         equ	2194	;# 
  4640     0892                     EEADRH          equ	2194	;# 
  4641     0892                     PMADRH          equ	2194	;# 
  4642     0893                     NVMDAT          equ	2195	;# 
  4643     0893                     EEDAT           equ	2195	;# 
  4644     0893                     PMDAT           equ	2195	;# 
  4645     0893                     NVMDATL         equ	2195	;# 
  4646     0893                     EEDATL          equ	2195	;# 
  4647     0893                     PMDATL          equ	2195	;# 
  4648     0894                     NVMDATH         equ	2196	;# 
  4649     0894                     EEDATH          equ	2196	;# 
  4650     0894                     PMDATH          equ	2196	;# 
  4651     0895                     NVMCON1         equ	2197	;# 
  4652     0895                     EECON1          equ	2197	;# 
  4653     0895                     PMCON1          equ	2197	;# 
  4654     0896                     NVMCON2         equ	2198	;# 
  4655     0896                     EECON2          equ	2198	;# 
  4656     0896                     PMCON2          equ	2198	;# 
  4657     089B                     PCON0           equ	2203	;# 
  4658     0911                     PMD0            equ	2321	;# 
  4659     0912                     PMD1            equ	2322	;# 
  4660     0913                     PMD2            equ	2323	;# 
  4661     0914                     PMD3            equ	2324	;# 
  4662     0915                     PMD4            equ	2325	;# 
  4663     0916                     PMD5            equ	2326	;# 
  4664     0918                     CPUDOZE         equ	2328	;# 
  4665     0919                     OSCCON1         equ	2329	;# 
  4666     091A                     OSCCON2         equ	2330	;# 
  4667     091B                     OSCCON3         equ	2331	;# 
  4668     091C                     OSCSTAT1        equ	2332	;# 
  4669     091D                     OSCEN           equ	2333	;# 
  4670     091E                     OSCTUNE         equ	2334	;# 
  4671     091F                     OSCFRQ          equ	2335	;# 
  4672     0E0F                     PPSLOCK         equ	3599	;# 
  4673     0E10                     INTPPS          equ	3600	;# 
  4674     0E11                     T0CKIPPS        equ	3601	;# 
  4675     0E12                     T1CKIPPS        equ	3602	;# 
  4676     0E13                     T1GPPS          equ	3603	;# 
  4677     0E14                     CCP1PPS         equ	3604	;# 
  4678     0E15                     CCP2PPS         equ	3605	;# 
  4679     0E16                     CCP3PPS         equ	3606	;# 
  4680     0E17                     CCP4PPS         equ	3607	;# 
  4681     0E18                     CWG1PPS         equ	3608	;# 
  4682     0E19                     CWG2PPS         equ	3609	;# 
  4683     0E1A                     MDCIN1PPS       equ	3610	;# 
  4684     0E1B                     MDCIN2PPS       equ	3611	;# 
  4685     0E1C                     MDMINPPS        equ	3612	;# 
  4686     0E1D                     SSP2CLKPPS      equ	3613	;# 
  4687     0E1E                     SSP2DATPPS      equ	3614	;# 
  4688     0E1F                     SSP2SSPPS       equ	3615	;# 
  4689     0E20                     SSP1CLKPPS      equ	3616	;# 
  4690     0E21                     SSP1DATPPS      equ	3617	;# 
  4691     0E22                     SSP1SSPPS       equ	3618	;# 
  4692     0E24                     RXPPS           equ	3620	;# 
  4693     0E25                     TXPPS           equ	3621	;# 
  4694     0E28                     CLCIN0PPS       equ	3624	;# 
  4695     0E29                     CLCIN1PPS       equ	3625	;# 
  4696     0E2A                     CLCIN2PPS       equ	3626	;# 
  4697     0E2B                     CLCIN3PPS       equ	3627	;# 
  4698     0E2C                     T3CKIPPS        equ	3628	;# 
  4699     0E2D                     T3GPPS          equ	3629	;# 
  4700     0E2E                     T5CKIPPS        equ	3630	;# 
  4701     0E2F                     T5GPPS          equ	3631	;# 
  4702     0E90                     RA0PPS          equ	3728	;# 
  4703     0E91                     RA1PPS          equ	3729	;# 
  4704     0E92                     RA2PPS          equ	3730	;# 
  4705     0E94                     RA4PPS          equ	3732	;# 
  4706     0E95                     RA5PPS          equ	3733	;# 
  4707     0E9C                     RB4PPS          equ	3740	;# 
  4708     0E9D                     RB5PPS          equ	3741	;# 
  4709     0E9E                     RB6PPS          equ	3742	;# 
  4710     0E9F                     RB7PPS          equ	3743	;# 
  4711     0EA0                     RC0PPS          equ	3744	;# 
  4712     0EA1                     RC1PPS          equ	3745	;# 
  4713     0EA2                     RC2PPS          equ	3746	;# 
  4714     0EA3                     RC3PPS          equ	3747	;# 
  4715     0EA4                     RC4PPS          equ	3748	;# 
  4716     0EA5                     RC5PPS          equ	3749	;# 
  4717     0EA6                     RC6PPS          equ	3750	;# 
  4718     0EA7                     RC7PPS          equ	3751	;# 
  4719     0F0F                     CLCDATA         equ	3855	;# 
  4720     0F10                     CLC1CON         equ	3856	;# 
  4721     0F11                     CLC1POL         equ	3857	;# 
  4722     0F12                     CLC1SEL0        equ	3858	;# 
  4723     0F13                     CLC1SEL1        equ	3859	;# 
  4724     0F14                     CLC1SEL2        equ	3860	;# 
  4725     0F15                     CLC1SEL3        equ	3861	;# 
  4726     0F16                     CLC1GLS0        equ	3862	;# 
  4727     0F17                     CLC1GLS1        equ	3863	;# 
  4728     0F18                     CLC1GLS2        equ	3864	;# 
  4729     0F19                     CLC1GLS3        equ	3865	;# 
  4730     0F1A                     CLC2CON         equ	3866	;# 
  4731     0F1B                     CLC2POL         equ	3867	;# 
  4732     0F1C                     CLC2SEL0        equ	3868	;# 
  4733     0F1D                     CLC2SEL1        equ	3869	;# 
  4734     0F1E                     CLC2SEL2        equ	3870	;# 
  4735     0F1F                     CLC2SEL3        equ	3871	;# 
  4736     0F20                     CLC2GLS0        equ	3872	;# 
  4737     0F21                     CLC2GLS1        equ	3873	;# 
  4738     0F22                     CLC2GLS2        equ	3874	;# 
  4739     0F23                     CLC2GLS3        equ	3875	;# 
  4740     0F24                     CLC3CON         equ	3876	;# 
  4741     0F25                     CLC3POL         equ	3877	;# 
  4742     0F26                     CLC3SEL0        equ	3878	;# 
  4743     0F27                     CLC3SEL1        equ	3879	;# 
  4744     0F28                     CLC3SEL2        equ	3880	;# 
  4745     0F29                     CLC3SEL3        equ	3881	;# 
  4746     0F2A                     CLC3GLS0        equ	3882	;# 
  4747     0F2B                     CLC3GLS1        equ	3883	;# 
  4748     0F2C                     CLC3GLS2        equ	3884	;# 
  4749     0F2D                     CLC3GLS3        equ	3885	;# 
  4750     0F2E                     CLC4CON         equ	3886	;# 
  4751     0F2F                     CLC4POL         equ	3887	;# 
  4752     0F30                     CLC4SEL0        equ	3888	;# 
  4753     0F31                     CLC4SEL1        equ	3889	;# 
  4754     0F32                     CLC4SEL2        equ	3890	;# 
  4755     0F33                     CLC4SEL3        equ	3891	;# 
  4756     0F34                     CLC4GLS0        equ	3892	;# 
  4757     0F35                     CLC4GLS1        equ	3893	;# 
  4758     0F36                     CLC4GLS2        equ	3894	;# 
  4759     0F37                     CLC4GLS3        equ	3895	;# 
  4760     0FE4                     STATUS_SHAD     equ	4068	;# 
  4761     0FE5                     WREG_SHAD       equ	4069	;# 
  4762     0FE6                     BSR_SHAD        equ	4070	;# 
  4763     0FE7                     PCLATH_SHAD     equ	4071	;# 
  4764     0FE8                     FSR0L_SHAD      equ	4072	;# 
  4765     0FE9                     FSR0H_SHAD      equ	4073	;# 
  4766     0FEA                     FSR1L_SHAD      equ	4074	;# 
  4767     0FEB                     FSR1H_SHAD      equ	4075	;# 
  4768     0FED                     STKPTR          equ	4077	;# 
  4769     0FEE                     TOSL            equ	4078	;# 
  4770     0FEF                     TOSH            equ	4079	;# 
  4771     0000                     INDF0           equ	0	;# 
  4772     0001                     INDF1           equ	1	;# 
  4773     0002                     PCL             equ	2	;# 
  4774     0003                     STATUS          equ	3	;# 
  4775     0004                     FSR0L           equ	4	;# 
  4776     0005                     FSR0H           equ	5	;# 
  4777     0006                     FSR1L           equ	6	;# 
  4778     0007                     FSR1H           equ	7	;# 
  4779     0008                     BSR             equ	8	;# 
  4780     0009                     WREG            equ	9	;# 
  4781     000A                     PCLATH          equ	10	;# 
  4782     000B                     INTCON          equ	11	;# 
  4783     000C                     PORTA           equ	12	;# 
  4784     000D                     PORTB           equ	13	;# 
  4785     000E                     PORTC           equ	14	;# 
  4786     0010                     PIR0            equ	16	;# 
  4787     0011                     PIR1            equ	17	;# 
  4788     0012                     PIR2            equ	18	;# 
  4789     0013                     PIR3            equ	19	;# 
  4790     0014                     PIR4            equ	20	;# 
  4791     0015                     TMR0L           equ	21	;# 
  4792     0015                     TMR0            equ	21	;# 
  4793     0016                     TMR0H           equ	22	;# 
  4794     0016                     PR0             equ	22	;# 
  4795     0017                     T0CON0          equ	23	;# 
  4796     0018                     T0CON1          equ	24	;# 
  4797     0019                     TMR1            equ	25	;# 
  4798     0019                     TMR1L           equ	25	;# 
  4799     001A                     TMR1H           equ	26	;# 
  4800     001B                     T1CON           equ	27	;# 
  4801     001C                     T1GCON          equ	28	;# 
  4802     001D                     TMR2            equ	29	;# 
  4803     001E                     PR2             equ	30	;# 
  4804     001F                     T2CON           equ	31	;# 
  4805     008C                     TRISA           equ	140	;# 
  4806     008D                     TRISB           equ	141	;# 
  4807     008E                     TRISC           equ	142	;# 
  4808     0090                     PIE0            equ	144	;# 
  4809     0091                     PIE1            equ	145	;# 
  4810     0092                     PIE2            equ	146	;# 
  4811     0093                     PIE3            equ	147	;# 
  4812     0094                     PIE4            equ	148	;# 
  4813     0097                     WDTCON          equ	151	;# 
  4814     009B                     ADRES           equ	155	;# 
  4815     009B                     ADRESL          equ	155	;# 
  4816     009C                     ADRESH          equ	156	;# 
  4817     009D                     ADCON0          equ	157	;# 
  4818     009E                     ADCON1          equ	158	;# 
  4819     009F                     ADACT           equ	159	;# 
  4820     010C                     LATA            equ	268	;# 
  4821     010D                     LATB            equ	269	;# 
  4822     010E                     LATC            equ	270	;# 
  4823     0111                     CM1CON0         equ	273	;# 
  4824     0112                     CM1CON1         equ	274	;# 
  4825     0113                     CM2CON0         equ	275	;# 
  4826     0114                     CM2CON1         equ	276	;# 
  4827     0115                     CMOUT           equ	277	;# 
  4828     0116                     BORCON          equ	278	;# 
  4829     0117                     FVRCON          equ	279	;# 
  4830     0118                     DACCON0         equ	280	;# 
  4831     0119                     DACCON1         equ	281	;# 
  4832     018C                     ANSELA          equ	396	;# 
  4833     018D                     ANSELB          equ	397	;# 
  4834     018E                     ANSELC          equ	398	;# 
  4835     0197                     VREGCON         equ	407	;# 
  4836     0199                     RC1REG          equ	409	;# 
  4837     0199                     RCREG           equ	409	;# 
  4838     0199                     RCREG1          equ	409	;# 
  4839     019A                     TX1REG          equ	410	;# 
  4840     019A                     TXREG1          equ	410	;# 
  4841     019A                     TXREG           equ	410	;# 
  4842     019B                     SP1BRG          equ	411	;# 
  4843     019B                     SPBRG           equ	411	;# 
  4844     019B                     SP1BRGL         equ	411	;# 
  4845     019B                     SPBRG1          equ	411	;# 
  4846     019B                     SPBRGL          equ	411	;# 
  4847     019C                     SP1BRGH         equ	412	;# 
  4848     019C                     SPBRGH          equ	412	;# 
  4849     019C                     SPBRGH1         equ	412	;# 
  4850     019D                     RC1STA          equ	413	;# 
  4851     019D                     RCSTA1          equ	413	;# 
  4852     019D                     RCSTA           equ	413	;# 
  4853     019E                     TX1STA          equ	414	;# 
  4854     019E                     TXSTA1          equ	414	;# 
  4855     019E                     TXSTA           equ	414	;# 
  4856     019F                     BAUD1CON        equ	415	;# 
  4857     019F                     BAUDCON1        equ	415	;# 
  4858     019F                     BAUDCTL1        equ	415	;# 
  4859     019F                     BAUDCON         equ	415	;# 
  4860     019F                     BAUDCTL         equ	415	;# 
  4861     020C                     WPUA            equ	524	;# 
  4862     020D                     WPUB            equ	525	;# 
  4863     020E                     WPUC            equ	526	;# 
  4864     0211                     SSP1BUF         equ	529	;# 
  4865     0211                     SSPBUF          equ	529	;# 
  4866     0212                     SSP1ADD         equ	530	;# 
  4867     0212                     SSPADD          equ	530	;# 
  4868     0213                     SSP1MSK         equ	531	;# 
  4869     0213                     SSPMSK          equ	531	;# 
  4870     0214                     SSP1STAT        equ	532	;# 
  4871     0214                     SSPSTAT         equ	532	;# 
  4872     0215                     SSP1CON1        equ	533	;# 
  4873     0215                     SSPCON          equ	533	;# 
  4874     0215                     SSPCON1         equ	533	;# 
  4875     0215                     SSP1CON         equ	533	;# 
  4876     0216                     SSP1CON2        equ	534	;# 
  4877     0216                     SSPCON2         equ	534	;# 
  4878     0217                     SSP1CON3        equ	535	;# 
  4879     0217                     SSPCON3         equ	535	;# 
  4880     0219                     SSP2BUF         equ	537	;# 
  4881     021A                     SSP2ADD         equ	538	;# 
  4882     021B                     SSP2MSK         equ	539	;# 
  4883     021C                     SSP2STAT        equ	540	;# 
  4884     021D                     SSP2CON1        equ	541	;# 
  4885     021D                     SSP2CON         equ	541	;# 
  4886     021E                     SSP2CON2        equ	542	;# 
  4887     021F                     SSP2CON3        equ	543	;# 
  4888     028C                     ODCONA          equ	652	;# 
  4889     028D                     ODCONB          equ	653	;# 
  4890     028E                     ODCONC          equ	654	;# 
  4891     0291                     CCPR1           equ	657	;# 
  4892     0291                     CCPR1L          equ	657	;# 
  4893     0292                     CCPR1H          equ	658	;# 
  4894     0293                     CCP1CON         equ	659	;# 
  4895     0294                     CCP1CAP         equ	660	;# 
  4896     0295                     CCPR2           equ	661	;# 
  4897     0295                     CCPR2L          equ	661	;# 
  4898     0296                     CCPR2H          equ	662	;# 
  4899     0297                     CCP2CON         equ	663	;# 
  4900     0298                     CCP2CAP         equ	664	;# 
  4901     029F                     CCPTMRS         equ	671	;# 
  4902     030C                     SLRCONA         equ	780	;# 
  4903     030D                     SLRCONB         equ	781	;# 
  4904     030E                     SLRCONC         equ	782	;# 
  4905     0311                     CCPR3           equ	785	;# 
  4906     0311                     CCPR3L          equ	785	;# 
  4907     0312                     CCPR3H          equ	786	;# 
  4908     0313                     CCP3CON         equ	787	;# 
  4909     0314                     CCP3CAP         equ	788	;# 
  4910     0315                     CCPR4           equ	789	;# 
  4911     0315                     CCPR4L          equ	789	;# 
  4912     0316                     CCPR4H          equ	790	;# 
  4913     0317                     CCP4CON         equ	791	;# 
  4914     0318                     CCP4CAP         equ	792	;# 
  4915     038C                     INLVLA          equ	908	;# 
  4916     038D                     INLVLB          equ	909	;# 
  4917     038E                     INLVLC          equ	910	;# 
  4918     0391                     IOCAP           equ	913	;# 
  4919     0392                     IOCAN           equ	914	;# 
  4920     0393                     IOCAF           equ	915	;# 
  4921     0394                     IOCBP           equ	916	;# 
  4922     0395                     IOCBN           equ	917	;# 
  4923     0396                     IOCBF           equ	918	;# 
  4924     0397                     IOCCP           equ	919	;# 
  4925     0398                     IOCCN           equ	920	;# 
  4926     0399                     IOCCF           equ	921	;# 
  4927     039A                     CLKRCON         equ	922	;# 
  4928     039C                     MDCON           equ	924	;# 
  4929     039D                     MDSRC           equ	925	;# 
  4930     039E                     MDCARH          equ	926	;# 
  4931     039F                     MDCARL          equ	927	;# 
  4932     0411                     TMR3            equ	1041	;# 
  4933     0411                     TMR3L           equ	1041	;# 
  4934     0412                     TMR3H           equ	1042	;# 
  4935     0413                     T3CON           equ	1043	;# 
  4936     0414                     T3GCON          equ	1044	;# 
  4937     0415                     TMR4            equ	1045	;# 
  4938     0416                     PR4             equ	1046	;# 
  4939     0417                     T4CON           equ	1047	;# 
  4940     0418                     TMR5            equ	1048	;# 
  4941     0418                     TMR5L           equ	1048	;# 
  4942     0419                     TMR5H           equ	1049	;# 
  4943     041A                     T5CON           equ	1050	;# 
  4944     041B                     T5GCON          equ	1051	;# 
  4945     041C                     TMR6            equ	1052	;# 
  4946     041D                     PR6             equ	1053	;# 
  4947     041E                     T6CON           equ	1054	;# 
  4948     041F                     CCDCON          equ	1055	;# 
  4949     0498                     NCO1ACC         equ	1176	;# 
  4950     0498                     NCO1ACCL        equ	1176	;# 
  4951     0499                     NCO1ACCH        equ	1177	;# 
  4952     049A                     NCO1ACCU        equ	1178	;# 
  4953     049B                     NCO1INC         equ	1179	;# 
  4954     049B                     NCO1INCL        equ	1179	;# 
  4955     049C                     NCO1INCH        equ	1180	;# 
  4956     049D                     NCO1INCU        equ	1181	;# 
  4957     049E                     NCO1CON         equ	1182	;# 
  4958     049F                     NCO1CLK         equ	1183	;# 
  4959     0617                     PWM5DCL         equ	1559	;# 
  4960     0618                     PWM5DCH         equ	1560	;# 
  4961     0619                     PWM5CON         equ	1561	;# 
  4962     0619                     PWM5CON0        equ	1561	;# 
  4963     061A                     PWM6DCL         equ	1562	;# 
  4964     061B                     PWM6DCH         equ	1563	;# 
  4965     061C                     PWM6CON         equ	1564	;# 
  4966     061C                     PWM6CON0        equ	1564	;# 
  4967     061F                     PWMTMRS         equ	1567	;# 
  4968     0691                     CWG1CLKCON      equ	1681	;# 
  4969     0692                     CWG1DAT         equ	1682	;# 
  4970     0693                     CWG1DBR         equ	1683	;# 
  4971     0694                     CWG1DBF         equ	1684	;# 
  4972     0695                     CWG1CON0        equ	1685	;# 
  4973     0696                     CWG1CON1        equ	1686	;# 
  4974     0697                     CWG1AS0         equ	1687	;# 
  4975     0698                     CWG1AS1         equ	1688	;# 
  4976     0699                     CWG1STR         equ	1689	;# 
  4977     0711                     CWG2CLKCON      equ	1809	;# 
  4978     0712                     CWG2DAT         equ	1810	;# 
  4979     0713                     CWG2DBR         equ	1811	;# 
  4980     0714                     CWG2DBF         equ	1812	;# 
  4981     0715                     CWG2CON0        equ	1813	;# 
  4982     0716                     CWG2CON1        equ	1814	;# 
  4983     0717                     CWG2AS0         equ	1815	;# 
  4984     0718                     CWG2AS1         equ	1816	;# 
  4985     0719                     CWG2STR         equ	1817	;# 
  4986     0891                     NVMADR          equ	2193	;# 
  4987     0891                     EEADR           equ	2193	;# 
  4988     0891                     PMADR           equ	2193	;# 
  4989     0891                     NVMADRL         equ	2193	;# 
  4990     0891                     EEADRL          equ	2193	;# 
  4991     0891                     PMADRL          equ	2193	;# 
  4992     0892                     NVMADRH         equ	2194	;# 
  4993     0892                     EEADRH          equ	2194	;# 
  4994     0892                     PMADRH          equ	2194	;# 
  4995     0893                     NVMDAT          equ	2195	;# 
  4996     0893                     EEDAT           equ	2195	;# 
  4997     0893                     PMDAT           equ	2195	;# 
  4998     0893                     NVMDATL         equ	2195	;# 
  4999     0893                     EEDATL          equ	2195	;# 
  5000     0893                     PMDATL          equ	2195	;# 
  5001     0894                     NVMDATH         equ	2196	;# 
  5002     0894                     EEDATH          equ	2196	;# 
  5003     0894                     PMDATH          equ	2196	;# 
  5004     0895                     NVMCON1         equ	2197	;# 
  5005     0895                     EECON1          equ	2197	;# 
  5006     0895                     PMCON1          equ	2197	;# 
  5007     0896                     NVMCON2         equ	2198	;# 
  5008     0896                     EECON2          equ	2198	;# 
  5009     0896                     PMCON2          equ	2198	;# 
  5010     089B                     PCON0           equ	2203	;# 
  5011     0911                     PMD0            equ	2321	;# 
  5012     0912                     PMD1            equ	2322	;# 
  5013     0913                     PMD2            equ	2323	;# 
  5014     0914                     PMD3            equ	2324	;# 
  5015     0915                     PMD4            equ	2325	;# 
  5016     0916                     PMD5            equ	2326	;# 
  5017     0918                     CPUDOZE         equ	2328	;# 
  5018     0919                     OSCCON1         equ	2329	;# 
  5019     091A                     OSCCON2         equ	2330	;# 
  5020     091B                     OSCCON3         equ	2331	;# 
  5021     091C                     OSCSTAT1        equ	2332	;# 
  5022     091D                     OSCEN           equ	2333	;# 
  5023     091E                     OSCTUNE         equ	2334	;# 
  5024     091F                     OSCFRQ          equ	2335	;# 
  5025     0E0F                     PPSLOCK         equ	3599	;# 
  5026     0E10                     INTPPS          equ	3600	;# 
  5027     0E11                     T0CKIPPS        equ	3601	;# 
  5028     0E12                     T1CKIPPS        equ	3602	;# 
  5029     0E13                     T1GPPS          equ	3603	;# 
  5030     0E14                     CCP1PPS         equ	3604	;# 
  5031     0E15                     CCP2PPS         equ	3605	;# 
  5032     0E16                     CCP3PPS         equ	3606	;# 
  5033     0E17                     CCP4PPS         equ	3607	;# 
  5034     0E18                     CWG1PPS         equ	3608	;# 
  5035     0E19                     CWG2PPS         equ	3609	;# 
  5036     0E1A                     MDCIN1PPS       equ	3610	;# 
  5037     0E1B                     MDCIN2PPS       equ	3611	;# 
  5038     0E1C                     MDMINPPS        equ	3612	;# 
  5039     0E1D                     SSP2CLKPPS      equ	3613	;# 
  5040     0E1E                     SSP2DATPPS      equ	3614	;# 
  5041     0E1F                     SSP2SSPPS       equ	3615	;# 
  5042     0E20                     SSP1CLKPPS      equ	3616	;# 
  5043     0E21                     SSP1DATPPS      equ	3617	;# 
  5044     0E22                     SSP1SSPPS       equ	3618	;# 
  5045     0E24                     RXPPS           equ	3620	;# 
  5046     0E25                     TXPPS           equ	3621	;# 
  5047     0E28                     CLCIN0PPS       equ	3624	;# 
  5048     0E29                     CLCIN1PPS       equ	3625	;# 
  5049     0E2A                     CLCIN2PPS       equ	3626	;# 
  5050     0E2B                     CLCIN3PPS       equ	3627	;# 
  5051     0E2C                     T3CKIPPS        equ	3628	;# 
  5052     0E2D                     T3GPPS          equ	3629	;# 
  5053     0E2E                     T5CKIPPS        equ	3630	;# 
  5054     0E2F                     T5GPPS          equ	3631	;# 
  5055     0E90                     RA0PPS          equ	3728	;# 
  5056     0E91                     RA1PPS          equ	3729	;# 
  5057     0E92                     RA2PPS          equ	3730	;# 
  5058     0E94                     RA4PPS          equ	3732	;# 
  5059     0E95                     RA5PPS          equ	3733	;# 
  5060     0E9C                     RB4PPS          equ	3740	;# 
  5061     0E9D                     RB5PPS          equ	3741	;# 
  5062     0E9E                     RB6PPS          equ	3742	;# 
  5063     0E9F                     RB7PPS          equ	3743	;# 
  5064     0EA0                     RC0PPS          equ	3744	;# 
  5065     0EA1                     RC1PPS          equ	3745	;# 
  5066     0EA2                     RC2PPS          equ	3746	;# 
  5067     0EA3                     RC3PPS          equ	3747	;# 
  5068     0EA4                     RC4PPS          equ	3748	;# 
  5069     0EA5                     RC5PPS          equ	3749	;# 
  5070     0EA6                     RC6PPS          equ	3750	;# 
  5071     0EA7                     RC7PPS          equ	3751	;# 
  5072     0F0F                     CLCDATA         equ	3855	;# 
  5073     0F10                     CLC1CON         equ	3856	;# 
  5074     0F11                     CLC1POL         equ	3857	;# 
  5075     0F12                     CLC1SEL0        equ	3858	;# 
  5076     0F13                     CLC1SEL1        equ	3859	;# 
  5077     0F14                     CLC1SEL2        equ	3860	;# 
  5078     0F15                     CLC1SEL3        equ	3861	;# 
  5079     0F16                     CLC1GLS0        equ	3862	;# 
  5080     0F17                     CLC1GLS1        equ	3863	;# 
  5081     0F18                     CLC1GLS2        equ	3864	;# 
  5082     0F19                     CLC1GLS3        equ	3865	;# 
  5083     0F1A                     CLC2CON         equ	3866	;# 
  5084     0F1B                     CLC2POL         equ	3867	;# 
  5085     0F1C                     CLC2SEL0        equ	3868	;# 
  5086     0F1D                     CLC2SEL1        equ	3869	;# 
  5087     0F1E                     CLC2SEL2        equ	3870	;# 
  5088     0F1F                     CLC2SEL3        equ	3871	;# 
  5089     0F20                     CLC2GLS0        equ	3872	;# 
  5090     0F21                     CLC2GLS1        equ	3873	;# 
  5091     0F22                     CLC2GLS2        equ	3874	;# 
  5092     0F23                     CLC2GLS3        equ	3875	;# 
  5093     0F24                     CLC3CON         equ	3876	;# 
  5094     0F25                     CLC3POL         equ	3877	;# 
  5095     0F26                     CLC3SEL0        equ	3878	;# 
  5096     0F27                     CLC3SEL1        equ	3879	;# 
  5097     0F28                     CLC3SEL2        equ	3880	;# 
  5098     0F29                     CLC3SEL3        equ	3881	;# 
  5099     0F2A                     CLC3GLS0        equ	3882	;# 
  5100     0F2B                     CLC3GLS1        equ	3883	;# 
  5101     0F2C                     CLC3GLS2        equ	3884	;# 
  5102     0F2D                     CLC3GLS3        equ	3885	;# 
  5103     0F2E                     CLC4CON         equ	3886	;# 
  5104     0F2F                     CLC4POL         equ	3887	;# 
  5105     0F30                     CLC4SEL0        equ	3888	;# 
  5106     0F31                     CLC4SEL1        equ	3889	;# 
  5107     0F32                     CLC4SEL2        equ	3890	;# 
  5108     0F33                     CLC4SEL3        equ	3891	;# 
  5109     0F34                     CLC4GLS0        equ	3892	;# 
  5110     0F35                     CLC4GLS1        equ	3893	;# 
  5111     0F36                     CLC4GLS2        equ	3894	;# 
  5112     0F37                     CLC4GLS3        equ	3895	;# 
  5113     0FE4                     STATUS_SHAD     equ	4068	;# 
  5114     0FE5                     WREG_SHAD       equ	4069	;# 
  5115     0FE6                     BSR_SHAD        equ	4070	;# 
  5116     0FE7                     PCLATH_SHAD     equ	4071	;# 
  5117     0FE8                     FSR0L_SHAD      equ	4072	;# 
  5118     0FE9                     FSR0H_SHAD      equ	4073	;# 
  5119     0FEA                     FSR1L_SHAD      equ	4074	;# 
  5120     0FEB                     FSR1H_SHAD      equ	4075	;# 
  5121     0FED                     STKPTR          equ	4077	;# 
  5122     0FEE                     TOSL            equ	4078	;# 
  5123     0FEF                     TOSH            equ	4079	;# 
  5124     0000                     INDF0           equ	0	;# 
  5125     0001                     INDF1           equ	1	;# 
  5126     0002                     PCL             equ	2	;# 
  5127     0003                     STATUS          equ	3	;# 
  5128     0004                     FSR0L           equ	4	;# 
  5129     0005                     FSR0H           equ	5	;# 
  5130     0006                     FSR1L           equ	6	;# 
  5131     0007                     FSR1H           equ	7	;# 
  5132     0008                     BSR             equ	8	;# 
  5133     0009                     WREG            equ	9	;# 
  5134     000A                     PCLATH          equ	10	;# 
  5135     000B                     INTCON          equ	11	;# 
  5136     000C                     PORTA           equ	12	;# 
  5137     000D                     PORTB           equ	13	;# 
  5138     000E                     PORTC           equ	14	;# 
  5139     0010                     PIR0            equ	16	;# 
  5140     0011                     PIR1            equ	17	;# 
  5141     0012                     PIR2            equ	18	;# 
  5142     0013                     PIR3            equ	19	;# 
  5143     0014                     PIR4            equ	20	;# 
  5144     0015                     TMR0L           equ	21	;# 
  5145     0015                     TMR0            equ	21	;# 
  5146     0016                     TMR0H           equ	22	;# 
  5147     0016                     PR0             equ	22	;# 
  5148     0017                     T0CON0          equ	23	;# 
  5149     0018                     T0CON1          equ	24	;# 
  5150     0019                     TMR1            equ	25	;# 
  5151     0019                     TMR1L           equ	25	;# 
  5152     001A                     TMR1H           equ	26	;# 
  5153     001B                     T1CON           equ	27	;# 
  5154     001C                     T1GCON          equ	28	;# 
  5155     001D                     TMR2            equ	29	;# 
  5156     001E                     PR2             equ	30	;# 
  5157     001F                     T2CON           equ	31	;# 
  5158     008C                     TRISA           equ	140	;# 
  5159     008D                     TRISB           equ	141	;# 
  5160     008E                     TRISC           equ	142	;# 
  5161     0090                     PIE0            equ	144	;# 
  5162     0091                     PIE1            equ	145	;# 
  5163     0092                     PIE2            equ	146	;# 
  5164     0093                     PIE3            equ	147	;# 
  5165     0094                     PIE4            equ	148	;# 
  5166     0097                     WDTCON          equ	151	;# 
  5167     009B                     ADRES           equ	155	;# 
  5168     009B                     ADRESL          equ	155	;# 
  5169     009C                     ADRESH          equ	156	;# 
  5170     009D                     ADCON0          equ	157	;# 
  5171     009E                     ADCON1          equ	158	;# 
  5172     009F                     ADACT           equ	159	;# 
  5173     010C                     LATA            equ	268	;# 
  5174     010D                     LATB            equ	269	;# 
  5175     010E                     LATC            equ	270	;# 
  5176     0111                     CM1CON0         equ	273	;# 
  5177     0112                     CM1CON1         equ	274	;# 
  5178     0113                     CM2CON0         equ	275	;# 
  5179     0114                     CM2CON1         equ	276	;# 
  5180     0115                     CMOUT           equ	277	;# 
  5181     0116                     BORCON          equ	278	;# 
  5182     0117                     FVRCON          equ	279	;# 
  5183     0118                     DACCON0         equ	280	;# 
  5184     0119                     DACCON1         equ	281	;# 
  5185     018C                     ANSELA          equ	396	;# 
  5186     018D                     ANSELB          equ	397	;# 
  5187     018E                     ANSELC          equ	398	;# 
  5188     0197                     VREGCON         equ	407	;# 
  5189     0199                     RC1REG          equ	409	;# 
  5190     0199                     RCREG           equ	409	;# 
  5191     0199                     RCREG1          equ	409	;# 
  5192     019A                     TX1REG          equ	410	;# 
  5193     019A                     TXREG1          equ	410	;# 
  5194     019A                     TXREG           equ	410	;# 
  5195     019B                     SP1BRG          equ	411	;# 
  5196     019B                     SPBRG           equ	411	;# 
  5197     019B                     SP1BRGL         equ	411	;# 
  5198     019B                     SPBRG1          equ	411	;# 
  5199     019B                     SPBRGL          equ	411	;# 
  5200     019C                     SP1BRGH         equ	412	;# 
  5201     019C                     SPBRGH          equ	412	;# 
  5202     019C                     SPBRGH1         equ	412	;# 
  5203     019D                     RC1STA          equ	413	;# 
  5204     019D                     RCSTA1          equ	413	;# 
  5205     019D                     RCSTA           equ	413	;# 
  5206     019E                     TX1STA          equ	414	;# 
  5207     019E                     TXSTA1          equ	414	;# 
  5208     019E                     TXSTA           equ	414	;# 
  5209     019F                     BAUD1CON        equ	415	;# 
  5210     019F                     BAUDCON1        equ	415	;# 
  5211     019F                     BAUDCTL1        equ	415	;# 
  5212     019F                     BAUDCON         equ	415	;# 
  5213     019F                     BAUDCTL         equ	415	;# 
  5214     020C                     WPUA            equ	524	;# 
  5215     020D                     WPUB            equ	525	;# 
  5216     020E                     WPUC            equ	526	;# 
  5217     0211                     SSP1BUF         equ	529	;# 
  5218     0211                     SSPBUF          equ	529	;# 
  5219     0212                     SSP1ADD         equ	530	;# 
  5220     0212                     SSPADD          equ	530	;# 
  5221     0213                     SSP1MSK         equ	531	;# 
  5222     0213                     SSPMSK          equ	531	;# 
  5223     0214                     SSP1STAT        equ	532	;# 
  5224     0214                     SSPSTAT         equ	532	;# 
  5225     0215                     SSP1CON1        equ	533	;# 
  5226     0215                     SSPCON          equ	533	;# 
  5227     0215                     SSPCON1         equ	533	;# 
  5228     0215                     SSP1CON         equ	533	;# 
  5229     0216                     SSP1CON2        equ	534	;# 
  5230     0216                     SSPCON2         equ	534	;# 
  5231     0217                     SSP1CON3        equ	535	;# 
  5232     0217                     SSPCON3         equ	535	;# 
  5233     0219                     SSP2BUF         equ	537	;# 
  5234     021A                     SSP2ADD         equ	538	;# 
  5235     021B                     SSP2MSK         equ	539	;# 
  5236     021C                     SSP2STAT        equ	540	;# 
  5237     021D                     SSP2CON1        equ	541	;# 
  5238     021D                     SSP2CON         equ	541	;# 
  5239     021E                     SSP2CON2        equ	542	;# 
  5240     021F                     SSP2CON3        equ	543	;# 
  5241     028C                     ODCONA          equ	652	;# 
  5242     028D                     ODCONB          equ	653	;# 
  5243     028E                     ODCONC          equ	654	;# 
  5244     0291                     CCPR1           equ	657	;# 
  5245     0291                     CCPR1L          equ	657	;# 
  5246     0292                     CCPR1H          equ	658	;# 
  5247     0293                     CCP1CON         equ	659	;# 
  5248     0294                     CCP1CAP         equ	660	;# 
  5249     0295                     CCPR2           equ	661	;# 
  5250     0295                     CCPR2L          equ	661	;# 
  5251     0296                     CCPR2H          equ	662	;# 
  5252     0297                     CCP2CON         equ	663	;# 
  5253     0298                     CCP2CAP         equ	664	;# 
  5254     029F                     CCPTMRS         equ	671	;# 
  5255     030C                     SLRCONA         equ	780	;# 
  5256     030D                     SLRCONB         equ	781	;# 
  5257     030E                     SLRCONC         equ	782	;# 
  5258     0311                     CCPR3           equ	785	;# 
  5259     0311                     CCPR3L          equ	785	;# 
  5260     0312                     CCPR3H          equ	786	;# 
  5261     0313                     CCP3CON         equ	787	;# 
  5262     0314                     CCP3CAP         equ	788	;# 
  5263     0315                     CCPR4           equ	789	;# 
  5264     0315                     CCPR4L          equ	789	;# 
  5265     0316                     CCPR4H          equ	790	;# 
  5266     0317                     CCP4CON         equ	791	;# 
  5267     0318                     CCP4CAP         equ	792	;# 
  5268     038C                     INLVLA          equ	908	;# 
  5269     038D                     INLVLB          equ	909	;# 
  5270     038E                     INLVLC          equ	910	;# 
  5271     0391                     IOCAP           equ	913	;# 
  5272     0392                     IOCAN           equ	914	;# 
  5273     0393                     IOCAF           equ	915	;# 
  5274     0394                     IOCBP           equ	916	;# 
  5275     0395                     IOCBN           equ	917	;# 
  5276     0396                     IOCBF           equ	918	;# 
  5277     0397                     IOCCP           equ	919	;# 
  5278     0398                     IOCCN           equ	920	;# 
  5279     0399                     IOCCF           equ	921	;# 
  5280     039A                     CLKRCON         equ	922	;# 
  5281     039C                     MDCON           equ	924	;# 
  5282     039D                     MDSRC           equ	925	;# 
  5283     039E                     MDCARH          equ	926	;# 
  5284     039F                     MDCARL          equ	927	;# 
  5285     0411                     TMR3            equ	1041	;# 
  5286     0411                     TMR3L           equ	1041	;# 
  5287     0412                     TMR3H           equ	1042	;# 
  5288     0413                     T3CON           equ	1043	;# 
  5289     0414                     T3GCON          equ	1044	;# 
  5290     0415                     TMR4            equ	1045	;# 
  5291     0416                     PR4             equ	1046	;# 
  5292     0417                     T4CON           equ	1047	;# 
  5293     0418                     TMR5            equ	1048	;# 
  5294     0418                     TMR5L           equ	1048	;# 
  5295     0419                     TMR5H           equ	1049	;# 
  5296     041A                     T5CON           equ	1050	;# 
  5297     041B                     T5GCON          equ	1051	;# 
  5298     041C                     TMR6            equ	1052	;# 
  5299     041D                     PR6             equ	1053	;# 
  5300     041E                     T6CON           equ	1054	;# 
  5301     041F                     CCDCON          equ	1055	;# 
  5302     0498                     NCO1ACC         equ	1176	;# 
  5303     0498                     NCO1ACCL        equ	1176	;# 
  5304     0499                     NCO1ACCH        equ	1177	;# 
  5305     049A                     NCO1ACCU        equ	1178	;# 
  5306     049B                     NCO1INC         equ	1179	;# 
  5307     049B                     NCO1INCL        equ	1179	;# 
  5308     049C                     NCO1INCH        equ	1180	;# 
  5309     049D                     NCO1INCU        equ	1181	;# 
  5310     049E                     NCO1CON         equ	1182	;# 
  5311     049F                     NCO1CLK         equ	1183	;# 
  5312     0617                     PWM5DCL         equ	1559	;# 
  5313     0618                     PWM5DCH         equ	1560	;# 
  5314     0619                     PWM5CON         equ	1561	;# 
  5315     0619                     PWM5CON0        equ	1561	;# 
  5316     061A                     PWM6DCL         equ	1562	;# 
  5317     061B                     PWM6DCH         equ	1563	;# 
  5318     061C                     PWM6CON         equ	1564	;# 
  5319     061C                     PWM6CON0        equ	1564	;# 
  5320     061F                     PWMTMRS         equ	1567	;# 
  5321     0691                     CWG1CLKCON      equ	1681	;# 
  5322     0692                     CWG1DAT         equ	1682	;# 
  5323     0693                     CWG1DBR         equ	1683	;# 
  5324     0694                     CWG1DBF         equ	1684	;# 
  5325     0695                     CWG1CON0        equ	1685	;# 
  5326     0696                     CWG1CON1        equ	1686	;# 
  5327     0697                     CWG1AS0         equ	1687	;# 
  5328     0698                     CWG1AS1         equ	1688	;# 
  5329     0699                     CWG1STR         equ	1689	;# 
  5330     0711                     CWG2CLKCON      equ	1809	;# 
  5331     0712                     CWG2DAT         equ	1810	;# 
  5332     0713                     CWG2DBR         equ	1811	;# 
  5333     0714                     CWG2DBF         equ	1812	;# 
  5334     0715                     CWG2CON0        equ	1813	;# 
  5335     0716                     CWG2CON1        equ	1814	;# 
  5336     0717                     CWG2AS0         equ	1815	;# 
  5337     0718                     CWG2AS1         equ	1816	;# 
  5338     0719                     CWG2STR         equ	1817	;# 
  5339     0891                     NVMADR          equ	2193	;# 
  5340     0891                     EEADR           equ	2193	;# 
  5341     0891                     PMADR           equ	2193	;# 
  5342     0891                     NVMADRL         equ	2193	;# 
  5343     0891                     EEADRL          equ	2193	;# 
  5344     0891                     PMADRL          equ	2193	;# 
  5345     0892                     NVMADRH         equ	2194	;# 
  5346     0892                     EEADRH          equ	2194	;# 
  5347     0892                     PMADRH          equ	2194	;# 
  5348     0893                     NVMDAT          equ	2195	;# 
  5349     0893                     EEDAT           equ	2195	;# 
  5350     0893                     PMDAT           equ	2195	;# 
  5351     0893                     NVMDATL         equ	2195	;# 
  5352     0893                     EEDATL          equ	2195	;# 
  5353     0893                     PMDATL          equ	2195	;# 
  5354     0894                     NVMDATH         equ	2196	;# 
  5355     0894                     EEDATH          equ	2196	;# 
  5356     0894                     PMDATH          equ	2196	;# 
  5357     0895                     NVMCON1         equ	2197	;# 
  5358     0895                     EECON1          equ	2197	;# 
  5359     0895                     PMCON1          equ	2197	;# 
  5360     0896                     NVMCON2         equ	2198	;# 
  5361     0896                     EECON2          equ	2198	;# 
  5362     0896                     PMCON2          equ	2198	;# 
  5363     089B                     PCON0           equ	2203	;# 
  5364     0911                     PMD0            equ	2321	;# 
  5365     0912                     PMD1            equ	2322	;# 
  5366     0913                     PMD2            equ	2323	;# 
  5367     0914                     PMD3            equ	2324	;# 
  5368     0915                     PMD4            equ	2325	;# 
  5369     0916                     PMD5            equ	2326	;# 
  5370     0918                     CPUDOZE         equ	2328	;# 
  5371     0919                     OSCCON1         equ	2329	;# 
  5372     091A                     OSCCON2         equ	2330	;# 
  5373     091B                     OSCCON3         equ	2331	;# 
  5374     091C                     OSCSTAT1        equ	2332	;# 
  5375     091D                     OSCEN           equ	2333	;# 
  5376     091E                     OSCTUNE         equ	2334	;# 
  5377     091F                     OSCFRQ          equ	2335	;# 
  5378     0E0F                     PPSLOCK         equ	3599	;# 
  5379     0E10                     INTPPS          equ	3600	;# 
  5380     0E11                     T0CKIPPS        equ	3601	;# 
  5381     0E12                     T1CKIPPS        equ	3602	;# 
  5382     0E13                     T1GPPS          equ	3603	;# 
  5383     0E14                     CCP1PPS         equ	3604	;# 
  5384     0E15                     CCP2PPS         equ	3605	;# 
  5385     0E16                     CCP3PPS         equ	3606	;# 
  5386     0E17                     CCP4PPS         equ	3607	;# 
  5387     0E18                     CWG1PPS         equ	3608	;# 
  5388     0E19                     CWG2PPS         equ	3609	;# 
  5389     0E1A                     MDCIN1PPS       equ	3610	;# 
  5390     0E1B                     MDCIN2PPS       equ	3611	;# 
  5391     0E1C                     MDMINPPS        equ	3612	;# 
  5392     0E1D                     SSP2CLKPPS      equ	3613	;# 
  5393     0E1E                     SSP2DATPPS      equ	3614	;# 
  5394     0E1F                     SSP2SSPPS       equ	3615	;# 
  5395     0E20                     SSP1CLKPPS      equ	3616	;# 
  5396     0E21                     SSP1DATPPS      equ	3617	;# 
  5397     0E22                     SSP1SSPPS       equ	3618	;# 
  5398     0E24                     RXPPS           equ	3620	;# 
  5399     0E25                     TXPPS           equ	3621	;# 
  5400     0E28                     CLCIN0PPS       equ	3624	;# 
  5401     0E29                     CLCIN1PPS       equ	3625	;# 
  5402     0E2A                     CLCIN2PPS       equ	3626	;# 
  5403     0E2B                     CLCIN3PPS       equ	3627	;# 
  5404     0E2C                     T3CKIPPS        equ	3628	;# 
  5405     0E2D                     T3GPPS          equ	3629	;# 
  5406     0E2E                     T5CKIPPS        equ	3630	;# 
  5407     0E2F                     T5GPPS          equ	3631	;# 
  5408     0E90                     RA0PPS          equ	3728	;# 
  5409     0E91                     RA1PPS          equ	3729	;# 
  5410     0E92                     RA2PPS          equ	3730	;# 
  5411     0E94                     RA4PPS          equ	3732	;# 
  5412     0E95                     RA5PPS          equ	3733	;# 
  5413     0E9C                     RB4PPS          equ	3740	;# 
  5414     0E9D                     RB5PPS          equ	3741	;# 
  5415     0E9E                     RB6PPS          equ	3742	;# 
  5416     0E9F                     RB7PPS          equ	3743	;# 
  5417     0EA0                     RC0PPS          equ	3744	;# 
  5418     0EA1                     RC1PPS          equ	3745	;# 
  5419     0EA2                     RC2PPS          equ	3746	;# 
  5420     0EA3                     RC3PPS          equ	3747	;# 
  5421     0EA4                     RC4PPS          equ	3748	;# 
  5422     0EA5                     RC5PPS          equ	3749	;# 
  5423     0EA6                     RC6PPS          equ	3750	;# 
  5424     0EA7                     RC7PPS          equ	3751	;# 
  5425     0F0F                     CLCDATA         equ	3855	;# 
  5426     0F10                     CLC1CON         equ	3856	;# 
  5427     0F11                     CLC1POL         equ	3857	;# 
  5428     0F12                     CLC1SEL0        equ	3858	;# 
  5429     0F13                     CLC1SEL1        equ	3859	;# 
  5430     0F14                     CLC1SEL2        equ	3860	;# 
  5431     0F15                     CLC1SEL3        equ	3861	;# 
  5432     0F16                     CLC1GLS0        equ	3862	;# 
  5433     0F17                     CLC1GLS1        equ	3863	;# 
  5434     0F18                     CLC1GLS2        equ	3864	;# 
  5435     0F19                     CLC1GLS3        equ	3865	;# 
  5436     0F1A                     CLC2CON         equ	3866	;# 
  5437     0F1B                     CLC2POL         equ	3867	;# 
  5438     0F1C                     CLC2SEL0        equ	3868	;# 
  5439     0F1D                     CLC2SEL1        equ	3869	;# 
  5440     0F1E                     CLC2SEL2        equ	3870	;# 
  5441     0F1F                     CLC2SEL3        equ	3871	;# 
  5442     0F20                     CLC2GLS0        equ	3872	;# 
  5443     0F21                     CLC2GLS1        equ	3873	;# 
  5444     0F22                     CLC2GLS2        equ	3874	;# 
  5445     0F23                     CLC2GLS3        equ	3875	;# 
  5446     0F24                     CLC3CON         equ	3876	;# 
  5447     0F25                     CLC3POL         equ	3877	;# 
  5448     0F26                     CLC3SEL0        equ	3878	;# 
  5449     0F27                     CLC3SEL1        equ	3879	;# 
  5450     0F28                     CLC3SEL2        equ	3880	;# 
  5451     0F29                     CLC3SEL3        equ	3881	;# 
  5452     0F2A                     CLC3GLS0        equ	3882	;# 
  5453     0F2B                     CLC3GLS1        equ	3883	;# 
  5454     0F2C                     CLC3GLS2        equ	3884	;# 
  5455     0F2D                     CLC3GLS3        equ	3885	;# 
  5456     0F2E                     CLC4CON         equ	3886	;# 
  5457     0F2F                     CLC4POL         equ	3887	;# 
  5458     0F30                     CLC4SEL0        equ	3888	;# 
  5459     0F31                     CLC4SEL1        equ	3889	;# 
  5460     0F32                     CLC4SEL2        equ	3890	;# 
  5461     0F33                     CLC4SEL3        equ	3891	;# 
  5462     0F34                     CLC4GLS0        equ	3892	;# 
  5463     0F35                     CLC4GLS1        equ	3893	;# 
  5464     0F36                     CLC4GLS2        equ	3894	;# 
  5465     0F37                     CLC4GLS3        equ	3895	;# 
  5466     0FE4                     STATUS_SHAD     equ	4068	;# 
  5467     0FE5                     WREG_SHAD       equ	4069	;# 
  5468     0FE6                     BSR_SHAD        equ	4070	;# 
  5469     0FE7                     PCLATH_SHAD     equ	4071	;# 
  5470     0FE8                     FSR0L_SHAD      equ	4072	;# 
  5471     0FE9                     FSR0H_SHAD      equ	4073	;# 
  5472     0FEA                     FSR1L_SHAD      equ	4074	;# 
  5473     0FEB                     FSR1H_SHAD      equ	4075	;# 
  5474     0FED                     STKPTR          equ	4077	;# 
  5475     0FEE                     TOSL            equ	4078	;# 
  5476     0FEF                     TOSH            equ	4079	;# 
  5477     0000                     INDF0           equ	0	;# 
  5478     0001                     INDF1           equ	1	;# 
  5479     0002                     PCL             equ	2	;# 
  5480     0003                     STATUS          equ	3	;# 
  5481     0004                     FSR0L           equ	4	;# 
  5482     0005                     FSR0H           equ	5	;# 
  5483     0006                     FSR1L           equ	6	;# 
  5484     0007                     FSR1H           equ	7	;# 
  5485     0008                     BSR             equ	8	;# 
  5486     0009                     WREG            equ	9	;# 
  5487     000A                     PCLATH          equ	10	;# 
  5488     000B                     INTCON          equ	11	;# 
  5489     000C                     PORTA           equ	12	;# 
  5490     000D                     PORTB           equ	13	;# 
  5491     000E                     PORTC           equ	14	;# 
  5492     0010                     PIR0            equ	16	;# 
  5493     0011                     PIR1            equ	17	;# 
  5494     0012                     PIR2            equ	18	;# 
  5495     0013                     PIR3            equ	19	;# 
  5496     0014                     PIR4            equ	20	;# 
  5497     0015                     TMR0L           equ	21	;# 
  5498     0015                     TMR0            equ	21	;# 
  5499     0016                     TMR0H           equ	22	;# 
  5500     0016                     PR0             equ	22	;# 
  5501     0017                     T0CON0          equ	23	;# 
  5502     0018                     T0CON1          equ	24	;# 
  5503     0019                     TMR1            equ	25	;# 
  5504     0019                     TMR1L           equ	25	;# 
  5505     001A                     TMR1H           equ	26	;# 
  5506     001B                     T1CON           equ	27	;# 
  5507     001C                     T1GCON          equ	28	;# 
  5508     001D                     TMR2            equ	29	;# 
  5509     001E                     PR2             equ	30	;# 
  5510     001F                     T2CON           equ	31	;# 
  5511     008C                     TRISA           equ	140	;# 
  5512     008D                     TRISB           equ	141	;# 
  5513     008E                     TRISC           equ	142	;# 
  5514     0090                     PIE0            equ	144	;# 
  5515     0091                     PIE1            equ	145	;# 
  5516     0092                     PIE2            equ	146	;# 
  5517     0093                     PIE3            equ	147	;# 
  5518     0094                     PIE4            equ	148	;# 
  5519     0097                     WDTCON          equ	151	;# 
  5520     009B                     ADRES           equ	155	;# 
  5521     009B                     ADRESL          equ	155	;# 
  5522     009C                     ADRESH          equ	156	;# 
  5523     009D                     ADCON0          equ	157	;# 
  5524     009E                     ADCON1          equ	158	;# 
  5525     009F                     ADACT           equ	159	;# 
  5526     010C                     LATA            equ	268	;# 
  5527     010D                     LATB            equ	269	;# 
  5528     010E                     LATC            equ	270	;# 
  5529     0111                     CM1CON0         equ	273	;# 
  5530     0112                     CM1CON1         equ	274	;# 
  5531     0113                     CM2CON0         equ	275	;# 
  5532     0114                     CM2CON1         equ	276	;# 
  5533     0115                     CMOUT           equ	277	;# 
  5534     0116                     BORCON          equ	278	;# 
  5535     0117                     FVRCON          equ	279	;# 
  5536     0118                     DACCON0         equ	280	;# 
  5537     0119                     DACCON1         equ	281	;# 
  5538     018C                     ANSELA          equ	396	;# 
  5539     018D                     ANSELB          equ	397	;# 
  5540     018E                     ANSELC          equ	398	;# 
  5541     0197                     VREGCON         equ	407	;# 
  5542     0199                     RC1REG          equ	409	;# 
  5543     0199                     RCREG           equ	409	;# 
  5544     0199                     RCREG1          equ	409	;# 
  5545     019A                     TX1REG          equ	410	;# 
  5546     019A                     TXREG1          equ	410	;# 
  5547     019A                     TXREG           equ	410	;# 
  5548     019B                     SP1BRG          equ	411	;# 
  5549     019B                     SPBRG           equ	411	;# 
  5550     019B                     SP1BRGL         equ	411	;# 
  5551     019B                     SPBRG1          equ	411	;# 
  5552     019B                     SPBRGL          equ	411	;# 
  5553     019C                     SP1BRGH         equ	412	;# 
  5554     019C                     SPBRGH          equ	412	;# 
  5555     019C                     SPBRGH1         equ	412	;# 
  5556     019D                     RC1STA          equ	413	;# 
  5557     019D                     RCSTA1          equ	413	;# 
  5558     019D                     RCSTA           equ	413	;# 
  5559     019E                     TX1STA          equ	414	;# 
  5560     019E                     TXSTA1          equ	414	;# 
  5561     019E                     TXSTA           equ	414	;# 
  5562     019F                     BAUD1CON        equ	415	;# 
  5563     019F                     BAUDCON1        equ	415	;# 
  5564     019F                     BAUDCTL1        equ	415	;# 
  5565     019F                     BAUDCON         equ	415	;# 
  5566     019F                     BAUDCTL         equ	415	;# 
  5567     020C                     WPUA            equ	524	;# 
  5568     020D                     WPUB            equ	525	;# 
  5569     020E                     WPUC            equ	526	;# 
  5570     0211                     SSP1BUF         equ	529	;# 
  5571     0211                     SSPBUF          equ	529	;# 
  5572     0212                     SSP1ADD         equ	530	;# 
  5573     0212                     SSPADD          equ	530	;# 
  5574     0213                     SSP1MSK         equ	531	;# 
  5575     0213                     SSPMSK          equ	531	;# 
  5576     0214                     SSP1STAT        equ	532	;# 
  5577     0214                     SSPSTAT         equ	532	;# 
  5578     0215                     SSP1CON1        equ	533	;# 
  5579     0215                     SSPCON          equ	533	;# 
  5580     0215                     SSPCON1         equ	533	;# 
  5581     0215                     SSP1CON         equ	533	;# 
  5582     0216                     SSP1CON2        equ	534	;# 
  5583     0216                     SSPCON2         equ	534	;# 
  5584     0217                     SSP1CON3        equ	535	;# 
  5585     0217                     SSPCON3         equ	535	;# 
  5586     0219                     SSP2BUF         equ	537	;# 
  5587     021A                     SSP2ADD         equ	538	;# 
  5588     021B                     SSP2MSK         equ	539	;# 
  5589     021C                     SSP2STAT        equ	540	;# 
  5590     021D                     SSP2CON1        equ	541	;# 
  5591     021D                     SSP2CON         equ	541	;# 
  5592     021E                     SSP2CON2        equ	542	;# 
  5593     021F                     SSP2CON3        equ	543	;# 
  5594     028C                     ODCONA          equ	652	;# 
  5595     028D                     ODCONB          equ	653	;# 
  5596     028E                     ODCONC          equ	654	;# 
  5597     0291                     CCPR1           equ	657	;# 
  5598     0291                     CCPR1L          equ	657	;# 
  5599     0292                     CCPR1H          equ	658	;# 
  5600     0293                     CCP1CON         equ	659	;# 
  5601     0294                     CCP1CAP         equ	660	;# 
  5602     0295                     CCPR2           equ	661	;# 
  5603     0295                     CCPR2L          equ	661	;# 
  5604     0296                     CCPR2H          equ	662	;# 
  5605     0297                     CCP2CON         equ	663	;# 
  5606     0298                     CCP2CAP         equ	664	;# 
  5607     029F                     CCPTMRS         equ	671	;# 
  5608     030C                     SLRCONA         equ	780	;# 
  5609     030D                     SLRCONB         equ	781	;# 
  5610     030E                     SLRCONC         equ	782	;# 
  5611     0311                     CCPR3           equ	785	;# 
  5612     0311                     CCPR3L          equ	785	;# 
  5613     0312                     CCPR3H          equ	786	;# 
  5614     0313                     CCP3CON         equ	787	;# 
  5615     0314                     CCP3CAP         equ	788	;# 
  5616     0315                     CCPR4           equ	789	;# 
  5617     0315                     CCPR4L          equ	789	;# 
  5618     0316                     CCPR4H          equ	790	;# 
  5619     0317                     CCP4CON         equ	791	;# 
  5620     0318                     CCP4CAP         equ	792	;# 
  5621     038C                     INLVLA          equ	908	;# 
  5622     038D                     INLVLB          equ	909	;# 
  5623     038E                     INLVLC          equ	910	;# 
  5624     0391                     IOCAP           equ	913	;# 
  5625     0392                     IOCAN           equ	914	;# 
  5626     0393                     IOCAF           equ	915	;# 
  5627     0394                     IOCBP           equ	916	;# 
  5628     0395                     IOCBN           equ	917	;# 
  5629     0396                     IOCBF           equ	918	;# 
  5630     0397                     IOCCP           equ	919	;# 
  5631     0398                     IOCCN           equ	920	;# 
  5632     0399                     IOCCF           equ	921	;# 
  5633     039A                     CLKRCON         equ	922	;# 
  5634     039C                     MDCON           equ	924	;# 
  5635     039D                     MDSRC           equ	925	;# 
  5636     039E                     MDCARH          equ	926	;# 
  5637     039F                     MDCARL          equ	927	;# 
  5638     0411                     TMR3            equ	1041	;# 
  5639     0411                     TMR3L           equ	1041	;# 
  5640     0412                     TMR3H           equ	1042	;# 
  5641     0413                     T3CON           equ	1043	;# 
  5642     0414                     T3GCON          equ	1044	;# 
  5643     0415                     TMR4            equ	1045	;# 
  5644     0416                     PR4             equ	1046	;# 
  5645     0417                     T4CON           equ	1047	;# 
  5646     0418                     TMR5            equ	1048	;# 
  5647     0418                     TMR5L           equ	1048	;# 
  5648     0419                     TMR5H           equ	1049	;# 
  5649     041A                     T5CON           equ	1050	;# 
  5650     041B                     T5GCON          equ	1051	;# 
  5651     041C                     TMR6            equ	1052	;# 
  5652     041D                     PR6             equ	1053	;# 
  5653     041E                     T6CON           equ	1054	;# 
  5654     041F                     CCDCON          equ	1055	;# 
  5655     0498                     NCO1ACC         equ	1176	;# 
  5656     0498                     NCO1ACCL        equ	1176	;# 
  5657     0499                     NCO1ACCH        equ	1177	;# 
  5658     049A                     NCO1ACCU        equ	1178	;# 
  5659     049B                     NCO1INC         equ	1179	;# 
  5660     049B                     NCO1INCL        equ	1179	;# 
  5661     049C                     NCO1INCH        equ	1180	;# 
  5662     049D                     NCO1INCU        equ	1181	;# 
  5663     049E                     NCO1CON         equ	1182	;# 
  5664     049F                     NCO1CLK         equ	1183	;# 
  5665     0617                     PWM5DCL         equ	1559	;# 
  5666     0618                     PWM5DCH         equ	1560	;# 
  5667     0619                     PWM5CON         equ	1561	;# 
  5668     0619                     PWM5CON0        equ	1561	;# 
  5669     061A                     PWM6DCL         equ	1562	;# 
  5670     061B                     PWM6DCH         equ	1563	;# 
  5671     061C                     PWM6CON         equ	1564	;# 
  5672     061C                     PWM6CON0        equ	1564	;# 
  5673     061F                     PWMTMRS         equ	1567	;# 
  5674     0691                     CWG1CLKCON      equ	1681	;# 
  5675     0692                     CWG1DAT         equ	1682	;# 
  5676     0693                     CWG1DBR         equ	1683	;# 
  5677     0694                     CWG1DBF         equ	1684	;# 
  5678     0695                     CWG1CON0        equ	1685	;# 
  5679     0696                     CWG1CON1        equ	1686	;# 
  5680     0697                     CWG1AS0         equ	1687	;# 
  5681     0698                     CWG1AS1         equ	1688	;# 
  5682     0699                     CWG1STR         equ	1689	;# 
  5683     0711                     CWG2CLKCON      equ	1809	;# 
  5684     0712                     CWG2DAT         equ	1810	;# 
  5685     0713                     CWG2DBR         equ	1811	;# 
  5686     0714                     CWG2DBF         equ	1812	;# 
  5687     0715                     CWG2CON0        equ	1813	;# 
  5688     0716                     CWG2CON1        equ	1814	;# 
  5689     0717                     CWG2AS0         equ	1815	;# 
  5690     0718                     CWG2AS1         equ	1816	;# 
  5691     0719                     CWG2STR         equ	1817	;# 
  5692     0891                     NVMADR          equ	2193	;# 
  5693     0891                     EEADR           equ	2193	;# 
  5694     0891                     PMADR           equ	2193	;# 
  5695     0891                     NVMADRL         equ	2193	;# 
  5696     0891                     EEADRL          equ	2193	;# 
  5697     0891                     PMADRL          equ	2193	;# 
  5698     0892                     NVMADRH         equ	2194	;# 
  5699     0892                     EEADRH          equ	2194	;# 
  5700     0892                     PMADRH          equ	2194	;# 
  5701     0893                     NVMDAT          equ	2195	;# 
  5702     0893                     EEDAT           equ	2195	;# 
  5703     0893                     PMDAT           equ	2195	;# 
  5704     0893                     NVMDATL         equ	2195	;# 
  5705     0893                     EEDATL          equ	2195	;# 
  5706     0893                     PMDATL          equ	2195	;# 
  5707     0894                     NVMDATH         equ	2196	;# 
  5708     0894                     EEDATH          equ	2196	;# 
  5709     0894                     PMDATH          equ	2196	;# 
  5710     0895                     NVMCON1         equ	2197	;# 
  5711     0895                     EECON1          equ	2197	;# 
  5712     0895                     PMCON1          equ	2197	;# 
  5713     0896                     NVMCON2         equ	2198	;# 
  5714     0896                     EECON2          equ	2198	;# 
  5715     0896                     PMCON2          equ	2198	;# 
  5716     089B                     PCON0           equ	2203	;# 
  5717     0911                     PMD0            equ	2321	;# 
  5718     0912                     PMD1            equ	2322	;# 
  5719     0913                     PMD2            equ	2323	;# 
  5720     0914                     PMD3            equ	2324	;# 
  5721     0915                     PMD4            equ	2325	;# 
  5722     0916                     PMD5            equ	2326	;# 
  5723     0918                     CPUDOZE         equ	2328	;# 
  5724     0919                     OSCCON1         equ	2329	;# 
  5725     091A                     OSCCON2         equ	2330	;# 
  5726     091B                     OSCCON3         equ	2331	;# 
  5727     091C                     OSCSTAT1        equ	2332	;# 
  5728     091D                     OSCEN           equ	2333	;# 
  5729     091E                     OSCTUNE         equ	2334	;# 
  5730     091F                     OSCFRQ          equ	2335	;# 
  5731     0E0F                     PPSLOCK         equ	3599	;# 
  5732     0E10                     INTPPS          equ	3600	;# 
  5733     0E11                     T0CKIPPS        equ	3601	;# 
  5734     0E12                     T1CKIPPS        equ	3602	;# 
  5735     0E13                     T1GPPS          equ	3603	;# 
  5736     0E14                     CCP1PPS         equ	3604	;# 
  5737     0E15                     CCP2PPS         equ	3605	;# 
  5738     0E16                     CCP3PPS         equ	3606	;# 
  5739     0E17                     CCP4PPS         equ	3607	;# 
  5740     0E18                     CWG1PPS         equ	3608	;# 
  5741     0E19                     CWG2PPS         equ	3609	;# 
  5742     0E1A                     MDCIN1PPS       equ	3610	;# 
  5743     0E1B                     MDCIN2PPS       equ	3611	;# 
  5744     0E1C                     MDMINPPS        equ	3612	;# 
  5745     0E1D                     SSP2CLKPPS      equ	3613	;# 
  5746     0E1E                     SSP2DATPPS      equ	3614	;# 
  5747     0E1F                     SSP2SSPPS       equ	3615	;# 
  5748     0E20                     SSP1CLKPPS      equ	3616	;# 
  5749     0E21                     SSP1DATPPS      equ	3617	;# 
  5750     0E22                     SSP1SSPPS       equ	3618	;# 
  5751     0E24                     RXPPS           equ	3620	;# 
  5752     0E25                     TXPPS           equ	3621	;# 
  5753     0E28                     CLCIN0PPS       equ	3624	;# 
  5754     0E29                     CLCIN1PPS       equ	3625	;# 
  5755     0E2A                     CLCIN2PPS       equ	3626	;# 
  5756     0E2B                     CLCIN3PPS       equ	3627	;# 
  5757     0E2C                     T3CKIPPS        equ	3628	;# 
  5758     0E2D                     T3GPPS          equ	3629	;# 
  5759     0E2E                     T5CKIPPS        equ	3630	;# 
  5760     0E2F                     T5GPPS          equ	3631	;# 
  5761     0E90                     RA0PPS          equ	3728	;# 
  5762     0E91                     RA1PPS          equ	3729	;# 
  5763     0E92                     RA2PPS          equ	3730	;# 
  5764     0E94                     RA4PPS          equ	3732	;# 
  5765     0E95                     RA5PPS          equ	3733	;# 
  5766     0E9C                     RB4PPS          equ	3740	;# 
  5767     0E9D                     RB5PPS          equ	3741	;# 
  5768     0E9E                     RB6PPS          equ	3742	;# 
  5769     0E9F                     RB7PPS          equ	3743	;# 
  5770     0EA0                     RC0PPS          equ	3744	;# 
  5771     0EA1                     RC1PPS          equ	3745	;# 
  5772     0EA2                     RC2PPS          equ	3746	;# 
  5773     0EA3                     RC3PPS          equ	3747	;# 
  5774     0EA4                     RC4PPS          equ	3748	;# 
  5775     0EA5                     RC5PPS          equ	3749	;# 
  5776     0EA6                     RC6PPS          equ	3750	;# 
  5777     0EA7                     RC7PPS          equ	3751	;# 
  5778     0F0F                     CLCDATA         equ	3855	;# 
  5779     0F10                     CLC1CON         equ	3856	;# 
  5780     0F11                     CLC1POL         equ	3857	;# 
  5781     0F12                     CLC1SEL0        equ	3858	;# 
  5782     0F13                     CLC1SEL1        equ	3859	;# 
  5783     0F14                     CLC1SEL2        equ	3860	;# 
  5784     0F15                     CLC1SEL3        equ	3861	;# 
  5785     0F16                     CLC1GLS0        equ	3862	;# 
  5786     0F17                     CLC1GLS1        equ	3863	;# 
  5787     0F18                     CLC1GLS2        equ	3864	;# 
  5788     0F19                     CLC1GLS3        equ	3865	;# 
  5789     0F1A                     CLC2CON         equ	3866	;# 
  5790     0F1B                     CLC2POL         equ	3867	;# 
  5791     0F1C                     CLC2SEL0        equ	3868	;# 
  5792     0F1D                     CLC2SEL1        equ	3869	;# 
  5793     0F1E                     CLC2SEL2        equ	3870	;# 
  5794     0F1F                     CLC2SEL3        equ	3871	;# 
  5795     0F20                     CLC2GLS0        equ	3872	;# 
  5796     0F21                     CLC2GLS1        equ	3873	;# 
  5797     0F22                     CLC2GLS2        equ	3874	;# 
  5798     0F23                     CLC2GLS3        equ	3875	;# 
  5799     0F24                     CLC3CON         equ	3876	;# 
  5800     0F25                     CLC3POL         equ	3877	;# 
  5801     0F26                     CLC3SEL0        equ	3878	;# 
  5802     0F27                     CLC3SEL1        equ	3879	;# 
  5803     0F28                     CLC3SEL2        equ	3880	;# 
  5804     0F29                     CLC3SEL3        equ	3881	;# 
  5805     0F2A                     CLC3GLS0        equ	3882	;# 
  5806     0F2B                     CLC3GLS1        equ	3883	;# 
  5807     0F2C                     CLC3GLS2        equ	3884	;# 
  5808     0F2D                     CLC3GLS3        equ	3885	;# 
  5809     0F2E                     CLC4CON         equ	3886	;# 
  5810     0F2F                     CLC4POL         equ	3887	;# 
  5811     0F30                     CLC4SEL0        equ	3888	;# 
  5812     0F31                     CLC4SEL1        equ	3889	;# 
  5813     0F32                     CLC4SEL2        equ	3890	;# 
  5814     0F33                     CLC4SEL3        equ	3891	;# 
  5815     0F34                     CLC4GLS0        equ	3892	;# 
  5816     0F35                     CLC4GLS1        equ	3893	;# 
  5817     0F36                     CLC4GLS2        equ	3894	;# 
  5818     0F37                     CLC4GLS3        equ	3895	;# 
  5819     0FE4                     STATUS_SHAD     equ	4068	;# 
  5820     0FE5                     WREG_SHAD       equ	4069	;# 
  5821     0FE6                     BSR_SHAD        equ	4070	;# 
  5822     0FE7                     PCLATH_SHAD     equ	4071	;# 
  5823     0FE8                     FSR0L_SHAD      equ	4072	;# 
  5824     0FE9                     FSR0H_SHAD      equ	4073	;# 
  5825     0FEA                     FSR1L_SHAD      equ	4074	;# 
  5826     0FEB                     FSR1H_SHAD      equ	4075	;# 
  5827     0FED                     STKPTR          equ	4077	;# 
  5828     0FEE                     TOSL            equ	4078	;# 
  5829     0FEF                     TOSH            equ	4079	;# 
  5830                           
  5831 ;; Function _SPI1_Deinitialize is unused but had its address taken
  5832     0000                     _SPI1_Deinitialize equ	0
  5833                           
  5834 ;; Function _SPI1_Close is unused but had its address taken
  5835     0000                     _SPI1_Close     equ	0
  5836                           
  5837 ;; Function _SPI1_BufferExchange is unused but had its address taken
  5838     0000                     _SPI1_BufferExchange equ	0
  5839                           
  5840 ;; Function _SPI1_BufferWrite is unused but had its address taken
  5841     0000                     _SPI1_BufferWrite equ	0
  5842                           
  5843 ;; Function _SPI1_BufferRead is unused but had its address taken
  5844     0000                     _SPI1_BufferRead equ	0
  5845                           
  5846 ;; Function _SPI1_ByteWrite is unused but had its address taken
  5847     0000                     _SPI1_ByteWrite equ	0
  5848                           
  5849 ;; Function _SPI1_ByteRead is unused but had its address taken
  5850     0000                     _SPI1_ByteRead  equ	0
  5851                           
  5852 ;; Function _SPI1_IsRxReady is unused but had its address taken
  5853     0000                     _SPI1_IsRxReady equ	0
  5854                           
  5855 ;; Function _SPI1_IsTxReady is unused but had its address taken
  5856     0000                     _SPI1_IsTxReady equ	0
  5857                           
  5858 ;; Function _INT_DefaultInterruptHandler is unused but had its address taken
  5859     0000                     _INT_DefaultInterruptHandler equ	0
  5860                           
  5861 ;; Function _EUSART_Deinitialize is unused but had its address taken
  5862     0000                     _EUSART_Deinitialize equ	0
  5863                           
  5864 ;; Function _EUSART_TransmitEnable is unused but had its address taken
  5865     0000                     _EUSART_TransmitEnable equ	0
  5866                           
  5867 ;; Function _EUSART_TransmitDisable is unused but had its address taken
  5868     0000                     _EUSART_TransmitDisable equ	0
  5869                           
  5870 ;; Function _EUSART_AutoBaudSet is unused but had its address taken
  5871     0000                     _EUSART_AutoBaudSet equ	0
  5872                           
  5873 ;; Function _EUSART_AutoBaudQuery is unused but had its address taken
  5874     0000                     _EUSART_AutoBaudQuery equ	0
  5875                           
  5876 ;; Function _EUSART_IsTxDone is unused but had its address taken
  5877     0000                     _EUSART_IsTxDone equ	0
  5878                           
  5879 ;; Function _EUSART_ErrorGet is unused but had its address taken
  5880     0000                     _EUSART_ErrorGet equ	0
  5881                           
  5882 ;; Function _EUSART_RxCompleteCallbackRegister is unused but had its address taken
  5883     0000                     _EUSART_RxCompleteCallbackRegister equ	0
  5884                           
  5885 ;; Function _EUSART_TxCompleteCallbackRegister is unused but had its address taken
  5886     0000                     _EUSART_TxCompleteCallbackRegister equ	0
  5887                           
  5888                           	psect	idataBANK0
  5889     1B4A                     __pidataBANK0:
  5890                           
  5891                           ;initializer for _setpoint
  5892     1B4A  34C2               	retlw	194
  5893     1B4B  3401               	retlw	1
  5894                           
  5895                           ;initializer for _mustPrintLogs
  5896     1B4C  3401               	retlw	1
  5897                           
  5898                           ;initializer for adcConversionDoneHandler@new_channel
  5899     1B4D  3410               	retlw	16
  5900                           
  5901                           	psect	idataBANK2
  5902     1000                     __pidataBANK2:
  5903                           
  5904                           ;initializer for _ki
  5905     1000  3400               	retlw	0
  5906     1001  3400               	retlw	0
  5907     1002  34A0               	retlw	160
  5908     1003  3440               	retlw	64
  5909                           
  5910                           ;initializer for _kp
  5911     1004  3466               	retlw	102
  5912     1005  3466               	retlw	102
  5913     1006  3466               	retlw	102
  5914     1007  343F               	retlw	63
  5915                           
  5916                           	psect	stringtext1
  5917     1800                     __pstringtext1:
  5918     1800                     _UART1:
  5919     1800  34C9               	retlw	low _EUSART_Initialize
  5920     1801  3407               	retlw	high _EUSART_Initialize
  5921     1802  3400               	retlw	0
  5922     1803  3400               	retlw	0
  5923     1804  3418               	retlw	low _EUSART_Read
  5924     1805  341E               	retlw	high _EUSART_Read
  5925     1806  34A3               	retlw	low _EUSART_Write
  5926     1807  341E               	retlw	high _EUSART_Write
  5927     1808  34B7               	retlw	low _EUSART_IsRxReady
  5928     1809  341B               	retlw	high _EUSART_IsRxReady
  5929     180A  34AE               	retlw	low _EUSART_IsTxReady
  5930     180B  341B               	retlw	high _EUSART_IsTxReady
  5931     180C  3400               	retlw	0
  5932     180D  3400               	retlw	0
  5933     180E  3400               	retlw	0
  5934     180F  3400               	retlw	0
  5935     1810  3400               	retlw	0
  5936     1811  3400               	retlw	0
  5937     1812  3400               	retlw	0
  5938     1813  3400               	retlw	0
  5939     1814  3400               	retlw	0
  5940     1815  3400               	retlw	0
  5941     1816  3400               	retlw	0
  5942     1817  3400               	retlw	0
  5943     1818  3400               	retlw	0
  5944     1819  3400               	retlw	0
  5945     181A  3400               	retlw	0
  5946     181B  3400               	retlw	0
  5947     181C  3400               	retlw	0
  5948     181D  3400               	retlw	0
  5949     181E  3400               	retlw	0
  5950     181F  3400               	retlw	0
  5951     1820  3400               	retlw	0
  5952     1821  3400               	retlw	0
  5953     1822  3400               	retlw	0
  5954     1823  3400               	retlw	0
  5955     1824  3400               	retlw	0
  5956     1825  3400               	retlw	0
  5957     1826  3400               	retlw	0
  5958     1827  3400               	retlw	0
  5959     1828  346C               	retlw	low _EUSART_FramingErrorCallbackRegister
  5960     1829  341C               	retlw	high _EUSART_FramingErrorCallbackRegister
  5961     182A  347B               	retlw	low _EUSART_OverrunErrorCallbackRegister
  5962     182B  341C               	retlw	high _EUSART_OverrunErrorCallbackRegister
  5963     182C  3400               	retlw	0
  5964     182D  3400               	retlw	0
  5965     182E  3400               	retlw	0
  5966     182F  3400               	retlw	0
  5967     1830                     __end_of_UART1:
  5968                           
  5969                           	psect	stringtext2
  5970     1830                     __pstringtext2:
  5971     1830                     _ledstrip:
  5972     1830  34C9               	retlw	low _SPI1_Initialize
  5973     1831  341B               	retlw	high _SPI1_Initialize
  5974     1832  3400               	retlw	0
  5975     1833  3400               	retlw	0
  5976     1834  34A9               	retlw	low _SPI1_Open
  5977     1835  3413               	retlw	high _SPI1_Open
  5978     1836  3400               	retlw	0
  5979     1837  3400               	retlw	0
  5980     1838  3400               	retlw	0
  5981     1839  3400               	retlw	0
  5982     183A  3400               	retlw	0
  5983     183B  3400               	retlw	0
  5984     183C  3400               	retlw	0
  5985     183D  3400               	retlw	0
  5986     183E  3417               	retlw	low _SPI1_ByteExchange
  5987     183F  341C               	retlw	high _SPI1_ByteExchange
  5988     1840  3400               	retlw	0
  5989     1841  3400               	retlw	0
  5990     1842  3400               	retlw	0
  5991     1843  3400               	retlw	0
  5992     1844  3400               	retlw	0
  5993     1845  3400               	retlw	0
  5994     1846  3400               	retlw	0
  5995     1847  3400               	retlw	0
  5996     1848  3400               	retlw	0
  5997     1849  3400               	retlw	0
  5998     184A  3400               	retlw	0
  5999     184B  3400               	retlw	0
  6000     184C                     __end_of_ledstrip:
  6001                           
  6002                           	psect	stringtext3
  6003     18E2                     __pstringtext3:
  6004     18E2                     _spi1_configuration:
  6005     18E2  3440               	retlw	64
  6006     18E3  340A               	retlw	10
  6007     18E4  3410               	retlw	16
  6008     18E5  3407               	retlw	7
  6009     18E6  3400               	retlw	0
  6010     18E7  3464               	retlw	100
  6011     18E8  3400               	retlw	0
  6012     18E9  3410               	retlw	16
  6013     18EA  3401               	retlw	1
  6014     18EB  3400               	retlw	0
  6015     18EC                     __end_of_spi1_configuration:
  6016                           
  6017                           	psect	nvBANK2
  6018     015E                     __pnvBANK2:
  6019     015E                     _TMR6_PeriodMatchCallback:
  6020     015E                     	ds	2
  6021     0160                     _TMR4_PeriodMatchCallback:
  6022     0160                     	ds	2
  6023     0162                     _TMR2_PeriodMatchCallback:
  6024     0162                     	ds	2
  6025     0164                     _EUSART_TxInterruptHandler:
  6026     0164                     	ds	2
  6027     0166                     _ADC_InterruptHandler:
  6028     0166                     	ds	2
  6029                           
  6030                           	psect	nvBANK3
  6031     01D4                     __pnvBANK3:
  6032     01D4                     _EUSART_RxInterruptHandler:
  6033     01D4                     	ds	2
  6034     001F                     _T2CONbits      set	31
  6035     001F                     _T2CON          set	31
  6036     001D                     _TMR2           set	29
  6037     001E                     _PR2            set	30
  6038     0012                     _PIR2bits       set	18
  6039     000B                     _INTCONbits     set	11
  6040     0010                     _PIR0bits       set	16
  6041     0011                     _PIR1bits       set	17
  6042     008E                     _TRISC          set	142
  6043     008D                     _TRISB          set	141
  6044     008C                     _TRISA          set	140
  6045     0092                     _PIE2bits       set	146
  6046     009D                     _ADCON0bits     set	157
  6047     0091                     _PIE1bits       set	145
  6048     009D                     _ADCON0         set	157
  6049     009F                     _ADACT          set	159
  6050     009C                     _ADRESH         set	156
  6051     009B                     _ADRESL         set	155
  6052     009E                     _ADCON1         set	158
  6053     010E                     _LATC           set	270
  6054     010D                     _LATB           set	269
  6055     010C                     _LATA           set	268
  6056     019A                     _TX1REG         set	410
  6057     0199                     _RC1REG         set	409
  6058     019F                     _BAUD1CONbits   set	415
  6059     019E                     _TX1STAbits     set	414
  6060     019D                     _RC1STAbits     set	413
  6061     019C                     _SP1BRGH        set	412
  6062     019B                     _SP1BRGL        set	411
  6063     019E                     _TX1STA         set	414
  6064     019D                     _RC1STA         set	413
  6065     019F                     _BAUD1CON       set	415
  6066     018E                     _ANSELC         set	398
  6067     018D                     _ANSELB         set	397
  6068     018C                     _ANSELA         set	396
  6069     020E                     _WPUC           set	526
  6070     020D                     _WPUB           set	525
  6071     020C                     _WPUA           set	524
  6072     0211                     _SSP1BUF        set	529
  6073     0215                     _SSP1CON1bits   set	533
  6074     0212                     _SSP1ADD        set	530
  6075     0217                     _SSP1CON3       set	535
  6076     0215                     _SSP1CON1       set	533
  6077     0214                     _SSP1STAT       set	532
  6078     028E                     _ODCONC         set	654
  6079     028D                     _ODCONB         set	653
  6080     028C                     _ODCONA         set	652
  6081     030E                     _SLRCONC        set	782
  6082     030D                     _SLRCONB        set	781
  6083     030C                     _SLRCONA        set	780
  6084     0399                     _IOCCF          set	921
  6085     0398                     _IOCCN          set	920
  6086     0397                     _IOCCP          set	919
  6087     0396                     _IOCBF          set	918
  6088     0395                     _IOCBN          set	917
  6089     0394                     _IOCBP          set	916
  6090     0393                     _IOCAF          set	915
  6091     0392                     _IOCAN          set	914
  6092     0391                     _IOCAP          set	913
  6093     038E                     _INLVLC         set	910
  6094     038D                     _INLVLB         set	909
  6095     038C                     _INLVLA         set	908
  6096     041E                     _T6CONbits      set	1054
  6097     041E                     _T6CON          set	1054
  6098     041C                     _TMR6           set	1052
  6099     041D                     _PR6            set	1053
  6100     0417                     _T4CONbits      set	1047
  6101     0417                     _T4CON          set	1047
  6102     0415                     _TMR4           set	1045
  6103     0416                     _PR4            set	1046
  6104     061F                     _PWMTMRSbits    set	1567
  6105     0617                     _PWM5DCL        set	1559
  6106     0618                     _PWM5DCH        set	1560
  6107     0619                     _PWM5CON        set	1561
  6108     091E                     _OSCTUNE        set	2334
  6109     091C                     _OSCSTAT1       set	2332
  6110     091F                     _OSCFRQ         set	2335
  6111     091D                     _OSCEN          set	2333
  6112     091B                     _OSCCON3        set	2331
  6113     0919                     _OSCCON1        set	2329
  6114     0E20                     _SSP1CLKPPS     set	3616
  6115     0E24                     _RXPPS          set	3620
  6116     0E21                     _SSP1DATPPS     set	3617
  6117     0E9E                     _RB6PPS         set	3742
  6118     0E9D                     _RB5PPS         set	3741
  6119     0EA5                     _RC5PPS         set	3749
  6120     0E9C                     _RB4PPS         set	3740
  6121                           
  6122                           	psect	stringtext4
  6123     184C                     __pstringtext4:
  6124     184C                     STR_9:
  6125     184C  3463               	retlw	99	;'c'
  6126     184D  3468               	retlw	104	;'h'
  6127     184E  3461               	retlw	97	;'a'
  6128     184F  346E               	retlw	110	;'n'
  6129     1850  3467               	retlw	103	;'g'
  6130     1851  3465               	retlw	101	;'e'
  6131     1852  3464               	retlw	100	;'d'
  6132     1853  3420               	retlw	32	;' '
  6133     1854  3473               	retlw	115	;'s'
  6134     1855  3465               	retlw	101	;'e'
  6135     1856  3474               	retlw	116	;'t'
  6136     1857  3470               	retlw	112	;'p'
  6137     1858  346F               	retlw	111	;'o'
  6138     1859  3469               	retlw	105	;'i'
  6139     185A  346E               	retlw	110	;'n'
  6140     185B  3474               	retlw	116	;'t'
  6141     185C  3420               	retlw	32	;' '
  6142     185D  3474               	retlw	116	;'t'
  6143     185E  346F               	retlw	111	;'o'
  6144     185F  3420               	retlw	32	;' '
  6145     1860  3425               	retlw	37	;'%'
  6146     1861  3475               	retlw	117	;'u'
  6147     1862  340D               	retlw	13
  6148     1863  340A               	retlw	10
  6149     1864  3400               	retlw	0
  6150                           
  6151                           	psect	stringtext5
  6152     1865                     __pstringtext5:
  6153     1865                     STR_2:
  6154     1865  3469               	retlw	105	;'i'
  6155     1866  346E               	retlw	110	;'n'
  6156     1867  3470               	retlw	112	;'p'
  6157     1868  3475               	retlw	117	;'u'
  6158     1869  3474               	retlw	116	;'t'
  6159     186A  3420               	retlw	32	;' '
  6160     186B  3462               	retlw	98	;'b'
  6161     186C  3475               	retlw	117	;'u'
  6162     186D  3466               	retlw	102	;'f'
  6163     186E  3466               	retlw	102	;'f'
  6164     186F  3465               	retlw	101	;'e'
  6165     1870  3472               	retlw	114	;'r'
  6166     1871  3420               	retlw	32	;' '
  6167     1872  346F               	retlw	111	;'o'
  6168     1873  3476               	retlw	118	;'v'
  6169     1874  3465               	retlw	101	;'e'
  6170     1875  3472               	retlw	114	;'r'
  6171     1876  3466               	retlw	102	;'f'
  6172     1877  346C               	retlw	108	;'l'
  6173     1878  346F               	retlw	111	;'o'
  6174     1879  3477               	retlw	119	;'w'
  6175     187A  340D               	retlw	13
  6176     187B  340A               	retlw	10
  6177     187C  3400               	retlw	0
  6178                           
  6179                           	psect	stringtext6
  6180     187D                     __pstringtext6:
  6181     187D                     STR_13:
  6182     187D  3455               	retlw	85	;'U'
  6183     187E  346E               	retlw	110	;'n'
  6184     187F  346B               	retlw	107	;'k'
  6185     1880  346F               	retlw	111	;'o'
  6186     1881  3477               	retlw	119	;'w'
  6187     1882  346E               	retlw	110	;'n'
  6188     1883  3420               	retlw	32	;' '
  6189     1884  3463               	retlw	99	;'c'
  6190     1885  346F               	retlw	111	;'o'
  6191     1886  346D               	retlw	109	;'m'
  6192     1887  346D               	retlw	109	;'m'
  6193     1888  3461               	retlw	97	;'a'
  6194     1889  346E               	retlw	110	;'n'
  6195     188A  3464               	retlw	100	;'d'
  6196     188B  340D               	retlw	13
  6197     188C  340A               	retlw	10
  6198     188D  3400               	retlw	0
  6199                           
  6200                           	psect	stringtext7
  6201     188E                     __pstringtext7:
  6202     188E                     STR_5:
  6203     188E  342C               	retlw	44	;','
  6204     188F  3420               	retlw	32	;' '
  6205     1890  3464               	retlw	100	;'d'
  6206     1891  3475               	retlw	117	;'u'
  6207     1892  3474               	retlw	116	;'t'
  6208     1893  3479               	retlw	121	;'y'
  6209     1894  3420               	retlw	32	;' '
  6210     1895  3463               	retlw	99	;'c'
  6211     1896  3479               	retlw	121	;'y'
  6212     1897  3463               	retlw	99	;'c'
  6213     1898  346C               	retlw	108	;'l'
  6214     1899  3465               	retlw	101	;'e'
  6215     189A  343A               	retlw	58	;':'
  6216     189B  3420               	retlw	32	;' '
  6217     189C  3425               	retlw	37	;'%'
  6218     189D  3475               	retlw	117	;'u'
  6219     189E  3400               	retlw	0
  6220                           
  6221                           	psect	stringtext8
  6222     189F                     __pstringtext8:
  6223     189F                     STR_12:
  6224     189F  346C               	retlw	108	;'l'
  6225     18A0  346F               	retlw	111	;'o'
  6226     18A1  3467               	retlw	103	;'g'
  6227     18A2  3473               	retlw	115	;'s'
  6228     18A3  3420               	retlw	32	;' '
  6229     18A4  3474               	retlw	116	;'t'
  6230     18A5  346F               	retlw	111	;'o'
  6231     18A6  3467               	retlw	103	;'g'
  6232     18A7  3467               	retlw	103	;'g'
  6233     18A8  346C               	retlw	108	;'l'
  6234     18A9  3465               	retlw	101	;'e'
  6235     18AA  3464               	retlw	100	;'d'
  6236     18AB  340D               	retlw	13
  6237     18AC  340A               	retlw	10
  6238     18AD  3400               	retlw	0
  6239                           
  6240                           	psect	stringtext9
  6241     18AE                     __pstringtext9:
  6242     18AE                     STR_4:
  6243     18AE  342C               	retlw	44	;','
  6244     18AF  3420               	retlw	32	;' '
  6245     18B0  3473               	retlw	115	;'s'
  6246     18B1  3465               	retlw	101	;'e'
  6247     18B2  3474               	retlw	116	;'t'
  6248     18B3  3470               	retlw	112	;'p'
  6249     18B4  346F               	retlw	111	;'o'
  6250     18B5  3469               	retlw	105	;'i'
  6251     18B6  346E               	retlw	110	;'n'
  6252     18B7  3474               	retlw	116	;'t'
  6253     18B8  343A               	retlw	58	;':'
  6254     18B9  3420               	retlw	32	;' '
  6255     18BA  3425               	retlw	37	;'%'
  6256     18BB  3475               	retlw	117	;'u'
  6257     18BC  3400               	retlw	0
  6258                           
  6259                           	psect	stringtext10
  6260     18BD                     __pstringtext10:
  6261     18BD                     STR_11:
  6262     18BD  3463               	retlw	99	;'c'
  6263     18BE  3468               	retlw	104	;'h'
  6264     18BF  3461               	retlw	97	;'a'
  6265     18C0  346E               	retlw	110	;'n'
  6266     18C1  3467               	retlw	103	;'g'
  6267     18C2  3465               	retlw	101	;'e'
  6268     18C3  3464               	retlw	100	;'d'
  6269     18C4  3420               	retlw	32	;' '
  6270     18C5  346B               	retlw	107	;'k'
  6271     18C6  3469               	retlw	105	;'i'
  6272     18C7  340D               	retlw	13
  6273     18C8  340A               	retlw	10
  6274     18C9  3400               	retlw	0
  6275                           
  6276                           	psect	stringtext11
  6277     18CA                     __pstringtext11:
  6278     18CA                     STR_10:
  6279     18CA  3463               	retlw	99	;'c'
  6280     18CB  3468               	retlw	104	;'h'
  6281     18CC  3461               	retlw	97	;'a'
  6282     18CD  346E               	retlw	110	;'n'
  6283     18CE  3467               	retlw	103	;'g'
  6284     18CF  3465               	retlw	101	;'e'
  6285     18D0  3464               	retlw	100	;'d'
  6286     18D1  3420               	retlw	32	;' '
  6287     18D2  346B               	retlw	107	;'k'
  6288     18D3  3470               	retlw	112	;'p'
  6289     18D4  340D               	retlw	13
  6290     18D5  340A               	retlw	10
  6291     18D6  3400               	retlw	0
  6292                           
  6293                           	psect	stringtext12
  6294     18D7                     __pstringtext12:
  6295     18D7                     STR_3:
  6296     18D7  3468               	retlw	104	;'h'
  6297     18D8  346F               	retlw	111	;'o'
  6298     18D9  346F               	retlw	111	;'o'
  6299     18DA  3467               	retlw	103	;'g'
  6300     18DB  3474               	retlw	116	;'t'
  6301     18DC  3465               	retlw	101	;'e'
  6302     18DD  343A               	retlw	58	;':'
  6303     18DE  3420               	retlw	32	;' '
  6304     18DF  3425               	retlw	37	;'%'
  6305     18E0  3475               	retlw	117	;'u'
  6306     18E1  3400               	retlw	0
  6307                           
  6308                           	psect	stringtext13
  6309     18EC                     __pstringtext13:
  6310     18EC                     STR_1:
  6311     18EC  3425               	retlw	37	;'%'
  6312     18ED  3469               	retlw	105	;'i'
  6313     18EE  342E               	retlw	46	;'.'
  6314     18EF  3425               	retlw	37	;'%'
  6315     18F0  3430               	retlw	48	;'0'
  6316     18F1  3433               	retlw	51	;'3'
  6317     18F2  3475               	retlw	117	;'u'
  6318     18F3  3400               	retlw	0
  6319                           
  6320                           	psect	stringtext14
  6321     18F4                     __pstringtext14:
  6322     18F4                     STR_7:
  6323     18F4  342C               	retlw	44	;','
  6324     18F5  3420               	retlw	32	;' '
  6325     18F6  346B               	retlw	107	;'k'
  6326     18F7  3469               	retlw	105	;'i'
  6327     18F8  343A               	retlw	58	;':'
  6328     18F9  3420               	retlw	32	;' '
  6329     18FA  3400               	retlw	0
  6330                           
  6331                           	psect	stringtext15
  6332     18FB                     __pstringtext15:
  6333     18FB                     STR_6:
  6334     18FB  342C               	retlw	44	;','
  6335     18FC  3420               	retlw	32	;' '
  6336     18FD  346B               	retlw	107	;'k'
  6337     18FE  3470               	retlw	112	;'p'
  6338     18FF  343A               	retlw	58	;':'
  6339     1900  3420               	retlw	32	;' '
  6340     1901  3400               	retlw	0
  6341                           
  6342                           	psect	stringtext16
  6343     0000                     __pstringtext16:
  6344     18AB                     STR_8           equ	STR_12+12
  6345                           
  6346                           	psect	cinit
  6347     005A                     start_initialization:	
  6348                           ; #config settings
  6349                           
  6350     005A                     __initialization:
  6351                           
  6352                           ; Initialize objects allocated to BANK0
  6353     005A  304A               	movlw	low __pidataBANK0
  6354     005B  0084               	movwf	4
  6355     005C  309B               	movlw	(high __pidataBANK0)| (0+128)
  6356     005D  0085               	movwf	5
  6357     005E  306C               	movlw	low __pdataBANK0
  6358     005F  0086               	movwf	6
  6359     0060  3000               	movlw	high __pdataBANK0
  6360     0061  0087               	movwf	7
  6361     0062  3004               	movlw	4
  6362     0063  319B  2360  3180   	fcall	init_ram
  6363                           
  6364                           ; Initialize objects allocated to BANK2
  6365     0066  3000               	movlw	low __pidataBANK2
  6366     0067  0084               	movwf	4
  6367     0068  3090               	movlw	(high __pidataBANK2)| (0+128)
  6368     0069  0085               	movwf	5
  6369     006A  3068               	movlw	low __pdataBANK2
  6370     006B  0086               	movwf	6
  6371     006C  3001               	movlw	high __pdataBANK2
  6372     006D  0087               	movwf	7
  6373     006E  3008               	movlw	8
  6374     006F  319B  2360  3180   	fcall	init_ram
  6375                           
  6376                           ; Clear objects allocated to BANK0
  6377     0072  3055               	movlw	low __pbssBANK0
  6378     0073  0084               	movwf	4
  6379     0074  3000               	movlw	high __pbssBANK0
  6380     0075  0085               	movwf	5
  6381     0076  3017               	movlw	23
  6382     0077  319B  235A  3180   	fcall	clear_ram0
  6383                           
  6384                           ; Clear objects allocated to BANK2
  6385     007A  3020               	movlw	low __pbssBANK2
  6386     007B  0084               	movwf	4
  6387     007C  3001               	movlw	high __pbssBANK2
  6388     007D  0085               	movwf	5
  6389     007E  3030               	movlw	48
  6390     007F  319B  235A  3180   	fcall	clear_ram0
  6391                           
  6392                           ; Clear objects allocated to BANK3
  6393     0082  30A0               	movlw	low __pbssBANK3
  6394     0083  0084               	movwf	4
  6395     0084  3001               	movlw	high __pbssBANK3
  6396     0085  0085               	movwf	5
  6397     0086  3034               	movlw	52
  6398     0087  319B  235A  3180   	fcall	clear_ram0
  6399     008A                     end_of_initialization:	
  6400                           ;End of C runtime variable initialization code
  6401                           
  6402     008A                     __end_of__initialization:
  6403     008A  107E               	bcf	int$flags,0	;clear compiler interrupt flag (level 1)
  6404     008B  0020               	movlb	0
  6405     008C  319E  2EF5         	ljmp	_main	;jump to C main() function
  6406                           
  6407                           	psect	bssBANK0
  6408     0055                     __pbssBANK0:
  6409     0055                     _width:
  6410     0055                     	ds	2
  6411     0057                     _dutycycle:
  6412     0057                     	ds	2
  6413     0059                     _ADC_hoogtesensor:
  6414     0059                     	ds	2
  6415     005B                     _EUSART_OverrunErrorHandler:
  6416     005B                     	ds	2
  6417     005D                     _EUSART_FramingErrorHandler:
  6418     005D                     	ds	2
  6419     005F                     _EUSART_TxCompleteInterruptHandler:
  6420     005F                     	ds	2
  6421     0061                     _INT_InterruptHandler:
  6422     0061                     	ds	2
  6423     0063                     _flags:
  6424     0063                     	ds	1
  6425     0064                     _is_on_target:
  6426     0064                     	ds	1
  6427     0065                     readLine@index:
  6428     0065                     	ds	1
  6429     0066                     _eusartRxCount:
  6430     0066                     	ds	1
  6431     0067                     _eusartRxTail:
  6432     0067                     	ds	1
  6433     0068                     _eusartRxHead:
  6434     0068                     	ds	1
  6435     0069                     _eusartTxBufferRemaining:
  6436     0069                     	ds	1
  6437     006A                     _eusartTxTail:
  6438     006A                     	ds	1
  6439     006B                     _eusartTxHead:
  6440     006B                     	ds	1
  6441                           
  6442                           	psect	dataBANK0
  6443     006C                     __pdataBANK0:
  6444     006C                     _setpoint:
  6445     006C                     	ds	2
  6446     006E                     _mustPrintLogs:
  6447     006E                     	ds	1
  6448     006F                     adcConversionDoneHandler@new_channel:
  6449     006F                     	ds	1
  6450                           
  6451                           	psect	bssBANK2
  6452     0120                     __pbssBANK2:
  6453     0120                     _eusartRxStatusBuffer:
  6454     0120                     	ds	16
  6455     0130                     _eusartRxBuffer:
  6456     0130                     	ds	8
  6457     0138                     _eusartTxBuffer:
  6458     0138                     	ds	8
  6459     0140                     _integraal:
  6460     0140                     	ds	4
  6461     0144                     _nout:
  6462     0144                     	ds	2
  6463     0146                     _prec:
  6464     0146                     	ds	2
  6465     0148                     _hoogte_bal:
  6466     0148                     	ds	2
  6467     014A                     _ADC_potentiometer:
  6468     014A                     	ds	2
  6469     014C                     _EUSART_RxCompleteInterruptHandler:
  6470     014C                     	ds	2
  6471     014E                     _eusartRxLastError:
  6472     014E                     	ds	2
  6473                           
  6474                           	psect	dataBANK2
  6475     0168                     __pdataBANK2:
  6476     0168                     _ki:
  6477     0168                     	ds	4
  6478     016C                     _kp:
  6479     016C                     	ds	4
  6480                           
  6481                           	psect	bssBANK3
  6482     01A0                     __pbssBANK3:
  6483     01A0                     _dbuf:
  6484     01A0                     	ds	32
  6485     01C0                     _line:
  6486     01C0                     	ds	20
  6487                           
  6488                           	psect	inittext
  6489     1B60                     init_ram:
  6490     1B60  00FE               	movwf	btemp
  6491     1B61                     initloop:
  6492     1B61  0012               	moviw fsr0++
  6493     1B62  001E               	movwi fsr1++
  6494     1B63  0BFE               	decfsz	btemp,f
  6495     1B64  2B61               	goto	initloop
  6496     1B65  3400               	retlw	0
  6497                           
  6498                           	psect	clrtext
  6499     1B5A                     clear_ram0:	
  6500                           ;	Called with FSR0 containing the base address, and
  6501                           ;	WREG with the size to clear
  6502                           
  6503     1B5A  0064               	clrwdt	;clear the watchdog before getting into this loop
  6504     1B5B                     clrloop0:
  6505     1B5B  0180               	clrf	0	;clear RAM location pointed to by FSR
  6506     1B5C  3101               	addfsr 0,1
  6507     1B5D  0B89               	decfsz	9,f	;Have we reached the end of clearing yet?
  6508     1B5E  2B5B               	goto	clrloop0	;have we reached the end yet?
  6509     1B5F  3400               	retlw	0	;all done for this memory range, return
  6510                           
  6511                           	psect	cstackBANK2
  6512     0150                     __pcstackBANK2:
  6513     0150                     ?_setKp:
  6514     0150                     ?_setKi:	
  6515                           ; 1 bytes @ 0x0
  6516                           
  6517     0150                     ?_printFloat:	
  6518                           ; 1 bytes @ 0x0
  6519                           
  6520     0150                     printFloat@number:	
  6521                           ; 1 bytes @ 0x0
  6522                           
  6523     0150                     setKp@new_kp:	
  6524                           ; 4 bytes @ 0x0
  6525                           
  6526     0150                     setKi@new_ki:	
  6527                           ; 4 bytes @ 0x0
  6528                           
  6529     0150                     getLedNumber@result:	
  6530                           ; 4 bytes @ 0x0
  6531                           
  6532                           
  6533                           ; 4 bytes @ 0x0
  6534     0150                     	ds	4
  6535     0154                     uartHandler@str:
  6536     0154                     printFloat@fractional_part:	
  6537                           ; 1 bytes @ 0x4
  6538                           
  6539     0154                     ??_position_led_strip:	
  6540                           ; 2 bytes @ 0x4
  6541                           
  6542                           
  6543                           ; 1 bytes @ 0x4
  6544     0154                     	ds	2
  6545     0156                     printFloat@integer_part:
  6546                           
  6547                           ; 1 bytes @ 0x6
  6548     0156                     	ds	1
  6549     0157                     position_led_strip@target:
  6550                           
  6551                           ; 2 bytes @ 0x7
  6552     0157                     	ds	2
  6553     0159                     position_led_strip@led:
  6554                           
  6555                           ; 1 bytes @ 0x9
  6556     0159                     	ds	1
  6557     015A                     position_led_strip@led_on:
  6558                           
  6559                           ; 2 bytes @ 0xA
  6560     015A                     	ds	2
  6561     015C                     ??_main:
  6562                           
  6563                           ; 1 bytes @ 0xC
  6564     015C                     	ds	2
  6565                           
  6566                           	psect	cstackBANK1
  6567     00A0                     __pcstackBANK1:
  6568     00A0                     ?_ADC_SetInterruptHandler:
  6569     00A0                     ?_SPI1_ByteExchange:	
  6570                           ; 1 bytes @ 0x0
  6571                           
  6572     00A0                     ?_INT_SetInterruptHandler:	
  6573                           ; 1 bytes @ 0x0
  6574                           
  6575     00A0                     ?_EUSART_Write:	
  6576                           ; 1 bytes @ 0x0
  6577                           
  6578     00A0                     ?_EUSART_FramingErrorCallbackRegister:	
  6579                           ; 1 bytes @ 0x0
  6580                           
  6581     00A0                     ?_EUSART_OverrunErrorCallbackRegister:	
  6582                           ; 1 bytes @ 0x0
  6583                           
  6584     00A0                     ?_TMR4_PeriodMatchCallbackRegister:	
  6585                           ; 1 bytes @ 0x0
  6586                           
  6587     00A0                     ?_TMR6_PeriodMatchCallbackRegister:	
  6588                           ; 1 bytes @ 0x0
  6589                           
  6590     00A0                     ?_getSetpoint:	
  6591                           ; 1 bytes @ 0x0
  6592                           
  6593     00A0                     ?_getDutycycle:	
  6594                           ; 2 bytes @ 0x0
  6595                           
  6596     00A0                     ?__Umul8_16:	
  6597                           ; 2 bytes @ 0x0
  6598                           
  6599     00A0                     ?_strlen:	
  6600                           ; 2 bytes @ 0x0
  6601                           
  6602     00A0                     ?_getHoogtesensor:	
  6603                           ; 2 bytes @ 0x0
  6604                           
  6605     00A0                     ?___wmul:	
  6606                           ; 2 bytes @ 0x0
  6607                           
  6608     00A0                     ?___awdiv:	
  6609                           ; 2 bytes @ 0x0
  6610                           
  6611     00A0                     ?___awmod:	
  6612                           ; 2 bytes @ 0x0
  6613                           
  6614     00A0                     ?___lwdiv:	
  6615                           ; 2 bytes @ 0x0
  6616                           
  6617     00A0                     ?___lwmod:	
  6618                           ; 2 bytes @ 0x0
  6619                           
  6620     00A0                     ?_getKp:	
  6621                           ; 2 bytes @ 0x0
  6622                           
  6623     00A0                     ?_getKi:	
  6624                           ; 4 bytes @ 0x0
  6625                           
  6626     00A0                     ?___fldiv:	
  6627                           ; 4 bytes @ 0x0
  6628                           
  6629     00A0                     ?___xxtofl:	
  6630                           ; 4 bytes @ 0x0
  6631                           
  6632     00A0                     SPI1_ByteExchange@byteData:	
  6633                           ; 4 bytes @ 0x0
  6634                           
  6635     00A0                     EUSART_Read@tempRxTail:	
  6636                           ; 1 bytes @ 0x0
  6637                           
  6638     00A0                     EUSART_Write@txData:	
  6639                           ; 1 bytes @ 0x0
  6640                           
  6641     00A0                     __Umul8_16@multiplicand:	
  6642                           ; 1 bytes @ 0x0
  6643                           
  6644     00A0                     strlen@s:	
  6645                           ; 1 bytes @ 0x0
  6646                           
  6647     00A0                     ADC_SetInterruptHandler@InterruptHandler:	
  6648                           ; 1 bytes @ 0x0
  6649                           
  6650     00A0                     INT_SetInterruptHandler@InterruptHandler:	
  6651                           ; 2 bytes @ 0x0
  6652                           
  6653     00A0                     TMR4_PeriodMatchCallbackRegister@CallbackHandler:	
  6654                           ; 2 bytes @ 0x0
  6655                           
  6656     00A0                     TMR6_PeriodMatchCallbackRegister@CallbackHandler:	
  6657                           ; 2 bytes @ 0x0
  6658                           
  6659     00A0                     EUSART_FramingErrorCallbackRegister@callbackHandler:	
  6660                           ; 2 bytes @ 0x0
  6661                           
  6662     00A0                     EUSART_OverrunErrorCallbackRegister@callbackHandler:	
  6663                           ; 2 bytes @ 0x0
  6664                           
  6665     00A0                     ___wmul@multiplier:	
  6666                           ; 2 bytes @ 0x0
  6667                           
  6668     00A0                     ___awdiv@divisor:	
  6669                           ; 2 bytes @ 0x0
  6670                           
  6671     00A0                     ___awmod@divisor:	
  6672                           ; 2 bytes @ 0x0
  6673                           
  6674     00A0                     ___lwdiv@divisor:	
  6675                           ; 2 bytes @ 0x0
  6676                           
  6677     00A0                     ___lwmod@divisor:	
  6678                           ; 2 bytes @ 0x0
  6679                           
  6680     00A0                     ___fldiv@a:	
  6681                           ; 2 bytes @ 0x0
  6682                           
  6683     00A0                     ___xxtofl@val:	
  6684                           ; 4 bytes @ 0x0
  6685                           
  6686     00A0                     ??_SPI1_Initialize:	
  6687                           ; 4 bytes @ 0x0
  6688                           
  6689     00A0                     ??_TMR2_Initialize:	
  6690                           ; 1 bytes @ 0x0
  6691                           
  6692     00A0                     ??_TMR4_Initialize:	
  6693                           ; 1 bytes @ 0x0
  6694                           
  6695     00A0                     ??_TMR6_Initialize:	
  6696                           ; 1 bytes @ 0x0
  6697                           
  6698     00A0                     ??_TMR6_DefaultPeriodMatchCallback:	
  6699                           ; 1 bytes @ 0x0
  6700                           
  6701     00A0                     ??_EUSART_Read:	
  6702                           ; 1 bytes @ 0x0
  6703                           
  6704     00A0                     ??_EUSART_IsRxReady:	
  6705                           ; 1 bytes @ 0x0
  6706                           
  6707     00A0                     ??_EUSART_IsTxReady:	
  6708                           ; 1 bytes @ 0x0
  6709                           
  6710     00A0                     ??_ADC_SelectChannel:	
  6711                           ; 1 bytes @ 0x0
  6712                           
  6713     00A0                     ??_pwm_fan_Initialize:	
  6714                           ; 1 bytes @ 0x0
  6715                           
  6716     00A0                     ??_CLOCK_Initialize:	
  6717                           ; 1 bytes @ 0x0
  6718                           
  6719     00A0                     ??_PIN_MANAGER_Initialize:	
  6720                           ; 1 bytes @ 0x0
  6721                           
  6722                           
  6723                           ; 1 bytes @ 0x0
  6724     00A0                     	ds	1
  6725     00A1                     ?_sendLedstripFrame:
  6726     00A1                     ADC_SelectChannel@channel:	
  6727                           ; 1 bytes @ 0x1
  6728                           
  6729     00A1                     EUSART_Read@readValue:	
  6730                           ; 1 bytes @ 0x1
  6731                           
  6732     00A1                     EUSART_Write@tempTxHead:	
  6733                           ; 1 bytes @ 0x1
  6734                           
  6735     00A1                     sendLedstripFrame@green:	
  6736                           ; 1 bytes @ 0x1
  6737                           
  6738     00A1                     ??_SPI1_ByteExchange:	
  6739                           ; 1 bytes @ 0x1
  6740                           
  6741     00A1                     ??_EUSART_Write:	
  6742                           ; 1 bytes @ 0x1
  6743                           
  6744     00A1                     ??_sendLedstripStartFrame:	
  6745                           ; 1 bytes @ 0x1
  6746                           
  6747     00A1                     ??_sendLedstripEndFrame:	
  6748                           ; 1 bytes @ 0x1
  6749                           
  6750                           
  6751                           ; 1 bytes @ 0x1
  6752     00A1                     	ds	1
  6753     00A2                     putch@txData:
  6754     00A2                     sendLedstripFrame@blue:	
  6755                           ; 1 bytes @ 0x2
  6756                           
  6757     00A2                     strlen@a:	
  6758                           ; 1 bytes @ 0x2
  6759                           
  6760     00A2                     ___wmul@multiplicand:	
  6761                           ; 1 bytes @ 0x2
  6762                           
  6763     00A2                     ___awdiv@dividend:	
  6764                           ; 2 bytes @ 0x2
  6765                           
  6766     00A2                     ___awmod@dividend:	
  6767                           ; 2 bytes @ 0x2
  6768                           
  6769     00A2                     ___lwdiv@dividend:	
  6770                           ; 2 bytes @ 0x2
  6771                           
  6772     00A2                     ___lwmod@dividend:	
  6773                           ; 2 bytes @ 0x2
  6774                           
  6775     00A2                     ??_ADC_SetInterruptHandler:	
  6776                           ; 2 bytes @ 0x2
  6777                           
  6778     00A2                     ??_INT_SetInterruptHandler:	
  6779                           ; 1 bytes @ 0x2
  6780                           
  6781     00A2                     ??_EUSART_Initialize:	
  6782                           ; 1 bytes @ 0x2
  6783                           
  6784     00A2                     ??_EUSART_FramingErrorCallbackRegister:	
  6785                           ; 1 bytes @ 0x2
  6786                           
  6787     00A2                     ??_EUSART_OverrunErrorCallbackRegister:	
  6788                           ; 1 bytes @ 0x2
  6789                           
  6790     00A2                     ??_initAdcMultiplexer:	
  6791                           ; 1 bytes @ 0x2
  6792                           
  6793     00A2                     ??_getSetpoint:	
  6794                           ; 1 bytes @ 0x2
  6795                           
  6796     00A2                     ??_getDutycycle:	
  6797                           ; 1 bytes @ 0x2
  6798                           
  6799     00A2                     ??__Umul8_16:	
  6800                           ; 1 bytes @ 0x2
  6801                           
  6802     00A2                     ??_strlen:	
  6803                           ; 1 bytes @ 0x2
  6804                           
  6805     00A2                     ??_ADC_Initialize:	
  6806                           ; 1 bytes @ 0x2
  6807                           
  6808     00A2                     ??_INTERRUPT_Initialize:	
  6809                           ; 1 bytes @ 0x2
  6810                           
  6811     00A2                     ??_SYSTEM_Initialize:	
  6812                           ; 1 bytes @ 0x2
  6813                           
  6814     00A2                     ??_TMR4_PeriodMatchCallbackRegister:	
  6815                           ; 1 bytes @ 0x2
  6816                           
  6817     00A2                     ??_TMR6_PeriodMatchCallbackRegister:	
  6818                           ; 1 bytes @ 0x2
  6819                           
  6820     00A2                     ??_putch:	
  6821                           ; 1 bytes @ 0x2
  6822                           
  6823     00A2                     ??_getHoogtesensor:	
  6824                           ; 1 bytes @ 0x2
  6825                           
  6826                           
  6827                           ; 1 bytes @ 0x2
  6828     00A2                     	ds	1
  6829     00A3                     ?_fputc:
  6830     00A3                     sendLedstripFrame@intensity:	
  6831                           ; 2 bytes @ 0x3
  6832                           
  6833     00A3                     fputc@c:	
  6834                           ; 1 bytes @ 0x3
  6835                           
  6836                           
  6837                           ; 2 bytes @ 0x3
  6838     00A3                     	ds	1
  6839     00A4                     sendLedstripFrame@red:
  6840     00A4                     ___awdiv@counter:	
  6841                           ; 1 bytes @ 0x4
  6842                           
  6843     00A4                     ___awmod@counter:	
  6844                           ; 1 bytes @ 0x4
  6845                           
  6846     00A4                     ___lwmod@counter:	
  6847                           ; 1 bytes @ 0x4
  6848                           
  6849     00A4                     ___wmul@product:	
  6850                           ; 1 bytes @ 0x4
  6851                           
  6852     00A4                     ___lwdiv@quotient:	
  6853                           ; 2 bytes @ 0x4
  6854                           
  6855     00A4                     __Umul8_16@product:	
  6856                           ; 2 bytes @ 0x4
  6857                           
  6858     00A4                     ___fldiv@b:	
  6859                           ; 2 bytes @ 0x4
  6860                           
  6861     00A4                     ??_getKp:	
  6862                           ; 4 bytes @ 0x4
  6863                           
  6864     00A4                     ??_getKi:	
  6865                           ; 1 bytes @ 0x4
  6866                           
  6867     00A4                     ??_sendLedstripFrame:	
  6868                           ; 1 bytes @ 0x4
  6869                           
  6870     00A4                     ??___wmul:	
  6871                           ; 1 bytes @ 0x4
  6872                           
  6873     00A4                     ??___awdiv:	
  6874                           ; 1 bytes @ 0x4
  6875                           
  6876     00A4                     ??___awmod:	
  6877                           ; 1 bytes @ 0x4
  6878                           
  6879     00A4                     ??___lwdiv:	
  6880                           ; 1 bytes @ 0x4
  6881                           
  6882     00A4                     ??___lwmod:	
  6883                           ; 1 bytes @ 0x4
  6884                           
  6885     00A4                     ??___xxtofl:	
  6886                           ; 1 bytes @ 0x4
  6887                           
  6888                           
  6889                           ; 1 bytes @ 0x4
  6890     00A4                     	ds	1
  6891     00A5                     ___awdiv@sign:
  6892     00A5                     ___awmod@sign:	
  6893                           ; 1 bytes @ 0x5
  6894                           
  6895     00A5                     fputc@fp:	
  6896                           ; 1 bytes @ 0x5
  6897                           
  6898                           
  6899                           ; 2 bytes @ 0x5
  6900     00A5                     	ds	1
  6901     00A6                     ?_SPI1_Open:
  6902     00A6                     ?_atoi:	
  6903                           ; 1 bytes @ 0x6
  6904                           
  6905     00A6                     ?_abs:	
  6906                           ; 2 bytes @ 0x6
  6907                           
  6908     00A6                     ?_read_prec_or_width:	
  6909                           ; 2 bytes @ 0x6
  6910                           
  6911     00A6                     SPI1_Open@spiConfigIndex:	
  6912                           ; 2 bytes @ 0x6
  6913                           
  6914     00A6                     ___lwdiv@counter:	
  6915                           ; 1 bytes @ 0x6
  6916                           
  6917     00A6                     atoi@s:	
  6918                           ; 1 bytes @ 0x6
  6919                           
  6920     00A6                     read_prec_or_width@fmt:	
  6921                           ; 1 bytes @ 0x6
  6922                           
  6923     00A6                     ___awdiv@quotient:	
  6924                           ; 1 bytes @ 0x6
  6925                           
  6926     00A6                     __Umul8_16@word_mpld:	
  6927                           ; 2 bytes @ 0x6
  6928                           
  6929     00A6                     abs@a:	
  6930                           ; 2 bytes @ 0x6
  6931                           
  6932                           
  6933                           ; 2 bytes @ 0x6
  6934     00A6                     	ds	1
  6935     00A7                     read_prec_or_width@ap:
  6936     00A7                     ??_SPI1_Open:	
  6937                           ; 1 bytes @ 0x7
  6938                           
  6939     00A7                     ??_fputc:	
  6940                           ; 1 bytes @ 0x7
  6941                           
  6942                           
  6943                           ; 1 bytes @ 0x7
  6944     00A7                     	ds	1
  6945     00A8                     __Umul8_16@multiplier:
  6946     00A8                     ___xxtofl@sign:	
  6947                           ; 1 bytes @ 0x8
  6948                           
  6949     00A8                     ??_atoi:	
  6950                           ; 1 bytes @ 0x8
  6951                           
  6952     00A8                     ??_abs:	
  6953                           ; 1 bytes @ 0x8
  6954                           
  6955     00A8                     ??___fldiv:	
  6956                           ; 1 bytes @ 0x8
  6957                           
  6958     00A8                     ??_read_prec_or_width:	
  6959                           ; 1 bytes @ 0x8
  6960                           
  6961                           
  6962                           ; 1 bytes @ 0x8
  6963     00A8                     	ds	1
  6964     00A9                     ___xxtofl@exp:
  6965     00A9                     ??_initLedstrip:	
  6966                           ; 1 bytes @ 0x9
  6967                           
  6968                           
  6969                           ; 1 bytes @ 0x9
  6970     00A9                     	ds	1
  6971     00AA                     atoi@neg:
  6972     00AA                     ___xxtofl@arg:	
  6973                           ; 1 bytes @ 0xA
  6974                           
  6975                           
  6976                           ; 4 bytes @ 0xA
  6977     00AA                     	ds	1
  6978     00AB                     read_prec_or_width@c:
  6979     00AB                     atoi@n:	
  6980                           ; 1 bytes @ 0xB
  6981                           
  6982                           
  6983                           ; 2 bytes @ 0xB
  6984     00AB                     	ds	1
  6985     00AC                     ?_fputs:
  6986     00AC                     fputs@s:	
  6987                           ; 2 bytes @ 0xC
  6988                           
  6989     00AC                     read_prec_or_width@n:	
  6990                           ; 1 bytes @ 0xC
  6991                           
  6992                           
  6993                           ; 2 bytes @ 0xC
  6994     00AC                     	ds	1
  6995     00AD                     ?_setSetpoint:
  6996     00AD                     setSetpoint@new_setpoint:	
  6997                           ; 1 bytes @ 0xD
  6998                           
  6999     00AD                     fputs@fp:	
  7000                           ; 2 bytes @ 0xD
  7001                           
  7002     00AD                     ___fldiv@rem:	
  7003                           ; 2 bytes @ 0xD
  7004                           
  7005                           
  7006                           ; 4 bytes @ 0xD
  7007     00AD                     	ds	1
  7008     00AE                     ?___fladd:
  7009     00AE                     ___fladd@b:	
  7010                           ; 4 bytes @ 0xE
  7011                           
  7012                           
  7013                           ; 4 bytes @ 0xE
  7014     00AE                     	ds	1
  7015     00AF                     ??_setSetpoint:
  7016     00AF                     ??_fputs:	
  7017                           ; 1 bytes @ 0xF
  7018                           
  7019                           
  7020                           ; 1 bytes @ 0xF
  7021     00AF                     	ds	2
  7022     00B1                     ___fldiv@sign:
  7023     00B1                     fputs@c:	
  7024                           ; 1 bytes @ 0x11
  7025                           
  7026                           
  7027                           ; 1 bytes @ 0x11
  7028     00B1                     	ds	1
  7029     00B2                     ___fldiv@new_exp:
  7030     00B2                     fputs@i:	
  7031                           ; 2 bytes @ 0x12
  7032                           
  7033     00B2                     ___fladd@a:	
  7034                           ; 2 bytes @ 0x12
  7035                           
  7036                           
  7037                           ; 4 bytes @ 0x12
  7038     00B2                     	ds	2
  7039     00B4                     ?_pad:
  7040     00B4                     pad@fp:	
  7041                           ; 2 bytes @ 0x14
  7042                           
  7043     00B4                     ___fldiv@grs:	
  7044                           ; 2 bytes @ 0x14
  7045                           
  7046                           
  7047                           ; 4 bytes @ 0x14
  7048     00B4                     	ds	2
  7049     00B6                     pad@buf:
  7050     00B6                     ??___fladd:	
  7051                           ; 1 bytes @ 0x16
  7052                           
  7053                           
  7054                           ; 1 bytes @ 0x16
  7055     00B6                     	ds	1
  7056     00B7                     pad@p:
  7057                           
  7058                           ; 2 bytes @ 0x17
  7059     00B7                     	ds	1
  7060     00B8                     ___fldiv@bexp:
  7061                           
  7062                           ; 1 bytes @ 0x18
  7063     00B8                     	ds	1
  7064     00B9                     ___fldiv@aexp:
  7065     00B9                     ??_pad:	
  7066                           ; 1 bytes @ 0x19
  7067                           
  7068                           
  7069                           ; 1 bytes @ 0x19
  7070     00B9                     	ds	1
  7071     00BA                     pad@i:
  7072                           
  7073                           ; 2 bytes @ 0x1A
  7074     00BA                     	ds	2
  7075     00BC                     ?_dtoa:
  7076     00BC                     ?_utoa:	
  7077                           ; 2 bytes @ 0x1C
  7078                           
  7079     00BC                     dtoa@fp:	
  7080                           ; 2 bytes @ 0x1C
  7081                           
  7082     00BC                     utoa@fp:	
  7083                           ; 2 bytes @ 0x1C
  7084                           
  7085                           
  7086                           ; 2 bytes @ 0x1C
  7087     00BC                     	ds	2
  7088     00BE                     ___fladd@signs:
  7089     00BE                     dtoa@d:	
  7090                           ; 1 bytes @ 0x1E
  7091                           
  7092     00BE                     utoa@d:	
  7093                           ; 2 bytes @ 0x1E
  7094                           
  7095                           
  7096                           ; 2 bytes @ 0x1E
  7097     00BE                     	ds	1
  7098     00BF                     ___fladd@aexp:
  7099                           
  7100                           ; 1 bytes @ 0x1F
  7101     00BF                     	ds	1
  7102     00C0                     ___fladd@bexp:
  7103     00C0                     ??_dtoa:	
  7104                           ; 1 bytes @ 0x20
  7105                           
  7106     00C0                     ??_utoa:	
  7107                           ; 1 bytes @ 0x20
  7108                           
  7109                           
  7110                           ; 1 bytes @ 0x20
  7111     00C0                     	ds	1
  7112     00C1                     ___fladd@grs:
  7113     00C1                     utoa@p:	
  7114                           ; 1 bytes @ 0x21
  7115                           
  7116     00C1                     _dtoa$2108:	
  7117                           ; 1 bytes @ 0x21
  7118                           
  7119                           
  7120                           ; 2 bytes @ 0x21
  7121     00C1                     	ds	1
  7122     00C2                     ?___flsub:
  7123     00C2                     utoa@w:	
  7124                           ; 4 bytes @ 0x22
  7125                           
  7126     00C2                     ___flsub@a:	
  7127                           ; 2 bytes @ 0x22
  7128                           
  7129                           
  7130                           ; 4 bytes @ 0x22
  7131     00C2                     	ds	1
  7132     00C3                     dtoa@p:
  7133                           
  7134                           ; 1 bytes @ 0x23
  7135     00C3                     	ds	1
  7136     00C4                     dtoa@w:
  7137     00C4                     utoa@i:	
  7138                           ; 2 bytes @ 0x24
  7139                           
  7140                           
  7141                           ; 2 bytes @ 0x24
  7142     00C4                     	ds	2
  7143     00C6                     dtoa@s:
  7144     00C6                     ___flsub@b:	
  7145                           ; 1 bytes @ 0x26
  7146                           
  7147                           
  7148                           ; 4 bytes @ 0x26
  7149     00C6                     	ds	1
  7150     00C7                     dtoa@i:
  7151                           
  7152                           ; 2 bytes @ 0x27
  7153     00C7                     	ds	2
  7154     00C9                     ?_vfpfcnvrt:
  7155     00C9                     vfpfcnvrt@fp:	
  7156                           ; 2 bytes @ 0x29
  7157                           
  7158                           
  7159                           ; 2 bytes @ 0x29
  7160     00C9                     	ds	1
  7161     00CA                     ?___flmul:
  7162     00CA                     ___flmul@b:	
  7163                           ; 4 bytes @ 0x2A
  7164                           
  7165     00CA                     ??___flsub:	
  7166                           ; 4 bytes @ 0x2A
  7167                           
  7168                           
  7169                           ; 1 bytes @ 0x2A
  7170     00CA                     	ds	1
  7171     00CB                     vfpfcnvrt@fmt:
  7172                           
  7173                           ; 1 bytes @ 0x2B
  7174     00CB                     	ds	1
  7175     00CC                     vfpfcnvrt@ap:
  7176                           
  7177                           ; 2 bytes @ 0x2C
  7178     00CC                     	ds	2
  7179     00CE                     ___flmul@a:
  7180     00CE                     ??_vfpfcnvrt:	
  7181                           ; 4 bytes @ 0x2E
  7182                           
  7183                           
  7184                           ; 1 bytes @ 0x2E
  7185     00CE                     	ds	4
  7186     00D2                     vfpfcnvrt@done:
  7187     00D2                     ??___flmul:	
  7188                           ; 1 bytes @ 0x32
  7189                           
  7190                           
  7191                           ; 1 bytes @ 0x32
  7192     00D2                     	ds	1
  7193     00D3                     vfpfcnvrt@convarg:
  7194                           
  7195                           ; 4 bytes @ 0x33
  7196     00D3                     	ds	4
  7197     00D7                     ___flmul@sign:
  7198     00D7                     vfpfcnvrt@cp:	
  7199                           ; 1 bytes @ 0x37
  7200                           
  7201                           
  7202                           ; 2 bytes @ 0x37
  7203     00D7                     	ds	1
  7204     00D8                     ___flmul@grs:
  7205                           
  7206                           ; 4 bytes @ 0x38
  7207     00D8                     	ds	1
  7208     00D9                     ?_vfprintf:
  7209     00D9                     vfprintf@fp:	
  7210                           ; 2 bytes @ 0x39
  7211                           
  7212                           
  7213                           ; 2 bytes @ 0x39
  7214     00D9                     	ds	2
  7215     00DB                     vfprintf@fmt:
  7216                           
  7217                           ; 2 bytes @ 0x3B
  7218     00DB                     	ds	1
  7219     00DC                     ___flmul@aexp:
  7220                           
  7221                           ; 1 bytes @ 0x3C
  7222     00DC                     	ds	1
  7223     00DD                     ___flmul@bexp:
  7224     00DD                     vfprintf@ap:	
  7225                           ; 1 bytes @ 0x3D
  7226                           
  7227                           
  7228                           ; 1 bytes @ 0x3D
  7229     00DD                     	ds	1
  7230     00DE                     ___flmul@prod:
  7231     00DE                     ??_vfprintf:	
  7232                           ; 4 bytes @ 0x3E
  7233                           
  7234                           
  7235                           ; 1 bytes @ 0x3E
  7236     00DE                     	ds	1
  7237     00DF                     vfprintf@cfmt:
  7238                           
  7239                           ; 2 bytes @ 0x3F
  7240     00DF                     	ds	2
  7241     00E1                     ?_printf:
  7242     00E1                     printf@fmt:	
  7243                           ; 2 bytes @ 0x41
  7244                           
  7245                           
  7246                           ; 2 bytes @ 0x41
  7247     00E1                     	ds	1
  7248     00E2                     ___flmul@temp:
  7249                           
  7250                           ; 2 bytes @ 0x42
  7251     00E2                     	ds	2
  7252     00E4                     ?_str2float:
  7253     00E4                     ?___fltol:	
  7254                           ; 4 bytes @ 0x44
  7255                           
  7256     00E4                     str2float@str:	
  7257                           ; 4 bytes @ 0x44
  7258                           
  7259     00E4                     ___fltol@f1:	
  7260                           ; 1 bytes @ 0x44
  7261                           
  7262                           
  7263                           ; 4 bytes @ 0x44
  7264     00E4                     	ds	3
  7265     00E7                     printf@ap:
  7266     00E7                     ??_printf:	
  7267                           ; 1 bytes @ 0x47
  7268                           
  7269                           
  7270                           ; 1 bytes @ 0x47
  7271     00E7                     	ds	1
  7272     00E8                     ?_readLine:
  7273     00E8                     str2float@decimal_separator:	
  7274                           ; 1 bytes @ 0x48
  7275                           
  7276     00E8                     ??_str2float:	
  7277                           ; 1 bytes @ 0x48
  7278                           
  7279     00E8                     ??___fltol:	
  7280                           ; 1 bytes @ 0x48
  7281                           
  7282                           
  7283                           ; 1 bytes @ 0x48
  7284     00E8                     	ds	1
  7285     00E9                     str2float@multiplier:
  7286                           
  7287                           ; 1 bytes @ 0x49
  7288     00E9                     	ds	1
  7289     00EA                     str2float@i:
  7290     00EA                     ??_readLine:	
  7291                           ; 1 bytes @ 0x4A
  7292                           
  7293                           
  7294                           ; 1 bytes @ 0x4A
  7295     00EA                     	ds	1
  7296     00EB                     str2float@number:
  7297                           
  7298                           ; 4 bytes @ 0x4B
  7299     00EB                     	ds	1
  7300     00EC                     ___fltol@sign1:
  7301                           
  7302                           ; 1 bytes @ 0x4C
  7303     00EC                     	ds	1
  7304     00ED                     ___fltol@exp1:
  7305                           
  7306                           ; 1 bytes @ 0x4D
  7307     00ED                     	ds	1
  7308     00EE                     ?_getLedNumber:
  7309     00EE                     getLedNumber@height:	
  7310                           ; 2 bytes @ 0x4E
  7311                           
  7312     00EE                     ??_printFloat:	
  7313                           ; 2 bytes @ 0x4E
  7314                           
  7315                           
  7316                           ; 1 bytes @ 0x4E
  7317     00EE                     	ds	1
  7318     00EF                     str2float@digit:
  7319                           
  7320                           ; 1 bytes @ 0x4F
  7321     00EF                     	ds	1
  7322     00F0                     ??_uartHandler:
  7323     00F0                     ??_printLogs:	
  7324                           ; 1 bytes @ 0x50
  7325                           
  7326     00F0                     ??_setKp:	
  7327                           ; 1 bytes @ 0x50
  7328                           
  7329     00F0                     ??_setKi:	
  7330                           ; 1 bytes @ 0x50
  7331                           
  7332     00F0                     ??_TMR6_Tasks:	
  7333                           ; 1 bytes @ 0x50
  7334                           
  7335     00F0                     ??_getLedNumber:	
  7336                           ; 1 bytes @ 0x50
  7337                           
  7338     00F0                     ??_updateLedstripAnimation:	
  7339                           ; 1 bytes @ 0x50
  7340                           
  7341                           
  7342                           	psect	cstackCOMMON
  7343     0070                     __pcstackCOMMON:	
  7344                           ; 1 bytes @ 0x50
  7345                           
  7346     0070                     ?_ADC_DefaultInterruptHandler:
  7347     0070                     ?_SPI1_Initialize:	
  7348                           ; 1 bytes @ 0x0
  7349                           
  7350     0070                     ?_TMR4_ISR:	
  7351                           ; 1 bytes @ 0x0
  7352                           
  7353     0070                     ?_TMR2_ISR:	
  7354                           ; 1 bytes @ 0x0
  7355                           
  7356     0070                     ?_TMR2_Initialize:	
  7357                           ; 1 bytes @ 0x0
  7358                           
  7359     0070                     ?_TMR4_Initialize:	
  7360                           ; 1 bytes @ 0x0
  7361                           
  7362     0070                     ?_TMR6_Initialize:	
  7363                           ; 1 bytes @ 0x0
  7364                           
  7365     0070                     ?_EUSART_Initialize:	
  7366                           ; 1 bytes @ 0x0
  7367                           
  7368     0070                     ?_TMR2_DefaultPeriodMatchCallback:	
  7369                           ; 1 bytes @ 0x0
  7370                           
  7371     0070                     ?_TMR4_DefaultPeriodMatchCallback:	
  7372                           ; 1 bytes @ 0x0
  7373                           
  7374     0070                     ?_TMR6_DefaultPeriodMatchCallback:	
  7375                           ; 1 bytes @ 0x0
  7376                           
  7377     0070                     ?_EUSART_Read:	
  7378                           ; 1 bytes @ 0x0
  7379                           
  7380     0070                     ?_EUSART_IsRxReady:	
  7381                           ; 1 bytes @ 0x0
  7382                           
  7383     0070                     ?_EUSART_IsTxReady:	
  7384                           ; 1 bytes @ 0x0
  7385                           
  7386     0070                     ?_EUSART_ReceiveISR:	
  7387                           ; 1 bytes @ 0x0
  7388                           
  7389     0070                     ?_EUSART_TransmitISR:	
  7390                           ; 1 bytes @ 0x0
  7391                           
  7392     0070                     ?_EUSART_DefaultFramingErrorCallback:	
  7393                           ; 1 bytes @ 0x0
  7394                           
  7395     0070                     ?_EUSART_DefaultOverrunErrorCallback:	
  7396                           ; 1 bytes @ 0x0
  7397                           
  7398     0070                     ?_initAdcMultiplexer:	
  7399                           ; 1 bytes @ 0x0
  7400                           
  7401     0070                     ?_controller:	
  7402                           ; 1 bytes @ 0x0
  7403                           
  7404     0070                     ?_initLedstrip:	
  7405                           ; 1 bytes @ 0x0
  7406                           
  7407     0070                     ?_uartHandler:	
  7408                           ; 1 bytes @ 0x0
  7409                           
  7410     0070                     ?_printLogs:	
  7411                           ; 1 bytes @ 0x0
  7412                           
  7413     0070                     ?_ADC_Initialize:	
  7414                           ; 1 bytes @ 0x0
  7415                           
  7416     0070                     ?_ADC_SelectChannel:	
  7417                           ; 1 bytes @ 0x0
  7418                           
  7419     0070                     ?_ADC_ISR:	
  7420                           ; 1 bytes @ 0x0
  7421                           
  7422     0070                     ?_pwm_fan_Initialize:	
  7423                           ; 1 bytes @ 0x0
  7424                           
  7425     0070                     ?_pwm_fan_LoadDutyValue:	
  7426                           ; 1 bytes @ 0x0
  7427                           
  7428     0070                     ?_INTERRUPT_Initialize:	
  7429                           ; 1 bytes @ 0x0
  7430                           
  7431     0070                     ?_INTERRUPT_InterruptManager:	
  7432                           ; 1 bytes @ 0x0
  7433                           
  7434     0070                     ?_CLOCK_Initialize:	
  7435                           ; 1 bytes @ 0x0
  7436                           
  7437     0070                     ?_PIN_MANAGER_Initialize:	
  7438                           ; 1 bytes @ 0x0
  7439                           
  7440     0070                     ?_SYSTEM_Initialize:	
  7441                           ; 1 bytes @ 0x0
  7442                           
  7443     0070                     ?_TMR6_Tasks:	
  7444                           ; 1 bytes @ 0x0
  7445                           
  7446     0070                     ?_putch:	
  7447                           ; 1 bytes @ 0x0
  7448                           
  7449     0070                     ?_adcConversionDoneHandler:	
  7450                           ; 1 bytes @ 0x0
  7451                           
  7452     0070                     ?_sendLedstripStartFrame:	
  7453                           ; 1 bytes @ 0x0
  7454                           
  7455     0070                     ?_sendLedstripEndFrame:	
  7456                           ; 1 bytes @ 0x0
  7457                           
  7458     0070                     ?_position_led_strip:	
  7459                           ; 1 bytes @ 0x0
  7460                           
  7461     0070                     ?_updateLedstripAnimation:	
  7462                           ; 1 bytes @ 0x0
  7463                           
  7464     0070                     ?i1_ADC_SelectChannel:	
  7465                           ; 1 bytes @ 0x0
  7466                           
  7467     0070                     ?_ADC_GetConversionResult:	
  7468                           ; 1 bytes @ 0x0
  7469                           
  7470     0070                     ?_main:	
  7471                           ; 2 bytes @ 0x0
  7472                           
  7473     0070                     ?i1_getHoogtesensor:	
  7474                           ; 2 bytes @ 0x0
  7475                           
  7476     0070                     ?i1__Umul8_16:	
  7477                           ; 2 bytes @ 0x0
  7478                           
  7479     0070                     ?i1___xxtofl:	
  7480                           ; 2 bytes @ 0x0
  7481                           
  7482     0070                     EUSART_ReceiveISR@regValue:	
  7483                           ; 4 bytes @ 0x0
  7484                           
  7485     0070                     EUSART_TransmitISR@tempTxTail:	
  7486                           ; 1 bytes @ 0x0
  7487                           
  7488     0070                     i1__Umul8_16@multiplicand:	
  7489                           ; 1 bytes @ 0x0
  7490                           
  7491     0070                     pwm_fan_LoadDutyValue@dutyValue:	
  7492                           ; 1 bytes @ 0x0
  7493                           
  7494     0070                     i1___xxtofl@val:	
  7495                           ; 2 bytes @ 0x0
  7496                           
  7497     0070                     ??_ADC_DefaultInterruptHandler:	
  7498                           ; 4 bytes @ 0x0
  7499                           
  7500     0070                     ??_TMR2_ISR:	
  7501                           ; 1 bytes @ 0x0
  7502                           
  7503     0070                     ??_TMR2_DefaultPeriodMatchCallback:	
  7504                           ; 1 bytes @ 0x0
  7505                           
  7506     0070                     ??_TMR4_DefaultPeriodMatchCallback:	
  7507                           ; 1 bytes @ 0x0
  7508                           
  7509     0070                     ??_EUSART_ReceiveISR:	
  7510                           ; 1 bytes @ 0x0
  7511                           
  7512     0070                     ??_EUSART_TransmitISR:	
  7513                           ; 1 bytes @ 0x0
  7514                           
  7515     0070                     ??_EUSART_DefaultFramingErrorCallback:	
  7516                           ; 1 bytes @ 0x0
  7517                           
  7518     0070                     ??_EUSART_DefaultOverrunErrorCallback:	
  7519                           ; 1 bytes @ 0x0
  7520                           
  7521     0070                     ??i1_ADC_SelectChannel:	
  7522                           ; 1 bytes @ 0x0
  7523                           
  7524                           
  7525                           ; 1 bytes @ 0x0
  7526     0070                     	ds	1
  7527     0071                     EUSART_ReceiveISR@tempRxHead:
  7528     0071                     i1ADC_SelectChannel@channel:	
  7529                           ; 1 bytes @ 0x1
  7530                           
  7531                           
  7532                           ; 1 bytes @ 0x1
  7533     0071                     	ds	1
  7534     0072                     ??_ADC_GetConversionResult:
  7535     0072                     ??_pwm_fan_LoadDutyValue:	
  7536                           ; 1 bytes @ 0x2
  7537                           
  7538     0072                     ??_adcConversionDoneHandler:	
  7539                           ; 1 bytes @ 0x2
  7540                           
  7541     0072                     ??i1_getHoogtesensor:	
  7542                           ; 1 bytes @ 0x2
  7543                           
  7544     0072                     ??i1__Umul8_16:	
  7545                           ; 1 bytes @ 0x2
  7546                           
  7547                           
  7548                           ; 1 bytes @ 0x2
  7549     0072                     	ds	2
  7550     0074                     i1__Umul8_16@product:
  7551     0074                     ??_ADC_ISR:	
  7552                           ; 2 bytes @ 0x4
  7553                           
  7554     0074                     ??i1___xxtofl:	
  7555                           ; 1 bytes @ 0x4
  7556                           
  7557                           
  7558                           ; 1 bytes @ 0x4
  7559     0074                     	ds	2
  7560     0076                     i1__Umul8_16@word_mpld:
  7561                           
  7562                           ; 2 bytes @ 0x6
  7563     0076                     	ds	2
  7564     0078                     i1__Umul8_16@multiplier:
  7565     0078                     i1___xxtofl@sign:	
  7566                           ; 1 bytes @ 0x8
  7567                           
  7568                           
  7569                           ; 1 bytes @ 0x8
  7570     0078                     	ds	1
  7571     0079                     i1___xxtofl@exp:
  7572                           
  7573                           ; 1 bytes @ 0x9
  7574     0079                     	ds	1
  7575     007A                     i1___xxtofl@arg:
  7576                           
  7577                           ; 4 bytes @ 0xA
  7578     007A                     	ds	4
  7579     007E                     ??_TMR4_ISR:
  7580     007E                     ??_INTERRUPT_InterruptManager:	
  7581                           ; 1 bytes @ 0xE
  7582                           
  7583                           
  7584                           	psect	cstackBANK0
  7585     0020                     __pcstackBANK0:	
  7586                           ; 1 bytes @ 0xE
  7587                           
  7588     0020                     ?i1___flmul:
  7589     0020                     i1___flmul@b:	
  7590                           ; 4 bytes @ 0x0
  7591                           
  7592                           
  7593                           ; 4 bytes @ 0x0
  7594     0020                     	ds	4
  7595     0024                     i1___flmul@a:
  7596                           
  7597                           ; 4 bytes @ 0x4
  7598     0024                     	ds	4
  7599     0028                     ??i1___flmul:
  7600                           
  7601                           ; 1 bytes @ 0x8
  7602     0028                     	ds	5
  7603     002D                     i1___flmul@sign:
  7604                           
  7605                           ; 1 bytes @ 0xD
  7606     002D                     	ds	1
  7607     002E                     i1___flmul@grs:
  7608                           
  7609                           ; 4 bytes @ 0xE
  7610     002E                     	ds	4
  7611     0032                     i1___flmul@aexp:
  7612                           
  7613                           ; 1 bytes @ 0x12
  7614     0032                     	ds	1
  7615     0033                     i1___flmul@bexp:
  7616                           
  7617                           ; 1 bytes @ 0x13
  7618     0033                     	ds	1
  7619     0034                     i1___flmul@prod:
  7620                           
  7621                           ; 4 bytes @ 0x14
  7622     0034                     	ds	4
  7623     0038                     i1___flmul@temp:
  7624                           
  7625                           ; 2 bytes @ 0x18
  7626     0038                     	ds	2
  7627     003A                     ?i1___fltol:
  7628     003A                     ?i1___fladd:	
  7629                           ; 4 bytes @ 0x1A
  7630                           
  7631     003A                     i1___fltol@f1:	
  7632                           ; 4 bytes @ 0x1A
  7633                           
  7634     003A                     i1___fladd@b:	
  7635                           ; 4 bytes @ 0x1A
  7636                           
  7637                           
  7638                           ; 4 bytes @ 0x1A
  7639     003A                     	ds	4
  7640     003E                     i1___fladd@a:
  7641     003E                     ??i1___fltol:	
  7642                           ; 4 bytes @ 0x1E
  7643                           
  7644                           
  7645                           ; 1 bytes @ 0x1E
  7646     003E                     	ds	4
  7647     0042                     i1___fltol@sign1:
  7648     0042                     ??i1___fladd:	
  7649                           ; 1 bytes @ 0x22
  7650                           
  7651                           
  7652                           ; 1 bytes @ 0x22
  7653     0042                     	ds	1
  7654     0043                     i1___fltol@exp1:
  7655                           
  7656                           ; 1 bytes @ 0x23
  7657     0043                     	ds	7
  7658     004A                     i1___fladd@signs:
  7659                           
  7660                           ; 1 bytes @ 0x2A
  7661     004A                     	ds	1
  7662     004B                     i1___fladd@aexp:
  7663                           
  7664                           ; 1 bytes @ 0x2B
  7665     004B                     	ds	1
  7666     004C                     i1___fladd@bexp:
  7667                           
  7668                           ; 1 bytes @ 0x2C
  7669     004C                     	ds	1
  7670     004D                     i1___fladd@grs:
  7671                           
  7672                           ; 1 bytes @ 0x2D
  7673     004D                     	ds	1
  7674     004E                     ??_controller:
  7675                           
  7676                           ; 1 bytes @ 0x2E
  7677     004E                     	ds	1
  7678     004F                     controller@P:
  7679                           
  7680                           ; 2 bytes @ 0x2F
  7681     004F                     	ds	2
  7682     0051                     controller@I:
  7683                           
  7684                           ; 2 bytes @ 0x31
  7685     0051                     	ds	2
  7686     0053                     controller@error:
  7687                           
  7688                           ; 2 bytes @ 0x33
  7689     0053                     	ds	2
  7690                           
  7691                           	psect	maintext
  7692     1EF5                     __pmaintext:	
  7693 ;;
  7694 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
  7695 ;;
  7696 ;; *************** function _main *****************
  7697 ;; Defined at:
  7698 ;;		line 51 in file "main.c"
  7699 ;; Parameters:    Size  Location     Type
  7700 ;;		None
  7701 ;; Auto vars:     Size  Location     Type
  7702 ;;		None
  7703 ;; Return value:  Size  Location     Type
  7704 ;;                  2  788[None  ] int 
  7705 ;; Registers used:
  7706 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  7707 ;; Tracked objects:
  7708 ;;		On entry : B1F/0
  7709 ;;		On exit  : 0/0
  7710 ;;		Unchanged: 0/0
  7711 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7712 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7713 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7714 ;;      Temps:          0       0       0       2       0       0       0       0       0       0       0       0       
      +0       0
  7715 ;;      Totals:         0       0       0       2       0       0       0       0       0       0       0       0       
      +0       0
  7716 ;;Total ram usage:        2 bytes
  7717 ;; Hardware stack levels required when called: 16
  7718 ;; This function calls:
  7719 ;;		_SYSTEM_Initialize
  7720 ;;		_TMR4_PeriodMatchCallbackRegister
  7721 ;;		_TMR6_Tasks
  7722 ;;		_initAdcMultiplexer
  7723 ;;		_initLedstrip
  7724 ;;		_printLogs
  7725 ;;		_uartHandler
  7726 ;; This function is called by:
  7727 ;;		Startup code after reset
  7728 ;; This function uses a non-reentrant model
  7729 ;;
  7730                           
  7731     1EF5                     _main:	
  7732                           ;psect for function _main
  7733                           
  7734     1EF5                     l6211:	
  7735                           ;incstack = 0
  7736                           ; Regs used in _main: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  7737                           
  7738                           
  7739                           ;main.c: 53:     SYSTEM_Initialize();
  7740     1EF5  319D  25B9  319E   	fcall	_SYSTEM_Initialize
  7741     1EF8                     l6213:
  7742                           
  7743                           ;main.c: 59:     (INTCONbits.GIE = 1);
  7744     1EF8  178B               	bsf	11,7	;volatile
  7745     1EF9                     l6215:
  7746                           
  7747                           ;main.c: 65:     (INTCONbits.PEIE = 1);
  7748     1EF9  170B               	bsf	11,6	;volatile
  7749                           
  7750                           ;main.c: 70:     initAdcMultiplexer();
  7751     1EFA  319C  2424  319E   	fcall	_initAdcMultiplexer
  7752                           
  7753                           ;main.c: 71:     TMR4_PeriodMatchCallbackRegister(controller);
  7754     1EFD  30BF               	movlw	low _controller
  7755     1EFE  0021               	movlb	1	; select bank1
  7756     1EFF  00A0               	movwf	TMR4_PeriodMatchCallbackRegister@CallbackHandler^(0+128)
  7757     1F00  3008               	movlw	high _controller
  7758     1F01  00A1               	movwf	(TMR4_PeriodMatchCallbackRegister@CallbackHandler^(0+128)+1)
  7759     1F02  319B  2381  319E   	fcall	_TMR4_PeriodMatchCallbackRegister
  7760     1F05                     l6217:
  7761                           
  7762                           ;main.c: 72:     initLedstrip();
  7763     1F05  319C  2431  319E   	fcall	_initLedstrip
  7764     1F08                     l6219:
  7765                           
  7766                           ;main.c: 75:     {;main.c: 76:         uartHandler();
  7767     1F08  3188  2011  319E   	fcall	_uartHandler
  7768     1F0B                     l6221:
  7769                           
  7770                           ;main.c: 78:         _delay((unsigned long)((1000)*(32000000U/4000.0)));
  7771     1F0B  3029               	movlw	41
  7772     1F0C  0022               	movlb	2	; select bank2
  7773     1F0D  00DD               	movwf	(??_main^(0+256)+1)
  7774     1F0E  3096               	movlw	150
  7775     1F0F  00DC               	movwf	??_main^(0+256)
  7776     1F10  307F               	movlw	127
  7777     1F11                     u7707:
  7778     1F11  0B89               	decfsz	9,f
  7779     1F12  2F11               	goto	u7707
  7780     1F13  0BDC               	decfsz	??_main^(0+256),f
  7781     1F14  2F11               	goto	u7707
  7782     1F15  0BDD               	decfsz	(??_main^(0+256)+1),f
  7783     1F16  2F11               	goto	u7707
  7784     1F17                     l6223:
  7785                           
  7786                           ;main.c: 81:         printLogs();
  7787     1F17  3195  250B  319E   	fcall	_printLogs
  7788     1F1A                     l6225:
  7789                           
  7790                           ;main.c: 83:         TMR6_Tasks();
  7791     1F1A  319C  24FF  319E   	fcall	_TMR6_Tasks
  7792     1F1D  2F08               	goto	l6219
  7793     1F1E  3180  2858         	ljmp	start
  7794     1F20                     __end_of_main:
  7795                           
  7796                           	psect	text1
  7797     0811                     __ptext1:	
  7798 ;; *************** function _uartHandler *****************
  7799 ;; Defined at:
  7800 ;;		line 95 in file "UART.c"
  7801 ;; Parameters:    Size  Location     Type
  7802 ;;		None
  7803 ;; Auto vars:     Size  Location     Type
  7804 ;;  str             1    4[BANK2 ] PTR unsigned char 
  7805 ;;		 -> line(20), 
  7806 ;; Return value:  Size  Location     Type
  7807 ;;                  1    wreg      void 
  7808 ;; Registers used:
  7809 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  7810 ;; Tracked objects:
  7811 ;;		On entry : 0/0
  7812 ;;		On exit  : 0/0
  7813 ;;		Unchanged: 0/0
  7814 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7815 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7816 ;;      Locals:         0       0       0       1       0       0       0       0       0       0       0       0       
      +0       0
  7817 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7818 ;;      Totals:         0       0       0       1       0       0       0       0       0       0       0       0       
      +0       0
  7819 ;;Total ram usage:        1 bytes
  7820 ;; Hardware stack levels used: 1
  7821 ;; Hardware stack levels required when called: 15
  7822 ;; This function calls:
  7823 ;;		_atoi
  7824 ;;		_printf
  7825 ;;		_readLine
  7826 ;;		_setKi
  7827 ;;		_setKp
  7828 ;;		_setSetpoint
  7829 ;;		_str2float
  7830 ;; This function is called by:
  7831 ;;		_main
  7832 ;; This function uses a non-reentrant model
  7833 ;;
  7834                           
  7835     0811                     _uartHandler:	
  7836                           ;psect for function _uartHandler
  7837                           
  7838     0811                     l6131:	
  7839                           ;incstack = 0
  7840                           ; Regs used in _uartHandler: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  7841                           
  7842                           
  7843                           ;UART.c: 96:     char *str = readLine();
  7844     0811  3191  2101  3188   	fcall	_readLine
  7845     0814  0022               	movlb	2	; select bank2
  7846     0815  00D4               	movwf	uartHandler@str^(0+256)
  7847                           
  7848                           ;UART.c: 97:     switch (*str) {
  7849     0816  289D               	goto	l6151
  7850     0817                     l6133:
  7851                           
  7852                           ;UART.c: 103:             setSetpoint((uint16_t) atoi(str + 1));
  7853     0817  0854               	movf	uartHandler@str^(0+256),w
  7854     0818  3E01               	addlw	1
  7855     0819  0021               	movlb	1	; select bank1
  7856     081A  00A6               	movwf	atoi@s^(0+128)
  7857     081B  3194  2492  3188   	fcall	_atoi
  7858     081E  0021               	movlb	1	; select bank1
  7859     081F  0827               	movf	(?_atoi+1)^(0+128),w
  7860     0820  00AE               	movwf	(setSetpoint@new_setpoint+1)^(0+128)
  7861     0821  0826               	movf	?_atoi^(0+128),w
  7862     0822  00AD               	movwf	setSetpoint@new_setpoint^(0+128)
  7863     0823  319B  23C0  3188   	fcall	_setSetpoint
  7864     0826                     l6135:
  7865                           
  7866                           ;UART.c: 104:             printf("changed setpoint to %u\r\n", (uint16_t) atoi(str + 1))
      +                          ;
  7867     0826  304C               	movlw	low (STR_9| (0+32768))
  7868     0827  0021               	movlb	1	; select bank1
  7869     0828  00E1               	movwf	printf@fmt^(0+128)
  7870     0829  3098               	movlw	high (STR_9| (0+32768))
  7871     082A  00E2               	movwf	(printf@fmt^(0+128)+1)
  7872     082B  0022               	movlb	2	; select bank2
  7873     082C  0854               	movf	uartHandler@str^(0+256),w
  7874     082D  3E01               	addlw	1
  7875     082E  0021               	movlb	1	; select bank1
  7876     082F  00A6               	movwf	atoi@s^(0+128)
  7877     0830  3194  2492  3188   	fcall	_atoi
  7878     0833  0021               	movlb	1	; select bank1
  7879     0834  0827               	movf	(?_atoi+1)^(0+128),w
  7880     0835  00E4               	movwf	((?_printf+1)^(0+128)+2)
  7881     0836  0826               	movf	?_atoi^(0+128),w
  7882     0837  00E3               	movwf	(?_printf^(0+128)+2)
  7883     0838  319C  2499  3188   	fcall	_printf
  7884                           
  7885                           ;UART.c: 105:             break;
  7886     083B  28BE               	goto	l904
  7887     083C                     l6137:
  7888                           
  7889                           ;UART.c: 109:             setKp(str2float(str + 1));
  7890     083C  0854               	movf	uartHandler@str^(0+256),w
  7891     083D  3E01               	addlw	1
  7892     083E  0021               	movlb	1	; select bank1
  7893     083F  00E4               	movwf	str2float@str^(0+128)
  7894     0840  3197  2755  3188   	fcall	_str2float
  7895     0843  0021               	movlb	1	; select bank1
  7896     0844  0867               	movf	(?_str2float+3)^(0+128),w
  7897     0845  0022               	movlb	2	; select bank2
  7898     0846  00D3               	movwf	(setKp@new_kp+3)^(0+256)
  7899     0847  0021               	movlb	1	; select bank1
  7900     0848  0866               	movf	(?_str2float+2)^(0+128),w
  7901     0849  0022               	movlb	2	; select bank2
  7902     084A  00D2               	movwf	(setKp@new_kp+2)^(0+256)
  7903     084B  0021               	movlb	1	; select bank1
  7904     084C  0865               	movf	(?_str2float+1)^(0+128),w
  7905     084D  0022               	movlb	2	; select bank2
  7906     084E  00D1               	movwf	(setKp@new_kp+1)^(0+256)
  7907     084F  0021               	movlb	1	; select bank1
  7908     0850  0864               	movf	?_str2float^(0+128),w
  7909     0851  0022               	movlb	2	; select bank2
  7910     0852  00D0               	movwf	setKp@new_kp^(0+256)
  7911     0853  319B  23DD  3188   	fcall	_setKp
  7912     0856                     l6139:
  7913                           
  7914                           ;UART.c: 110:             printf("changed kp\r\n");
  7915     0856  30CA               	movlw	low (STR_10| (0+32768))
  7916     0857  0021               	movlb	1	; select bank1
  7917     0858  00E1               	movwf	printf@fmt^(0+128)
  7918     0859  3098               	movlw	high (STR_10| (0+32768))
  7919     085A  00E2               	movwf	(printf@fmt^(0+128)+1)
  7920     085B  319C  2499  3188   	fcall	_printf
  7921                           
  7922                           ;UART.c: 111:             break;
  7923     085E  28BE               	goto	l904
  7924     085F                     l6141:
  7925                           
  7926                           ;UART.c: 114:             setKi(str2float(str + 1));
  7927     085F  0854               	movf	uartHandler@str^(0+256),w
  7928     0860  3E01               	addlw	1
  7929     0861  0021               	movlb	1	; select bank1
  7930     0862  00E4               	movwf	str2float@str^(0+128)
  7931     0863  3197  2755  3188   	fcall	_str2float
  7932     0866  0021               	movlb	1	; select bank1
  7933     0867  0867               	movf	(?_str2float+3)^(0+128),w
  7934     0868  0022               	movlb	2	; select bank2
  7935     0869  00D3               	movwf	(setKi@new_ki+3)^(0+256)
  7936     086A  0021               	movlb	1	; select bank1
  7937     086B  0866               	movf	(?_str2float+2)^(0+128),w
  7938     086C  0022               	movlb	2	; select bank2
  7939     086D  00D2               	movwf	(setKi@new_ki+2)^(0+256)
  7940     086E  0021               	movlb	1	; select bank1
  7941     086F  0865               	movf	(?_str2float+1)^(0+128),w
  7942     0870  0022               	movlb	2	; select bank2
  7943     0871  00D1               	movwf	(setKi@new_ki+1)^(0+256)
  7944     0872  0021               	movlb	1	; select bank1
  7945     0873  0864               	movf	?_str2float^(0+128),w
  7946     0874  0022               	movlb	2	; select bank2
  7947     0875  00D0               	movwf	setKi@new_ki^(0+256)
  7948     0876  319B  23D3  3188   	fcall	_setKi
  7949     0879                     l6143:
  7950                           
  7951                           ;UART.c: 115:             printf("changed ki\r\n");
  7952     0879  30BD               	movlw	low (STR_11| (0+32768))
  7953     087A  0021               	movlb	1	; select bank1
  7954     087B  00E1               	movwf	printf@fmt^(0+128)
  7955     087C  3098               	movlw	high (STR_11| (0+32768))
  7956     087D  00E2               	movwf	(printf@fmt^(0+128)+1)
  7957     087E  319C  2499  3188   	fcall	_printf
  7958                           
  7959                           ;UART.c: 116:             break;
  7960     0881  28BE               	goto	l904
  7961     0882                     l6145:
  7962                           
  7963                           ;UART.c: 119:             mustPrintLogs = !mustPrintLogs;
  7964     0882  0020               	movlb	0	; select bank0
  7965     0883  086E               	movf	_mustPrintLogs,w
  7966     0884  1903               	btfsc	3,2
  7967     0885  2887               	goto	u7501
  7968     0886  2889               	goto	u7500
  7969     0887                     u7501:
  7970     0887  3001               	movlw	1
  7971     0888  288A               	goto	u7510
  7972     0889                     u7500:
  7973     0889  3000               	movlw	0
  7974     088A                     u7510:
  7975     088A  00EE               	movwf	_mustPrintLogs
  7976     088B                     l6147:
  7977                           
  7978                           ;UART.c: 120:             printf("logs toggled\r\n");
  7979     088B  309F               	movlw	low (STR_12| (0+32768))
  7980     088C  0021               	movlb	1	; select bank1
  7981     088D  00E1               	movwf	printf@fmt^(0+128)
  7982     088E  3098               	movlw	high (STR_12| (0+32768))
  7983     088F  00E2               	movwf	(printf@fmt^(0+128)+1)
  7984     0890  319C  2499  3188   	fcall	_printf
  7985                           
  7986                           ;UART.c: 121:             break;
  7987     0893  28BE               	goto	l904
  7988     0894                     l6149:
  7989                           
  7990                           ;UART.c: 125:             printf("Unkown command\r\n");
  7991     0894  307D               	movlw	low (STR_13| (0+32768))
  7992     0895  0021               	movlb	1	; select bank1
  7993     0896  00E1               	movwf	printf@fmt^(0+128)
  7994     0897  3098               	movlw	high (STR_13| (0+32768))
  7995     0898  00E2               	movwf	(printf@fmt^(0+128)+1)
  7996     0899  319C  2499  3188   	fcall	_printf
  7997                           
  7998                           ;UART.c: 126:     };
  7999     089C  28BE               	goto	l904
  8000     089D                     l6151:
  8001     089D  0854               	movf	uartHandler@str^(0+256),w
  8002     089E  0086               	movwf	6
  8003     089F  3001               	movlw	1	; select bank2/3
  8004     08A0  0087               	movwf	7
  8005     08A1  0801               	movf	1,w
  8006                           
  8007                           ; Switch size 1, requested type "simple"
  8008                           ; Number of cases is 9, Range of values is 0 to 115
  8009                           ; switch strategies available:
  8010                           ; Name         Instructions Cycles
  8011                           ; simple_byte           28    15 (average)
  8012                           ; direct_byte          238     6 (fixed)
  8013                           ; jumptable            260     6 (fixed)
  8014                           ;	Chosen strategy is simple_byte
  8015     08A2  3A00               	xorlw	0	; case 0
  8016     08A3  1903               	skipnz
  8017     08A4  28BE               	goto	l904
  8018     08A5  3A49               	xorlw	73	; case 73
  8019     08A6  1903               	skipnz
  8020     08A7  285F               	goto	l6141
  8021     08A8  3A05               	xorlw	5	; case 76
  8022     08A9  1903               	skipnz
  8023     08AA  2882               	goto	l6145
  8024     08AB  3A1C               	xorlw	28	; case 80
  8025     08AC  1903               	skipnz
  8026     08AD  283C               	goto	l6137
  8027     08AE  3A03               	xorlw	3	; case 83
  8028     08AF  1903               	skipnz
  8029     08B0  2817               	goto	l6133
  8030     08B1  3A3A               	xorlw	58	; case 105
  8031     08B2  1903               	skipnz
  8032     08B3  285F               	goto	l6141
  8033     08B4  3A05               	xorlw	5	; case 108
  8034     08B5  1903               	skipnz
  8035     08B6  2882               	goto	l6145
  8036     08B7  3A1C               	xorlw	28	; case 112
  8037     08B8  1903               	skipnz
  8038     08B9  283C               	goto	l6137
  8039     08BA  3A03               	xorlw	3	; case 115
  8040     08BB  1903               	skipnz
  8041     08BC  2817               	goto	l6133
  8042     08BD  2894               	goto	l6149
  8043     08BE                     l904:
  8044     08BE  0008               	return
  8045     08BF                     __end_of_uartHandler:
  8046                           
  8047                           	psect	text2
  8048     1755                     __ptext2:	
  8049 ;; *************** function _str2float *****************
  8050 ;; Defined at:
  8051 ;;		line 25 in file "UART.c"
  8052 ;; Parameters:    Size  Location     Type
  8053 ;;  str             1   68[BANK1 ] PTR unsigned char 
  8054 ;;		 -> line(20), 
  8055 ;; Auto vars:     Size  Location     Type
  8056 ;;  i               1   74[BANK1 ] unsigned char 
  8057 ;;  digit           1   79[BANK1 ] unsigned char 
  8058 ;;  number          4   75[BANK1 ] float 
  8059 ;;  multiplier      1   73[BANK1 ] unsigned char 
  8060 ;;  decimal_sepa    1   72[BANK1 ] _Bool 
  8061 ;; Return value:  Size  Location     Type
  8062 ;;                  4   68[BANK1 ] float 
  8063 ;; Registers used:
  8064 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  8065 ;; Tracked objects:
  8066 ;;		On entry : 0/0
  8067 ;;		On exit  : 0/0
  8068 ;;		Unchanged: 0/0
  8069 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8070 ;;      Params:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0
  8071 ;;      Locals:         0       0       8       0       0       0       0       0       0       0       0       0       
      +0       0
  8072 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8073 ;;      Totals:         0       0      12       0       0       0       0       0       0       0       0       0       
      +0       0
  8074 ;;Total ram usage:       12 bytes
  8075 ;; Hardware stack levels used: 1
  8076 ;; Hardware stack levels required when called: 7
  8077 ;; This function calls:
  8078 ;;		___fladd
  8079 ;;		___fldiv
  8080 ;;		___flmul
  8081 ;;		___xxtofl
  8082 ;; This function is called by:
  8083 ;;		_uartHandler
  8084 ;; This function uses a non-reentrant model
  8085 ;;
  8086                           
  8087     1755                     _str2float:	
  8088                           ;psect for function _str2float
  8089                           
  8090     1755                     l5879:	
  8091                           ;incstack = 0
  8092                           ; Regs used in _str2float: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  8093                           
  8094                           
  8095                           ;UART.c: 26:     float number = 0;
  8096     1755  3000               	movlw	0
  8097     1756  0021               	movlb	1	; select bank1
  8098     1757  00EE               	movwf	(str2float@number+3)^(0+128)
  8099     1758  3000               	movlw	0
  8100     1759  00ED               	movwf	(str2float@number+2)^(0+128)
  8101     175A  3000               	movlw	0
  8102     175B  00EC               	movwf	(str2float@number+1)^(0+128)
  8103     175C  3000               	movlw	0
  8104     175D  00EB               	movwf	str2float@number^(0+128)
  8105     175E                     l5881:
  8106                           
  8107                           ;UART.c: 27:     _Bool decimal_separator = 0;
  8108     175E  01E8               	clrf	str2float@decimal_separator^(0+128)
  8109     175F                     l5883:
  8110                           
  8111                           ;UART.c: 30:         char digit = *str++;
  8112     175F  0864               	movf	str2float@str^(0+128),w
  8113     1760  0086               	movwf	6
  8114     1761  3001               	movlw	1	; select bank2/3
  8115     1762  0087               	movwf	7
  8116     1763  0801               	movf	1,w
  8117     1764  00EF               	movwf	str2float@digit^(0+128)
  8118     1765                     l5885:
  8119     1765  3001               	movlw	1
  8120     1766  07E4               	addwf	str2float@str^(0+128),f
  8121     1767                     l5887:
  8122                           
  8123                           ;UART.c: 31:         if ('0' <= digit && digit <= '9') {
  8124     1767  3030               	movlw	48
  8125     1768  026F               	subwf	str2float@digit^(0+128),w
  8126     1769  1C03               	skipc
  8127     176A  2F6C               	goto	u7191
  8128     176B  2F6D               	goto	u7190
  8129     176C                     u7191:
  8130     176C  2FBC               	goto	l5895
  8131     176D                     u7190:
  8132     176D                     l5889:
  8133     176D  303A               	movlw	58
  8134     176E  026F               	subwf	str2float@digit^(0+128),w
  8135     176F  1803               	skipnc
  8136     1770  2F72               	goto	u7201
  8137     1771  2F73               	goto	u7200
  8138     1772                     u7201:
  8139     1772  2FBC               	goto	l5895
  8140     1773                     u7200:
  8141     1773                     l5891:
  8142                           
  8143                           ;UART.c: 32:             number *= 10;
  8144     1773  3041               	movlw	65
  8145     1774  00CD               	movwf	(___flmul@b+3)^(0+128)
  8146     1775  3020               	movlw	32
  8147     1776  00CC               	movwf	(___flmul@b+2)^(0+128)
  8148     1777  3000               	movlw	0
  8149     1778  00CB               	movwf	(___flmul@b+1)^(0+128)
  8150     1779  3000               	movlw	0
  8151     177A  00CA               	movwf	___flmul@b^(0+128)
  8152     177B  086E               	movf	(str2float@number+3)^(0+128),w
  8153     177C  00D1               	movwf	(___flmul@a+3)^(0+128)
  8154     177D  086D               	movf	(str2float@number+2)^(0+128),w
  8155     177E  00D0               	movwf	(___flmul@a+2)^(0+128)
  8156     177F  086C               	movf	(str2float@number+1)^(0+128),w
  8157     1780  00CF               	movwf	(___flmul@a+1)^(0+128)
  8158     1781  086B               	movf	str2float@number^(0+128),w
  8159     1782  00CE               	movwf	___flmul@a^(0+128)
  8160     1783  3180  208E  3197   	fcall	___flmul
  8161     1786  0021               	movlb	1	; select bank1
  8162     1787  084D               	movf	(?___flmul+3)^(0+128),w
  8163     1788  00EE               	movwf	(str2float@number+3)^(0+128)
  8164     1789  084C               	movf	(?___flmul+2)^(0+128),w
  8165     178A  00ED               	movwf	(str2float@number+2)^(0+128)
  8166     178B  084B               	movf	(?___flmul+1)^(0+128),w
  8167     178C  00EC               	movwf	(str2float@number+1)^(0+128)
  8168     178D  084A               	movf	?___flmul^(0+128),w
  8169     178E  00EB               	movwf	str2float@number^(0+128)
  8170                           
  8171                           ;UART.c: 33:             number += digit - '0';
  8172     178F  086F               	movf	str2float@digit^(0+128),w
  8173     1790  3ED0               	addlw	208
  8174     1791  00A0               	movwf	___xxtofl@val^(0+128)
  8175     1792  30FF               	movlw	255
  8176     1793  1803               	skipnc
  8177     1794  3000               	movlw	0
  8178     1795  00A1               	movwf	(___xxtofl@val^(0+128)+1)
  8179     1796  01A2               	clrf	(___xxtofl@val+2)^(0+128)
  8180     1797  01A3               	clrf	(___xxtofl@val+3)^(0+128)
  8181     1798  3000               	movlw	0
  8182     1799  3196  26B0  3197   	fcall	___xxtofl
  8183     179C  0021               	movlb	1	; select bank1
  8184     179D  0823               	movf	(?___xxtofl+3)^(0+128),w
  8185     179E  00B1               	movwf	(___fladd@b+3)^(0+128)
  8186     179F  0822               	movf	(?___xxtofl+2)^(0+128),w
  8187     17A0  00B0               	movwf	(___fladd@b+2)^(0+128)
  8188     17A1  0821               	movf	(?___xxtofl+1)^(0+128),w
  8189     17A2  00AF               	movwf	(___fladd@b+1)^(0+128)
  8190     17A3  0820               	movf	?___xxtofl^(0+128),w
  8191     17A4  00AE               	movwf	___fladd@b^(0+128)
  8192     17A5  086E               	movf	(str2float@number+3)^(0+128),w
  8193     17A6  00B5               	movwf	(___fladd@a+3)^(0+128)
  8194     17A7  086D               	movf	(str2float@number+2)^(0+128),w
  8195     17A8  00B4               	movwf	(___fladd@a+2)^(0+128)
  8196     17A9  086C               	movf	(str2float@number+1)^(0+128),w
  8197     17AA  00B3               	movwf	(___fladd@a+1)^(0+128)
  8198     17AB  086B               	movf	str2float@number^(0+128),w
  8199     17AC  00B2               	movwf	___fladd@a^(0+128)
  8200     17AD  3185  2504  3197   	fcall	___fladd
  8201     17B0  0021               	movlb	1	; select bank1
  8202     17B1  0831               	movf	(?___fladd+3)^(0+128),w
  8203     17B2  00EE               	movwf	(str2float@number+3)^(0+128)
  8204     17B3  0830               	movf	(?___fladd+2)^(0+128),w
  8205     17B4  00ED               	movwf	(str2float@number+2)^(0+128)
  8206     17B5  082F               	movf	(?___fladd+1)^(0+128),w
  8207     17B6  00EC               	movwf	(str2float@number+1)^(0+128)
  8208     17B7  082E               	movf	?___fladd^(0+128),w
  8209     17B8  00EB               	movwf	str2float@number^(0+128)
  8210     17B9                     l5893:
  8211                           
  8212                           ;UART.c: 34:             multiplier++;
  8213     17B9  3001               	movlw	1
  8214     17BA  07E9               	addwf	str2float@multiplier^(0+128),f
  8215                           
  8216                           ;UART.c: 35:         } else if (digit == ',' || digit == '.') {
  8217     17BB  2F5F               	goto	l5883
  8218     17BC                     l5895:
  8219     17BC  302C               	movlw	44
  8220     17BD  066F               	xorwf	str2float@digit^(0+128),w
  8221     17BE  1903               	btfsc	3,2
  8222     17BF  2FC1               	goto	u7211
  8223     17C0  2FC2               	goto	u7210
  8224     17C1                     u7211:
  8225     17C1  2FC8               	goto	l859
  8226     17C2                     u7210:
  8227     17C2                     l5897:
  8228     17C2  302E               	movlw	46
  8229     17C3  066F               	xorwf	str2float@digit^(0+128),w
  8230     17C4  1D03               	btfss	3,2
  8231     17C5  2FC7               	goto	u7221
  8232     17C6  2FC8               	goto	u7220
  8233     17C7                     u7221:
  8234     17C7  2FCC               	goto	l5901
  8235     17C8                     u7220:
  8236     17C8                     l859:
  8237                           
  8238                           ;UART.c: 36:             decimal_separator = 1;
  8239     17C8  3001               	movlw	1
  8240     17C9  00E8               	movwf	str2float@decimal_separator^(0+128)
  8241     17CA                     l5899:
  8242                           
  8243                           ;UART.c: 37:             multiplier = 0;
  8244     17CA  01E9               	clrf	str2float@multiplier^(0+128)
  8245                           
  8246                           ;UART.c: 38:         } else {
  8247     17CB  2F5F               	goto	l5883
  8248     17CC                     l5901:
  8249                           
  8250                           ;UART.c: 43:     for (uint8_t i = 0; decimal_separator && i < multiplier; i++) {
  8251     17CC  01EA               	clrf	str2float@i^(0+128)
  8252     17CD  2FEC               	goto	l5907
  8253     17CE                     l5903:
  8254                           
  8255                           ;UART.c: 44:         number /= 10;
  8256     17CE  3041               	movlw	65
  8257     17CF  00A3               	movwf	(___fldiv@a+3)^(0+128)
  8258     17D0  3020               	movlw	32
  8259     17D1  00A2               	movwf	(___fldiv@a+2)^(0+128)
  8260     17D2  3000               	movlw	0
  8261     17D3  00A1               	movwf	(___fldiv@a+1)^(0+128)
  8262     17D4  3000               	movlw	0
  8263     17D5  00A0               	movwf	___fldiv@a^(0+128)
  8264     17D6  086E               	movf	(str2float@number+3)^(0+128),w
  8265     17D7  00A7               	movwf	(___fldiv@b+3)^(0+128)
  8266     17D8  086D               	movf	(str2float@number+2)^(0+128),w
  8267     17D9  00A6               	movwf	(___fldiv@b+2)^(0+128)
  8268     17DA  086C               	movf	(str2float@number+1)^(0+128),w
  8269     17DB  00A5               	movwf	(___fldiv@b+1)^(0+128)
  8270     17DC  086B               	movf	str2float@number^(0+128),w
  8271     17DD  00A4               	movwf	___fldiv@b^(0+128)
  8272     17DE  318C  2450  3197   	fcall	___fldiv
  8273     17E1  0021               	movlb	1	; select bank1
  8274     17E2  0823               	movf	(?___fldiv+3)^(0+128),w
  8275     17E3  00EE               	movwf	(str2float@number+3)^(0+128)
  8276     17E4  0822               	movf	(?___fldiv+2)^(0+128),w
  8277     17E5  00ED               	movwf	(str2float@number+2)^(0+128)
  8278     17E6  0821               	movf	(?___fldiv+1)^(0+128),w
  8279     17E7  00EC               	movwf	(str2float@number+1)^(0+128)
  8280     17E8  0820               	movf	?___fldiv^(0+128),w
  8281     17E9  00EB               	movwf	str2float@number^(0+128)
  8282     17EA                     l5905:
  8283                           
  8284                           ;UART.c: 45:     }
  8285     17EA  3001               	movlw	1
  8286     17EB  07EA               	addwf	str2float@i^(0+128),f
  8287     17EC                     l5907:
  8288     17EC  0868               	movf	str2float@decimal_separator^(0+128),w
  8289     17ED  1903               	btfsc	3,2
  8290     17EE  2FF0               	goto	u7231
  8291     17EF  2FF1               	goto	u7230
  8292     17F0                     u7231:
  8293     17F0  2FF7               	goto	l5911
  8294     17F1                     u7230:
  8295     17F1                     l5909:
  8296     17F1  0869               	movf	str2float@multiplier^(0+128),w
  8297     17F2  026A               	subwf	str2float@i^(0+128),w
  8298     17F3  1C03               	skipc
  8299     17F4  2FF6               	goto	u7241
  8300     17F5  2FF7               	goto	u7240
  8301     17F6                     u7241:
  8302     17F6  2FCE               	goto	l5903
  8303     17F7                     u7240:
  8304     17F7                     l5911:
  8305                           
  8306                           ;UART.c: 46:     return number;
  8307     17F7  086E               	movf	(str2float@number+3)^(0+128),w
  8308     17F8  00E7               	movwf	(?_str2float+3)^(0+128)
  8309     17F9  086D               	movf	(str2float@number+2)^(0+128),w
  8310     17FA  00E6               	movwf	(?_str2float+2)^(0+128)
  8311     17FB  086C               	movf	(str2float@number+1)^(0+128),w
  8312     17FC  00E5               	movwf	(?_str2float+1)^(0+128)
  8313     17FD  086B               	movf	str2float@number^(0+128),w
  8314     17FE  00E4               	movwf	?_str2float^(0+128)
  8315     17FF                     l868:
  8316     17FF  0008               	return
  8317     1800                     __end_of_str2float:
  8318                           
  8319                           	psect	text3
  8320     0C50                     __ptext3:	
  8321 ;; *************** function ___fldiv *****************
  8322 ;; Defined at:
  8323 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\sprcdiv.c"
  8324 ;; Parameters:    Size  Location     Type
  8325 ;;  a               4    0[BANK1 ] float 
  8326 ;;  b               4    4[BANK1 ] float 
  8327 ;; Auto vars:     Size  Location     Type
  8328 ;;  grs             4   20[BANK1 ] unsigned long 
  8329 ;;  rem             4   13[BANK1 ] unsigned long 
  8330 ;;  new_exp         2   18[BANK1 ] short 
  8331 ;;  aexp            1   25[BANK1 ] unsigned char 
  8332 ;;  bexp            1   24[BANK1 ] unsigned char 
  8333 ;;  sign            1   17[BANK1 ] unsigned char 
  8334 ;; Return value:  Size  Location     Type
  8335 ;;                  4    0[BANK1 ] unsigned char 
  8336 ;; Registers used:
  8337 ;;		wreg, status,2, status,0
  8338 ;; Tracked objects:
  8339 ;;		On entry : 0/0
  8340 ;;		On exit  : 0/0
  8341 ;;		Unchanged: 0/0
  8342 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8343 ;;      Params:         0       0       8       0       0       0       0       0       0       0       0       0       
      +0       0
  8344 ;;      Locals:         0       0      13       0       0       0       0       0       0       0       0       0       
      +0       0
  8345 ;;      Temps:          0       0       5       0       0       0       0       0       0       0       0       0       
      +0       0
  8346 ;;      Totals:         0       0      26       0       0       0       0       0       0       0       0       0       
      +0       0
  8347 ;;Total ram usage:       26 bytes
  8348 ;; Hardware stack levels used: 1
  8349 ;; Hardware stack levels required when called: 5
  8350 ;; This function calls:
  8351 ;;		Nothing
  8352 ;; This function is called by:
  8353 ;;		_str2float
  8354 ;; This function uses a non-reentrant model
  8355 ;;
  8356                           
  8357     0C50                     ___fldiv:	
  8358                           ;psect for function ___fldiv
  8359                           
  8360     0C50                     l5139:	
  8361                           ;incstack = 0
  8362                           ; Regs used in ___fldiv: [wreg+status,2+status,0]
  8363                           
  8364     0C50  0021               	movlb	1	; select bank1
  8365     0C51  0827               	movf	(___fldiv@b^(0+128)+3),w
  8366     0C52  3980               	andlw	128
  8367     0C53  00B1               	movwf	___fldiv@sign^(0+128)
  8368     0C54                     l5141:
  8369     0C54  3527               	lslf	(___fldiv@b^(0+128)+3),w
  8370     0C55  00B8               	movwf	___fldiv@bexp^(0+128)
  8371     0C56                     l5143:
  8372     0C56  1FA6               	btfss	(___fldiv@b^(0+128)+2),7
  8373     0C57  2C59               	goto	u5911
  8374     0C58  2C5A               	goto	u5910
  8375     0C59                     u5911:
  8376     0C59  2C5B               	goto	l5147
  8377     0C5A                     u5910:
  8378     0C5A                     l5145:
  8379     0C5A  1438               	bsf	___fldiv@bexp^(0+128),0
  8380     0C5B                     l5147:
  8381     0C5B  0838               	movf	___fldiv@bexp^(0+128),w
  8382     0C5C  1903               	btfsc	3,2
  8383     0C5D  2C5F               	goto	u5921
  8384     0C5E  2C60               	goto	u5920
  8385     0C5F                     u5921:
  8386     0C5F  2C70               	goto	l5157
  8387     0C60                     u5920:
  8388     0C60                     l5149:
  8389     0C60  0A38               	incf	___fldiv@bexp^(0+128),w
  8390     0C61  1D03               	btfss	3,2
  8391     0C62  2C64               	goto	u5931
  8392     0C63  2C65               	goto	u5930
  8393     0C64                     u5931:
  8394     0C64  2C6D               	goto	l5153
  8395     0C65                     u5930:
  8396     0C65                     l5151:
  8397     0C65  3000               	movlw	0
  8398     0C66  00A7               	movwf	(___fldiv@b+3)^(0+128)
  8399     0C67  3000               	movlw	0
  8400     0C68  00A6               	movwf	(___fldiv@b+2)^(0+128)
  8401     0C69  3000               	movlw	0
  8402     0C6A  00A5               	movwf	(___fldiv@b+1)^(0+128)
  8403     0C6B  3000               	movlw	0
  8404     0C6C  00A4               	movwf	___fldiv@b^(0+128)
  8405     0C6D                     l5153:
  8406     0C6D  17A6               	bsf	(___fldiv@b^(0+128)+2),7
  8407     0C6E                     l5155:
  8408     0C6E  01A7               	clrf	(___fldiv@b^(0+128)+3)
  8409     0C6F  2C78               	goto	l5159
  8410     0C70                     l5157:
  8411     0C70  3000               	movlw	0
  8412     0C71  00A7               	movwf	(___fldiv@b+3)^(0+128)
  8413     0C72  3000               	movlw	0
  8414     0C73  00A6               	movwf	(___fldiv@b+2)^(0+128)
  8415     0C74  3000               	movlw	0
  8416     0C75  00A5               	movwf	(___fldiv@b+1)^(0+128)
  8417     0C76  3000               	movlw	0
  8418     0C77  00A4               	movwf	___fldiv@b^(0+128)
  8419     0C78                     l5159:
  8420     0C78  0823               	movf	(___fldiv@a^(0+128)+3),w
  8421     0C79  3980               	andlw	128
  8422     0C7A  06B1               	xorwf	___fldiv@sign^(0+128),f
  8423     0C7B                     l5161:
  8424     0C7B  3523               	lslf	(___fldiv@a^(0+128)+3),w
  8425     0C7C  00B9               	movwf	___fldiv@aexp^(0+128)
  8426     0C7D                     l5163:
  8427     0C7D  1FA2               	btfss	(___fldiv@a^(0+128)+2),7
  8428     0C7E  2C80               	goto	u5941
  8429     0C7F  2C81               	goto	u5940
  8430     0C80                     u5941:
  8431     0C80  2C82               	goto	l5167
  8432     0C81                     u5940:
  8433     0C81                     l5165:
  8434     0C81  1439               	bsf	___fldiv@aexp^(0+128),0
  8435     0C82                     l5167:
  8436     0C82  0839               	movf	___fldiv@aexp^(0+128),w
  8437     0C83  1903               	btfsc	3,2
  8438     0C84  2C86               	goto	u5951
  8439     0C85  2C87               	goto	u5950
  8440     0C86                     u5951:
  8441     0C86  2C97               	goto	l5177
  8442     0C87                     u5950:
  8443     0C87                     l5169:
  8444     0C87  0A39               	incf	___fldiv@aexp^(0+128),w
  8445     0C88  1D03               	btfss	3,2
  8446     0C89  2C8B               	goto	u5961
  8447     0C8A  2C8C               	goto	u5960
  8448     0C8B                     u5961:
  8449     0C8B  2C94               	goto	l5173
  8450     0C8C                     u5960:
  8451     0C8C                     l5171:
  8452     0C8C  3000               	movlw	0
  8453     0C8D  00A3               	movwf	(___fldiv@a+3)^(0+128)
  8454     0C8E  3000               	movlw	0
  8455     0C8F  00A2               	movwf	(___fldiv@a+2)^(0+128)
  8456     0C90  3000               	movlw	0
  8457     0C91  00A1               	movwf	(___fldiv@a+1)^(0+128)
  8458     0C92  3000               	movlw	0
  8459     0C93  00A0               	movwf	___fldiv@a^(0+128)
  8460     0C94                     l5173:
  8461     0C94  17A2               	bsf	(___fldiv@a^(0+128)+2),7
  8462     0C95                     l5175:
  8463     0C95  01A3               	clrf	(___fldiv@a^(0+128)+3)
  8464     0C96  2C9F               	goto	l1522
  8465     0C97                     l5177:
  8466     0C97  3000               	movlw	0
  8467     0C98  00A3               	movwf	(___fldiv@a+3)^(0+128)
  8468     0C99  3000               	movlw	0
  8469     0C9A  00A2               	movwf	(___fldiv@a+2)^(0+128)
  8470     0C9B  3000               	movlw	0
  8471     0C9C  00A1               	movwf	(___fldiv@a+1)^(0+128)
  8472     0C9D  3000               	movlw	0
  8473     0C9E  00A0               	movwf	___fldiv@a^(0+128)
  8474     0C9F                     l1522:
  8475     0C9F  0823               	movf	(___fldiv@a+3)^(0+128),w
  8476     0CA0  0422               	iorwf	(___fldiv@a+2)^(0+128),w
  8477     0CA1  0421               	iorwf	(___fldiv@a+1)^(0+128),w
  8478     0CA2  0420               	iorwf	___fldiv@a^(0+128),w
  8479     0CA3  1D03               	skipz
  8480     0CA4  2CA6               	goto	u5971
  8481     0CA5  2CA7               	goto	u5970
  8482     0CA6                     u5971:
  8483     0CA6  2CBE               	goto	l5187
  8484     0CA7                     u5970:
  8485     0CA7                     l5179:
  8486     0CA7  3000               	movlw	0
  8487     0CA8  00A7               	movwf	(___fldiv@b+3)^(0+128)
  8488     0CA9  3000               	movlw	0
  8489     0CAA  00A6               	movwf	(___fldiv@b+2)^(0+128)
  8490     0CAB  3000               	movlw	0
  8491     0CAC  00A5               	movwf	(___fldiv@b+1)^(0+128)
  8492     0CAD  3000               	movlw	0
  8493     0CAE  00A4               	movwf	___fldiv@b^(0+128)
  8494     0CAF  3080               	movlw	128
  8495     0CB0  04A6               	iorwf	(___fldiv@b^(0+128)+2),f
  8496     0CB1  307F               	movlw	127
  8497     0CB2  04A7               	iorwf	((___fldiv@b+1)^(0+128)+2),f
  8498     0CB3                     l5181:
  8499     0CB3  0831               	movf	___fldiv@sign^(0+128),w
  8500     0CB4  04A7               	iorwf	(___fldiv@b^(0+128)+3),f
  8501     0CB5                     l5183:
  8502     0CB5  0827               	movf	(___fldiv@b+3)^(0+128),w
  8503     0CB6  00A3               	movwf	(?___fldiv+3)^(0+128)
  8504     0CB7  0826               	movf	(___fldiv@b+2)^(0+128),w
  8505     0CB8  00A2               	movwf	(?___fldiv+2)^(0+128)
  8506     0CB9  0825               	movf	(___fldiv@b+1)^(0+128),w
  8507     0CBA  00A1               	movwf	(?___fldiv+1)^(0+128)
  8508     0CBB  0824               	movf	___fldiv@b^(0+128),w
  8509     0CBC  00A0               	movwf	?___fldiv^(0+128)
  8510     0CBD  2DF3               	goto	l1524
  8511     0CBE                     l5187:
  8512     0CBE  0838               	movf	___fldiv@bexp^(0+128),w
  8513     0CBF  1D03               	btfss	3,2
  8514     0CC0  2CC2               	goto	u5981
  8515     0CC1  2CC3               	goto	u5980
  8516     0CC2                     u5981:
  8517     0CC2  2CCC               	goto	l5193
  8518     0CC3                     u5980:
  8519     0CC3                     l5189:
  8520     0CC3  3000               	movlw	0
  8521     0CC4  00A3               	movwf	(?___fldiv+3)^(0+128)
  8522     0CC5  3000               	movlw	0
  8523     0CC6  00A2               	movwf	(?___fldiv+2)^(0+128)
  8524     0CC7  3000               	movlw	0
  8525     0CC8  00A1               	movwf	(?___fldiv+1)^(0+128)
  8526     0CC9  3000               	movlw	0
  8527     0CCA  00A0               	movwf	?___fldiv^(0+128)
  8528     0CCB  2DF3               	goto	l1524
  8529     0CCC                     l5193:
  8530     0CCC  0838               	movf	___fldiv@bexp^(0+128),w
  8531     0CCD  00A8               	movwf	??___fldiv^(0+128)
  8532     0CCE  01A9               	clrf	(??___fldiv^(0+128)+1)
  8533     0CCF  0829               	movf	(??___fldiv+1)^(0+128),w
  8534     0CD0  00AB               	movwf	((??___fldiv+2)^(0+128)+1)
  8535     0CD1  0839               	movf	___fldiv@aexp^(0+128),w
  8536     0CD2  0228               	subwf	??___fldiv^(0+128),w
  8537     0CD3  00AA               	movwf	(??___fldiv+2)^(0+128)
  8538     0CD4  1C03               	skipc
  8539     0CD5  03AB               	decf	((??___fldiv+2)^(0+128)+1),f
  8540     0CD6  082A               	movf	(??___fldiv+2)^(0+128),w
  8541     0CD7  3E7F               	addlw	127
  8542     0CD8  00B2               	movwf	___fldiv@new_exp^(0+128)
  8543     0CD9  3000               	movlw	0
  8544     0CDA  3D2B               	addwfc	(??___fldiv+3)^(0+128),w
  8545     0CDB  00B3               	movwf	(___fldiv@new_exp+1)^(0+128)
  8546     0CDC                     l5195:
  8547     0CDC  0827               	movf	(___fldiv@b+3)^(0+128),w
  8548     0CDD  00B0               	movwf	(___fldiv@rem+3)^(0+128)
  8549     0CDE  0826               	movf	(___fldiv@b+2)^(0+128),w
  8550     0CDF  00AF               	movwf	(___fldiv@rem+2)^(0+128)
  8551     0CE0  0825               	movf	(___fldiv@b+1)^(0+128),w
  8552     0CE1  00AE               	movwf	(___fldiv@rem+1)^(0+128)
  8553     0CE2  0824               	movf	___fldiv@b^(0+128),w
  8554     0CE3  00AD               	movwf	___fldiv@rem^(0+128)
  8555     0CE4                     l5197:
  8556     0CE4  3000               	movlw	0
  8557     0CE5  00A7               	movwf	(___fldiv@b+3)^(0+128)
  8558     0CE6  3000               	movlw	0
  8559     0CE7  00A6               	movwf	(___fldiv@b+2)^(0+128)
  8560     0CE8  3000               	movlw	0
  8561     0CE9  00A5               	movwf	(___fldiv@b+1)^(0+128)
  8562     0CEA  3000               	movlw	0
  8563     0CEB  00A4               	movwf	___fldiv@b^(0+128)
  8564     0CEC                     l5199:
  8565     0CEC  3000               	movlw	0
  8566     0CED  00B7               	movwf	(___fldiv@grs+3)^(0+128)
  8567     0CEE  3000               	movlw	0
  8568     0CEF  00B6               	movwf	(___fldiv@grs+2)^(0+128)
  8569     0CF0  3000               	movlw	0
  8570     0CF1  00B5               	movwf	(___fldiv@grs+1)^(0+128)
  8571     0CF2  3000               	movlw	0
  8572     0CF3  00B4               	movwf	___fldiv@grs^(0+128)
  8573     0CF4                     l5201:
  8574     0CF4  01B9               	clrf	___fldiv@aexp^(0+128)
  8575     0CF5  2D32               	goto	l5221
  8576     0CF6                     l5203:
  8577     0CF6  0839               	movf	___fldiv@aexp^(0+128),w
  8578     0CF7  1903               	btfsc	3,2
  8579     0CF8  2CFA               	goto	u5991
  8580     0CF9  2CFB               	goto	u5990
  8581     0CFA                     u5991:
  8582     0CFA  2D15               	goto	l5213
  8583     0CFB                     u5990:
  8584     0CFB                     l5205:
  8585     0CFB  3001               	movlw	1
  8586     0CFC                     u6005:
  8587     0CFC  35AD               	lslf	___fldiv@rem^(0+128),f
  8588     0CFD  0DAE               	rlf	(___fldiv@rem+1)^(0+128),f
  8589     0CFE  0DAF               	rlf	(___fldiv@rem+2)^(0+128),f
  8590     0CFF  0DB0               	rlf	(___fldiv@rem+3)^(0+128),f
  8591     0D00  0B89               	decfsz	9,f
  8592     0D01  2CFC               	goto	u6005
  8593     0D02  3001               	movlw	1
  8594     0D03                     u6015:
  8595     0D03  35A4               	lslf	___fldiv@b^(0+128),f
  8596     0D04  0DA5               	rlf	(___fldiv@b+1)^(0+128),f
  8597     0D05  0DA6               	rlf	(___fldiv@b+2)^(0+128),f
  8598     0D06  0DA7               	rlf	(___fldiv@b+3)^(0+128),f
  8599     0D07  0B89               	decfsz	9,f
  8600     0D08  2D03               	goto	u6015
  8601     0D09                     l5207:
  8602     0D09  1FB7               	btfss	(___fldiv@grs+3)^(0+128),7
  8603     0D0A  2D0C               	goto	u6021
  8604     0D0B  2D0D               	goto	u6020
  8605     0D0C                     u6021:
  8606     0D0C  2D0E               	goto	l5211
  8607     0D0D                     u6020:
  8608     0D0D                     l5209:
  8609     0D0D  1424               	bsf	___fldiv@b^(0+128),0
  8610     0D0E                     l5211:
  8611     0D0E  3001               	movlw	1
  8612     0D0F                     u6035:
  8613     0D0F  35B4               	lslf	___fldiv@grs^(0+128),f
  8614     0D10  0DB5               	rlf	(___fldiv@grs+1)^(0+128),f
  8615     0D11  0DB6               	rlf	(___fldiv@grs+2)^(0+128),f
  8616     0D12  0DB7               	rlf	(___fldiv@grs+3)^(0+128),f
  8617     0D13  0B89               	decfsz	9,f
  8618     0D14  2D0F               	goto	u6035
  8619     0D15                     l5213:
  8620     0D15  0823               	movf	(___fldiv@a+3)^(0+128),w
  8621     0D16  0230               	subwf	(___fldiv@rem+3)^(0+128),w
  8622     0D17  1D03               	skipz
  8623     0D18  2D23               	goto	u6045
  8624     0D19  0822               	movf	(___fldiv@a+2)^(0+128),w
  8625     0D1A  022F               	subwf	(___fldiv@rem+2)^(0+128),w
  8626     0D1B  1D03               	skipz
  8627     0D1C  2D23               	goto	u6045
  8628     0D1D  0821               	movf	(___fldiv@a+1)^(0+128),w
  8629     0D1E  022E               	subwf	(___fldiv@rem+1)^(0+128),w
  8630     0D1F  1D03               	skipz
  8631     0D20  2D23               	goto	u6045
  8632     0D21  0820               	movf	___fldiv@a^(0+128),w
  8633     0D22  022D               	subwf	___fldiv@rem^(0+128),w
  8634     0D23                     u6045:
  8635     0D23  1C03               	skipc
  8636     0D24  2D26               	goto	u6041
  8637     0D25  2D27               	goto	u6040
  8638     0D26                     u6041:
  8639     0D26  2D30               	goto	l5219
  8640     0D27                     u6040:
  8641     0D27                     l5215:
  8642     0D27  1737               	bsf	(___fldiv@grs^(0+128)+3),6
  8643     0D28                     l5217:
  8644     0D28  0820               	movf	___fldiv@a^(0+128),w
  8645     0D29  02AD               	subwf	___fldiv@rem^(0+128),f
  8646     0D2A  0821               	movf	(___fldiv@a+1)^(0+128),w
  8647     0D2B  3BAE               	subwfb	(___fldiv@rem+1)^(0+128),f
  8648     0D2C  0822               	movf	(___fldiv@a+2)^(0+128),w
  8649     0D2D  3BAF               	subwfb	(___fldiv@rem+2)^(0+128),f
  8650     0D2E  0823               	movf	(___fldiv@a+3)^(0+128),w
  8651     0D2F  3BB0               	subwfb	(___fldiv@rem+3)^(0+128),f
  8652     0D30                     l5219:
  8653     0D30  3001               	movlw	1
  8654     0D31  07B9               	addwf	___fldiv@aexp^(0+128),f
  8655     0D32                     l5221:
  8656     0D32  301A               	movlw	26
  8657     0D33  0239               	subwf	___fldiv@aexp^(0+128),w
  8658     0D34  1C03               	skipc
  8659     0D35  2D37               	goto	u6051
  8660     0D36  2D38               	goto	u6050
  8661     0D37                     u6051:
  8662     0D37  2CF6               	goto	l5203
  8663     0D38                     u6050:
  8664     0D38                     l5223:
  8665     0D38  0830               	movf	(___fldiv@rem+3)^(0+128),w
  8666     0D39  042F               	iorwf	(___fldiv@rem+2)^(0+128),w
  8667     0D3A  042E               	iorwf	(___fldiv@rem+1)^(0+128),w
  8668     0D3B  042D               	iorwf	___fldiv@rem^(0+128),w
  8669     0D3C  1903               	skipnz
  8670     0D3D  2D3F               	goto	u6061
  8671     0D3E  2D40               	goto	u6060
  8672     0D3F                     u6061:
  8673     0D3F  2D59               	goto	l5237
  8674     0D40                     u6060:
  8675     0D40                     l5225:
  8676     0D40  1434               	bsf	___fldiv@grs^(0+128),0
  8677     0D41  2D59               	goto	l5237
  8678     0D42                     l5227:
  8679     0D42  3001               	movlw	1
  8680     0D43                     u6075:
  8681     0D43  35A4               	lslf	___fldiv@b^(0+128),f
  8682     0D44  0DA5               	rlf	(___fldiv@b+1)^(0+128),f
  8683     0D45  0DA6               	rlf	(___fldiv@b+2)^(0+128),f
  8684     0D46  0DA7               	rlf	(___fldiv@b+3)^(0+128),f
  8685     0D47  0B89               	decfsz	9,f
  8686     0D48  2D43               	goto	u6075
  8687     0D49                     l5229:
  8688     0D49  1FB7               	btfss	(___fldiv@grs+3)^(0+128),7
  8689     0D4A  2D4C               	goto	u6081
  8690     0D4B  2D4D               	goto	u6080
  8691     0D4C                     u6081:
  8692     0D4C  2D4E               	goto	l5233
  8693     0D4D                     u6080:
  8694     0D4D                     l5231:
  8695     0D4D  1424               	bsf	___fldiv@b^(0+128),0
  8696     0D4E                     l5233:
  8697     0D4E  3001               	movlw	1
  8698     0D4F                     u6095:
  8699     0D4F  35B4               	lslf	___fldiv@grs^(0+128),f
  8700     0D50  0DB5               	rlf	(___fldiv@grs+1)^(0+128),f
  8701     0D51  0DB6               	rlf	(___fldiv@grs+2)^(0+128),f
  8702     0D52  0DB7               	rlf	(___fldiv@grs+3)^(0+128),f
  8703     0D53  0B89               	decfsz	9,f
  8704     0D54  2D4F               	goto	u6095
  8705     0D55                     l5235:
  8706     0D55  30FF               	movlw	255
  8707     0D56  07B2               	addwf	___fldiv@new_exp^(0+128),f
  8708     0D57  30FF               	movlw	255
  8709     0D58  3DB3               	addwfc	(___fldiv@new_exp+1)^(0+128),f
  8710     0D59                     l5237:
  8711     0D59  1FA6               	btfss	(___fldiv@b+2)^(0+128),7
  8712     0D5A  2D5C               	goto	u6101
  8713     0D5B  2D5D               	goto	u6100
  8714     0D5C                     u6101:
  8715     0D5C  2D42               	goto	l5227
  8716     0D5D                     u6100:
  8717     0D5D                     l5239:
  8718     0D5D  01B9               	clrf	___fldiv@aexp^(0+128)
  8719     0D5E                     l5241:
  8720     0D5E  1FB7               	btfss	(___fldiv@grs+3)^(0+128),7
  8721     0D5F  2D61               	goto	u6111
  8722     0D60  2D62               	goto	u6110
  8723     0D61                     u6111:
  8724     0D61  2D7E               	goto	l5249
  8725     0D62                     u6110:
  8726     0D62                     l5243:
  8727     0D62  30FF               	movlw	255
  8728     0D63  0534               	andwf	___fldiv@grs^(0+128),w
  8729     0D64  00A8               	movwf	??___fldiv^(0+128)
  8730     0D65  30FF               	movlw	255
  8731     0D66  0535               	andwf	(___fldiv@grs+1)^(0+128),w
  8732     0D67  00A9               	movwf	(??___fldiv^(0+128)+1)
  8733     0D68  30FF               	movlw	255
  8734     0D69  0536               	andwf	(___fldiv@grs+2)^(0+128),w
  8735     0D6A  00AA               	movwf	(??___fldiv^(0+128)+2)
  8736     0D6B  307F               	movlw	127
  8737     0D6C  0537               	andwf	(___fldiv@grs+3)^(0+128),w
  8738     0D6D  00AB               	movwf	(??___fldiv^(0+128)+3)
  8739     0D6E  082B               	movf	(??___fldiv+3)^(0+128),w
  8740     0D6F  042A               	iorwf	(??___fldiv+2)^(0+128),w
  8741     0D70  0429               	iorwf	(??___fldiv+1)^(0+128),w
  8742     0D71  0428               	iorwf	??___fldiv^(0+128),w
  8743     0D72  1903               	skipnz
  8744     0D73  2D75               	goto	u6121
  8745     0D74  2D76               	goto	u6120
  8746     0D75                     u6121:
  8747     0D75  2D79               	goto	l1538
  8748     0D76                     u6120:
  8749     0D76                     l5245:
  8750     0D76  3001               	movlw	1
  8751     0D77  00B9               	movwf	___fldiv@aexp^(0+128)
  8752     0D78  2D7E               	goto	l5249
  8753     0D79                     l1538:
  8754     0D79  1C24               	btfss	___fldiv@b^(0+128),0
  8755     0D7A  2D7C               	goto	u6131
  8756     0D7B  2D7D               	goto	u6130
  8757     0D7C                     u6131:
  8758     0D7C  2D7E               	goto	l5249
  8759     0D7D                     u6130:
  8760     0D7D  2D76               	goto	l5245
  8761     0D7E                     l5249:
  8762     0D7E  0839               	movf	___fldiv@aexp^(0+128),w
  8763     0D7F  1903               	btfsc	3,2
  8764     0D80  2D82               	goto	u6141
  8765     0D81  2D83               	goto	u6140
  8766     0D82                     u6141:
  8767     0D82  2DA9               	goto	l5259
  8768     0D83                     u6140:
  8769     0D83                     l5251:
  8770     0D83  3001               	movlw	1
  8771     0D84  07A4               	addwf	___fldiv@b^(0+128),f
  8772     0D85  3000               	movlw	0
  8773     0D86  3DA5               	addwfc	(___fldiv@b+1)^(0+128),f
  8774     0D87  3DA6               	addwfc	(___fldiv@b+2)^(0+128),f
  8775     0D88  3DA7               	addwfc	(___fldiv@b+3)^(0+128),f
  8776     0D89                     l5253:
  8777     0D89  1C27               	btfss	(___fldiv@b+3)^(0+128),0
  8778     0D8A  2D8C               	goto	u6151
  8779     0D8B  2D8D               	goto	u6150
  8780     0D8C                     u6151:
  8781     0D8C  2DA9               	goto	l5259
  8782     0D8D                     u6150:
  8783     0D8D                     l5255:
  8784     0D8D  0824               	movf	___fldiv@b^(0+128),w
  8785     0D8E  00A8               	movwf	??___fldiv^(0+128)
  8786     0D8F  0825               	movf	(___fldiv@b+1)^(0+128),w
  8787     0D90  00A9               	movwf	(??___fldiv^(0+128)+1)
  8788     0D91  0826               	movf	(___fldiv@b+2)^(0+128),w
  8789     0D92  00AA               	movwf	(??___fldiv^(0+128)+2)
  8790     0D93  0827               	movf	(___fldiv@b+3)^(0+128),w
  8791     0D94  00AB               	movwf	(??___fldiv^(0+128)+3)
  8792     0D95  3001               	movlw	1
  8793     0D96  00AC               	movwf	(??___fldiv+4)^(0+128)
  8794     0D97                     u6165:
  8795     0D97  37AB               	asrf	(??___fldiv^(0+128)+3),f
  8796     0D98  0CAA               	rrf	(??___fldiv^(0+128)+2),f
  8797     0D99  0CA9               	rrf	(??___fldiv^(0+128)+1),f
  8798     0D9A  0CA8               	rrf	??___fldiv^(0+128),f
  8799     0D9B                     u6160:
  8800     0D9B  0BAC               	decfsz	(??___fldiv+4)^(0+128),f
  8801     0D9C  2D97               	goto	u6165
  8802     0D9D  082B               	movf	(??___fldiv+3)^(0+128),w
  8803     0D9E  00A7               	movwf	(___fldiv@b+3)^(0+128)
  8804     0D9F  082A               	movf	(??___fldiv+2)^(0+128),w
  8805     0DA0  00A6               	movwf	(___fldiv@b+2)^(0+128)
  8806     0DA1  0829               	movf	(??___fldiv+1)^(0+128),w
  8807     0DA2  00A5               	movwf	(___fldiv@b+1)^(0+128)
  8808     0DA3  0828               	movf	??___fldiv^(0+128),w
  8809     0DA4  00A4               	movwf	___fldiv@b^(0+128)
  8810     0DA5                     l5257:
  8811     0DA5  3001               	movlw	1
  8812     0DA6  07B2               	addwf	___fldiv@new_exp^(0+128),f
  8813     0DA7  3000               	movlw	0
  8814     0DA8  3DB3               	addwfc	(___fldiv@new_exp+1)^(0+128),f
  8815     0DA9                     l5259:
  8816     0DA9  0833               	movf	(___fldiv@new_exp+1)^(0+128),w
  8817     0DAA  3A80               	xorlw	128
  8818     0DAB  00A8               	movwf	??___fldiv^(0+128)
  8819     0DAC  3080               	movlw	128
  8820     0DAD  0228               	subwf	??___fldiv^(0+128),w
  8821     0DAE  1D03               	skipz
  8822     0DAF  2DB2               	goto	u6175
  8823     0DB0  30FF               	movlw	255
  8824     0DB1  0232               	subwf	___fldiv@new_exp^(0+128),w
  8825     0DB2                     u6175:
  8826     0DB2  1C03               	skipc
  8827     0DB3  2DB5               	goto	u6171
  8828     0DB4  2DB6               	goto	u6170
  8829     0DB5                     u6171:
  8830     0DB5  2DC3               	goto	l1543
  8831     0DB6                     u6170:
  8832     0DB6                     l5261:
  8833     0DB6  30FF               	movlw	255
  8834     0DB7  0021               	movlb	1	; select bank1
  8835     0DB8  00B2               	movwf	___fldiv@new_exp^(0+128)
  8836     0DB9  3000               	movlw	0
  8837     0DBA  00B3               	movwf	(___fldiv@new_exp^(0+128)+1)
  8838     0DBB  3000               	movlw	0
  8839     0DBC  00A7               	movwf	(___fldiv@b+3)^(0+128)
  8840     0DBD  3000               	movlw	0
  8841     0DBE  00A6               	movwf	(___fldiv@b+2)^(0+128)
  8842     0DBF  3000               	movlw	0
  8843     0DC0  00A5               	movwf	(___fldiv@b+1)^(0+128)
  8844     0DC1  3000               	movlw	0
  8845     0DC2  00A4               	movwf	___fldiv@b^(0+128)
  8846     0DC3                     l1543:
  8847     0DC3  0021               	movlb	1	; select bank1
  8848     0DC4  0833               	movf	(___fldiv@new_exp+1)^(0+128),w
  8849     0DC5  3A80               	xorlw	128
  8850     0DC6  00A8               	movwf	??___fldiv^(0+128)
  8851     0DC7  3080               	movlw	128
  8852     0DC8  0228               	subwf	??___fldiv^(0+128),w
  8853     0DC9  1D03               	skipz
  8854     0DCA  2DCD               	goto	u6185
  8855     0DCB  3001               	movlw	1
  8856     0DCC  0232               	subwf	___fldiv@new_exp^(0+128),w
  8857     0DCD                     u6185:
  8858     0DCD  1803               	skipnc
  8859     0DCE  2DD0               	goto	u6181
  8860     0DCF  2DD1               	goto	u6180
  8861     0DD0                     u6181:
  8862     0DD0  2DDD               	goto	l1544
  8863     0DD1                     u6180:
  8864     0DD1                     l5263:
  8865     0DD1  0021               	movlb	1	; select bank1
  8866     0DD2  01B2               	clrf	___fldiv@new_exp^(0+128)
  8867     0DD3  01B3               	clrf	(___fldiv@new_exp+1)^(0+128)
  8868     0DD4                     l5265:
  8869     0DD4  3000               	movlw	0
  8870     0DD5  00A7               	movwf	(___fldiv@b+3)^(0+128)
  8871     0DD6  3000               	movlw	0
  8872     0DD7  00A6               	movwf	(___fldiv@b+2)^(0+128)
  8873     0DD8  3000               	movlw	0
  8874     0DD9  00A5               	movwf	(___fldiv@b+1)^(0+128)
  8875     0DDA  3000               	movlw	0
  8876     0DDB  00A4               	movwf	___fldiv@b^(0+128)
  8877     0DDC                     l5267:
  8878     0DDC  01B1               	clrf	___fldiv@sign^(0+128)
  8879     0DDD                     l1544:
  8880     0DDD  0021               	movlb	1	; select bank1
  8881     0DDE  0832               	movf	___fldiv@new_exp^(0+128),w
  8882     0DDF  00B8               	movwf	___fldiv@bexp^(0+128)
  8883     0DE0                     l5269:
  8884     0DE0  1C38               	btfss	___fldiv@bexp^(0+128),0
  8885     0DE1  2DE3               	goto	u6191
  8886     0DE2  2DE4               	goto	u6190
  8887     0DE3                     u6191:
  8888     0DE3  2DE6               	goto	l5273
  8889     0DE4                     u6190:
  8890     0DE4                     l5271:
  8891     0DE4  17A6               	bsf	(___fldiv@b^(0+128)+2),7
  8892     0DE5  2DE8               	goto	l1546
  8893     0DE6                     l5273:
  8894     0DE6  307F               	movlw	127
  8895     0DE7  05A6               	andwf	(___fldiv@b^(0+128)+2),f
  8896     0DE8                     l1546:
  8897     0DE8  0838               	movf	___fldiv@bexp^(0+128),w
  8898     0DE9  00A8               	movwf	??___fldiv^(0+128)
  8899     0DEA  3001               	movlw	1
  8900     0DEB                     u6205:
  8901     0DEB  36A8               	lsrf	??___fldiv^(0+128),f
  8902     0DEC  0B89               	decfsz	9,f
  8903     0DED  2DEB               	goto	u6205
  8904     0DEE  0828               	movf	??___fldiv^(0+128),w
  8905     0DEF  00A7               	movwf	(___fldiv@b^(0+128)+3)
  8906     0DF0  0831               	movf	___fldiv@sign^(0+128),w
  8907     0DF1  04A7               	iorwf	(___fldiv@b^(0+128)+3),f
  8908     0DF2  2CB5               	goto	l5183
  8909     0DF3                     l1524:
  8910     0DF3  0008               	return
  8911     0DF4                     __end_of___fldiv:
  8912                           
  8913                           	psect	text4
  8914     1BC0                     __ptext4:	
  8915 ;; *************** function _setSetpoint *****************
  8916 ;; Defined at:
  8917 ;;		line 45 in file "controller.c"
  8918 ;; Parameters:    Size  Location     Type
  8919 ;;  new_setpoint    2   13[BANK1 ] unsigned short 
  8920 ;; Auto vars:     Size  Location     Type
  8921 ;;		None
  8922 ;; Return value:  Size  Location     Type
  8923 ;;                  1    wreg      void 
  8924 ;; Registers used:
  8925 ;;		wreg
  8926 ;; Tracked objects:
  8927 ;;		On entry : 0/0
  8928 ;;		On exit  : 0/0
  8929 ;;		Unchanged: 0/0
  8930 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8931 ;;      Params:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0
  8932 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8933 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8934 ;;      Totals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0
  8935 ;;Total ram usage:        2 bytes
  8936 ;; Hardware stack levels used: 1
  8937 ;; Hardware stack levels required when called: 5
  8938 ;; This function calls:
  8939 ;;		Nothing
  8940 ;; This function is called by:
  8941 ;;		_uartHandler
  8942 ;; This function uses a non-reentrant model
  8943 ;;
  8944                           
  8945     1BC0                     _setSetpoint:	
  8946                           ;psect for function _setSetpoint
  8947                           
  8948     1BC0                     l5999:	
  8949                           ;incstack = 0
  8950                           ; Regs used in _setSetpoint: [wreg]
  8951                           
  8952     1BC0  0021               	movlb	1	; select bank1
  8953     1BC1  082E               	movf	(setSetpoint@new_setpoint+1)^(0+128),w
  8954     1BC2  0020               	movlb	0	; select bank0
  8955     1BC3  00ED               	movwf	_setpoint+1
  8956     1BC4  0021               	movlb	1	; select bank1
  8957     1BC5  082D               	movf	setSetpoint@new_setpoint^(0+128),w
  8958     1BC6  0020               	movlb	0	; select bank0
  8959     1BC7  00EC               	movwf	_setpoint
  8960     1BC8                     l943:
  8961     1BC8  0008               	return
  8962     1BC9                     __end_of_setSetpoint:
  8963                           
  8964                           	psect	text5
  8965     1BDD                     __ptext5:	
  8966 ;; *************** function _setKp *****************
  8967 ;; Defined at:
  8968 ;;		line 47 in file "controller.c"
  8969 ;; Parameters:    Size  Location     Type
  8970 ;;  new_kp          4    0[BANK2 ] float 
  8971 ;; Auto vars:     Size  Location     Type
  8972 ;;		None
  8973 ;; Return value:  Size  Location     Type
  8974 ;;                  1    wreg      void 
  8975 ;; Registers used:
  8976 ;;		wreg
  8977 ;; Tracked objects:
  8978 ;;		On entry : 0/0
  8979 ;;		On exit  : 0/0
  8980 ;;		Unchanged: 0/0
  8981 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8982 ;;      Params:         0       0       0       4       0       0       0       0       0       0       0       0       
      +0       0
  8983 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8984 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8985 ;;      Totals:         0       0       0       4       0       0       0       0       0       0       0       0       
      +0       0
  8986 ;;Total ram usage:        4 bytes
  8987 ;; Hardware stack levels used: 1
  8988 ;; Hardware stack levels required when called: 5
  8989 ;; This function calls:
  8990 ;;		Nothing
  8991 ;; This function is called by:
  8992 ;;		_uartHandler
  8993 ;; This function uses a non-reentrant model
  8994 ;;
  8995                           
  8996     1BDD                     _setKp:	
  8997                           ;psect for function _setKp
  8998                           
  8999     1BDD                     l6001:	
  9000                           ;incstack = 0
  9001                           ; Regs used in _setKp: [wreg]
  9002                           
  9003     1BDD  0022               	movlb	2	; select bank2
  9004     1BDE  0853               	movf	(setKp@new_kp+3)^(0+256),w
  9005     1BDF  00EF               	movwf	(_kp+3)^(0+256)
  9006     1BE0  0852               	movf	(setKp@new_kp+2)^(0+256),w
  9007     1BE1  00EE               	movwf	(_kp+2)^(0+256)
  9008     1BE2  0851               	movf	(setKp@new_kp+1)^(0+256),w
  9009     1BE3  00ED               	movwf	(_kp+1)^(0+256)
  9010     1BE4  0850               	movf	setKp@new_kp^(0+256),w
  9011     1BE5  00EC               	movwf	_kp^(0+256)
  9012     1BE6                     l949:
  9013     1BE6  0008               	return
  9014     1BE7                     __end_of_setKp:
  9015                           
  9016                           	psect	text6
  9017     1BD3                     __ptext6:	
  9018 ;; *************** function _setKi *****************
  9019 ;; Defined at:
  9020 ;;		line 48 in file "controller.c"
  9021 ;; Parameters:    Size  Location     Type
  9022 ;;  new_ki          4    0[BANK2 ] float 
  9023 ;; Auto vars:     Size  Location     Type
  9024 ;;		None
  9025 ;; Return value:  Size  Location     Type
  9026 ;;                  1    wreg      void 
  9027 ;; Registers used:
  9028 ;;		wreg
  9029 ;; Tracked objects:
  9030 ;;		On entry : 0/0
  9031 ;;		On exit  : 0/0
  9032 ;;		Unchanged: 0/0
  9033 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9034 ;;      Params:         0       0       0       4       0       0       0       0       0       0       0       0       
      +0       0
  9035 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9036 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9037 ;;      Totals:         0       0       0       4       0       0       0       0       0       0       0       0       
      +0       0
  9038 ;;Total ram usage:        4 bytes
  9039 ;; Hardware stack levels used: 1
  9040 ;; Hardware stack levels required when called: 5
  9041 ;; This function calls:
  9042 ;;		Nothing
  9043 ;; This function is called by:
  9044 ;;		_uartHandler
  9045 ;; This function uses a non-reentrant model
  9046 ;;
  9047                           
  9048     1BD3                     _setKi:	
  9049                           ;psect for function _setKi
  9050                           
  9051     1BD3                     l6003:	
  9052                           ;incstack = 0
  9053                           ; Regs used in _setKi: [wreg]
  9054                           
  9055     1BD3  0022               	movlb	2	; select bank2
  9056     1BD4  0853               	movf	(setKi@new_ki+3)^(0+256),w
  9057     1BD5  00EB               	movwf	(_ki+3)^(0+256)
  9058     1BD6  0852               	movf	(setKi@new_ki+2)^(0+256),w
  9059     1BD7  00EA               	movwf	(_ki+2)^(0+256)
  9060     1BD8  0851               	movf	(setKi@new_ki+1)^(0+256),w
  9061     1BD9  00E9               	movwf	(_ki+1)^(0+256)
  9062     1BDA  0850               	movf	setKi@new_ki^(0+256),w
  9063     1BDB  00E8               	movwf	_ki^(0+256)
  9064     1BDC                     l952:
  9065     1BDC  0008               	return
  9066     1BDD                     __end_of_setKi:
  9067                           
  9068                           	psect	text7
  9069     1101                     __ptext7:	
  9070 ;; *************** function _readLine *****************
  9071 ;; Defined at:
  9072 ;;		line 50 in file "UART.c"
  9073 ;; Parameters:    Size  Location     Type
  9074 ;;		None
  9075 ;; Auto vars:     Size  Location     Type
  9076 ;;		None
  9077 ;; Return value:  Size  Location     Type
  9078 ;;                  1   72[BANK1 ] PTR unsigned char 
  9079 ;; Registers used:
  9080 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  9081 ;; Tracked objects:
  9082 ;;		On entry : 0/0
  9083 ;;		On exit  : 0/0
  9084 ;;		Unchanged: 0/0
  9085 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9086 ;;      Params:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0
  9087 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9088 ;;      Temps:          0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0
  9089 ;;      Totals:         0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0
  9090 ;;Total ram usage:        3 bytes
  9091 ;; Hardware stack levels used: 1
  9092 ;; Hardware stack levels required when called: 14
  9093 ;; This function calls:
  9094 ;;		_EUSART_IsRxReady
  9095 ;;		_EUSART_Read
  9096 ;;		_printf
  9097 ;; This function is called by:
  9098 ;;		_uartHandler
  9099 ;; This function uses a non-reentrant model
  9100 ;;
  9101                           
  9102     1101                     _readLine:	
  9103                           ;psect for function _readLine
  9104                           
  9105     1101                     l873:	
  9106                           ;incstack = 0
  9107                           ; Regs used in _readLine: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  9108                           ;UART.c: 51:     static uint8_t index = 0;;UART.c: 52:     while (1) {
  9109                           
  9110     1101                     l5915:
  9111                           
  9112                           ;UART.c: 53:         if (!EUSART_IsRxReady()) {
  9113     1101  319B  23B7  3191   	fcall	_EUSART_IsRxReady
  9114     1104  3A00               	xorlw	0
  9115     1105  1D03               	skipz
  9116     1106  2908               	goto	u7251
  9117     1107  2909               	goto	u7250
  9118     1108                     u7251:
  9119     1108  2913               	goto	l5923
  9120     1109                     u7250:
  9121     1109                     l5917:
  9122                           
  9123                           ;UART.c: 54:             line[index] = 0;
  9124     1109  0020               	movlb	0	; select bank0
  9125     110A  0865               	movf	readLine@index,w
  9126     110B  3EC0               	addlw	(low (_line| (0+256)))& (0+255)
  9127     110C  0086               	movwf	6
  9128     110D  3001               	movlw	1	; select bank3/4
  9129     110E  0087               	movwf	7
  9130     110F  0181               	clrf	1
  9131     1110                     l5919:
  9132                           
  9133                           ;UART.c: 55:             return line + index;
  9134     1110  0865               	movf	readLine@index,w
  9135     1111  3EC0               	addlw	(low (_line| (0+256)))& (0+255)
  9136     1112  2959               	goto	l875
  9137     1113                     l5923:
  9138                           
  9139                           ;UART.c: 57:         if (index >= 20 - 1) {
  9140     1113  3013               	movlw	19
  9141     1114  0020               	movlb	0	; select bank0
  9142     1115  0265               	subwf	readLine@index,w
  9143     1116  1C03               	skipc
  9144     1117  2919               	goto	u7261
  9145     1118  291A               	goto	u7260
  9146     1119                     u7261:
  9147     1119  2934               	goto	l5941
  9148     111A                     u7260:
  9149     111A  291E               	goto	l5929
  9150     111B                     l5927:
  9151                           
  9152                           ;UART.c: 59:                 EUSART_Read();
  9153     111B  319E  2618  3191   	fcall	_EUSART_Read
  9154     111E                     l5929:
  9155                           
  9156                           ;UART.c: 58:             while (EUSART_IsRxReady()) {
  9157     111E  319B  23B7  3191   	fcall	_EUSART_IsRxReady
  9158     1121  3A00               	xorlw	0
  9159     1122  1D03               	skipz
  9160     1123  2925               	goto	u7271
  9161     1124  2926               	goto	u7270
  9162     1125                     u7271:
  9163     1125  291B               	goto	l5927
  9164     1126                     u7270:
  9165     1126                     l5931:
  9166                           
  9167                           ;UART.c: 61:             printf("input buffer overflow\r\n");
  9168     1126  3065               	movlw	low (STR_2| (0+32768))
  9169     1127  0021               	movlb	1	; select bank1
  9170     1128  00E1               	movwf	printf@fmt^(0+128)
  9171     1129  3098               	movlw	high (STR_2| (0+32768))
  9172     112A  00E2               	movwf	(printf@fmt^(0+128)+1)
  9173     112B  319C  2499  3191   	fcall	_printf
  9174     112E                     l5933:
  9175                           
  9176                           ;UART.c: 62:             index = 0;
  9177     112E  0020               	movlb	0	; select bank0
  9178     112F  01E5               	clrf	readLine@index
  9179     1130                     l5935:
  9180                           
  9181                           ;UART.c: 63:             line[index] = 0;
  9182     1130  0023               	movlb	3	; select bank3
  9183     1131  01C0               	clrf	_line^(0+384)
  9184     1132                     l5937:
  9185                           
  9186                           ;UART.c: 64:             return line;
  9187     1132  30C0               	movlw	(low (_line| (0+256)))& (0+255)
  9188     1133  2959               	goto	l875
  9189     1134                     l5941:
  9190                           
  9191                           ;UART.c: 67:         line[index] = EUSART_Read();
  9192     1134  319E  2618  3191   	fcall	_EUSART_Read
  9193     1137  0021               	movlb	1	; select bank1
  9194     1138  00EA               	movwf	??_readLine^(0+128)
  9195     1139  0020               	movlb	0	; select bank0
  9196     113A  0865               	movf	readLine@index,w
  9197     113B  3EC0               	addlw	(low (_line| (0+256)))& (0+255)
  9198     113C  0086               	movwf	6
  9199     113D  3001               	movlw	1	; select bank3/4
  9200     113E  0087               	movwf	7
  9201     113F  0021               	movlb	1	; select bank1
  9202     1140  086A               	movf	??_readLine^(0+128),w
  9203     1141  0081               	movwf	1
  9204     1142                     l5943:
  9205                           
  9206                           ;UART.c: 68:         if (line[index] == '\n') {
  9207     1142  0020               	movlb	0	; select bank0
  9208     1143  0865               	movf	readLine@index,w
  9209     1144  3EC0               	addlw	(low (_line| (0+256)))& (0+255)
  9210     1145  0086               	movwf	6
  9211     1146  3001               	movlw	1	; select bank3/4
  9212     1147  0087               	movwf	7
  9213     1148  300A               	movlw	10
  9214     1149  0601               	xorwf	1,w
  9215     114A  1D03               	btfss	3,2
  9216     114B  294D               	goto	u7281
  9217     114C  294E               	goto	u7280
  9218     114D                     u7281:
  9219     114D  2956               	goto	l5953
  9220     114E                     u7280:
  9221     114E                     l5945:
  9222                           
  9223                           ;UART.c: 69:             line[index + 1] = 0;
  9224     114E  0865               	movf	readLine@index,w
  9225     114F  3EC1               	addlw	(low ((_line| (0+256)+1)))& (0+255)
  9226     1150  0086               	movwf	6
  9227     1151  3001               	movlw	1	; select bank3/4
  9228     1152  0087               	movwf	7
  9229     1153  0181               	clrf	1
  9230     1154                     l5947:
  9231                           
  9232                           ;UART.c: 70:             index = 0;
  9233     1154  01E5               	clrf	readLine@index
  9234     1155  2932               	goto	l5937
  9235     1156                     l5953:
  9236                           
  9237                           ;UART.c: 73:         index++;
  9238     1156  3001               	movlw	1
  9239     1157  07E5               	addwf	readLine@index,f
  9240     1158  2901               	goto	l873
  9241     1159                     l875:
  9242     1159  0008               	return
  9243     115A                     __end_of_readLine:
  9244                           
  9245                           	psect	text8
  9246     1E18                     __ptext8:	
  9247 ;; *************** function _EUSART_Read *****************
  9248 ;; Defined at:
  9249 ;;		line 288 in file "mcc_generated_files/uart/src/eusart.c"
  9250 ;; Parameters:    Size  Location     Type
  9251 ;;		None
  9252 ;; Auto vars:     Size  Location     Type
  9253 ;;  readValue       1    1[BANK1 ] unsigned char 
  9254 ;;  tempRxTail      1    0[BANK1 ] unsigned char 
  9255 ;; Return value:  Size  Location     Type
  9256 ;;                  1    wreg      unsigned char 
  9257 ;; Registers used:
  9258 ;;		wreg, fsr1l, fsr1h, status,2, status,0
  9259 ;; Tracked objects:
  9260 ;;		On entry : 0/0
  9261 ;;		On exit  : 0/0
  9262 ;;		Unchanged: 0/0
  9263 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9264 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9265 ;;      Locals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0
  9266 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9267 ;;      Totals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0
  9268 ;;Total ram usage:        2 bytes
  9269 ;; Hardware stack levels used: 1
  9270 ;; Hardware stack levels required when called: 5
  9271 ;; This function calls:
  9272 ;;		Nothing
  9273 ;; This function is called by:
  9274 ;;		_readLine
  9275 ;;		_getch
  9276 ;; This function uses a non-reentrant model
  9277 ;;
  9278                           
  9279     1E18                     _EUSART_Read:	
  9280                           ;psect for function _EUSART_Read
  9281                           
  9282     1E18                     l5037:	
  9283                           ;incstack = 0
  9284                           ; Regs used in _EUSART_Read: [wreg+fsr1l+fsr1h+status,2+status,0]
  9285                           
  9286     1E18                     l5039:
  9287                           
  9288                           ;mcc_generated_files/uart/src/eusart.c: 291:     uint8_t tempRxTail;;mcc_generated_files
      +                          /uart/src/eusart.c: 293:     readValue = eusartRxBuffer[eusartRxTail];
  9289     1E18  0020               	movlb	0	; select bank0
  9290     1E19  0867               	movf	_eusartRxTail,w
  9291     1E1A  3E30               	addlw	(low (_eusartRxBuffer| (0+256)))& (0+255)
  9292     1E1B  0086               	movwf	6
  9293     1E1C  3001               	movlw	1	; select bank2/3
  9294     1E1D  0087               	movwf	7
  9295     1E1E  0801               	movf	1,w
  9296     1E1F  0021               	movlb	1	; select bank1
  9297     1E20  00A1               	movwf	EUSART_Read@readValue^(0+128)
  9298     1E21                     l5041:
  9299                           
  9300                           ;mcc_generated_files/uart/src/eusart.c: 295:     tempRxTail = (eusartRxTail + 1U) & ((8U
      +                          ) - 1U);
  9301     1E21  0020               	movlb	0	; select bank0
  9302     1E22  0867               	movf	_eusartRxTail,w	;volatile
  9303     1E23  3E01               	addlw	1
  9304     1E24  3907               	andlw	7
  9305     1E25  0021               	movlb	1	; select bank1
  9306     1E26  00A0               	movwf	EUSART_Read@tempRxTail^(0+128)
  9307     1E27                     l5043:
  9308                           
  9309                           ;mcc_generated_files/uart/src/eusart.c: 297:     eusartRxTail = tempRxTail;
  9310     1E27  0820               	movf	EUSART_Read@tempRxTail^(0+128),w
  9311     1E28  0020               	movlb	0	; select bank0
  9312     1E29  00E7               	movwf	_eusartRxTail	;volatile
  9313     1E2A                     l5045:
  9314                           
  9315                           ;mcc_generated_files/uart/src/eusart.c: 299:     PIE1bits.RCIE = 0;
  9316     1E2A  0021               	movlb	1	; select bank1
  9317     1E2B  1291               	bcf	17,5	;volatile
  9318     1E2C                     l5047:
  9319                           
  9320                           ;mcc_generated_files/uart/src/eusart.c: 300:     if(0U != eusartRxCount)
  9321     1E2C  0020               	movlb	0	; select bank0
  9322     1E2D  0866               	movf	_eusartRxCount,w	;volatile
  9323     1E2E  1903               	btfsc	3,2
  9324     1E2F  2E31               	goto	u5781
  9325     1E30  2E32               	goto	u5780
  9326     1E31                     u5781:
  9327     1E31  2E34               	goto	l5051
  9328     1E32                     u5780:
  9329     1E32                     l5049:
  9330                           
  9331                           ;mcc_generated_files/uart/src/eusart.c: 301:     {;mcc_generated_files/uart/src/eusart.c
      +                          : 302:         eusartRxCount--;
  9332     1E32  3001               	movlw	1
  9333     1E33  02E6               	subwf	_eusartRxCount,f	;volatile
  9334     1E34                     l5051:
  9335                           
  9336                           ;mcc_generated_files/uart/src/eusart.c: 304:     PIE1bits.RCIE = 1;
  9337     1E34  0021               	movlb	1	; select bank1
  9338     1E35  1691               	bsf	17,5	;volatile
  9339     1E36                     l5053:
  9340                           
  9341                           ;mcc_generated_files/uart/src/eusart.c: 305:     return readValue;
  9342     1E36  0821               	movf	EUSART_Read@readValue^(0+128),w
  9343     1E37                     l707:
  9344     1E37  0008               	return
  9345     1E38                     __end_of_EUSART_Read:
  9346                           
  9347                           	psect	text9
  9348     1BB7                     __ptext9:	
  9349 ;; *************** function _EUSART_IsRxReady *****************
  9350 ;; Defined at:
  9351 ;;		line 267 in file "mcc_generated_files/uart/src/eusart.c"
  9352 ;; Parameters:    Size  Location     Type
  9353 ;;		None
  9354 ;; Auto vars:     Size  Location     Type
  9355 ;;		None
  9356 ;; Return value:  Size  Location     Type
  9357 ;;                  1    wreg      _Bool 
  9358 ;; Registers used:
  9359 ;;		wreg, status,2, status,0
  9360 ;; Tracked objects:
  9361 ;;		On entry : 0/0
  9362 ;;		On exit  : 0/0
  9363 ;;		Unchanged: 0/0
  9364 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9365 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9366 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9367 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9368 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9369 ;;Total ram usage:        0 bytes
  9370 ;; Hardware stack levels used: 1
  9371 ;; Hardware stack levels required when called: 5
  9372 ;; This function calls:
  9373 ;;		Nothing
  9374 ;; This function is called by:
  9375 ;;		_readLine
  9376 ;;		_getch
  9377 ;; This function uses a non-reentrant model
  9378 ;;
  9379                           
  9380     1BB7                     _EUSART_IsRxReady:	
  9381                           ;psect for function _EUSART_IsRxReady
  9382                           
  9383     1BB7                     l5033:	
  9384                           ;incstack = 0
  9385                           ; Regs used in _EUSART_IsRxReady: [wreg+status,2+status,0]
  9386                           
  9387                           
  9388                           ;mcc_generated_files/uart/src/eusart.c: 269:     return (eusartRxCount ? 1 : 0);
  9389     1BB7  0020               	movlb	0	; select bank0
  9390     1BB8  0866               	movf	_eusartRxCount,w	;volatile
  9391     1BB9  1D03               	btfss	3,2
  9392     1BBA  2BBC               	goto	u5761
  9393     1BBB  2BBE               	goto	u5760
  9394     1BBC                     u5761:
  9395     1BBC  3001               	movlw	1
  9396     1BBD  2BBF               	goto	u5770
  9397     1BBE                     u5760:
  9398     1BBE  3000               	movlw	0
  9399     1BBF                     u5770:
  9400     1BBF                     l694:
  9401     1BBF  0008               	return
  9402     1BC0                     __end_of_EUSART_IsRxReady:
  9403                           
  9404                           	psect	text10
  9405     1492                     __ptext10:	
  9406 ;; *************** function _atoi *****************
  9407 ;; Defined at:
  9408 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\atoi.c"
  9409 ;; Parameters:    Size  Location     Type
  9410 ;;  s               1    6[BANK1 ] PTR const unsigned char 
  9411 ;;		 -> line(20), 
  9412 ;; Auto vars:     Size  Location     Type
  9413 ;;  n               2   11[BANK1 ] int 
  9414 ;;  neg             1   10[BANK1 ] _Bool 
  9415 ;; Return value:  Size  Location     Type
  9416 ;;                  2    6[BANK1 ] int 
  9417 ;; Registers used:
  9418 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  9419 ;; Tracked objects:
  9420 ;;		On entry : 0/0
  9421 ;;		On exit  : 0/0
  9422 ;;		Unchanged: 0/0
  9423 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9424 ;;      Params:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0
  9425 ;;      Locals:         0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0
  9426 ;;      Temps:          0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0
  9427 ;;      Totals:         0       0       7       0       0       0       0       0       0       0       0       0       
      +0       0
  9428 ;;Total ram usage:        7 bytes
  9429 ;; Hardware stack levels used: 1
  9430 ;; Hardware stack levels required when called: 6
  9431 ;; This function calls:
  9432 ;;		___wmul
  9433 ;; This function is called by:
  9434 ;;		_uartHandler
  9435 ;; This function uses a non-reentrant model
  9436 ;;
  9437                           
  9438     1492                     _atoi:	
  9439                           ;psect for function _atoi
  9440                           
  9441     1492                     l5967:	
  9442                           ;incstack = 0
  9443                           ; Regs used in _atoi: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  9444                           
  9445     1492  0021               	movlb	1	; select bank1
  9446     1493  01AB               	clrf	atoi@n^(0+128)
  9447     1494  01AC               	clrf	(atoi@n+1)^(0+128)
  9448     1495  01AA               	clrf	atoi@neg^(0+128)
  9449     1496  2C99               	goto	l5971
  9450     1497                     l5969:
  9451     1497  3001               	movlw	1
  9452     1498  07A6               	addwf	atoi@s^(0+128),f
  9453     1499                     l5971:
  9454     1499  0826               	movf	atoi@s^(0+128),w
  9455     149A  0086               	movwf	6
  9456     149B  3001               	movlw	1	; select bank2/3
  9457     149C  0087               	movwf	7
  9458     149D  3020               	movlw	32
  9459     149E  0601               	xorwf	1,w
  9460     149F  1903               	btfsc	3,2
  9461     14A0  2CA2               	goto	u7291
  9462     14A1  2CA3               	goto	u7290
  9463     14A2                     u7291:
  9464     14A2  2C97               	goto	l5969
  9465     14A3                     u7290:
  9466     14A3                     l5973:
  9467     14A3  0826               	movf	atoi@s^(0+128),w
  9468     14A4  0086               	movwf	6
  9469     14A5  3001               	movlw	1	; select bank2/3
  9470     14A6  0087               	movwf	7
  9471     14A7  30F7               	movlw	247
  9472     14A8  0701               	addwf	1,w
  9473     14A9  00A8               	movwf	??_atoi^(0+128)
  9474     14AA  3005               	movlw	5
  9475     14AB  0228               	subwf	??_atoi^(0+128),w
  9476     14AC  1C03               	skipc
  9477     14AD  2CAF               	goto	u7301
  9478     14AE  2CB0               	goto	u7300
  9479     14AF                     u7301:
  9480     14AF  2C97               	goto	l5969
  9481     14B0                     u7300:
  9482     14B0                     l5975:
  9483     14B0  0826               	movf	atoi@s^(0+128),w
  9484     14B1  0086               	movwf	6
  9485     14B2  3001               	movlw	1	; select bank2/3
  9486     14B3  0087               	movwf	7
  9487     14B4  302D               	movlw	45
  9488     14B5  0601               	xorwf	1,w
  9489     14B6  1D03               	btfss	3,2
  9490     14B7  2CB9               	goto	u7311
  9491     14B8  2CBA               	goto	u7310
  9492     14B9                     u7311:
  9493     14B9  2CBF               	goto	l5981
  9494     14BA                     u7310:
  9495     14BA                     l5977:
  9496     14BA  3001               	movlw	1
  9497     14BB  00AA               	movwf	atoi@neg^(0+128)
  9498     14BC                     l5979:
  9499     14BC  3001               	movlw	1
  9500     14BD  07A6               	addwf	atoi@s^(0+128),f
  9501     14BE  2CE8               	goto	l5989
  9502     14BF                     l5981:
  9503     14BF  0826               	movf	atoi@s^(0+128),w
  9504     14C0  0086               	movwf	6
  9505     14C1  3001               	movlw	1	; select bank2/3
  9506     14C2  0087               	movwf	7
  9507     14C3  302B               	movlw	43
  9508     14C4  0601               	xorwf	1,w
  9509     14C5  1D03               	btfss	3,2
  9510     14C6  2CC8               	goto	u7321
  9511     14C7  2CC9               	goto	u7320
  9512     14C8                     u7321:
  9513     14C8  2CE8               	goto	l5989
  9514     14C9                     u7320:
  9515     14C9  2CBC               	goto	l5979
  9516     14CA                     l5985:
  9517     14CA  0826               	movf	atoi@s^(0+128),w
  9518     14CB  0086               	movwf	6
  9519     14CC  3001               	movlw	1	; select bank2/3
  9520     14CD  0087               	movwf	7
  9521     14CE  082C               	movf	(atoi@n+1)^(0+128),w
  9522     14CF  00A1               	movwf	(___wmul@multiplier+1)^(0+128)
  9523     14D0  082B               	movf	atoi@n^(0+128),w
  9524     14D1  00A0               	movwf	___wmul@multiplier^(0+128)
  9525     14D2  300A               	movlw	10
  9526     14D3  00A2               	movwf	___wmul@multiplicand^(0+128)
  9527     14D4  3000               	movlw	0
  9528     14D5  00A3               	movwf	(___wmul@multiplicand^(0+128)+1)
  9529     14D6  319D  25D8  3194   	fcall	___wmul
  9530     14D9  0021               	movlb	1	; select bank1
  9531     14DA  0821               	movf	(?___wmul+1)^(0+128),w
  9532     14DB  00A9               	movwf	(??_atoi^(0+128)+1)
  9533     14DC  0801               	movf	1,w
  9534     14DD  0220               	subwf	?___wmul^(0+128),w
  9535     14DE  00A8               	movwf	??_atoi^(0+128)
  9536     14DF  1C03               	skipc
  9537     14E0  03A9               	decf	(??_atoi^(0+128)+1),f
  9538     14E1  0828               	movf	??_atoi^(0+128),w
  9539     14E2  3E30               	addlw	48
  9540     14E3  00AB               	movwf	atoi@n^(0+128)
  9541     14E4  3000               	movlw	0
  9542     14E5  3D29               	addwfc	(??_atoi+1)^(0+128),w
  9543     14E6  00AC               	movwf	(atoi@n+1)^(0+128)
  9544     14E7  2CBC               	goto	l5979
  9545     14E8                     l5989:
  9546     14E8  0826               	movf	atoi@s^(0+128),w
  9547     14E9  0086               	movwf	6
  9548     14EA  3001               	movlw	1	; select bank2/3
  9549     14EB  0087               	movwf	7
  9550     14EC  30D0               	movlw	208
  9551     14ED  0701               	addwf	1,w
  9552     14EE  00A8               	movwf	??_atoi^(0+128)
  9553     14EF  300A               	movlw	10
  9554     14F0  0228               	subwf	??_atoi^(0+128),w
  9555     14F1  1C03               	skipc
  9556     14F2  2CF4               	goto	u7331
  9557     14F3  2CF5               	goto	u7330
  9558     14F4                     u7331:
  9559     14F4  2CCA               	goto	l5985
  9560     14F5                     u7330:
  9561     14F5                     l5991:
  9562     14F5  082A               	movf	atoi@neg^(0+128),w
  9563     14F6  1D03               	btfss	3,2
  9564     14F7  2CF9               	goto	u7341
  9565     14F8  2CFA               	goto	u7340
  9566     14F9                     u7341:
  9567     14F9  2D06               	goto	l5995
  9568     14FA                     u7340:
  9569     14FA                     l5993:
  9570     14FA  092B               	comf	atoi@n^(0+128),w
  9571     14FB  00A8               	movwf	??_atoi^(0+128)
  9572     14FC  092C               	comf	(atoi@n+1)^(0+128),w
  9573     14FD  00A9               	movwf	(??_atoi^(0+128)+1)
  9574     14FE  0AA8               	incf	??_atoi^(0+128),f
  9575     14FF  1903               	skipnz
  9576     1500  0AA9               	incf	(??_atoi^(0+128)+1),f
  9577     1501  0828               	movf	??_atoi^(0+128),w
  9578     1502  00A6               	movwf	?_atoi^(0+128)
  9579     1503  0829               	movf	(??_atoi+1)^(0+128),w
  9580     1504  00A7               	movwf	(?_atoi+1)^(0+128)
  9581     1505  2D0A               	goto	l1637
  9582     1506                     l5995:
  9583     1506  082C               	movf	(atoi@n+1)^(0+128),w
  9584     1507  00A7               	movwf	(?_atoi+1)^(0+128)
  9585     1508  082B               	movf	atoi@n^(0+128),w
  9586     1509  00A6               	movwf	?_atoi^(0+128)
  9587     150A                     l1637:
  9588     150A  0008               	return
  9589     150B                     __end_of_atoi:
  9590                           
  9591                           	psect	text11
  9592     150B                     __ptext11:	
  9593 ;; *************** function _printLogs *****************
  9594 ;; Defined at:
  9595 ;;		line 77 in file "UART.c"
  9596 ;; Parameters:    Size  Location     Type
  9597 ;;		None
  9598 ;; Auto vars:     Size  Location     Type
  9599 ;;		None
  9600 ;; Return value:  Size  Location     Type
  9601 ;;                  1    wreg      void 
  9602 ;; Registers used:
  9603 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  9604 ;; Tracked objects:
  9605 ;;		On entry : 0/0
  9606 ;;		On exit  : 0/0
  9607 ;;		Unchanged: 0/0
  9608 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9609 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9610 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9611 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9612 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9613 ;;Total ram usage:        0 bytes
  9614 ;; Hardware stack levels used: 1
  9615 ;; Hardware stack levels required when called: 15
  9616 ;; This function calls:
  9617 ;;		_getDutycycle
  9618 ;;		_getHoogtesensor
  9619 ;;		_getKi
  9620 ;;		_getKp
  9621 ;;		_getSetpoint
  9622 ;;		_printFloat
  9623 ;;		_printf
  9624 ;; This function is called by:
  9625 ;;		_main
  9626 ;; This function uses a non-reentrant model
  9627 ;;
  9628                           
  9629     150B                     _printLogs:	
  9630                           ;psect for function _printLogs
  9631                           
  9632     150B                     l6153:	
  9633                           ;incstack = 0
  9634                           ; Regs used in _printLogs: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  9635                           
  9636                           
  9637                           ;UART.c: 79:     if (mustPrintLogs) {
  9638     150B  0020               	movlb	0	; select bank0
  9639     150C  086E               	movf	_mustPrintLogs,w
  9640     150D  1903               	btfsc	3,2
  9641     150E  2D10               	goto	u7521
  9642     150F  2D11               	goto	u7520
  9643     1510                     u7521:
  9644     1510  2D85               	goto	l886
  9645     1511                     u7520:
  9646     1511                     l6155:
  9647                           
  9648                           ;UART.c: 80:         printf("hoogte: %u", getHoogtesensor());
  9649     1511  30D7               	movlw	low (STR_3| (0+32768))
  9650     1512  0021               	movlb	1	; select bank1
  9651     1513  00E1               	movwf	printf@fmt^(0+128)
  9652     1514  3098               	movlw	high (STR_3| (0+32768))
  9653     1515  00E2               	movwf	(printf@fmt^(0+128)+1)
  9654     1516  319B  238A  3195   	fcall	_getHoogtesensor
  9655     1519  0021               	movlb	1	; select bank1
  9656     151A  0821               	movf	(?_getHoogtesensor+1)^(0+128),w
  9657     151B  00E4               	movwf	((?_printf+1)^(0+128)+2)
  9658     151C  0820               	movf	?_getHoogtesensor^(0+128),w
  9659     151D  00E3               	movwf	(?_printf^(0+128)+2)
  9660     151E  319C  2499  3195   	fcall	_printf
  9661                           
  9662                           ;UART.c: 81:         printf(", setpoint: %u", getSetpoint());
  9663     1521  30AE               	movlw	low (STR_4| (0+32768))
  9664     1522  0021               	movlb	1	; select bank1
  9665     1523  00E1               	movwf	printf@fmt^(0+128)
  9666     1524  3098               	movlw	high (STR_4| (0+32768))
  9667     1525  00E2               	movwf	(printf@fmt^(0+128)+1)
  9668     1526  319B  2393  3195   	fcall	_getSetpoint
  9669     1529  0021               	movlb	1	; select bank1
  9670     152A  0821               	movf	(?_getSetpoint+1)^(0+128),w
  9671     152B  00E4               	movwf	((?_printf+1)^(0+128)+2)
  9672     152C  0820               	movf	?_getSetpoint^(0+128),w
  9673     152D  00E3               	movwf	(?_printf^(0+128)+2)
  9674     152E  319C  2499  3195   	fcall	_printf
  9675                           
  9676                           ;UART.c: 82:         printf(", duty cycle: %u", getDutycycle());
  9677     1531  308E               	movlw	low (STR_5| (0+32768))
  9678     1532  0021               	movlb	1	; select bank1
  9679     1533  00E1               	movwf	printf@fmt^(0+128)
  9680     1534  3098               	movlw	high (STR_5| (0+32768))
  9681     1535  00E2               	movwf	(printf@fmt^(0+128)+1)
  9682     1536  319B  23A5  3195   	fcall	_getDutycycle
  9683     1539  0021               	movlb	1	; select bank1
  9684     153A  0821               	movf	(?_getDutycycle+1)^(0+128),w
  9685     153B  00E4               	movwf	((?_printf+1)^(0+128)+2)
  9686     153C  0820               	movf	?_getDutycycle^(0+128),w
  9687     153D  00E3               	movwf	(?_printf^(0+128)+2)
  9688     153E  319C  2499  3195   	fcall	_printf
  9689                           
  9690                           ;UART.c: 85:         printf(", kp: "); printFloat(getKp());
  9691     1541  30FB               	movlw	low (STR_6| (0+32768))
  9692     1542  0021               	movlb	1	; select bank1
  9693     1543  00E1               	movwf	printf@fmt^(0+128)
  9694     1544  3098               	movlw	high (STR_6| (0+32768))
  9695     1545  00E2               	movwf	(printf@fmt^(0+128)+1)
  9696     1546  319C  2499  3195   	fcall	_printf
  9697     1549  319C  24DC  3195   	fcall	_getKp
  9698     154C  0021               	movlb	1	; select bank1
  9699     154D  0823               	movf	(?_getKp+3)^(0+128),w
  9700     154E  0022               	movlb	2	; select bank2
  9701     154F  00D3               	movwf	(printFloat@number+3)^(0+256)
  9702     1550  0021               	movlb	1	; select bank1
  9703     1551  0822               	movf	(?_getKp+2)^(0+128),w
  9704     1552  0022               	movlb	2	; select bank2
  9705     1553  00D2               	movwf	(printFloat@number+2)^(0+256)
  9706     1554  0021               	movlb	1	; select bank1
  9707     1555  0821               	movf	(?_getKp+1)^(0+128),w
  9708     1556  0022               	movlb	2	; select bank2
  9709     1557  00D1               	movwf	(printFloat@number+1)^(0+256)
  9710     1558  0021               	movlb	1	; select bank1
  9711     1559  0820               	movf	?_getKp^(0+128),w
  9712     155A  0022               	movlb	2	; select bank2
  9713     155B  00D0               	movwf	printFloat@number^(0+256)
  9714     155C  3195  2586  3195   	fcall	_printFloat
  9715                           
  9716                           ;UART.c: 86:         printf(", ki: "); printFloat(getKi());
  9717     155F  30F4               	movlw	low (STR_7| (0+32768))
  9718     1560  0021               	movlb	1	; select bank1
  9719     1561  00E1               	movwf	printf@fmt^(0+128)
  9720     1562  3098               	movlw	high (STR_7| (0+32768))
  9721     1563  00E2               	movwf	(printf@fmt^(0+128)+1)
  9722     1564  319C  2499  3195   	fcall	_printf
  9723     1567  319C  24CB  3195   	fcall	_getKi
  9724     156A  0021               	movlb	1	; select bank1
  9725     156B  0823               	movf	(?_getKi+3)^(0+128),w
  9726     156C  0022               	movlb	2	; select bank2
  9727     156D  00D3               	movwf	(printFloat@number+3)^(0+256)
  9728     156E  0021               	movlb	1	; select bank1
  9729     156F  0822               	movf	(?_getKi+2)^(0+128),w
  9730     1570  0022               	movlb	2	; select bank2
  9731     1571  00D2               	movwf	(printFloat@number+2)^(0+256)
  9732     1572  0021               	movlb	1	; select bank1
  9733     1573  0821               	movf	(?_getKi+1)^(0+128),w
  9734     1574  0022               	movlb	2	; select bank2
  9735     1575  00D1               	movwf	(printFloat@number+1)^(0+256)
  9736     1576  0021               	movlb	1	; select bank1
  9737     1577  0820               	movf	?_getKi^(0+128),w
  9738     1578  0022               	movlb	2	; select bank2
  9739     1579  00D0               	movwf	printFloat@number^(0+256)
  9740     157A  3195  2586  3195   	fcall	_printFloat
  9741                           
  9742                           ;UART.c: 87:         printf("\r\n");
  9743     157D  30AB               	movlw	low ((STR_12+12)| (0+32768))
  9744     157E  0021               	movlb	1	; select bank1
  9745     157F  00E1               	movwf	printf@fmt^(0+128)
  9746     1580  3098               	movlw	high ((STR_12+12)| (0+32768))
  9747     1581  00E2               	movwf	(printf@fmt^(0+128)+1)
  9748     1582  319C  2499  3195   	fcall	_printf
  9749     1585                     l886:
  9750     1585  0008               	return
  9751     1586                     __end_of_printLogs:
  9752                           
  9753                           	psect	text12
  9754     1586                     __ptext12:	
  9755 ;; *************** function _printFloat *****************
  9756 ;; Defined at:
  9757 ;;		line 14 in file "UART.c"
  9758 ;; Parameters:    Size  Location     Type
  9759 ;;  number          4    0[BANK2 ] float 
  9760 ;; Auto vars:     Size  Location     Type
  9761 ;;  fractional_p    2    4[BANK2 ] unsigned short 
  9762 ;;  integer_part    1    6[BANK2 ] char 
  9763 ;; Return value:  Size  Location     Type
  9764 ;;                  1    wreg      void 
  9765 ;; Registers used:
  9766 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  9767 ;; Tracked objects:
  9768 ;;		On entry : 0/0
  9769 ;;		On exit  : 0/0
  9770 ;;		Unchanged: 0/0
  9771 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9772 ;;      Params:         0       0       0       4       0       0       0       0       0       0       0       0       
      +0       0
  9773 ;;      Locals:         0       0       0       3       0       0       0       0       0       0       0       0       
      +0       0
  9774 ;;      Temps:          0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0
  9775 ;;      Totals:         0       0       2       7       0       0       0       0       0       0       0       0       
      +0       0
  9776 ;;Total ram usage:        9 bytes
  9777 ;; Hardware stack levels used: 1
  9778 ;; Hardware stack levels required when called: 14
  9779 ;; This function calls:
  9780 ;;		___flmul
  9781 ;;		___flsub
  9782 ;;		___fltol
  9783 ;;		___xxtofl
  9784 ;;		_printf
  9785 ;; This function is called by:
  9786 ;;		_printLogs
  9787 ;; This function uses a non-reentrant model
  9788 ;;
  9789                           
  9790     1586                     _printFloat:	
  9791                           ;psect for function _printFloat
  9792                           
  9793     1586                     l5875:	
  9794                           ;incstack = 0
  9795                           ; Regs used in _printFloat: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  9796                           
  9797                           
  9798                           ;UART.c: 15:     int8_t integer_part = (int8_t) number;
  9799     1586  0022               	movlb	2	; select bank2
  9800     1587  0853               	movf	(printFloat@number+3)^(0+256),w
  9801     1588  0021               	movlb	1	; select bank1
  9802     1589  00E7               	movwf	(___fltol@f1+3)^(0+128)
  9803     158A  0022               	movlb	2	; select bank2
  9804     158B  0852               	movf	(printFloat@number+2)^(0+256),w
  9805     158C  0021               	movlb	1	; select bank1
  9806     158D  00E6               	movwf	(___fltol@f1+2)^(0+128)
  9807     158E  0022               	movlb	2	; select bank2
  9808     158F  0851               	movf	(printFloat@number+1)^(0+256),w
  9809     1590  0021               	movlb	1	; select bank1
  9810     1591  00E5               	movwf	(___fltol@f1+1)^(0+128)
  9811     1592  0022               	movlb	2	; select bank2
  9812     1593  0850               	movf	printFloat@number^(0+256),w
  9813     1594  0021               	movlb	1	; select bank1
  9814     1595  00E4               	movwf	___fltol@f1^(0+128)
  9815     1596  3193  233A  3195   	fcall	___fltol
  9816     1599  0021               	movlb	1	; select bank1
  9817     159A  0864               	movf	?___fltol^(0+128),w
  9818     159B  0022               	movlb	2	; select bank2
  9819     159C  00D6               	movwf	printFloat@integer_part^(0+256)
  9820                           
  9821                           ;UART.c: 16:     uint16_t fractional_part = (uint16_t) ((number - integer_part) * 1000);
  9822     159D  0853               	movf	(printFloat@number+3)^(0+256),w
  9823     159E  0021               	movlb	1	; select bank1
  9824     159F  00C9               	movwf	(___flsub@b+3)^(0+128)
  9825     15A0  0022               	movlb	2	; select bank2
  9826     15A1  0852               	movf	(printFloat@number+2)^(0+256),w
  9827     15A2  0021               	movlb	1	; select bank1
  9828     15A3  00C8               	movwf	(___flsub@b+2)^(0+128)
  9829     15A4  0022               	movlb	2	; select bank2
  9830     15A5  0851               	movf	(printFloat@number+1)^(0+256),w
  9831     15A6  0021               	movlb	1	; select bank1
  9832     15A7  00C7               	movwf	(___flsub@b+1)^(0+128)
  9833     15A8  0022               	movlb	2	; select bank2
  9834     15A9  0850               	movf	printFloat@number^(0+256),w
  9835     15AA  0021               	movlb	1	; select bank1
  9836     15AB  00C6               	movwf	___flsub@b^(0+128)
  9837     15AC  0022               	movlb	2	; select bank2
  9838     15AD  0856               	movf	printFloat@integer_part^(0+256),w
  9839     15AE  0021               	movlb	1	; select bank1
  9840     15AF  00EE               	movwf	??_printFloat^(0+128)
  9841     15B0  01EF               	clrf	(??_printFloat^(0+128)+1)
  9842     15B1  1BEE               	btfsc	??_printFloat^(0+128),7
  9843     15B2  03EF               	decf	(??_printFloat^(0+128)+1),f
  9844     15B3  086E               	movf	??_printFloat^(0+128),w
  9845     15B4  00A0               	movwf	___xxtofl@val^(0+128)
  9846     15B5  086F               	movf	(??_printFloat+1)^(0+128),w
  9847     15B6  00A1               	movwf	(___xxtofl@val+1)^(0+128)
  9848     15B7  0D89               	rlf	9,f
  9849     15B8  3B89               	subwfb	9,f
  9850     15B9  0989               	comf	9,f
  9851     15BA  00A2               	movwf	(___xxtofl@val+2)^(0+128)
  9852     15BB  00A3               	movwf	(___xxtofl@val+3)^(0+128)
  9853     15BC  3001               	movlw	1
  9854     15BD  3196  26B0  3195   	fcall	___xxtofl
  9855     15C0  0021               	movlb	1	; select bank1
  9856     15C1  0823               	movf	(?___xxtofl+3)^(0+128),w
  9857     15C2  00C5               	movwf	(___flsub@a+3)^(0+128)
  9858     15C3  0822               	movf	(?___xxtofl+2)^(0+128),w
  9859     15C4  00C4               	movwf	(___flsub@a+2)^(0+128)
  9860     15C5  0821               	movf	(?___xxtofl+1)^(0+128),w
  9861     15C6  00C3               	movwf	(___flsub@a+1)^(0+128)
  9862     15C7  0820               	movf	?___xxtofl^(0+128),w
  9863     15C8  00C2               	movwf	___flsub@a^(0+128)
  9864     15C9  319D  25F8  3195   	fcall	___flsub
  9865     15CC  0021               	movlb	1	; select bank1
  9866     15CD  0845               	movf	(?___flsub+3)^(0+128),w
  9867     15CE  00D1               	movwf	(___flmul@a+3)^(0+128)
  9868     15CF  0844               	movf	(?___flsub+2)^(0+128),w
  9869     15D0  00D0               	movwf	(___flmul@a+2)^(0+128)
  9870     15D1  0843               	movf	(?___flsub+1)^(0+128),w
  9871     15D2  00CF               	movwf	(___flmul@a+1)^(0+128)
  9872     15D3  0842               	movf	?___flsub^(0+128),w
  9873     15D4  00CE               	movwf	___flmul@a^(0+128)
  9874     15D5  3044               	movlw	68
  9875     15D6  00CD               	movwf	(___flmul@b+3)^(0+128)
  9876     15D7  307A               	movlw	122
  9877     15D8  00CC               	movwf	(___flmul@b+2)^(0+128)
  9878     15D9  3000               	movlw	0
  9879     15DA  00CB               	movwf	(___flmul@b+1)^(0+128)
  9880     15DB  3000               	movlw	0
  9881     15DC  00CA               	movwf	___flmul@b^(0+128)
  9882     15DD  3180  208E  3195   	fcall	___flmul
  9883     15E0  0021               	movlb	1	; select bank1
  9884     15E1  084D               	movf	(?___flmul+3)^(0+128),w
  9885     15E2  00E7               	movwf	(___fltol@f1+3)^(0+128)
  9886     15E3  084C               	movf	(?___flmul+2)^(0+128),w
  9887     15E4  00E6               	movwf	(___fltol@f1+2)^(0+128)
  9888     15E5  084B               	movf	(?___flmul+1)^(0+128),w
  9889     15E6  00E5               	movwf	(___fltol@f1+1)^(0+128)
  9890     15E7  084A               	movf	?___flmul^(0+128),w
  9891     15E8  00E4               	movwf	___fltol@f1^(0+128)
  9892     15E9  3193  233A  3195   	fcall	___fltol
  9893     15EC  0021               	movlb	1	; select bank1
  9894     15ED  0865               	movf	(?___fltol+1)^(0+128),w
  9895     15EE  0022               	movlb	2	; select bank2
  9896     15EF  00D5               	movwf	(printFloat@fractional_part+1)^(0+256)
  9897     15F0  0021               	movlb	1	; select bank1
  9898     15F1  0864               	movf	?___fltol^(0+128),w
  9899     15F2  0022               	movlb	2	; select bank2
  9900     15F3  00D4               	movwf	printFloat@fractional_part^(0+256)
  9901     15F4                     l5877:
  9902                           
  9903                           ;UART.c: 17:     printf("%i.%03u", integer_part, fractional_part);
  9904     15F4  30EC               	movlw	low (STR_1| (0+32768))
  9905     15F5  0021               	movlb	1	; select bank1
  9906     15F6  00E1               	movwf	printf@fmt^(0+128)
  9907     15F7  3098               	movlw	high (STR_1| (0+32768))
  9908     15F8  00E2               	movwf	(printf@fmt^(0+128)+1)
  9909     15F9  0022               	movlb	2	; select bank2
  9910     15FA  0856               	movf	printFloat@integer_part^(0+256),w
  9911     15FB  0021               	movlb	1	; select bank1
  9912     15FC  00E3               	movwf	(?_printf^(0+128)+2)
  9913     15FD  01E4               	clrf	((?_printf+1)^(0+128)+2)
  9914     15FE  1BE3               	btfsc	(?_printf^(0+128)+2),7
  9915     15FF  03E4               	decf	((?_printf+1)^(0+128)+2),f
  9916     1600  0022               	movlb	2	; select bank2
  9917     1601  0855               	movf	(printFloat@fractional_part+1)^(0+256),w
  9918     1602  0021               	movlb	1	; select bank1
  9919     1603  00E6               	movwf	((?_printf+1)^(0+128)+4)
  9920     1604  0022               	movlb	2	; select bank2
  9921     1605  0854               	movf	printFloat@fractional_part^(0+256),w
  9922     1606  0021               	movlb	1	; select bank1
  9923     1607  00E5               	movwf	(?_printf^(0+128)+4)
  9924     1608  319C  2499  3195   	fcall	_printf
  9925     160B                     l851:
  9926     160B  0008               	return
  9927     160C                     __end_of_printFloat:
  9928                           
  9929                           	psect	text13
  9930     1C99                     __ptext13:	
  9931 ;; *************** function _printf *****************
  9932 ;; Defined at:
  9933 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\printf.c"
  9934 ;; Parameters:    Size  Location     Type
  9935 ;;  fmt             2   65[BANK1 ] PTR const unsigned char 
  9936 ;;		 -> STR_13(17), STR_12(15), STR_11(13), STR_10(13), 
  9937 ;;		 -> STR_9(25), STR_8(3), STR_7(7), STR_6(7), 
  9938 ;;		 -> STR_5(17), STR_4(15), STR_3(11), STR_2(24), 
  9939 ;;		 -> STR_1(8), 
  9940 ;; Auto vars:     Size  Location     Type
  9941 ;;  ret             2    0        int 
  9942 ;;  ap              1   71[BANK1 ] PTR void [1]
  9943 ;;		 -> ?_printf(2), 
  9944 ;; Return value:  Size  Location     Type
  9945 ;;                  2   65[BANK1 ] int 
  9946 ;; Registers used:
  9947 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  9948 ;; Tracked objects:
  9949 ;;		On entry : 0/0
  9950 ;;		On exit  : 0/0
  9951 ;;		Unchanged: 0/0
  9952 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9953 ;;      Params:         0       0       6       0       0       0       0       0       0       0       0       0       
      +0       0
  9954 ;;      Locals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0
  9955 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9956 ;;      Totals:         0       0       7       0       0       0       0       0       0       0       0       0       
      +0       0
  9957 ;;Total ram usage:        7 bytes
  9958 ;; Hardware stack levels used: 1
  9959 ;; Hardware stack levels required when called: 13
  9960 ;; This function calls:
  9961 ;;		_vfprintf
  9962 ;; This function is called by:
  9963 ;;		_printFloat
  9964 ;;		_readLine
  9965 ;;		_printLogs
  9966 ;;		_uartHandler
  9967 ;;		_printOut
  9968 ;; This function uses a non-reentrant model
  9969 ;;
  9970                           
  9971     1C99                     _printf:	
  9972                           ;psect for function _printf
  9973                           
  9974     1C99                     l5057:	
  9975                           ;incstack = 0
  9976                           ; Regs used in _printf: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  9977                           
  9978     1C99  30E3               	movlw	(low ((?_printf| 0+2)))& (0+255)
  9979     1C9A  0021               	movlb	1	; select bank1
  9980     1C9B  00E7               	movwf	printf@ap^(0+128)
  9981     1C9C                     l5059:
  9982     1C9C  3000               	movlw	0
  9983     1C9D  00D9               	movwf	vfprintf@fp^(0+128)
  9984     1C9E  00DA               	movwf	(vfprintf@fp+1)^(0+128)
  9985     1C9F  0862               	movf	(printf@fmt+1)^(0+128),w
  9986     1CA0  00DC               	movwf	(vfprintf@fmt+1)^(0+128)
  9987     1CA1  0861               	movf	printf@fmt^(0+128),w
  9988     1CA2  00DB               	movwf	vfprintf@fmt^(0+128)
  9989     1CA3  30E7               	movlw	(low (printf@ap| 0))& (0+255)
  9990     1CA4  00DD               	movwf	vfprintf@ap^(0+128)
  9991     1CA5  319E  26CB  319C   	fcall	_vfprintf
  9992     1CA8                     l1644:
  9993     1CA8  0008               	return
  9994     1CA9                     __end_of_printf:
  9995                           
  9996                           	psect	text14
  9997     1ECB                     __ptext14:	
  9998 ;; *************** function _vfprintf *****************
  9999 ;; Defined at:
 10000 ;;		line 1817 in file "C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c"
 10001 ;; Parameters:    Size  Location     Type
 10002 ;;  fp              2   57[BANK1 ] PTR struct _IO_FILE
 10003 ;;		 -> NULL(0), 
 10004 ;;  fmt             2   59[BANK1 ] PTR const unsigned char 
 10005 ;;		 -> STR_13(17), STR_12(15), STR_11(13), STR_10(13), 
 10006 ;;		 -> STR_9(25), STR_8(3), STR_7(7), STR_6(7), 
 10007 ;;		 -> STR_5(17), STR_4(15), STR_3(11), STR_2(24), 
 10008 ;;		 -> STR_1(8), 
 10009 ;;  ap              1   61[BANK1 ] PTR PTR void 
 10010 ;;		 -> printf@ap(1), 
 10011 ;; Auto vars:     Size  Location     Type
 10012 ;;  cfmt            2   63[BANK1 ] PTR unsigned char 
 10013 ;;		 -> STR_13(17), STR_12(15), STR_11(13), STR_10(13), 
 10014 ;;		 -> STR_9(25), STR_8(3), STR_7(7), STR_6(7), 
 10015 ;;		 -> STR_5(17), STR_4(15), STR_3(11), STR_2(24), 
 10016 ;;		 -> STR_1(8), 
 10017 ;; Return value:  Size  Location     Type
 10018 ;;                  2   57[BANK1 ] int 
 10019 ;; Registers used:
 10020 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 10021 ;; Tracked objects:
 10022 ;;		On entry : 0/0
 10023 ;;		On exit  : 0/0
 10024 ;;		Unchanged: 0/0
 10025 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10026 ;;      Params:         0       0       5       0       0       0       0       0       0       0       0       0       
      +0       0
 10027 ;;      Locals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0
 10028 ;;      Temps:          0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0
 10029 ;;      Totals:         0       0       8       0       0       0       0       0       0       0       0       0       
      +0       0
 10030 ;;Total ram usage:        8 bytes
 10031 ;; Hardware stack levels used: 1
 10032 ;; Hardware stack levels required when called: 12
 10033 ;; This function calls:
 10034 ;;		_vfpfcnvrt
 10035 ;; This function is called by:
 10036 ;;		_printf
 10037 ;; This function uses a non-reentrant model
 10038 ;;
 10039                           
 10040     1ECB                     _vfprintf:	
 10041                           ;psect for function _vfprintf
 10042                           
 10043     1ECB                     l4989:	
 10044                           ;incstack = 0
 10045                           ; Regs used in _vfprintf: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 10046                           
 10047                           
 10048                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1817: int vfprint
      +                          f(FILE *fp, const char *fmt, va_list ap);C:\Program Files\Microchip\xc8\v3.00\pic\source
      +                          s\c99\common\doprnt.c: 1818: {;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\comm
      +                          on\doprnt.c: 1820:     char *cfmt;;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\
      +                          common\doprnt.c: 1822:     cfmt = (char *)fmt;
 10049     1ECB  0021               	movlb	1	; select bank1
 10050     1ECC  085C               	movf	(vfprintf@fmt+1)^(0+128),w
 10051     1ECD  00E0               	movwf	(vfprintf@cfmt+1)^(0+128)
 10052     1ECE  085B               	movf	vfprintf@fmt^(0+128),w
 10053     1ECF  00DF               	movwf	vfprintf@cfmt^(0+128)
 10054     1ED0                     l4991:
 10055                           
 10056                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1824:     nout = 
      +                          0;
 10057     1ED0  0022               	movlb	2	; select bank2
 10058     1ED1  01C4               	clrf	_nout^(0+256)
 10059     1ED2  01C5               	clrf	(_nout+1)^(0+256)
 10060                           
 10061                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1826:     while (
      +                          *cfmt) {
 10062     1ED3  2EE8               	goto	l4995
 10063     1ED4                     l4993:
 10064                           
 10065                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1828:         nou
      +                          t +=
 10066     1ED4  085A               	movf	(vfprintf@fp+1)^(0+128),w
 10067     1ED5  00CA               	movwf	(vfpfcnvrt@fp+1)^(0+128)
 10068     1ED6  0859               	movf	vfprintf@fp^(0+128),w
 10069     1ED7  00C9               	movwf	vfpfcnvrt@fp^(0+128)
 10070     1ED8  30DF               	movlw	(low (vfprintf@cfmt| 0))& (0+255)
 10071     1ED9  00CB               	movwf	vfpfcnvrt@fmt^(0+128)
 10072     1EDA  085D               	movf	vfprintf@ap^(0+128),w
 10073     1EDB  00CC               	movwf	vfpfcnvrt@ap^(0+128)
 10074     1EDC  01CD               	clrf	(vfpfcnvrt@ap+1)^(0+128)
 10075     1EDD  318A  22DE  319E   	fcall	_vfpfcnvrt
 10076     1EE0  0021               	movlb	1	; select bank1
 10077     1EE1  0849               	movf	?_vfpfcnvrt^(0+128),w
 10078     1EE2  0022               	movlb	2	; select bank2
 10079     1EE3  07C4               	addwf	_nout^(0+256),f
 10080     1EE4  0021               	movlb	1	; select bank1
 10081     1EE5  084A               	movf	(?_vfpfcnvrt+1)^(0+128),w
 10082     1EE6  0022               	movlb	2	; select bank2
 10083     1EE7  3DC5               	addwfc	(_nout+1)^(0+256),f
 10084     1EE8                     l4995:
 10085                           
 10086                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1826:     while (
      +                          *cfmt) {
 10087     1EE8  0021               	movlb	1	; select bank1
 10088     1EE9  085F               	movf	vfprintf@cfmt^(0+128),w
 10089     1EEA  0084               	movwf	4
 10090     1EEB  0860               	movf	(vfprintf@cfmt+1)^(0+128),w
 10091     1EEC  0085               	movwf	5
 10092     1EED  0012               	moviw fsr0++
 10093     1EEE  1D03               	btfss	3,2
 10094     1EEF  2EF1               	goto	u5691
 10095     1EF0  2EF2               	goto	u5690
 10096     1EF1                     u5691:
 10097     1EF1  2ED4               	goto	l4993
 10098     1EF2                     u5690:
 10099     1EF2                     l4997:
 10100                           
 10101                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1835:  return 0;
 10102     1EF2  01D9               	clrf	?_vfprintf^(0+128)
 10103     1EF3  01DA               	clrf	(?_vfprintf+1)^(0+128)
 10104     1EF4                     l1736:
 10105     1EF4  0008               	return
 10106     1EF5                     __end_of_vfprintf:
 10107                           
 10108                           	psect	text15
 10109     0ADE                     __ptext15:	
 10110 ;; *************** function _vfpfcnvrt *****************
 10111 ;; Defined at:
 10112 ;;		line 1177 in file "C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c"
 10113 ;; Parameters:    Size  Location     Type
 10114 ;;  fp              2   41[BANK1 ] PTR struct _IO_FILE
 10115 ;;		 -> NULL(0), 
 10116 ;;  fmt             1   43[BANK1 ] PTR PTR unsigned char 
 10117 ;;		 -> vfprintf@cfmt(2), 
 10118 ;;  ap              2   44[BANK1 ] PTR PTR void 
 10119 ;;		 -> printf@ap(1), 
 10120 ;; Auto vars:     Size  Location     Type
 10121 ;;  convarg         4   51[BANK1 ] struct .
 10122 ;;  cp              2   55[BANK1 ] PTR unsigned char 
 10123 ;;		 -> STR_13(17), STR_12(15), STR_11(13), STR_10(13), 
 10124 ;;		 -> STR_9(25), STR_8(3), STR_7(7), STR_6(7), 
 10125 ;;		 -> STR_5(17), STR_4(15), STR_3(11), STR_2(24), 
 10126 ;;		 -> STR_1(8), 
 10127 ;;  done            1   50[BANK1 ] _Bool 
 10128 ;;  c               1    0        unsigned char 
 10129 ;; Return value:  Size  Location     Type
 10130 ;;                  2   41[BANK1 ] int 
 10131 ;; Registers used:
 10132 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 10133 ;; Tracked objects:
 10134 ;;		On entry : 0/0
 10135 ;;		On exit  : 0/0
 10136 ;;		Unchanged: 0/0
 10137 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10138 ;;      Params:         0       0       5       0       0       0       0       0       0       0       0       0       
      +0       0
 10139 ;;      Locals:         0       0       7       0       0       0       0       0       0       0       0       0       
      +0       0
 10140 ;;      Temps:          0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0
 10141 ;;      Totals:         0       0      16       0       0       0       0       0       0       0       0       0       
      +0       0
 10142 ;;Total ram usage:       16 bytes
 10143 ;; Hardware stack levels used: 1
 10144 ;; Hardware stack levels required when called: 11
 10145 ;; This function calls:
 10146 ;;		_dtoa
 10147 ;;		_fputc
 10148 ;;		_read_prec_or_width
 10149 ;;		_utoa
 10150 ;; This function is called by:
 10151 ;;		_vfprintf
 10152 ;; This function uses a non-reentrant model
 10153 ;;
 10154                           
 10155     0ADE                     _vfpfcnvrt:	
 10156                           ;psect for function _vfpfcnvrt
 10157                           
 10158     0ADE                     l4883:	
 10159                           ;incstack = 0
 10160                           ; Regs used in _vfpfcnvrt: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 10161                           
 10162                           
 10163                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1177: vfpfcnvrt(F
      +                          ILE *fp, char *fmt[], va_list ap);C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\c
      +                          ommon\doprnt.c: 1178: {;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\dopr
      +                          nt.c: 1179:     char c, *cp;;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common
      +                          \doprnt.c: 1180:     _Bool done;;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\co
      +                          mmon\doprnt.c: 1188:  } convarg;;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\co
      +                          mmon\doprnt.c: 1201:     if ((*fmt)[0] == '%') {
 10164     0ADE  0021               	movlb	1	; select bank1
 10165     0ADF  084B               	movf	vfpfcnvrt@fmt^(0+128),w
 10166     0AE0  0086               	movwf	6
 10167     0AE1  0187               	clrf	7
 10168     0AE2  3F40               	moviw [0]fsr1
 10169     0AE3  00CE               	movwf	??_vfpfcnvrt^(0+128)
 10170     0AE4  3F41               	moviw [1]fsr1
 10171     0AE5  00CF               	movwf	(??_vfpfcnvrt^(0+128)+1)
 10172     0AE6  084E               	movf	??_vfpfcnvrt^(0+128),w
 10173     0AE7  0084               	movwf	4
 10174     0AE8  084F               	movf	(??_vfpfcnvrt+1)^(0+128),w
 10175     0AE9  0085               	movwf	5
 10176     0AEA  0012               	moviw fsr0++
 10177     0AEB  3A25               	xorlw	37
 10178     0AEC  1D03               	btfss	3,2
 10179     0AED  2AEF               	goto	u5611
 10180     0AEE  2AF0               	goto	u5610
 10181     0AEF                     u5611:
 10182     0AEF  2C2C               	goto	l4963
 10183     0AF0                     u5610:
 10184     0AF0                     l4885:
 10185                           
 10186                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1202:         ++*
      +                          fmt;
 10187     0AF0  084B               	movf	vfpfcnvrt@fmt^(0+128),w
 10188     0AF1  0086               	movwf	6
 10189     0AF2  0187               	clrf	7
 10190     0AF3  3001               	movlw	1
 10191     0AF4  0781               	addwf	1,f
 10192     0AF5  3141               	addfsr 1,1
 10193     0AF6  1803               	skipnc
 10194     0AF7  0A81               	incf	1,f
 10195     0AF8                     l4887:
 10196                           
 10197                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1204:         fla
      +                          gs = width = 0;
 10198     0AF8  0020               	movlb	0	; select bank0
 10199     0AF9  01D5               	clrf	_width
 10200     0AFA  01D6               	clrf	_width+1
 10201     0AFB  3000               	movlw	0
 10202     0AFC  00E3               	movwf	_flags
 10203     0AFD                     l4889:
 10204                           
 10205                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1205:         pre
      +                          c = -1;
 10206     0AFD  30FF               	movlw	255
 10207     0AFE  0022               	movlb	2	; select bank2
 10208     0AFF  00C6               	movwf	_prec^(0+256)
 10209     0B00  30FF               	movlw	255
 10210     0B01  00C7               	movwf	(_prec^(0+256)+1)
 10211     0B02                     l4891:
 10212                           
 10213                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1209:         don
      +                          e = 0;
 10214     0B02  0021               	movlb	1	; select bank1
 10215     0B03  01D2               	clrf	vfpfcnvrt@done^(0+128)
 10216                           
 10217                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1210:         whi
      +                          le (!done) {
 10218     0B04  2B24               	goto	l4899
 10219     0B05                     l1714:	
 10220                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1219:            
      +                               case '0' :
 10221                           
 10222                           
 10223                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1220:            
      +                                   flags |= (1 << 1);
 10224     0B05  0020               	movlb	0	; select bank0
 10225     0B06  14E3               	bsf	_flags,1
 10226     0B07                     l4893:
 10227                           
 10228                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1221:            
      +                                   ++*fmt;
 10229     0B07  0021               	movlb	1	; select bank1
 10230     0B08  084B               	movf	vfpfcnvrt@fmt^(0+128),w
 10231     0B09  0086               	movwf	6
 10232     0B0A  0187               	clrf	7
 10233     0B0B  3001               	movlw	1
 10234     0B0C  0781               	addwf	1,f
 10235     0B0D  3141               	addfsr 1,1
 10236     0B0E  1803               	skipnc
 10237     0B0F  0A81               	incf	1,f
 10238                           
 10239                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1222:            
      +                                   break;
 10240     0B10  2B24               	goto	l4899
 10241     0B11                     l1716:	
 10242                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1242:            
      +                               default:
 10243                           
 10244                           
 10245                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1243:            
      +                                   done = 1;
 10246     0B11  3001               	movlw	1
 10247     0B12  00D2               	movwf	vfpfcnvrt@done^(0+128)
 10248                           
 10249                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1244:            
      +                                   break;
 10250     0B13  2B24               	goto	l4899
 10251     0B14                     l4897:
 10252     0B14  084B               	movf	vfpfcnvrt@fmt^(0+128),w
 10253     0B15  0086               	movwf	6
 10254     0B16  0187               	clrf	7
 10255     0B17  3F40               	moviw [0]fsr1
 10256     0B18  00CE               	movwf	??_vfpfcnvrt^(0+128)
 10257     0B19  3F41               	moviw [1]fsr1
 10258     0B1A  00CF               	movwf	(??_vfpfcnvrt^(0+128)+1)
 10259     0B1B  084E               	movf	??_vfpfcnvrt^(0+128),w
 10260     0B1C  0084               	movwf	4
 10261     0B1D  084F               	movf	(??_vfpfcnvrt+1)^(0+128),w
 10262     0B1E  0085               	movwf	5
 10263     0B1F  0800               	movf	0,w	;code access
 10264                           
 10265                           ; Switch size 1, requested type "simple"
 10266                           ; Number of cases is 1, Range of values is 48 to 48
 10267                           ; switch strategies available:
 10268                           ; Name         Instructions Cycles
 10269                           ; simple_byte            4     3 (average)
 10270                           ; direct_byte           11     9 (fixed)
 10271                           ; jumptable            263     9 (fixed)
 10272                           ;	Chosen strategy is simple_byte
 10273     0B20  3A30               	xorlw	48	; case 48
 10274     0B21  1903               	skipnz
 10275     0B22  2B05               	goto	l1714
 10276     0B23  2B11               	goto	l1716
 10277     0B24                     l4899:
 10278                           
 10279                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1210:         whi
      +                          le (!done) {
 10280     0B24  0852               	movf	vfpfcnvrt@done^(0+128),w
 10281     0B25  1903               	btfsc	3,2
 10282     0B26  2B28               	goto	u5621
 10283     0B27  2B29               	goto	u5620
 10284     0B28                     u5621:
 10285     0B28  2B14               	goto	l4897
 10286     0B29                     u5620:
 10287     0B29                     l4901:
 10288                           
 10289                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1256:   width = r
      +                          ead_prec_or_width(fmt, ap);
 10290     0B29  084B               	movf	vfpfcnvrt@fmt^(0+128),w
 10291     0B2A  00A6               	movwf	read_prec_or_width@fmt^(0+128)
 10292     0B2B  084C               	movf	vfpfcnvrt@ap^(0+128),w
 10293     0B2C  00A7               	movwf	read_prec_or_width@ap^(0+128)
 10294     0B2D  3192  2211  318A   	fcall	_read_prec_or_width
 10295     0B30  0021               	movlb	1	; select bank1
 10296     0B31  0827               	movf	(?_read_prec_or_width+1)^(0+128),w
 10297     0B32  0020               	movlb	0	; select bank0
 10298     0B33  00D6               	movwf	_width+1
 10299     0B34  0021               	movlb	1	; select bank1
 10300     0B35  0826               	movf	?_read_prec_or_width^(0+128),w
 10301     0B36  0020               	movlb	0	; select bank0
 10302     0B37  00D5               	movwf	_width
 10303     0B38                     l4903:
 10304                           
 10305                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1257:   if (width
      +                           < 0) {
 10306     0B38  1FD6               	btfss	_width+1,7
 10307     0B39  2B3B               	goto	u5631
 10308     0B3A  2B3C               	goto	u5630
 10309     0B3B                     u5631:
 10310     0B3B  2B42               	goto	l4909
 10311     0B3C                     u5630:
 10312     0B3C                     l4905:
 10313                           
 10314                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1258:    flags |=
      +                           (1 << 0);
 10315     0B3C  1463               	bsf	_flags,0
 10316     0B3D                     l4907:
 10317                           
 10318                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1259:    width = 
      +                          -width;
 10319     0B3D  09D5               	comf	_width,f
 10320     0B3E  09D6               	comf	_width+1,f
 10321     0B3F  0AD5               	incf	_width,f
 10322     0B40  1903               	skipnz
 10323     0B41  0AD6               	incf	_width+1,f
 10324     0B42                     l4909:
 10325                           
 10326                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1291:   cp = *fmt
      +                          ;
 10327     0B42  0021               	movlb	1	; select bank1
 10328     0B43  084B               	movf	vfpfcnvrt@fmt^(0+128),w
 10329     0B44  0086               	movwf	6
 10330     0B45  0187               	clrf	7
 10331     0B46  3F40               	moviw [0]fsr1
 10332     0B47  00D7               	movwf	vfpfcnvrt@cp^(0+128)
 10333     0B48  3F41               	moviw [1]fsr1
 10334     0B49  00D8               	movwf	(vfpfcnvrt@cp+1)^(0+128)
 10335     0B4A                     l4911:
 10336                           
 10337                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1361:   if (*cp =
      +                          = 'd' || *cp == 'i') {
 10338     0B4A  0857               	movf	vfpfcnvrt@cp^(0+128),w
 10339     0B4B  0084               	movwf	4
 10340     0B4C  0858               	movf	(vfpfcnvrt@cp+1)^(0+128),w
 10341     0B4D  0085               	movwf	5
 10342     0B4E  0012               	moviw fsr0++
 10343     0B4F  3A64               	xorlw	100
 10344     0B50  1903               	btfsc	3,2
 10345     0B51  2B53               	goto	u5641
 10346     0B52  2B54               	goto	u5640
 10347     0B53                     u5641:
 10348     0B53  2B5E               	goto	l4915
 10349     0B54                     u5640:
 10350     0B54                     l4913:
 10351     0B54  0857               	movf	vfpfcnvrt@cp^(0+128),w
 10352     0B55  0084               	movwf	4
 10353     0B56  0858               	movf	(vfpfcnvrt@cp+1)^(0+128),w
 10354     0B57  0085               	movwf	5
 10355     0B58  0012               	moviw fsr0++
 10356     0B59  3A69               	xorlw	105
 10357     0B5A  1D03               	btfss	3,2
 10358     0B5B  2B5D               	goto	u5651
 10359     0B5C  2B5E               	goto	u5650
 10360     0B5D                     u5651:
 10361     0B5D  2B89               	goto	l4923
 10362     0B5E                     u5650:
 10363     0B5E                     l4915:
 10364                           
 10365                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1404:    convarg.
      +                          sint = (vfpf_sint_t)(int)(*(int *)__va_arg(*(int **)ap, (int)0));
 10366     0B5E  084C               	movf	vfpfcnvrt@ap^(0+128),w
 10367     0B5F  0086               	movwf	6
 10368     0B60  084D               	movf	(vfpfcnvrt@ap+1)^(0+128),w
 10369     0B61  0087               	movwf	7
 10370     0B62  0801               	movf	1,w
 10371     0B63  0084               	movwf	4
 10372     0B64  0185               	clrf	5
 10373     0B65  3002               	movlw	2
 10374     0B66  0781               	addwf	1,f
 10375     0B67  3F00               	moviw [0]fsr0
 10376     0B68  00D3               	movwf	vfpfcnvrt@convarg^(0+128)
 10377     0B69  3F01               	moviw [1]fsr0
 10378     0B6A  00D4               	movwf	(vfpfcnvrt@convarg+1)^(0+128)
 10379     0B6B                     l4917:
 10380                           
 10381                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1406:    *fmt = c
      +                          p+1;
 10382     0B6B  0857               	movf	vfpfcnvrt@cp^(0+128),w
 10383     0B6C  3E01               	addlw	1
 10384     0B6D  00CE               	movwf	??_vfpfcnvrt^(0+128)
 10385     0B6E  3000               	movlw	0
 10386     0B6F  3D58               	addwfc	(vfpfcnvrt@cp+1)^(0+128),w
 10387     0B70  00CF               	movwf	(??_vfpfcnvrt+1)^(0+128)
 10388     0B71  084B               	movf	vfpfcnvrt@fmt^(0+128),w
 10389     0B72  0086               	movwf	6
 10390     0B73  0187               	clrf	7
 10391     0B74  084E               	movf	??_vfpfcnvrt^(0+128),w
 10392     0B75  3FC0               	movwi [0]fsr1
 10393     0B76  084F               	movf	(??_vfpfcnvrt+1)^(0+128),w
 10394     0B77  3FC1               	movwi [1]fsr1
 10395     0B78                     l4919:
 10396                           
 10397                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1432:    return (
      +                          int) dtoa(fp, convarg.sint);
 10398     0B78  084A               	movf	(vfpfcnvrt@fp+1)^(0+128),w
 10399     0B79  00BD               	movwf	(dtoa@fp+1)^(0+128)
 10400     0B7A  0849               	movf	vfpfcnvrt@fp^(0+128),w
 10401     0B7B  00BC               	movwf	dtoa@fp^(0+128)
 10402     0B7C  0854               	movf	(vfpfcnvrt@convarg+1)^(0+128),w
 10403     0B7D  00BF               	movwf	(dtoa@d+1)^(0+128)
 10404     0B7E  0853               	movf	vfpfcnvrt@convarg^(0+128),w
 10405     0B7F  00BE               	movwf	dtoa@d^(0+128)
 10406     0B80  3187  2710  318A   	fcall	_dtoa
 10407     0B83  0021               	movlb	1	; select bank1
 10408     0B84  083D               	movf	(?_dtoa+1)^(0+128),w
 10409     0B85  00CA               	movwf	(?_vfpfcnvrt+1)^(0+128)
 10410     0B86  083C               	movf	?_dtoa^(0+128),w
 10411     0B87  00C9               	movwf	?_vfpfcnvrt^(0+128)
 10412     0B88  2C4F               	goto	l1722
 10413     0B89                     l4923:
 10414     0B89  0857               	movf	vfpfcnvrt@cp^(0+128),w
 10415     0B8A  0084               	movwf	4
 10416     0B8B  0858               	movf	(vfpfcnvrt@cp+1)^(0+128),w
 10417     0B8C  0085               	movwf	5
 10418     0B8D  0012               	moviw fsr0++
 10419     0B8E  3A75               	xorlw	117
 10420     0B8F  1D03               	btfss	3,2
 10421     0B90  2B92               	goto	u5661
 10422     0B91  2B93               	goto	u5660
 10423     0B92                     u5661:
 10424     0B92  2BC8               	goto	l4937
 10425     0B93                     u5660:
 10426     0B93                     l4925:
 10427                           
 10428                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1452:     ) {;C:\
      +                          Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1495:    convarg.uint
      +                           = (vfpf_uint_t)(unsigned int)(*(unsigned int *)__va_arg(*(unsigned int **)ap, (unsigned
      +                           int)0));
 10429     0B93  084C               	movf	vfpfcnvrt@ap^(0+128),w
 10430     0B94  0086               	movwf	6
 10431     0B95  084D               	movf	(vfpfcnvrt@ap+1)^(0+128),w
 10432     0B96  0087               	movwf	7
 10433     0B97  0801               	movf	1,w
 10434     0B98  0084               	movwf	4
 10435     0B99  0185               	clrf	5
 10436     0B9A  3002               	movlw	2
 10437     0B9B  0781               	addwf	1,f
 10438     0B9C  3F00               	moviw [0]fsr0
 10439     0B9D  00D3               	movwf	vfpfcnvrt@convarg^(0+128)
 10440     0B9E  3F01               	moviw [1]fsr0
 10441     0B9F  00D4               	movwf	(vfpfcnvrt@convarg+1)^(0+128)
 10442     0BA0                     l4927:
 10443                           
 10444                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1497:    *fmt = c
      +                          p+1;
 10445     0BA0  0857               	movf	vfpfcnvrt@cp^(0+128),w
 10446     0BA1  3E01               	addlw	1
 10447     0BA2  00CE               	movwf	??_vfpfcnvrt^(0+128)
 10448     0BA3  3000               	movlw	0
 10449     0BA4  3D58               	addwfc	(vfpfcnvrt@cp+1)^(0+128),w
 10450     0BA5  00CF               	movwf	(??_vfpfcnvrt+1)^(0+128)
 10451     0BA6  084B               	movf	vfpfcnvrt@fmt^(0+128),w
 10452     0BA7  0086               	movwf	6
 10453     0BA8  0187               	clrf	7
 10454     0BA9  084E               	movf	??_vfpfcnvrt^(0+128),w
 10455     0BAA  3FC0               	movwi [0]fsr1
 10456     0BAB  084F               	movf	(??_vfpfcnvrt+1)^(0+128),w
 10457     0BAC  3FC1               	movwi [1]fsr1
 10458                           
 10459                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1498:    switch (
      +                          *cp) {
 10460     0BAD  2BBF               	goto	l4935
 10461     0BAE                     l4929:
 10462                           
 10463                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1542:      return
      +                           (int) utoa(fp, convarg.uint);
 10464     0BAE  084A               	movf	(vfpfcnvrt@fp+1)^(0+128),w
 10465     0BAF  00BD               	movwf	(utoa@fp+1)^(0+128)
 10466     0BB0  0849               	movf	vfpfcnvrt@fp^(0+128),w
 10467     0BB1  00BC               	movwf	utoa@fp^(0+128)
 10468     0BB2  0854               	movf	(vfpfcnvrt@convarg+1)^(0+128),w
 10469     0BB3  00BF               	movwf	(utoa@d+1)^(0+128)
 10470     0BB4  0853               	movf	vfpfcnvrt@convarg^(0+128),w
 10471     0BB5  00BE               	movwf	utoa@d^(0+128)
 10472     0BB6  3194  2419  318A   	fcall	_utoa
 10473     0BB9  0021               	movlb	1	; select bank1
 10474     0BBA  083D               	movf	(?_utoa+1)^(0+128),w
 10475     0BBB  00CA               	movwf	(?_vfpfcnvrt+1)^(0+128)
 10476     0BBC  083C               	movf	?_utoa^(0+128),w
 10477     0BBD  00C9               	movwf	?_vfpfcnvrt^(0+128)
 10478     0BBE  2C4F               	goto	l1722
 10479     0BBF                     l4935:
 10480     0BBF  0857               	movf	vfpfcnvrt@cp^(0+128),w
 10481     0BC0  0084               	movwf	4
 10482     0BC1  0858               	movf	(vfpfcnvrt@cp+1)^(0+128),w
 10483     0BC2  0085               	movwf	5
 10484     0BC3  0800               	movf	0,w	;code access
 10485                           
 10486                           ; Switch size 1, requested type "simple"
 10487                           ; Number of cases is 1, Range of values is 117 to 117
 10488                           ; switch strategies available:
 10489                           ; Name         Instructions Cycles
 10490                           ; simple_byte            4     3 (average)
 10491                           ; direct_byte           11     9 (fixed)
 10492                           ; jumptable            263     9 (fixed)
 10493                           ;	Chosen strategy is simple_byte
 10494     0BC4  3A75               	xorlw	117	; case 117
 10495     0BC5  1903               	skipnz
 10496     0BC6  2BAE               	goto	l4929
 10497     0BC7  2BC8               	goto	l4937
 10498     0BC8                     l4937:
 10499                           
 10500                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1595:   if (*cp =
      +                          = 'n') {
 10501     0BC8  0857               	movf	vfpfcnvrt@cp^(0+128),w
 10502     0BC9  0084               	movwf	4
 10503     0BCA  0858               	movf	(vfpfcnvrt@cp+1)^(0+128),w
 10504     0BCB  0085               	movwf	5
 10505     0BCC  0012               	moviw fsr0++
 10506     0BCD  3A6E               	xorlw	110
 10507     0BCE  1D03               	btfss	3,2
 10508     0BCF  2BD1               	goto	u5671
 10509     0BD0  2BD2               	goto	u5670
 10510     0BD1                     u5671:
 10511     0BD1  2BF9               	goto	l4947
 10512     0BD2                     u5670:
 10513     0BD2                     l4939:
 10514                           
 10515                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1638:    *(*(int*
      +                           *)__va_arg(*(int* **)ap, (int*)0)) = (int) nout;
 10516     0BD2  084C               	movf	vfpfcnvrt@ap^(0+128),w
 10517     0BD3  0086               	movwf	6
 10518     0BD4  084D               	movf	(vfpfcnvrt@ap+1)^(0+128),w
 10519     0BD5  0087               	movwf	7
 10520     0BD6  0801               	movf	1,w
 10521     0BD7  0084               	movwf	4
 10522     0BD8  0185               	clrf	5
 10523     0BD9  3002               	movlw	2
 10524     0BDA  0781               	addwf	1,f
 10525     0BDB  3F00               	moviw [0]fsr0
 10526     0BDC  00CE               	movwf	??_vfpfcnvrt^(0+128)
 10527     0BDD  3F01               	moviw [1]fsr0
 10528     0BDE  00CF               	movwf	(??_vfpfcnvrt^(0+128)+1)
 10529     0BDF  084E               	movf	??_vfpfcnvrt^(0+128),w
 10530     0BE0  0086               	movwf	6
 10531     0BE1  084F               	movf	(??_vfpfcnvrt+1)^(0+128),w
 10532     0BE2  0087               	movwf	7
 10533     0BE3  0022               	movlb	2	; select bank2
 10534     0BE4  0844               	movf	_nout^(0+256),w
 10535     0BE5  3FC0               	movwi [0]fsr1
 10536     0BE6  0845               	movf	(_nout+1)^(0+256),w
 10537     0BE7  3FC1               	movwi [1]fsr1
 10538     0BE8                     l4941:
 10539                           
 10540                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1640:    *fmt = c
      +                          p+1;
 10541     0BE8  0021               	movlb	1	; select bank1
 10542     0BE9  0857               	movf	vfpfcnvrt@cp^(0+128),w
 10543     0BEA  3E01               	addlw	1
 10544     0BEB  00CE               	movwf	??_vfpfcnvrt^(0+128)
 10545     0BEC  3000               	movlw	0
 10546     0BED  3D58               	addwfc	(vfpfcnvrt@cp+1)^(0+128),w
 10547     0BEE  00CF               	movwf	(??_vfpfcnvrt+1)^(0+128)
 10548     0BEF  084B               	movf	vfpfcnvrt@fmt^(0+128),w
 10549     0BF0  0086               	movwf	6
 10550     0BF1  0187               	clrf	7
 10551     0BF2  084E               	movf	??_vfpfcnvrt^(0+128),w
 10552     0BF3  3FC0               	movwi [0]fsr1
 10553     0BF4  084F               	movf	(??_vfpfcnvrt+1)^(0+128),w
 10554     0BF5  3FC1               	movwi [1]fsr1
 10555     0BF6                     l4943:
 10556                           
 10557                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1641:    return (
      +                          int) 0;
 10558     0BF6  01C9               	clrf	?_vfpfcnvrt^(0+128)
 10559     0BF7  01CA               	clrf	(?_vfpfcnvrt+1)^(0+128)
 10560     0BF8  2C4F               	goto	l1722
 10561     0BF9                     l4947:
 10562                           
 10563                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1798:         if 
      +                          ((*fmt)[0] == '%') {
 10564     0BF9  084B               	movf	vfpfcnvrt@fmt^(0+128),w
 10565     0BFA  0086               	movwf	6
 10566     0BFB  0187               	clrf	7
 10567     0BFC  3F40               	moviw [0]fsr1
 10568     0BFD  00CE               	movwf	??_vfpfcnvrt^(0+128)
 10569     0BFE  3F41               	moviw [1]fsr1
 10570     0BFF  00CF               	movwf	(??_vfpfcnvrt^(0+128)+1)
 10571     0C00  084E               	movf	??_vfpfcnvrt^(0+128),w
 10572     0C01  0084               	movwf	4
 10573     0C02  084F               	movf	(??_vfpfcnvrt+1)^(0+128),w
 10574     0C03  0085               	movwf	5
 10575     0C04  0012               	moviw fsr0++
 10576     0C05  3A25               	xorlw	37
 10577     0C06  1D03               	btfss	3,2
 10578     0C07  2C09               	goto	u5681
 10579     0C08  2C0A               	goto	u5680
 10580     0C09                     u5681:
 10581     0C09  2C23               	goto	l4957
 10582     0C0A                     u5680:
 10583     0C0A                     l4949:
 10584                           
 10585                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1799:            
      +                           ++*fmt;
 10586     0C0A  084B               	movf	vfpfcnvrt@fmt^(0+128),w
 10587     0C0B  0086               	movwf	6
 10588     0C0C  0187               	clrf	7
 10589     0C0D  3001               	movlw	1
 10590     0C0E  0781               	addwf	1,f
 10591     0C0F  3141               	addfsr 1,1
 10592     0C10  1803               	skipnc
 10593     0C11  0A81               	incf	1,f
 10594     0C12                     l4951:
 10595                           
 10596                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1800:            
      +                           fputc((int)'%', fp);
 10597     0C12  3025               	movlw	37
 10598     0C13  00A3               	movwf	fputc@c^(0+128)
 10599     0C14  3000               	movlw	0
 10600     0C15  00A4               	movwf	(fputc@c^(0+128)+1)
 10601     0C16  084A               	movf	(vfpfcnvrt@fp+1)^(0+128),w
 10602     0C17  00A6               	movwf	(fputc@fp+1)^(0+128)
 10603     0C18  0849               	movf	vfpfcnvrt@fp^(0+128),w
 10604     0C19  00A5               	movwf	fputc@fp^(0+128)
 10605     0C1A  3192  226D  318A   	fcall	_fputc
 10606     0C1D                     l4953:
 10607                           
 10608                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1801:            
      +                           return (int) 1;
 10609     0C1D  3001               	movlw	1
 10610     0C1E  0021               	movlb	1	; select bank1
 10611     0C1F  00C9               	movwf	?_vfpfcnvrt^(0+128)
 10612     0C20  3000               	movlw	0
 10613     0C21  00CA               	movwf	(?_vfpfcnvrt^(0+128)+1)
 10614     0C22  2C4F               	goto	l1722
 10615     0C23                     l4957:
 10616                           
 10617                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1806:         ++*
      +                          fmt;
 10618     0C23  084B               	movf	vfpfcnvrt@fmt^(0+128),w
 10619     0C24  0086               	movwf	6
 10620     0C25  0187               	clrf	7
 10621     0C26  3001               	movlw	1
 10622     0C27  0781               	addwf	1,f
 10623     0C28  3141               	addfsr 1,1
 10624     0C29  1803               	skipnc
 10625     0C2A  0A81               	incf	1,f
 10626     0C2B  2BF6               	goto	l4943
 10627     0C2C                     l4963:
 10628                           
 10629                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1811:     fputc((
      +                          int)(*fmt)[0], fp);
 10630     0C2C  084B               	movf	vfpfcnvrt@fmt^(0+128),w
 10631     0C2D  0086               	movwf	6
 10632     0C2E  0187               	clrf	7
 10633     0C2F  3F40               	moviw [0]fsr1
 10634     0C30  00CE               	movwf	??_vfpfcnvrt^(0+128)
 10635     0C31  3F41               	moviw [1]fsr1
 10636     0C32  00CF               	movwf	(??_vfpfcnvrt^(0+128)+1)
 10637     0C33  084E               	movf	??_vfpfcnvrt^(0+128),w
 10638     0C34  0084               	movwf	4
 10639     0C35  084F               	movf	(??_vfpfcnvrt+1)^(0+128),w
 10640     0C36  0085               	movwf	5
 10641     0C37  0800               	movf	0,w	;code access
 10642     0C38  00D0               	movwf	(??_vfpfcnvrt+2)^(0+128)
 10643     0C39  01D1               	clrf	((??_vfpfcnvrt+2)^(0+128)+1)
 10644     0C3A  0850               	movf	(??_vfpfcnvrt+2)^(0+128),w
 10645     0C3B  00A3               	movwf	fputc@c^(0+128)
 10646     0C3C  0851               	movf	(??_vfpfcnvrt+3)^(0+128),w
 10647     0C3D  00A4               	movwf	(fputc@c+1)^(0+128)
 10648     0C3E  084A               	movf	(vfpfcnvrt@fp+1)^(0+128),w
 10649     0C3F  00A6               	movwf	(fputc@fp+1)^(0+128)
 10650     0C40  0849               	movf	vfpfcnvrt@fp^(0+128),w
 10651     0C41  00A5               	movwf	fputc@fp^(0+128)
 10652     0C42  3192  226D  318A   	fcall	_fputc
 10653     0C45                     l4965:
 10654                           
 10655                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1812:     ++*fmt;
 10656     0C45  0021               	movlb	1	; select bank1
 10657     0C46  084B               	movf	vfpfcnvrt@fmt^(0+128),w
 10658     0C47  0086               	movwf	6
 10659     0C48  0187               	clrf	7
 10660     0C49  3001               	movlw	1
 10661     0C4A  0781               	addwf	1,f
 10662     0C4B  3141               	addfsr 1,1
 10663     0C4C  1803               	skipnc
 10664     0C4D  0A81               	incf	1,f
 10665     0C4E  2C1D               	goto	l4953
 10666     0C4F                     l1722:
 10667     0C4F  0008               	return
 10668     0C50                     __end_of_vfpfcnvrt:
 10669                           
 10670                           	psect	text16
 10671     1419                     __ptext16:	
 10672 ;; *************** function _utoa *****************
 10673 ;; Defined at:
 10674 ;;		line 1001 in file "C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c"
 10675 ;; Parameters:    Size  Location     Type
 10676 ;;  fp              2   28[BANK1 ] PTR struct _IO_FILE
 10677 ;;		 -> NULL(0), 
 10678 ;;  d               2   30[BANK1 ] unsigned int 
 10679 ;; Auto vars:     Size  Location     Type
 10680 ;;  i               2   36[BANK1 ] int 
 10681 ;;  w               2   34[BANK1 ] int 
 10682 ;;  p               1   33[BANK1 ] _Bool 
 10683 ;; Return value:  Size  Location     Type
 10684 ;;                  2   28[BANK1 ] int 
 10685 ;; Registers used:
 10686 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 10687 ;; Tracked objects:
 10688 ;;		On entry : 0/0
 10689 ;;		On exit  : 0/0
 10690 ;;		Unchanged: 0/0
 10691 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10692 ;;      Params:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0
 10693 ;;      Locals:         0       0       5       0       0       0       0       0       0       0       0       0       
      +0       0
 10694 ;;      Temps:          0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0
 10695 ;;      Totals:         0       0      10       0       0       0       0       0       0       0       0       0       
      +0       0
 10696 ;;Total ram usage:       10 bytes
 10697 ;; Hardware stack levels used: 1
 10698 ;; Hardware stack levels required when called: 10
 10699 ;; This function calls:
 10700 ;;		___lwdiv
 10701 ;;		___lwmod
 10702 ;;		_pad
 10703 ;; This function is called by:
 10704 ;;		_vfpfcnvrt
 10705 ;; This function uses a non-reentrant model
 10706 ;;
 10707                           
 10708     1419                     _utoa:	
 10709                           ;psect for function _utoa
 10710                           
 10711     1419                     l4417:	
 10712                           ;incstack = 0
 10713                           ; Regs used in _utoa: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 10714                           
 10715                           
 10716                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1001: static int 
      +                          utoa(FILE *fp, vfpf_uint_t d);C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\commo
      +                          n\doprnt.c: 1002: {;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c
      +                          : 1003:     int i, w;;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt
      +                          .c: 1007:  _Bool p = 1;
 10717     1419  3001               	movlw	1
 10718     141A  0021               	movlb	1	; select bank1
 10719     141B  00C1               	movwf	utoa@p^(0+128)
 10720     141C                     l4419:
 10721                           
 10722                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1019:     w = wid
      +                          th;
 10723     141C  0020               	movlb	0	; select bank0
 10724     141D  0856               	movf	_width+1,w
 10725     141E  0021               	movlb	1	; select bank1
 10726     141F  00C3               	movwf	(utoa@w+1)^(0+128)
 10727     1420  0020               	movlb	0	; select bank0
 10728     1421  0855               	movf	_width,w
 10729     1422  0021               	movlb	1	; select bank1
 10730     1423  00C2               	movwf	utoa@w^(0+128)
 10731                           
 10732                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1022:     i = siz
      +                          eof(dbuf) - 1;
 10733     1424  301F               	movlw	31
 10734     1425  00C4               	movwf	utoa@i^(0+128)
 10735     1426  3000               	movlw	0
 10736     1427  00C5               	movwf	(utoa@i^(0+128)+1)
 10737     1428                     l4421:
 10738                           
 10739                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1023:     dbuf[i]
      +                           = '\0';
 10740     1428  0023               	movlb	3	; select bank3
 10741     1429  01BF               	clrf	(_dbuf^(0+384)+31)
 10742                           
 10743                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1024:     while (
      +                          i && (d != 0
 10744     142A  2C59               	goto	l4433
 10745     142B                     l4423:
 10746                           
 10747                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1033:     )) {;C:
      +                          \Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1034:         --i;
 10748     142B  30FF               	movlw	255
 10749     142C  0021               	movlb	1	; select bank1
 10750     142D  07C4               	addwf	utoa@i^(0+128),f
 10751     142E  30FF               	movlw	255
 10752     142F  3DC5               	addwfc	(utoa@i+1)^(0+128),f
 10753     1430                     l4425:
 10754                           
 10755                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1035:         dbu
      +                          f[i] = '0' + (d % 10);
 10756     1430  0844               	movf	utoa@i^(0+128),w
 10757     1431  3EA0               	addlw	(low (_dbuf| (0+256)))& (0+255)
 10758     1432  0086               	movwf	6
 10759     1433  3001               	movlw	1	; select bank3/4
 10760     1434  0087               	movwf	7
 10761     1435  300A               	movlw	10
 10762     1436  00A0               	movwf	___lwmod@divisor^(0+128)
 10763     1437  3000               	movlw	0
 10764     1438  00A1               	movwf	(___lwmod@divisor^(0+128)+1)
 10765     1439  083F               	movf	(utoa@d+1)^(0+128),w
 10766     143A  00A3               	movwf	(___lwmod@dividend+1)^(0+128)
 10767     143B  083E               	movf	utoa@d^(0+128),w
 10768     143C  00A2               	movwf	___lwmod@dividend^(0+128)
 10769     143D  319F  274E  3194   	fcall	___lwmod
 10770     1440  0021               	movlb	1	; select bank1
 10771     1441  0820               	movf	?___lwmod^(0+128),w
 10772     1442  3E30               	addlw	48
 10773     1443  0081               	movwf	1
 10774     1444                     l4427:
 10775                           
 10776                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1039:   p = 0;
 10777     1444  01C1               	clrf	utoa@p^(0+128)
 10778     1445                     l4429:
 10779                           
 10780                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1041:         --w
      +                          ;
 10781     1445  30FF               	movlw	255
 10782     1446  07C2               	addwf	utoa@w^(0+128),f
 10783     1447  30FF               	movlw	255
 10784     1448  3DC3               	addwfc	(utoa@w+1)^(0+128),f
 10785     1449                     l4431:
 10786                           
 10787                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1042:         d =
      +                           d / 10;
 10788     1449  300A               	movlw	10
 10789     144A  00A0               	movwf	___lwdiv@divisor^(0+128)
 10790     144B  3000               	movlw	0
 10791     144C  00A1               	movwf	(___lwdiv@divisor^(0+128)+1)
 10792     144D  083F               	movf	(utoa@d+1)^(0+128),w
 10793     144E  00A3               	movwf	(___lwdiv@dividend+1)^(0+128)
 10794     144F  083E               	movf	utoa@d^(0+128),w
 10795     1450  00A2               	movwf	___lwdiv@dividend^(0+128)
 10796     1451  319F  2781  3194   	fcall	___lwdiv
 10797     1454  0021               	movlb	1	; select bank1
 10798     1455  0821               	movf	(?___lwdiv+1)^(0+128),w
 10799     1456  00BF               	movwf	(utoa@d+1)^(0+128)
 10800     1457  0820               	movf	?___lwdiv^(0+128),w
 10801     1458  00BE               	movwf	utoa@d^(0+128)
 10802     1459                     l4433:
 10803                           
 10804                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1024:     while (
      +                          i && (d != 0
 10805     1459  0021               	movlb	1	; select bank1
 10806     145A  0844               	movf	utoa@i^(0+128),w
 10807     145B  0445               	iorwf	(utoa@i+1)^(0+128),w
 10808     145C  1903               	btfsc	3,2
 10809     145D  2C5F               	goto	u4561
 10810     145E  2C60               	goto	u4560
 10811     145F                     u4561:
 10812     145F  2C7D               	goto	l4443
 10813     1460                     u4560:
 10814     1460                     l4435:
 10815     1460  083E               	movf	utoa@d^(0+128),w
 10816     1461  043F               	iorwf	(utoa@d+1)^(0+128),w
 10817     1462  1D03               	btfss	3,2
 10818     1463  2C65               	goto	u4571
 10819     1464  2C66               	goto	u4570
 10820     1465                     u4571:
 10821     1465  2C2B               	goto	l4423
 10822     1466                     u4570:
 10823     1466                     l4437:
 10824     1466  0841               	movf	utoa@p^(0+128),w
 10825     1467  1D03               	btfss	3,2
 10826     1468  2C6A               	goto	u4581
 10827     1469  2C6B               	goto	u4580
 10828     146A                     u4581:
 10829     146A  2C2B               	goto	l4423
 10830     146B                     u4580:
 10831     146B                     l4439:
 10832     146B  0843               	movf	(utoa@w+1)^(0+128),w
 10833     146C  3A80               	xorlw	128
 10834     146D  00C0               	movwf	??_utoa^(0+128)
 10835     146E  3080               	movlw	128
 10836     146F  0240               	subwf	??_utoa^(0+128),w
 10837     1470  1D03               	skipz
 10838     1471  2C74               	goto	u4595
 10839     1472  3001               	movlw	1
 10840     1473  0242               	subwf	utoa@w^(0+128),w
 10841     1474                     u4595:
 10842     1474  1C03               	skipc
 10843     1475  2C77               	goto	u4591
 10844     1476  2C78               	goto	u4590
 10845     1477                     u4591:
 10846     1477  2C7D               	goto	l4443
 10847     1478                     u4590:
 10848     1478                     l4441:
 10849     1478  0020               	movlb	0	; select bank0
 10850     1479  18E3               	btfsc	_flags,1
 10851     147A  2C7C               	goto	u4601
 10852     147B  2C7D               	goto	u4600
 10853     147C                     u4601:
 10854     147C  2C2B               	goto	l4423
 10855     147D                     u4600:
 10856     147D                     l4443:
 10857                           
 10858                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1046:     return 
      +                          (int) pad(fp, &dbuf[i], w);
 10859     147D  0021               	movlb	1	; select bank1
 10860     147E  083D               	movf	(utoa@fp+1)^(0+128),w
 10861     147F  00B5               	movwf	(pad@fp+1)^(0+128)
 10862     1480  083C               	movf	utoa@fp^(0+128),w
 10863     1481  00B4               	movwf	pad@fp^(0+128)
 10864     1482  0844               	movf	utoa@i^(0+128),w
 10865     1483  3EA0               	addlw	(low (_dbuf| (0+256)))& (0+255)
 10866     1484  00B6               	movwf	pad@buf^(0+128)
 10867     1485  0843               	movf	(utoa@w+1)^(0+128),w
 10868     1486  00B8               	movwf	(pad@p+1)^(0+128)
 10869     1487  0842               	movf	utoa@w^(0+128),w
 10870     1488  00B7               	movwf	pad@p^(0+128)
 10871     1489  3190  20AC  3194   	fcall	_pad
 10872     148C  0021               	movlb	1	; select bank1
 10873     148D  0835               	movf	(?_pad+1)^(0+128),w
 10874     148E  00BD               	movwf	(?_utoa+1)^(0+128)
 10875     148F  0834               	movf	?_pad^(0+128),w
 10876     1490  00BC               	movwf	?_utoa^(0+128)
 10877     1491                     l1699:
 10878     1491  0008               	return
 10879     1492                     __end_of_utoa:
 10880                           
 10881                           	psect	text17
 10882     1F4E                     __ptext17:	
 10883 ;; *************** function ___lwmod *****************
 10884 ;; Defined at:
 10885 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\lwmod.c"
 10886 ;; Parameters:    Size  Location     Type
 10887 ;;  divisor         2    0[BANK1 ] unsigned int 
 10888 ;;  dividend        2    2[BANK1 ] unsigned int 
 10889 ;; Auto vars:     Size  Location     Type
 10890 ;;  counter         1    4[BANK1 ] unsigned char 
 10891 ;; Return value:  Size  Location     Type
 10892 ;;                  2    0[BANK1 ] unsigned int 
 10893 ;; Registers used:
 10894 ;;		wreg, status,2, status,0
 10895 ;; Tracked objects:
 10896 ;;		On entry : 0/0
 10897 ;;		On exit  : 0/0
 10898 ;;		Unchanged: 0/0
 10899 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10900 ;;      Params:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0
 10901 ;;      Locals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0
 10902 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10903 ;;      Totals:         0       0       5       0       0       0       0       0       0       0       0       0       
      +0       0
 10904 ;;Total ram usage:        5 bytes
 10905 ;; Hardware stack levels used: 1
 10906 ;; Hardware stack levels required when called: 5
 10907 ;; This function calls:
 10908 ;;		Nothing
 10909 ;; This function is called by:
 10910 ;;		_utoa
 10911 ;; This function uses a non-reentrant model
 10912 ;;
 10913                           
 10914     1F4E                     ___lwmod:	
 10915                           ;psect for function ___lwmod
 10916                           
 10917     1F4E                     l4307:	
 10918                           ;incstack = 0
 10919                           ; Regs used in ___lwmod: [wreg+status,2+status,0]
 10920                           
 10921     1F4E  0021               	movlb	1	; select bank1
 10922     1F4F  0820               	movf	___lwmod@divisor^(0+128),w
 10923     1F50  0421               	iorwf	(___lwmod@divisor+1)^(0+128),w
 10924     1F51  1903               	btfsc	3,2
 10925     1F52  2F54               	goto	u4321
 10926     1F53  2F55               	goto	u4320
 10927     1F54                     u4321:
 10928     1F54  2F7C               	goto	l4325
 10929     1F55                     u4320:
 10930     1F55                     l4309:
 10931     1F55  3001               	movlw	1
 10932     1F56  00A4               	movwf	___lwmod@counter^(0+128)
 10933     1F57  2F5F               	goto	l4315
 10934     1F58                     l4311:
 10935     1F58  3001               	movlw	1
 10936     1F59                     u4335:
 10937     1F59  35A0               	lslf	___lwmod@divisor^(0+128),f
 10938     1F5A  0DA1               	rlf	(___lwmod@divisor+1)^(0+128),f
 10939     1F5B  0B89               	decfsz	9,f
 10940     1F5C  2F59               	goto	u4335
 10941     1F5D                     l4313:
 10942     1F5D  3001               	movlw	1
 10943     1F5E  07A4               	addwf	___lwmod@counter^(0+128),f
 10944     1F5F                     l4315:
 10945     1F5F  1FA1               	btfss	(___lwmod@divisor+1)^(0+128),7
 10946     1F60  2F62               	goto	u4341
 10947     1F61  2F63               	goto	u4340
 10948     1F62                     u4341:
 10949     1F62  2F58               	goto	l4311
 10950     1F63                     u4340:
 10951     1F63                     l4317:
 10952     1F63  0821               	movf	(___lwmod@divisor+1)^(0+128),w
 10953     1F64  0223               	subwf	(___lwmod@dividend+1)^(0+128),w
 10954     1F65  1D03               	skipz
 10955     1F66  2F69               	goto	u4355
 10956     1F67  0820               	movf	___lwmod@divisor^(0+128),w
 10957     1F68  0222               	subwf	___lwmod@dividend^(0+128),w
 10958     1F69                     u4355:
 10959     1F69  1C03               	skipc
 10960     1F6A  2F6C               	goto	u4351
 10961     1F6B  2F6D               	goto	u4350
 10962     1F6C                     u4351:
 10963     1F6C  2F71               	goto	l4321
 10964     1F6D                     u4350:
 10965     1F6D                     l4319:
 10966     1F6D  0820               	movf	___lwmod@divisor^(0+128),w
 10967     1F6E  02A2               	subwf	___lwmod@dividend^(0+128),f
 10968     1F6F  0821               	movf	(___lwmod@divisor+1)^(0+128),w
 10969     1F70  3BA3               	subwfb	(___lwmod@dividend+1)^(0+128),f
 10970     1F71                     l4321:
 10971     1F71  3001               	movlw	1
 10972     1F72                     u4365:
 10973     1F72  36A1               	lsrf	(___lwmod@divisor+1)^(0+128),f
 10974     1F73  0CA0               	rrf	___lwmod@divisor^(0+128),f
 10975     1F74  0B89               	decfsz	9,f
 10976     1F75  2F72               	goto	u4365
 10977     1F76                     l4323:
 10978     1F76  3001               	movlw	1
 10979     1F77  02A4               	subwf	___lwmod@counter^(0+128),f
 10980     1F78  1D03               	btfss	3,2
 10981     1F79  2F7B               	goto	u4371
 10982     1F7A  2F7C               	goto	u4370
 10983     1F7B                     u4371:
 10984     1F7B  2F63               	goto	l4317
 10985     1F7C                     u4370:
 10986     1F7C                     l4325:
 10987     1F7C  0823               	movf	(___lwmod@dividend+1)^(0+128),w
 10988     1F7D  00A1               	movwf	(?___lwmod+1)^(0+128)
 10989     1F7E  0822               	movf	___lwmod@dividend^(0+128),w
 10990     1F7F  00A0               	movwf	?___lwmod^(0+128)
 10991     1F80                     l1455:
 10992     1F80  0008               	return
 10993     1F81                     __end_of___lwmod:
 10994                           
 10995                           	psect	text18
 10996     1F81                     __ptext18:	
 10997 ;; *************** function ___lwdiv *****************
 10998 ;; Defined at:
 10999 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\lwdiv.c"
 11000 ;; Parameters:    Size  Location     Type
 11001 ;;  divisor         2    0[BANK1 ] unsigned int 
 11002 ;;  dividend        2    2[BANK1 ] unsigned int 
 11003 ;; Auto vars:     Size  Location     Type
 11004 ;;  quotient        2    4[BANK1 ] unsigned int 
 11005 ;;  counter         1    6[BANK1 ] unsigned char 
 11006 ;; Return value:  Size  Location     Type
 11007 ;;                  2    0[BANK1 ] unsigned int 
 11008 ;; Registers used:
 11009 ;;		wreg, status,2, status,0
 11010 ;; Tracked objects:
 11011 ;;		On entry : 0/0
 11012 ;;		On exit  : 0/0
 11013 ;;		Unchanged: 0/0
 11014 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 11015 ;;      Params:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0
 11016 ;;      Locals:         0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0
 11017 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11018 ;;      Totals:         0       0       7       0       0       0       0       0       0       0       0       0       
      +0       0
 11019 ;;Total ram usage:        7 bytes
 11020 ;; Hardware stack levels used: 1
 11021 ;; Hardware stack levels required when called: 5
 11022 ;; This function calls:
 11023 ;;		Nothing
 11024 ;; This function is called by:
 11025 ;;		_utoa
 11026 ;;		_dutycycle_led_strip
 11027 ;; This function uses a non-reentrant model
 11028 ;;
 11029                           
 11030     1F81                     ___lwdiv:	
 11031                           ;psect for function ___lwdiv
 11032                           
 11033     1F81                     l4281:	
 11034                           ;incstack = 0
 11035                           ; Regs used in ___lwdiv: [wreg+status,2+status,0]
 11036                           
 11037     1F81  0021               	movlb	1	; select bank1
 11038     1F82  01A4               	clrf	___lwdiv@quotient^(0+128)
 11039     1F83  01A5               	clrf	(___lwdiv@quotient+1)^(0+128)
 11040     1F84                     l4283:
 11041     1F84  0820               	movf	___lwdiv@divisor^(0+128),w
 11042     1F85  0421               	iorwf	(___lwdiv@divisor+1)^(0+128),w
 11043     1F86  1903               	btfsc	3,2
 11044     1F87  2F89               	goto	u4251
 11045     1F88  2F8A               	goto	u4250
 11046     1F89                     u4251:
 11047     1F89  2FB7               	goto	l4303
 11048     1F8A                     u4250:
 11049     1F8A                     l4285:
 11050     1F8A  3001               	movlw	1
 11051     1F8B  00A6               	movwf	___lwdiv@counter^(0+128)
 11052     1F8C  2F94               	goto	l4291
 11053     1F8D                     l4287:
 11054     1F8D  3001               	movlw	1
 11055     1F8E                     u4265:
 11056     1F8E  35A0               	lslf	___lwdiv@divisor^(0+128),f
 11057     1F8F  0DA1               	rlf	(___lwdiv@divisor+1)^(0+128),f
 11058     1F90  0B89               	decfsz	9,f
 11059     1F91  2F8E               	goto	u4265
 11060     1F92                     l4289:
 11061     1F92  3001               	movlw	1
 11062     1F93  07A6               	addwf	___lwdiv@counter^(0+128),f
 11063     1F94                     l4291:
 11064     1F94  1FA1               	btfss	(___lwdiv@divisor+1)^(0+128),7
 11065     1F95  2F97               	goto	u4271
 11066     1F96  2F98               	goto	u4270
 11067     1F97                     u4271:
 11068     1F97  2F8D               	goto	l4287
 11069     1F98                     u4270:
 11070     1F98                     l4293:
 11071     1F98  3001               	movlw	1
 11072     1F99                     u4285:
 11073     1F99  35A4               	lslf	___lwdiv@quotient^(0+128),f
 11074     1F9A  0DA5               	rlf	(___lwdiv@quotient+1)^(0+128),f
 11075     1F9B  0B89               	decfsz	9,f
 11076     1F9C  2F99               	goto	u4285
 11077     1F9D  0821               	movf	(___lwdiv@divisor+1)^(0+128),w
 11078     1F9E  0223               	subwf	(___lwdiv@dividend+1)^(0+128),w
 11079     1F9F  1D03               	skipz
 11080     1FA0  2FA3               	goto	u4295
 11081     1FA1  0820               	movf	___lwdiv@divisor^(0+128),w
 11082     1FA2  0222               	subwf	___lwdiv@dividend^(0+128),w
 11083     1FA3                     u4295:
 11084     1FA3  1C03               	skipc
 11085     1FA4  2FA6               	goto	u4291
 11086     1FA5  2FA7               	goto	u4290
 11087     1FA6                     u4291:
 11088     1FA6  2FAC               	goto	l4299
 11089     1FA7                     u4290:
 11090     1FA7                     l4295:
 11091     1FA7  0820               	movf	___lwdiv@divisor^(0+128),w
 11092     1FA8  02A2               	subwf	___lwdiv@dividend^(0+128),f
 11093     1FA9  0821               	movf	(___lwdiv@divisor+1)^(0+128),w
 11094     1FAA  3BA3               	subwfb	(___lwdiv@dividend+1)^(0+128),f
 11095     1FAB                     l4297:
 11096     1FAB  1424               	bsf	___lwdiv@quotient^(0+128),0
 11097     1FAC                     l4299:
 11098     1FAC  3001               	movlw	1
 11099     1FAD                     u4305:
 11100     1FAD  36A1               	lsrf	(___lwdiv@divisor+1)^(0+128),f
 11101     1FAE  0CA0               	rrf	___lwdiv@divisor^(0+128),f
 11102     1FAF  0B89               	decfsz	9,f
 11103     1FB0  2FAD               	goto	u4305
 11104     1FB1                     l4301:
 11105     1FB1  3001               	movlw	1
 11106     1FB2  02A6               	subwf	___lwdiv@counter^(0+128),f
 11107     1FB3  1D03               	btfss	3,2
 11108     1FB4  2FB6               	goto	u4311
 11109     1FB5  2FB7               	goto	u4310
 11110     1FB6                     u4311:
 11111     1FB6  2F98               	goto	l4293
 11112     1FB7                     u4310:
 11113     1FB7                     l4303:
 11114     1FB7  0825               	movf	(___lwdiv@quotient+1)^(0+128),w
 11115     1FB8  00A1               	movwf	(?___lwdiv+1)^(0+128)
 11116     1FB9  0824               	movf	___lwdiv@quotient^(0+128),w
 11117     1FBA  00A0               	movwf	?___lwdiv^(0+128)
 11118     1FBB                     l1445:
 11119     1FBB  0008               	return
 11120     1FBC                     __end_of___lwdiv:
 11121                           
 11122                           	psect	text19
 11123     1211                     __ptext19:	
 11124 ;; *************** function _read_prec_or_width *****************
 11125 ;; Defined at:
 11126 ;;		line 1158 in file "C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c"
 11127 ;; Parameters:    Size  Location     Type
 11128 ;;  fmt             1    6[BANK1 ] PTR PTR const unsigned c
 11129 ;;		 -> vfprintf@cfmt(2), 
 11130 ;;  ap              1    7[BANK1 ] PTR PTR void [1]
 11131 ;;		 -> printf@ap(1), 
 11132 ;; Auto vars:     Size  Location     Type
 11133 ;;  c               1   11[BANK1 ] unsigned char 
 11134 ;;  n               2   12[BANK1 ] int 
 11135 ;; Return value:  Size  Location     Type
 11136 ;;                  2    6[BANK1 ] int 
 11137 ;; Registers used:
 11138 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 11139 ;; Tracked objects:
 11140 ;;		On entry : 0/0
 11141 ;;		On exit  : 0/0
 11142 ;;		Unchanged: 0/0
 11143 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 11144 ;;      Params:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0
 11145 ;;      Locals:         0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0
 11146 ;;      Temps:          0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0
 11147 ;;      Totals:         0       0       8       0       0       0       0       0       0       0       0       0       
      +0       0
 11148 ;;Total ram usage:        8 bytes
 11149 ;; Hardware stack levels used: 1
 11150 ;; Hardware stack levels required when called: 6
 11151 ;; This function calls:
 11152 ;;		___wmul
 11153 ;; This function is called by:
 11154 ;;		_vfpfcnvrt
 11155 ;; This function uses a non-reentrant model
 11156 ;;
 11157                           
 11158     1211                     _read_prec_or_width:	
 11159                           ;psect for function _read_prec_or_width
 11160                           
 11161     1211                     l4447:	
 11162                           ;incstack = 0
 11163                           ; Regs used in _read_prec_or_width: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 11164                           
 11165                           
 11166                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1159:     int n =
      +                           0;
 11167     1211  0021               	movlb	1	; select bank1
 11168     1212  01AC               	clrf	read_prec_or_width@n^(0+128)
 11169     1213  01AD               	clrf	(read_prec_or_width@n+1)^(0+128)
 11170     1214                     l4449:
 11171                           
 11172                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1160:     if ((*f
      +                          mt)[0] == '*') {
 11173     1214  0826               	movf	read_prec_or_width@fmt^(0+128),w
 11174     1215  0086               	movwf	6
 11175     1216  0187               	clrf	7
 11176     1217  3F40               	moviw [0]fsr1
 11177     1218  00A8               	movwf	??_read_prec_or_width^(0+128)
 11178     1219  3F41               	moviw [1]fsr1
 11179     121A  00A9               	movwf	(??_read_prec_or_width^(0+128)+1)
 11180     121B  0828               	movf	??_read_prec_or_width^(0+128),w
 11181     121C  0084               	movwf	4
 11182     121D  0829               	movf	(??_read_prec_or_width+1)^(0+128),w
 11183     121E  0085               	movwf	5
 11184     121F  0012               	moviw fsr0++
 11185     1220  3A2A               	xorlw	42
 11186     1221  1D03               	btfss	3,2
 11187     1222  2A24               	goto	u4611
 11188     1223  2A25               	goto	u4610
 11189     1224                     u4611:
 11190     1224  2A54               	goto	l4459
 11191     1225                     u4610:
 11192     1225                     l4451:
 11193                           
 11194                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1161:         ++*
      +                          fmt;
 11195     1225  0826               	movf	read_prec_or_width@fmt^(0+128),w
 11196     1226  0086               	movwf	6
 11197     1227  0187               	clrf	7
 11198     1228  3001               	movlw	1
 11199     1229  0781               	addwf	1,f
 11200     122A  3141               	addfsr 1,1
 11201     122B  1803               	skipnc
 11202     122C  0A81               	incf	1,f
 11203     122D                     l4453:
 11204                           
 11205                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1162:         n =
      +                           (*(int *)__va_arg(*(int **)*ap, (int)0));
 11206     122D  0827               	movf	read_prec_or_width@ap^(0+128),w
 11207     122E  0086               	movwf	6
 11208     122F  0187               	clrf	7
 11209     1230  0801               	movf	1,w
 11210     1231  0084               	movwf	4
 11211     1232  0185               	clrf	5
 11212     1233  3002               	movlw	2
 11213     1234  0781               	addwf	1,f
 11214     1235  3F00               	moviw [0]fsr0
 11215     1236  00AC               	movwf	read_prec_or_width@n^(0+128)
 11216     1237  3F01               	moviw [1]fsr0
 11217     1238  00AD               	movwf	(read_prec_or_width@n+1)^(0+128)
 11218                           
 11219                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1163:     } else 
      +                          {
 11220     1239  2A68               	goto	l4461
 11221     123A                     l4455:
 11222                           
 11223                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1166:            
      +                           n = n * 10 + c;
 11224     123A  082D               	movf	(read_prec_or_width@n+1)^(0+128),w
 11225     123B  00A1               	movwf	(___wmul@multiplier+1)^(0+128)
 11226     123C  082C               	movf	read_prec_or_width@n^(0+128),w
 11227     123D  00A0               	movwf	___wmul@multiplier^(0+128)
 11228     123E  300A               	movlw	10
 11229     123F  00A2               	movwf	___wmul@multiplicand^(0+128)
 11230     1240  3000               	movlw	0
 11231     1241  00A3               	movwf	(___wmul@multiplicand^(0+128)+1)
 11232     1242  319D  25D8  3192   	fcall	___wmul
 11233     1245  0021               	movlb	1	; select bank1
 11234     1246  082B               	movf	read_prec_or_width@c^(0+128),w
 11235     1247  0720               	addwf	?___wmul^(0+128),w
 11236     1248  00AC               	movwf	read_prec_or_width@n^(0+128)
 11237     1249  3000               	movlw	0
 11238     124A  3D21               	addwfc	(?___wmul+1)^(0+128),w
 11239     124B  00AD               	movwf	(read_prec_or_width@n+1)^(0+128)
 11240     124C                     l4457:
 11241                           
 11242                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1167:            
      +                           ++*fmt;
 11243     124C  0826               	movf	read_prec_or_width@fmt^(0+128),w
 11244     124D  0086               	movwf	6
 11245     124E  0187               	clrf	7
 11246     124F  3001               	movlw	1
 11247     1250  0781               	addwf	1,f
 11248     1251  3141               	addfsr 1,1
 11249     1252  1803               	skipnc
 11250     1253  0A81               	incf	1,f
 11251     1254                     l4459:
 11252                           
 11253                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1165:         whi
      +                          le ((c = ((unsigned)(*fmt)[0]) - '0') < 10) {
 11254     1254  0826               	movf	read_prec_or_width@fmt^(0+128),w
 11255     1255  0086               	movwf	6
 11256     1256  0187               	clrf	7
 11257     1257  3F40               	moviw [0]fsr1
 11258     1258  00A8               	movwf	??_read_prec_or_width^(0+128)
 11259     1259  3F41               	moviw [1]fsr1
 11260     125A  00A9               	movwf	(??_read_prec_or_width^(0+128)+1)
 11261     125B  0828               	movf	??_read_prec_or_width^(0+128),w
 11262     125C  0084               	movwf	4
 11263     125D  0829               	movf	(??_read_prec_or_width+1)^(0+128),w
 11264     125E  0085               	movwf	5
 11265     125F  0800               	movf	0,w	;code access
 11266     1260  3ED0               	addlw	208
 11267     1261  00AB               	movwf	read_prec_or_width@c^(0+128)
 11268     1262  300A               	movlw	10
 11269     1263  022B               	subwf	read_prec_or_width@c^(0+128),w
 11270     1264  1C03               	skipc
 11271     1265  2A67               	goto	u4621
 11272     1266  2A68               	goto	u4620
 11273     1267                     u4621:
 11274     1267  2A3A               	goto	l4455
 11275     1268                     u4620:
 11276     1268                     l4461:
 11277                           
 11278                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1170:     return 
      +                          n;
 11279     1268  082D               	movf	(read_prec_or_width@n+1)^(0+128),w
 11280     1269  00A7               	movwf	(?_read_prec_or_width+1)^(0+128)
 11281     126A  082C               	movf	read_prec_or_width@n^(0+128),w
 11282     126B  00A6               	movwf	?_read_prec_or_width^(0+128)
 11283     126C                     l1707:
 11284     126C  0008               	return
 11285     126D                     __end_of_read_prec_or_width:
 11286                           
 11287                           	psect	text20
 11288     0710                     __ptext20:	
 11289 ;; *************** function _dtoa *****************
 11290 ;; Defined at:
 11291 ;;		line 513 in file "C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c"
 11292 ;; Parameters:    Size  Location     Type
 11293 ;;  fp              2   28[BANK1 ] PTR struct _IO_FILE
 11294 ;;		 -> NULL(0), 
 11295 ;;  d               2   30[BANK1 ] int 
 11296 ;; Auto vars:     Size  Location     Type
 11297 ;;  i               2   39[BANK1 ] int 
 11298 ;;  w               2   36[BANK1 ] int 
 11299 ;;  s               1   38[BANK1 ] unsigned char 
 11300 ;;  p               1   35[BANK1 ] _Bool 
 11301 ;; Return value:  Size  Location     Type
 11302 ;;                  2   28[BANK1 ] int 
 11303 ;; Registers used:
 11304 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 11305 ;; Tracked objects:
 11306 ;;		On entry : 0/0
 11307 ;;		On exit  : 0/0
 11308 ;;		Unchanged: 0/0
 11309 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 11310 ;;      Params:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0
 11311 ;;      Locals:         0       0       8       0       0       0       0       0       0       0       0       0       
      +0       0
 11312 ;;      Temps:          0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0
 11313 ;;      Totals:         0       0      13       0       0       0       0       0       0       0       0       0       
      +0       0
 11314 ;;Total ram usage:       13 bytes
 11315 ;; Hardware stack levels used: 1
 11316 ;; Hardware stack levels required when called: 10
 11317 ;; This function calls:
 11318 ;;		___awdiv
 11319 ;;		___awmod
 11320 ;;		_abs
 11321 ;;		_pad
 11322 ;; This function is called by:
 11323 ;;		_vfpfcnvrt
 11324 ;; This function uses a non-reentrant model
 11325 ;;
 11326                           
 11327     0710                     _dtoa:	
 11328                           ;psect for function _dtoa
 11329                           
 11330     0710                     l4371:	
 11331                           ;incstack = 0
 11332                           ; Regs used in _dtoa: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 11333                           
 11334                           
 11335                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 513: static int d
      +                          toa(FILE *fp, vfpf_sint_t d);C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common
      +                          \doprnt.c: 514: {;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 
      +                          515:  char s;;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 516:
      +                               int i, w;;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 520
      +                          :  _Bool p = 1;
 11336     0710  3001               	movlw	1
 11337     0711  0021               	movlb	1	; select bank1
 11338     0712  00C3               	movwf	dtoa@p^(0+128)
 11339     0713                     l4373:
 11340                           
 11341                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 524:     s = d < 
      +                          0 ? 1 : 0;
 11342     0713  1BBF               	btfsc	(dtoa@d+1)^(0+128),7
 11343     0714  2F16               	goto	u4461
 11344     0715  2F18               	goto	u4460
 11345     0716                     u4461:
 11346     0716  3001               	movlw	1
 11347     0717  2F19               	goto	u4470
 11348     0718                     u4460:
 11349     0718  3000               	movlw	0
 11350     0719                     u4470:
 11351     0719  00C6               	movwf	dtoa@s^(0+128)
 11352                           
 11353                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 535:     w = widt
      +                          h;
 11354     071A  0020               	movlb	0	; select bank0
 11355     071B  0856               	movf	_width+1,w
 11356     071C  0021               	movlb	1	; select bank1
 11357     071D  00C5               	movwf	(dtoa@w+1)^(0+128)
 11358     071E  0020               	movlb	0	; select bank0
 11359     071F  0855               	movf	_width,w
 11360     0720  0021               	movlb	1	; select bank1
 11361     0721  00C4               	movwf	dtoa@w^(0+128)
 11362     0722                     l4375:
 11363                           
 11364                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 536:     if (s
 11365     0722  0846               	movf	dtoa@s^(0+128),w
 11366     0723  1903               	btfsc	3,2
 11367     0724  2F26               	goto	u4481
 11368     0725  2F27               	goto	u4480
 11369     0726                     u4481:
 11370     0726  2F3B               	goto	l1676
 11371     0727                     u4480:
 11372     0727                     l4377:
 11373                           
 11374                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 540:     ) {;C:\P
      +                          rogram Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 541:         --w;
 11375     0727  30FF               	movlw	255
 11376     0728  07C4               	addwf	dtoa@w^(0+128),f
 11377     0729  30FF               	movlw	255
 11378     072A  3DC5               	addwfc	(dtoa@w+1)^(0+128),f
 11379     072B                     l4379:
 11380                           
 11381                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 542:   s = s ? '-
      +                          ' : '+';
 11382     072B  0846               	movf	dtoa@s^(0+128),w
 11383     072C  1D03               	btfss	3,2
 11384     072D  2F2F               	goto	u4491
 11385     072E  2F30               	goto	u4490
 11386     072F                     u4491:
 11387     072F  2F35               	goto	l4383
 11388     0730                     u4490:
 11389     0730                     l4381:
 11390     0730  302B               	movlw	43
 11391     0731  00C1               	movwf	_dtoa$2108^(0+128)
 11392     0732  3000               	movlw	0
 11393     0733  00C2               	movwf	(_dtoa$2108^(0+128)+1)
 11394     0734  2F39               	goto	l1680
 11395     0735                     l4383:
 11396     0735  302D               	movlw	45
 11397     0736  00C1               	movwf	_dtoa$2108^(0+128)
 11398     0737  3000               	movlw	0
 11399     0738  00C2               	movwf	(_dtoa$2108^(0+128)+1)
 11400     0739                     l1680:
 11401     0739  0841               	movf	_dtoa$2108^(0+128),w
 11402     073A  00C6               	movwf	dtoa@s^(0+128)
 11403     073B                     l1676:	
 11404                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 543:     }
 11405                           
 11406                           
 11407                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 552:     i = size
      +                          of(dbuf) - 1;
 11408     073B  301F               	movlw	31
 11409     073C  00C7               	movwf	dtoa@i^(0+128)
 11410     073D  3000               	movlw	0
 11411     073E  00C8               	movwf	(dtoa@i^(0+128)+1)
 11412     073F                     l4385:
 11413                           
 11414                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 553:     dbuf[i] 
      +                          = '\0';
 11415     073F  0023               	movlb	3	; select bank3
 11416     0740  01BF               	clrf	(_dbuf^(0+384)+31)
 11417                           
 11418                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 554:     while (!
      +                          (i < 1) && (d != 0
 11419     0741  2F78               	goto	l4397
 11420     0742                     l4387:
 11421                           
 11422                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 563:     )) {;C:\
      +                          Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 564:         --i;
 11423     0742  30FF               	movlw	255
 11424     0743  0021               	movlb	1	; select bank1
 11425     0744  07C7               	addwf	dtoa@i^(0+128),f
 11426     0745  30FF               	movlw	255
 11427     0746  3DC8               	addwfc	(dtoa@i+1)^(0+128),f
 11428     0747                     l4389:
 11429                           
 11430                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 565:         dbuf
      +                          [i] = (char)((int)'0' + abs(d % 10));
 11431     0747  0847               	movf	dtoa@i^(0+128),w
 11432     0748  3EA0               	addlw	(low (_dbuf| (0+256)))& (0+255)
 11433     0749  0086               	movwf	6
 11434     074A  3001               	movlw	1	; select bank3/4
 11435     074B  0087               	movwf	7
 11436     074C  300A               	movlw	10
 11437     074D  00A0               	movwf	___awmod@divisor^(0+128)
 11438     074E  3000               	movlw	0
 11439     074F  00A1               	movwf	(___awmod@divisor^(0+128)+1)
 11440     0750  083F               	movf	(dtoa@d+1)^(0+128),w
 11441     0751  00A3               	movwf	(___awmod@dividend+1)^(0+128)
 11442     0752  083E               	movf	dtoa@d^(0+128),w
 11443     0753  00A2               	movwf	___awmod@dividend^(0+128)
 11444     0754  3190  205A  3187   	fcall	___awmod
 11445     0757  0021               	movlb	1	; select bank1
 11446     0758  0821               	movf	(?___awmod+1)^(0+128),w
 11447     0759  00A7               	movwf	(abs@a+1)^(0+128)
 11448     075A  0820               	movf	?___awmod^(0+128),w
 11449     075B  00A6               	movwf	abs@a^(0+128)
 11450     075C  319C  24ED  3187   	fcall	_abs
 11451     075F  0021               	movlb	1	; select bank1
 11452     0760  0826               	movf	?_abs^(0+128),w
 11453     0761  3E30               	addlw	48
 11454     0762  0081               	movwf	1
 11455     0763                     l4391:
 11456                           
 11457                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 569:   p = 0;
 11458     0763  01C3               	clrf	dtoa@p^(0+128)
 11459     0764                     l4393:
 11460                           
 11461                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 571:         --w;
 11462     0764  30FF               	movlw	255
 11463     0765  07C4               	addwf	dtoa@w^(0+128),f
 11464     0766  30FF               	movlw	255
 11465     0767  3DC5               	addwfc	(dtoa@w+1)^(0+128),f
 11466     0768                     l4395:
 11467                           
 11468                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 572:         d = 
      +                          d / 10;
 11469     0768  300A               	movlw	10
 11470     0769  00A0               	movwf	___awdiv@divisor^(0+128)
 11471     076A  3000               	movlw	0
 11472     076B  00A1               	movwf	(___awdiv@divisor^(0+128)+1)
 11473     076C  083F               	movf	(dtoa@d+1)^(0+128),w
 11474     076D  00A3               	movwf	(___awdiv@dividend+1)^(0+128)
 11475     076E  083E               	movf	dtoa@d^(0+128),w
 11476     076F  00A2               	movwf	___awdiv@dividend^(0+128)
 11477     0770  3191  21B5  3187   	fcall	___awdiv
 11478     0773  0021               	movlb	1	; select bank1
 11479     0774  0821               	movf	(?___awdiv+1)^(0+128),w
 11480     0775  00BF               	movwf	(dtoa@d+1)^(0+128)
 11481     0776  0820               	movf	?___awdiv^(0+128),w
 11482     0777  00BE               	movwf	dtoa@d^(0+128)
 11483     0778                     l4397:
 11484                           
 11485                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 554:     while (!
      +                          (i < 1) && (d != 0
 11486     0778  0021               	movlb	1	; select bank1
 11487     0779  0848               	movf	(dtoa@i+1)^(0+128),w
 11488     077A  3A80               	xorlw	128
 11489     077B  00C0               	movwf	??_dtoa^(0+128)
 11490     077C  3080               	movlw	128
 11491     077D  0240               	subwf	??_dtoa^(0+128),w
 11492     077E  1D03               	skipz
 11493     077F  2F82               	goto	u4505
 11494     0780  3001               	movlw	1
 11495     0781  0247               	subwf	dtoa@i^(0+128),w
 11496     0782                     u4505:
 11497     0782  1C03               	skipc
 11498     0783  2F85               	goto	u4501
 11499     0784  2F86               	goto	u4500
 11500     0785                     u4501:
 11501     0785  2FA4               	goto	l4407
 11502     0786                     u4500:
 11503     0786                     l4399:
 11504     0786  0021               	movlb	1	; select bank1
 11505     0787  083E               	movf	dtoa@d^(0+128),w
 11506     0788  043F               	iorwf	(dtoa@d+1)^(0+128),w
 11507     0789  1D03               	btfss	3,2
 11508     078A  2F8C               	goto	u4511
 11509     078B  2F8D               	goto	u4510
 11510     078C                     u4511:
 11511     078C  2F42               	goto	l4387
 11512     078D                     u4510:
 11513     078D                     l4401:
 11514     078D  0843               	movf	dtoa@p^(0+128),w
 11515     078E  1D03               	btfss	3,2
 11516     078F  2F91               	goto	u4521
 11517     0790  2F92               	goto	u4520
 11518     0791                     u4521:
 11519     0791  2F42               	goto	l4387
 11520     0792                     u4520:
 11521     0792                     l4403:
 11522     0792  0845               	movf	(dtoa@w+1)^(0+128),w
 11523     0793  3A80               	xorlw	128
 11524     0794  00C0               	movwf	??_dtoa^(0+128)
 11525     0795  3080               	movlw	128
 11526     0796  0240               	subwf	??_dtoa^(0+128),w
 11527     0797  1D03               	skipz
 11528     0798  2F9B               	goto	u4535
 11529     0799  3001               	movlw	1
 11530     079A  0244               	subwf	dtoa@w^(0+128),w
 11531     079B                     u4535:
 11532     079B  1C03               	skipc
 11533     079C  2F9E               	goto	u4531
 11534     079D  2F9F               	goto	u4530
 11535     079E                     u4531:
 11536     079E  2FA4               	goto	l4407
 11537     079F                     u4530:
 11538     079F                     l4405:
 11539     079F  0020               	movlb	0	; select bank0
 11540     07A0  18E3               	btfsc	_flags,1
 11541     07A1  2FA3               	goto	u4541
 11542     07A2  2FA4               	goto	u4540
 11543     07A3                     u4541:
 11544     07A3  2F42               	goto	l4387
 11545     07A4                     u4540:
 11546     07A4                     l4407:
 11547                           
 11548                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 576:     if (s !=
      +                           0) {
 11549     07A4  0021               	movlb	1	; select bank1
 11550     07A5  0846               	movf	dtoa@s^(0+128),w
 11551     07A6  1903               	btfsc	3,2
 11552     07A7  2FA9               	goto	u4551
 11553     07A8  2FAA               	goto	u4550
 11554     07A9                     u4551:
 11555     07A9  2FB5               	goto	l4413
 11556     07AA                     u4550:
 11557     07AA                     l4409:
 11558                           
 11559                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 577:         --i;
 11560     07AA  30FF               	movlw	255
 11561     07AB  07C7               	addwf	dtoa@i^(0+128),f
 11562     07AC  30FF               	movlw	255
 11563     07AD  3DC8               	addwfc	(dtoa@i+1)^(0+128),f
 11564     07AE                     l4411:
 11565                           
 11566                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 578:         dbuf
      +                          [i] = s;
 11567     07AE  0847               	movf	dtoa@i^(0+128),w
 11568     07AF  3EA0               	addlw	(low (_dbuf| (0+256)))& (0+255)
 11569     07B0  0086               	movwf	6
 11570     07B1  3001               	movlw	1	; select bank3/4
 11571     07B2  0087               	movwf	7
 11572     07B3  0846               	movf	dtoa@s^(0+128),w
 11573     07B4  0081               	movwf	1
 11574     07B5                     l4413:
 11575                           
 11576                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 582:     return (
      +                          int) pad(fp, &dbuf[i], w);
 11577     07B5  083D               	movf	(dtoa@fp+1)^(0+128),w
 11578     07B6  00B5               	movwf	(pad@fp+1)^(0+128)
 11579     07B7  083C               	movf	dtoa@fp^(0+128),w
 11580     07B8  00B4               	movwf	pad@fp^(0+128)
 11581     07B9  0847               	movf	dtoa@i^(0+128),w
 11582     07BA  3EA0               	addlw	(low (_dbuf| (0+256)))& (0+255)
 11583     07BB  00B6               	movwf	pad@buf^(0+128)
 11584     07BC  0845               	movf	(dtoa@w+1)^(0+128),w
 11585     07BD  00B8               	movwf	(pad@p+1)^(0+128)
 11586     07BE  0844               	movf	dtoa@w^(0+128),w
 11587     07BF  00B7               	movwf	pad@p^(0+128)
 11588     07C0  3190  20AC  3187   	fcall	_pad
 11589     07C3  0021               	movlb	1	; select bank1
 11590     07C4  0835               	movf	(?_pad+1)^(0+128),w
 11591     07C5  00BD               	movwf	(?_dtoa+1)^(0+128)
 11592     07C6  0834               	movf	?_pad^(0+128),w
 11593     07C7  00BC               	movwf	?_dtoa^(0+128)
 11594     07C8                     l1689:
 11595     07C8  0008               	return
 11596     07C9                     __end_of_dtoa:
 11597                           
 11598                           	psect	text21
 11599     10AC                     __ptext21:	
 11600 ;; *************** function _pad *****************
 11601 ;; Defined at:
 11602 ;;		line 193 in file "C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c"
 11603 ;; Parameters:    Size  Location     Type
 11604 ;;  fp              2   20[BANK1 ] PTR struct _IO_FILE
 11605 ;;		 -> NULL(0), 
 11606 ;;  buf             1   22[BANK1 ] PTR unsigned char 
 11607 ;;		 -> dbuf(32), 
 11608 ;;  p               2   23[BANK1 ] int 
 11609 ;; Auto vars:     Size  Location     Type
 11610 ;;  i               2   26[BANK1 ] int 
 11611 ;; Return value:  Size  Location     Type
 11612 ;;                  2   20[BANK1 ] int 
 11613 ;; Registers used:
 11614 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 11615 ;; Tracked objects:
 11616 ;;		On entry : 0/0
 11617 ;;		On exit  : 0/0
 11618 ;;		Unchanged: 0/0
 11619 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 11620 ;;      Params:         0       0       5       0       0       0       0       0       0       0       0       0       
      +0       0
 11621 ;;      Locals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0
 11622 ;;      Temps:          0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0
 11623 ;;      Totals:         0       0       8       0       0       0       0       0       0       0       0       0       
      +0       0
 11624 ;;Total ram usage:        8 bytes
 11625 ;; Hardware stack levels used: 1
 11626 ;; Hardware stack levels required when called: 9
 11627 ;; This function calls:
 11628 ;;		_fputc
 11629 ;;		_fputs
 11630 ;;		_strlen
 11631 ;; This function is called by:
 11632 ;;		_dtoa
 11633 ;;		_utoa
 11634 ;; This function uses a non-reentrant model
 11635 ;;
 11636                           
 11637     10AC                     _pad:	
 11638                           ;psect for function _pad
 11639                           
 11640     10AC                     l4329:	
 11641                           ;incstack = 0
 11642                           ; Regs used in _pad: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 11643                           
 11644                           
 11645                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 193: static int p
      +                          ad(FILE *fp, char *buf, int p);C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\comm
      +                          on\doprnt.c: 194: {;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c
      +                          : 195:     int i;;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 
      +                          199:     if (flags & (1 << 0)) {
 11646     10AC  0020               	movlb	0	; select bank0
 11647     10AD  1C63               	btfss	_flags,0
 11648     10AE  28B0               	goto	u4381
 11649     10AF  28B1               	goto	u4380
 11650     10B0                     u4381:
 11651     10B0  28BB               	goto	l4333
 11652     10B1                     u4380:
 11653     10B1                     l4331:
 11654                           
 11655                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 200:         fput
      +                          s((const char *)buf, fp);
 11656     10B1  0021               	movlb	1	; select bank1
 11657     10B2  0836               	movf	pad@buf^(0+128),w
 11658     10B3  00AC               	movwf	fputs@s^(0+128)
 11659     10B4  0835               	movf	(pad@fp+1)^(0+128),w
 11660     10B5  00AE               	movwf	(fputs@fp+1)^(0+128)
 11661     10B6  0834               	movf	pad@fp^(0+128),w
 11662     10B7  00AD               	movwf	fputs@fp^(0+128)
 11663     10B8  319E  267F  3190   	fcall	_fputs
 11664     10BB                     l4333:
 11665                           
 11666                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 205:  if (p < 0) 
      +                          {
 11667     10BB  0021               	movlb	1	; select bank1
 11668     10BC  1FB8               	btfss	(pad@p+1)^(0+128),7
 11669     10BD  28BF               	goto	u4391
 11670     10BE  28C0               	goto	u4390
 11671     10BF                     u4391:
 11672     10BF  28C2               	goto	l1668
 11673     10C0                     u4390:
 11674     10C0                     l4335:
 11675                           
 11676                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 206:   p = 0;
 11677     10C0  01B7               	clrf	pad@p^(0+128)
 11678     10C1  01B8               	clrf	(pad@p+1)^(0+128)
 11679     10C2                     l1668:	
 11680                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 207:  }
 11681                           
 11682                           
 11683                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 208:     i = 0;
 11684     10C2  01BA               	clrf	pad@i^(0+128)
 11685     10C3  01BB               	clrf	(pad@i+1)^(0+128)
 11686                           
 11687                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 209:     while (i
      +                           < p) {
 11688     10C4  28D6               	goto	l4341
 11689     10C5                     l4337:
 11690                           
 11691                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 210:         fput
      +                          c(' ', fp);
 11692     10C5  3020               	movlw	32
 11693     10C6  0021               	movlb	1	; select bank1
 11694     10C7  00A3               	movwf	fputc@c^(0+128)
 11695     10C8  3000               	movlw	0
 11696     10C9  00A4               	movwf	(fputc@c^(0+128)+1)
 11697     10CA  0835               	movf	(pad@fp+1)^(0+128),w
 11698     10CB  00A6               	movwf	(fputc@fp+1)^(0+128)
 11699     10CC  0834               	movf	pad@fp^(0+128),w
 11700     10CD  00A5               	movwf	fputc@fp^(0+128)
 11701     10CE  3192  226D  3190   	fcall	_fputc
 11702     10D1                     l4339:
 11703                           
 11704                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 211:         ++i;
 11705     10D1  3001               	movlw	1
 11706     10D2  0021               	movlb	1	; select bank1
 11707     10D3  07BA               	addwf	pad@i^(0+128),f
 11708     10D4  3000               	movlw	0
 11709     10D5  3DBB               	addwfc	(pad@i+1)^(0+128),f
 11710     10D6                     l4341:
 11711                           
 11712                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 209:     while (i
      +                           < p) {
 11713     10D6  083B               	movf	(pad@i+1)^(0+128),w
 11714     10D7  3A80               	xorlw	128
 11715     10D8  00B9               	movwf	??_pad^(0+128)
 11716     10D9  0838               	movf	(pad@p+1)^(0+128),w
 11717     10DA  3A80               	xorlw	128
 11718     10DB  0239               	subwf	??_pad^(0+128),w
 11719     10DC  1D03               	skipz
 11720     10DD  28E0               	goto	u4405
 11721     10DE  0837               	movf	pad@p^(0+128),w
 11722     10DF  023A               	subwf	pad@i^(0+128),w
 11723     10E0                     u4405:
 11724     10E0  1C03               	skipc
 11725     10E1  28E3               	goto	u4401
 11726     10E2  28E4               	goto	u4400
 11727     10E3                     u4401:
 11728     10E3  28C5               	goto	l4337
 11729     10E4                     u4400:
 11730     10E4                     l1671:
 11731                           
 11732                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 216:     if (!(fl
      +                          ags & (1 << 0))) {
 11733     10E4  0020               	movlb	0	; select bank0
 11734     10E5  1863               	btfsc	_flags,0
 11735     10E6  28E8               	goto	u4411
 11736     10E7  28E9               	goto	u4410
 11737     10E8                     u4411:
 11738     10E8  28F3               	goto	l4345
 11739     10E9                     u4410:
 11740     10E9                     l4343:
 11741                           
 11742                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 218:         fput
      +                          s((const char *)buf, fp);
 11743     10E9  0021               	movlb	1	; select bank1
 11744     10EA  0836               	movf	pad@buf^(0+128),w
 11745     10EB  00AC               	movwf	fputs@s^(0+128)
 11746     10EC  0835               	movf	(pad@fp+1)^(0+128),w
 11747     10ED  00AE               	movwf	(fputs@fp+1)^(0+128)
 11748     10EE  0834               	movf	pad@fp^(0+128),w
 11749     10EF  00AD               	movwf	fputs@fp^(0+128)
 11750     10F0  319E  267F  3190   	fcall	_fputs
 11751     10F3                     l4345:
 11752                           
 11753                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 224:     return (
      +                          int)(strlen(buf) + (size_t)p);
 11754     10F3  0021               	movlb	1	; select bank1
 11755     10F4  0836               	movf	pad@buf^(0+128),w
 11756     10F5  00A0               	movwf	strlen@s^(0+128)
 11757     10F6  319D  2553  3190   	fcall	_strlen
 11758     10F9  0021               	movlb	1	; select bank1
 11759     10FA  0837               	movf	pad@p^(0+128),w
 11760     10FB  0720               	addwf	?_strlen^(0+128),w
 11761     10FC  00B4               	movwf	?_pad^(0+128)
 11762     10FD  0838               	movf	(pad@p+1)^(0+128),w
 11763     10FE  3D21               	addwfc	(?_strlen+1)^(0+128),w
 11764     10FF  00B5               	movwf	(?_pad+1)^(0+128)
 11765     1100                     l1673:
 11766     1100  0008               	return
 11767     1101                     __end_of_pad:
 11768                           
 11769                           	psect	text22
 11770     1D53                     __ptext22:	
 11771 ;; *************** function _strlen *****************
 11772 ;; Defined at:
 11773 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\strlen.c"
 11774 ;; Parameters:    Size  Location     Type
 11775 ;;  s               1    0[BANK1 ] PTR const unsigned char 
 11776 ;;		 -> dbuf(32), 
 11777 ;; Auto vars:     Size  Location     Type
 11778 ;;  a               1    2[BANK1 ] PTR const unsigned char 
 11779 ;;		 -> dbuf(32), 
 11780 ;; Return value:  Size  Location     Type
 11781 ;;                  2    0[BANK1 ] unsigned int 
 11782 ;; Registers used:
 11783 ;;		wreg, fsr1l, fsr1h, status,2, status,0
 11784 ;; Tracked objects:
 11785 ;;		On entry : 0/0
 11786 ;;		On exit  : 0/0
 11787 ;;		Unchanged: 0/0
 11788 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 11789 ;;      Params:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0
 11790 ;;      Locals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0
 11791 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11792 ;;      Totals:         0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0
 11793 ;;Total ram usage:        3 bytes
 11794 ;; Hardware stack levels used: 1
 11795 ;; Hardware stack levels required when called: 5
 11796 ;; This function calls:
 11797 ;;		Nothing
 11798 ;; This function is called by:
 11799 ;;		_pad
 11800 ;; This function uses a non-reentrant model
 11801 ;;
 11802                           
 11803     1D53                     _strlen:	
 11804                           ;psect for function _strlen
 11805                           
 11806     1D53                     l4175:	
 11807                           ;incstack = 0
 11808                           ; Regs used in _strlen: [wreg+fsr1l+fsr1h+status,2+status,0]
 11809                           
 11810     1D53  0021               	movlb	1	; select bank1
 11811     1D54  0820               	movf	strlen@s^(0+128),w
 11812     1D55  00A2               	movwf	strlen@a^(0+128)
 11813     1D56  2D59               	goto	l4179
 11814     1D57                     l4177:
 11815     1D57  3001               	movlw	1
 11816     1D58  07A0               	addwf	strlen@s^(0+128),f
 11817     1D59                     l4179:
 11818     1D59  0820               	movf	strlen@s^(0+128),w
 11819     1D5A  0086               	movwf	6
 11820     1D5B  3001               	movlw	1	; select bank2/3
 11821     1D5C  0087               	movwf	7
 11822     1D5D  0801               	movf	1,w
 11823     1D5E  1D03               	btfss	3,2
 11824     1D5F  2D61               	goto	u4011
 11825     1D60  2D62               	goto	u4010
 11826     1D61                     u4011:
 11827     1D61  2D57               	goto	l4177
 11828     1D62                     u4010:
 11829     1D62                     l4181:
 11830     1D62  0822               	movf	strlen@a^(0+128),w
 11831     1D63  0220               	subwf	strlen@s^(0+128),w
 11832     1D64  00A0               	movwf	?_strlen^(0+128)
 11833     1D65  01A1               	clrf	(?_strlen+1)^(0+128)
 11834     1D66  1BA0               	btfsc	?_strlen^(0+128),7
 11835     1D67  03A1               	decf	(?_strlen+1)^(0+128),f
 11836     1D68                     l1769:
 11837     1D68  0008               	return
 11838     1D69                     __end_of_strlen:
 11839                           
 11840                           	psect	text23
 11841     1E7F                     __ptext23:	
 11842 ;; *************** function _fputs *****************
 11843 ;; Defined at:
 11844 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\nf_fputs.c"
 11845 ;; Parameters:    Size  Location     Type
 11846 ;;  s               1   12[BANK1 ] PTR const unsigned char 
 11847 ;;		 -> dbuf(32), 
 11848 ;;  fp              2   13[BANK1 ] PTR struct _IO_FILE
 11849 ;;		 -> NULL(0), 
 11850 ;; Auto vars:     Size  Location     Type
 11851 ;;  i               2   18[BANK1 ] int 
 11852 ;;  c               1   17[BANK1 ] unsigned char 
 11853 ;; Return value:  Size  Location     Type
 11854 ;;                  2   12[BANK1 ] int 
 11855 ;; Registers used:
 11856 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 11857 ;; Tracked objects:
 11858 ;;		On entry : 0/0
 11859 ;;		On exit  : 0/0
 11860 ;;		Unchanged: 0/0
 11861 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 11862 ;;      Params:         0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0
 11863 ;;      Locals:         0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0
 11864 ;;      Temps:          0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0
 11865 ;;      Totals:         0       0       8       0       0       0       0       0       0       0       0       0       
      +0       0
 11866 ;;Total ram usage:        8 bytes
 11867 ;; Hardware stack levels used: 1
 11868 ;; Hardware stack levels required when called: 8
 11869 ;; This function calls:
 11870 ;;		_fputc
 11871 ;; This function is called by:
 11872 ;;		_pad
 11873 ;; This function uses a non-reentrant model
 11874 ;;
 11875                           
 11876     1E7F                     _fputs:	
 11877                           ;psect for function _fputs
 11878                           
 11879     1E7F                     l4167:	
 11880                           ;incstack = 0
 11881                           ; Regs used in _fputs: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 11882                           
 11883     1E7F  0021               	movlb	1	; select bank1
 11884     1E80  01B2               	clrf	fputs@i^(0+128)
 11885     1E81  01B3               	clrf	(fputs@i+1)^(0+128)
 11886     1E82  2E96               	goto	l4173
 11887     1E83                     l4169:
 11888     1E83  0831               	movf	fputs@c^(0+128),w
 11889     1E84  00AF               	movwf	??_fputs^(0+128)
 11890     1E85  01B0               	clrf	(??_fputs^(0+128)+1)
 11891     1E86  082F               	movf	??_fputs^(0+128),w
 11892     1E87  00A3               	movwf	fputc@c^(0+128)
 11893     1E88  0830               	movf	(??_fputs+1)^(0+128),w
 11894     1E89  00A4               	movwf	(fputc@c+1)^(0+128)
 11895     1E8A  082E               	movf	(fputs@fp+1)^(0+128),w
 11896     1E8B  00A6               	movwf	(fputc@fp+1)^(0+128)
 11897     1E8C  082D               	movf	fputs@fp^(0+128),w
 11898     1E8D  00A5               	movwf	fputc@fp^(0+128)
 11899     1E8E  3192  226D  319E   	fcall	_fputc
 11900     1E91                     l4171:
 11901     1E91  3001               	movlw	1
 11902     1E92  0021               	movlb	1	; select bank1
 11903     1E93  07B2               	addwf	fputs@i^(0+128),f
 11904     1E94  3000               	movlw	0
 11905     1E95  3DB3               	addwfc	(fputs@i+1)^(0+128),f
 11906     1E96                     l4173:
 11907     1E96  082C               	movf	fputs@s^(0+128),w
 11908     1E97  0732               	addwf	fputs@i^(0+128),w
 11909     1E98  0086               	movwf	6
 11910     1E99  3001               	movlw	1	; select bank2/3
 11911     1E9A  0087               	movwf	7
 11912     1E9B  0801               	movf	1,w
 11913     1E9C  00B1               	movwf	fputs@c^(0+128)
 11914     1E9D  0831               	movf	fputs@c^(0+128),w
 11915     1E9E  1D03               	btfss	3,2
 11916     1E9F  2EA1               	goto	u4001
 11917     1EA0  2EA2               	goto	u4000
 11918     1EA1                     u4001:
 11919     1EA1  2E83               	goto	l4169
 11920     1EA2                     u4000:
 11921     1EA2                     l1763:
 11922     1EA2  0008               	return
 11923     1EA3                     __end_of_fputs:
 11924                           
 11925                           	psect	text24
 11926     126D                     __ptext24:	
 11927 ;; *************** function _fputc *****************
 11928 ;; Defined at:
 11929 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\nf_fputc.c"
 11930 ;; Parameters:    Size  Location     Type
 11931 ;;  c               2    3[BANK1 ] int 
 11932 ;;  fp              2    5[BANK1 ] PTR struct _IO_FILE
 11933 ;;		 -> NULL(0), 
 11934 ;; Auto vars:     Size  Location     Type
 11935 ;;		None
 11936 ;; Return value:  Size  Location     Type
 11937 ;;                  2    3[BANK1 ] int 
 11938 ;; Registers used:
 11939 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 11940 ;; Tracked objects:
 11941 ;;		On entry : 0/0
 11942 ;;		On exit  : 0/0
 11943 ;;		Unchanged: 0/0
 11944 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 11945 ;;      Params:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0
 11946 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11947 ;;      Temps:          0       0       5       0       0       0       0       0       0       0       0       0       
      +0       0
 11948 ;;      Totals:         0       0       9       0       0       0       0       0       0       0       0       0       
      +0       0
 11949 ;;Total ram usage:        9 bytes
 11950 ;; Hardware stack levels used: 1
 11951 ;; Hardware stack levels required when called: 7
 11952 ;; This function calls:
 11953 ;;		_putch
 11954 ;; This function is called by:
 11955 ;;		_pad
 11956 ;;		_vfpfcnvrt
 11957 ;;		_fputs
 11958 ;; This function uses a non-reentrant model
 11959 ;;
 11960                           
 11961     126D                     _fputc:	
 11962                           ;psect for function _fputc
 11963                           
 11964     126D                     l4151:	
 11965                           ;incstack = 0
 11966                           ; Regs used in _fputc: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 11967                           
 11968     126D  0021               	movlb	1	; select bank1
 11969     126E  0825               	movf	fputc@fp^(0+128),w
 11970     126F  0426               	iorwf	(fputc@fp+1)^(0+128),w
 11971     1270  1903               	btfsc	3,2
 11972     1271  2A73               	goto	u3961
 11973     1272  2A74               	goto	u3960
 11974     1273                     u3961:
 11975     1273  2A7A               	goto	l4155
 11976     1274                     u3960:
 11977     1274                     l4153:
 11978     1274  0825               	movf	fputc@fp^(0+128),w
 11979     1275  0426               	iorwf	(fputc@fp+1)^(0+128),w
 11980     1276  1D03               	btfss	3,2
 11981     1277  2A79               	goto	u3971
 11982     1278  2A7A               	goto	u3970
 11983     1279                     u3971:
 11984     1279  2A7F               	goto	l4157
 11985     127A                     u3970:
 11986     127A                     l4155:
 11987     127A  0823               	movf	fputc@c^(0+128),w
 11988     127B  3188  2000  3192   	fcall	_putch
 11989     127E  2ACA               	goto	l1755
 11990     127F                     l4157:
 11991     127F  0825               	movf	fputc@fp^(0+128),w
 11992     1280  0086               	movwf	6
 11993     1281  0826               	movf	(fputc@fp+1)^(0+128),w
 11994     1282  0087               	movwf	7
 11995     1283  3149               	addfsr 1,9
 11996     1284  0016               	moviw fsr1++
 11997     1285  0401               	iorwf	1,w
 11998     1286  1903               	btfsc	3,2
 11999     1287  2A89               	goto	u3981
 12000     1288  2A8A               	goto	u3980
 12001     1289                     u3981:
 12002     1289  2AAA               	goto	l4161
 12003     128A                     u3980:
 12004     128A                     l4159:
 12005     128A  0825               	movf	fputc@fp^(0+128),w
 12006     128B  0086               	movwf	6
 12007     128C  0826               	movf	(fputc@fp+1)^(0+128),w
 12008     128D  0087               	movwf	7
 12009     128E  3149               	addfsr 1,9
 12010     128F  3F40               	moviw [0]fsr1
 12011     1290  00A7               	movwf	??_fputc^(0+128)
 12012     1291  3F41               	moviw [1]fsr1
 12013     1292  00A8               	movwf	(??_fputc^(0+128)+1)
 12014     1293  0825               	movf	fputc@fp^(0+128),w
 12015     1294  0086               	movwf	6
 12016     1295  0826               	movf	(fputc@fp+1)^(0+128),w
 12017     1296  0087               	movwf	7
 12018     1297  3142               	addfsr 1,2
 12019     1298  3F40               	moviw [0]fsr1
 12020     1299  00A9               	movwf	(??_fputc+2)^(0+128)
 12021     129A  3F41               	moviw [1]fsr1
 12022     129B  00AA               	movwf	((??_fputc+2)^(0+128)+1)
 12023     129C  082A               	movf	(??_fputc+3)^(0+128),w
 12024     129D  3A80               	xorlw	128
 12025     129E  00AB               	movwf	(??_fputc+4)^(0+128)
 12026     129F  0828               	movf	(??_fputc+1)^(0+128),w
 12027     12A0  3A80               	xorlw	128
 12028     12A1  022B               	subwf	(??_fputc+4)^(0+128),w
 12029     12A2  1D03               	skipz
 12030     12A3  2AA6               	goto	u3995
 12031     12A4  0827               	movf	??_fputc^(0+128),w
 12032     12A5  0229               	subwf	(??_fputc+2)^(0+128),w
 12033     12A6                     u3995:
 12034     12A6  1803               	skipnc
 12035     12A7  2AA9               	goto	u3991
 12036     12A8  2AAA               	goto	u3990
 12037     12A9                     u3991:
 12038     12A9  2ACA               	goto	l1755
 12039     12AA                     u3990:
 12040     12AA                     l4161:
 12041     12AA  0021               	movlb	1	; select bank1
 12042     12AB  0825               	movf	fputc@fp^(0+128),w
 12043     12AC  0086               	movwf	6
 12044     12AD  0826               	movf	(fputc@fp+1)^(0+128),w
 12045     12AE  0087               	movwf	7
 12046     12AF  3142               	addfsr 1,2
 12047     12B0  0825               	movf	fputc@fp^(0+128),w
 12048     12B1  0084               	movwf	4
 12049     12B2  0826               	movf	(fputc@fp+1)^(0+128),w
 12050     12B3  0085               	movwf	5
 12051     12B4  3F00               	moviw [0]fsr0
 12052     12B5  00A7               	movwf	??_fputc^(0+128)
 12053     12B6  3F01               	moviw [1]fsr0
 12054     12B7  00A8               	movwf	(??_fputc^(0+128)+1)
 12055     12B8  3F40               	moviw [0]fsr1
 12056     12B9  0727               	addwf	??_fputc^(0+128),w
 12057     12BA  0084               	movwf	4
 12058     12BB  3F41               	moviw [1]fsr1
 12059     12BC  3D28               	addwfc	(??_fputc+1)^(0+128),w
 12060     12BD  0085               	movwf	5
 12061     12BE  0823               	movf	fputc@c^(0+128),w
 12062     12BF  0080               	movwf	0
 12063     12C0                     l4163:
 12064     12C0  0825               	movf	fputc@fp^(0+128),w
 12065     12C1  0086               	movwf	6
 12066     12C2  0826               	movf	(fputc@fp+1)^(0+128),w
 12067     12C3  0087               	movwf	7
 12068     12C4  3142               	addfsr 1,2
 12069     12C5  3001               	movlw	1
 12070     12C6  0781               	addwf	1,f
 12071     12C7  3141               	addfsr 1,1
 12072     12C8  1803               	skipnc
 12073     12C9  0A81               	incf	1,f
 12074     12CA                     l1755:
 12075     12CA  0008               	return
 12076     12CB                     __end_of_fputc:
 12077                           
 12078                           	psect	text25
 12079     0800                     __ptext25:	
 12080 ;; *************** function _putch *****************
 12081 ;; Defined at:
 12082 ;;		line 409 in file "mcc_generated_files/uart/src/eusart.c"
 12083 ;; Parameters:    Size  Location     Type
 12084 ;;  txData          1    wreg     unsigned char 
 12085 ;; Auto vars:     Size  Location     Type
 12086 ;;  txData          1    2[BANK1 ] unsigned char 
 12087 ;; Return value:  Size  Location     Type
 12088 ;;                  1    wreg      void 
 12089 ;; Registers used:
 12090 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 12091 ;; Tracked objects:
 12092 ;;		On entry : 0/0
 12093 ;;		On exit  : 0/0
 12094 ;;		Unchanged: 0/0
 12095 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 12096 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12097 ;;      Locals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0
 12098 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12099 ;;      Totals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0
 12100 ;;Total ram usage:        1 bytes
 12101 ;; Hardware stack levels used: 1
 12102 ;; Hardware stack levels required when called: 6
 12103 ;; This function calls:
 12104 ;;		_EUSART_IsTxReady
 12105 ;;		_EUSART_Write
 12106 ;; This function is called by:
 12107 ;;		_fputc
 12108 ;; This function uses a non-reentrant model
 12109 ;;
 12110                           
 12111     0800                     _putch:	
 12112                           ;psect for function _putch
 12113                           
 12114                           
 12115                           ;incstack = 0
 12116                           ; Regs used in _putch: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
 12117                           ;putch@txData stored from wreg
 12118     0800  0021               	movlb	1	; select bank1
 12119     0801  00A2               	movwf	putch@txData^(0+128)
 12120     0802                     l4143:
 12121     0802                     l4145:	
 12122                           ;mcc_generated_files/uart/src/eusart.c: 409: void putch(char txData);mcc_generated_files
      +                          /uart/src/eusart.c: 410: {;mcc_generated_files/uart/src/eusart.c: 411:     while(!(EUSAR
      +                          T_IsTxReady()))
 12123                           
 12124                           
 12125                           ;mcc_generated_files/uart/src/eusart.c: 411:     while(!(EUSART_IsTxReady()))
 12126     0802  319B  23AE  3188   	fcall	_EUSART_IsTxReady
 12127     0805  3A00               	xorlw	0
 12128     0806  1903               	skipnz
 12129     0807  2809               	goto	u3951
 12130     0808  280A               	goto	u3950
 12131     0809                     u3951:
 12132     0809  2802               	goto	l4145
 12133     080A                     u3950:
 12134     080A                     l4147:
 12135                           
 12136                           ;mcc_generated_files/uart/src/eusart.c: 415:     return EUSART_Write(txData);;	Return va
      +                          lue of _putch is never used
 12137     080A  0021               	movlb	1	; select bank1
 12138     080B  0822               	movf	putch@txData^(0+128),w
 12139     080C  00A0               	movwf	EUSART_Write@txData^(0+128)
 12140     080D  319E  26A3  3188   	fcall	_EUSART_Write
 12141     0810                     l742:
 12142     0810  0008               	return
 12143     0811                     __end_of_putch:
 12144                           
 12145                           	psect	text26
 12146     1EA3                     __ptext26:	
 12147 ;; *************** function _EUSART_Write *****************
 12148 ;; Defined at:
 12149 ;;		line 353 in file "mcc_generated_files/uart/src/eusart.c"
 12150 ;; Parameters:    Size  Location     Type
 12151 ;;  txData          1    0[BANK1 ] unsigned char 
 12152 ;; Auto vars:     Size  Location     Type
 12153 ;;  tempTxHead      1    1[BANK1 ] unsigned char 
 12154 ;; Return value:  Size  Location     Type
 12155 ;;                  1    wreg      void 
 12156 ;; Registers used:
 12157 ;;		wreg, fsr1l, fsr1h, status,2, status,0
 12158 ;; Tracked objects:
 12159 ;;		On entry : 0/0
 12160 ;;		On exit  : 0/0
 12161 ;;		Unchanged: 0/0
 12162 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 12163 ;;      Params:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0
 12164 ;;      Locals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0
 12165 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12166 ;;      Totals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0
 12167 ;;Total ram usage:        2 bytes
 12168 ;; Hardware stack levels used: 1
 12169 ;; Hardware stack levels required when called: 5
 12170 ;; This function calls:
 12171 ;;		Nothing
 12172 ;; This function is called by:
 12173 ;;		_putch
 12174 ;; This function uses a non-reentrant model
 12175 ;;
 12176                           
 12177     1EA3                     _EUSART_Write:	
 12178                           ;psect for function _EUSART_Write
 12179                           
 12180     1EA3                     l4127:	
 12181                           ;incstack = 0
 12182                           ; Regs used in _EUSART_Write: [wreg+fsr1l+fsr1h+status,2+status,0]
 12183                           
 12184                           
 12185                           ;mcc_generated_files/uart/src/eusart.c: 353: void EUSART_Write(uint8_t txData);mcc_gener
      +                          ated_files/uart/src/eusart.c: 354: {;mcc_generated_files/uart/src/eusart.c: 355:     uin
      +                          t8_t tempTxHead;;mcc_generated_files/uart/src/eusart.c: 357:     if(0 == PIE1bits.TXIE)
 12186     1EA3  0021               	movlb	1	; select bank1
 12187     1EA4  1A11               	btfsc	17,4	;volatile
 12188     1EA5  2EA7               	goto	u3931
 12189     1EA6  2EA8               	goto	u3930
 12190     1EA7                     u3931:
 12191     1EA7  2EAC               	goto	l4131
 12192     1EA8                     u3930:
 12193     1EA8                     l4129:
 12194                           
 12195                           ;mcc_generated_files/uart/src/eusart.c: 358:     {;mcc_generated_files/uart/src/eusart.c
      +                          : 359:         TX1REG = txData;
 12196     1EA8  0820               	movf	EUSART_Write@txData^(0+128),w
 12197     1EA9  0023               	movlb	3	; select bank3
 12198     1EAA  009A               	movwf	26	;volatile
 12199                           
 12200                           ;mcc_generated_files/uart/src/eusart.c: 360:     }
 12201     1EAB  2EC8               	goto	l721
 12202     1EAC                     l4131:
 12203     1EAC  0020               	movlb	0	; select bank0
 12204     1EAD  0869               	movf	_eusartTxBufferRemaining,w	;volatile
 12205     1EAE  1903               	btfsc	3,2
 12206     1EAF  2EB1               	goto	u3941
 12207     1EB0  2EB2               	goto	u3940
 12208     1EB1                     u3941:
 12209     1EB1  2EC8               	goto	l721
 12210     1EB2                     u3940:
 12211     1EB2                     l4133:
 12212                           
 12213                           ;mcc_generated_files/uart/src/eusart.c: 362:     {;mcc_generated_files/uart/src/eusart.c
      +                          : 363:        eusartTxBuffer[eusartTxHead] = txData;
 12214     1EB2  086B               	movf	_eusartTxHead,w
 12215     1EB3  3E38               	addlw	(low (_eusartTxBuffer| (0+256)))& (0+255)
 12216     1EB4  0086               	movwf	6
 12217     1EB5  3001               	movlw	1	; select bank2/3
 12218     1EB6  0087               	movwf	7
 12219     1EB7  0021               	movlb	1	; select bank1
 12220     1EB8  0820               	movf	EUSART_Write@txData^(0+128),w
 12221     1EB9  0081               	movwf	1
 12222     1EBA                     l4135:
 12223                           
 12224                           ;mcc_generated_files/uart/src/eusart.c: 364:        tempTxHead = (eusartTxHead + 1U) & (
      +                          (8U) - 1U);
 12225     1EBA  0020               	movlb	0	; select bank0
 12226     1EBB  086B               	movf	_eusartTxHead,w	;volatile
 12227     1EBC  3E01               	addlw	1
 12228     1EBD  3907               	andlw	7
 12229     1EBE  0021               	movlb	1	; select bank1
 12230     1EBF  00A1               	movwf	EUSART_Write@tempTxHead^(0+128)
 12231     1EC0                     l4137:
 12232                           
 12233                           ;mcc_generated_files/uart/src/eusart.c: 366:        eusartTxHead = tempTxHead;
 12234     1EC0  0821               	movf	EUSART_Write@tempTxHead^(0+128),w
 12235     1EC1  0020               	movlb	0	; select bank0
 12236     1EC2  00EB               	movwf	_eusartTxHead	;volatile
 12237     1EC3                     l4139:
 12238                           
 12239                           ;mcc_generated_files/uart/src/eusart.c: 367:        PIE1bits.TXIE = 0;
 12240     1EC3  0021               	movlb	1	; select bank1
 12241     1EC4  1211               	bcf	17,4	;volatile
 12242     1EC5                     l4141:
 12243                           
 12244                           ;mcc_generated_files/uart/src/eusart.c: 368:        eusartTxBufferRemaining--;
 12245     1EC5  3001               	movlw	1
 12246     1EC6  0020               	movlb	0	; select bank0
 12247     1EC7  02E9               	subwf	_eusartTxBufferRemaining,f	;volatile
 12248     1EC8                     l721:	
 12249                           ;mcc_generated_files/uart/src/eusart.c: 369:     }
 12250                           
 12251                           
 12252                           ;mcc_generated_files/uart/src/eusart.c: 374:     PIE1bits.TXIE = 1;
 12253     1EC8  0021               	movlb	1	; select bank1
 12254     1EC9  1611               	bsf	17,4	;volatile
 12255     1ECA                     l724:
 12256     1ECA  0008               	return
 12257     1ECB                     __end_of_EUSART_Write:
 12258                           
 12259                           	psect	text27
 12260     1BAE                     __ptext27:	
 12261 ;; *************** function _EUSART_IsTxReady *****************
 12262 ;; Defined at:
 12263 ;;		line 272 in file "mcc_generated_files/uart/src/eusart.c"
 12264 ;; Parameters:    Size  Location     Type
 12265 ;;		None
 12266 ;; Auto vars:     Size  Location     Type
 12267 ;;		None
 12268 ;; Return value:  Size  Location     Type
 12269 ;;                  1    wreg      _Bool 
 12270 ;; Registers used:
 12271 ;;		wreg, status,2, status,0
 12272 ;; Tracked objects:
 12273 ;;		On entry : 0/0
 12274 ;;		On exit  : 0/0
 12275 ;;		Unchanged: 0/0
 12276 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 12277 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12278 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12279 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12280 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12281 ;;Total ram usage:        0 bytes
 12282 ;; Hardware stack levels used: 1
 12283 ;; Hardware stack levels required when called: 5
 12284 ;; This function calls:
 12285 ;;		Nothing
 12286 ;; This function is called by:
 12287 ;;		_putch
 12288 ;; This function uses a non-reentrant model
 12289 ;;
 12290                           
 12291     1BAE                     _EUSART_IsTxReady:	
 12292                           ;psect for function _EUSART_IsTxReady
 12293                           
 12294     1BAE                     l4123:	
 12295                           ;incstack = 0
 12296                           ; Regs used in _EUSART_IsTxReady: [wreg+status,2+status,0]
 12297                           
 12298                           
 12299                           ;mcc_generated_files/uart/src/eusart.c: 274:     return (eusartTxBufferRemaining ? 1 : 0
      +                          );
 12300     1BAE  0020               	movlb	0	; select bank0
 12301     1BAF  0869               	movf	_eusartTxBufferRemaining,w	;volatile
 12302     1BB0  1D03               	btfss	3,2
 12303     1BB1  2BB3               	goto	u3911
 12304     1BB2  2BB5               	goto	u3910
 12305     1BB3                     u3911:
 12306     1BB3  3001               	movlw	1
 12307     1BB4  2BB6               	goto	u3920
 12308     1BB5                     u3910:
 12309     1BB5  3000               	movlw	0
 12310     1BB6                     u3920:
 12311     1BB6                     l697:
 12312     1BB6  0008               	return
 12313     1BB7                     __end_of_EUSART_IsTxReady:
 12314                           
 12315                           	psect	text28
 12316     1CED                     __ptext28:	
 12317 ;; *************** function _abs *****************
 12318 ;; Defined at:
 12319 ;;		line 1 in file "C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\abs.c"
 12320 ;; Parameters:    Size  Location     Type
 12321 ;;  a               2    6[BANK1 ] int 
 12322 ;; Auto vars:     Size  Location     Type
 12323 ;;		None
 12324 ;; Return value:  Size  Location     Type
 12325 ;;                  2    6[BANK1 ] int 
 12326 ;; Registers used:
 12327 ;;		wreg, status,2, status,0
 12328 ;; Tracked objects:
 12329 ;;		On entry : 0/0
 12330 ;;		On exit  : 0/0
 12331 ;;		Unchanged: 0/0
 12332 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 12333 ;;      Params:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0
 12334 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12335 ;;      Temps:          0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0
 12336 ;;      Totals:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0
 12337 ;;Total ram usage:        4 bytes
 12338 ;; Hardware stack levels used: 1
 12339 ;; Hardware stack levels required when called: 5
 12340 ;; This function calls:
 12341 ;;		Nothing
 12342 ;; This function is called by:
 12343 ;;		_dtoa
 12344 ;; This function uses a non-reentrant model
 12345 ;;
 12346                           
 12347     1CED                     _abs:	
 12348                           ;psect for function _abs
 12349                           
 12350     1CED                     l4349:	
 12351                           ;incstack = 0
 12352                           ; Regs used in _abs: [wreg+status,2+status,0]
 12353                           
 12354     1CED  0021               	movlb	1	; select bank1
 12355     1CEE  1BA7               	btfsc	(abs@a+1)^(0+128),7
 12356     1CEF  2CF1               	goto	u4421
 12357     1CF0  2CF2               	goto	u4420
 12358     1CF1                     u4421:
 12359     1CF1  2CF3               	goto	l4353
 12360     1CF2                     u4420:
 12361     1CF2                     l4351:
 12362     1CF2  2CFE               	goto	l1743
 12363     1CF3                     l4353:
 12364     1CF3  0926               	comf	abs@a^(0+128),w
 12365     1CF4  00A8               	movwf	??_abs^(0+128)
 12366     1CF5  0927               	comf	(abs@a+1)^(0+128),w
 12367     1CF6  00A9               	movwf	(??_abs^(0+128)+1)
 12368     1CF7  0AA8               	incf	??_abs^(0+128),f
 12369     1CF8  1903               	skipnz
 12370     1CF9  0AA9               	incf	(??_abs^(0+128)+1),f
 12371     1CFA  0828               	movf	??_abs^(0+128),w
 12372     1CFB  00A6               	movwf	?_abs^(0+128)
 12373     1CFC  0829               	movf	(??_abs+1)^(0+128),w
 12374     1CFD  00A7               	movwf	(?_abs+1)^(0+128)
 12375     1CFE                     l1743:
 12376     1CFE  0008               	return
 12377     1CFF                     __end_of_abs:
 12378                           
 12379                           	psect	text29
 12380     105A                     __ptext29:	
 12381 ;; *************** function ___awmod *****************
 12382 ;; Defined at:
 12383 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\awmod.c"
 12384 ;; Parameters:    Size  Location     Type
 12385 ;;  divisor         2    0[BANK1 ] int 
 12386 ;;  dividend        2    2[BANK1 ] int 
 12387 ;; Auto vars:     Size  Location     Type
 12388 ;;  sign            1    5[BANK1 ] unsigned char 
 12389 ;;  counter         1    4[BANK1 ] unsigned char 
 12390 ;; Return value:  Size  Location     Type
 12391 ;;                  2    0[BANK1 ] int 
 12392 ;; Registers used:
 12393 ;;		wreg, status,2, status,0
 12394 ;; Tracked objects:
 12395 ;;		On entry : 0/0
 12396 ;;		On exit  : 0/0
 12397 ;;		Unchanged: 0/0
 12398 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 12399 ;;      Params:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0
 12400 ;;      Locals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0
 12401 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12402 ;;      Totals:         0       0       6       0       0       0       0       0       0       0       0       0       
      +0       0
 12403 ;;Total ram usage:        6 bytes
 12404 ;; Hardware stack levels used: 1
 12405 ;; Hardware stack levels required when called: 5
 12406 ;; This function calls:
 12407 ;;		Nothing
 12408 ;; This function is called by:
 12409 ;;		_dtoa
 12410 ;; This function uses a non-reentrant model
 12411 ;;
 12412                           
 12413     105A                     ___awmod:	
 12414                           ;psect for function ___awmod
 12415                           
 12416     105A                     l4243:	
 12417                           ;incstack = 0
 12418                           ; Regs used in ___awmod: [wreg+status,2+status,0]
 12419                           
 12420     105A  0021               	movlb	1	; select bank1
 12421     105B  01A5               	clrf	___awmod@sign^(0+128)
 12422     105C                     l4245:
 12423     105C  1FA3               	btfss	(___awmod@dividend+1)^(0+128),7
 12424     105D  285F               	goto	u4161
 12425     105E  2860               	goto	u4160
 12426     105F                     u4161:
 12427     105F  2867               	goto	l4251
 12428     1060                     u4160:
 12429     1060                     l4247:
 12430     1060  09A2               	comf	___awmod@dividend^(0+128),f
 12431     1061  09A3               	comf	(___awmod@dividend+1)^(0+128),f
 12432     1062  0AA2               	incf	___awmod@dividend^(0+128),f
 12433     1063  1903               	skipnz
 12434     1064  0AA3               	incf	(___awmod@dividend+1)^(0+128),f
 12435     1065                     l4249:
 12436     1065  3001               	movlw	1
 12437     1066  00A5               	movwf	___awmod@sign^(0+128)
 12438     1067                     l4251:
 12439     1067  1FA1               	btfss	(___awmod@divisor+1)^(0+128),7
 12440     1068  286A               	goto	u4171
 12441     1069  286B               	goto	u4170
 12442     106A                     u4171:
 12443     106A  2870               	goto	l4255
 12444     106B                     u4170:
 12445     106B                     l4253:
 12446     106B  09A0               	comf	___awmod@divisor^(0+128),f
 12447     106C  09A1               	comf	(___awmod@divisor+1)^(0+128),f
 12448     106D  0AA0               	incf	___awmod@divisor^(0+128),f
 12449     106E  1903               	skipnz
 12450     106F  0AA1               	incf	(___awmod@divisor+1)^(0+128),f
 12451     1070                     l4255:
 12452     1070  0820               	movf	___awmod@divisor^(0+128),w
 12453     1071  0421               	iorwf	(___awmod@divisor+1)^(0+128),w
 12454     1072  1903               	btfsc	3,2
 12455     1073  2875               	goto	u4181
 12456     1074  2876               	goto	u4180
 12457     1075                     u4181:
 12458     1075  289D               	goto	l4273
 12459     1076                     u4180:
 12460     1076                     l4257:
 12461     1076  3001               	movlw	1
 12462     1077  00A4               	movwf	___awmod@counter^(0+128)
 12463     1078  2880               	goto	l4263
 12464     1079                     l4259:
 12465     1079  3001               	movlw	1
 12466     107A                     u4195:
 12467     107A  35A0               	lslf	___awmod@divisor^(0+128),f
 12468     107B  0DA1               	rlf	(___awmod@divisor+1)^(0+128),f
 12469     107C  0B89               	decfsz	9,f
 12470     107D  287A               	goto	u4195
 12471     107E                     l4261:
 12472     107E  3001               	movlw	1
 12473     107F  07A4               	addwf	___awmod@counter^(0+128),f
 12474     1080                     l4263:
 12475     1080  1FA1               	btfss	(___awmod@divisor+1)^(0+128),7
 12476     1081  2883               	goto	u4201
 12477     1082  2884               	goto	u4200
 12478     1083                     u4201:
 12479     1083  2879               	goto	l4259
 12480     1084                     u4200:
 12481     1084                     l4265:
 12482     1084  0821               	movf	(___awmod@divisor+1)^(0+128),w
 12483     1085  0223               	subwf	(___awmod@dividend+1)^(0+128),w
 12484     1086  1D03               	skipz
 12485     1087  288A               	goto	u4215
 12486     1088  0820               	movf	___awmod@divisor^(0+128),w
 12487     1089  0222               	subwf	___awmod@dividend^(0+128),w
 12488     108A                     u4215:
 12489     108A  1C03               	skipc
 12490     108B  288D               	goto	u4211
 12491     108C  288E               	goto	u4210
 12492     108D                     u4211:
 12493     108D  2892               	goto	l4269
 12494     108E                     u4210:
 12495     108E                     l4267:
 12496     108E  0820               	movf	___awmod@divisor^(0+128),w
 12497     108F  02A2               	subwf	___awmod@dividend^(0+128),f
 12498     1090  0821               	movf	(___awmod@divisor+1)^(0+128),w
 12499     1091  3BA3               	subwfb	(___awmod@dividend+1)^(0+128),f
 12500     1092                     l4269:
 12501     1092  3001               	movlw	1
 12502     1093                     u4225:
 12503     1093  36A1               	lsrf	(___awmod@divisor+1)^(0+128),f
 12504     1094  0CA0               	rrf	___awmod@divisor^(0+128),f
 12505     1095  0B89               	decfsz	9,f
 12506     1096  2893               	goto	u4225
 12507     1097                     l4271:
 12508     1097  3001               	movlw	1
 12509     1098  02A4               	subwf	___awmod@counter^(0+128),f
 12510     1099  1D03               	btfss	3,2
 12511     109A  289C               	goto	u4231
 12512     109B  289D               	goto	u4230
 12513     109C                     u4231:
 12514     109C  2884               	goto	l4265
 12515     109D                     u4230:
 12516     109D                     l4273:
 12517     109D  0825               	movf	___awmod@sign^(0+128),w
 12518     109E  1903               	btfsc	3,2
 12519     109F  28A1               	goto	u4241
 12520     10A0  28A2               	goto	u4240
 12521     10A1                     u4241:
 12522     10A1  28A7               	goto	l4277
 12523     10A2                     u4240:
 12524     10A2                     l4275:
 12525     10A2  09A2               	comf	___awmod@dividend^(0+128),f
 12526     10A3  09A3               	comf	(___awmod@dividend+1)^(0+128),f
 12527     10A4  0AA2               	incf	___awmod@dividend^(0+128),f
 12528     10A5  1903               	skipnz
 12529     10A6  0AA3               	incf	(___awmod@dividend+1)^(0+128),f
 12530     10A7                     l4277:
 12531     10A7  0823               	movf	(___awmod@dividend+1)^(0+128),w
 12532     10A8  00A1               	movwf	(?___awmod+1)^(0+128)
 12533     10A9  0822               	movf	___awmod@dividend^(0+128),w
 12534     10AA  00A0               	movwf	?___awmod^(0+128)
 12535     10AB                     l1331:
 12536     10AB  0008               	return
 12537     10AC                     __end_of___awmod:
 12538                           
 12539                           	psect	text30
 12540     11B5                     __ptext30:	
 12541 ;; *************** function ___awdiv *****************
 12542 ;; Defined at:
 12543 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\awdiv.c"
 12544 ;; Parameters:    Size  Location     Type
 12545 ;;  divisor         2    0[BANK1 ] int 
 12546 ;;  dividend        2    2[BANK1 ] int 
 12547 ;; Auto vars:     Size  Location     Type
 12548 ;;  quotient        2    6[BANK1 ] int 
 12549 ;;  sign            1    5[BANK1 ] unsigned char 
 12550 ;;  counter         1    4[BANK1 ] unsigned char 
 12551 ;; Return value:  Size  Location     Type
 12552 ;;                  2    0[BANK1 ] int 
 12553 ;; Registers used:
 12554 ;;		wreg, status,2, status,0
 12555 ;; Tracked objects:
 12556 ;;		On entry : 0/0
 12557 ;;		On exit  : 0/0
 12558 ;;		Unchanged: 0/0
 12559 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 12560 ;;      Params:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0
 12561 ;;      Locals:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0
 12562 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12563 ;;      Totals:         0       0       8       0       0       0       0       0       0       0       0       0       
      +0       0
 12564 ;;Total ram usage:        8 bytes
 12565 ;; Hardware stack levels used: 1
 12566 ;; Hardware stack levels required when called: 5
 12567 ;; This function calls:
 12568 ;;		Nothing
 12569 ;; This function is called by:
 12570 ;;		_dtoa
 12571 ;; This function uses a non-reentrant model
 12572 ;;
 12573                           
 12574     11B5                     ___awdiv:	
 12575                           ;psect for function ___awdiv
 12576                           
 12577     11B5                     l4199:	
 12578                           ;incstack = 0
 12579                           ; Regs used in ___awdiv: [wreg+status,2+status,0]
 12580                           
 12581     11B5  0021               	movlb	1	; select bank1
 12582     11B6  01A5               	clrf	___awdiv@sign^(0+128)
 12583     11B7                     l4201:
 12584     11B7  1FA1               	btfss	(___awdiv@divisor+1)^(0+128),7
 12585     11B8  29BA               	goto	u4061
 12586     11B9  29BB               	goto	u4060
 12587     11BA                     u4061:
 12588     11BA  29C2               	goto	l4207
 12589     11BB                     u4060:
 12590     11BB                     l4203:
 12591     11BB  09A0               	comf	___awdiv@divisor^(0+128),f
 12592     11BC  09A1               	comf	(___awdiv@divisor+1)^(0+128),f
 12593     11BD  0AA0               	incf	___awdiv@divisor^(0+128),f
 12594     11BE  1903               	skipnz
 12595     11BF  0AA1               	incf	(___awdiv@divisor+1)^(0+128),f
 12596     11C0                     l4205:
 12597     11C0  3001               	movlw	1
 12598     11C1  00A5               	movwf	___awdiv@sign^(0+128)
 12599     11C2                     l4207:
 12600     11C2  1FA3               	btfss	(___awdiv@dividend+1)^(0+128),7
 12601     11C3  29C5               	goto	u4071
 12602     11C4  29C6               	goto	u4070
 12603     11C5                     u4071:
 12604     11C5  29CD               	goto	l4213
 12605     11C6                     u4070:
 12606     11C6                     l4209:
 12607     11C6  09A2               	comf	___awdiv@dividend^(0+128),f
 12608     11C7  09A3               	comf	(___awdiv@dividend+1)^(0+128),f
 12609     11C8  0AA2               	incf	___awdiv@dividend^(0+128),f
 12610     11C9  1903               	skipnz
 12611     11CA  0AA3               	incf	(___awdiv@dividend+1)^(0+128),f
 12612     11CB                     l4211:
 12613     11CB  3001               	movlw	1
 12614     11CC  06A5               	xorwf	___awdiv@sign^(0+128),f
 12615     11CD                     l4213:
 12616     11CD  01A6               	clrf	___awdiv@quotient^(0+128)
 12617     11CE  01A7               	clrf	(___awdiv@quotient+1)^(0+128)
 12618     11CF                     l4215:
 12619     11CF  0820               	movf	___awdiv@divisor^(0+128),w
 12620     11D0  0421               	iorwf	(___awdiv@divisor+1)^(0+128),w
 12621     11D1  1903               	btfsc	3,2
 12622     11D2  29D4               	goto	u4081
 12623     11D3  29D5               	goto	u4080
 12624     11D4                     u4081:
 12625     11D4  2A02               	goto	l4235
 12626     11D5                     u4080:
 12627     11D5                     l4217:
 12628     11D5  3001               	movlw	1
 12629     11D6  00A4               	movwf	___awdiv@counter^(0+128)
 12630     11D7  29DF               	goto	l4223
 12631     11D8                     l4219:
 12632     11D8  3001               	movlw	1
 12633     11D9                     u4095:
 12634     11D9  35A0               	lslf	___awdiv@divisor^(0+128),f
 12635     11DA  0DA1               	rlf	(___awdiv@divisor+1)^(0+128),f
 12636     11DB  0B89               	decfsz	9,f
 12637     11DC  29D9               	goto	u4095
 12638     11DD                     l4221:
 12639     11DD  3001               	movlw	1
 12640     11DE  07A4               	addwf	___awdiv@counter^(0+128),f
 12641     11DF                     l4223:
 12642     11DF  1FA1               	btfss	(___awdiv@divisor+1)^(0+128),7
 12643     11E0  29E2               	goto	u4101
 12644     11E1  29E3               	goto	u4100
 12645     11E2                     u4101:
 12646     11E2  29D8               	goto	l4219
 12647     11E3                     u4100:
 12648     11E3                     l4225:
 12649     11E3  3001               	movlw	1
 12650     11E4                     u4115:
 12651     11E4  35A6               	lslf	___awdiv@quotient^(0+128),f
 12652     11E5  0DA7               	rlf	(___awdiv@quotient+1)^(0+128),f
 12653     11E6  0B89               	decfsz	9,f
 12654     11E7  29E4               	goto	u4115
 12655     11E8  0821               	movf	(___awdiv@divisor+1)^(0+128),w
 12656     11E9  0223               	subwf	(___awdiv@dividend+1)^(0+128),w
 12657     11EA  1D03               	skipz
 12658     11EB  29EE               	goto	u4125
 12659     11EC  0820               	movf	___awdiv@divisor^(0+128),w
 12660     11ED  0222               	subwf	___awdiv@dividend^(0+128),w
 12661     11EE                     u4125:
 12662     11EE  1C03               	skipc
 12663     11EF  29F1               	goto	u4121
 12664     11F0  29F2               	goto	u4120
 12665     11F1                     u4121:
 12666     11F1  29F7               	goto	l4231
 12667     11F2                     u4120:
 12668     11F2                     l4227:
 12669     11F2  0820               	movf	___awdiv@divisor^(0+128),w
 12670     11F3  02A2               	subwf	___awdiv@dividend^(0+128),f
 12671     11F4  0821               	movf	(___awdiv@divisor+1)^(0+128),w
 12672     11F5  3BA3               	subwfb	(___awdiv@dividend+1)^(0+128),f
 12673     11F6                     l4229:
 12674     11F6  1426               	bsf	___awdiv@quotient^(0+128),0
 12675     11F7                     l4231:
 12676     11F7  3001               	movlw	1
 12677     11F8                     u4135:
 12678     11F8  36A1               	lsrf	(___awdiv@divisor+1)^(0+128),f
 12679     11F9  0CA0               	rrf	___awdiv@divisor^(0+128),f
 12680     11FA  0B89               	decfsz	9,f
 12681     11FB  29F8               	goto	u4135
 12682     11FC                     l4233:
 12683     11FC  3001               	movlw	1
 12684     11FD  02A4               	subwf	___awdiv@counter^(0+128),f
 12685     11FE  1D03               	btfss	3,2
 12686     11FF  2A01               	goto	u4141
 12687     1200  2A02               	goto	u4140
 12688     1201                     u4141:
 12689     1201  29E3               	goto	l4225
 12690     1202                     u4140:
 12691     1202                     l4235:
 12692     1202  0825               	movf	___awdiv@sign^(0+128),w
 12693     1203  1903               	btfsc	3,2
 12694     1204  2A06               	goto	u4151
 12695     1205  2A07               	goto	u4150
 12696     1206                     u4151:
 12697     1206  2A0C               	goto	l4239
 12698     1207                     u4150:
 12699     1207                     l4237:
 12700     1207  09A6               	comf	___awdiv@quotient^(0+128),f
 12701     1208  09A7               	comf	(___awdiv@quotient+1)^(0+128),f
 12702     1209  0AA6               	incf	___awdiv@quotient^(0+128),f
 12703     120A  1903               	skipnz
 12704     120B  0AA7               	incf	(___awdiv@quotient+1)^(0+128),f
 12705     120C                     l4239:
 12706     120C  0827               	movf	(___awdiv@quotient+1)^(0+128),w
 12707     120D  00A1               	movwf	(?___awdiv+1)^(0+128)
 12708     120E  0826               	movf	___awdiv@quotient^(0+128),w
 12709     120F  00A0               	movwf	?___awdiv^(0+128)
 12710     1210                     l1318:
 12711     1210  0008               	return
 12712     1211                     __end_of___awdiv:
 12713                           
 12714                           	psect	text31
 12715     1DF8                     __ptext31:	
 12716 ;; *************** function ___flsub *****************
 12717 ;; Defined at:
 12718 ;;		line 242 in file "C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\sprcadd.c"
 12719 ;; Parameters:    Size  Location     Type
 12720 ;;  a               4   34[BANK1 ] int 
 12721 ;;  b               4   38[BANK1 ] int 
 12722 ;; Auto vars:     Size  Location     Type
 12723 ;;		None
 12724 ;; Return value:  Size  Location     Type
 12725 ;;                  4   34[BANK1 ] int 
 12726 ;; Registers used:
 12727 ;;		wreg, status,2, status,0, pclath, cstack
 12728 ;; Tracked objects:
 12729 ;;		On entry : 0/0
 12730 ;;		On exit  : 0/0
 12731 ;;		Unchanged: 0/0
 12732 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 12733 ;;      Params:         0       0       8       0       0       0       0       0       0       0       0       0       
      +0       0
 12734 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12735 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12736 ;;      Totals:         0       0       8       0       0       0       0       0       0       0       0       0       
      +0       0
 12737 ;;Total ram usage:        8 bytes
 12738 ;; Hardware stack levels used: 1
 12739 ;; Hardware stack levels required when called: 6
 12740 ;; This function calls:
 12741 ;;		___fladd
 12742 ;; This function is called by:
 12743 ;;		_printFloat
 12744 ;; This function uses a non-reentrant model
 12745 ;;
 12746                           
 12747     1DF8                     ___flsub:	
 12748                           ;psect for function ___flsub
 12749                           
 12750     1DF8                     l5133:	
 12751                           ;incstack = 0
 12752                           ; Regs used in ___flsub: [wreg+status,2+status,0+pclath+cstack]
 12753                           
 12754     1DF8  3080               	movlw	128
 12755     1DF9  0021               	movlb	1	; select bank1
 12756     1DFA  06C5               	xorwf	(___flsub@a+3)^(0+128),f
 12757     1DFB                     l5135:
 12758     1DFB  0849               	movf	(___flsub@b+3)^(0+128),w
 12759     1DFC  00B1               	movwf	(___fladd@b+3)^(0+128)
 12760     1DFD  0848               	movf	(___flsub@b+2)^(0+128),w
 12761     1DFE  00B0               	movwf	(___fladd@b+2)^(0+128)
 12762     1DFF  0847               	movf	(___flsub@b+1)^(0+128),w
 12763     1E00  00AF               	movwf	(___fladd@b+1)^(0+128)
 12764     1E01  0846               	movf	___flsub@b^(0+128),w
 12765     1E02  00AE               	movwf	___fladd@b^(0+128)
 12766     1E03  0845               	movf	(___flsub@a+3)^(0+128),w
 12767     1E04  00B5               	movwf	(___fladd@a+3)^(0+128)
 12768     1E05  0844               	movf	(___flsub@a+2)^(0+128),w
 12769     1E06  00B4               	movwf	(___fladd@a+2)^(0+128)
 12770     1E07  0843               	movf	(___flsub@a+1)^(0+128),w
 12771     1E08  00B3               	movwf	(___fladd@a+1)^(0+128)
 12772     1E09  0842               	movf	___flsub@a^(0+128),w
 12773     1E0A  00B2               	movwf	___fladd@a^(0+128)
 12774     1E0B  3185  2504  319D   	fcall	___fladd
 12775     1E0E  0021               	movlb	1	; select bank1
 12776     1E0F  0831               	movf	(?___fladd+3)^(0+128),w
 12777     1E10  00C5               	movwf	(?___flsub+3)^(0+128)
 12778     1E11  0830               	movf	(?___fladd+2)^(0+128),w
 12779     1E12  00C4               	movwf	(?___flsub+2)^(0+128)
 12780     1E13  082F               	movf	(?___fladd+1)^(0+128),w
 12781     1E14  00C3               	movwf	(?___flsub+1)^(0+128)
 12782     1E15  082E               	movf	?___fladd^(0+128),w
 12783     1E16  00C2               	movwf	?___flsub^(0+128)
 12784     1E17                     l1512:
 12785     1E17  0008               	return
 12786     1E18                     __end_of___flsub:
 12787                           
 12788                           	psect	text32
 12789     1CDC                     __ptext32:	
 12790 ;; *************** function _getKp *****************
 12791 ;; Defined at:
 12792 ;;		line 41 in file "controller.c"
 12793 ;; Parameters:    Size  Location     Type
 12794 ;;		None
 12795 ;; Auto vars:     Size  Location     Type
 12796 ;;		None
 12797 ;; Return value:  Size  Location     Type
 12798 ;;                  4    0[BANK1 ] float 
 12799 ;; Registers used:
 12800 ;;		wreg
 12801 ;; Tracked objects:
 12802 ;;		On entry : 0/0
 12803 ;;		On exit  : 0/0
 12804 ;;		Unchanged: 0/0
 12805 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 12806 ;;      Params:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0
 12807 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12808 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12809 ;;      Totals:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0
 12810 ;;Total ram usage:        4 bytes
 12811 ;; Hardware stack levels used: 1
 12812 ;; Hardware stack levels required when called: 5
 12813 ;; This function calls:
 12814 ;;		Nothing
 12815 ;; This function is called by:
 12816 ;;		_printLogs
 12817 ;; This function uses a non-reentrant model
 12818 ;;
 12819                           
 12820     1CDC                     _getKp:	
 12821                           ;psect for function _getKp
 12822                           
 12823     1CDC                     l5959:	
 12824                           ;incstack = 0
 12825                           ; Regs used in _getKp: [wreg]
 12826                           
 12827     1CDC  0022               	movlb	2	; select bank2
 12828     1CDD  086F               	movf	(_kp+3)^(0+256),w
 12829     1CDE  0021               	movlb	1	; select bank1
 12830     1CDF  00A3               	movwf	(?_getKp+3)^(0+128)
 12831     1CE0  0022               	movlb	2	; select bank2
 12832     1CE1  086E               	movf	(_kp+2)^(0+256),w
 12833     1CE2  0021               	movlb	1	; select bank1
 12834     1CE3  00A2               	movwf	(?_getKp+2)^(0+128)
 12835     1CE4  0022               	movlb	2	; select bank2
 12836     1CE5  086D               	movf	(_kp+1)^(0+256),w
 12837     1CE6  0021               	movlb	1	; select bank1
 12838     1CE7  00A1               	movwf	(?_getKp+1)^(0+128)
 12839     1CE8  0022               	movlb	2	; select bank2
 12840     1CE9  086C               	movf	_kp^(0+256),w
 12841     1CEA  0021               	movlb	1	; select bank1
 12842     1CEB  00A0               	movwf	?_getKp^(0+128)
 12843     1CEC                     l937:
 12844     1CEC  0008               	return
 12845     1CED                     __end_of_getKp:
 12846                           
 12847                           	psect	text33
 12848     1CCB                     __ptext33:	
 12849 ;; *************** function _getKi *****************
 12850 ;; Defined at:
 12851 ;;		line 42 in file "controller.c"
 12852 ;; Parameters:    Size  Location     Type
 12853 ;;		None
 12854 ;; Auto vars:     Size  Location     Type
 12855 ;;		None
 12856 ;; Return value:  Size  Location     Type
 12857 ;;                  4    0[BANK1 ] float 
 12858 ;; Registers used:
 12859 ;;		wreg
 12860 ;; Tracked objects:
 12861 ;;		On entry : 0/0
 12862 ;;		On exit  : 0/0
 12863 ;;		Unchanged: 0/0
 12864 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 12865 ;;      Params:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0
 12866 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12867 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12868 ;;      Totals:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0
 12869 ;;Total ram usage:        4 bytes
 12870 ;; Hardware stack levels used: 1
 12871 ;; Hardware stack levels required when called: 5
 12872 ;; This function calls:
 12873 ;;		Nothing
 12874 ;; This function is called by:
 12875 ;;		_printLogs
 12876 ;; This function uses a non-reentrant model
 12877 ;;
 12878                           
 12879     1CCB                     _getKi:	
 12880                           ;psect for function _getKi
 12881                           
 12882     1CCB                     l5963:	
 12883                           ;incstack = 0
 12884                           ; Regs used in _getKi: [wreg]
 12885                           
 12886     1CCB  0022               	movlb	2	; select bank2
 12887     1CCC  086B               	movf	(_ki+3)^(0+256),w
 12888     1CCD  0021               	movlb	1	; select bank1
 12889     1CCE  00A3               	movwf	(?_getKi+3)^(0+128)
 12890     1CCF  0022               	movlb	2	; select bank2
 12891     1CD0  086A               	movf	(_ki+2)^(0+256),w
 12892     1CD1  0021               	movlb	1	; select bank1
 12893     1CD2  00A2               	movwf	(?_getKi+2)^(0+128)
 12894     1CD3  0022               	movlb	2	; select bank2
 12895     1CD4  0869               	movf	(_ki+1)^(0+256),w
 12896     1CD5  0021               	movlb	1	; select bank1
 12897     1CD6  00A1               	movwf	(?_getKi+1)^(0+128)
 12898     1CD7  0022               	movlb	2	; select bank2
 12899     1CD8  0868               	movf	_ki^(0+256),w
 12900     1CD9  0021               	movlb	1	; select bank1
 12901     1CDA  00A0               	movwf	?_getKi^(0+128)
 12902     1CDB                     l940:
 12903     1CDB  0008               	return
 12904     1CDC                     __end_of_getKi:
 12905                           
 12906                           	psect	text34
 12907     1BA5                     __ptext34:	
 12908 ;; *************** function _getDutycycle *****************
 12909 ;; Defined at:
 12910 ;;		line 40 in file "controller.c"
 12911 ;; Parameters:    Size  Location     Type
 12912 ;;		None
 12913 ;; Auto vars:     Size  Location     Type
 12914 ;;		None
 12915 ;; Return value:  Size  Location     Type
 12916 ;;                  2    0[BANK1 ] unsigned short 
 12917 ;; Registers used:
 12918 ;;		wreg
 12919 ;; Tracked objects:
 12920 ;;		On entry : 0/0
 12921 ;;		On exit  : 0/0
 12922 ;;		Unchanged: 0/0
 12923 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 12924 ;;      Params:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0
 12925 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12926 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12927 ;;      Totals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0
 12928 ;;Total ram usage:        2 bytes
 12929 ;; Hardware stack levels used: 1
 12930 ;; Hardware stack levels required when called: 5
 12931 ;; This function calls:
 12932 ;;		Nothing
 12933 ;; This function is called by:
 12934 ;;		_printLogs
 12935 ;;		_dutycycle_led_strip
 12936 ;; This function uses a non-reentrant model
 12937 ;;
 12938                           
 12939     1BA5                     _getDutycycle:	
 12940                           ;psect for function _getDutycycle
 12941                           
 12942     1BA5                     l5955:	
 12943                           ;incstack = 0
 12944                           ; Regs used in _getDutycycle: [wreg]
 12945                           
 12946     1BA5  0020               	movlb	0	; select bank0
 12947     1BA6  0858               	movf	_dutycycle+1,w
 12948     1BA7  0021               	movlb	1	; select bank1
 12949     1BA8  00A1               	movwf	(?_getDutycycle+1)^(0+128)
 12950     1BA9  0020               	movlb	0	; select bank0
 12951     1BAA  0857               	movf	_dutycycle,w
 12952     1BAB  0021               	movlb	1	; select bank1
 12953     1BAC  00A0               	movwf	?_getDutycycle^(0+128)
 12954     1BAD                     l934:
 12955     1BAD  0008               	return
 12956     1BAE                     __end_of_getDutycycle:
 12957                           
 12958                           	psect	text35
 12959     1C31                     __ptext35:	
 12960 ;; *************** function _initLedstrip *****************
 12961 ;; Defined at:
 12962 ;;		line 116 in file "ledstrip.c"
 12963 ;; Parameters:    Size  Location     Type
 12964 ;;		None
 12965 ;; Auto vars:     Size  Location     Type
 12966 ;;		None
 12967 ;; Return value:  Size  Location     Type
 12968 ;;                  1    wreg      void 
 12969 ;; Registers used:
 12970 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
 12971 ;; Tracked objects:
 12972 ;;		On entry : 0/0
 12973 ;;		On exit  : 0/0
 12974 ;;		Unchanged: 0/0
 12975 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 12976 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12977 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12978 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12979 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12980 ;;Total ram usage:        0 bytes
 12981 ;; Hardware stack levels used: 1
 12982 ;; Hardware stack levels required when called: 7
 12983 ;; This function calls:
 12984 ;;		_SPI1_Open
 12985 ;;		_TMR6_PeriodMatchCallbackRegister
 12986 ;; This function is called by:
 12987 ;;		_main
 12988 ;; This function uses a non-reentrant model
 12989 ;;
 12990                           
 12991     1C31                     _initLedstrip:	
 12992                           ;psect for function _initLedstrip
 12993                           
 12994     1C31                     l6127:	
 12995                           ;incstack = 0
 12996                           ; Regs used in _initLedstrip: [wreg-fsr0h+status,2+status,0+pclath+cstack]
 12997                           
 12998                           
 12999                           ;ledstrip.c: 117:     SPI1_Open(HOST_CONFIG);
 13000     1C31  0021               	movlb	1	; select bank1
 13001     1C32  01A6               	clrf	SPI1_Open@spiConfigIndex^(0+128)
 13002     1C33  3193  23A9  319C   	fcall	_SPI1_Open
 13003     1C36                     l6129:
 13004                           
 13005                           ;ledstrip.c: 118:     TMR6_PeriodMatchCallbackRegister(updateLedstripAnimation);
 13006     1C36  3046               	movlw	low _updateLedstripAnimation
 13007     1C37  0021               	movlb	1	; select bank1
 13008     1C38  00A0               	movwf	TMR6_PeriodMatchCallbackRegister@CallbackHandler^(0+128)
 13009     1C39  301B               	movlw	high _updateLedstripAnimation
 13010     1C3A  00A1               	movwf	(TMR6_PeriodMatchCallbackRegister@CallbackHandler^(0+128)+1)
 13011     1C3B  319B  239C  319C   	fcall	_TMR6_PeriodMatchCallbackRegister
 13012     1C3E                     l1013:
 13013     1C3E  0008               	return
 13014     1C3F                     __end_of_initLedstrip:
 13015                           
 13016                           	psect	text36
 13017     1B9C                     __ptext36:	
 13018 ;; *************** function _TMR6_PeriodMatchCallbackRegister *****************
 13019 ;; Defined at:
 13020 ;;		line 104 in file "mcc_generated_files/timer/src/tmr6.c"
 13021 ;; Parameters:    Size  Location     Type
 13022 ;;  CallbackHand    2    0[BANK1 ] PTR FTN()void 
 13023 ;;		 -> updateLedstripAnimation(1), 
 13024 ;; Auto vars:     Size  Location     Type
 13025 ;;		None
 13026 ;; Return value:  Size  Location     Type
 13027 ;;                  1    wreg      void 
 13028 ;; Registers used:
 13029 ;;		wreg
 13030 ;; Tracked objects:
 13031 ;;		On entry : 0/0
 13032 ;;		On exit  : 0/0
 13033 ;;		Unchanged: 0/0
 13034 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 13035 ;;      Params:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0
 13036 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13037 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13038 ;;      Totals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0
 13039 ;;Total ram usage:        2 bytes
 13040 ;; Hardware stack levels used: 1
 13041 ;; Hardware stack levels required when called: 5
 13042 ;; This function calls:
 13043 ;;		Nothing
 13044 ;; This function is called by:
 13045 ;;		_initLedstrip
 13046 ;; This function uses a non-reentrant model
 13047 ;;
 13048                           
 13049     1B9C                     _TMR6_PeriodMatchCallbackRegister:	
 13050                           ;psect for function _TMR6_PeriodMatchCallbackRegister
 13051                           
 13052     1B9C                     l5851:	
 13053                           ;incstack = 0
 13054                           ; Regs used in _TMR6_PeriodMatchCallbackRegister: [wreg]
 13055                           
 13056                           
 13057                           ;mcc_generated_files/timer/src/tmr6.c: 104: void TMR6_PeriodMatchCallbackRegister(void (
      +                          * CallbackHandler)(void));mcc_generated_files/timer/src/tmr6.c: 105: {;mcc_generated_fil
      +                          es/timer/src/tmr6.c: 106:    TMR6_PeriodMatchCallback = CallbackHandler;
 13058     1B9C  0021               	movlb	1	; select bank1
 13059     1B9D  0821               	movf	(TMR6_PeriodMatchCallbackRegister@CallbackHandler+1)^(0+128),w
 13060     1B9E  0022               	movlb	2	; select bank2
 13061     1B9F  00DF               	movwf	(_TMR6_PeriodMatchCallback+1)^(0+256)
 13062     1BA0  0021               	movlb	1	; select bank1
 13063     1BA1  0820               	movf	TMR6_PeriodMatchCallbackRegister@CallbackHandler^(0+128),w
 13064     1BA2  0022               	movlb	2	; select bank2
 13065     1BA3  00DE               	movwf	_TMR6_PeriodMatchCallback^(0+256)
 13066     1BA4                     l525:
 13067     1BA4  0008               	return
 13068     1BA5                     __end_of_TMR6_PeriodMatchCallbackRegister:
 13069                           
 13070                           	psect	text37
 13071     13A9                     __ptext37:	
 13072 ;; *************** function _SPI1_Open *****************
 13073 ;; Defined at:
 13074 ;;		line 81 in file "mcc_generated_files/spi/src/mssp1.c"
 13075 ;; Parameters:    Size  Location     Type
 13076 ;;  spiConfigInd    1    6[BANK1 ] unsigned char 
 13077 ;; Auto vars:     Size  Location     Type
 13078 ;;  returnValue     1    0        _Bool 
 13079 ;; Return value:  Size  Location     Type
 13080 ;;                  1    wreg      _Bool 
 13081 ;; Registers used:
 13082 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
 13083 ;; Tracked objects:
 13084 ;;		On entry : 0/0
 13085 ;;		On exit  : 0/0
 13086 ;;		Unchanged: 0/0
 13087 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 13088 ;;      Params:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0
 13089 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13090 ;;      Temps:          0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0
 13091 ;;      Totals:         0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0
 13092 ;;Total ram usage:        3 bytes
 13093 ;; Hardware stack levels used: 1
 13094 ;; Hardware stack levels required when called: 6
 13095 ;; This function calls:
 13096 ;;		___wmul
 13097 ;; This function is called by:
 13098 ;;		_initLedstrip
 13099 ;; This function uses a non-reentrant model
 13100 ;;
 13101                           
 13102     13A9                     _SPI1_Open:	
 13103                           ;psect for function _SPI1_Open
 13104                           
 13105     13A9                     l5721:	
 13106                           ;incstack = 0
 13107                           ; Regs used in _SPI1_Open: [wreg-fsr0h+status,2+status,0+pclath+cstack]
 13108                           
 13109     13A9                     l5723:
 13110                           
 13111                           ;mcc_generated_files/spi/src/mssp1.c: 84:     if (SSP1CON1bits.SSPEN == 0)
 13112     13A9  0024               	movlb	4	; select bank4
 13113     13AA  1A95               	btfsc	21,5	;volatile
 13114     13AB  2BAD               	goto	u7181
 13115     13AC  2BAE               	goto	u7180
 13116     13AD                     u7181:
 13117     13AD  2C18               	goto	l5731
 13118     13AE                     u7180:
 13119     13AE                     l5725:
 13120                           
 13121                           ;mcc_generated_files/spi/src/mssp1.c: 85:     {;mcc_generated_files/spi/src/mssp1.c: 86:
      +                                   SSP1STAT = spi1_configuration[spiConfigIndex].stat;
 13122     13AE  0021               	movlb	1	; select bank1
 13123     13AF  0826               	movf	SPI1_Open@spiConfigIndex^(0+128),w
 13124     13B0  00A7               	movwf	??_SPI1_Open^(0+128)
 13125     13B1  01A8               	clrf	(??_SPI1_Open^(0+128)+1)
 13126     13B2  0827               	movf	??_SPI1_Open^(0+128),w
 13127     13B3  00A0               	movwf	___wmul@multiplier^(0+128)
 13128     13B4  0828               	movf	(??_SPI1_Open+1)^(0+128),w
 13129     13B5  00A1               	movwf	(___wmul@multiplier+1)^(0+128)
 13130     13B6  3005               	movlw	5
 13131     13B7  00A2               	movwf	___wmul@multiplicand^(0+128)
 13132     13B8  3000               	movlw	0
 13133     13B9  00A3               	movwf	(___wmul@multiplicand^(0+128)+1)
 13134     13BA  319D  25D8  3193   	fcall	___wmul
 13135     13BD  30E2               	movlw	low _spi1_configuration
 13136     13BE  0021               	movlb	1	; select bank1
 13137     13BF  0720               	addwf	?___wmul^(0+128),w
 13138     13C0  0084               	movwf	4
 13139     13C1  3018               	movlw	high _spi1_configuration
 13140     13C2  3D21               	addwfc	(?___wmul+1)^(0+128),w
 13141     13C3  3880               	iorlw	128
 13142     13C4  0085               	movwf	5
 13143     13C5  0800               	movf	0,w	;code access
 13144     13C6  0024               	movlb	4	; select bank4
 13145     13C7  0094               	movwf	20	;volatile
 13146                           
 13147                           ;mcc_generated_files/spi/src/mssp1.c: 87:         SSP1CON1 = spi1_configuration[spiConfi
      +                          gIndex].con1;
 13148     13C8  0021               	movlb	1	; select bank1
 13149     13C9  0826               	movf	SPI1_Open@spiConfigIndex^(0+128),w
 13150     13CA  00A7               	movwf	??_SPI1_Open^(0+128)
 13151     13CB  01A8               	clrf	(??_SPI1_Open^(0+128)+1)
 13152     13CC  0827               	movf	??_SPI1_Open^(0+128),w
 13153     13CD  00A0               	movwf	___wmul@multiplier^(0+128)
 13154     13CE  0828               	movf	(??_SPI1_Open+1)^(0+128),w
 13155     13CF  00A1               	movwf	(___wmul@multiplier+1)^(0+128)
 13156     13D0  3005               	movlw	5
 13157     13D1  00A2               	movwf	___wmul@multiplicand^(0+128)
 13158     13D2  3000               	movlw	0
 13159     13D3  00A3               	movwf	(___wmul@multiplicand^(0+128)+1)
 13160     13D4  319D  25D8  3193   	fcall	___wmul
 13161     13D7  30E3               	movlw	low (_spi1_configuration+1)
 13162     13D8  0021               	movlb	1	; select bank1
 13163     13D9  0720               	addwf	?___wmul^(0+128),w
 13164     13DA  0084               	movwf	4
 13165     13DB  3018               	movlw	high (_spi1_configuration+1)
 13166     13DC  3D21               	addwfc	(?___wmul+1)^(0+128),w
 13167     13DD  3880               	iorlw	128
 13168     13DE  0085               	movwf	5
 13169     13DF  0800               	movf	0,w	;code access
 13170     13E0  0024               	movlb	4	; select bank4
 13171     13E1  0095               	movwf	21	;volatile
 13172                           
 13173                           ;mcc_generated_files/spi/src/mssp1.c: 88:         SSP1CON3 = spi1_configuration[spiConfi
      +                          gIndex].con3;
 13174     13E2  0021               	movlb	1	; select bank1
 13175     13E3  0826               	movf	SPI1_Open@spiConfigIndex^(0+128),w
 13176     13E4  00A7               	movwf	??_SPI1_Open^(0+128)
 13177     13E5  01A8               	clrf	(??_SPI1_Open^(0+128)+1)
 13178     13E6  0827               	movf	??_SPI1_Open^(0+128),w
 13179     13E7  00A0               	movwf	___wmul@multiplier^(0+128)
 13180     13E8  0828               	movf	(??_SPI1_Open+1)^(0+128),w
 13181     13E9  00A1               	movwf	(___wmul@multiplier+1)^(0+128)
 13182     13EA  3005               	movlw	5
 13183     13EB  00A2               	movwf	___wmul@multiplicand^(0+128)
 13184     13EC  3000               	movlw	0
 13185     13ED  00A3               	movwf	(___wmul@multiplicand^(0+128)+1)
 13186     13EE  319D  25D8  3193   	fcall	___wmul
 13187     13F1  30E4               	movlw	low (_spi1_configuration+2)
 13188     13F2  0021               	movlb	1	; select bank1
 13189     13F3  0720               	addwf	?___wmul^(0+128),w
 13190     13F4  0084               	movwf	4
 13191     13F5  3018               	movlw	high (_spi1_configuration+2)
 13192     13F6  3D21               	addwfc	(?___wmul+1)^(0+128),w
 13193     13F7  3880               	iorlw	128
 13194     13F8  0085               	movwf	5
 13195     13F9  0800               	movf	0,w	;code access
 13196     13FA  0024               	movlb	4	; select bank4
 13197     13FB  0097               	movwf	23	;volatile
 13198                           
 13199                           ;mcc_generated_files/spi/src/mssp1.c: 89:         SSP1ADD = spi1_configuration[spiConfig
      +                          Index].baud;
 13200     13FC  0021               	movlb	1	; select bank1
 13201     13FD  0826               	movf	SPI1_Open@spiConfigIndex^(0+128),w
 13202     13FE  00A7               	movwf	??_SPI1_Open^(0+128)
 13203     13FF  01A8               	clrf	(??_SPI1_Open^(0+128)+1)
 13204     1400  0827               	movf	??_SPI1_Open^(0+128),w
 13205     1401  00A0               	movwf	___wmul@multiplier^(0+128)
 13206     1402  0828               	movf	(??_SPI1_Open+1)^(0+128),w
 13207     1403  00A1               	movwf	(___wmul@multiplier+1)^(0+128)
 13208     1404  3005               	movlw	5
 13209     1405  00A2               	movwf	___wmul@multiplicand^(0+128)
 13210     1406  3000               	movlw	0
 13211     1407  00A3               	movwf	(___wmul@multiplicand^(0+128)+1)
 13212     1408  319D  25D8  3193   	fcall	___wmul
 13213     140B  30E5               	movlw	low (_spi1_configuration+3)
 13214     140C  0021               	movlb	1	; select bank1
 13215     140D  0720               	addwf	?___wmul^(0+128),w
 13216     140E  0084               	movwf	4
 13217     140F  3018               	movlw	high (_spi1_configuration+3)
 13218     1410  3D21               	addwfc	(?___wmul+1)^(0+128),w
 13219     1411  3880               	iorlw	128
 13220     1412  0085               	movwf	5
 13221     1413  0800               	movf	0,w	;code access
 13222     1414  0024               	movlb	4	; select bank4
 13223     1415  0092               	movwf	18	;volatile
 13224     1416                     l5727:
 13225                           
 13226                           ;mcc_generated_files/spi/src/mssp1.c: 91:         SSP1CON1bits.SSPEN = 1;
 13227     1416  1695               	bsf	21,5	;volatile
 13228     1417                     l5729:
 13229                           
 13230                           ;mcc_generated_files/spi/src/mssp1.c: 94:     }
 13231     1417  2C18               	goto	l127
 13232     1418                     l5731:
 13233     1418                     l127:
 13234     1418  0008               	return
 13235     1419                     __end_of_SPI1_Open:
 13236                           
 13237                           	psect	text38
 13238     1DD8                     __ptext38:	
 13239 ;; *************** function ___wmul *****************
 13240 ;; Defined at:
 13241 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\Umul16.c"
 13242 ;; Parameters:    Size  Location     Type
 13243 ;;  multiplier      2    0[BANK1 ] unsigned int 
 13244 ;;  multiplicand    2    2[BANK1 ] unsigned int 
 13245 ;; Auto vars:     Size  Location     Type
 13246 ;;  product         2    4[BANK1 ] unsigned int 
 13247 ;; Return value:  Size  Location     Type
 13248 ;;                  2    0[BANK1 ] unsigned int 
 13249 ;; Registers used:
 13250 ;;		wreg, status,2, status,0
 13251 ;; Tracked objects:
 13252 ;;		On entry : 0/0
 13253 ;;		On exit  : 0/0
 13254 ;;		Unchanged: 0/0
 13255 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 13256 ;;      Params:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0
 13257 ;;      Locals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0
 13258 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13259 ;;      Totals:         0       0       6       0       0       0       0       0       0       0       0       0       
      +0       0
 13260 ;;Total ram usage:        6 bytes
 13261 ;; Hardware stack levels used: 1
 13262 ;; Hardware stack levels required when called: 5
 13263 ;; This function calls:
 13264 ;;		Nothing
 13265 ;; This function is called by:
 13266 ;;		_SPI1_Open
 13267 ;;		_atoi
 13268 ;;		_read_prec_or_width
 13269 ;;		_dutycycle_led_strip
 13270 ;; This function uses a non-reentrant model
 13271 ;;
 13272                           
 13273     1DD8                     ___wmul:	
 13274                           ;psect for function ___wmul
 13275                           
 13276     1DD8                     l4185:	
 13277                           ;incstack = 0
 13278                           ; Regs used in ___wmul: [wreg+status,2+status,0]
 13279                           
 13280     1DD8  0021               	movlb	1	; select bank1
 13281     1DD9  01A4               	clrf	___wmul@product^(0+128)
 13282     1DDA  01A5               	clrf	(___wmul@product+1)^(0+128)
 13283     1DDB                     l4187:
 13284     1DDB  1C20               	btfss	___wmul@multiplier^(0+128),0
 13285     1DDC  2DDE               	goto	u4021
 13286     1DDD  2DDF               	goto	u4020
 13287     1DDE                     u4021:
 13288     1DDE  2DE3               	goto	l1165
 13289     1DDF                     u4020:
 13290     1DDF                     l4189:
 13291     1DDF  0822               	movf	___wmul@multiplicand^(0+128),w
 13292     1DE0  07A4               	addwf	___wmul@product^(0+128),f
 13293     1DE1  0823               	movf	(___wmul@multiplicand+1)^(0+128),w
 13294     1DE2  3DA5               	addwfc	(___wmul@product+1)^(0+128),f
 13295     1DE3                     l1165:
 13296     1DE3  3001               	movlw	1
 13297     1DE4                     u4035:
 13298     1DE4  35A2               	lslf	___wmul@multiplicand^(0+128),f
 13299     1DE5  0DA3               	rlf	(___wmul@multiplicand+1)^(0+128),f
 13300     1DE6  0B89               	decfsz	9,f
 13301     1DE7  2DE4               	goto	u4035
 13302     1DE8                     l4191:
 13303     1DE8  3001               	movlw	1
 13304     1DE9                     u4045:
 13305     1DE9  36A1               	lsrf	(___wmul@multiplier+1)^(0+128),f
 13306     1DEA  0CA0               	rrf	___wmul@multiplier^(0+128),f
 13307     1DEB  0B89               	decfsz	9,f
 13308     1DEC  2DE9               	goto	u4045
 13309     1DED                     l4193:
 13310     1DED  0820               	movf	___wmul@multiplier^(0+128),w
 13311     1DEE  0421               	iorwf	(___wmul@multiplier+1)^(0+128),w
 13312     1DEF  1D03               	btfss	3,2
 13313     1DF0  2DF2               	goto	u4051
 13314     1DF1  2DF3               	goto	u4050
 13315     1DF2                     u4051:
 13316     1DF2  2DDB               	goto	l4187
 13317     1DF3                     u4050:
 13318     1DF3                     l4195:
 13319     1DF3  0825               	movf	(___wmul@product+1)^(0+128),w
 13320     1DF4  00A1               	movwf	(?___wmul+1)^(0+128)
 13321     1DF5  0824               	movf	___wmul@product^(0+128),w
 13322     1DF6  00A0               	movwf	?___wmul^(0+128)
 13323     1DF7                     l1167:
 13324     1DF7  0008               	return
 13325     1DF8                     __end_of___wmul:
 13326                           
 13327                           	psect	text39
 13328     1C24                     __ptext39:	
 13329 ;; *************** function _initAdcMultiplexer *****************
 13330 ;; Defined at:
 13331 ;;		line 24 in file "adcMeasurements.c"
 13332 ;; Parameters:    Size  Location     Type
 13333 ;;		None
 13334 ;; Auto vars:     Size  Location     Type
 13335 ;;		None
 13336 ;; Return value:  Size  Location     Type
 13337 ;;                  1    wreg      void 
 13338 ;; Registers used:
 13339 ;;		wreg, status,2, status,0, pclath, cstack
 13340 ;; Tracked objects:
 13341 ;;		On entry : 0/0
 13342 ;;		On exit  : 0/0
 13343 ;;		Unchanged: 0/0
 13344 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 13345 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13346 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13347 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13348 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13349 ;;Total ram usage:        0 bytes
 13350 ;; Hardware stack levels used: 1
 13351 ;; Hardware stack levels required when called: 6
 13352 ;; This function calls:
 13353 ;;		_ADC_SelectChannel
 13354 ;;		_ADC_SetInterruptHandler
 13355 ;; This function is called by:
 13356 ;;		_main
 13357 ;; This function uses a non-reentrant model
 13358 ;;
 13359                           
 13360     1C24                     _initAdcMultiplexer:	
 13361                           ;psect for function _initAdcMultiplexer
 13362                           
 13363     1C24                     l6125:	
 13364                           ;incstack = 0
 13365                           ; Regs used in _initAdcMultiplexer: [wreg+status,2+status,0+pclath+cstack]
 13366                           
 13367                           
 13368                           ;adcMeasurements.c: 25:     ADC_SelectChannel(potentiometer);
 13369     1C24  3010               	movlw	16
 13370     1C25  319C  240B  319C   	fcall	_ADC_SelectChannel
 13371                           
 13372                           ;adcMeasurements.c: 26:     ADC_SetInterruptHandler(adcConversionDoneHandler);
 13373     1C28  3020               	movlw	low _adcConversionDoneHandler
 13374     1C29  0021               	movlb	1	; select bank1
 13375     1C2A  00A0               	movwf	ADC_SetInterruptHandler@InterruptHandler^(0+128)
 13376     1C2B  301F               	movlw	high _adcConversionDoneHandler
 13377     1C2C  00A1               	movwf	(ADC_SetInterruptHandler@InterruptHandler^(0+128)+1)
 13378     1C2D  319B  2366  319C   	fcall	_ADC_SetInterruptHandler
 13379     1C30                     l814:
 13380     1C30  0008               	return
 13381     1C31                     __end_of_initAdcMultiplexer:
 13382                           
 13383                           	psect	text40
 13384     1C0B                     __ptext40:	
 13385 ;; *************** function _ADC_SelectChannel *****************
 13386 ;; Defined at:
 13387 ;;		line 82 in file "mcc_generated_files/adc/src/adc.c"
 13388 ;; Parameters:    Size  Location     Type
 13389 ;;  channel         1    wreg     enum E6663
 13390 ;; Auto vars:     Size  Location     Type
 13391 ;;  channel         1    1[BANK1 ] enum E6663
 13392 ;; Return value:  Size  Location     Type
 13393 ;;                  1    wreg      void 
 13394 ;; Registers used:
 13395 ;;		wreg, status,2, status,0
 13396 ;; Tracked objects:
 13397 ;;		On entry : 0/0
 13398 ;;		On exit  : 0/0
 13399 ;;		Unchanged: 0/0
 13400 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 13401 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13402 ;;      Locals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0
 13403 ;;      Temps:          0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0
 13404 ;;      Totals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0
 13405 ;;Total ram usage:        2 bytes
 13406 ;; Hardware stack levels used: 1
 13407 ;; Hardware stack levels required when called: 5
 13408 ;; This function calls:
 13409 ;;		Nothing
 13410 ;; This function is called by:
 13411 ;;		_initAdcMultiplexer
 13412 ;; This function uses a non-reentrant model
 13413 ;;
 13414                           
 13415     1C0B                     _ADC_SelectChannel:	
 13416                           ;psect for function _ADC_SelectChannel
 13417                           
 13418                           
 13419                           ;incstack = 0
 13420                           ; Regs used in _ADC_SelectChannel: [wreg+status,2+status,0]
 13421                           ;ADC_SelectChannel@channel stored from wreg
 13422     1C0B  0021               	movlb	1	; select bank1
 13423     1C0C  00A1               	movwf	ADC_SelectChannel@channel^(0+128)
 13424     1C0D                     l5711:
 13425                           
 13426                           ;mcc_generated_files/adc/src/adc.c: 82: void ADC_SelectChannel(adc_channel_t channel);mc
      +                          c_generated_files/adc/src/adc.c: 83: {;mcc_generated_files/adc/src/adc.c: 85:     ADCON0
      +                          bits.CHS = channel;
 13427     1C0D  0821               	movf	ADC_SelectChannel@channel^(0+128),w
 13428     1C0E  00A0               	movwf	??_ADC_SelectChannel^(0+128)
 13429     1C0F  0DA0               	rlf	??_ADC_SelectChannel^(0+128),f
 13430     1C10  0DA0               	rlf	??_ADC_SelectChannel^(0+128),f
 13431     1C11  081D               	movf	29,w	;volatile
 13432     1C12  0620               	xorwf	??_ADC_SelectChannel^(0+128),w
 13433     1C13  3903               	andlw	-253
 13434     1C14  0620               	xorwf	??_ADC_SelectChannel^(0+128),w
 13435     1C15  009D               	movwf	29	;volatile
 13436     1C16                     l30:
 13437     1C16  0008               	return
 13438     1C17                     __end_of_ADC_SelectChannel:
 13439                           
 13440                           	psect	text41
 13441     1CFF                     __ptext41:	
 13442 ;; *************** function _TMR6_Tasks *****************
 13443 ;; Defined at:
 13444 ;;		line 124 in file "mcc_generated_files/timer/src/tmr6.c"
 13445 ;; Parameters:    Size  Location     Type
 13446 ;;		None
 13447 ;; Auto vars:     Size  Location     Type
 13448 ;;		None
 13449 ;; Return value:  Size  Location     Type
 13450 ;;                  1    wreg      void 
 13451 ;; Registers used:
 13452 ;;		wreg, status,2, status,0, pclath, cstack
 13453 ;; Tracked objects:
 13454 ;;		On entry : 0/0
 13455 ;;		On exit  : 0/0
 13456 ;;		Unchanged: 0/0
 13457 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 13458 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13459 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13460 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13461 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13462 ;;Total ram usage:        0 bytes
 13463 ;; Hardware stack levels used: 1
 13464 ;; Hardware stack levels required when called: 10
 13465 ;; This function calls:
 13466 ;;		NULL
 13467 ;;		_TMR6_DefaultPeriodMatchCallback
 13468 ;;		_updateLedstripAnimation
 13469 ;; This function is called by:
 13470 ;;		_main
 13471 ;; This function uses a non-reentrant model
 13472 ;;
 13473                           
 13474     1CFF                     _TMR6_Tasks:	
 13475                           ;psect for function _TMR6_Tasks
 13476                           
 13477     1CFF                     l6071:	
 13478                           ;incstack = 0
 13479                           ; Regs used in _TMR6_Tasks: [wreg+status,2+status,0+pclath+cstack]
 13480                           
 13481                           
 13482                           ;mcc_generated_files/timer/src/tmr6.c: 126:     if(1U == PIR2bits.TMR6IF)
 13483     1CFF  0020               	movlb	0	; select bank0
 13484     1D00  1F92               	btfss	18,7	;volatile
 13485     1D01  2D03               	goto	u7421
 13486     1D02  2D04               	goto	u7420
 13487     1D03                     u7421:
 13488     1D03  2D12               	goto	l539
 13489     1D04                     u7420:
 13490     1D04                     l6073:
 13491                           
 13492                           ;mcc_generated_files/timer/src/tmr6.c: 127:     {;mcc_generated_files/timer/src/tmr6.c: 
      +                          128:         if(((void*)0) != TMR6_PeriodMatchCallback)
 13493     1D04  0022               	movlb	2	; select bank2
 13494     1D05  085E               	movf	_TMR6_PeriodMatchCallback^(0+256),w
 13495     1D06  045F               	iorwf	(_TMR6_PeriodMatchCallback+1)^(0+256),w
 13496     1D07  1903               	btfsc	3,2
 13497     1D08  2D0A               	goto	u7431
 13498     1D09  2D0B               	goto	u7430
 13499     1D0A                     u7431:
 13500     1D0A  2D10               	goto	l6077
 13501     1D0B                     u7430:
 13502     1D0B                     l6075:
 13503                           
 13504                           ;mcc_generated_files/timer/src/tmr6.c: 129:         {;mcc_generated_files/timer/src/tmr6
      +                          .c: 130:             TMR6_PeriodMatchCallback();
 13505     1D0B  085F               	movf	(_TMR6_PeriodMatchCallback+1)^(0+256),w
 13506     1D0C  008A               	movwf	10
 13507     1D0D  085E               	movf	_TMR6_PeriodMatchCallback^(0+256),w
 13508     1D0E  000A               	callw
 13509     1D0F  319C               	pagesel	$
 13510     1D10                     l6077:
 13511                           
 13512                           ;mcc_generated_files/timer/src/tmr6.c: 132:         PIR2bits.TMR6IF = 0;
 13513     1D10  0020               	movlb	0	; select bank0
 13514     1D11  1392               	bcf	18,7	;volatile
 13515     1D12                     l539:
 13516     1D12  0008               	return
 13517     1D13                     __end_of_TMR6_Tasks:
 13518                           
 13519                           	psect	text42
 13520     0003                     __ptext42:	
 13521 ;; *************** function _TMR6_DefaultPeriodMatchCallback *****************
 13522 ;; Defined at:
 13523 ;;		line 109 in file "mcc_generated_files/timer/src/tmr6.c"
 13524 ;; Parameters:    Size  Location     Type
 13525 ;;		None
 13526 ;; Auto vars:     Size  Location     Type
 13527 ;;		None
 13528 ;; Return value:  Size  Location     Type
 13529 ;;                  1    wreg      void 
 13530 ;; Registers used:
 13531 ;;		None
 13532 ;; Tracked objects:
 13533 ;;		On entry : 0/0
 13534 ;;		On exit  : 0/0
 13535 ;;		Unchanged: 0/0
 13536 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 13537 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13538 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13539 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13540 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13541 ;;Total ram usage:        0 bytes
 13542 ;; Hardware stack levels used: 1
 13543 ;; Hardware stack levels required when called: 5
 13544 ;; This function calls:
 13545 ;;		Nothing
 13546 ;; This function is called by:
 13547 ;;		_TMR6_Initialize
 13548 ;;		_TMR6_Tasks
 13549 ;; This function uses a non-reentrant model
 13550 ;;
 13551                           
 13552     0003                     _TMR6_DefaultPeriodMatchCallback:	
 13553                           ;psect for function _TMR6_DefaultPeriodMatchCallback
 13554                           
 13555     0003                     l528:	
 13556                           ;incstack = 0
 13557                           ; Regs used in _TMR6_DefaultPeriodMatchCallback: []
 13558                           
 13559     0003  0008               	return
 13560     0004                     __end_of_TMR6_DefaultPeriodMatchCallback:
 13561                           
 13562                           	psect	text43
 13563     1B46                     __ptext43:	
 13564 ;; *************** function _updateLedstripAnimation *****************
 13565 ;; Defined at:
 13566 ;;		line 112 in file "ledstrip.c"
 13567 ;; Parameters:    Size  Location     Type
 13568 ;;		None
 13569 ;; Auto vars:     Size  Location     Type
 13570 ;;		None
 13571 ;; Return value:  Size  Location     Type
 13572 ;;                  1    wreg      void 
 13573 ;; Registers used:
 13574 ;;		wreg, status,2, status,0, pclath, cstack
 13575 ;; Tracked objects:
 13576 ;;		On entry : 0/0
 13577 ;;		On exit  : 0/0
 13578 ;;		Unchanged: 0/0
 13579 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 13580 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13581 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13582 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13583 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13584 ;;Total ram usage:        0 bytes
 13585 ;; Hardware stack levels used: 1
 13586 ;; Hardware stack levels required when called: 9
 13587 ;; This function calls:
 13588 ;;		_position_led_strip
 13589 ;; This function is called by:
 13590 ;;		_initLedstrip
 13591 ;;		_TMR6_Tasks
 13592 ;; This function uses a non-reentrant model
 13593 ;;
 13594                           
 13595     1B46                     _updateLedstripAnimation:	
 13596                           ;psect for function _updateLedstripAnimation
 13597                           
 13598     1B46                     l6033:	
 13599                           ;incstack = 0
 13600                           ; Regs used in _updateLedstripAnimation: [wreg+status,2+status,0+pclath+cstack]
 13601                           
 13602                           
 13603                           ;ledstrip.c: 113:     position_led_strip();
 13604     1B46  3189  21C7  319B   	fcall	_position_led_strip
 13605     1B49                     l1010:
 13606     1B49  0008               	return
 13607     1B4A                     __end_of_updateLedstripAnimation:
 13608                           
 13609                           	psect	text44
 13610     09C7                     __ptext44:	
 13611 ;; *************** function _position_led_strip *****************
 13612 ;; Defined at:
 13613 ;;		line 60 in file "ledstrip.c"
 13614 ;; Parameters:    Size  Location     Type
 13615 ;;		None
 13616 ;; Auto vars:     Size  Location     Type
 13617 ;;  led             1    9[BANK2 ] unsigned char 
 13618 ;;  led_on          2   10[BANK2 ] int 
 13619 ;;  target          2    7[BANK2 ] int 
 13620 ;; Return value:  Size  Location     Type
 13621 ;;                  1    wreg      void 
 13622 ;; Registers used:
 13623 ;;		wreg, status,2, status,0, pclath, cstack
 13624 ;; Tracked objects:
 13625 ;;		On entry : 0/0
 13626 ;;		On exit  : 0/0
 13627 ;;		Unchanged: 0/0
 13628 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 13629 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13630 ;;      Locals:         0       0       0       5       0       0       0       0       0       0       0       0       
      +0       0
 13631 ;;      Temps:          0       0       0       3       0       0       0       0       0       0       0       0       
      +0       0
 13632 ;;      Totals:         0       0       0       8       0       0       0       0       0       0       0       0       
      +0       0
 13633 ;;Total ram usage:        8 bytes
 13634 ;; Hardware stack levels used: 1
 13635 ;; Hardware stack levels required when called: 8
 13636 ;; This function calls:
 13637 ;;		_getHoogtesensor
 13638 ;;		_getLedNumber
 13639 ;;		_getSetpoint
 13640 ;;		_sendLedstripEndFrame
 13641 ;;		_sendLedstripFrame
 13642 ;;		_sendLedstripStartFrame
 13643 ;; This function is called by:
 13644 ;;		_updateLedstripAnimation
 13645 ;; This function uses a non-reentrant model
 13646 ;;
 13647                           
 13648     09C7                     _position_led_strip:	
 13649                           ;psect for function _position_led_strip
 13650                           
 13651     09C7                     l5063:	
 13652                           ;incstack = 0
 13653                           ; Regs used in _position_led_strip: [wreg+status,2+status,0+pclath+cstack]
 13654                           
 13655                           
 13656                           ;ledstrip.c: 61:     int led_on = getLedNumber(getHoogtesensor());
 13657     09C7  319B  238A  3189   	fcall	_getHoogtesensor
 13658     09CA  0021               	movlb	1	; select bank1
 13659     09CB  0821               	movf	(?_getHoogtesensor+1)^(0+128),w
 13660     09CC  00EF               	movwf	(getLedNumber@height+1)^(0+128)
 13661     09CD  0820               	movf	?_getHoogtesensor^(0+128),w
 13662     09CE  00EE               	movwf	getLedNumber@height^(0+128)
 13663     09CF  3191  215A  3189   	fcall	_getLedNumber
 13664     09D2  0021               	movlb	1	; select bank1
 13665     09D3  086F               	movf	(?_getLedNumber+1)^(0+128),w
 13666     09D4  0022               	movlb	2	; select bank2
 13667     09D5  00DB               	movwf	(position_led_strip@led_on+1)^(0+256)
 13668     09D6  0021               	movlb	1	; select bank1
 13669     09D7  086E               	movf	?_getLedNumber^(0+128),w
 13670     09D8  0022               	movlb	2	; select bank2
 13671     09D9  00DA               	movwf	position_led_strip@led_on^(0+256)
 13672     09DA                     l5065:
 13673                           
 13674                           ;ledstrip.c: 62:     if (led_on < 0) {
 13675     09DA  1FDB               	btfss	(position_led_strip@led_on+1)^(0+256),7
 13676     09DB  29DD               	goto	u5791
 13677     09DC  29DE               	goto	u5790
 13678     09DD                     u5791:
 13679     09DD  29E1               	goto	l5069
 13680     09DE                     u5790:
 13681     09DE                     l5067:
 13682                           
 13683                           ;ledstrip.c: 63:         led_on = 0;
 13684     09DE  01DA               	clrf	position_led_strip@led_on^(0+256)
 13685     09DF  01DB               	clrf	(position_led_strip@led_on+1)^(0+256)
 13686                           
 13687                           ;ledstrip.c: 64:     } else if (led_on > 59) {
 13688     09E0  29F3               	goto	l5073
 13689     09E1                     l5069:
 13690     09E1  085B               	movf	(position_led_strip@led_on+1)^(0+256),w
 13691     09E2  3A80               	xorlw	128
 13692     09E3  00D4               	movwf	??_position_led_strip^(0+256)
 13693     09E4  3080               	movlw	128
 13694     09E5  0254               	subwf	??_position_led_strip^(0+256),w
 13695     09E6  1D03               	skipz
 13696     09E7  29EA               	goto	u5805
 13697     09E8  303C               	movlw	60
 13698     09E9  025A               	subwf	position_led_strip@led_on^(0+256),w
 13699     09EA                     u5805:
 13700     09EA  1C03               	skipc
 13701     09EB  29ED               	goto	u5801
 13702     09EC  29EE               	goto	u5800
 13703     09ED                     u5801:
 13704     09ED  29F3               	goto	l5073
 13705     09EE                     u5800:
 13706     09EE                     l5071:
 13707                           
 13708                           ;ledstrip.c: 65:         led_on = 59;
 13709     09EE  303B               	movlw	59
 13710     09EF  0022               	movlb	2	; select bank2
 13711     09F0  00DA               	movwf	position_led_strip@led_on^(0+256)
 13712     09F1  3000               	movlw	0
 13713     09F2  00DB               	movwf	(position_led_strip@led_on^(0+256)+1)
 13714     09F3                     l5073:
 13715                           
 13716                           ;ledstrip.c: 68:     int target = getLedNumber(getSetpoint());
 13717     09F3  319B  2393  3189   	fcall	_getSetpoint
 13718     09F6  0021               	movlb	1	; select bank1
 13719     09F7  0821               	movf	(?_getSetpoint+1)^(0+128),w
 13720     09F8  00EF               	movwf	(getLedNumber@height+1)^(0+128)
 13721     09F9  0820               	movf	?_getSetpoint^(0+128),w
 13722     09FA  00EE               	movwf	getLedNumber@height^(0+128)
 13723     09FB  3191  215A  3189   	fcall	_getLedNumber
 13724     09FE  0021               	movlb	1	; select bank1
 13725     09FF  086F               	movf	(?_getLedNumber+1)^(0+128),w
 13726     0A00  0022               	movlb	2	; select bank2
 13727     0A01  00D8               	movwf	(position_led_strip@target+1)^(0+256)
 13728     0A02  0021               	movlb	1	; select bank1
 13729     0A03  086E               	movf	?_getLedNumber^(0+128),w
 13730     0A04  0022               	movlb	2	; select bank2
 13731     0A05  00D7               	movwf	position_led_strip@target^(0+256)
 13732     0A06                     l5075:
 13733                           
 13734                           ;ledstrip.c: 69:     if (target < 0) {
 13735     0A06  1FD8               	btfss	(position_led_strip@target+1)^(0+256),7
 13736     0A07  2A09               	goto	u5811
 13737     0A08  2A0A               	goto	u5810
 13738     0A09                     u5811:
 13739     0A09  2A0C               	goto	l5079
 13740     0A0A                     u5810:
 13741     0A0A                     l5077:
 13742                           
 13743                           ;ledstrip.c: 70:         target = 0;
 13744     0A0A  01D7               	clrf	position_led_strip@target^(0+256)
 13745     0A0B  01D8               	clrf	(position_led_strip@target+1)^(0+256)
 13746     0A0C                     l5079:
 13747                           
 13748                           ;ledstrip.c: 74:     sendLedstripStartFrame();
 13749     0A0C  319D  2528  3189   	fcall	_sendLedstripStartFrame
 13750     0A0F                     l5081:
 13751                           
 13752                           ;ledstrip.c: 75:     for (uint8_t led = 0; led < 59; led++) {
 13753     0A0F  0022               	movlb	2	; select bank2
 13754     0A10  01D9               	clrf	position_led_strip@led^(0+256)
 13755     0A11                     l5087:
 13756                           
 13757                           ;ledstrip.c: 78:         if (led_on == target) {
 13758     0A11  0858               	movf	(position_led_strip@target+1)^(0+256),w
 13759     0A12  065B               	xorwf	(position_led_strip@led_on+1)^(0+256),w
 13760     0A13  1D03               	skipz
 13761     0A14  2A17               	goto	u5825
 13762     0A15  0857               	movf	position_led_strip@target^(0+256),w
 13763     0A16  065A               	xorwf	position_led_strip@led_on^(0+256),w
 13764     0A17                     u5825:
 13765     0A17  1D03               	skipz
 13766     0A18  2A1A               	goto	u5821
 13767     0A19  2A1B               	goto	u5820
 13768     0A1A                     u5821:
 13769     0A1A  2A1E               	goto	l5091
 13770     0A1B                     u5820:
 13771     0A1B                     l5089:
 13772                           
 13773                           ;ledstrip.c: 79:             is_on_target = 1;
 13774     0A1B  3001               	movlw	1
 13775     0A1C  0020               	movlb	0	; select bank0
 13776     0A1D  00E4               	movwf	_is_on_target
 13777     0A1E                     l5091:
 13778                           
 13779                           ;ledstrip.c: 81:         if (is_on_target){
 13780     0A1E  0020               	movlb	0	; select bank0
 13781     0A1F  0864               	movf	_is_on_target,w
 13782     0A20  1903               	btfsc	3,2
 13783     0A21  2A23               	goto	u5831
 13784     0A22  2A24               	goto	u5830
 13785     0A23                     u5831:
 13786     0A23  2A96               	goto	l5111
 13787     0A24                     u5830:
 13788     0A24                     l5093:
 13789                           
 13790                           ;ledstrip.c: 82:             if (led_on >= target - 1 && led_on <= target + 1) {
 13791     0A24  0022               	movlb	2	; select bank2
 13792     0A25  0857               	movf	position_led_strip@target^(0+256),w
 13793     0A26  3EFF               	addlw	255
 13794     0A27  00D4               	movwf	??_position_led_strip^(0+256)
 13795     0A28  30FF               	movlw	255
 13796     0A29  3D58               	addwfc	(position_led_strip@target+1)^(0+256),w
 13797     0A2A  00D5               	movwf	(??_position_led_strip+1)^(0+256)
 13798     0A2B  085B               	movf	(position_led_strip@led_on+1)^(0+256),w
 13799     0A2C  3A80               	xorlw	128
 13800     0A2D  00D6               	movwf	(??_position_led_strip+2)^(0+256)
 13801     0A2E  0855               	movf	(??_position_led_strip+1)^(0+256),w
 13802     0A2F  3A80               	xorlw	128
 13803     0A30  0256               	subwf	(??_position_led_strip+2)^(0+256),w
 13804     0A31  1D03               	skipz
 13805     0A32  2A35               	goto	u5845
 13806     0A33  0854               	movf	??_position_led_strip^(0+256),w
 13807     0A34  025A               	subwf	position_led_strip@led_on^(0+256),w
 13808     0A35                     u5845:
 13809     0A35  1C03               	skipc
 13810     0A36  2A38               	goto	u5841
 13811     0A37  2A39               	goto	u5840
 13812     0A38                     u5841:
 13813     0A38  2A59               	goto	l5099
 13814     0A39                     u5840:
 13815     0A39                     l5095:
 13816     0A39  0022               	movlb	2	; select bank2
 13817     0A3A  0857               	movf	position_led_strip@target^(0+256),w
 13818     0A3B  3E01               	addlw	1
 13819     0A3C  00D4               	movwf	??_position_led_strip^(0+256)
 13820     0A3D  3000               	movlw	0
 13821     0A3E  3D58               	addwfc	(position_led_strip@target+1)^(0+256),w
 13822     0A3F  00D5               	movwf	(??_position_led_strip+1)^(0+256)
 13823     0A40  0855               	movf	(??_position_led_strip+1)^(0+256),w
 13824     0A41  3A80               	xorlw	128
 13825     0A42  00D6               	movwf	(??_position_led_strip+2)^(0+256)
 13826     0A43  085B               	movf	(position_led_strip@led_on+1)^(0+256),w
 13827     0A44  3A80               	xorlw	128
 13828     0A45  0256               	subwf	(??_position_led_strip+2)^(0+256),w
 13829     0A46  1D03               	skipz
 13830     0A47  2A4A               	goto	u5855
 13831     0A48  085A               	movf	position_led_strip@led_on^(0+256),w
 13832     0A49  0254               	subwf	??_position_led_strip^(0+256),w
 13833     0A4A                     u5855:
 13834     0A4A  1C03               	skipc
 13835     0A4B  2A4D               	goto	u5851
 13836     0A4C  2A4E               	goto	u5850
 13837     0A4D                     u5851:
 13838     0A4D  2A59               	goto	l5099
 13839     0A4E                     u5850:
 13840     0A4E                     l5097:
 13841                           
 13842                           ;ledstrip.c: 83:                 sendLedstripFrame(0x00, 0xFF, 0x00, 0x05);
 13843     0A4E  30FF               	movlw	255
 13844     0A4F  0021               	movlb	1	; select bank1
 13845     0A50  00A1               	movwf	sendLedstripFrame@green^(0+128)
 13846     0A51  01A2               	clrf	sendLedstripFrame@blue^(0+128)
 13847     0A52  3005               	movlw	5
 13848     0A53  00A3               	movwf	sendLedstripFrame@intensity^(0+128)
 13849     0A54  3000               	movlw	0
 13850     0A55  319D  2582  3189   	fcall	_sendLedstripFrame
 13851                           
 13852                           ;ledstrip.c: 84:             }
 13853     0A58  2AD1               	goto	l5127
 13854     0A59                     l5099:
 13855                           
 13856                           ;ledstrip.c: 86:                 if (led == led_on) {
 13857     0A59  0022               	movlb	2	; select bank2
 13858     0A5A  0859               	movf	position_led_strip@led^(0+256),w
 13859     0A5B  00D4               	movwf	??_position_led_strip^(0+256)
 13860     0A5C  01D5               	clrf	(??_position_led_strip^(0+256)+1)
 13861     0A5D  085B               	movf	(position_led_strip@led_on+1)^(0+256),w
 13862     0A5E  0655               	xorwf	(??_position_led_strip+1)^(0+256),w
 13863     0A5F  1D03               	skipz
 13864     0A60  2A63               	goto	u5865
 13865     0A61  085A               	movf	position_led_strip@led_on^(0+256),w
 13866     0A62  0654               	xorwf	??_position_led_strip^(0+256),w
 13867     0A63                     u5865:
 13868     0A63  1D03               	skipz
 13869     0A64  2A66               	goto	u5861
 13870     0A65  2A67               	goto	u5860
 13871     0A66                     u5861:
 13872     0A66  2A73               	goto	l5103
 13873     0A67                     u5860:
 13874     0A67                     l5101:
 13875                           
 13876                           ;ledstrip.c: 87:                     sendLedstripFrame(0x44, 0x44, 0x44, 0x05);
 13877     0A67  3044               	movlw	68
 13878     0A68  0021               	movlb	1	; select bank1
 13879     0A69  00A1               	movwf	sendLedstripFrame@green^(0+128)
 13880     0A6A  3044               	movlw	68
 13881     0A6B  00A2               	movwf	sendLedstripFrame@blue^(0+128)
 13882     0A6C  3005               	movlw	5
 13883     0A6D  00A3               	movwf	sendLedstripFrame@intensity^(0+128)
 13884     0A6E  3044               	movlw	68
 13885     0A6F  319D  2582  3189   	fcall	_sendLedstripFrame
 13886                           
 13887                           ;ledstrip.c: 88:         } else if (led == target) {
 13888     0A72  2A93               	goto	l5109
 13889     0A73                     l5103:
 13890     0A73  0859               	movf	position_led_strip@led^(0+256),w
 13891     0A74  00D4               	movwf	??_position_led_strip^(0+256)
 13892     0A75  01D5               	clrf	(??_position_led_strip^(0+256)+1)
 13893     0A76  0858               	movf	(position_led_strip@target+1)^(0+256),w
 13894     0A77  0655               	xorwf	(??_position_led_strip+1)^(0+256),w
 13895     0A78  1D03               	skipz
 13896     0A79  2A7C               	goto	u5875
 13897     0A7A  0857               	movf	position_led_strip@target^(0+256),w
 13898     0A7B  0654               	xorwf	??_position_led_strip^(0+256),w
 13899     0A7C                     u5875:
 13900     0A7C  1D03               	skipz
 13901     0A7D  2A7F               	goto	u5871
 13902     0A7E  2A80               	goto	u5870
 13903     0A7F                     u5871:
 13904     0A7F  2A8A               	goto	l5107
 13905     0A80                     u5870:
 13906     0A80                     l5105:
 13907                           
 13908                           ;ledstrip.c: 89:                     sendLedstripFrame(0xFF, 0x00, 0x00, 0x05);
 13909     0A80  0021               	movlb	1	; select bank1
 13910     0A81  01A1               	clrf	sendLedstripFrame@green^(0+128)
 13911     0A82  01A2               	clrf	sendLedstripFrame@blue^(0+128)
 13912     0A83  3005               	movlw	5
 13913     0A84  00A3               	movwf	sendLedstripFrame@intensity^(0+128)
 13914     0A85  30FF               	movlw	255
 13915     0A86  319D  2582  3189   	fcall	_sendLedstripFrame
 13916                           
 13917                           ;ledstrip.c: 90:         } else {
 13918     0A89  2A93               	goto	l5109
 13919     0A8A                     l5107:
 13920                           
 13921                           ;ledstrip.c: 91:                     sendLedstripFrame(0x00, 0x00, 0x00, 0x05);
 13922     0A8A  0021               	movlb	1	; select bank1
 13923     0A8B  01A1               	clrf	sendLedstripFrame@green^(0+128)
 13924     0A8C  01A2               	clrf	sendLedstripFrame@blue^(0+128)
 13925     0A8D  3005               	movlw	5
 13926     0A8E  00A3               	movwf	sendLedstripFrame@intensity^(0+128)
 13927     0A8F  3000               	movlw	0
 13928     0A90  319D  2582  3189   	fcall	_sendLedstripFrame
 13929     0A93                     l5109:
 13930                           
 13931                           ;ledstrip.c: 93:                 is_on_target = 0;
 13932     0A93  0020               	movlb	0	; select bank0
 13933     0A94  01E4               	clrf	_is_on_target
 13934     0A95  2AD1               	goto	l5127
 13935     0A96                     l5111:
 13936     0A96  0022               	movlb	2	; select bank2
 13937     0A97  0859               	movf	position_led_strip@led^(0+256),w
 13938     0A98  00D4               	movwf	??_position_led_strip^(0+256)
 13939     0A99  01D5               	clrf	(??_position_led_strip^(0+256)+1)
 13940     0A9A  085B               	movf	(position_led_strip@led_on+1)^(0+256),w
 13941     0A9B  0655               	xorwf	(??_position_led_strip+1)^(0+256),w
 13942     0A9C  1D03               	skipz
 13943     0A9D  2AA0               	goto	u5885
 13944     0A9E  085A               	movf	position_led_strip@led_on^(0+256),w
 13945     0A9F  0654               	xorwf	??_position_led_strip^(0+256),w
 13946     0AA0                     u5885:
 13947     0AA0  1D03               	skipz
 13948     0AA1  2AA3               	goto	u5881
 13949     0AA2  2AA4               	goto	u5880
 13950     0AA3                     u5881:
 13951     0AA3  2AB0               	goto	l5117
 13952     0AA4                     u5880:
 13953     0AA4                     l5113:
 13954                           
 13955                           ;ledstrip.c: 97:             sendLedstripFrame(0x44, 0x44, 0x44, 0x05);
 13956     0AA4  3044               	movlw	68
 13957     0AA5  0021               	movlb	1	; select bank1
 13958     0AA6  00A1               	movwf	sendLedstripFrame@green^(0+128)
 13959     0AA7  3044               	movlw	68
 13960     0AA8  00A2               	movwf	sendLedstripFrame@blue^(0+128)
 13961     0AA9  3005               	movlw	5
 13962     0AAA  00A3               	movwf	sendLedstripFrame@intensity^(0+128)
 13963     0AAB  3044               	movlw	68
 13964     0AAC  319D  2582  3189   	fcall	_sendLedstripFrame
 13965     0AAF  2A93               	goto	l5109
 13966     0AB0                     l5117:
 13967     0AB0  0859               	movf	position_led_strip@led^(0+256),w
 13968     0AB1  00D4               	movwf	??_position_led_strip^(0+256)
 13969     0AB2  01D5               	clrf	(??_position_led_strip^(0+256)+1)
 13970     0AB3  0858               	movf	(position_led_strip@target+1)^(0+256),w
 13971     0AB4  0655               	xorwf	(??_position_led_strip+1)^(0+256),w
 13972     0AB5  1D03               	skipz
 13973     0AB6  2AB9               	goto	u5895
 13974     0AB7  0857               	movf	position_led_strip@target^(0+256),w
 13975     0AB8  0654               	xorwf	??_position_led_strip^(0+256),w
 13976     0AB9                     u5895:
 13977     0AB9  1D03               	skipz
 13978     0ABA  2ABC               	goto	u5891
 13979     0ABB  2ABD               	goto	u5890
 13980     0ABC                     u5891:
 13981     0ABC  2AC7               	goto	l5123
 13982     0ABD                     u5890:
 13983     0ABD                     l5119:
 13984                           
 13985                           ;ledstrip.c: 100:             sendLedstripFrame(0xFF, 0x00, 0x00, 0x05);
 13986     0ABD  0021               	movlb	1	; select bank1
 13987     0ABE  01A1               	clrf	sendLedstripFrame@green^(0+128)
 13988     0ABF  01A2               	clrf	sendLedstripFrame@blue^(0+128)
 13989     0AC0  3005               	movlw	5
 13990     0AC1  00A3               	movwf	sendLedstripFrame@intensity^(0+128)
 13991     0AC2  30FF               	movlw	255
 13992     0AC3  319D  2582  3189   	fcall	_sendLedstripFrame
 13993     0AC6  2A93               	goto	l5109
 13994     0AC7                     l5123:
 13995                           
 13996                           ;ledstrip.c: 103:             sendLedstripFrame(0x00, 0x00, 0x00, 0x05);
 13997     0AC7  0021               	movlb	1	; select bank1
 13998     0AC8  01A1               	clrf	sendLedstripFrame@green^(0+128)
 13999     0AC9  01A2               	clrf	sendLedstripFrame@blue^(0+128)
 14000     0ACA  3005               	movlw	5
 14001     0ACB  00A3               	movwf	sendLedstripFrame@intensity^(0+128)
 14002     0ACC  3000               	movlw	0
 14003     0ACD  319D  2582  3189   	fcall	_sendLedstripFrame
 14004     0AD0  2A93               	goto	l5109
 14005     0AD1                     l5127:
 14006                           
 14007                           ;ledstrip.c: 106:     }
 14008     0AD1  3001               	movlw	1
 14009     0AD2  0022               	movlb	2	; select bank2
 14010     0AD3  07D9               	addwf	position_led_strip@led^(0+256),f
 14011     0AD4                     l5129:
 14012     0AD4  303B               	movlw	59
 14013     0AD5  0259               	subwf	position_led_strip@led^(0+256),w
 14014     0AD6  1C03               	skipc
 14015     0AD7  2AD9               	goto	u5901
 14016     0AD8  2ADA               	goto	u5900
 14017     0AD9                     u5901:
 14018     0AD9  2A11               	goto	l5087
 14019     0ADA                     u5900:
 14020     0ADA                     l5131:
 14021                           
 14022                           ;ledstrip.c: 108:     sendLedstripEndFrame();
 14023     0ADA  319D  2569  3189   	fcall	_sendLedstripEndFrame
 14024     0ADD                     l1007:
 14025     0ADD  0008               	return
 14026     0ADE                     __end_of_position_led_strip:
 14027                           
 14028                           	psect	text45
 14029     1D28                     __ptext45:	
 14030 ;; *************** function _sendLedstripStartFrame *****************
 14031 ;; Defined at:
 14032 ;;		line 6 in file "ledstrip.c"
 14033 ;; Parameters:    Size  Location     Type
 14034 ;;		None
 14035 ;; Auto vars:     Size  Location     Type
 14036 ;;		None
 14037 ;; Return value:  Size  Location     Type
 14038 ;;                  1    wreg      void 
 14039 ;; Registers used:
 14040 ;;		wreg, status,2, status,0, pclath, cstack
 14041 ;; Tracked objects:
 14042 ;;		On entry : 0/0
 14043 ;;		On exit  : 0/0
 14044 ;;		Unchanged: 0/0
 14045 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 14046 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14047 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14048 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14049 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14050 ;;Total ram usage:        0 bytes
 14051 ;; Hardware stack levels used: 1
 14052 ;; Hardware stack levels required when called: 6
 14053 ;; This function calls:
 14054 ;;		_SPI1_ByteExchange
 14055 ;; This function is called by:
 14056 ;;		_position_led_strip
 14057 ;;		_dutycycle_led_strip
 14058 ;; This function uses a non-reentrant model
 14059 ;;
 14060                           
 14061     1D28                     _sendLedstripStartFrame:	
 14062                           ;psect for function _sendLedstripStartFrame
 14063                           
 14064     1D28                     l4979:	
 14065                           ;incstack = 0
 14066                           ; Regs used in _sendLedstripStartFrame: [wreg+status,2+status,0+pclath+cstack]
 14067                           
 14068                           
 14069                           ;ledstrip.c: 8:     SPI1_ByteExchange(0x00);
 14070     1D28  0021               	movlb	1	; select bank1
 14071     1D29  01A0               	clrf	SPI1_ByteExchange@byteData^(0+128)
 14072     1D2A  319C  2417  319D   	fcall	_SPI1_ByteExchange
 14073                           
 14074                           ;ledstrip.c: 9:     SPI1_ByteExchange(0x00);
 14075     1D2D  0021               	movlb	1	; select bank1
 14076     1D2E  01A0               	clrf	SPI1_ByteExchange@byteData^(0+128)
 14077     1D2F  319C  2417  319D   	fcall	_SPI1_ByteExchange
 14078                           
 14079                           ;ledstrip.c: 10:     SPI1_ByteExchange(0x00);
 14080     1D32  0021               	movlb	1	; select bank1
 14081     1D33  01A0               	clrf	SPI1_ByteExchange@byteData^(0+128)
 14082     1D34  319C  2417  319D   	fcall	_SPI1_ByteExchange
 14083                           
 14084                           ;ledstrip.c: 11:     SPI1_ByteExchange(0x00);
 14085     1D37  0021               	movlb	1	; select bank1
 14086     1D38  01A0               	clrf	SPI1_ByteExchange@byteData^(0+128)
 14087     1D39  319C  2417  319D   	fcall	_SPI1_ByteExchange
 14088     1D3C                     l967:
 14089     1D3C  0008               	return
 14090     1D3D                     __end_of_sendLedstripStartFrame:
 14091                           
 14092                           	psect	text46
 14093     1D82                     __ptext46:	
 14094 ;; *************** function _sendLedstripFrame *****************
 14095 ;; Defined at:
 14096 ;;		line 22 in file "ledstrip.c"
 14097 ;; Parameters:    Size  Location     Type
 14098 ;;  red             1    wreg     unsigned char 
 14099 ;;  green           1    1[BANK1 ] unsigned char 
 14100 ;;  blue            1    2[BANK1 ] unsigned char 
 14101 ;;  intensity       1    3[BANK1 ] unsigned char 
 14102 ;; Auto vars:     Size  Location     Type
 14103 ;;  red             1    4[BANK1 ] unsigned char 
 14104 ;; Return value:  Size  Location     Type
 14105 ;;                  1    wreg      void 
 14106 ;; Registers used:
 14107 ;;		wreg, status,2, status,0, pclath, cstack
 14108 ;; Tracked objects:
 14109 ;;		On entry : 0/0
 14110 ;;		On exit  : 0/0
 14111 ;;		Unchanged: 0/0
 14112 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 14113 ;;      Params:         0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0
 14114 ;;      Locals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0
 14115 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14116 ;;      Totals:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0
 14117 ;;Total ram usage:        4 bytes
 14118 ;; Hardware stack levels used: 1
 14119 ;; Hardware stack levels required when called: 6
 14120 ;; This function calls:
 14121 ;;		_SPI1_ByteExchange
 14122 ;; This function is called by:
 14123 ;;		_position_led_strip
 14124 ;;		_dutycycle_led_strip
 14125 ;; This function uses a non-reentrant model
 14126 ;;
 14127                           
 14128     1D82                     _sendLedstripFrame:	
 14129                           ;psect for function _sendLedstripFrame
 14130                           
 14131                           
 14132                           ;incstack = 0
 14133                           ; Regs used in _sendLedstripFrame: [wreg+status,2+status,0+pclath+cstack]
 14134                           ;sendLedstripFrame@red stored from wreg
 14135     1D82  0021               	movlb	1	; select bank1
 14136     1D83  00A4               	movwf	sendLedstripFrame@red^(0+128)
 14137     1D84                     l4983:
 14138                           
 14139                           ;ledstrip.c: 23:     SPI1_ByteExchange(0xE0 | intensity);
 14140     1D84  0823               	movf	sendLedstripFrame@intensity^(0+128),w
 14141     1D85  38E0               	iorlw	224
 14142     1D86  00A0               	movwf	SPI1_ByteExchange@byteData^(0+128)
 14143     1D87  319C  2417  319D   	fcall	_SPI1_ByteExchange
 14144                           
 14145                           ;ledstrip.c: 25:     SPI1_ByteExchange(blue);
 14146     1D8A  0021               	movlb	1	; select bank1
 14147     1D8B  0822               	movf	sendLedstripFrame@blue^(0+128),w
 14148     1D8C  00A0               	movwf	SPI1_ByteExchange@byteData^(0+128)
 14149     1D8D  319C  2417  319D   	fcall	_SPI1_ByteExchange
 14150                           
 14151                           ;ledstrip.c: 26:     SPI1_ByteExchange(green);
 14152     1D90  0021               	movlb	1	; select bank1
 14153     1D91  0821               	movf	sendLedstripFrame@green^(0+128),w
 14154     1D92  00A0               	movwf	SPI1_ByteExchange@byteData^(0+128)
 14155     1D93  319C  2417  319D   	fcall	_SPI1_ByteExchange
 14156                           
 14157                           ;ledstrip.c: 27:     SPI1_ByteExchange(red);
 14158     1D96  0021               	movlb	1	; select bank1
 14159     1D97  0824               	movf	sendLedstripFrame@red^(0+128),w
 14160     1D98  00A0               	movwf	SPI1_ByteExchange@byteData^(0+128)
 14161     1D99  319C  2417  319D   	fcall	_SPI1_ByteExchange
 14162     1D9C                     l973:
 14163     1D9C  0008               	return
 14164     1D9D                     __end_of_sendLedstripFrame:
 14165                           
 14166                           	psect	text47
 14167     1D69                     __ptext47:	
 14168 ;; *************** function _sendLedstripEndFrame *****************
 14169 ;; Defined at:
 14170 ;;		line 14 in file "ledstrip.c"
 14171 ;; Parameters:    Size  Location     Type
 14172 ;;		None
 14173 ;; Auto vars:     Size  Location     Type
 14174 ;;		None
 14175 ;; Return value:  Size  Location     Type
 14176 ;;                  1    wreg      void 
 14177 ;; Registers used:
 14178 ;;		wreg, status,2, status,0, pclath, cstack
 14179 ;; Tracked objects:
 14180 ;;		On entry : 0/0
 14181 ;;		On exit  : 0/0
 14182 ;;		Unchanged: 0/0
 14183 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 14184 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14185 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14186 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14187 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14188 ;;Total ram usage:        0 bytes
 14189 ;; Hardware stack levels used: 1
 14190 ;; Hardware stack levels required when called: 6
 14191 ;; This function calls:
 14192 ;;		_SPI1_ByteExchange
 14193 ;; This function is called by:
 14194 ;;		_position_led_strip
 14195 ;;		_dutycycle_led_strip
 14196 ;; This function uses a non-reentrant model
 14197 ;;
 14198                           
 14199     1D69                     _sendLedstripEndFrame:	
 14200                           ;psect for function _sendLedstripEndFrame
 14201                           
 14202     1D69                     l4981:	
 14203                           ;incstack = 0
 14204                           ; Regs used in _sendLedstripEndFrame: [wreg+status,2+status,0+pclath+cstack]
 14205                           
 14206                           
 14207                           ;ledstrip.c: 16:     SPI1_ByteExchange(0xFF);
 14208     1D69  30FF               	movlw	255
 14209     1D6A  0021               	movlb	1	; select bank1
 14210     1D6B  00A0               	movwf	SPI1_ByteExchange@byteData^(0+128)
 14211     1D6C  319C  2417  319D   	fcall	_SPI1_ByteExchange
 14212                           
 14213                           ;ledstrip.c: 17:     SPI1_ByteExchange(0xFF);
 14214     1D6F  30FF               	movlw	255
 14215     1D70  0021               	movlb	1	; select bank1
 14216     1D71  00A0               	movwf	SPI1_ByteExchange@byteData^(0+128)
 14217     1D72  319C  2417  319D   	fcall	_SPI1_ByteExchange
 14218                           
 14219                           ;ledstrip.c: 18:     SPI1_ByteExchange(0xFF);
 14220     1D75  30FF               	movlw	255
 14221     1D76  0021               	movlb	1	; select bank1
 14222     1D77  00A0               	movwf	SPI1_ByteExchange@byteData^(0+128)
 14223     1D78  319C  2417  319D   	fcall	_SPI1_ByteExchange
 14224                           
 14225                           ;ledstrip.c: 19:     SPI1_ByteExchange(0xFF);
 14226     1D7B  30FF               	movlw	255
 14227     1D7C  0021               	movlb	1	; select bank1
 14228     1D7D  00A0               	movwf	SPI1_ByteExchange@byteData^(0+128)
 14229     1D7E  319C  2417  319D   	fcall	_SPI1_ByteExchange
 14230     1D81                     l970:
 14231     1D81  0008               	return
 14232     1D82                     __end_of_sendLedstripEndFrame:
 14233                           
 14234                           	psect	text48
 14235     1C17                     __ptext48:	
 14236 ;; *************** function _SPI1_ByteExchange *****************
 14237 ;; Defined at:
 14238 ;;		line 160 in file "mcc_generated_files/spi/src/mssp1.c"
 14239 ;; Parameters:    Size  Location     Type
 14240 ;;  byteData        1    0[BANK1 ] unsigned char 
 14241 ;; Auto vars:     Size  Location     Type
 14242 ;;		None
 14243 ;; Return value:  Size  Location     Type
 14244 ;;                  1    wreg      unsigned char 
 14245 ;; Registers used:
 14246 ;;		wreg
 14247 ;; Tracked objects:
 14248 ;;		On entry : 0/0
 14249 ;;		On exit  : 0/0
 14250 ;;		Unchanged: 0/0
 14251 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 14252 ;;      Params:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0
 14253 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14254 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14255 ;;      Totals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0
 14256 ;;Total ram usage:        1 bytes
 14257 ;; Hardware stack levels used: 1
 14258 ;; Hardware stack levels required when called: 5
 14259 ;; This function calls:
 14260 ;;		Nothing
 14261 ;; This function is called by:
 14262 ;;		_sendLedstripStartFrame
 14263 ;;		_sendLedstripEndFrame
 14264 ;;		_sendLedstripFrame
 14265 ;; This function uses a non-reentrant model
 14266 ;;
 14267                           
 14268     1C17                     _SPI1_ByteExchange:	
 14269                           ;psect for function _SPI1_ByteExchange
 14270                           
 14271     1C17                     l4465:	
 14272                           ;incstack = 0
 14273                           ; Regs used in _SPI1_ByteExchange: [wreg]
 14274                           
 14275                           
 14276                           ;mcc_generated_files/spi/src/mssp1.c: 160: uint8_t SPI1_ByteExchange(uint8_t byteData);m
      +                          cc_generated_files/spi/src/mssp1.c: 161: {;mcc_generated_files/spi/src/mssp1.c: 162:    
      +                           SSP1BUF = byteData;
 14277     1C17  0021               	movlb	1	; select bank1
 14278     1C18  0820               	movf	SPI1_ByteExchange@byteData^(0+128),w
 14279     1C19  0024               	movlb	4	; select bank4
 14280     1C1A  0091               	movwf	17	;volatile
 14281     1C1B                     l160:	
 14282                           ;mcc_generated_files/spi/src/mssp1.c: 164:     {;mcc_generated_files/spi/src/mssp1.c: 16
      +                          6:     }
 14283                           
 14284                           
 14285                           ;mcc_generated_files/spi/src/mssp1.c: 163:     while (!PIR1bits.SSP1IF)
 14286     1C1B  0020               	movlb	0	; select bank0
 14287     1C1C  1D91               	btfss	17,3	;volatile
 14288     1C1D  2C1F               	goto	u4631
 14289     1C1E  2C20               	goto	u4630
 14290     1C1F                     u4631:
 14291     1C1F  2C1B               	goto	l160
 14292     1C20                     u4630:
 14293     1C20                     l162:
 14294                           
 14295                           ;mcc_generated_files/spi/src/mssp1.c: 167:     PIR1bits.SSP1IF = 0;
 14296     1C20  1191               	bcf	17,3	;volatile
 14297     1C21                     l4467:
 14298                           
 14299                           ;mcc_generated_files/spi/src/mssp1.c: 168:     return SSP1BUF;;	Return value of _SPI1_By
      +                          teExchange is never used
 14300     1C21  0024               	movlb	4	; select bank4
 14301     1C22  0811               	movf	17,w	;volatile
 14302     1C23                     l163:
 14303     1C23  0008               	return
 14304     1C24                     __end_of_SPI1_ByteExchange:
 14305                           
 14306                           	psect	text49
 14307     1B93                     __ptext49:	
 14308 ;; *************** function _getSetpoint *****************
 14309 ;; Defined at:
 14310 ;;		line 39 in file "controller.c"
 14311 ;; Parameters:    Size  Location     Type
 14312 ;;		None
 14313 ;; Auto vars:     Size  Location     Type
 14314 ;;		None
 14315 ;; Return value:  Size  Location     Type
 14316 ;;                  2    0[BANK1 ] unsigned short 
 14317 ;; Registers used:
 14318 ;;		wreg
 14319 ;; Tracked objects:
 14320 ;;		On entry : 0/0
 14321 ;;		On exit  : 0/0
 14322 ;;		Unchanged: 0/0
 14323 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 14324 ;;      Params:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0
 14325 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14326 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14327 ;;      Totals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0
 14328 ;;Total ram usage:        2 bytes
 14329 ;; Hardware stack levels used: 1
 14330 ;; Hardware stack levels required when called: 5
 14331 ;; This function calls:
 14332 ;;		Nothing
 14333 ;; This function is called by:
 14334 ;;		_printLogs
 14335 ;;		_position_led_strip
 14336 ;; This function uses a non-reentrant model
 14337 ;;
 14338                           
 14339     1B93                     _getSetpoint:	
 14340                           ;psect for function _getSetpoint
 14341                           
 14342     1B93                     l4975:	
 14343                           ;incstack = 0
 14344                           ; Regs used in _getSetpoint: [wreg]
 14345                           
 14346     1B93  0020               	movlb	0	; select bank0
 14347     1B94  086D               	movf	_setpoint+1,w
 14348     1B95  0021               	movlb	1	; select bank1
 14349     1B96  00A1               	movwf	(?_getSetpoint+1)^(0+128)
 14350     1B97  0020               	movlb	0	; select bank0
 14351     1B98  086C               	movf	_setpoint,w
 14352     1B99  0021               	movlb	1	; select bank1
 14353     1B9A  00A0               	movwf	?_getSetpoint^(0+128)
 14354     1B9B                     l931:
 14355     1B9B  0008               	return
 14356     1B9C                     __end_of_getSetpoint:
 14357                           
 14358                           	psect	text50
 14359     115A                     __ptext50:	
 14360 ;; *************** function _getLedNumber *****************
 14361 ;; Defined at:
 14362 ;;		line 33 in file "ledstrip.c"
 14363 ;; Parameters:    Size  Location     Type
 14364 ;;  height          2   78[BANK1 ] unsigned short 
 14365 ;; Auto vars:     Size  Location     Type
 14366 ;;  result          4    0[BANK2 ] float 
 14367 ;; Return value:  Size  Location     Type
 14368 ;;                  2   78[BANK1 ] int 
 14369 ;; Registers used:
 14370 ;;		wreg, status,2, status,0, pclath, cstack
 14371 ;; Tracked objects:
 14372 ;;		On entry : 0/0
 14373 ;;		On exit  : 0/0
 14374 ;;		Unchanged: 0/0
 14375 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 14376 ;;      Params:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0
 14377 ;;      Locals:         0       0       0       4       0       0       0       0       0       0       0       0       
      +0       0
 14378 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14379 ;;      Totals:         0       0       2       4       0       0       0       0       0       0       0       0       
      +0       0
 14380 ;;Total ram usage:        6 bytes
 14381 ;; Hardware stack levels used: 1
 14382 ;; Hardware stack levels required when called: 7
 14383 ;; This function calls:
 14384 ;;		___fladd
 14385 ;;		___flmul
 14386 ;;		___fltol
 14387 ;;		___xxtofl
 14388 ;; This function is called by:
 14389 ;;		_position_led_strip
 14390 ;; This function uses a non-reentrant model
 14391 ;;
 14392                           
 14393     115A                     _getLedNumber:	
 14394                           ;psect for function _getLedNumber
 14395                           
 14396     115A                     l4985:	
 14397                           ;incstack = 0
 14398                           ; Regs used in _getLedNumber: [wreg+status,2+status,0+pclath+cstack]
 14399                           
 14400                           
 14401                           ;ledstrip.c: 34:     float result = (0.068104825 * height - 5.4876957494);
 14402     115A  30C0               	movlw	192
 14403     115B  0021               	movlb	1	; select bank1
 14404     115C  00B1               	movwf	(___fladd@b+3)^(0+128)
 14405     115D  30AF               	movlw	175
 14406     115E  00B0               	movwf	(___fladd@b+2)^(0+128)
 14407     115F  309B               	movlw	155
 14408     1160  00AF               	movwf	(___fladd@b+1)^(0+128)
 14409     1161  3034               	movlw	52
 14410     1162  00AE               	movwf	___fladd@b^(0+128)
 14411     1163  303D               	movlw	61
 14412     1164  00CD               	movwf	(___flmul@b+3)^(0+128)
 14413     1165  308B               	movlw	139
 14414     1166  00CC               	movwf	(___flmul@b+2)^(0+128)
 14415     1167  307A               	movlw	122
 14416     1168  00CB               	movwf	(___flmul@b+1)^(0+128)
 14417     1169  308B               	movlw	139
 14418     116A  00CA               	movwf	___flmul@b^(0+128)
 14419     116B  086E               	movf	getLedNumber@height^(0+128),w
 14420     116C  00A0               	movwf	___xxtofl@val^(0+128)
 14421     116D  086F               	movf	(getLedNumber@height+1)^(0+128),w
 14422     116E  00A1               	movwf	(___xxtofl@val^(0+128)+1)
 14423     116F  01A2               	clrf	(___xxtofl@val^(0+128)+2)
 14424     1170  01A3               	clrf	(___xxtofl@val^(0+128)+3)
 14425     1171  3000               	movlw	0
 14426     1172  3196  26B0  3191   	fcall	___xxtofl
 14427     1175  0021               	movlb	1	; select bank1
 14428     1176  0823               	movf	(?___xxtofl+3)^(0+128),w
 14429     1177  00D1               	movwf	(___flmul@a+3)^(0+128)
 14430     1178  0822               	movf	(?___xxtofl+2)^(0+128),w
 14431     1179  00D0               	movwf	(___flmul@a+2)^(0+128)
 14432     117A  0821               	movf	(?___xxtofl+1)^(0+128),w
 14433     117B  00CF               	movwf	(___flmul@a+1)^(0+128)
 14434     117C  0820               	movf	?___xxtofl^(0+128),w
 14435     117D  00CE               	movwf	___flmul@a^(0+128)
 14436     117E  3180  208E  3191   	fcall	___flmul
 14437     1181  0021               	movlb	1	; select bank1
 14438     1182  084D               	movf	(?___flmul+3)^(0+128),w
 14439     1183  00B5               	movwf	(___fladd@a+3)^(0+128)
 14440     1184  084C               	movf	(?___flmul+2)^(0+128),w
 14441     1185  00B4               	movwf	(___fladd@a+2)^(0+128)
 14442     1186  084B               	movf	(?___flmul+1)^(0+128),w
 14443     1187  00B3               	movwf	(___fladd@a+1)^(0+128)
 14444     1188  084A               	movf	?___flmul^(0+128),w
 14445     1189  00B2               	movwf	___fladd@a^(0+128)
 14446     118A  3185  2504  3191   	fcall	___fladd
 14447     118D  0021               	movlb	1	; select bank1
 14448     118E  0831               	movf	(?___fladd+3)^(0+128),w
 14449     118F  0022               	movlb	2	; select bank2
 14450     1190  00D3               	movwf	(getLedNumber@result+3)^(0+256)
 14451     1191  0021               	movlb	1	; select bank1
 14452     1192  0830               	movf	(?___fladd+2)^(0+128),w
 14453     1193  0022               	movlb	2	; select bank2
 14454     1194  00D2               	movwf	(getLedNumber@result+2)^(0+256)
 14455     1195  0021               	movlb	1	; select bank1
 14456     1196  082F               	movf	(?___fladd+1)^(0+128),w
 14457     1197  0022               	movlb	2	; select bank2
 14458     1198  00D1               	movwf	(getLedNumber@result+1)^(0+256)
 14459     1199  0021               	movlb	1	; select bank1
 14460     119A  082E               	movf	?___fladd^(0+128),w
 14461     119B  0022               	movlb	2	; select bank2
 14462     119C  00D0               	movwf	getLedNumber@result^(0+256)
 14463                           
 14464                           ;ledstrip.c: 35:     return result;
 14465     119D  0853               	movf	(getLedNumber@result+3)^(0+256),w
 14466     119E  0021               	movlb	1	; select bank1
 14467     119F  00E7               	movwf	(___fltol@f1+3)^(0+128)
 14468     11A0  0022               	movlb	2	; select bank2
 14469     11A1  0852               	movf	(getLedNumber@result+2)^(0+256),w
 14470     11A2  0021               	movlb	1	; select bank1
 14471     11A3  00E6               	movwf	(___fltol@f1+2)^(0+128)
 14472     11A4  0022               	movlb	2	; select bank2
 14473     11A5  0851               	movf	(getLedNumber@result+1)^(0+256),w
 14474     11A6  0021               	movlb	1	; select bank1
 14475     11A7  00E5               	movwf	(___fltol@f1+1)^(0+128)
 14476     11A8  0022               	movlb	2	; select bank2
 14477     11A9  0850               	movf	getLedNumber@result^(0+256),w
 14478     11AA  0021               	movlb	1	; select bank1
 14479     11AB  00E4               	movwf	___fltol@f1^(0+128)
 14480     11AC  3193  233A  3191   	fcall	___fltol
 14481     11AF  0021               	movlb	1	; select bank1
 14482     11B0  0865               	movf	(?___fltol+1)^(0+128),w
 14483     11B1  00EF               	movwf	(?_getLedNumber+1)^(0+128)
 14484     11B2  0864               	movf	?___fltol^(0+128),w
 14485     11B3  00EE               	movwf	?_getLedNumber^(0+128)
 14486     11B4                     l976:
 14487     11B4  0008               	return
 14488     11B5                     __end_of_getLedNumber:
 14489                           
 14490                           	psect	text51
 14491     16B0                     __ptext51:	
 14492 ;; *************** function ___xxtofl *****************
 14493 ;; Defined at:
 14494 ;;		line 10 in file "C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\xxtofl.c"
 14495 ;; Parameters:    Size  Location     Type
 14496 ;;  sign            1    wreg     unsigned char 
 14497 ;;  val             4    0[BANK1 ] long 
 14498 ;; Auto vars:     Size  Location     Type
 14499 ;;  sign            1    8[BANK1 ] unsigned char 
 14500 ;;  arg             4   10[BANK1 ] unsigned long 
 14501 ;;  exp             1    9[BANK1 ] unsigned char 
 14502 ;; Return value:  Size  Location     Type
 14503 ;;                  4    0[BANK1 ] unsigned char 
 14504 ;; Registers used:
 14505 ;;		wreg, status,2, status,0
 14506 ;; Tracked objects:
 14507 ;;		On entry : 0/0
 14508 ;;		On exit  : 0/0
 14509 ;;		Unchanged: 0/0
 14510 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 14511 ;;      Params:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0
 14512 ;;      Locals:         0       0       6       0       0       0       0       0       0       0       0       0       
      +0       0
 14513 ;;      Temps:          0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0
 14514 ;;      Totals:         0       0      14       0       0       0       0       0       0       0       0       0       
      +0       0
 14515 ;;Total ram usage:       14 bytes
 14516 ;; Hardware stack levels used: 1
 14517 ;; Hardware stack levels required when called: 5
 14518 ;; This function calls:
 14519 ;;		Nothing
 14520 ;; This function is called by:
 14521 ;;		_printFloat
 14522 ;;		_str2float
 14523 ;;		_getLedNumber
 14524 ;; This function uses a non-reentrant model
 14525 ;;
 14526                           
 14527     16B0                     ___xxtofl:	
 14528                           ;psect for function ___xxtofl
 14529                           
 14530                           
 14531                           ;incstack = 0
 14532                           ; Regs used in ___xxtofl: [wreg+status,2+status,0]
 14533                           ;___xxtofl@sign stored from wreg
 14534     16B0  0021               	movlb	1	; select bank1
 14535     16B1  00A8               	movwf	___xxtofl@sign^(0+128)
 14536     16B2                     l4843:
 14537     16B2  0828               	movf	___xxtofl@sign^(0+128),w
 14538     16B3  1903               	btfsc	3,2
 14539     16B4  2EB6               	goto	u5471
 14540     16B5  2EB7               	goto	u5470
 14541     16B6                     u5471:
 14542     16B6  2ECB               	goto	l4849
 14543     16B7                     u5470:
 14544     16B7                     l4845:
 14545     16B7  1FA3               	btfss	(___xxtofl@val+3)^(0+128),7
 14546     16B8  2EBA               	goto	u5481
 14547     16B9  2EBB               	goto	u5480
 14548     16BA                     u5481:
 14549     16BA  2ECB               	goto	l4849
 14550     16BB                     u5480:
 14551     16BB                     l4847:
 14552     16BB  0920               	comf	___xxtofl@val^(0+128),w
 14553     16BC  00AA               	movwf	___xxtofl@arg^(0+128)
 14554     16BD  0921               	comf	(___xxtofl@val^(0+128)+1),w
 14555     16BE  00AB               	movwf	(___xxtofl@arg+1)^(0+128)
 14556     16BF  0922               	comf	(___xxtofl@val^(0+128)+2),w
 14557     16C0  00AC               	movwf	(___xxtofl@arg+2)^(0+128)
 14558     16C1  0923               	comf	(___xxtofl@val^(0+128)+3),w
 14559     16C2  00AD               	movwf	(___xxtofl@arg+3)^(0+128)
 14560     16C3  0AAA               	incf	___xxtofl@arg^(0+128),f
 14561     16C4  1903               	skipnz
 14562     16C5  0AAB               	incf	(___xxtofl@arg+1)^(0+128),f
 14563     16C6  1903               	skipnz
 14564     16C7  0AAC               	incf	(___xxtofl@arg+2)^(0+128),f
 14565     16C8  1903               	skipnz
 14566     16C9  0AAD               	incf	(___xxtofl@arg+3)^(0+128),f
 14567     16CA  2ED3               	goto	l1606
 14568     16CB                     l4849:
 14569     16CB  0823               	movf	(___xxtofl@val+3)^(0+128),w
 14570     16CC  00AD               	movwf	(___xxtofl@arg+3)^(0+128)
 14571     16CD  0822               	movf	(___xxtofl@val+2)^(0+128),w
 14572     16CE  00AC               	movwf	(___xxtofl@arg+2)^(0+128)
 14573     16CF  0821               	movf	(___xxtofl@val+1)^(0+128),w
 14574     16D0  00AB               	movwf	(___xxtofl@arg+1)^(0+128)
 14575     16D1  0820               	movf	___xxtofl@val^(0+128),w
 14576     16D2  00AA               	movwf	___xxtofl@arg^(0+128)
 14577     16D3                     l1606:
 14578     16D3  0823               	movf	(___xxtofl@val+3)^(0+128),w
 14579     16D4  0422               	iorwf	(___xxtofl@val+2)^(0+128),w
 14580     16D5  0421               	iorwf	(___xxtofl@val+1)^(0+128),w
 14581     16D6  0420               	iorwf	___xxtofl@val^(0+128),w
 14582     16D7  1D03               	skipz
 14583     16D8  2EDA               	goto	u5491
 14584     16D9  2EDB               	goto	u5490
 14585     16DA                     u5491:
 14586     16DA  2EE4               	goto	l1607
 14587     16DB                     u5490:
 14588     16DB                     l4851:
 14589     16DB  3000               	movlw	0
 14590     16DC  00A3               	movwf	(?___xxtofl+3)^(0+128)
 14591     16DD  3000               	movlw	0
 14592     16DE  00A2               	movwf	(?___xxtofl+2)^(0+128)
 14593     16DF  3000               	movlw	0
 14594     16E0  00A1               	movwf	(?___xxtofl+1)^(0+128)
 14595     16E1  3000               	movlw	0
 14596     16E2  00A0               	movwf	?___xxtofl^(0+128)
 14597     16E3  2F54               	goto	l1608
 14598     16E4                     l1607:
 14599     16E4  3096               	movlw	150
 14600     16E5  00A9               	movwf	___xxtofl@exp^(0+128)
 14601     16E6  2EF0               	goto	l4857
 14602     16E7                     l4855:
 14603     16E7  3001               	movlw	1
 14604     16E8  07A9               	addwf	___xxtofl@exp^(0+128),f
 14605     16E9  3001               	movlw	1
 14606     16EA                     u5505:
 14607     16EA  36AD               	lsrf	(___xxtofl@arg+3)^(0+128),f
 14608     16EB  0CAC               	rrf	(___xxtofl@arg+2)^(0+128),f
 14609     16EC  0CAB               	rrf	(___xxtofl@arg+1)^(0+128),f
 14610     16ED  0CAA               	rrf	___xxtofl@arg^(0+128),f
 14611     16EE  0B89               	decfsz	9,f
 14612     16EF  2EEA               	goto	u5505
 14613     16F0                     l4857:
 14614     16F0  30FE               	movlw	254
 14615     16F1  052D               	andwf	(___xxtofl@arg+3)^(0+128),w
 14616     16F2  1D03               	btfss	3,2
 14617     16F3  2EF5               	goto	u5511
 14618     16F4  2EF6               	goto	u5510
 14619     16F5                     u5511:
 14620     16F5  2EE7               	goto	l4855
 14621     16F6                     u5510:
 14622     16F6  2F06               	goto	l4861
 14623     16F7                     l4859:
 14624     16F7  3001               	movlw	1
 14625     16F8  07A9               	addwf	___xxtofl@exp^(0+128),f
 14626     16F9  3001               	movlw	1
 14627     16FA  07AA               	addwf	___xxtofl@arg^(0+128),f
 14628     16FB  3000               	movlw	0
 14629     16FC  3DAB               	addwfc	(___xxtofl@arg+1)^(0+128),f
 14630     16FD  3DAC               	addwfc	(___xxtofl@arg+2)^(0+128),f
 14631     16FE  3DAD               	addwfc	(___xxtofl@arg+3)^(0+128),f
 14632     16FF  3001               	movlw	1
 14633     1700                     u5525:
 14634     1700  36AD               	lsrf	(___xxtofl@arg+3)^(0+128),f
 14635     1701  0CAC               	rrf	(___xxtofl@arg+2)^(0+128),f
 14636     1702  0CAB               	rrf	(___xxtofl@arg+1)^(0+128),f
 14637     1703  0CAA               	rrf	___xxtofl@arg^(0+128),f
 14638     1704  0B89               	decfsz	9,f
 14639     1705  2F00               	goto	u5525
 14640     1706                     l4861:
 14641     1706  30FF               	movlw	255
 14642     1707  052D               	andwf	(___xxtofl@arg+3)^(0+128),w
 14643     1708  1D03               	btfss	3,2
 14644     1709  2F0B               	goto	u5531
 14645     170A  2F0C               	goto	u5530
 14646     170B                     u5531:
 14647     170B  2EF7               	goto	l4859
 14648     170C                     u5530:
 14649     170C  2F16               	goto	l4865
 14650     170D                     l4863:
 14651     170D  3001               	movlw	1
 14652     170E  02A9               	subwf	___xxtofl@exp^(0+128),f
 14653     170F  3001               	movlw	1
 14654     1710                     u5545:
 14655     1710  35AA               	lslf	___xxtofl@arg^(0+128),f
 14656     1711  0DAB               	rlf	(___xxtofl@arg+1)^(0+128),f
 14657     1712  0DAC               	rlf	(___xxtofl@arg+2)^(0+128),f
 14658     1713  0DAD               	rlf	(___xxtofl@arg+3)^(0+128),f
 14659     1714  0B89               	decfsz	9,f
 14660     1715  2F10               	goto	u5545
 14661     1716                     l4865:
 14662     1716  1BAC               	btfsc	(___xxtofl@arg+2)^(0+128),7
 14663     1717  2F19               	goto	u5551
 14664     1718  2F1A               	goto	u5550
 14665     1719                     u5551:
 14666     1719  2F20               	goto	l1619
 14667     171A                     u5550:
 14668     171A                     l4867:
 14669     171A  3002               	movlw	2
 14670     171B  0229               	subwf	___xxtofl@exp^(0+128),w
 14671     171C  1803               	skipnc
 14672     171D  2F1F               	goto	u5561
 14673     171E  2F20               	goto	u5560
 14674     171F                     u5561:
 14675     171F  2F0D               	goto	l4863
 14676     1720                     u5560:
 14677     1720                     l1619:
 14678     1720  1829               	btfsc	___xxtofl@exp^(0+128),0
 14679     1721  2F23               	goto	u5571
 14680     1722  2F24               	goto	u5570
 14681     1723                     u5571:
 14682     1723  2F2C               	goto	l1620
 14683     1724                     u5570:
 14684     1724                     l4869:
 14685     1724  30FF               	movlw	255
 14686     1725  05AA               	andwf	___xxtofl@arg^(0+128),f
 14687     1726  30FF               	movlw	255
 14688     1727  05AB               	andwf	(___xxtofl@arg+1)^(0+128),f
 14689     1728  307F               	movlw	127
 14690     1729  05AC               	andwf	(___xxtofl@arg+2)^(0+128),f
 14691     172A  30FF               	movlw	255
 14692     172B  05AD               	andwf	(___xxtofl@arg+3)^(0+128),f
 14693     172C                     l1620:
 14694     172C  1003               	clrc
 14695     172D  0CA9               	rrf	___xxtofl@exp^(0+128),f
 14696     172E                     l4871:
 14697     172E  0829               	movf	___xxtofl@exp^(0+128),w
 14698     172F  00A4               	movwf	??___xxtofl^(0+128)
 14699     1730  01A5               	clrf	(??___xxtofl^(0+128)+1)
 14700     1731  01A6               	clrf	(??___xxtofl^(0+128)+2)
 14701     1732  01A7               	clrf	(??___xxtofl^(0+128)+3)
 14702     1733  3018               	movlw	24
 14703     1734                     u5585:
 14704     1734  35A4               	lslf	??___xxtofl^(0+128),f
 14705     1735  0DA5               	rlf	(??___xxtofl^(0+128)+1),f
 14706     1736  0DA6               	rlf	(??___xxtofl^(0+128)+2),f
 14707     1737  0DA7               	rlf	(??___xxtofl^(0+128)+3),f
 14708     1738                     u5580:
 14709     1738  0B89               	decfsz	9,f
 14710     1739  2F34               	goto	u5585
 14711     173A  0824               	movf	??___xxtofl^(0+128),w
 14712     173B  04AA               	iorwf	___xxtofl@arg^(0+128),f
 14713     173C  0825               	movf	(??___xxtofl+1)^(0+128),w
 14714     173D  04AB               	iorwf	(___xxtofl@arg+1)^(0+128),f
 14715     173E  0826               	movf	(??___xxtofl+2)^(0+128),w
 14716     173F  04AC               	iorwf	(___xxtofl@arg+2)^(0+128),f
 14717     1740  0827               	movf	(??___xxtofl+3)^(0+128),w
 14718     1741  04AD               	iorwf	(___xxtofl@arg+3)^(0+128),f
 14719     1742                     l4873:
 14720     1742  0828               	movf	___xxtofl@sign^(0+128),w
 14721     1743  1903               	btfsc	3,2
 14722     1744  2F46               	goto	u5591
 14723     1745  2F47               	goto	u5590
 14724     1746                     u5591:
 14725     1746  2F4C               	goto	l4879
 14726     1747                     u5590:
 14727     1747                     l4875:
 14728     1747  1FA3               	btfss	(___xxtofl@val+3)^(0+128),7
 14729     1748  2F4A               	goto	u5601
 14730     1749  2F4B               	goto	u5600
 14731     174A                     u5601:
 14732     174A  2F4C               	goto	l4879
 14733     174B                     u5600:
 14734     174B                     l4877:
 14735     174B  17AD               	bsf	(___xxtofl@arg^(0+128)+3),7
 14736     174C                     l4879:
 14737     174C  082D               	movf	(___xxtofl@arg+3)^(0+128),w
 14738     174D  00A3               	movwf	(?___xxtofl+3)^(0+128)
 14739     174E  082C               	movf	(___xxtofl@arg+2)^(0+128),w
 14740     174F  00A2               	movwf	(?___xxtofl+2)^(0+128)
 14741     1750  082B               	movf	(___xxtofl@arg+1)^(0+128),w
 14742     1751  00A1               	movwf	(?___xxtofl+1)^(0+128)
 14743     1752  082A               	movf	___xxtofl@arg^(0+128),w
 14744     1753  00A0               	movwf	?___xxtofl^(0+128)
 14745     1754                     l1608:
 14746     1754  0008               	return
 14747     1755                     __end_of___xxtofl:
 14748                           
 14749                           	psect	text52
 14750     133A                     __ptext52:	
 14751 ;; *************** function ___fltol *****************
 14752 ;; Defined at:
 14753 ;;		line 43 in file "C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\fltol.c"
 14754 ;; Parameters:    Size  Location     Type
 14755 ;;  f1              4   68[BANK1 ] unsigned char 
 14756 ;; Auto vars:     Size  Location     Type
 14757 ;;  exp1            1   77[BANK1 ] unsigned char 
 14758 ;;  sign1           1   76[BANK1 ] unsigned char 
 14759 ;; Return value:  Size  Location     Type
 14760 ;;                  4   68[BANK1 ] long 
 14761 ;; Registers used:
 14762 ;;		wreg, status,2, status,0
 14763 ;; Tracked objects:
 14764 ;;		On entry : 0/0
 14765 ;;		On exit  : 0/0
 14766 ;;		Unchanged: 0/0
 14767 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 14768 ;;      Params:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0
 14769 ;;      Locals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0
 14770 ;;      Temps:          0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0
 14771 ;;      Totals:         0       0      10       0       0       0       0       0       0       0       0       0       
      +0       0
 14772 ;;Total ram usage:       10 bytes
 14773 ;; Hardware stack levels used: 1
 14774 ;; Hardware stack levels required when called: 5
 14775 ;; This function calls:
 14776 ;;		Nothing
 14777 ;; This function is called by:
 14778 ;;		_printFloat
 14779 ;;		_getLedNumber
 14780 ;; This function uses a non-reentrant model
 14781 ;;
 14782                           
 14783     133A                     ___fltol:	
 14784                           ;psect for function ___fltol
 14785                           
 14786     133A                     l4471:	
 14787                           ;incstack = 0
 14788                           ; Regs used in ___fltol: [wreg+status,2+status,0]
 14789                           
 14790     133A  1003               	clrc
 14791     133B  0021               	movlb	1	; select bank1
 14792     133C  0D66               	rlf	(___fltol@f1+2)^(0+128),w
 14793     133D  0D67               	rlf	(___fltol@f1+3)^(0+128),w
 14794     133E  00ED               	movwf	___fltol@exp1^(0+128)
 14795     133F  086D               	movf	___fltol@exp1^(0+128),w
 14796     1340  1D03               	btfss	3,2
 14797     1341  2B43               	goto	u4641
 14798     1342  2B44               	goto	u4640
 14799     1343                     u4641:
 14800     1343  2B4D               	goto	l4477
 14801     1344                     u4640:
 14802     1344                     l4473:
 14803     1344  3000               	movlw	0
 14804     1345  00E7               	movwf	(?___fltol+3)^(0+128)
 14805     1346  3000               	movlw	0
 14806     1347  00E6               	movwf	(?___fltol+2)^(0+128)
 14807     1348  3000               	movlw	0
 14808     1349  00E5               	movwf	(?___fltol+1)^(0+128)
 14809     134A  3000               	movlw	0
 14810     134B  00E4               	movwf	?___fltol^(0+128)
 14811     134C  2BA8               	goto	l1359
 14812     134D                     l4477:
 14813     134D  0864               	movf	___fltol@f1^(0+128),w
 14814     134E  00E8               	movwf	??___fltol^(0+128)
 14815     134F  0865               	movf	(___fltol@f1+1)^(0+128),w
 14816     1350  00E9               	movwf	(??___fltol^(0+128)+1)
 14817     1351  0866               	movf	(___fltol@f1+2)^(0+128),w
 14818     1352  00EA               	movwf	(??___fltol^(0+128)+2)
 14819     1353  0867               	movf	(___fltol@f1+3)^(0+128),w
 14820     1354  00EB               	movwf	(??___fltol^(0+128)+3)
 14821     1355  301F               	movlw	31
 14822     1356                     u4655:
 14823     1356  36EB               	lsrf	(??___fltol^(0+128)+3),f
 14824     1357  0CEA               	rrf	(??___fltol^(0+128)+2),f
 14825     1358  0CE9               	rrf	(??___fltol^(0+128)+1),f
 14826     1359  0CE8               	rrf	??___fltol^(0+128),f
 14827     135A                     u4650:
 14828     135A  0B89               	decfsz	9,f
 14829     135B  2B56               	goto	u4655
 14830     135C  0868               	movf	??___fltol^(0+128),w
 14831     135D  00EC               	movwf	___fltol@sign1^(0+128)
 14832     135E                     l4479:
 14833     135E  17E6               	bsf	(___fltol@f1^(0+128)+2),7
 14834     135F                     l4481:
 14835     135F  30FF               	movlw	255
 14836     1360  05E4               	andwf	___fltol@f1^(0+128),f
 14837     1361  30FF               	movlw	255
 14838     1362  05E5               	andwf	(___fltol@f1+1)^(0+128),f
 14839     1363  30FF               	movlw	255
 14840     1364  05E6               	andwf	(___fltol@f1+2)^(0+128),f
 14841     1365  3000               	movlw	0
 14842     1366  05E7               	andwf	(___fltol@f1+3)^(0+128),f
 14843     1367                     l4483:
 14844     1367  3096               	movlw	150
 14845     1368  02ED               	subwf	___fltol@exp1^(0+128),f
 14846     1369                     l4485:
 14847     1369  1FED               	btfss	___fltol@exp1^(0+128),7
 14848     136A  2B6C               	goto	u4661
 14849     136B  2B6D               	goto	u4660
 14850     136C                     u4661:
 14851     136C  2B83               	goto	l4495
 14852     136D                     u4660:
 14853     136D                     l4487:
 14854     136D  086D               	movf	___fltol@exp1^(0+128),w
 14855     136E  3A80               	xorlw	128
 14856     136F  3E97               	addlw	151
 14857     1370  1803               	skipnc
 14858     1371  2B73               	goto	u4671
 14859     1372  2B74               	goto	u4670
 14860     1373                     u4671:
 14861     1373  2B75               	goto	l4493
 14862     1374                     u4670:
 14863     1374  2B44               	goto	l4473
 14864     1375                     l4493:
 14865     1375  3001               	movlw	1
 14866     1376                     u4685:
 14867     1376  36E7               	lsrf	(___fltol@f1+3)^(0+128),f
 14868     1377  0CE6               	rrf	(___fltol@f1+2)^(0+128),f
 14869     1378  0CE5               	rrf	(___fltol@f1+1)^(0+128),f
 14870     1379  0CE4               	rrf	___fltol@f1^(0+128),f
 14871     137A  0B89               	decfsz	9,f
 14872     137B  2B76               	goto	u4685
 14873     137C  3001               	movlw	1
 14874     137D  07ED               	addwf	___fltol@exp1^(0+128),f
 14875     137E  1D03               	btfss	3,2
 14876     137F  2B81               	goto	u4691
 14877     1380  2B82               	goto	u4690
 14878     1381                     u4691:
 14879     1381  2B75               	goto	l4493
 14880     1382                     u4690:
 14881     1382  2B98               	goto	l4503
 14882     1383                     l4495:
 14883     1383  3020               	movlw	32
 14884     1384  026D               	subwf	___fltol@exp1^(0+128),w
 14885     1385  1C03               	skipc
 14886     1386  2B88               	goto	u4701
 14887     1387  2B89               	goto	u4700
 14888     1388                     u4701:
 14889     1388  2B93               	goto	l1366
 14890     1389                     u4700:
 14891     1389  2B44               	goto	l4473
 14892     138A                     l4501:
 14893     138A  3001               	movlw	1
 14894     138B                     u4715:
 14895     138B  35E4               	lslf	___fltol@f1^(0+128),f
 14896     138C  0DE5               	rlf	(___fltol@f1+1)^(0+128),f
 14897     138D  0DE6               	rlf	(___fltol@f1+2)^(0+128),f
 14898     138E  0DE7               	rlf	(___fltol@f1+3)^(0+128),f
 14899     138F  0B89               	decfsz	9,f
 14900     1390  2B8B               	goto	u4715
 14901     1391  3001               	movlw	1
 14902     1392  02ED               	subwf	___fltol@exp1^(0+128),f
 14903     1393                     l1366:
 14904     1393  086D               	movf	___fltol@exp1^(0+128),w
 14905     1394  1D03               	btfss	3,2
 14906     1395  2B97               	goto	u4721
 14907     1396  2B98               	goto	u4720
 14908     1397                     u4721:
 14909     1397  2B8A               	goto	l4501
 14910     1398                     u4720:
 14911     1398                     l4503:
 14912     1398  086C               	movf	___fltol@sign1^(0+128),w
 14913     1399  1903               	btfsc	3,2
 14914     139A  2B9C               	goto	u4731
 14915     139B  2B9D               	goto	u4730
 14916     139C                     u4731:
 14917     139C  2BA8               	goto	l1369
 14918     139D                     u4730:
 14919     139D                     l4505:
 14920     139D  09E4               	comf	___fltol@f1^(0+128),f
 14921     139E  09E5               	comf	(___fltol@f1+1)^(0+128),f
 14922     139F  09E6               	comf	(___fltol@f1+2)^(0+128),f
 14923     13A0  09E7               	comf	(___fltol@f1+3)^(0+128),f
 14924     13A1  0AE4               	incf	___fltol@f1^(0+128),f
 14925     13A2  1903               	skipnz
 14926     13A3  0AE5               	incf	(___fltol@f1+1)^(0+128),f
 14927     13A4  1903               	skipnz
 14928     13A5  0AE6               	incf	(___fltol@f1+2)^(0+128),f
 14929     13A6  1903               	skipnz
 14930     13A7  0AE7               	incf	(___fltol@f1+3)^(0+128),f
 14931     13A8                     l1369:
 14932     13A8                     l1359:
 14933     13A8  0008               	return
 14934     13A9                     __end_of___fltol:
 14935                           
 14936                           	psect	text53
 14937     008E                     __ptext53:	
 14938 ;; *************** function ___flmul *****************
 14939 ;; Defined at:
 14940 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\sprcmul.c"
 14941 ;; Parameters:    Size  Location     Type
 14942 ;;  b               4   42[BANK1 ] long 
 14943 ;;  a               4   46[BANK1 ] long 
 14944 ;; Auto vars:     Size  Location     Type
 14945 ;;  prod            4   62[BANK1 ] struct .
 14946 ;;  grs             4   56[BANK1 ] unsigned long 
 14947 ;;  temp            2   66[BANK1 ] struct .
 14948 ;;  bexp            1   61[BANK1 ] unsigned char 
 14949 ;;  aexp            1   60[BANK1 ] unsigned char 
 14950 ;;  sign            1   55[BANK1 ] unsigned char 
 14951 ;; Return value:  Size  Location     Type
 14952 ;;                  4   42[BANK1 ] unsigned char 
 14953 ;; Registers used:
 14954 ;;		wreg, status,2, status,0, pclath, cstack
 14955 ;; Tracked objects:
 14956 ;;		On entry : 0/0
 14957 ;;		On exit  : 0/0
 14958 ;;		Unchanged: 0/0
 14959 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 14960 ;;      Params:         0       0       8       0       0       0       0       0       0       0       0       0       
      +0       0
 14961 ;;      Locals:         0       0      13       0       0       0       0       0       0       0       0       0       
      +0       0
 14962 ;;      Temps:          0       0       5       0       0       0       0       0       0       0       0       0       
      +0       0
 14963 ;;      Totals:         0       0      26       0       0       0       0       0       0       0       0       0       
      +0       0
 14964 ;;Total ram usage:       26 bytes
 14965 ;; Hardware stack levels used: 1
 14966 ;; Hardware stack levels required when called: 6
 14967 ;; This function calls:
 14968 ;;		__Umul8_16
 14969 ;; This function is called by:
 14970 ;;		_printFloat
 14971 ;;		_str2float
 14972 ;;		_getLedNumber
 14973 ;; This function uses a non-reentrant model
 14974 ;;
 14975                           
 14976     008E                     ___flmul:	
 14977                           ;psect for function ___flmul
 14978                           
 14979     008E                     l4703:	
 14980                           ;incstack = 0
 14981                           ; Regs used in ___flmul: [wreg+status,2+status,0+pclath+cstack]
 14982                           
 14983     008E  0021               	movlb	1	; select bank1
 14984     008F  084D               	movf	(___flmul@b^(0+128)+3),w
 14985     0090  3980               	andlw	128
 14986     0091  00D7               	movwf	___flmul@sign^(0+128)
 14987     0092                     l4705:
 14988     0092  354D               	lslf	(___flmul@b^(0+128)+3),w
 14989     0093  00DD               	movwf	___flmul@bexp^(0+128)
 14990     0094                     l4707:
 14991     0094  1FCC               	btfss	(___flmul@b^(0+128)+2),7
 14992     0095  2897               	goto	u5201
 14993     0096  2898               	goto	u5200
 14994     0097                     u5201:
 14995     0097  2899               	goto	l4711
 14996     0098                     u5200:
 14997     0098                     l4709:
 14998     0098  145D               	bsf	___flmul@bexp^(0+128),0
 14999     0099                     l4711:
 15000     0099  085D               	movf	___flmul@bexp^(0+128),w
 15001     009A  1903               	btfsc	3,2
 15002     009B  289D               	goto	u5211
 15003     009C  289E               	goto	u5210
 15004     009D                     u5211:
 15005     009D  28AD               	goto	l4719
 15006     009E                     u5210:
 15007     009E                     l4713:
 15008     009E  0A5D               	incf	___flmul@bexp^(0+128),w
 15009     009F  1D03               	btfss	3,2
 15010     00A0  28A2               	goto	u5221
 15011     00A1  28A3               	goto	u5220
 15012     00A2                     u5221:
 15013     00A2  28AB               	goto	l4717
 15014     00A3                     u5220:
 15015     00A3                     l4715:
 15016     00A3  3000               	movlw	0
 15017     00A4  00CD               	movwf	(___flmul@b+3)^(0+128)
 15018     00A5  3000               	movlw	0
 15019     00A6  00CC               	movwf	(___flmul@b+2)^(0+128)
 15020     00A7  3000               	movlw	0
 15021     00A8  00CB               	movwf	(___flmul@b+1)^(0+128)
 15022     00A9  3000               	movlw	0
 15023     00AA  00CA               	movwf	___flmul@b^(0+128)
 15024     00AB                     l4717:
 15025     00AB  17CC               	bsf	(___flmul@b^(0+128)+2),7
 15026     00AC  28B5               	goto	l4721
 15027     00AD                     l4719:
 15028     00AD  3000               	movlw	0
 15029     00AE  00CD               	movwf	(___flmul@b+3)^(0+128)
 15030     00AF  3000               	movlw	0
 15031     00B0  00CC               	movwf	(___flmul@b+2)^(0+128)
 15032     00B1  3000               	movlw	0
 15033     00B2  00CB               	movwf	(___flmul@b+1)^(0+128)
 15034     00B3  3000               	movlw	0
 15035     00B4  00CA               	movwf	___flmul@b^(0+128)
 15036     00B5                     l4721:
 15037     00B5  0851               	movf	(___flmul@a^(0+128)+3),w
 15038     00B6  3980               	andlw	128
 15039     00B7  06D7               	xorwf	___flmul@sign^(0+128),f
 15040     00B8                     l4723:
 15041     00B8  3551               	lslf	(___flmul@a^(0+128)+3),w
 15042     00B9  00DC               	movwf	___flmul@aexp^(0+128)
 15043     00BA                     l4725:
 15044     00BA  1FD0               	btfss	(___flmul@a^(0+128)+2),7
 15045     00BB  28BD               	goto	u5231
 15046     00BC  28BE               	goto	u5230
 15047     00BD                     u5231:
 15048     00BD  28BF               	goto	l4729
 15049     00BE                     u5230:
 15050     00BE                     l4727:
 15051     00BE  145C               	bsf	___flmul@aexp^(0+128),0
 15052     00BF                     l4729:
 15053     00BF  085C               	movf	___flmul@aexp^(0+128),w
 15054     00C0  1903               	btfsc	3,2
 15055     00C1  28C3               	goto	u5241
 15056     00C2  28C4               	goto	u5240
 15057     00C3                     u5241:
 15058     00C3  28D3               	goto	l4737
 15059     00C4                     u5240:
 15060     00C4                     l4731:
 15061     00C4  0A5C               	incf	___flmul@aexp^(0+128),w
 15062     00C5  1D03               	btfss	3,2
 15063     00C6  28C8               	goto	u5251
 15064     00C7  28C9               	goto	u5250
 15065     00C8                     u5251:
 15066     00C8  28D1               	goto	l4735
 15067     00C9                     u5250:
 15068     00C9                     l4733:
 15069     00C9  3000               	movlw	0
 15070     00CA  00D1               	movwf	(___flmul@a+3)^(0+128)
 15071     00CB  3000               	movlw	0
 15072     00CC  00D0               	movwf	(___flmul@a+2)^(0+128)
 15073     00CD  3000               	movlw	0
 15074     00CE  00CF               	movwf	(___flmul@a+1)^(0+128)
 15075     00CF  3000               	movlw	0
 15076     00D0  00CE               	movwf	___flmul@a^(0+128)
 15077     00D1                     l4735:
 15078     00D1  17D0               	bsf	(___flmul@a^(0+128)+2),7
 15079     00D2  28DB               	goto	l4739
 15080     00D3                     l4737:
 15081     00D3  3000               	movlw	0
 15082     00D4  00D1               	movwf	(___flmul@a+3)^(0+128)
 15083     00D5  3000               	movlw	0
 15084     00D6  00D0               	movwf	(___flmul@a+2)^(0+128)
 15085     00D7  3000               	movlw	0
 15086     00D8  00CF               	movwf	(___flmul@a+1)^(0+128)
 15087     00D9  3000               	movlw	0
 15088     00DA  00CE               	movwf	___flmul@a^(0+128)
 15089     00DB                     l4739:
 15090     00DB  085C               	movf	___flmul@aexp^(0+128),w
 15091     00DC  1903               	btfsc	3,2
 15092     00DD  28DF               	goto	u5261
 15093     00DE  28E0               	goto	u5260
 15094     00DF                     u5261:
 15095     00DF  28E5               	goto	l4743
 15096     00E0                     u5260:
 15097     00E0                     l4741:
 15098     00E0  085D               	movf	___flmul@bexp^(0+128),w
 15099     00E1  1D03               	btfss	3,2
 15100     00E2  28E4               	goto	u5271
 15101     00E3  28E5               	goto	u5270
 15102     00E4                     u5271:
 15103     00E4  28EE               	goto	l4747
 15104     00E5                     u5270:
 15105     00E5                     l4743:
 15106     00E5  3000               	movlw	0
 15107     00E6  00CD               	movwf	(?___flmul+3)^(0+128)
 15108     00E7  3000               	movlw	0
 15109     00E8  00CC               	movwf	(?___flmul+2)^(0+128)
 15110     00E9  3000               	movlw	0
 15111     00EA  00CB               	movwf	(?___flmul+1)^(0+128)
 15112     00EB  3000               	movlw	0
 15113     00EC  00CA               	movwf	?___flmul^(0+128)
 15114     00ED  2AC8               	goto	l1562
 15115     00EE                     l4747:
 15116     00EE  084A               	movf	___flmul@b^(0+128),w
 15117     00EF  00A0               	movwf	__Umul8_16@multiplicand^(0+128)
 15118     00F0  0850               	movf	(___flmul@a^(0+128)+2),w
 15119     00F1  319E  265B  3180   	fcall	__Umul8_16
 15120     00F4  0021               	movlb	1	; select bank1
 15121     00F5  0821               	movf	(?__Umul8_16+1)^(0+128),w
 15122     00F6  00E3               	movwf	(___flmul@temp+1)^(0+128)
 15123     00F7  0820               	movf	?__Umul8_16^(0+128),w
 15124     00F8  00E2               	movwf	___flmul@temp^(0+128)
 15125     00F9                     l4749:
 15126     00F9  0862               	movf	___flmul@temp^(0+128),w
 15127     00FA  00D2               	movwf	??___flmul^(0+128)
 15128     00FB  01D3               	clrf	(??___flmul^(0+128)+1)
 15129     00FC  01D4               	clrf	(??___flmul^(0+128)+2)
 15130     00FD  01D5               	clrf	(??___flmul^(0+128)+3)
 15131     00FE  0855               	movf	(??___flmul+3)^(0+128),w
 15132     00FF  00DB               	movwf	(___flmul@grs+3)^(0+128)
 15133     0100  0854               	movf	(??___flmul+2)^(0+128),w
 15134     0101  00DA               	movwf	(___flmul@grs+2)^(0+128)
 15135     0102  0853               	movf	(??___flmul+1)^(0+128),w
 15136     0103  00D9               	movwf	(___flmul@grs+1)^(0+128)
 15137     0104  0852               	movf	??___flmul^(0+128),w
 15138     0105  00D8               	movwf	___flmul@grs^(0+128)
 15139     0106                     l4751:
 15140     0106  0863               	movf	(___flmul@temp^(0+128)+1),w
 15141     0107  00D2               	movwf	??___flmul^(0+128)
 15142     0108  01D3               	clrf	(??___flmul^(0+128)+1)
 15143     0109  01D4               	clrf	(??___flmul^(0+128)+2)
 15144     010A  01D5               	clrf	(??___flmul^(0+128)+3)
 15145     010B  0855               	movf	(??___flmul+3)^(0+128),w
 15146     010C  00E1               	movwf	(___flmul@prod+3)^(0+128)
 15147     010D  0854               	movf	(??___flmul+2)^(0+128),w
 15148     010E  00E0               	movwf	(___flmul@prod+2)^(0+128)
 15149     010F  0853               	movf	(??___flmul+1)^(0+128),w
 15150     0110  00DF               	movwf	(___flmul@prod+1)^(0+128)
 15151     0111  0852               	movf	??___flmul^(0+128),w
 15152     0112  00DE               	movwf	___flmul@prod^(0+128)
 15153     0113  084B               	movf	(___flmul@b^(0+128)+1),w
 15154     0114  00A0               	movwf	__Umul8_16@multiplicand^(0+128)
 15155     0115  084F               	movf	(___flmul@a^(0+128)+1),w
 15156     0116  319E  265B  3180   	fcall	__Umul8_16
 15157     0119  0021               	movlb	1	; select bank1
 15158     011A  0821               	movf	(?__Umul8_16+1)^(0+128),w
 15159     011B  00E3               	movwf	(___flmul@temp+1)^(0+128)
 15160     011C  0820               	movf	?__Umul8_16^(0+128),w
 15161     011D  00E2               	movwf	___flmul@temp^(0+128)
 15162     011E                     l4753:
 15163     011E  0862               	movf	___flmul@temp^(0+128),w
 15164     011F  00D2               	movwf	??___flmul^(0+128)
 15165     0120  01D3               	clrf	(??___flmul^(0+128)+1)
 15166     0121  01D4               	clrf	(??___flmul^(0+128)+2)
 15167     0122  01D5               	clrf	(??___flmul^(0+128)+3)
 15168     0123  0852               	movf	??___flmul^(0+128),w
 15169     0124  07D8               	addwf	___flmul@grs^(0+128),f
 15170     0125  0853               	movf	(??___flmul+1)^(0+128),w
 15171     0126  3DD9               	addwfc	(___flmul@grs+1)^(0+128),f
 15172     0127  0854               	movf	(??___flmul+2)^(0+128),w
 15173     0128  3DDA               	addwfc	(___flmul@grs+2)^(0+128),f
 15174     0129  0855               	movf	(??___flmul+3)^(0+128),w
 15175     012A  3DDB               	addwfc	(___flmul@grs+3)^(0+128),f
 15176     012B                     l4755:
 15177     012B  0863               	movf	(___flmul@temp^(0+128)+1),w
 15178     012C  00D2               	movwf	??___flmul^(0+128)
 15179     012D  01D3               	clrf	(??___flmul^(0+128)+1)
 15180     012E  01D4               	clrf	(??___flmul^(0+128)+2)
 15181     012F  01D5               	clrf	(??___flmul^(0+128)+3)
 15182     0130  0852               	movf	??___flmul^(0+128),w
 15183     0131  07DE               	addwf	___flmul@prod^(0+128),f
 15184     0132  0853               	movf	(??___flmul+1)^(0+128),w
 15185     0133  3DDF               	addwfc	(___flmul@prod+1)^(0+128),f
 15186     0134  0854               	movf	(??___flmul+2)^(0+128),w
 15187     0135  3DE0               	addwfc	(___flmul@prod+2)^(0+128),f
 15188     0136  0855               	movf	(??___flmul+3)^(0+128),w
 15189     0137  3DE1               	addwfc	(___flmul@prod+3)^(0+128),f
 15190     0138  084C               	movf	(___flmul@b^(0+128)+2),w
 15191     0139  00A0               	movwf	__Umul8_16@multiplicand^(0+128)
 15192     013A  084E               	movf	___flmul@a^(0+128),w
 15193     013B  319E  265B  3180   	fcall	__Umul8_16
 15194     013E  0021               	movlb	1	; select bank1
 15195     013F  0821               	movf	(?__Umul8_16+1)^(0+128),w
 15196     0140  00E3               	movwf	(___flmul@temp+1)^(0+128)
 15197     0141  0820               	movf	?__Umul8_16^(0+128),w
 15198     0142  00E2               	movwf	___flmul@temp^(0+128)
 15199     0143                     l4757:
 15200     0143  0862               	movf	___flmul@temp^(0+128),w
 15201     0144  00D2               	movwf	??___flmul^(0+128)
 15202     0145  01D3               	clrf	(??___flmul^(0+128)+1)
 15203     0146  01D4               	clrf	(??___flmul^(0+128)+2)
 15204     0147  01D5               	clrf	(??___flmul^(0+128)+3)
 15205     0148  0852               	movf	??___flmul^(0+128),w
 15206     0149  07D8               	addwf	___flmul@grs^(0+128),f
 15207     014A  0853               	movf	(??___flmul+1)^(0+128),w
 15208     014B  3DD9               	addwfc	(___flmul@grs+1)^(0+128),f
 15209     014C  0854               	movf	(??___flmul+2)^(0+128),w
 15210     014D  3DDA               	addwfc	(___flmul@grs+2)^(0+128),f
 15211     014E  0855               	movf	(??___flmul+3)^(0+128),w
 15212     014F  3DDB               	addwfc	(___flmul@grs+3)^(0+128),f
 15213     0150                     l4759:
 15214     0150  0863               	movf	(___flmul@temp^(0+128)+1),w
 15215     0151  00D2               	movwf	??___flmul^(0+128)
 15216     0152  01D3               	clrf	(??___flmul^(0+128)+1)
 15217     0153  01D4               	clrf	(??___flmul^(0+128)+2)
 15218     0154  01D5               	clrf	(??___flmul^(0+128)+3)
 15219     0155  0852               	movf	??___flmul^(0+128),w
 15220     0156  07DE               	addwf	___flmul@prod^(0+128),f
 15221     0157  0853               	movf	(??___flmul+1)^(0+128),w
 15222     0158  3DDF               	addwfc	(___flmul@prod+1)^(0+128),f
 15223     0159  0854               	movf	(??___flmul+2)^(0+128),w
 15224     015A  3DE0               	addwfc	(___flmul@prod+2)^(0+128),f
 15225     015B  0855               	movf	(??___flmul+3)^(0+128),w
 15226     015C  3DE1               	addwfc	(___flmul@prod+3)^(0+128),f
 15227     015D                     l4761:
 15228     015D  3008               	movlw	8
 15229     015E                     u5285:
 15230     015E  35D8               	lslf	___flmul@grs^(0+128),f
 15231     015F  0DD9               	rlf	(___flmul@grs+1)^(0+128),f
 15232     0160  0DDA               	rlf	(___flmul@grs+2)^(0+128),f
 15233     0161  0DDB               	rlf	(___flmul@grs+3)^(0+128),f
 15234     0162  0B89               	decfsz	9,f
 15235     0163  295E               	goto	u5285
 15236     0164                     l4763:
 15237     0164  084B               	movf	(___flmul@b^(0+128)+1),w
 15238     0165  00A0               	movwf	__Umul8_16@multiplicand^(0+128)
 15239     0166  084E               	movf	___flmul@a^(0+128),w
 15240     0167  319E  265B  3180   	fcall	__Umul8_16
 15241     016A  0021               	movlb	1	; select bank1
 15242     016B  0821               	movf	(?__Umul8_16+1)^(0+128),w
 15243     016C  00E3               	movwf	(___flmul@temp+1)^(0+128)
 15244     016D  0820               	movf	?__Umul8_16^(0+128),w
 15245     016E  00E2               	movwf	___flmul@temp^(0+128)
 15246     016F                     l4765:
 15247     016F  0862               	movf	___flmul@temp^(0+128),w
 15248     0170  07D8               	addwf	___flmul@grs^(0+128),f
 15249     0171  0863               	movf	(___flmul@temp+1)^(0+128),w
 15250     0172  3DD9               	addwfc	(___flmul@grs+1)^(0+128),f
 15251     0173  3000               	movlw	0
 15252     0174  3DDA               	addwfc	(___flmul@grs+2)^(0+128),f
 15253     0175  3DDB               	addwfc	(___flmul@grs+3)^(0+128),f
 15254     0176                     l4767:
 15255     0176  084A               	movf	___flmul@b^(0+128),w
 15256     0177  00A0               	movwf	__Umul8_16@multiplicand^(0+128)
 15257     0178  084F               	movf	(___flmul@a^(0+128)+1),w
 15258     0179  319E  265B  3180   	fcall	__Umul8_16
 15259     017C  0021               	movlb	1	; select bank1
 15260     017D  0821               	movf	(?__Umul8_16+1)^(0+128),w
 15261     017E  00E3               	movwf	(___flmul@temp+1)^(0+128)
 15262     017F  0820               	movf	?__Umul8_16^(0+128),w
 15263     0180  00E2               	movwf	___flmul@temp^(0+128)
 15264     0181                     l4769:
 15265     0181  0862               	movf	___flmul@temp^(0+128),w
 15266     0182  07D8               	addwf	___flmul@grs^(0+128),f
 15267     0183  0863               	movf	(___flmul@temp+1)^(0+128),w
 15268     0184  3DD9               	addwfc	(___flmul@grs+1)^(0+128),f
 15269     0185  3000               	movlw	0
 15270     0186  3DDA               	addwfc	(___flmul@grs+2)^(0+128),f
 15271     0187  3DDB               	addwfc	(___flmul@grs+3)^(0+128),f
 15272     0188                     l4771:
 15273     0188  3008               	movlw	8
 15274     0189                     u5295:
 15275     0189  35D8               	lslf	___flmul@grs^(0+128),f
 15276     018A  0DD9               	rlf	(___flmul@grs+1)^(0+128),f
 15277     018B  0DDA               	rlf	(___flmul@grs+2)^(0+128),f
 15278     018C  0DDB               	rlf	(___flmul@grs+3)^(0+128),f
 15279     018D  0B89               	decfsz	9,f
 15280     018E  2989               	goto	u5295
 15281     018F  084A               	movf	___flmul@b^(0+128),w
 15282     0190  00A0               	movwf	__Umul8_16@multiplicand^(0+128)
 15283     0191  084E               	movf	___flmul@a^(0+128),w
 15284     0192  319E  265B  3180   	fcall	__Umul8_16
 15285     0195  0021               	movlb	1	; select bank1
 15286     0196  0821               	movf	(?__Umul8_16+1)^(0+128),w
 15287     0197  00E3               	movwf	(___flmul@temp+1)^(0+128)
 15288     0198  0820               	movf	?__Umul8_16^(0+128),w
 15289     0199  00E2               	movwf	___flmul@temp^(0+128)
 15290     019A                     l4773:
 15291     019A  0862               	movf	___flmul@temp^(0+128),w
 15292     019B  07D8               	addwf	___flmul@grs^(0+128),f
 15293     019C  0863               	movf	(___flmul@temp+1)^(0+128),w
 15294     019D  3DD9               	addwfc	(___flmul@grs+1)^(0+128),f
 15295     019E  3000               	movlw	0
 15296     019F  3DDA               	addwfc	(___flmul@grs+2)^(0+128),f
 15297     01A0  3DDB               	addwfc	(___flmul@grs+3)^(0+128),f
 15298     01A1                     l4775:
 15299     01A1  084B               	movf	(___flmul@b^(0+128)+1),w
 15300     01A2  00A0               	movwf	__Umul8_16@multiplicand^(0+128)
 15301     01A3  0850               	movf	(___flmul@a^(0+128)+2),w
 15302     01A4  319E  265B  3180   	fcall	__Umul8_16
 15303     01A7  0021               	movlb	1	; select bank1
 15304     01A8  0821               	movf	(?__Umul8_16+1)^(0+128),w
 15305     01A9  00E3               	movwf	(___flmul@temp+1)^(0+128)
 15306     01AA  0820               	movf	?__Umul8_16^(0+128),w
 15307     01AB  00E2               	movwf	___flmul@temp^(0+128)
 15308     01AC  0862               	movf	___flmul@temp^(0+128),w
 15309     01AD  07DE               	addwf	___flmul@prod^(0+128),f
 15310     01AE  0863               	movf	(___flmul@temp+1)^(0+128),w
 15311     01AF  3DDF               	addwfc	(___flmul@prod+1)^(0+128),f
 15312     01B0  3000               	movlw	0
 15313     01B1  3DE0               	addwfc	(___flmul@prod+2)^(0+128),f
 15314     01B2  3DE1               	addwfc	(___flmul@prod+3)^(0+128),f
 15315     01B3                     l4777:
 15316     01B3  084C               	movf	(___flmul@b^(0+128)+2),w
 15317     01B4  00A0               	movwf	__Umul8_16@multiplicand^(0+128)
 15318     01B5  084F               	movf	(___flmul@a^(0+128)+1),w
 15319     01B6  319E  265B  3180   	fcall	__Umul8_16
 15320     01B9  0021               	movlb	1	; select bank1
 15321     01BA  0821               	movf	(?__Umul8_16+1)^(0+128),w
 15322     01BB  00E3               	movwf	(___flmul@temp+1)^(0+128)
 15323     01BC  0820               	movf	?__Umul8_16^(0+128),w
 15324     01BD  00E2               	movwf	___flmul@temp^(0+128)
 15325     01BE                     l4779:
 15326     01BE  0862               	movf	___flmul@temp^(0+128),w
 15327     01BF  07DE               	addwf	___flmul@prod^(0+128),f
 15328     01C0  0863               	movf	(___flmul@temp+1)^(0+128),w
 15329     01C1  3DDF               	addwfc	(___flmul@prod+1)^(0+128),f
 15330     01C2  3000               	movlw	0
 15331     01C3  3DE0               	addwfc	(___flmul@prod+2)^(0+128),f
 15332     01C4  3DE1               	addwfc	(___flmul@prod+3)^(0+128),f
 15333     01C5  084C               	movf	(___flmul@b^(0+128)+2),w
 15334     01C6  00A0               	movwf	__Umul8_16@multiplicand^(0+128)
 15335     01C7  0850               	movf	(___flmul@a^(0+128)+2),w
 15336     01C8  319E  265B  3180   	fcall	__Umul8_16
 15337     01CB  0021               	movlb	1	; select bank1
 15338     01CC  0821               	movf	(?__Umul8_16+1)^(0+128),w
 15339     01CD  00E3               	movwf	(___flmul@temp+1)^(0+128)
 15340     01CE  0820               	movf	?__Umul8_16^(0+128),w
 15341     01CF  00E2               	movwf	___flmul@temp^(0+128)
 15342     01D0                     l4781:
 15343     01D0  0862               	movf	___flmul@temp^(0+128),w
 15344     01D1  00D2               	movwf	??___flmul^(0+128)
 15345     01D2  0863               	movf	(___flmul@temp+1)^(0+128),w
 15346     01D3  00D3               	movwf	(??___flmul^(0+128)+1)
 15347     01D4  01D4               	clrf	(??___flmul^(0+128)+2)
 15348     01D5  01D5               	clrf	(??___flmul^(0+128)+3)
 15349     01D6  3008               	movlw	8
 15350     01D7                     u5305:
 15351     01D7  35D2               	lslf	??___flmul^(0+128),f
 15352     01D8  0DD3               	rlf	(??___flmul^(0+128)+1),f
 15353     01D9  0DD4               	rlf	(??___flmul^(0+128)+2),f
 15354     01DA  0DD5               	rlf	(??___flmul^(0+128)+3),f
 15355     01DB                     u5300:
 15356     01DB  0B89               	decfsz	9,f
 15357     01DC  29D7               	goto	u5305
 15358     01DD  0852               	movf	??___flmul^(0+128),w
 15359     01DE  07DE               	addwf	___flmul@prod^(0+128),f
 15360     01DF  0853               	movf	(??___flmul+1)^(0+128),w
 15361     01E0  3DDF               	addwfc	(___flmul@prod+1)^(0+128),f
 15362     01E1  0854               	movf	(??___flmul+2)^(0+128),w
 15363     01E2  3DE0               	addwfc	(___flmul@prod+2)^(0+128),f
 15364     01E3  0855               	movf	(??___flmul+3)^(0+128),w
 15365     01E4  3DE1               	addwfc	(___flmul@prod+3)^(0+128),f
 15366     01E5                     l4783:
 15367     01E5  0858               	movf	___flmul@grs^(0+128),w
 15368     01E6  00D2               	movwf	??___flmul^(0+128)
 15369     01E7  0859               	movf	(___flmul@grs+1)^(0+128),w
 15370     01E8  00D3               	movwf	(??___flmul^(0+128)+1)
 15371     01E9  085A               	movf	(___flmul@grs+2)^(0+128),w
 15372     01EA  00D4               	movwf	(??___flmul^(0+128)+2)
 15373     01EB  085B               	movf	(___flmul@grs+3)^(0+128),w
 15374     01EC  00D5               	movwf	(??___flmul^(0+128)+3)
 15375     01ED  3018               	movlw	24
 15376     01EE                     u5315:
 15377     01EE  36D5               	lsrf	(??___flmul^(0+128)+3),f
 15378     01EF  0CD4               	rrf	(??___flmul^(0+128)+2),f
 15379     01F0  0CD3               	rrf	(??___flmul^(0+128)+1),f
 15380     01F1  0CD2               	rrf	??___flmul^(0+128),f
 15381     01F2                     u5310:
 15382     01F2  0B89               	decfsz	9,f
 15383     01F3  29EE               	goto	u5315
 15384     01F4  0852               	movf	??___flmul^(0+128),w
 15385     01F5  07DE               	addwf	___flmul@prod^(0+128),f
 15386     01F6  0853               	movf	(??___flmul+1)^(0+128),w
 15387     01F7  3DDF               	addwfc	(___flmul@prod+1)^(0+128),f
 15388     01F8  0854               	movf	(??___flmul+2)^(0+128),w
 15389     01F9  3DE0               	addwfc	(___flmul@prod+2)^(0+128),f
 15390     01FA  0855               	movf	(??___flmul+3)^(0+128),w
 15391     01FB  3DE1               	addwfc	(___flmul@prod+3)^(0+128),f
 15392     01FC                     l4785:
 15393     01FC  3008               	movlw	8
 15394     01FD                     u5325:
 15395     01FD  35D8               	lslf	___flmul@grs^(0+128),f
 15396     01FE  0DD9               	rlf	(___flmul@grs+1)^(0+128),f
 15397     01FF  0DDA               	rlf	(___flmul@grs+2)^(0+128),f
 15398     0200  0DDB               	rlf	(___flmul@grs+3)^(0+128),f
 15399     0201  0B89               	decfsz	9,f
 15400     0202  29FD               	goto	u5325
 15401     0203                     l4787:
 15402     0203  085D               	movf	___flmul@bexp^(0+128),w
 15403     0204  075C               	addwf	___flmul@aexp^(0+128),w
 15404     0205  00D2               	movwf	??___flmul^(0+128)
 15405     0206  01D3               	clrf	(??___flmul^(0+128)+1)
 15406     0207  0DD3               	rlf	(??___flmul+1)^(0+128),f
 15407     0208  0852               	movf	??___flmul^(0+128),w
 15408     0209  3E82               	addlw	130
 15409     020A  00E2               	movwf	___flmul@temp^(0+128)
 15410     020B  30FF               	movlw	255
 15411     020C  3D53               	addwfc	(??___flmul+1)^(0+128),w
 15412     020D  00E3               	movwf	(___flmul@temp+1)^(0+128)
 15413     020E  2A26               	goto	l4799
 15414     020F                     l4789:
 15415     020F  3001               	movlw	1
 15416     0210                     u5335:
 15417     0210  35DE               	lslf	___flmul@prod^(0+128),f
 15418     0211  0DDF               	rlf	(___flmul@prod+1)^(0+128),f
 15419     0212  0DE0               	rlf	(___flmul@prod+2)^(0+128),f
 15420     0213  0DE1               	rlf	(___flmul@prod+3)^(0+128),f
 15421     0214  0B89               	decfsz	9,f
 15422     0215  2A10               	goto	u5335
 15423     0216                     l4791:
 15424     0216  1FDB               	btfss	(___flmul@grs+3)^(0+128),7
 15425     0217  2A19               	goto	u5341
 15426     0218  2A1A               	goto	u5340
 15427     0219                     u5341:
 15428     0219  2A1B               	goto	l4795
 15429     021A                     u5340:
 15430     021A                     l4793:
 15431     021A  145E               	bsf	___flmul@prod^(0+128),0
 15432     021B                     l4795:
 15433     021B  3001               	movlw	1
 15434     021C                     u5355:
 15435     021C  35D8               	lslf	___flmul@grs^(0+128),f
 15436     021D  0DD9               	rlf	(___flmul@grs+1)^(0+128),f
 15437     021E  0DDA               	rlf	(___flmul@grs+2)^(0+128),f
 15438     021F  0DDB               	rlf	(___flmul@grs+3)^(0+128),f
 15439     0220  0B89               	decfsz	9,f
 15440     0221  2A1C               	goto	u5355
 15441     0222                     l4797:
 15442     0222  30FF               	movlw	255
 15443     0223  07E2               	addwf	___flmul@temp^(0+128),f
 15444     0224  30FF               	movlw	255
 15445     0225  3DE3               	addwfc	(___flmul@temp+1)^(0+128),f
 15446     0226                     l4799:
 15447     0226  1FE0               	btfss	(___flmul@prod+2)^(0+128),7
 15448     0227  2A29               	goto	u5361
 15449     0228  2A2A               	goto	u5360
 15450     0229                     u5361:
 15451     0229  2A0F               	goto	l4789
 15452     022A                     u5360:
 15453     022A                     l4801:
 15454     022A  01DC               	clrf	___flmul@aexp^(0+128)
 15455     022B                     l4803:
 15456     022B  1FDB               	btfss	(___flmul@grs+3)^(0+128),7
 15457     022C  2A2E               	goto	u5371
 15458     022D  2A2F               	goto	u5370
 15459     022E                     u5371:
 15460     022E  2A4B               	goto	l4811
 15461     022F                     u5370:
 15462     022F                     l4805:
 15463     022F  30FF               	movlw	255
 15464     0230  0558               	andwf	___flmul@grs^(0+128),w
 15465     0231  00D2               	movwf	??___flmul^(0+128)
 15466     0232  30FF               	movlw	255
 15467     0233  0559               	andwf	(___flmul@grs+1)^(0+128),w
 15468     0234  00D3               	movwf	(??___flmul^(0+128)+1)
 15469     0235  30FF               	movlw	255
 15470     0236  055A               	andwf	(___flmul@grs+2)^(0+128),w
 15471     0237  00D4               	movwf	(??___flmul^(0+128)+2)
 15472     0238  307F               	movlw	127
 15473     0239  055B               	andwf	(___flmul@grs+3)^(0+128),w
 15474     023A  00D5               	movwf	(??___flmul^(0+128)+3)
 15475     023B  0855               	movf	(??___flmul+3)^(0+128),w
 15476     023C  0454               	iorwf	(??___flmul+2)^(0+128),w
 15477     023D  0453               	iorwf	(??___flmul+1)^(0+128),w
 15478     023E  0452               	iorwf	??___flmul^(0+128),w
 15479     023F  1903               	skipnz
 15480     0240  2A42               	goto	u5381
 15481     0241  2A43               	goto	u5380
 15482     0242                     u5381:
 15483     0242  2A46               	goto	l1568
 15484     0243                     u5380:
 15485     0243                     l4807:
 15486     0243  3001               	movlw	1
 15487     0244  00DC               	movwf	___flmul@aexp^(0+128)
 15488     0245  2A4B               	goto	l4811
 15489     0246                     l1568:
 15490     0246  1C5E               	btfss	___flmul@prod^(0+128),0
 15491     0247  2A49               	goto	u5391
 15492     0248  2A4A               	goto	u5390
 15493     0249                     u5391:
 15494     0249  2A4B               	goto	l4811
 15495     024A                     u5390:
 15496     024A  2A43               	goto	l4807
 15497     024B                     l4811:
 15498     024B  085C               	movf	___flmul@aexp^(0+128),w
 15499     024C  1903               	btfsc	3,2
 15500     024D  2A4F               	goto	u5401
 15501     024E  2A50               	goto	u5400
 15502     024F                     u5401:
 15503     024F  2A76               	goto	l4821
 15504     0250                     u5400:
 15505     0250                     l4813:
 15506     0250  3001               	movlw	1
 15507     0251  07DE               	addwf	___flmul@prod^(0+128),f
 15508     0252  3000               	movlw	0
 15509     0253  3DDF               	addwfc	(___flmul@prod+1)^(0+128),f
 15510     0254  3DE0               	addwfc	(___flmul@prod+2)^(0+128),f
 15511     0255  3DE1               	addwfc	(___flmul@prod+3)^(0+128),f
 15512     0256                     l4815:
 15513     0256  1C61               	btfss	(___flmul@prod+3)^(0+128),0
 15514     0257  2A59               	goto	u5411
 15515     0258  2A5A               	goto	u5410
 15516     0259                     u5411:
 15517     0259  2A76               	goto	l4821
 15518     025A                     u5410:
 15519     025A                     l4817:
 15520     025A  085E               	movf	___flmul@prod^(0+128),w
 15521     025B  00D2               	movwf	??___flmul^(0+128)
 15522     025C  085F               	movf	(___flmul@prod+1)^(0+128),w
 15523     025D  00D3               	movwf	(??___flmul^(0+128)+1)
 15524     025E  0860               	movf	(___flmul@prod+2)^(0+128),w
 15525     025F  00D4               	movwf	(??___flmul^(0+128)+2)
 15526     0260  0861               	movf	(___flmul@prod+3)^(0+128),w
 15527     0261  00D5               	movwf	(??___flmul^(0+128)+3)
 15528     0262  3001               	movlw	1
 15529     0263  00D6               	movwf	(??___flmul+4)^(0+128)
 15530     0264                     u5425:
 15531     0264  37D5               	asrf	(??___flmul^(0+128)+3),f
 15532     0265  0CD4               	rrf	(??___flmul^(0+128)+2),f
 15533     0266  0CD3               	rrf	(??___flmul^(0+128)+1),f
 15534     0267  0CD2               	rrf	??___flmul^(0+128),f
 15535     0268                     u5420:
 15536     0268  0BD6               	decfsz	(??___flmul+4)^(0+128),f
 15537     0269  2A64               	goto	u5425
 15538     026A  0855               	movf	(??___flmul+3)^(0+128),w
 15539     026B  00E1               	movwf	(___flmul@prod+3)^(0+128)
 15540     026C  0854               	movf	(??___flmul+2)^(0+128),w
 15541     026D  00E0               	movwf	(___flmul@prod+2)^(0+128)
 15542     026E  0853               	movf	(??___flmul+1)^(0+128),w
 15543     026F  00DF               	movwf	(___flmul@prod+1)^(0+128)
 15544     0270  0852               	movf	??___flmul^(0+128),w
 15545     0271  00DE               	movwf	___flmul@prod^(0+128)
 15546     0272                     l4819:
 15547     0272  3001               	movlw	1
 15548     0273  07E2               	addwf	___flmul@temp^(0+128),f
 15549     0274  3000               	movlw	0
 15550     0275  3DE3               	addwfc	(___flmul@temp+1)^(0+128),f
 15551     0276                     l4821:
 15552     0276  0863               	movf	(___flmul@temp+1)^(0+128),w
 15553     0277  3A80               	xorlw	128
 15554     0278  00D2               	movwf	??___flmul^(0+128)
 15555     0279  3080               	movlw	128
 15556     027A  0252               	subwf	??___flmul^(0+128),w
 15557     027B  1D03               	skipz
 15558     027C  2A7F               	goto	u5435
 15559     027D  30FF               	movlw	255
 15560     027E  0262               	subwf	___flmul@temp^(0+128),w
 15561     027F                     u5435:
 15562     027F  1C03               	skipc
 15563     0280  2A82               	goto	u5431
 15564     0281  2A83               	goto	u5430
 15565     0282                     u5431:
 15566     0282  2A8D               	goto	l4825
 15567     0283                     u5430:
 15568     0283                     l4823:
 15569     0283  307F               	movlw	127
 15570     0284  0021               	movlb	1	; select bank1
 15571     0285  00E1               	movwf	(___flmul@prod+3)^(0+128)
 15572     0286  3080               	movlw	128
 15573     0287  00E0               	movwf	(___flmul@prod+2)^(0+128)
 15574     0288  3000               	movlw	0
 15575     0289  00DF               	movwf	(___flmul@prod+1)^(0+128)
 15576     028A  3000               	movlw	0
 15577     028B  00DE               	movwf	___flmul@prod^(0+128)
 15578     028C  2ABE               	goto	l1574
 15579     028D                     l4825:
 15580     028D  0021               	movlb	1	; select bank1
 15581     028E  0863               	movf	(___flmul@temp+1)^(0+128),w
 15582     028F  3A80               	xorlw	128
 15583     0290  00D2               	movwf	??___flmul^(0+128)
 15584     0291  3080               	movlw	128
 15585     0292  0252               	subwf	??___flmul^(0+128),w
 15586     0293  1D03               	skipz
 15587     0294  2A97               	goto	u5445
 15588     0295  3001               	movlw	1
 15589     0296  0262               	subwf	___flmul@temp^(0+128),w
 15590     0297                     u5445:
 15591     0297  1803               	skipnc
 15592     0298  2A9A               	goto	u5441
 15593     0299  2A9B               	goto	u5440
 15594     029A                     u5441:
 15595     029A  2AA6               	goto	l4831
 15596     029B                     u5440:
 15597     029B                     l4827:
 15598     029B  3000               	movlw	0
 15599     029C  0021               	movlb	1	; select bank1
 15600     029D  00E1               	movwf	(___flmul@prod+3)^(0+128)
 15601     029E  3000               	movlw	0
 15602     029F  00E0               	movwf	(___flmul@prod+2)^(0+128)
 15603     02A0  3000               	movlw	0
 15604     02A1  00DF               	movwf	(___flmul@prod+1)^(0+128)
 15605     02A2  3000               	movlw	0
 15606     02A3  00DE               	movwf	___flmul@prod^(0+128)
 15607     02A4                     l4829:
 15608     02A4  01D7               	clrf	___flmul@sign^(0+128)
 15609     02A5  2ABE               	goto	l1574
 15610     02A6                     l4831:
 15611     02A6  0021               	movlb	1	; select bank1
 15612     02A7  0862               	movf	___flmul@temp^(0+128),w
 15613     02A8  00DD               	movwf	___flmul@bexp^(0+128)
 15614     02A9  30FF               	movlw	255
 15615     02AA  05DE               	andwf	___flmul@prod^(0+128),f
 15616     02AB  30FF               	movlw	255
 15617     02AC  05DF               	andwf	(___flmul@prod+1)^(0+128),f
 15618     02AD  307F               	movlw	127
 15619     02AE  05E0               	andwf	(___flmul@prod+2)^(0+128),f
 15620     02AF  3000               	movlw	0
 15621     02B0  05E1               	andwf	(___flmul@prod+3)^(0+128),f
 15622     02B1                     l4833:
 15623     02B1  1C5D               	btfss	___flmul@bexp^(0+128),0
 15624     02B2  2AB4               	goto	u5451
 15625     02B3  2AB5               	goto	u5450
 15626     02B4                     u5451:
 15627     02B4  2AB6               	goto	l4837
 15628     02B5                     u5450:
 15629     02B5                     l4835:
 15630     02B5  17E0               	bsf	(___flmul@prod^(0+128)+2),7
 15631     02B6                     l4837:
 15632     02B6  085D               	movf	___flmul@bexp^(0+128),w
 15633     02B7  00D2               	movwf	??___flmul^(0+128)
 15634     02B8  3001               	movlw	1
 15635     02B9                     u5465:
 15636     02B9  36D2               	lsrf	??___flmul^(0+128),f
 15637     02BA  0B89               	decfsz	9,f
 15638     02BB  2AB9               	goto	u5465
 15639     02BC  0852               	movf	??___flmul^(0+128),w
 15640     02BD  00E1               	movwf	(___flmul@prod^(0+128)+3)
 15641     02BE                     l1574:
 15642     02BE  0857               	movf	___flmul@sign^(0+128),w
 15643     02BF  04E1               	iorwf	(___flmul@prod^(0+128)+3),f
 15644     02C0                     l4839:
 15645     02C0  0861               	movf	(___flmul@prod+3)^(0+128),w
 15646     02C1  00CD               	movwf	(?___flmul+3)^(0+128)
 15647     02C2  0860               	movf	(___flmul@prod+2)^(0+128),w
 15648     02C3  00CC               	movwf	(?___flmul+2)^(0+128)
 15649     02C4  085F               	movf	(___flmul@prod+1)^(0+128),w
 15650     02C5  00CB               	movwf	(?___flmul+1)^(0+128)
 15651     02C6  085E               	movf	___flmul@prod^(0+128),w
 15652     02C7  00CA               	movwf	?___flmul^(0+128)
 15653     02C8                     l1562:
 15654     02C8  0008               	return
 15655     02C9                     __end_of___flmul:
 15656                           
 15657                           	psect	text54
 15658     1E5B                     __ptext54:	
 15659 ;; *************** function __Umul8_16 *****************
 15660 ;; Defined at:
 15661 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\Umul8_16.c"
 15662 ;; Parameters:    Size  Location     Type
 15663 ;;  multiplier      1    wreg     unsigned char 
 15664 ;;  multiplicand    1    0[BANK1 ] unsigned char 
 15665 ;; Auto vars:     Size  Location     Type
 15666 ;;  multiplier      1    8[BANK1 ] unsigned char 
 15667 ;;  word_mpld       2    6[BANK1 ] unsigned short 
 15668 ;;  product         2    4[BANK1 ] unsigned short 
 15669 ;; Return value:  Size  Location     Type
 15670 ;;                  2    0[BANK1 ] unsigned int 
 15671 ;; Registers used:
 15672 ;;		wreg, status,2, status,0
 15673 ;; Tracked objects:
 15674 ;;		On entry : 0/0
 15675 ;;		On exit  : 0/0
 15676 ;;		Unchanged: 0/0
 15677 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 15678 ;;      Params:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0
 15679 ;;      Locals:         0       0       5       0       0       0       0       0       0       0       0       0       
      +0       0
 15680 ;;      Temps:          0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0
 15681 ;;      Totals:         0       0       9       0       0       0       0       0       0       0       0       0       
      +0       0
 15682 ;;Total ram usage:        9 bytes
 15683 ;; Hardware stack levels used: 1
 15684 ;; Hardware stack levels required when called: 5
 15685 ;; This function calls:
 15686 ;;		Nothing
 15687 ;; This function is called by:
 15688 ;;		___flmul
 15689 ;; This function uses a non-reentrant model
 15690 ;;
 15691                           
 15692     1E5B                     __Umul8_16:	
 15693                           ;psect for function __Umul8_16
 15694                           
 15695                           
 15696                           ;incstack = 0
 15697                           ; Regs used in __Umul8_16: [wreg+status,2+status,0]
 15698                           ;__Umul8_16@multiplier stored from wreg
 15699     1E5B  0021               	movlb	1	; select bank1
 15700     1E5C  00A8               	movwf	__Umul8_16@multiplier^(0+128)
 15701     1E5D                     l4357:
 15702     1E5D  01A4               	clrf	__Umul8_16@product^(0+128)
 15703     1E5E  01A5               	clrf	(__Umul8_16@product+1)^(0+128)
 15704     1E5F                     l4359:
 15705     1E5F  0820               	movf	__Umul8_16@multiplicand^(0+128),w
 15706     1E60  00A2               	movwf	??__Umul8_16^(0+128)
 15707     1E61  01A3               	clrf	(??__Umul8_16^(0+128)+1)
 15708     1E62  0822               	movf	??__Umul8_16^(0+128),w
 15709     1E63  00A6               	movwf	__Umul8_16@word_mpld^(0+128)
 15710     1E64  0823               	movf	(??__Umul8_16+1)^(0+128),w
 15711     1E65  00A7               	movwf	(__Umul8_16@word_mpld+1)^(0+128)
 15712     1E66                     l4361:
 15713     1E66  1C28               	btfss	__Umul8_16@multiplier^(0+128),0
 15714     1E67  2E69               	goto	u4431
 15715     1E68  2E6A               	goto	u4430
 15716     1E69                     u4431:
 15717     1E69  2E6E               	goto	l1581
 15718     1E6A                     u4430:
 15719     1E6A                     l4363:
 15720     1E6A  0826               	movf	__Umul8_16@word_mpld^(0+128),w
 15721     1E6B  07A4               	addwf	__Umul8_16@product^(0+128),f
 15722     1E6C  0827               	movf	(__Umul8_16@word_mpld+1)^(0+128),w
 15723     1E6D  3DA5               	addwfc	(__Umul8_16@product+1)^(0+128),f
 15724     1E6E                     l1581:
 15725     1E6E  3001               	movlw	1
 15726     1E6F                     u4445:
 15727     1E6F  35A6               	lslf	__Umul8_16@word_mpld^(0+128),f
 15728     1E70  0DA7               	rlf	(__Umul8_16@word_mpld+1)^(0+128),f
 15729     1E71  0B89               	decfsz	9,f
 15730     1E72  2E6F               	goto	u4445
 15731     1E73  1003               	clrc
 15732     1E74  0CA8               	rrf	__Umul8_16@multiplier^(0+128),f
 15733     1E75                     l4365:
 15734     1E75  0828               	movf	__Umul8_16@multiplier^(0+128),w
 15735     1E76  1D03               	btfss	3,2
 15736     1E77  2E79               	goto	u4451
 15737     1E78  2E7A               	goto	u4450
 15738     1E79                     u4451:
 15739     1E79  2E66               	goto	l4361
 15740     1E7A                     u4450:
 15741     1E7A                     l4367:
 15742     1E7A  0825               	movf	(__Umul8_16@product+1)^(0+128),w
 15743     1E7B  00A1               	movwf	(?__Umul8_16+1)^(0+128)
 15744     1E7C  0824               	movf	__Umul8_16@product^(0+128),w
 15745     1E7D  00A0               	movwf	?__Umul8_16^(0+128)
 15746     1E7E                     l1583:
 15747     1E7E  0008               	return
 15748     1E7F                     __end_of__Umul8_16:
 15749                           
 15750                           	psect	text55
 15751     0504                     __ptext55:	
 15752 ;; *************** function ___fladd *****************
 15753 ;; Defined at:
 15754 ;;		line 10 in file "C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\sprcadd.c"
 15755 ;; Parameters:    Size  Location     Type
 15756 ;;  b               4   14[BANK1 ] unsigned int 
 15757 ;;  a               4   18[BANK1 ] unsigned int 
 15758 ;; Auto vars:     Size  Location     Type
 15759 ;;  grs             1   33[BANK1 ] unsigned char 
 15760 ;;  bexp            1   32[BANK1 ] unsigned char 
 15761 ;;  aexp            1   31[BANK1 ] unsigned char 
 15762 ;;  signs           1   30[BANK1 ] unsigned char 
 15763 ;; Return value:  Size  Location     Type
 15764 ;;                  4   14[BANK1 ] unsigned char 
 15765 ;; Registers used:
 15766 ;;		wreg, status,2, status,0
 15767 ;; Tracked objects:
 15768 ;;		On entry : 0/0
 15769 ;;		On exit  : 0/0
 15770 ;;		Unchanged: 0/0
 15771 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 15772 ;;      Params:         0       0       8       0       0       0       0       0       0       0       0       0       
      +0       0
 15773 ;;      Locals:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0
 15774 ;;      Temps:          0       0       8       0       0       0       0       0       0       0       0       0       
      +0       0
 15775 ;;      Totals:         0       0      20       0       0       0       0       0       0       0       0       0       
      +0       0
 15776 ;;Total ram usage:       20 bytes
 15777 ;; Hardware stack levels used: 1
 15778 ;; Hardware stack levels required when called: 5
 15779 ;; This function calls:
 15780 ;;		Nothing
 15781 ;; This function is called by:
 15782 ;;		_str2float
 15783 ;;		_getLedNumber
 15784 ;;		___flsub
 15785 ;; This function uses a non-reentrant model
 15786 ;;
 15787                           
 15788     0504                     ___fladd:	
 15789                           ;psect for function ___fladd
 15790                           
 15791     0504                     l4507:	
 15792                           ;incstack = 0
 15793                           ; Regs used in ___fladd: [wreg+status,2+status,0]
 15794                           
 15795     0504  0021               	movlb	1	; select bank1
 15796     0505  0831               	movf	(___fladd@b^(0+128)+3),w
 15797     0506  3980               	andlw	128
 15798     0507  00BE               	movwf	___fladd@signs^(0+128)
 15799     0508                     l4509:
 15800     0508  3531               	lslf	(___fladd@b^(0+128)+3),w
 15801     0509  00C0               	movwf	___fladd@bexp^(0+128)
 15802     050A                     l4511:
 15803     050A  1FB0               	btfss	(___fladd@b^(0+128)+2),7
 15804     050B  2D0D               	goto	u4741
 15805     050C  2D0E               	goto	u4740
 15806     050D                     u4741:
 15807     050D  2D0F               	goto	l4515
 15808     050E                     u4740:
 15809     050E                     l4513:
 15810     050E  1440               	bsf	___fladd@bexp^(0+128),0
 15811     050F                     l4515:
 15812     050F  0840               	movf	___fladd@bexp^(0+128),w
 15813     0510  1903               	btfsc	3,2
 15814     0511  2D13               	goto	u4751
 15815     0512  2D14               	goto	u4750
 15816     0513                     u4751:
 15817     0513  2D24               	goto	l4525
 15818     0514                     u4750:
 15819     0514                     l4517:
 15820     0514  0A40               	incf	___fladd@bexp^(0+128),w
 15821     0515  1D03               	btfss	3,2
 15822     0516  2D18               	goto	u4761
 15823     0517  2D19               	goto	u4760
 15824     0518                     u4761:
 15825     0518  2D21               	goto	l4521
 15826     0519                     u4760:
 15827     0519                     l4519:
 15828     0519  3000               	movlw	0
 15829     051A  00B1               	movwf	(___fladd@b+3)^(0+128)
 15830     051B  3000               	movlw	0
 15831     051C  00B0               	movwf	(___fladd@b+2)^(0+128)
 15832     051D  3000               	movlw	0
 15833     051E  00AF               	movwf	(___fladd@b+1)^(0+128)
 15834     051F  3000               	movlw	0
 15835     0520  00AE               	movwf	___fladd@b^(0+128)
 15836     0521                     l4521:
 15837     0521  17B0               	bsf	(___fladd@b^(0+128)+2),7
 15838     0522                     l4523:
 15839     0522  01B1               	clrf	(___fladd@b^(0+128)+3)
 15840     0523  2D2C               	goto	l4527
 15841     0524                     l4525:
 15842     0524  3000               	movlw	0
 15843     0525  00B1               	movwf	(___fladd@b+3)^(0+128)
 15844     0526  3000               	movlw	0
 15845     0527  00B0               	movwf	(___fladd@b+2)^(0+128)
 15846     0528  3000               	movlw	0
 15847     0529  00AF               	movwf	(___fladd@b+1)^(0+128)
 15848     052A  3000               	movlw	0
 15849     052B  00AE               	movwf	___fladd@b^(0+128)
 15850     052C                     l4527:
 15851     052C  0835               	movf	(___fladd@a^(0+128)+3),w
 15852     052D  3980               	andlw	128
 15853     052E  00BF               	movwf	___fladd@aexp^(0+128)
 15854     052F                     l4529:
 15855     052F  083F               	movf	___fladd@aexp^(0+128),w
 15856     0530  063E               	xorwf	___fladd@signs^(0+128),w
 15857     0531  1903               	skipnz
 15858     0532  2D34               	goto	u4771
 15859     0533  2D35               	goto	u4770
 15860     0534                     u4771:
 15861     0534  2D36               	goto	l4533
 15862     0535                     u4770:
 15863     0535                     l4531:
 15864     0535  173E               	bsf	___fladd@signs^(0+128),6
 15865     0536                     l4533:
 15866     0536  3535               	lslf	(___fladd@a^(0+128)+3),w
 15867     0537  00BF               	movwf	___fladd@aexp^(0+128)
 15868     0538                     l4535:
 15869     0538  1FB4               	btfss	(___fladd@a^(0+128)+2),7
 15870     0539  2D3B               	goto	u4781
 15871     053A  2D3C               	goto	u4780
 15872     053B                     u4781:
 15873     053B  2D3D               	goto	l4539
 15874     053C                     u4780:
 15875     053C                     l4537:
 15876     053C  143F               	bsf	___fladd@aexp^(0+128),0
 15877     053D                     l4539:
 15878     053D  083F               	movf	___fladd@aexp^(0+128),w
 15879     053E  1903               	btfsc	3,2
 15880     053F  2D41               	goto	u4791
 15881     0540  2D42               	goto	u4790
 15882     0541                     u4791:
 15883     0541  2D52               	goto	l4549
 15884     0542                     u4790:
 15885     0542                     l4541:
 15886     0542  0A3F               	incf	___fladd@aexp^(0+128),w
 15887     0543  1D03               	btfss	3,2
 15888     0544  2D46               	goto	u4801
 15889     0545  2D47               	goto	u4800
 15890     0546                     u4801:
 15891     0546  2D4F               	goto	l4545
 15892     0547                     u4800:
 15893     0547                     l4543:
 15894     0547  3000               	movlw	0
 15895     0548  00B5               	movwf	(___fladd@a+3)^(0+128)
 15896     0549  3000               	movlw	0
 15897     054A  00B4               	movwf	(___fladd@a+2)^(0+128)
 15898     054B  3000               	movlw	0
 15899     054C  00B3               	movwf	(___fladd@a+1)^(0+128)
 15900     054D  3000               	movlw	0
 15901     054E  00B2               	movwf	___fladd@a^(0+128)
 15902     054F                     l4545:
 15903     054F  17B4               	bsf	(___fladd@a^(0+128)+2),7
 15904     0550                     l4547:
 15905     0550  01B5               	clrf	(___fladd@a^(0+128)+3)
 15906     0551  2D5A               	goto	l1466
 15907     0552                     l4549:
 15908     0552  3000               	movlw	0
 15909     0553  00B5               	movwf	(___fladd@a+3)^(0+128)
 15910     0554  3000               	movlw	0
 15911     0555  00B4               	movwf	(___fladd@a+2)^(0+128)
 15912     0556  3000               	movlw	0
 15913     0557  00B3               	movwf	(___fladd@a+1)^(0+128)
 15914     0558  3000               	movlw	0
 15915     0559  00B2               	movwf	___fladd@a^(0+128)
 15916     055A                     l1466:
 15917     055A  0840               	movf	___fladd@bexp^(0+128),w
 15918     055B  023F               	subwf	___fladd@aexp^(0+128),w
 15919     055C  1803               	skipnc
 15920     055D  2D5F               	goto	u4811
 15921     055E  2D60               	goto	u4810
 15922     055F                     u4811:
 15923     055F  2D84               	goto	l4585
 15924     0560                     u4810:
 15925     0560                     l4551:
 15926     0560  1F3E               	btfss	___fladd@signs^(0+128),6
 15927     0561  2D63               	goto	u4821
 15928     0562  2D64               	goto	u4820
 15929     0563                     u4821:
 15930     0563  2D66               	goto	l4555
 15931     0564                     u4820:
 15932     0564                     l4553:
 15933     0564  3080               	movlw	128
 15934     0565  06BE               	xorwf	___fladd@signs^(0+128),f
 15935     0566                     l4555:
 15936     0566  0840               	movf	___fladd@bexp^(0+128),w
 15937     0567  00C1               	movwf	___fladd@grs^(0+128)
 15938     0568                     l4557:
 15939     0568  083F               	movf	___fladd@aexp^(0+128),w
 15940     0569  00C0               	movwf	___fladd@bexp^(0+128)
 15941     056A                     l4559:
 15942     056A  0841               	movf	___fladd@grs^(0+128),w
 15943     056B  00BF               	movwf	___fladd@aexp^(0+128)
 15944     056C                     l4561:
 15945     056C  082E               	movf	___fladd@b^(0+128),w
 15946     056D  00C1               	movwf	___fladd@grs^(0+128)
 15947     056E                     l4563:
 15948     056E  0832               	movf	___fladd@a^(0+128),w
 15949     056F  00AE               	movwf	___fladd@b^(0+128)
 15950     0570                     l4565:
 15951     0570  0841               	movf	___fladd@grs^(0+128),w
 15952     0571  00B2               	movwf	___fladd@a^(0+128)
 15953     0572                     l4567:
 15954     0572  082F               	movf	(___fladd@b^(0+128)+1),w
 15955     0573  00C1               	movwf	___fladd@grs^(0+128)
 15956     0574                     l4569:
 15957     0574  0833               	movf	(___fladd@a^(0+128)+1),w
 15958     0575  00AF               	movwf	(___fladd@b^(0+128)+1)
 15959     0576                     l4571:
 15960     0576  0841               	movf	___fladd@grs^(0+128),w
 15961     0577  00B3               	movwf	(___fladd@a^(0+128)+1)
 15962     0578                     l4573:
 15963     0578  0830               	movf	(___fladd@b^(0+128)+2),w
 15964     0579  00C1               	movwf	___fladd@grs^(0+128)
 15965     057A                     l4575:
 15966     057A  0834               	movf	(___fladd@a^(0+128)+2),w
 15967     057B  00B0               	movwf	(___fladd@b^(0+128)+2)
 15968     057C                     l4577:
 15969     057C  0841               	movf	___fladd@grs^(0+128),w
 15970     057D  00B4               	movwf	(___fladd@a^(0+128)+2)
 15971     057E                     l4579:
 15972     057E  0831               	movf	(___fladd@b^(0+128)+3),w
 15973     057F  00C1               	movwf	___fladd@grs^(0+128)
 15974     0580                     l4581:
 15975     0580  0835               	movf	(___fladd@a^(0+128)+3),w
 15976     0581  00B1               	movwf	(___fladd@b^(0+128)+3)
 15977     0582                     l4583:
 15978     0582  0841               	movf	___fladd@grs^(0+128),w
 15979     0583  00B5               	movwf	(___fladd@a^(0+128)+3)
 15980     0584                     l4585:
 15981     0584  01C1               	clrf	___fladd@grs^(0+128)
 15982     0585                     l4587:
 15983     0585  083F               	movf	___fladd@aexp^(0+128),w
 15984     0586  00B6               	movwf	??___fladd^(0+128)
 15985     0587  01B7               	clrf	(??___fladd^(0+128)+1)
 15986     0588  0837               	movf	(??___fladd+1)^(0+128),w
 15987     0589  00B9               	movwf	((??___fladd+2)^(0+128)+1)
 15988     058A  0840               	movf	___fladd@bexp^(0+128),w
 15989     058B  0236               	subwf	??___fladd^(0+128),w
 15990     058C  00B8               	movwf	(??___fladd+2)^(0+128)
 15991     058D  1C03               	skipc
 15992     058E  03B9               	decf	((??___fladd+2)^(0+128)+1),f
 15993     058F  0839               	movf	(??___fladd+3)^(0+128),w
 15994     0590  3A80               	xorlw	128
 15995     0591  00BA               	movwf	(??___fladd+4)^(0+128)
 15996     0592  3080               	movlw	128
 15997     0593  023A               	subwf	(??___fladd+4)^(0+128),w
 15998     0594  1D03               	skipz
 15999     0595  2D98               	goto	u4835
 16000     0596  301A               	movlw	26
 16001     0597  0238               	subwf	(??___fladd+2)^(0+128),w
 16002     0598                     u4835:
 16003     0598  1C03               	skipc
 16004     0599  2D9B               	goto	u4831
 16005     059A  2D9C               	goto	u4830
 16006     059B                     u4831:
 16007     059B  2DD2               	goto	l4603
 16008     059C                     u4830:
 16009     059C                     l4589:
 16010     059C  0021               	movlb	1	; select bank1
 16011     059D  0831               	movf	(___fladd@b+3)^(0+128),w
 16012     059E  0430               	iorwf	(___fladd@b+2)^(0+128),w
 16013     059F  042F               	iorwf	(___fladd@b+1)^(0+128),w
 16014     05A0  042E               	iorwf	___fladd@b^(0+128),w
 16015     05A1  1D03               	skipz
 16016     05A2  2DA4               	goto	u4841
 16017     05A3  2DA6               	goto	u4840
 16018     05A4                     u4841:
 16019     05A4  3001               	movlw	1
 16020     05A5  2DA7               	goto	u4850
 16021     05A6                     u4840:
 16022     05A6  3000               	movlw	0
 16023     05A7                     u4850:
 16024     05A7  00C1               	movwf	___fladd@grs^(0+128)
 16025     05A8  3000               	movlw	0
 16026     05A9  00B1               	movwf	(___fladd@b+3)^(0+128)
 16027     05AA  3000               	movlw	0
 16028     05AB  00B0               	movwf	(___fladd@b+2)^(0+128)
 16029     05AC  3000               	movlw	0
 16030     05AD  00AF               	movwf	(___fladd@b+1)^(0+128)
 16031     05AE  3000               	movlw	0
 16032     05AF  00AE               	movwf	___fladd@b^(0+128)
 16033     05B0  083F               	movf	___fladd@aexp^(0+128),w
 16034     05B1  00C0               	movwf	___fladd@bexp^(0+128)
 16035     05B2  2DD9               	goto	l1470
 16036     05B3                     l1472:
 16037     05B3  1C41               	btfss	___fladd@grs^(0+128),0
 16038     05B4  2DB6               	goto	u4861
 16039     05B5  2DB7               	goto	u4860
 16040     05B6                     u4861:
 16041     05B6  2DC1               	goto	l4593
 16042     05B7                     u4860:
 16043     05B7                     l4591:
 16044     05B7  0841               	movf	___fladd@grs^(0+128),w
 16045     05B8  00B6               	movwf	??___fladd^(0+128)
 16046     05B9  3001               	movlw	1
 16047     05BA                     u4875:
 16048     05BA  36B6               	lsrf	??___fladd^(0+128),f
 16049     05BB  0B89               	decfsz	9,f
 16050     05BC  2DBA               	goto	u4875
 16051     05BD  0836               	movf	??___fladd^(0+128),w
 16052     05BE  3801               	iorlw	1
 16053     05BF  00C1               	movwf	___fladd@grs^(0+128)
 16054     05C0  2DC3               	goto	l4595
 16055     05C1                     l4593:
 16056     05C1  1003               	clrc
 16057     05C2  0CC1               	rrf	___fladd@grs^(0+128),f
 16058     05C3                     l4595:
 16059     05C3  1C2E               	btfss	___fladd@b^(0+128),0
 16060     05C4  2DC6               	goto	u4881
 16061     05C5  2DC7               	goto	u4880
 16062     05C6                     u4881:
 16063     05C6  2DC8               	goto	l4599
 16064     05C7                     u4880:
 16065     05C7                     l4597:
 16066     05C7  17C1               	bsf	___fladd@grs^(0+128),7
 16067     05C8                     l4599:
 16068     05C8  3001               	movlw	1
 16069     05C9  00B6               	movwf	??___fladd^(0+128)
 16070     05CA                     u4895:
 16071     05CA  37B1               	asrf	(___fladd@b+3)^(0+128),f
 16072     05CB  0CB0               	rrf	(___fladd@b+2)^(0+128),f
 16073     05CC  0CAF               	rrf	(___fladd@b+1)^(0+128),f
 16074     05CD  0CAE               	rrf	___fladd@b^(0+128),f
 16075     05CE  0BB6               	decfsz	(??___fladd^(0+128))& (0+127),f
 16076     05CF  2DCA               	goto	u4895
 16077     05D0                     l4601:
 16078     05D0  3001               	movlw	1
 16079     05D1  07C0               	addwf	___fladd@bexp^(0+128),f
 16080     05D2                     l4603:
 16081     05D2  0021               	movlb	1	; select bank1
 16082     05D3  083F               	movf	___fladd@aexp^(0+128),w
 16083     05D4  0240               	subwf	___fladd@bexp^(0+128),w
 16084     05D5  1C03               	skipc
 16085     05D6  2DD8               	goto	u4901
 16086     05D7  2DD9               	goto	u4900
 16087     05D8                     u4901:
 16088     05D8  2DB3               	goto	l1472
 16089     05D9                     u4900:
 16090     05D9                     l1470:
 16091     05D9  1B3E               	btfsc	___fladd@signs^(0+128),6
 16092     05DA  2DDC               	goto	u4911
 16093     05DB  2DDD               	goto	u4910
 16094     05DC                     u4911:
 16095     05DC  2E17               	goto	l4629
 16096     05DD                     u4910:
 16097     05DD                     l4605:
 16098     05DD  0840               	movf	___fladd@bexp^(0+128),w
 16099     05DE  1D03               	btfss	3,2
 16100     05DF  2DE1               	goto	u4921
 16101     05E0  2DE2               	goto	u4920
 16102     05E1                     u4921:
 16103     05E1  2DEB               	goto	l4611
 16104     05E2                     u4920:
 16105     05E2                     l4607:
 16106     05E2  3000               	movlw	0
 16107     05E3  00B1               	movwf	(?___fladd+3)^(0+128)
 16108     05E4  3000               	movlw	0
 16109     05E5  00B0               	movwf	(?___fladd+2)^(0+128)
 16110     05E6  3000               	movlw	0
 16111     05E7  00AF               	movwf	(?___fladd+1)^(0+128)
 16112     05E8  3000               	movlw	0
 16113     05E9  00AE               	movwf	?___fladd^(0+128)
 16114     05EA  2F0F               	goto	l1479
 16115     05EB                     l4611:
 16116     05EB  0832               	movf	___fladd@a^(0+128),w
 16117     05EC  07AE               	addwf	___fladd@b^(0+128),f
 16118     05ED  0833               	movf	(___fladd@a+1)^(0+128),w
 16119     05EE  3DAF               	addwfc	(___fladd@b+1)^(0+128),f
 16120     05EF  0834               	movf	(___fladd@a+2)^(0+128),w
 16121     05F0  3DB0               	addwfc	(___fladd@b+2)^(0+128),f
 16122     05F1  0835               	movf	(___fladd@a+3)^(0+128),w
 16123     05F2  3DB1               	addwfc	(___fladd@b+3)^(0+128),f
 16124     05F3                     l4613:
 16125     05F3  1C31               	btfss	(___fladd@b+3)^(0+128),0
 16126     05F4  2DF6               	goto	u4931
 16127     05F5  2DF7               	goto	u4930
 16128     05F6                     u4931:
 16129     05F6  2EA1               	goto	l4665
 16130     05F7                     u4930:
 16131     05F7                     l4615:
 16132     05F7  1C41               	btfss	___fladd@grs^(0+128),0
 16133     05F8  2DFA               	goto	u4941
 16134     05F9  2DFB               	goto	u4940
 16135     05FA                     u4941:
 16136     05FA  2E05               	goto	l4619
 16137     05FB                     u4940:
 16138     05FB                     l4617:
 16139     05FB  0841               	movf	___fladd@grs^(0+128),w
 16140     05FC  00B6               	movwf	??___fladd^(0+128)
 16141     05FD  3001               	movlw	1
 16142     05FE                     u4955:
 16143     05FE  36B6               	lsrf	??___fladd^(0+128),f
 16144     05FF  0B89               	decfsz	9,f
 16145     0600  2DFE               	goto	u4955
 16146     0601  0836               	movf	??___fladd^(0+128),w
 16147     0602  3801               	iorlw	1
 16148     0603  00C1               	movwf	___fladd@grs^(0+128)
 16149     0604  2E07               	goto	l4621
 16150     0605                     l4619:
 16151     0605  1003               	clrc
 16152     0606  0CC1               	rrf	___fladd@grs^(0+128),f
 16153     0607                     l4621:
 16154     0607  1C2E               	btfss	___fladd@b^(0+128),0
 16155     0608  2E0A               	goto	u4961
 16156     0609  2E0B               	goto	u4960
 16157     060A                     u4961:
 16158     060A  2E0C               	goto	l4625
 16159     060B                     u4960:
 16160     060B                     l4623:
 16161     060B  17C1               	bsf	___fladd@grs^(0+128),7
 16162     060C                     l4625:
 16163     060C  3001               	movlw	1
 16164     060D  00B6               	movwf	??___fladd^(0+128)
 16165     060E                     u4975:
 16166     060E  37B1               	asrf	(___fladd@b+3)^(0+128),f
 16167     060F  0CB0               	rrf	(___fladd@b+2)^(0+128),f
 16168     0610  0CAF               	rrf	(___fladd@b+1)^(0+128),f
 16169     0611  0CAE               	rrf	___fladd@b^(0+128),f
 16170     0612  0BB6               	decfsz	(??___fladd^(0+128))& (0+127),f
 16171     0613  2E0E               	goto	u4975
 16172     0614                     l4627:
 16173     0614  3001               	movlw	1
 16174     0615  07C0               	addwf	___fladd@bexp^(0+128),f
 16175     0616  2EA1               	goto	l4665
 16176     0617                     l4629:
 16177     0617  0831               	movf	(___fladd@b+3)^(0+128),w
 16178     0618  3A80               	xorlw	128
 16179     0619  00B6               	movwf	??___fladd^(0+128)
 16180     061A  0835               	movf	(___fladd@a+3)^(0+128),w
 16181     061B  3A80               	xorlw	128
 16182     061C  0236               	subwf	??___fladd^(0+128),w
 16183     061D  1D03               	skipz
 16184     061E  2E29               	goto	u4983
 16185     061F  0834               	movf	(___fladd@a+2)^(0+128),w
 16186     0620  0230               	subwf	(___fladd@b+2)^(0+128),w
 16187     0621  1D03               	skipz
 16188     0622  2E29               	goto	u4983
 16189     0623  0833               	movf	(___fladd@a+1)^(0+128),w
 16190     0624  022F               	subwf	(___fladd@b+1)^(0+128),w
 16191     0625  1D03               	skipz
 16192     0626  2E29               	goto	u4983
 16193     0627  0832               	movf	___fladd@a^(0+128),w
 16194     0628  022E               	subwf	___fladd@b^(0+128),w
 16195     0629                     u4983:
 16196     0629  1803               	skipnc
 16197     062A  2E2C               	goto	u4981
 16198     062B  2E2D               	goto	u4980
 16199     062C                     u4981:
 16200     062C  2E62               	goto	l4641
 16201     062D                     u4980:
 16202     062D                     l4631:
 16203     062D  30FF               	movlw	255
 16204     062E  00B6               	movwf	??___fladd^(0+128)
 16205     062F  30FF               	movlw	255
 16206     0630  00B7               	movwf	(??___fladd^(0+128)+1)
 16207     0631  30FF               	movlw	255
 16208     0632  00B8               	movwf	(??___fladd^(0+128)+2)
 16209     0633  30FF               	movlw	255
 16210     0634  00B9               	movwf	(??___fladd^(0+128)+3)
 16211     0635  082E               	movf	___fladd@b^(0+128),w
 16212     0636  0232               	subwf	___fladd@a^(0+128),w
 16213     0637  00BA               	movwf	(??___fladd+4)^(0+128)
 16214     0638  082F               	movf	(___fladd@b+1)^(0+128),w
 16215     0639  3B33               	subwfb	(___fladd@a+1)^(0+128),w
 16216     063A  00BB               	movwf	((??___fladd+4)^(0+128)+1)
 16217     063B  0830               	movf	(___fladd@b+2)^(0+128),w
 16218     063C  3B34               	subwfb	(___fladd@a+2)^(0+128),w
 16219     063D  00BC               	movwf	((??___fladd+4)^(0+128)+2)
 16220     063E  0831               	movf	(___fladd@b+3)^(0+128),w
 16221     063F  3B35               	subwfb	(___fladd@a+3)^(0+128),w
 16222     0640  00BD               	movwf	((??___fladd+4)^(0+128)+3)
 16223     0641  083A               	movf	(??___fladd+4)^(0+128),w
 16224     0642  07B6               	addwf	??___fladd^(0+128),f
 16225     0643  083B               	movf	(??___fladd+5)^(0+128),w
 16226     0644  3DB7               	addwfc	(??___fladd^(0+128)+1),f
 16227     0645  083C               	movf	(??___fladd+6)^(0+128),w
 16228     0646  3DB8               	addwfc	(??___fladd^(0+128)+2),f
 16229     0647  083D               	movf	(??___fladd+7)^(0+128),w
 16230     0648  3DB9               	addwfc	(??___fladd^(0+128)+3),f
 16231     0649  0839               	movf	(??___fladd+3)^(0+128),w
 16232     064A  00B1               	movwf	(___fladd@b+3)^(0+128)
 16233     064B  0838               	movf	(??___fladd+2)^(0+128),w
 16234     064C  00B0               	movwf	(___fladd@b+2)^(0+128)
 16235     064D  0837               	movf	(??___fladd+1)^(0+128),w
 16236     064E  00AF               	movwf	(___fladd@b+1)^(0+128)
 16237     064F  0836               	movf	??___fladd^(0+128),w
 16238     0650  00AE               	movwf	___fladd@b^(0+128)
 16239     0651                     l4633:
 16240     0651  3080               	movlw	128
 16241     0652  06BE               	xorwf	___fladd@signs^(0+128),f
 16242     0653                     l4635:
 16243     0653  0341               	decf	___fladd@grs^(0+128),w
 16244     0654  3AFF               	xorlw	255
 16245     0655  00C1               	movwf	___fladd@grs^(0+128)
 16246     0656                     l4637:
 16247     0656  0841               	movf	___fladd@grs^(0+128),w
 16248     0657  1D03               	btfss	3,2
 16249     0658  2E5A               	goto	u4991
 16250     0659  2E5B               	goto	u4990
 16251     065A                     u4991:
 16252     065A  2E6A               	goto	l1487
 16253     065B                     u4990:
 16254     065B                     l4639:
 16255     065B  3001               	movlw	1
 16256     065C  07AE               	addwf	___fladd@b^(0+128),f
 16257     065D  3000               	movlw	0
 16258     065E  3DAF               	addwfc	(___fladd@b+1)^(0+128),f
 16259     065F  3DB0               	addwfc	(___fladd@b+2)^(0+128),f
 16260     0660  3DB1               	addwfc	(___fladd@b+3)^(0+128),f
 16261     0661  2E6A               	goto	l1487
 16262     0662                     l4641:
 16263     0662  0832               	movf	___fladd@a^(0+128),w
 16264     0663  02AE               	subwf	___fladd@b^(0+128),f
 16265     0664  0833               	movf	(___fladd@a+1)^(0+128),w
 16266     0665  3BAF               	subwfb	(___fladd@b+1)^(0+128),f
 16267     0666  0834               	movf	(___fladd@a+2)^(0+128),w
 16268     0667  3BB0               	subwfb	(___fladd@b+2)^(0+128),f
 16269     0668  0835               	movf	(___fladd@a+3)^(0+128),w
 16270     0669  3BB1               	subwfb	(___fladd@b+3)^(0+128),f
 16271     066A                     l1487:
 16272     066A  0831               	movf	(___fladd@b+3)^(0+128),w
 16273     066B  0430               	iorwf	(___fladd@b+2)^(0+128),w
 16274     066C  042F               	iorwf	(___fladd@b+1)^(0+128),w
 16275     066D  042E               	iorwf	___fladd@b^(0+128),w
 16276     066E  1D03               	skipz
 16277     066F  2E71               	goto	u5001
 16278     0670  2E72               	goto	u5000
 16279     0671                     u5001:
 16280     0671  2E9D               	goto	l4663
 16281     0672                     u5000:
 16282     0672                     l4643:
 16283     0672  0841               	movf	___fladd@grs^(0+128),w
 16284     0673  1D03               	btfss	3,2
 16285     0674  2E76               	goto	u5011
 16286     0675  2E77               	goto	u5010
 16287     0676                     u5011:
 16288     0676  2E9D               	goto	l4663
 16289     0677                     u5010:
 16290     0677                     l4645:
 16291     0677  3000               	movlw	0
 16292     0678  00B1               	movwf	(?___fladd+3)^(0+128)
 16293     0679  3000               	movlw	0
 16294     067A  00B0               	movwf	(?___fladd+2)^(0+128)
 16295     067B  3000               	movlw	0
 16296     067C  00AF               	movwf	(?___fladd+1)^(0+128)
 16297     067D  3000               	movlw	0
 16298     067E  00AE               	movwf	?___fladd^(0+128)
 16299     067F  2F0F               	goto	l1479
 16300     0680                     l4649:
 16301     0680  3001               	movlw	1
 16302     0681                     u5025:
 16303     0681  35AE               	lslf	___fladd@b^(0+128),f
 16304     0682  0DAF               	rlf	(___fladd@b+1)^(0+128),f
 16305     0683  0DB0               	rlf	(___fladd@b+2)^(0+128),f
 16306     0684  0DB1               	rlf	(___fladd@b+3)^(0+128),f
 16307     0685  0B89               	decfsz	9,f
 16308     0686  2E81               	goto	u5025
 16309     0687                     l4651:
 16310     0687  1FC1               	btfss	___fladd@grs^(0+128),7
 16311     0688  2E8A               	goto	u5031
 16312     0689  2E8B               	goto	u5030
 16313     068A                     u5031:
 16314     068A  2E8C               	goto	l1491
 16315     068B                     u5030:
 16316     068B                     l4653:
 16317     068B  142E               	bsf	___fladd@b^(0+128),0
 16318     068C                     l1491:
 16319     068C  1C41               	btfss	___fladd@grs^(0+128),0
 16320     068D  2E8F               	goto	u5041
 16321     068E  2E90               	goto	u5040
 16322     068F                     u5041:
 16323     068F  2E94               	goto	l4657
 16324     0690                     u5040:
 16325     0690                     l4655:
 16326     0690  1403               	setc
 16327     0691  0D41               	rlf	___fladd@grs^(0+128),w
 16328     0692  00C1               	movwf	___fladd@grs^(0+128)
 16329     0693  2E96               	goto	l4659
 16330     0694                     l4657:
 16331     0694  1003               	clrc
 16332     0695  0DC1               	rlf	___fladd@grs^(0+128),f
 16333     0696                     l4659:
 16334     0696  0840               	movf	___fladd@bexp^(0+128),w
 16335     0697  1903               	btfsc	3,2
 16336     0698  2E9A               	goto	u5051
 16337     0699  2E9B               	goto	u5050
 16338     069A                     u5051:
 16339     069A  2E9D               	goto	l4663
 16340     069B                     u5050:
 16341     069B                     l4661:
 16342     069B  3001               	movlw	1
 16343     069C  02C0               	subwf	___fladd@bexp^(0+128),f
 16344     069D                     l4663:
 16345     069D  1FB0               	btfss	(___fladd@b+2)^(0+128),7
 16346     069E  2EA0               	goto	u5061
 16347     069F  2EA1               	goto	u5060
 16348     06A0                     u5061:
 16349     06A0  2E80               	goto	l4649
 16350     06A1                     u5060:
 16351     06A1                     l4665:
 16352     06A1  01BF               	clrf	___fladd@aexp^(0+128)
 16353     06A2                     l4667:
 16354     06A2  1FC1               	btfss	___fladd@grs^(0+128),7
 16355     06A3  2EA5               	goto	u5071
 16356     06A4  2EA6               	goto	u5070
 16357     06A5                     u5071:
 16358     06A5  2EB4               	goto	l4675
 16359     06A6                     u5070:
 16360     06A6                     l4669:
 16361     06A6  0841               	movf	___fladd@grs^(0+128),w
 16362     06A7  397F               	andlw	127
 16363     06A8  1903               	btfsc	3,2
 16364     06A9  2EAB               	goto	u5081
 16365     06AA  2EAC               	goto	u5080
 16366     06AB                     u5081:
 16367     06AB  2EAF               	goto	l1497
 16368     06AC                     u5080:
 16369     06AC                     l4671:
 16370     06AC  3001               	movlw	1
 16371     06AD  00BF               	movwf	___fladd@aexp^(0+128)
 16372     06AE  2EB4               	goto	l4675
 16373     06AF                     l1497:
 16374     06AF  1C2E               	btfss	___fladd@b^(0+128),0
 16375     06B0  2EB2               	goto	u5091
 16376     06B1  2EB3               	goto	u5090
 16377     06B2                     u5091:
 16378     06B2  2EB4               	goto	l4675
 16379     06B3                     u5090:
 16380     06B3  2EAC               	goto	l4671
 16381     06B4                     l4675:
 16382     06B4  083F               	movf	___fladd@aexp^(0+128),w
 16383     06B5  1903               	btfsc	3,2
 16384     06B6  2EB8               	goto	u5101
 16385     06B7  2EB9               	goto	u5100
 16386     06B8                     u5101:
 16387     06B8  2EE2               	goto	l1500
 16388     06B9                     u5100:
 16389     06B9                     l4677:
 16390     06B9  3001               	movlw	1
 16391     06BA  07AE               	addwf	___fladd@b^(0+128),f
 16392     06BB  3000               	movlw	0
 16393     06BC  3DAF               	addwfc	(___fladd@b+1)^(0+128),f
 16394     06BD  3DB0               	addwfc	(___fladd@b+2)^(0+128),f
 16395     06BE  3DB1               	addwfc	(___fladd@b+3)^(0+128),f
 16396     06BF                     l4679:
 16397     06BF  1C31               	btfss	(___fladd@b+3)^(0+128),0
 16398     06C0  2EC2               	goto	u5111
 16399     06C1  2EC3               	goto	u5110
 16400     06C2                     u5111:
 16401     06C2  2EE2               	goto	l1500
 16402     06C3                     u5110:
 16403     06C3                     l4681:
 16404     06C3  082E               	movf	___fladd@b^(0+128),w
 16405     06C4  00B6               	movwf	??___fladd^(0+128)
 16406     06C5  082F               	movf	(___fladd@b+1)^(0+128),w
 16407     06C6  00B7               	movwf	(??___fladd^(0+128)+1)
 16408     06C7  0830               	movf	(___fladd@b+2)^(0+128),w
 16409     06C8  00B8               	movwf	(??___fladd^(0+128)+2)
 16410     06C9  0831               	movf	(___fladd@b+3)^(0+128),w
 16411     06CA  00B9               	movwf	(??___fladd^(0+128)+3)
 16412     06CB  3001               	movlw	1
 16413     06CC  00BA               	movwf	(??___fladd+4)^(0+128)
 16414     06CD                     u5125:
 16415     06CD  37B9               	asrf	(??___fladd^(0+128)+3),f
 16416     06CE  0CB8               	rrf	(??___fladd^(0+128)+2),f
 16417     06CF  0CB7               	rrf	(??___fladd^(0+128)+1),f
 16418     06D0  0CB6               	rrf	??___fladd^(0+128),f
 16419     06D1                     u5120:
 16420     06D1  0BBA               	decfsz	(??___fladd+4)^(0+128),f
 16421     06D2  2ECD               	goto	u5125
 16422     06D3  0839               	movf	(??___fladd+3)^(0+128),w
 16423     06D4  00B1               	movwf	(___fladd@b+3)^(0+128)
 16424     06D5  0838               	movf	(??___fladd+2)^(0+128),w
 16425     06D6  00B0               	movwf	(___fladd@b+2)^(0+128)
 16426     06D7  0837               	movf	(??___fladd+1)^(0+128),w
 16427     06D8  00AF               	movwf	(___fladd@b+1)^(0+128)
 16428     06D9  0836               	movf	??___fladd^(0+128),w
 16429     06DA  00AE               	movwf	___fladd@b^(0+128)
 16430     06DB  0A40               	incf	___fladd@bexp^(0+128),w
 16431     06DC  1903               	btfsc	3,2
 16432     06DD  2EDF               	goto	u5131
 16433     06DE  2EE0               	goto	u5130
 16434     06DF                     u5131:
 16435     06DF  2EE2               	goto	l1500
 16436     06E0                     u5130:
 16437     06E0                     l4683:
 16438     06E0  3001               	movlw	1
 16439     06E1  07C0               	addwf	___fladd@bexp^(0+128),f
 16440     06E2                     l1500:
 16441     06E2  0A40               	incf	___fladd@bexp^(0+128),w
 16442     06E3  1903               	btfsc	3,2
 16443     06E4  2EE6               	goto	u5141
 16444     06E5  2EE7               	goto	u5140
 16445     06E6                     u5141:
 16446     06E6  2EEC               	goto	l4687
 16447     06E7                     u5140:
 16448     06E7                     l4685:
 16449     06E7  0840               	movf	___fladd@bexp^(0+128),w
 16450     06E8  1D03               	btfss	3,2
 16451     06E9  2EEB               	goto	u5151
 16452     06EA  2EEC               	goto	u5150
 16453     06EB                     u5151:
 16454     06EB  2EFA               	goto	l4693
 16455     06EC                     u5150:
 16456     06EC                     l4687:
 16457     06EC  3000               	movlw	0
 16458     06ED  00B1               	movwf	(___fladd@b+3)^(0+128)
 16459     06EE  3000               	movlw	0
 16460     06EF  00B0               	movwf	(___fladd@b+2)^(0+128)
 16461     06F0  3000               	movlw	0
 16462     06F1  00AF               	movwf	(___fladd@b+1)^(0+128)
 16463     06F2  3000               	movlw	0
 16464     06F3  00AE               	movwf	___fladd@b^(0+128)
 16465     06F4                     l4689:
 16466     06F4  0840               	movf	___fladd@bexp^(0+128),w
 16467     06F5  1D03               	btfss	3,2
 16468     06F6  2EF8               	goto	u5161
 16469     06F7  2EF9               	goto	u5160
 16470     06F8                     u5161:
 16471     06F8  2EFA               	goto	l4693
 16472     06F9                     u5160:
 16473     06F9                     l4691:
 16474     06F9  01BE               	clrf	___fladd@signs^(0+128)
 16475     06FA                     l4693:
 16476     06FA  1C40               	btfss	___fladd@bexp^(0+128),0
 16477     06FB  2EFD               	goto	u5171
 16478     06FC  2EFE               	goto	u5170
 16479     06FD                     u5171:
 16480     06FD  2F00               	goto	l4697
 16481     06FE                     u5170:
 16482     06FE                     l4695:
 16483     06FE  17B0               	bsf	(___fladd@b^(0+128)+2),7
 16484     06FF  2F02               	goto	l1508
 16485     0700                     l4697:
 16486     0700  307F               	movlw	127
 16487     0701  05B0               	andwf	(___fladd@b^(0+128)+2),f
 16488     0702                     l1508:
 16489     0702  0840               	movf	___fladd@bexp^(0+128),w
 16490     0703  00B6               	movwf	??___fladd^(0+128)
 16491     0704  3001               	movlw	1
 16492     0705                     u5185:
 16493     0705  36B6               	lsrf	??___fladd^(0+128),f
 16494     0706  0B89               	decfsz	9,f
 16495     0707  2F05               	goto	u5185
 16496     0708  0836               	movf	??___fladd^(0+128),w
 16497     0709  00B1               	movwf	(___fladd@b^(0+128)+3)
 16498     070A                     l4699:
 16499     070A  1FBE               	btfss	___fladd@signs^(0+128),7
 16500     070B  2F0D               	goto	u5191
 16501     070C  2F0E               	goto	u5190
 16502     070D                     u5191:
 16503     070D  2F0F               	goto	l1509
 16504     070E                     u5190:
 16505     070E                     l4701:
 16506     070E  17B1               	bsf	(___fladd@b^(0+128)+3),7
 16507     070F                     l1509:
 16508     070F                     l1479:
 16509     070F  0008               	return
 16510     0710                     __end_of___fladd:
 16511                           
 16512                           	psect	text56
 16513     1B8A                     __ptext56:	
 16514 ;; *************** function _getHoogtesensor *****************
 16515 ;; Defined at:
 16516 ;;		line 33 in file "adcMeasurements.c"
 16517 ;; Parameters:    Size  Location     Type
 16518 ;;		None
 16519 ;; Auto vars:     Size  Location     Type
 16520 ;;		None
 16521 ;; Return value:  Size  Location     Type
 16522 ;;                  2    0[BANK1 ] unsigned short 
 16523 ;; Registers used:
 16524 ;;		wreg
 16525 ;; Tracked objects:
 16526 ;;		On entry : 0/0
 16527 ;;		On exit  : 0/0
 16528 ;;		Unchanged: 0/0
 16529 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 16530 ;;      Params:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0
 16531 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16532 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16533 ;;      Totals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0
 16534 ;;Total ram usage:        2 bytes
 16535 ;; Hardware stack levels used: 1
 16536 ;; Hardware stack levels required when called: 5
 16537 ;; This function calls:
 16538 ;;		Nothing
 16539 ;; This function is called by:
 16540 ;;		_printLogs
 16541 ;;		_position_led_strip
 16542 ;; This function uses a non-reentrant model
 16543 ;;
 16544                           
 16545     1B8A                     _getHoogtesensor:	
 16546                           ;psect for function _getHoogtesensor
 16547                           
 16548     1B8A                     l4971:	
 16549                           ;incstack = 0
 16550                           ; Regs used in _getHoogtesensor: [wreg]
 16551                           
 16552                           
 16553                           ;adcMeasurements.c: 34:     return ADC_hoogtesensor;
 16554     1B8A  0020               	movlb	0	; select bank0
 16555     1B8B  085A               	movf	_ADC_hoogtesensor+1,w	;volatile
 16556     1B8C  0021               	movlb	1	; select bank1
 16557     1B8D  00A1               	movwf	(?_getHoogtesensor+1)^(0+128)
 16558     1B8E  0020               	movlb	0	; select bank0
 16559     1B8F  0859               	movf	_ADC_hoogtesensor,w	;volatile
 16560     1B90  0021               	movlb	1	; select bank1
 16561     1B91  00A0               	movwf	?_getHoogtesensor^(0+128)
 16562     1B92                     l820:
 16563     1B92  0008               	return
 16564     1B93                     __end_of_getHoogtesensor:
 16565                           
 16566                           	psect	text57
 16567     1B81                     __ptext57:	
 16568 ;; *************** function _TMR4_PeriodMatchCallbackRegister *****************
 16569 ;; Defined at:
 16570 ;;		line 124 in file "mcc_generated_files/timer/src/tmr4.c"
 16571 ;; Parameters:    Size  Location     Type
 16572 ;;  CallbackHand    2    0[BANK1 ] PTR FTN()void 
 16573 ;;		 -> controller(1), 
 16574 ;; Auto vars:     Size  Location     Type
 16575 ;;		None
 16576 ;; Return value:  Size  Location     Type
 16577 ;;                  1    wreg      void 
 16578 ;; Registers used:
 16579 ;;		wreg
 16580 ;; Tracked objects:
 16581 ;;		On entry : 0/0
 16582 ;;		On exit  : 0/0
 16583 ;;		Unchanged: 0/0
 16584 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 16585 ;;      Params:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0
 16586 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16587 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16588 ;;      Totals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0
 16589 ;;Total ram usage:        2 bytes
 16590 ;; Hardware stack levels used: 1
 16591 ;; Hardware stack levels required when called: 5
 16592 ;; This function calls:
 16593 ;;		Nothing
 16594 ;; This function is called by:
 16595 ;;		_main
 16596 ;; This function uses a non-reentrant model
 16597 ;;
 16598                           
 16599     1B81                     _TMR4_PeriodMatchCallbackRegister:	
 16600                           ;psect for function _TMR4_PeriodMatchCallbackRegister
 16601                           
 16602     1B81                     l6069:	
 16603                           ;incstack = 0
 16604                           ; Regs used in _TMR4_PeriodMatchCallbackRegister: [wreg]
 16605                           
 16606                           
 16607                           ;mcc_generated_files/timer/src/tmr4.c: 124: void TMR4_PeriodMatchCallbackRegister(void (
      +                          * CallbackHandler)(void));mcc_generated_files/timer/src/tmr4.c: 125: {;mcc_generated_fil
      +                          es/timer/src/tmr4.c: 126:    TMR4_PeriodMatchCallback = CallbackHandler;
 16608     1B81  0021               	movlb	1	; select bank1
 16609     1B82  0821               	movf	(TMR4_PeriodMatchCallbackRegister@CallbackHandler+1)^(0+128),w
 16610     1B83  0022               	movlb	2	; select bank2
 16611     1B84  00E1               	movwf	(_TMR4_PeriodMatchCallback+1)^(0+256)
 16612     1B85  0021               	movlb	1	; select bank1
 16613     1B86  0820               	movf	TMR4_PeriodMatchCallbackRegister@CallbackHandler^(0+128),w
 16614     1B87  0022               	movlb	2	; select bank2
 16615     1B88  00E0               	movwf	_TMR4_PeriodMatchCallback^(0+256)
 16616     1B89                     l476:
 16617     1B89  0008               	return
 16618     1B8A                     __end_of_TMR4_PeriodMatchCallbackRegister:
 16619                           
 16620                           	psect	text58
 16621     1DB9                     __ptext58:	
 16622 ;; *************** function _SYSTEM_Initialize *****************
 16623 ;; Defined at:
 16624 ;;		line 39 in file "mcc_generated_files/system/src/system.c"
 16625 ;; Parameters:    Size  Location     Type
 16626 ;;		None
 16627 ;; Auto vars:     Size  Location     Type
 16628 ;;		None
 16629 ;; Return value:  Size  Location     Type
 16630 ;;                  1    wreg      void 
 16631 ;; Registers used:
 16632 ;;		wreg, status,2, status,0, pclath, cstack
 16633 ;; Tracked objects:
 16634 ;;		On entry : 0/0
 16635 ;;		On exit  : 0/0
 16636 ;;		Unchanged: 0/0
 16637 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 16638 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16639 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16640 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16641 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16642 ;;Total ram usage:        0 bytes
 16643 ;; Hardware stack levels used: 1
 16644 ;; Hardware stack levels required when called: 7
 16645 ;; This function calls:
 16646 ;;		_ADC_Initialize
 16647 ;;		_CLOCK_Initialize
 16648 ;;		_EUSART_Initialize
 16649 ;;		_INTERRUPT_Initialize
 16650 ;;		_PIN_MANAGER_Initialize
 16651 ;;		_SPI1_Initialize
 16652 ;;		_TMR2_Initialize
 16653 ;;		_TMR4_Initialize
 16654 ;;		_TMR6_Initialize
 16655 ;;		_pwm_fan_Initialize
 16656 ;; This function is called by:
 16657 ;;		_main
 16658 ;; This function uses a non-reentrant model
 16659 ;;
 16660                           
 16661     1DB9                     _SYSTEM_Initialize:	
 16662                           ;psect for function _SYSTEM_Initialize
 16663                           
 16664     1DB9                     l6053:	
 16665                           ;incstack = 0
 16666                           ; Regs used in _SYSTEM_Initialize: [wreg+status,2+status,0+pclath+cstack]
 16667                           
 16668                           
 16669                           ;mcc_generated_files/system/src/system.c: 41:     CLOCK_Initialize();
 16670     1DB9  319B  236F  319D   	fcall	_CLOCK_Initialize
 16671                           
 16672                           ;mcc_generated_files/system/src/system.c: 42:     PIN_MANAGER_Initialize();
 16673     1DBC  319F  27BC  319D   	fcall	_PIN_MANAGER_Initialize
 16674     1DBF                     l6055:
 16675                           
 16676                           ;mcc_generated_files/system/src/system.c: 43:     TMR2_Initialize();
 16677     1DBF  319C  24A9  319D   	fcall	_TMR2_Initialize
 16678     1DC2                     l6057:
 16679                           
 16680                           ;mcc_generated_files/system/src/system.c: 44:     TMR4_Initialize();
 16681     1DC2  319C  24BA  319D   	fcall	_TMR4_Initialize
 16682     1DC5                     l6059:
 16683                           
 16684                           ;mcc_generated_files/system/src/system.c: 45:     TMR6_Initialize();
 16685     1DC5  319C  248A  319D   	fcall	_TMR6_Initialize
 16686     1DC8                     l6061:
 16687                           
 16688                           ;mcc_generated_files/system/src/system.c: 46:     ADC_Initialize();
 16689     1DC8  319D  253D  319D   	fcall	_ADC_Initialize
 16690     1DCB                     l6063:
 16691                           
 16692                           ;mcc_generated_files/system/src/system.c: 47:     EUSART_Initialize();
 16693     1DCB  3187  27C9  319D   	fcall	_EUSART_Initialize
 16694     1DCE                     l6065:
 16695                           
 16696                           ;mcc_generated_files/system/src/system.c: 48:     pwm_fan_Initialize();
 16697     1DCE  319B  23FF  319D   	fcall	_pwm_fan_Initialize
 16698                           
 16699                           ;mcc_generated_files/system/src/system.c: 49:     SPI1_Initialize();
 16700     1DD1  319B  23C9  319D   	fcall	_SPI1_Initialize
 16701     1DD4                     l6067:
 16702                           
 16703                           ;mcc_generated_files/system/src/system.c: 50:     INTERRUPT_Initialize();
 16704     1DD4  319B  23F3  319D   	fcall	_INTERRUPT_Initialize
 16705     1DD7                     l361:
 16706     1DD7  0008               	return
 16707     1DD8                     __end_of_SYSTEM_Initialize:
 16708                           
 16709                           	psect	text59
 16710     1BFF                     __ptext59:	
 16711 ;; *************** function _pwm_fan_Initialize *****************
 16712 ;; Defined at:
 16713 ;;		line 45 in file "mcc_generated_files/pwm/src/pwm5.c"
 16714 ;; Parameters:    Size  Location     Type
 16715 ;;		None
 16716 ;; Auto vars:     Size  Location     Type
 16717 ;;		None
 16718 ;; Return value:  Size  Location     Type
 16719 ;;                  1    wreg      void 
 16720 ;; Registers used:
 16721 ;;		wreg, status,2, status,0
 16722 ;; Tracked objects:
 16723 ;;		On entry : 0/0
 16724 ;;		On exit  : 0/0
 16725 ;;		Unchanged: 0/0
 16726 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 16727 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16728 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16729 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16730 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16731 ;;Total ram usage:        0 bytes
 16732 ;; Hardware stack levels used: 1
 16733 ;; Hardware stack levels required when called: 5
 16734 ;; This function calls:
 16735 ;;		Nothing
 16736 ;; This function is called by:
 16737 ;;		_SYSTEM_Initialize
 16738 ;; This function uses a non-reentrant model
 16739 ;;
 16740                           
 16741     1BFF                     _pwm_fan_Initialize:	
 16742                           ;psect for function _pwm_fan_Initialize
 16743                           
 16744     1BFF                     l5713:	
 16745                           ;incstack = 0
 16746                           ; Regs used in _pwm_fan_Initialize: [wreg+status,2+status,0]
 16747                           
 16748                           
 16749                           ;mcc_generated_files/pwm/src/pwm5.c: 50:     PWM5CON = 0x80;
 16750     1BFF  3080               	movlw	128
 16751     1C00  002C               	movlb	12	; select bank12
 16752     1C01  0099               	movwf	25	;volatile
 16753                           
 16754                           ;mcc_generated_files/pwm/src/pwm5.c: 53:     PWM5DCH = 0x7F;
 16755     1C02  307F               	movlw	127
 16756     1C03  0098               	movwf	24	;volatile
 16757                           
 16758                           ;mcc_generated_files/pwm/src/pwm5.c: 56:     PWM5DCL = 0xC0;
 16759     1C04  30C0               	movlw	192
 16760     1C05  0097               	movwf	23	;volatile
 16761     1C06                     l5715:
 16762                           
 16763                           ;mcc_generated_files/pwm/src/pwm5.c: 60:     PWMTMRSbits.P5TSEL = 0x1;
 16764     1C06  081F               	movf	31,w	;volatile
 16765     1C07  39FC               	andlw	-4
 16766     1C08  3801               	iorlw	1
 16767     1C09  009F               	movwf	31	;volatile
 16768     1C0A                     l69:
 16769     1C0A  0008               	return
 16770     1C0B                     __end_of_pwm_fan_Initialize:
 16771                           
 16772                           	psect	text60
 16773     1C8A                     __ptext60:	
 16774 ;; *************** function _TMR6_Initialize *****************
 16775 ;; Defined at:
 16776 ;;		line 45 in file "mcc_generated_files/timer/src/tmr6.c"
 16777 ;; Parameters:    Size  Location     Type
 16778 ;;		None
 16779 ;; Auto vars:     Size  Location     Type
 16780 ;;		None
 16781 ;; Return value:  Size  Location     Type
 16782 ;;                  1    wreg      void 
 16783 ;; Registers used:
 16784 ;;		wreg, status,2
 16785 ;; Tracked objects:
 16786 ;;		On entry : 0/0
 16787 ;;		On exit  : 0/0
 16788 ;;		Unchanged: 0/0
 16789 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 16790 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16791 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16792 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16793 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16794 ;;Total ram usage:        0 bytes
 16795 ;; Hardware stack levels used: 1
 16796 ;; Hardware stack levels required when called: 5
 16797 ;; This function calls:
 16798 ;;		Nothing
 16799 ;; This function is called by:
 16800 ;;		_SYSTEM_Initialize
 16801 ;; This function uses a non-reentrant model
 16802 ;;
 16803                           
 16804     1C8A                     _TMR6_Initialize:	
 16805                           ;psect for function _TMR6_Initialize
 16806                           
 16807     1C8A                     l5805:	
 16808                           ;incstack = 0
 16809                           ; Regs used in _TMR6_Initialize: [wreg+status,2]
 16810                           
 16811                           
 16812                           ;mcc_generated_files/timer/src/tmr6.c: 48:     PR6 = 0xE;
 16813     1C8A  300E               	movlw	14
 16814     1C8B  0028               	movlb	8	; select bank8
 16815     1C8C  009D               	movwf	29	;volatile
 16816     1C8D                     l5807:
 16817                           
 16818                           ;mcc_generated_files/timer/src/tmr6.c: 49:     TMR6 = 0x0;
 16819     1C8D  019C               	clrf	28	;volatile
 16820     1C8E                     l5809:
 16821                           
 16822                           ;mcc_generated_files/timer/src/tmr6.c: 50:     TMR6_PeriodMatchCallback = TMR6_DefaultPe
      +                          riodMatchCallback;
 16823     1C8E  3003               	movlw	low _TMR6_DefaultPeriodMatchCallback
 16824     1C8F  0022               	movlb	2	; select bank2
 16825     1C90  00DE               	movwf	_TMR6_PeriodMatchCallback^(0+256)
 16826     1C91  3000               	movlw	high _TMR6_DefaultPeriodMatchCallback
 16827     1C92  00DF               	movwf	(_TMR6_PeriodMatchCallback^(0+256)+1)
 16828     1C93                     l5811:
 16829                           
 16830                           ;mcc_generated_files/timer/src/tmr6.c: 52:     PIR2bits.TMR6IF = 0;
 16831     1C93  0020               	movlb	0	; select bank0
 16832     1C94  1392               	bcf	18,7	;volatile
 16833     1C95                     l5813:
 16834                           
 16835                           ;mcc_generated_files/timer/src/tmr6.c: 53:     T6CON = (1 << 0x0)
 16836     1C95  301D               	movlw	29
 16837     1C96  0028               	movlb	8	; select bank8
 16838     1C97  009E               	movwf	30	;volatile
 16839     1C98                     l498:
 16840     1C98  0008               	return
 16841     1C99                     __end_of_TMR6_Initialize:
 16842                           
 16843                           	psect	text61
 16844     1CBA                     __ptext61:	
 16845 ;; *************** function _TMR4_Initialize *****************
 16846 ;; Defined at:
 16847 ;;		line 45 in file "mcc_generated_files/timer/src/tmr4.c"
 16848 ;; Parameters:    Size  Location     Type
 16849 ;;		None
 16850 ;; Auto vars:     Size  Location     Type
 16851 ;;		None
 16852 ;; Return value:  Size  Location     Type
 16853 ;;                  1    wreg      void 
 16854 ;; Registers used:
 16855 ;;		wreg, status,2
 16856 ;; Tracked objects:
 16857 ;;		On entry : 0/0
 16858 ;;		On exit  : 0/0
 16859 ;;		Unchanged: 0/0
 16860 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 16861 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16862 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16863 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16864 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16865 ;;Total ram usage:        0 bytes
 16866 ;; Hardware stack levels used: 1
 16867 ;; Hardware stack levels required when called: 5
 16868 ;; This function calls:
 16869 ;;		Nothing
 16870 ;; This function is called by:
 16871 ;;		_SYSTEM_Initialize
 16872 ;; This function uses a non-reentrant model
 16873 ;;
 16874                           
 16875     1CBA                     _TMR4_Initialize:	
 16876                           ;psect for function _TMR4_Initialize
 16877                           
 16878     1CBA                     l5793:	
 16879                           ;incstack = 0
 16880                           ; Regs used in _TMR4_Initialize: [wreg+status,2]
 16881                           
 16882                           
 16883                           ;mcc_generated_files/timer/src/tmr4.c: 48:     PR4 = 0xFF;
 16884     1CBA  30FF               	movlw	255
 16885     1CBB  0028               	movlb	8	; select bank8
 16886     1CBC  0096               	movwf	22	;volatile
 16887     1CBD                     l5795:
 16888                           
 16889                           ;mcc_generated_files/timer/src/tmr4.c: 49:     TMR4 = 0x0;
 16890     1CBD  0195               	clrf	21	;volatile
 16891     1CBE                     l5797:
 16892                           
 16893                           ;mcc_generated_files/timer/src/tmr4.c: 50:     TMR4_PeriodMatchCallback = TMR4_DefaultPe
      +                          riodMatchCallback;
 16894     1CBE  3002               	movlw	low _TMR4_DefaultPeriodMatchCallback
 16895     1CBF  0022               	movlb	2	; select bank2
 16896     1CC0  00E0               	movwf	_TMR4_PeriodMatchCallback^(0+256)
 16897     1CC1  3000               	movlw	high _TMR4_DefaultPeriodMatchCallback
 16898     1CC2  00E1               	movwf	(_TMR4_PeriodMatchCallback^(0+256)+1)
 16899     1CC3                     l5799:
 16900                           
 16901                           ;mcc_generated_files/timer/src/tmr4.c: 52:     PIR2bits.TMR4IF = 0;
 16902     1CC3  0020               	movlb	0	; select bank0
 16903     1CC4  1092               	bcf	18,1	;volatile
 16904     1CC5                     l5801:
 16905                           
 16906                           ;mcc_generated_files/timer/src/tmr4.c: 53:     PIE2bits.TMR4IE = 1;
 16907     1CC5  0021               	movlb	1	; select bank1
 16908     1CC6  1492               	bsf	18,1	;volatile
 16909     1CC7                     l5803:
 16910                           
 16911                           ;mcc_generated_files/timer/src/tmr4.c: 54:     T4CON = (2 << 0x0)
 16912     1CC7  3076               	movlw	118
 16913     1CC8  0028               	movlb	8	; select bank8
 16914     1CC9  0097               	movwf	23	;volatile
 16915     1CCA                     l439:
 16916     1CCA  0008               	return
 16917     1CCB                     __end_of_TMR4_Initialize:
 16918                           
 16919                           	psect	text62
 16920     1CA9                     __ptext62:	
 16921 ;; *************** function _TMR2_Initialize *****************
 16922 ;; Defined at:
 16923 ;;		line 45 in file "mcc_generated_files/timer/src/tmr2.c"
 16924 ;; Parameters:    Size  Location     Type
 16925 ;;		None
 16926 ;; Auto vars:     Size  Location     Type
 16927 ;;		None
 16928 ;; Return value:  Size  Location     Type
 16929 ;;                  1    wreg      void 
 16930 ;; Registers used:
 16931 ;;		wreg, status,2
 16932 ;; Tracked objects:
 16933 ;;		On entry : 0/0
 16934 ;;		On exit  : 0/0
 16935 ;;		Unchanged: 0/0
 16936 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 16937 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16938 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16939 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16940 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16941 ;;Total ram usage:        0 bytes
 16942 ;; Hardware stack levels used: 1
 16943 ;; Hardware stack levels required when called: 5
 16944 ;; This function calls:
 16945 ;;		Nothing
 16946 ;; This function is called by:
 16947 ;;		_SYSTEM_Initialize
 16948 ;; This function uses a non-reentrant model
 16949 ;;
 16950                           
 16951     1CA9                     _TMR2_Initialize:	
 16952                           ;psect for function _TMR2_Initialize
 16953                           
 16954     1CA9                     l5781:	
 16955                           ;incstack = 0
 16956                           ; Regs used in _TMR2_Initialize: [wreg+status,2]
 16957                           
 16958                           
 16959                           ;mcc_generated_files/timer/src/tmr2.c: 48:     PR2 = 0xFF;
 16960     1CA9  30FF               	movlw	255
 16961     1CAA  0020               	movlb	0	; select bank0
 16962     1CAB  009E               	movwf	30	;volatile
 16963     1CAC                     l5783:
 16964                           
 16965                           ;mcc_generated_files/timer/src/tmr2.c: 49:     TMR2 = 0x0;
 16966     1CAC  019D               	clrf	29	;volatile
 16967     1CAD                     l5785:
 16968                           
 16969                           ;mcc_generated_files/timer/src/tmr2.c: 50:     TMR2_PeriodMatchCallback = TMR2_DefaultPe
      +                          riodMatchCallback;
 16970     1CAD  3041               	movlw	low _TMR2_DefaultPeriodMatchCallback
 16971     1CAE  0022               	movlb	2	; select bank2
 16972     1CAF  00E2               	movwf	_TMR2_PeriodMatchCallback^(0+256)
 16973     1CB0  301B               	movlw	high _TMR2_DefaultPeriodMatchCallback
 16974     1CB1  00E3               	movwf	(_TMR2_PeriodMatchCallback^(0+256)+1)
 16975     1CB2                     l5787:
 16976                           
 16977                           ;mcc_generated_files/timer/src/tmr2.c: 52:     PIR1bits.TMR2IF = 0;
 16978     1CB2  0020               	movlb	0	; select bank0
 16979     1CB3  1091               	bcf	17,1	;volatile
 16980     1CB4                     l5789:
 16981                           
 16982                           ;mcc_generated_files/timer/src/tmr2.c: 53:     PIE1bits.TMR2IE = 1;
 16983     1CB4  0021               	movlb	1	; select bank1
 16984     1CB5  1491               	bsf	17,1	;volatile
 16985     1CB6                     l5791:
 16986                           
 16987                           ;mcc_generated_files/timer/src/tmr2.c: 54:     T2CON = (1 << 0x0)
 16988     1CB6  301D               	movlw	29
 16989     1CB7  0020               	movlb	0	; select bank0
 16990     1CB8  009F               	movwf	31	;volatile
 16991     1CB9                     l380:
 16992     1CB9  0008               	return
 16993     1CBA                     __end_of_TMR2_Initialize:
 16994                           
 16995                           	psect	text63
 16996     1BC9                     __ptext63:	
 16997 ;; *************** function _SPI1_Initialize *****************
 16998 ;; Defined at:
 16999 ;;		line 60 in file "mcc_generated_files/spi/src/mssp1.c"
 17000 ;; Parameters:    Size  Location     Type
 17001 ;;		None
 17002 ;; Auto vars:     Size  Location     Type
 17003 ;;		None
 17004 ;; Return value:  Size  Location     Type
 17005 ;;                  1    wreg      void 
 17006 ;; Registers used:
 17007 ;;		status,2
 17008 ;; Tracked objects:
 17009 ;;		On entry : 0/0
 17010 ;;		On exit  : 0/0
 17011 ;;		Unchanged: 0/0
 17012 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 17013 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17014 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17015 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17016 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17017 ;;Total ram usage:        0 bytes
 17018 ;; Hardware stack levels used: 1
 17019 ;; Hardware stack levels required when called: 5
 17020 ;; This function calls:
 17021 ;;		Nothing
 17022 ;; This function is called by:
 17023 ;;		_SYSTEM_Initialize
 17024 ;; This function uses a non-reentrant model
 17025 ;;
 17026                           
 17027     1BC9                     _SPI1_Initialize:	
 17028                           ;psect for function _SPI1_Initialize
 17029                           
 17030     1BC9                     l5717:	
 17031                           ;incstack = 0
 17032                           ; Regs used in _SPI1_Initialize: [status,2]
 17033                           
 17034                           
 17035                           ;mcc_generated_files/spi/src/mssp1.c: 63:     PIE1bits.SSP1IE = 0;
 17036     1BC9  0021               	movlb	1	; select bank1
 17037     1BCA  1191               	bcf	17,3	;volatile
 17038                           
 17039                           ;mcc_generated_files/spi/src/mssp1.c: 64:     PIR1bits.SSP1IF = 0;
 17040     1BCB  0020               	movlb	0	; select bank0
 17041     1BCC  1191               	bcf	17,3	;volatile
 17042     1BCD                     l5719:
 17043                           
 17044                           ;mcc_generated_files/spi/src/mssp1.c: 66:     SSP1STAT = 0x00;
 17045     1BCD  0024               	movlb	4	; select bank4
 17046     1BCE  0194               	clrf	20	;volatile
 17047                           
 17048                           ;mcc_generated_files/spi/src/mssp1.c: 67:     SSP1CON1 = 0x00;
 17049     1BCF  0195               	clrf	21	;volatile
 17050                           
 17051                           ;mcc_generated_files/spi/src/mssp1.c: 68:     SSP1CON3 = 0x00;
 17052     1BD0  0197               	clrf	23	;volatile
 17053                           
 17054                           ;mcc_generated_files/spi/src/mssp1.c: 69:     SSP1ADD = 0x00;
 17055     1BD1  0192               	clrf	18	;volatile
 17056     1BD2                     l119:
 17057     1BD2  0008               	return
 17058     1BD3                     __end_of_SPI1_Initialize:
 17059                           
 17060                           	psect	text64
 17061     1FBC                     __ptext64:	
 17062 ;; *************** function _PIN_MANAGER_Initialize *****************
 17063 ;; Defined at:
 17064 ;;		line 38 in file "mcc_generated_files/system/src/pins.c"
 17065 ;; Parameters:    Size  Location     Type
 17066 ;;		None
 17067 ;; Auto vars:     Size  Location     Type
 17068 ;;		None
 17069 ;; Return value:  Size  Location     Type
 17070 ;;                  1    wreg      void 
 17071 ;; Registers used:
 17072 ;;		status,2
 17073 ;; Tracked objects:
 17074 ;;		On entry : 0/0
 17075 ;;		On exit  : 0/0
 17076 ;;		Unchanged: 0/0
 17077 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 17078 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17079 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17080 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17081 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17082 ;;Total ram usage:        0 bytes
 17083 ;; Hardware stack levels used: 1
 17084 ;; Hardware stack levels required when called: 5
 17085 ;; This function calls:
 17086 ;;		Nothing
 17087 ;; This function is called by:
 17088 ;;		_SYSTEM_Initialize
 17089 ;; This function uses a non-reentrant model
 17090 ;;
 17091                           
 17092     1FBC                     _PIN_MANAGER_Initialize:	
 17093                           ;psect for function _PIN_MANAGER_Initialize
 17094                           
 17095     1FBC                     l5743:	
 17096                           ;incstack = 0
 17097                           ; Regs used in _PIN_MANAGER_Initialize: [status,2]
 17098                           
 17099                           
 17100                           ;mcc_generated_files/system/src/pins.c: 43:     LATA = 0x0;
 17101     1FBC  0022               	movlb	2	; select bank2
 17102     1FBD  018C               	clrf	12	;volatile
 17103                           
 17104                           ;mcc_generated_files/system/src/pins.c: 44:     LATB = 0x0;
 17105     1FBE  018D               	clrf	13	;volatile
 17106                           
 17107                           ;mcc_generated_files/system/src/pins.c: 45:     LATC = 0x0;
 17108     1FBF  018E               	clrf	14	;volatile
 17109     1FC0                     l5745:
 17110                           
 17111                           ;mcc_generated_files/system/src/pins.c: 50:     TRISA = 0x19;
 17112     1FC0  3019               	movlw	25
 17113     1FC1  0021               	movlb	1	; select bank1
 17114     1FC2  008C               	movwf	12	;volatile
 17115     1FC3                     l5747:
 17116                           
 17117                           ;mcc_generated_files/system/src/pins.c: 51:     TRISB = 0x80;
 17118     1FC3  3080               	movlw	128
 17119     1FC4  008D               	movwf	13	;volatile
 17120     1FC5                     l5749:
 17121                           
 17122                           ;mcc_generated_files/system/src/pins.c: 52:     TRISC = 0xDF;
 17123     1FC5  30DF               	movlw	223
 17124     1FC6  008E               	movwf	14	;volatile
 17125     1FC7                     l5751:
 17126                           
 17127                           ;mcc_generated_files/system/src/pins.c: 57:     ANSELA = 0x10;
 17128     1FC7  3010               	movlw	16
 17129     1FC8  0023               	movlb	3	; select bank3
 17130     1FC9  008C               	movwf	12	;volatile
 17131     1FCA                     l5753:
 17132                           
 17133                           ;mcc_generated_files/system/src/pins.c: 58:     ANSELB = 0x20;
 17134     1FCA  3020               	movlw	32
 17135     1FCB  008D               	movwf	13	;volatile
 17136     1FCC                     l5755:
 17137                           
 17138                           ;mcc_generated_files/system/src/pins.c: 59:     ANSELC = 0xFF;
 17139     1FCC  30FF               	movlw	255
 17140     1FCD  008E               	movwf	14	;volatile
 17141                           
 17142                           ;mcc_generated_files/system/src/pins.c: 64:     WPUA = 0x0;
 17143     1FCE  0024               	movlb	4	; select bank4
 17144     1FCF  018C               	clrf	12	;volatile
 17145                           
 17146                           ;mcc_generated_files/system/src/pins.c: 65:     WPUB = 0x0;
 17147     1FD0  018D               	clrf	13	;volatile
 17148                           
 17149                           ;mcc_generated_files/system/src/pins.c: 66:     WPUC = 0x0;
 17150     1FD1  018E               	clrf	14	;volatile
 17151                           
 17152                           ;mcc_generated_files/system/src/pins.c: 72:     ODCONA = 0x0;
 17153     1FD2  0025               	movlb	5	; select bank5
 17154     1FD3  018C               	clrf	12	;volatile
 17155                           
 17156                           ;mcc_generated_files/system/src/pins.c: 73:     ODCONB = 0x0;
 17157     1FD4  018D               	clrf	13	;volatile
 17158                           
 17159                           ;mcc_generated_files/system/src/pins.c: 74:     ODCONC = 0x0;
 17160     1FD5  018E               	clrf	14	;volatile
 17161     1FD6                     l5757:
 17162                           
 17163                           ;mcc_generated_files/system/src/pins.c: 78:     SLRCONA = 0x37;
 17164     1FD6  3037               	movlw	55
 17165     1FD7  0026               	movlb	6	; select bank6
 17166     1FD8  008C               	movwf	12	;volatile
 17167     1FD9                     l5759:
 17168                           
 17169                           ;mcc_generated_files/system/src/pins.c: 79:     SLRCONB = 0xF0;
 17170     1FD9  30F0               	movlw	240
 17171     1FDA  008D               	movwf	13	;volatile
 17172     1FDB                     l5761:
 17173                           
 17174                           ;mcc_generated_files/system/src/pins.c: 80:     SLRCONC = 0xFF;
 17175     1FDB  30FF               	movlw	255
 17176     1FDC  008E               	movwf	14	;volatile
 17177     1FDD                     l5763:
 17178                           
 17179                           ;mcc_generated_files/system/src/pins.c: 84:     INLVLA = 0x3F;
 17180     1FDD  303F               	movlw	63
 17181     1FDE  0027               	movlb	7	; select bank7
 17182     1FDF  008C               	movwf	12	;volatile
 17183     1FE0                     l5765:
 17184                           
 17185                           ;mcc_generated_files/system/src/pins.c: 85:     INLVLB = 0xF0;
 17186     1FE0  30F0               	movlw	240
 17187     1FE1  008D               	movwf	13	;volatile
 17188     1FE2                     l5767:
 17189                           
 17190                           ;mcc_generated_files/system/src/pins.c: 86:     INLVLC = 0xFF;
 17191     1FE2  30FF               	movlw	255
 17192     1FE3  008E               	movwf	14	;volatile
 17193                           
 17194                           ;mcc_generated_files/system/src/pins.c: 91:     SSP1DATPPS = 0x0;
 17195     1FE4  003C               	movlb	28	; select bank28
 17196     1FE5  01A1               	clrf	33	;volatile
 17197     1FE6                     l5769:
 17198                           
 17199                           ;mcc_generated_files/system/src/pins.c: 92:     RXPPS = 0xF;
 17200     1FE6  300F               	movlw	15
 17201     1FE7  00A4               	movwf	36	;volatile
 17202     1FE8                     l5771:
 17203                           
 17204                           ;mcc_generated_files/system/src/pins.c: 93:     RB4PPS = 25;
 17205     1FE8  3019               	movlw	25
 17206     1FE9  003D               	movlb	29	; select bank29
 17207     1FEA  009C               	movwf	28	;volatile
 17208     1FEB                     l5773:
 17209                           
 17210                           ;mcc_generated_files/system/src/pins.c: 94:     RC5PPS = 2;
 17211     1FEB  3002               	movlw	2
 17212     1FEC  00A5               	movwf	37	;volatile
 17213     1FED                     l5775:
 17214                           
 17215                           ;mcc_generated_files/system/src/pins.c: 95:     RB5PPS = 20;
 17216     1FED  3014               	movlw	20
 17217     1FEE  009D               	movwf	29	;volatile
 17218     1FEF                     l5777:
 17219                           
 17220                           ;mcc_generated_files/system/src/pins.c: 96:     SSP1CLKPPS = 0xE;
 17221     1FEF  300E               	movlw	14
 17222     1FF0  003C               	movlb	28	; select bank28
 17223     1FF1  00A0               	movwf	32	;volatile
 17224     1FF2                     l5779:
 17225                           
 17226                           ;mcc_generated_files/system/src/pins.c: 97:     RB6PPS = 24;
 17227     1FF2  3018               	movlw	24
 17228     1FF3  003D               	movlb	29	; select bank29
 17229     1FF4  009E               	movwf	30	;volatile
 17230                           
 17231                           ;mcc_generated_files/system/src/pins.c: 106:     IOCAP = 0x0;
 17232     1FF5  0027               	movlb	7	; select bank7
 17233     1FF6  0191               	clrf	17	;volatile
 17234                           
 17235                           ;mcc_generated_files/system/src/pins.c: 107:     IOCAN = 0x0;
 17236     1FF7  0192               	clrf	18	;volatile
 17237                           
 17238                           ;mcc_generated_files/system/src/pins.c: 108:     IOCAF = 0x0;
 17239     1FF8  0193               	clrf	19	;volatile
 17240                           
 17241                           ;mcc_generated_files/system/src/pins.c: 109:     IOCBP = 0x0;
 17242     1FF9  0194               	clrf	20	;volatile
 17243                           
 17244                           ;mcc_generated_files/system/src/pins.c: 110:     IOCBN = 0x0;
 17245     1FFA  0195               	clrf	21	;volatile
 17246                           
 17247                           ;mcc_generated_files/system/src/pins.c: 111:     IOCBF = 0x0;
 17248     1FFB  0196               	clrf	22	;volatile
 17249                           
 17250                           ;mcc_generated_files/system/src/pins.c: 112:     IOCCP = 0x0;
 17251     1FFC  0197               	clrf	23	;volatile
 17252                           
 17253                           ;mcc_generated_files/system/src/pins.c: 113:     IOCCN = 0x0;
 17254     1FFD  0198               	clrf	24	;volatile
 17255                           
 17256                           ;mcc_generated_files/system/src/pins.c: 114:     IOCCF = 0x0;
 17257     1FFE  0199               	clrf	25	;volatile
 17258     1FFF                     l335:
 17259     1FFF  0008               	return
 17260     2000                     __end_of_PIN_MANAGER_Initialize:
 17261                           
 17262                           	psect	text65
 17263     1BF3                     __ptext65:	
 17264 ;; *************** function _INTERRUPT_Initialize *****************
 17265 ;; Defined at:
 17266 ;;		line 40 in file "mcc_generated_files/system/src/interrupt.c"
 17267 ;; Parameters:    Size  Location     Type
 17268 ;;		None
 17269 ;; Auto vars:     Size  Location     Type
 17270 ;;		None
 17271 ;; Return value:  Size  Location     Type
 17272 ;;                  1    wreg      void 
 17273 ;; Registers used:
 17274 ;;		wreg, status,2, status,0, pclath, cstack
 17275 ;; Tracked objects:
 17276 ;;		On entry : 0/0
 17277 ;;		On exit  : 0/0
 17278 ;;		Unchanged: 0/0
 17279 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 17280 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17281 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17282 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17283 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17284 ;;Total ram usage:        0 bytes
 17285 ;; Hardware stack levels used: 1
 17286 ;; Hardware stack levels required when called: 6
 17287 ;; This function calls:
 17288 ;;		_INT_SetInterruptHandler
 17289 ;; This function is called by:
 17290 ;;		_SYSTEM_Initialize
 17291 ;; This function uses a non-reentrant model
 17292 ;;
 17293                           
 17294     1BF3                     _INTERRUPT_Initialize:	
 17295                           ;psect for function _INTERRUPT_Initialize
 17296                           
 17297     1BF3                     l5735:	
 17298                           ;incstack = 0
 17299                           ; Regs used in _INTERRUPT_Initialize: [wreg+status,2+status,0+pclath+cstack]
 17300                           
 17301                           
 17302                           ;mcc_generated_files/system/src/interrupt.c: 44:     (PIR0bits.INTF = 0);
 17303     1BF3  0020               	movlb	0	; select bank0
 17304     1BF4  1010               	bcf	16,0	;volatile
 17305                           
 17306                           ;mcc_generated_files/system/src/interrupt.c: 45:     (INTCONbits.INTEDG = 1);
 17307     1BF5  140B               	bsf	11,0	;volatile
 17308     1BF6                     l5737:
 17309                           
 17310                           ;mcc_generated_files/system/src/interrupt.c: 47:     INT_SetInterruptHandler(INT_Default
      +                          InterruptHandler);
 17311     1BF6  3000               	movlw	0
 17312     1BF7  0021               	movlb	1	; select bank1
 17313     1BF8  00A0               	movwf	INT_SetInterruptHandler@InterruptHandler^(0+128)
 17314     1BF9  3000               	movlw	0
 17315     1BFA  00A1               	movwf	(INT_SetInterruptHandler@InterruptHandler^(0+128)+1)
 17316     1BFB  319B  2378  319B   	fcall	_INT_SetInterruptHandler
 17317     1BFE                     l213:
 17318     1BFE  0008               	return
 17319     1BFF                     __end_of_INTERRUPT_Initialize:
 17320                           
 17321                           	psect	text66
 17322     1B78                     __ptext66:	
 17323 ;; *************** function _INT_SetInterruptHandler *****************
 17324 ;; Defined at:
 17325 ;;		line 113 in file "mcc_generated_files/system/src/interrupt.c"
 17326 ;; Parameters:    Size  Location     Type
 17327 ;;  InterruptHan    2    0[BANK1 ] PTR FTN()void 
 17328 ;;		 -> INT_DefaultInterruptHandler(1), 
 17329 ;; Auto vars:     Size  Location     Type
 17330 ;;		None
 17331 ;; Return value:  Size  Location     Type
 17332 ;;                  1    wreg      void 
 17333 ;; Registers used:
 17334 ;;		wreg
 17335 ;; Tracked objects:
 17336 ;;		On entry : 0/0
 17337 ;;		On exit  : 0/0
 17338 ;;		Unchanged: 0/0
 17339 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 17340 ;;      Params:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0
 17341 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17342 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17343 ;;      Totals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0
 17344 ;;Total ram usage:        2 bytes
 17345 ;; Hardware stack levels used: 1
 17346 ;; Hardware stack levels required when called: 5
 17347 ;; This function calls:
 17348 ;;		Nothing
 17349 ;; This function is called by:
 17350 ;;		_INTERRUPT_Initialize
 17351 ;; This function uses a non-reentrant model
 17352 ;;
 17353                           
 17354     1B78                     _INT_SetInterruptHandler:	
 17355                           ;psect for function _INT_SetInterruptHandler
 17356                           
 17357     1B78                     l5023:	
 17358                           ;incstack = 0
 17359                           ; Regs used in _INT_SetInterruptHandler: [wreg]
 17360                           
 17361                           
 17362                           ;mcc_generated_files/system/src/interrupt.c: 114:     INT_InterruptHandler = InterruptHa
      +                          ndler;
 17363     1B78  0021               	movlb	1	; select bank1
 17364     1B79  0821               	movf	(INT_SetInterruptHandler@InterruptHandler+1)^(0+128),w
 17365     1B7A  0020               	movlb	0	; select bank0
 17366     1B7B  00E2               	movwf	_INT_InterruptHandler+1
 17367     1B7C  0021               	movlb	1	; select bank1
 17368     1B7D  0820               	movf	INT_SetInterruptHandler@InterruptHandler^(0+128),w
 17369     1B7E  0020               	movlb	0	; select bank0
 17370     1B7F  00E1               	movwf	_INT_InterruptHandler
 17371     1B80                     l240:
 17372     1B80  0008               	return
 17373     1B81                     __end_of_INT_SetInterruptHandler:
 17374                           
 17375                           	psect	text67
 17376     07C9                     __ptext67:	
 17377 ;; *************** function _EUSART_Initialize *****************
 17378 ;; Defined at:
 17379 ;;		line 131 in file "mcc_generated_files/uart/src/eusart.c"
 17380 ;; Parameters:    Size  Location     Type
 17381 ;;		None
 17382 ;; Auto vars:     Size  Location     Type
 17383 ;;		None
 17384 ;; Return value:  Size  Location     Type
 17385 ;;                  1    wreg      void 
 17386 ;; Registers used:
 17387 ;;		wreg, status,2, status,0, pclath, cstack
 17388 ;; Tracked objects:
 17389 ;;		On entry : 0/0
 17390 ;;		On exit  : 0/0
 17391 ;;		Unchanged: 0/0
 17392 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 17393 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17394 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17395 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17396 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17397 ;;Total ram usage:        0 bytes
 17398 ;; Hardware stack levels used: 1
 17399 ;; Hardware stack levels required when called: 6
 17400 ;; This function calls:
 17401 ;;		_EUSART_FramingErrorCallbackRegister
 17402 ;;		_EUSART_OverrunErrorCallbackRegister
 17403 ;; This function is called by:
 17404 ;;		_SYSTEM_Initialize
 17405 ;; This function uses a non-reentrant model
 17406 ;;
 17407                           
 17408     07C9                     _EUSART_Initialize:	
 17409                           ;psect for function _EUSART_Initialize
 17410                           
 17411     07C9                     l5815:	
 17412                           ;incstack = 0
 17413                           ; Regs used in _EUSART_Initialize: [wreg+status,2+status,0+pclath+cstack]
 17414                           
 17415                           
 17416                           ;mcc_generated_files/uart/src/eusart.c: 133:     PIE1bits.RCIE = 0;
 17417     07C9  0021               	movlb	1	; select bank1
 17418     07CA  1291               	bcf	17,5	;volatile
 17419     07CB                     l5817:
 17420                           
 17421                           ;mcc_generated_files/uart/src/eusart.c: 134:      EUSART_RxInterruptHandler = EUSART_Rec
      +                          eiveISR;
 17422     07CB  3008               	movlw	low _EUSART_ReceiveISR
 17423     07CC  0023               	movlb	3	; select bank3
 17424     07CD  00D4               	movwf	_EUSART_RxInterruptHandler^(0+384)
 17425     07CE  3010               	movlw	high _EUSART_ReceiveISR
 17426     07CF  00D5               	movwf	(_EUSART_RxInterruptHandler^(0+384)+1)
 17427     07D0                     l5819:
 17428                           
 17429                           ;mcc_generated_files/uart/src/eusart.c: 136:     PIE1bits.TXIE = 0;
 17430     07D0  0021               	movlb	1	; select bank1
 17431     07D1  1211               	bcf	17,4	;volatile
 17432                           
 17433                           ;mcc_generated_files/uart/src/eusart.c: 137:     EUSART_TxInterruptHandler = EUSART_Tran
      +                          smitISR;
 17434     07D2  309D               	movlw	low _EUSART_TransmitISR
 17435     07D3  0022               	movlb	2	; select bank2
 17436     07D4  00E4               	movwf	_EUSART_TxInterruptHandler^(0+256)
 17437     07D5  301D               	movlw	high _EUSART_TransmitISR
 17438     07D6  00E5               	movwf	(_EUSART_TxInterruptHandler^(0+256)+1)
 17439     07D7                     l5821:
 17440                           
 17441                           ;mcc_generated_files/uart/src/eusart.c: 142:     BAUD1CON = 0x48;
 17442     07D7  3048               	movlw	72
 17443     07D8  0023               	movlb	3	; select bank3
 17444     07D9  009F               	movwf	31	;volatile
 17445     07DA                     l5823:
 17446                           
 17447                           ;mcc_generated_files/uart/src/eusart.c: 144:     RC1STA = 0x90;
 17448     07DA  3090               	movlw	144
 17449     07DB  009D               	movwf	29	;volatile
 17450     07DC                     l5825:
 17451                           
 17452                           ;mcc_generated_files/uart/src/eusart.c: 146:     TX1STA = 0x26;
 17453     07DC  3026               	movlw	38
 17454     07DD  009E               	movwf	30	;volatile
 17455     07DE                     l5827:
 17456                           
 17457                           ;mcc_generated_files/uart/src/eusart.c: 148:     SP1BRGL = 0x40;
 17458     07DE  3040               	movlw	64
 17459     07DF  009B               	movwf	27	;volatile
 17460     07E0                     l5829:
 17461                           
 17462                           ;mcc_generated_files/uart/src/eusart.c: 150:     SP1BRGH = 0x3;
 17463     07E0  3003               	movlw	3
 17464     07E1  009C               	movwf	28	;volatile
 17465     07E2                     l5831:
 17466                           
 17467                           ;mcc_generated_files/uart/src/eusart.c: 152:     EUSART_FramingErrorCallbackRegister(EUS
      +                          ART_DefaultFramingErrorCallback);
 17468     07E2  3040               	movlw	low _EUSART_DefaultFramingErrorCallback
 17469     07E3  0021               	movlb	1	; select bank1
 17470     07E4  00A0               	movwf	EUSART_FramingErrorCallbackRegister@callbackHandler^(0+128)
 17471     07E5  301B               	movlw	high _EUSART_DefaultFramingErrorCallback
 17472     07E6  00A1               	movwf	(EUSART_FramingErrorCallbackRegister@callbackHandler^(0+128)+1)
 17473     07E7  319C  246C  3187   	fcall	_EUSART_FramingErrorCallbackRegister
 17474     07EA                     l5833:
 17475                           
 17476                           ;mcc_generated_files/uart/src/eusart.c: 153:     EUSART_OverrunErrorCallbackRegister(EUS
      +                          ART_DefaultOverrunErrorCallback);
 17477     07EA  3042               	movlw	low _EUSART_DefaultOverrunErrorCallback
 17478     07EB  0021               	movlb	1	; select bank1
 17479     07EC  00A0               	movwf	EUSART_OverrunErrorCallbackRegister@callbackHandler^(0+128)
 17480     07ED  301B               	movlw	high _EUSART_DefaultOverrunErrorCallback
 17481     07EE  00A1               	movwf	(EUSART_OverrunErrorCallbackRegister@callbackHandler^(0+128)+1)
 17482     07EF  319C  247B  3187   	fcall	_EUSART_OverrunErrorCallbackRegister
 17483     07F2                     l5835:
 17484                           
 17485                           ;mcc_generated_files/uart/src/eusart.c: 154:     eusartRxLastError.status = 0;
 17486     07F2  0022               	movlb	2	; select bank2
 17487     07F3  01CE               	clrf	_eusartRxLastError^(0+256)	;volatile
 17488     07F4  01CF               	clrf	(_eusartRxLastError+1)^(0+256)	;volatile
 17489     07F5                     l5837:
 17490                           
 17491                           ;mcc_generated_files/uart/src/eusart.c: 156:     eusartTxHead = 0;
 17492     07F5  0020               	movlb	0	; select bank0
 17493     07F6  01EB               	clrf	_eusartTxHead	;volatile
 17494     07F7                     l5839:
 17495                           
 17496                           ;mcc_generated_files/uart/src/eusart.c: 157:     eusartTxTail = 0;
 17497     07F7  01EA               	clrf	_eusartTxTail	;volatile
 17498     07F8                     l5841:
 17499                           
 17500                           ;mcc_generated_files/uart/src/eusart.c: 158:     eusartTxBufferRemaining = sizeof(eusart
      +                          TxBuffer);
 17501     07F8  3008               	movlw	8
 17502     07F9  00E9               	movwf	_eusartTxBufferRemaining	;volatile
 17503     07FA                     l5843:
 17504                           
 17505                           ;mcc_generated_files/uart/src/eusart.c: 160:     eusartRxHead = 0;
 17506     07FA  01E8               	clrf	_eusartRxHead	;volatile
 17507     07FB                     l5845:
 17508                           
 17509                           ;mcc_generated_files/uart/src/eusart.c: 161:     eusartRxTail = 0;
 17510     07FB  01E7               	clrf	_eusartRxTail	;volatile
 17511     07FC                     l5847:
 17512                           
 17513                           ;mcc_generated_files/uart/src/eusart.c: 162:     eusartRxCount = 0;
 17514     07FC  01E6               	clrf	_eusartRxCount	;volatile
 17515     07FD                     l5849:
 17516                           
 17517                           ;mcc_generated_files/uart/src/eusart.c: 164:     PIE1bits.RCIE = 1;
 17518     07FD  0021               	movlb	1	; select bank1
 17519     07FE  1691               	bsf	17,5	;volatile
 17520     07FF                     l638:
 17521     07FF  0008               	return
 17522     0800                     __end_of_EUSART_Initialize:
 17523                           
 17524                           	psect	text68
 17525     1C7B                     __ptext68:	
 17526 ;; *************** function _EUSART_OverrunErrorCallbackRegister *****************
 17527 ;; Defined at:
 17528 ;;		line 438 in file "mcc_generated_files/uart/src/eusart.c"
 17529 ;; Parameters:    Size  Location     Type
 17530 ;;  callbackHand    2    0[BANK1 ] PTR FTN()void 
 17531 ;;		 -> EUSART_DefaultOverrunErrorCallback(1), 
 17532 ;; Auto vars:     Size  Location     Type
 17533 ;;		None
 17534 ;; Return value:  Size  Location     Type
 17535 ;;                  1    wreg      void 
 17536 ;; Registers used:
 17537 ;;		wreg, status,2, status,0
 17538 ;; Tracked objects:
 17539 ;;		On entry : 0/0
 17540 ;;		On exit  : 0/0
 17541 ;;		Unchanged: 0/0
 17542 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 17543 ;;      Params:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0
 17544 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17545 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17546 ;;      Totals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0
 17547 ;;Total ram usage:        2 bytes
 17548 ;; Hardware stack levels used: 1
 17549 ;; Hardware stack levels required when called: 5
 17550 ;; This function calls:
 17551 ;;		Nothing
 17552 ;; This function is called by:
 17553 ;;		_EUSART_Initialize
 17554 ;; This function uses a non-reentrant model
 17555 ;;
 17556                           
 17557     1C7B                     _EUSART_OverrunErrorCallbackRegister:	
 17558                           ;psect for function _EUSART_OverrunErrorCallbackRegister
 17559                           
 17560     1C7B                     l5029:	
 17561                           ;incstack = 0
 17562                           ; Regs used in _EUSART_OverrunErrorCallbackRegister: [wreg+status,2+status,0]
 17563                           
 17564                           
 17565                           ;mcc_generated_files/uart/src/eusart.c: 438: void EUSART_OverrunErrorCallbackRegister(vo
      +                          id (* callbackHandler)(void));mcc_generated_files/uart/src/eusart.c: 439: {;mcc_generate
      +                          d_files/uart/src/eusart.c: 440:     if(((void*)0) != callbackHandler)
 17566     1C7B  0021               	movlb	1	; select bank1
 17567     1C7C  0820               	movf	EUSART_OverrunErrorCallbackRegister@callbackHandler^(0+128),w
 17568     1C7D  0421               	iorwf	(EUSART_OverrunErrorCallbackRegister@callbackHandler+1)^(0+128),w
 17569     1C7E  1903               	btfsc	3,2
 17570     1C7F  2C81               	goto	u5751
 17571     1C80  2C82               	goto	u5750
 17572     1C81                     u5751:
 17573     1C81  2C89               	goto	l756
 17574     1C82                     u5750:
 17575     1C82                     l5031:
 17576                           
 17577                           ;mcc_generated_files/uart/src/eusart.c: 441:     {;mcc_generated_files/uart/src/eusart.c
      +                          : 442:         EUSART_OverrunErrorHandler = callbackHandler;
 17578     1C82  0821               	movf	(EUSART_OverrunErrorCallbackRegister@callbackHandler+1)^(0+128),w
 17579     1C83  0020               	movlb	0	; select bank0
 17580     1C84  00DC               	movwf	_EUSART_OverrunErrorHandler+1
 17581     1C85  0021               	movlb	1	; select bank1
 17582     1C86  0820               	movf	EUSART_OverrunErrorCallbackRegister@callbackHandler^(0+128),w
 17583     1C87  0020               	movlb	0	; select bank0
 17584     1C88  00DB               	movwf	_EUSART_OverrunErrorHandler
 17585     1C89                     l756:
 17586     1C89  0008               	return
 17587     1C8A                     __end_of_EUSART_OverrunErrorCallbackRegister:
 17588                           
 17589                           	psect	text69
 17590     1C6C                     __ptext69:	
 17591 ;; *************** function _EUSART_FramingErrorCallbackRegister *****************
 17592 ;; Defined at:
 17593 ;;		line 430 in file "mcc_generated_files/uart/src/eusart.c"
 17594 ;; Parameters:    Size  Location     Type
 17595 ;;  callbackHand    2    0[BANK1 ] PTR FTN()void 
 17596 ;;		 -> EUSART_DefaultFramingErrorCallback(1), 
 17597 ;; Auto vars:     Size  Location     Type
 17598 ;;		None
 17599 ;; Return value:  Size  Location     Type
 17600 ;;                  1    wreg      void 
 17601 ;; Registers used:
 17602 ;;		wreg, status,2, status,0
 17603 ;; Tracked objects:
 17604 ;;		On entry : 0/0
 17605 ;;		On exit  : 0/0
 17606 ;;		Unchanged: 0/0
 17607 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 17608 ;;      Params:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0
 17609 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17610 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17611 ;;      Totals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0
 17612 ;;Total ram usage:        2 bytes
 17613 ;; Hardware stack levels used: 1
 17614 ;; Hardware stack levels required when called: 5
 17615 ;; This function calls:
 17616 ;;		Nothing
 17617 ;; This function is called by:
 17618 ;;		_EUSART_Initialize
 17619 ;; This function uses a non-reentrant model
 17620 ;;
 17621                           
 17622     1C6C                     _EUSART_FramingErrorCallbackRegister:	
 17623                           ;psect for function _EUSART_FramingErrorCallbackRegister
 17624                           
 17625     1C6C                     l5025:	
 17626                           ;incstack = 0
 17627                           ; Regs used in _EUSART_FramingErrorCallbackRegister: [wreg+status,2+status,0]
 17628                           
 17629                           
 17630                           ;mcc_generated_files/uart/src/eusart.c: 430: void EUSART_FramingErrorCallbackRegister(vo
      +                          id (* callbackHandler)(void));mcc_generated_files/uart/src/eusart.c: 431: {;mcc_generate
      +                          d_files/uart/src/eusart.c: 432:     if(((void*)0) != callbackHandler)
 17631     1C6C  0021               	movlb	1	; select bank1
 17632     1C6D  0820               	movf	EUSART_FramingErrorCallbackRegister@callbackHandler^(0+128),w
 17633     1C6E  0421               	iorwf	(EUSART_FramingErrorCallbackRegister@callbackHandler+1)^(0+128),w
 17634     1C6F  1903               	btfsc	3,2
 17635     1C70  2C72               	goto	u5741
 17636     1C71  2C73               	goto	u5740
 17637     1C72                     u5741:
 17638     1C72  2C7A               	goto	l752
 17639     1C73                     u5740:
 17640     1C73                     l5027:
 17641                           
 17642                           ;mcc_generated_files/uart/src/eusart.c: 433:     {;mcc_generated_files/uart/src/eusart.c
      +                          : 434:         EUSART_FramingErrorHandler = callbackHandler;
 17643     1C73  0821               	movf	(EUSART_FramingErrorCallbackRegister@callbackHandler+1)^(0+128),w
 17644     1C74  0020               	movlb	0	; select bank0
 17645     1C75  00DE               	movwf	_EUSART_FramingErrorHandler+1
 17646     1C76  0021               	movlb	1	; select bank1
 17647     1C77  0820               	movf	EUSART_FramingErrorCallbackRegister@callbackHandler^(0+128),w
 17648     1C78  0020               	movlb	0	; select bank0
 17649     1C79  00DD               	movwf	_EUSART_FramingErrorHandler
 17650     1C7A                     l752:
 17651     1C7A  0008               	return
 17652     1C7B                     __end_of_EUSART_FramingErrorCallbackRegister:
 17653                           
 17654                           	psect	text70
 17655     1B6F                     __ptext70:	
 17656 ;; *************** function _CLOCK_Initialize *****************
 17657 ;; Defined at:
 17658 ;;		line 39 in file "mcc_generated_files/system/src/clock.c"
 17659 ;; Parameters:    Size  Location     Type
 17660 ;;		None
 17661 ;; Auto vars:     Size  Location     Type
 17662 ;;		None
 17663 ;; Return value:  Size  Location     Type
 17664 ;;                  1    wreg      void 
 17665 ;; Registers used:
 17666 ;;		status,2
 17667 ;; Tracked objects:
 17668 ;;		On entry : 0/0
 17669 ;;		On exit  : 0/0
 17670 ;;		Unchanged: 0/0
 17671 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 17672 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17673 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17674 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17675 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17676 ;;Total ram usage:        0 bytes
 17677 ;; Hardware stack levels used: 1
 17678 ;; Hardware stack levels required when called: 5
 17679 ;; This function calls:
 17680 ;;		Nothing
 17681 ;; This function is called by:
 17682 ;;		_SYSTEM_Initialize
 17683 ;; This function uses a non-reentrant model
 17684 ;;
 17685                           
 17686     1B6F                     _CLOCK_Initialize:	
 17687                           ;psect for function _CLOCK_Initialize
 17688                           
 17689     1B6F                     l5739:	
 17690                           ;incstack = 0
 17691                           ; Regs used in _CLOCK_Initialize: [status,2]
 17692                           
 17693                           
 17694                           ;mcc_generated_files/system/src/clock.c: 42:     OSCCON1 = (0 << 0x0)
 17695     1B6F  0032               	movlb	18	; select bank18
 17696     1B70  0199               	clrf	25	;volatile
 17697                           
 17698                           ;mcc_generated_files/system/src/clock.c: 44:     OSCCON3 = (0 << 0x6)
 17699     1B71  019B               	clrf	27	;volatile
 17700                           
 17701                           ;mcc_generated_files/system/src/clock.c: 46:     OSCEN = (0 << 0x7)
 17702     1B72  019D               	clrf	29	;volatile
 17703     1B73                     l5741:
 17704                           
 17705                           ;mcc_generated_files/system/src/clock.c: 51:     OSCFRQ = (6 << 0x0);
 17706     1B73  3006               	movlw	6
 17707     1B74  009F               	movwf	31	;volatile
 17708                           
 17709                           ;mcc_generated_files/system/src/clock.c: 52:     OSCSTAT1 =
 17710     1B75  019E               	clrf	30	;volatile
 17711     1B76  019C               	clrf	28	;volatile
 17712     1B77                     l258:
 17713     1B77  0008               	return
 17714     1B78                     __end_of_CLOCK_Initialize:
 17715                           
 17716                           	psect	text71
 17717     1D3D                     __ptext71:	
 17718 ;; *************** function _ADC_Initialize *****************
 17719 ;; Defined at:
 17720 ;;		line 55 in file "mcc_generated_files/adc/src/adc.c"
 17721 ;; Parameters:    Size  Location     Type
 17722 ;;		None
 17723 ;; Auto vars:     Size  Location     Type
 17724 ;;		None
 17725 ;; Return value:  Size  Location     Type
 17726 ;;                  1    wreg      void 
 17727 ;; Registers used:
 17728 ;;		wreg, status,2, status,0, pclath, cstack
 17729 ;; Tracked objects:
 17730 ;;		On entry : 0/0
 17731 ;;		On exit  : 0/0
 17732 ;;		Unchanged: 0/0
 17733 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 17734 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17735 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17736 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17737 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17738 ;;Total ram usage:        0 bytes
 17739 ;; Hardware stack levels used: 1
 17740 ;; Hardware stack levels required when called: 6
 17741 ;; This function calls:
 17742 ;;		_ADC_SetInterruptHandler
 17743 ;; This function is called by:
 17744 ;;		_SYSTEM_Initialize
 17745 ;; This function uses a non-reentrant model
 17746 ;;
 17747                           
 17748     1D3D                     _ADC_Initialize:	
 17749                           ;psect for function _ADC_Initialize
 17750                           
 17751     1D3D                     l5697:	
 17752                           ;incstack = 0
 17753                           ; Regs used in _ADC_Initialize: [wreg+status,2+status,0+pclath+cstack]
 17754                           
 17755                           
 17756                           ;mcc_generated_files/adc/src/adc.c: 58:     ADCON1 = 0xA0;
 17757     1D3D  30A0               	movlw	160
 17758     1D3E  0021               	movlb	1	; select bank1
 17759     1D3F  009E               	movwf	30	;volatile
 17760     1D40                     l5699:
 17761                           
 17762                           ;mcc_generated_files/adc/src/adc.c: 61:     ADRESL = 0x0;
 17763     1D40  019B               	clrf	27	;volatile
 17764                           
 17765                           ;mcc_generated_files/adc/src/adc.c: 64:     ADRESH = 0x0;
 17766     1D41  019C               	clrf	28	;volatile
 17767     1D42                     l5701:
 17768                           
 17769                           ;mcc_generated_files/adc/src/adc.c: 67:     ADACT = 0x5;
 17770     1D42  3005               	movlw	5
 17771     1D43  009F               	movwf	31	;volatile
 17772     1D44                     l5703:
 17773                           
 17774                           ;mcc_generated_files/adc/src/adc.c: 70:     ADCON0 = 0x1;
 17775     1D44  3001               	movlw	1
 17776     1D45  009D               	movwf	29	;volatile
 17777     1D46                     l5705:
 17778                           
 17779                           ;mcc_generated_files/adc/src/adc.c: 73:     PIR1bits.ADIF = 0;
 17780     1D46  0020               	movlb	0	; select bank0
 17781     1D47  1311               	bcf	17,6	;volatile
 17782     1D48                     l5707:
 17783                           
 17784                           ;mcc_generated_files/adc/src/adc.c: 76:     ADC_SetInterruptHandler(ADC_DefaultInterrupt
      +                          Handler);
 17785     1D48  303F               	movlw	low _ADC_DefaultInterruptHandler
 17786     1D49  0021               	movlb	1	; select bank1
 17787     1D4A  00A0               	movwf	ADC_SetInterruptHandler@InterruptHandler^(0+128)
 17788     1D4B  301B               	movlw	high _ADC_DefaultInterruptHandler
 17789     1D4C  00A1               	movwf	(ADC_SetInterruptHandler@InterruptHandler^(0+128)+1)
 17790     1D4D  319B  2366  319D   	fcall	_ADC_SetInterruptHandler
 17791     1D50                     l5709:
 17792                           
 17793                           ;mcc_generated_files/adc/src/adc.c: 79:     PIE1bits.ADIE = 1;
 17794     1D50  0021               	movlb	1	; select bank1
 17795     1D51  1711               	bsf	17,6	;volatile
 17796     1D52                     l27:
 17797     1D52  0008               	return
 17798     1D53                     __end_of_ADC_Initialize:
 17799                           
 17800                           	psect	text72
 17801     1B66                     __ptext72:	
 17802 ;; *************** function _ADC_SetInterruptHandler *****************
 17803 ;; Defined at:
 17804 ;;		line 145 in file "mcc_generated_files/adc/src/adc.c"
 17805 ;; Parameters:    Size  Location     Type
 17806 ;;  InterruptHan    2    0[BANK1 ] PTR FTN()void 
 17807 ;;		 -> adcConversionDoneHandler(1), ADC_DefaultInterruptHandler(1), 
 17808 ;; Auto vars:     Size  Location     Type
 17809 ;;		None
 17810 ;; Return value:  Size  Location     Type
 17811 ;;                  1    wreg      void 
 17812 ;; Registers used:
 17813 ;;		wreg
 17814 ;; Tracked objects:
 17815 ;;		On entry : 0/0
 17816 ;;		On exit  : 0/0
 17817 ;;		Unchanged: 0/0
 17818 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 17819 ;;      Params:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0
 17820 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17821 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17822 ;;      Totals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0
 17823 ;;Total ram usage:        2 bytes
 17824 ;; Hardware stack levels used: 1
 17825 ;; Hardware stack levels required when called: 5
 17826 ;; This function calls:
 17827 ;;		Nothing
 17828 ;; This function is called by:
 17829 ;;		_ADC_Initialize
 17830 ;;		_initAdcMultiplexer
 17831 ;; This function uses a non-reentrant model
 17832 ;;
 17833                           
 17834     1B66                     _ADC_SetInterruptHandler:	
 17835                           ;psect for function _ADC_SetInterruptHandler
 17836                           
 17837     1B66                     l5015:	
 17838                           ;incstack = 0
 17839                           ; Regs used in _ADC_SetInterruptHandler: [wreg]
 17840                           
 17841                           
 17842                           ;mcc_generated_files/adc/src/adc.c: 145: void ADC_SetInterruptHandler(void (* InterruptH
      +                          andler)(void));mcc_generated_files/adc/src/adc.c: 146: {;mcc_generated_files/adc/src/adc
      +                          .c: 147:     ADC_InterruptHandler = InterruptHandler;
 17843     1B66  0021               	movlb	1	; select bank1
 17844     1B67  0821               	movf	(ADC_SetInterruptHandler@InterruptHandler+1)^(0+128),w
 17845     1B68  0022               	movlb	2	; select bank2
 17846     1B69  00E7               	movwf	(_ADC_InterruptHandler+1)^(0+256)
 17847     1B6A  0021               	movlb	1	; select bank1
 17848     1B6B  0820               	movf	ADC_SetInterruptHandler@InterruptHandler^(0+128),w
 17849     1B6C  0022               	movlb	2	; select bank2
 17850     1B6D  00E6               	movwf	_ADC_InterruptHandler^(0+256)
 17851     1B6E                     l55:
 17852     1B6E  0008               	return
 17853     1B6F                     __end_of_ADC_SetInterruptHandler:
 17854                           
 17855                           	psect	intentry
 17856     0004                     __pintentry:	
 17857 ;; *************** function _INTERRUPT_InterruptManager *****************
 17858 ;; Defined at:
 17859 ;;		line 59 in file "mcc_generated_files/system/src/interrupt.c"
 17860 ;; Parameters:    Size  Location     Type
 17861 ;;		None
 17862 ;; Auto vars:     Size  Location     Type
 17863 ;;		None
 17864 ;; Return value:  Size  Location     Type
 17865 ;;                  1    wreg      void 
 17866 ;; Registers used:
 17867 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 17868 ;; Tracked objects:
 17869 ;;		On entry : 0/0
 17870 ;;		On exit  : 0/0
 17871 ;;		Unchanged: 0/0
 17872 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 17873 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17874 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17875 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17876 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17877 ;;Total ram usage:        0 bytes
 17878 ;; Hardware stack levels used: 1
 17879 ;; Hardware stack levels required when called: 4
 17880 ;; This function calls:
 17881 ;;		NULL
 17882 ;;		_ADC_ISR
 17883 ;;		_EUSART_ReceiveISR
 17884 ;;		_EUSART_TransmitISR
 17885 ;;		_TMR2_ISR
 17886 ;;		_TMR4_ISR
 17887 ;; This function is called by:
 17888 ;;		Interrupt level 1
 17889 ;; This function uses a non-reentrant model
 17890 ;;
 17891                           
 17892     0004                     _INTERRUPT_InterruptManager:
 17893                           
 17894                           ;incstack = 0
 17895     0004  147E               	bsf	int$flags,0	;set compiler interrupt flag (level 1)
 17896                           
 17897                           ; Regs used in _INTERRUPT_InterruptManager: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 17898     0005  3180               	pagesel	$
 17899     0006                     i1l6157:
 17900                           
 17901                           ;mcc_generated_files/system/src/interrupt.c: 62:     if(INTCONbits.PEIE == 1)
 17902     0006  1F0B               	btfss	11,6	;volatile
 17903     0007  2809               	goto	u753_21
 17904     0008  280A               	goto	u753_20
 17905     0009                     u753_21:
 17906     0009  2856               	goto	i1l230
 17907     000A                     u753_20:
 17908     000A                     i1l6159:
 17909                           
 17910                           ;mcc_generated_files/system/src/interrupt.c: 63:     {;mcc_generated_files/system/src/in
      +                          terrupt.c: 64:         if(PIE1bits.TXIE == 1 && PIR1bits.TXIF == 1)
 17911     000A  0021               	movlb	1	; select bank1
 17912     000B  1E11               	btfss	17,4	;volatile
 17913     000C  280E               	goto	u754_21
 17914     000D  280F               	goto	u754_20
 17915     000E                     u754_21:
 17916     000E  281B               	goto	i1l219
 17917     000F                     u754_20:
 17918     000F                     i1l6161:
 17919     000F  0020               	movlb	0	; select bank0
 17920     0010  1E11               	btfss	17,4	;volatile
 17921     0011  2813               	goto	u755_21
 17922     0012  2814               	goto	u755_20
 17923     0013                     u755_21:
 17924     0013  281B               	goto	i1l219
 17925     0014                     u755_20:
 17926     0014                     i1l6163:
 17927                           
 17928                           ;mcc_generated_files/system/src/interrupt.c: 65:         {;mcc_generated_files/system/sr
      +                          c/interrupt.c: 66:             EUSART_TxInterruptHandler();
 17929     0014  0022               	movlb	2	; select bank2
 17930     0015  0865               	movf	(_EUSART_TxInterruptHandler+1)^(0+256),w
 17931     0016  008A               	movwf	10
 17932     0017  0864               	movf	_EUSART_TxInterruptHandler^(0+256),w
 17933     0018  000A               	callw
 17934     0019  3180               	pagesel	$
 17935                           
 17936                           ;mcc_generated_files/system/src/interrupt.c: 67:         }
 17937     001A  2856               	goto	i1l230
 17938     001B                     i1l219:	
 17939                           ;mcc_generated_files/system/src/interrupt.c: 68:         else if(PIE1bits.RCIE == 1 && P
      +                          IR1bits.RCIF == 1)
 17940                           
 17941     001B  0021               	movlb	1	; select bank1
 17942     001C  1E91               	btfss	17,5	;volatile
 17943     001D  281F               	goto	u756_21
 17944     001E  2820               	goto	u756_20
 17945     001F                     u756_21:
 17946     001F  282C               	goto	i1l221
 17947     0020                     u756_20:
 17948     0020                     i1l6165:
 17949     0020  0020               	movlb	0	; select bank0
 17950     0021  1E91               	btfss	17,5	;volatile
 17951     0022  2824               	goto	u757_21
 17952     0023  2825               	goto	u757_20
 17953     0024                     u757_21:
 17954     0024  282C               	goto	i1l221
 17955     0025                     u757_20:
 17956     0025                     i1l6167:
 17957                           
 17958                           ;mcc_generated_files/system/src/interrupt.c: 69:         {;mcc_generated_files/system/sr
      +                          c/interrupt.c: 70:             EUSART_RxInterruptHandler();
 17959     0025  0023               	movlb	3	; select bank3
 17960     0026  0855               	movf	(_EUSART_RxInterruptHandler+1)^(0+384),w
 17961     0027  008A               	movwf	10
 17962     0028  0854               	movf	_EUSART_RxInterruptHandler^(0+384),w
 17963     0029  000A               	callw
 17964     002A  3180               	pagesel	$
 17965                           
 17966                           ;mcc_generated_files/system/src/interrupt.c: 71:         }
 17967     002B  2856               	goto	i1l230
 17968     002C                     i1l221:	
 17969                           ;mcc_generated_files/system/src/interrupt.c: 72:         else if(PIE2bits.TMR4IE == 1 &&
      +                           PIR2bits.TMR4IF == 1)
 17970                           
 17971     002C  0021               	movlb	1	; select bank1
 17972     002D  1C92               	btfss	18,1	;volatile
 17973     002E  2830               	goto	u758_21
 17974     002F  2831               	goto	u758_20
 17975     0030                     u758_21:
 17976     0030  283A               	goto	i1l223
 17977     0031                     u758_20:
 17978     0031                     i1l6169:
 17979     0031  0020               	movlb	0	; select bank0
 17980     0032  1C92               	btfss	18,1	;volatile
 17981     0033  2835               	goto	u759_21
 17982     0034  2836               	goto	u759_20
 17983     0035                     u759_21:
 17984     0035  283A               	goto	i1l223
 17985     0036                     u759_20:
 17986     0036                     i1l6171:
 17987                           
 17988                           ;mcc_generated_files/system/src/interrupt.c: 73:         {;mcc_generated_files/system/sr
      +                          c/interrupt.c: 74:             TMR4_ISR();
 17989     0036  319C  245D  3180   	fcall	_TMR4_ISR
 17990                           
 17991                           ;mcc_generated_files/system/src/interrupt.c: 75:         }
 17992     0039  2856               	goto	i1l230
 17993     003A                     i1l223:	
 17994                           ;mcc_generated_files/system/src/interrupt.c: 76:         else if(PIE1bits.TMR2IE == 1 &&
      +                           PIR1bits.TMR2IF == 1)
 17995                           
 17996     003A  0021               	movlb	1	; select bank1
 17997     003B  1C91               	btfss	17,1	;volatile
 17998     003C  283E               	goto	u760_21
 17999     003D  283F               	goto	u760_20
 18000     003E                     u760_21:
 18001     003E  2848               	goto	i1l225
 18002     003F                     u760_20:
 18003     003F                     i1l6173:
 18004     003F  0020               	movlb	0	; select bank0
 18005     0040  1C91               	btfss	17,1	;volatile
 18006     0041  2843               	goto	u761_21
 18007     0042  2844               	goto	u761_20
 18008     0043                     u761_21:
 18009     0043  2848               	goto	i1l225
 18010     0044                     u761_20:
 18011     0044                     i1l6175:
 18012                           
 18013                           ;mcc_generated_files/system/src/interrupt.c: 77:         {;mcc_generated_files/system/sr
      +                          c/interrupt.c: 78:             TMR2_ISR();
 18014     0044  319C  244E  3180   	fcall	_TMR2_ISR
 18015                           
 18016                           ;mcc_generated_files/system/src/interrupt.c: 79:         }
 18017     0047  2856               	goto	i1l230
 18018     0048                     i1l225:	
 18019                           ;mcc_generated_files/system/src/interrupt.c: 80:         else if(PIE1bits.ADIE == 1 && P
      +                          IR1bits.ADIF == 1)
 18020                           
 18021     0048  0021               	movlb	1	; select bank1
 18022     0049  1F11               	btfss	17,6	;volatile
 18023     004A  284C               	goto	u762_21
 18024     004B  284D               	goto	u762_20
 18025     004C                     u762_21:
 18026     004C  2856               	goto	i1l224
 18027     004D                     u762_20:
 18028     004D                     i1l6177:
 18029     004D  0020               	movlb	0	; select bank0
 18030     004E  1F11               	btfss	17,6	;volatile
 18031     004F  2851               	goto	u763_21
 18032     0050  2852               	goto	u763_20
 18033     0051                     u763_21:
 18034     0051  2856               	goto	i1l224
 18035     0052                     u763_20:
 18036     0052                     i1l6179:
 18037                           
 18038                           ;mcc_generated_files/system/src/interrupt.c: 81:         {;mcc_generated_files/system/sr
      +                          c/interrupt.c: 82:             ADC_ISR();
 18039     0052  319C  243F  3180   	fcall	_ADC_ISR
 18040                           
 18041                           ;mcc_generated_files/system/src/interrupt.c: 83:         }
 18042     0055  2856               	goto	i1l230
 18043     0056                     i1l224:
 18044     0056                     i1l230:
 18045     0056  107E               	bcf	int$flags,0	;clear compiler interrupt flag (level 1)
 18046     0057  0009               	retfie
 18047     0058                     __end_of_INTERRUPT_InterruptManager:
 18048                           
 18049                           	psect	text74
 18050     1C5D                     __ptext74:	
 18051 ;; *************** function _TMR4_ISR *****************
 18052 ;; Defined at:
 18053 ;;		line 114 in file "mcc_generated_files/timer/src/tmr4.c"
 18054 ;; Parameters:    Size  Location     Type
 18055 ;;		None
 18056 ;; Auto vars:     Size  Location     Type
 18057 ;;		None
 18058 ;; Return value:  Size  Location     Type
 18059 ;;                  1    wreg      void 
 18060 ;; Registers used:
 18061 ;;		wreg, status,2, status,0, pclath, cstack
 18062 ;; Tracked objects:
 18063 ;;		On entry : 0/0
 18064 ;;		On exit  : 0/0
 18065 ;;		Unchanged: 0/0
 18066 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 18067 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18068 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18069 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18070 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18071 ;;Total ram usage:        0 bytes
 18072 ;; Hardware stack levels used: 1
 18073 ;; Hardware stack levels required when called: 3
 18074 ;; This function calls:
 18075 ;;		NULL
 18076 ;;		_TMR4_DefaultPeriodMatchCallback
 18077 ;;		_controller
 18078 ;; This function is called by:
 18079 ;;		_INTERRUPT_InterruptManager
 18080 ;; This function uses a non-reentrant model
 18081 ;;
 18082                           
 18083     1C5D                     _TMR4_ISR:	
 18084                           ;psect for function _TMR4_ISR
 18085                           
 18086     1C5D                     i1l6041:	
 18087                           ;incstack = 0
 18088                           ; Regs used in _TMR4_ISR: [wreg+status,2+status,0+pclath+cstack]
 18089                           
 18090                           
 18091                           ;mcc_generated_files/timer/src/tmr4.c: 117:     if(((void*)0) != TMR4_PeriodMatchCallbac
      +                          k)
 18092     1C5D  0022               	movlb	2	; select bank2
 18093     1C5E  0860               	movf	_TMR4_PeriodMatchCallback^(0+256),w
 18094     1C5F  0461               	iorwf	(_TMR4_PeriodMatchCallback+1)^(0+256),w
 18095     1C60  1903               	btfsc	3,2
 18096     1C61  2C63               	goto	u740_21
 18097     1C62  2C64               	goto	u740_20
 18098     1C63                     u740_21:
 18099     1C63  2C69               	goto	i1l6045
 18100     1C64                     u740_20:
 18101     1C64                     i1l6043:
 18102                           
 18103                           ;mcc_generated_files/timer/src/tmr4.c: 118:     {;mcc_generated_files/timer/src/tmr4.c: 
      +                          119:         TMR4_PeriodMatchCallback();
 18104     1C64  0861               	movf	(_TMR4_PeriodMatchCallback+1)^(0+256),w
 18105     1C65  008A               	movwf	10
 18106     1C66  0860               	movf	_TMR4_PeriodMatchCallback^(0+256),w
 18107     1C67  000A               	callw
 18108     1C68  319C               	pagesel	$
 18109     1C69                     i1l6045:
 18110                           
 18111                           ;mcc_generated_files/timer/src/tmr4.c: 121:     PIR2bits.TMR4IF = 0;
 18112     1C69  0020               	movlb	0	; select bank0
 18113     1C6A  1092               	bcf	18,1	;volatile
 18114     1C6B                     i1l473:
 18115     1C6B  0008               	return
 18116     1C6C                     __end_of_TMR4_ISR:
 18117                           
 18118                           	psect	text75
 18119     0002                     __ptext75:	
 18120 ;; *************** function _TMR4_DefaultPeriodMatchCallback *****************
 18121 ;; Defined at:
 18122 ;;		line 129 in file "mcc_generated_files/timer/src/tmr4.c"
 18123 ;; Parameters:    Size  Location     Type
 18124 ;;		None
 18125 ;; Auto vars:     Size  Location     Type
 18126 ;;		None
 18127 ;; Return value:  Size  Location     Type
 18128 ;;                  1    wreg      void 
 18129 ;; Registers used:
 18130 ;;		None
 18131 ;; Tracked objects:
 18132 ;;		On entry : 0/0
 18133 ;;		On exit  : 0/0
 18134 ;;		Unchanged: 0/0
 18135 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 18136 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18137 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18138 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18139 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18140 ;;Total ram usage:        0 bytes
 18141 ;; Hardware stack levels used: 1
 18142 ;; This function calls:
 18143 ;;		Nothing
 18144 ;; This function is called by:
 18145 ;;		_TMR4_Initialize
 18146 ;;		_TMR4_ISR
 18147 ;; This function uses a non-reentrant model
 18148 ;;
 18149                           
 18150     0002                     _TMR4_DefaultPeriodMatchCallback:	
 18151                           ;psect for function _TMR4_DefaultPeriodMatchCallback
 18152                           
 18153     0002                     i1l479:	
 18154                           ;incstack = 0
 18155                           ; Regs used in _TMR4_DefaultPeriodMatchCallback: []
 18156                           
 18157     0002  0008               	return
 18158     0003                     __end_of_TMR4_DefaultPeriodMatchCallback:
 18159                           
 18160                           	psect	text76
 18161     08BF                     __ptext76:	
 18162 ;; *************** function _controller *****************
 18163 ;; Defined at:
 18164 ;;		line 13 in file "controller.c"
 18165 ;; Parameters:    Size  Location     Type
 18166 ;;		None
 18167 ;; Auto vars:     Size  Location     Type
 18168 ;;  error           2   51[BANK0 ] short 
 18169 ;;  I               2   49[BANK0 ] short 
 18170 ;;  P               2   47[BANK0 ] short 
 18171 ;; Return value:  Size  Location     Type
 18172 ;;                  1    wreg      void 
 18173 ;; Registers used:
 18174 ;;		wreg, status,2, status,0, pclath, cstack
 18175 ;; Tracked objects:
 18176 ;;		On entry : 0/0
 18177 ;;		On exit  : 0/0
 18178 ;;		Unchanged: 0/0
 18179 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 18180 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18181 ;;      Locals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18182 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18183 ;;      Totals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18184 ;;Total ram usage:        7 bytes
 18185 ;; Hardware stack levels used: 1
 18186 ;; Hardware stack levels required when called: 2
 18187 ;; This function calls:
 18188 ;;		_pwm_fan_LoadDutyValue
 18189 ;;		i1___fladd
 18190 ;;		i1___flmul
 18191 ;;		i1___fltol
 18192 ;;		i1___xxtofl
 18193 ;;		i1_getHoogtesensor
 18194 ;; This function is called by:
 18195 ;;		_main
 18196 ;;		_TMR4_ISR
 18197 ;; This function uses a non-reentrant model
 18198 ;;
 18199                           
 18200     08BF                     _controller:	
 18201                           ;psect for function _controller
 18202                           
 18203     08BF                     i1l6005:	
 18204                           ;incstack = 0
 18205                           ; Regs used in _controller: [wreg+status,2+status,0+pclath+cstack]
 18206                           
 18207                           
 18208                           ;controller.c: 14:     hoogte_bal = getHoogtesensor();
 18209     08BF  319B  2354  3188   	fcall	i1_getHoogtesensor
 18210     08C2  0871               	movf	?i1_getHoogtesensor+1,w
 18211     08C3  0022               	movlb	2	; select bank2
 18212     08C4  00C9               	movwf	(_hoogte_bal+1)^(0+256)
 18213     08C5  0870               	movf	?i1_getHoogtesensor,w
 18214     08C6  00C8               	movwf	_hoogte_bal^(0+256)
 18215     08C7                     i1l6007:
 18216                           
 18217                           ;controller.c: 18:     int16_t error = setpoint - hoogte_bal;
 18218     08C7  0848               	movf	_hoogte_bal^(0+256),w
 18219     08C8  0020               	movlb	0	; select bank0
 18220     08C9  026C               	subwf	_setpoint,w
 18221     08CA  00D3               	movwf	controller@error
 18222     08CB  0022               	movlb	2	; select bank2
 18223     08CC  0849               	movf	(_hoogte_bal+1)^(0+256),w
 18224     08CD  0020               	movlb	0	; select bank0
 18225     08CE  3B6D               	subwfb	_setpoint+1,w
 18226     08CF  00D4               	movwf	controller@error+1
 18227     08D0                     i1l6009:
 18228                           
 18229                           ;controller.c: 20:     integraal += error * 0.0005;
 18230     08D0  0853               	movf	controller@error,w
 18231     08D1  00F0               	movwf	i1___xxtofl@val
 18232     08D2  0854               	movf	controller@error+1,w
 18233     08D3  00F1               	movwf	i1___xxtofl@val+1
 18234     08D4  0D89               	rlf	9,f
 18235     08D5  3B89               	subwfb	9,f
 18236     08D6  0989               	comf	9,f
 18237     08D7  00F2               	movwf	i1___xxtofl@val+2
 18238     08D8  00F3               	movwf	i1___xxtofl@val+3
 18239     08D9  3001               	movlw	1
 18240     08DA  3196  260C  3188   	fcall	i1___xxtofl
 18241     08DD  0873               	movf	?i1___xxtofl+3,w
 18242     08DE  0020               	movlb	0	; select bank0
 18243     08DF  00A7               	movwf	i1___flmul@a+3
 18244     08E0  0872               	movf	?i1___xxtofl+2,w
 18245     08E1  00A6               	movwf	i1___flmul@a+2
 18246     08E2  0871               	movf	?i1___xxtofl+1,w
 18247     08E3  00A5               	movwf	i1___flmul@a+1
 18248     08E4  0870               	movf	?i1___xxtofl,w
 18249     08E5  00A4               	movwf	i1___flmul@a
 18250     08E6  303A               	movlw	58
 18251     08E7  00A3               	movwf	i1___flmul@b+3
 18252     08E8  3003               	movlw	3
 18253     08E9  00A2               	movwf	i1___flmul@b+2
 18254     08EA  3012               	movlw	18
 18255     08EB  00A1               	movwf	i1___flmul@b+1
 18256     08EC  306F               	movlw	111
 18257     08ED  00A0               	movwf	i1___flmul@b
 18258     08EE  3182  22C9  3188   	fcall	i1___flmul
 18259     08F1  0020               	movlb	0	; select bank0
 18260     08F2  0823               	movf	?i1___flmul+3,w
 18261     08F3  00BD               	movwf	i1___fladd@b+3
 18262     08F4  0822               	movf	?i1___flmul+2,w
 18263     08F5  00BC               	movwf	i1___fladd@b+2
 18264     08F6  0821               	movf	?i1___flmul+1,w
 18265     08F7  00BB               	movwf	i1___fladd@b+1
 18266     08F8  0820               	movf	?i1___flmul,w
 18267     08F9  00BA               	movwf	i1___fladd@b
 18268     08FA  0022               	movlb	2	; select bank2
 18269     08FB  0843               	movf	(_integraal+3)^(0+256),w
 18270     08FC  0020               	movlb	0	; select bank0
 18271     08FD  00C1               	movwf	i1___fladd@a+3
 18272     08FE  0022               	movlb	2	; select bank2
 18273     08FF  0842               	movf	(_integraal+2)^(0+256),w
 18274     0900  0020               	movlb	0	; select bank0
 18275     0901  00C0               	movwf	i1___fladd@a+2
 18276     0902  0022               	movlb	2	; select bank2
 18277     0903  0841               	movf	(_integraal+1)^(0+256),w
 18278     0904  0020               	movlb	0	; select bank0
 18279     0905  00BF               	movwf	i1___fladd@a+1
 18280     0906  0022               	movlb	2	; select bank2
 18281     0907  0840               	movf	_integraal^(0+256),w
 18282     0908  0020               	movlb	0	; select bank0
 18283     0909  00BE               	movwf	i1___fladd@a
 18284     090A  318D  25F4  3188   	fcall	i1___fladd
 18285     090D  0020               	movlb	0	; select bank0
 18286     090E  083D               	movf	?i1___fladd+3,w
 18287     090F  0022               	movlb	2	; select bank2
 18288     0910  00C3               	movwf	(_integraal+3)^(0+256)
 18289     0911  0020               	movlb	0	; select bank0
 18290     0912  083C               	movf	?i1___fladd+2,w
 18291     0913  0022               	movlb	2	; select bank2
 18292     0914  00C2               	movwf	(_integraal+2)^(0+256)
 18293     0915  0020               	movlb	0	; select bank0
 18294     0916  083B               	movf	?i1___fladd+1,w
 18295     0917  0022               	movlb	2	; select bank2
 18296     0918  00C1               	movwf	(_integraal+1)^(0+256)
 18297     0919  0020               	movlb	0	; select bank0
 18298     091A  083A               	movf	?i1___fladd,w
 18299     091B  0022               	movlb	2	; select bank2
 18300     091C  00C0               	movwf	_integraal^(0+256)
 18301     091D                     i1l6011:
 18302                           
 18303                           ;controller.c: 22:     int16_t P = kp * error;
 18304     091D  0020               	movlb	0	; select bank0
 18305     091E  0853               	movf	controller@error,w
 18306     091F  00F0               	movwf	i1___xxtofl@val
 18307     0920  0854               	movf	controller@error+1,w
 18308     0921  00F1               	movwf	i1___xxtofl@val+1
 18309     0922  0D89               	rlf	9,f
 18310     0923  3B89               	subwfb	9,f
 18311     0924  0989               	comf	9,f
 18312     0925  00F2               	movwf	i1___xxtofl@val+2
 18313     0926  00F3               	movwf	i1___xxtofl@val+3
 18314     0927  3001               	movlw	1
 18315     0928  3196  260C  3188   	fcall	i1___xxtofl
 18316     092B  0873               	movf	?i1___xxtofl+3,w
 18317     092C  0020               	movlb	0	; select bank0
 18318     092D  00A7               	movwf	i1___flmul@a+3
 18319     092E  0872               	movf	?i1___xxtofl+2,w
 18320     092F  00A6               	movwf	i1___flmul@a+2
 18321     0930  0871               	movf	?i1___xxtofl+1,w
 18322     0931  00A5               	movwf	i1___flmul@a+1
 18323     0932  0870               	movf	?i1___xxtofl,w
 18324     0933  00A4               	movwf	i1___flmul@a
 18325     0934  0022               	movlb	2	; select bank2
 18326     0935  086F               	movf	(_kp+3)^(0+256),w
 18327     0936  0020               	movlb	0	; select bank0
 18328     0937  00A3               	movwf	i1___flmul@b+3
 18329     0938  0022               	movlb	2	; select bank2
 18330     0939  086E               	movf	(_kp+2)^(0+256),w
 18331     093A  0020               	movlb	0	; select bank0
 18332     093B  00A2               	movwf	i1___flmul@b+2
 18333     093C  0022               	movlb	2	; select bank2
 18334     093D  086D               	movf	(_kp+1)^(0+256),w
 18335     093E  0020               	movlb	0	; select bank0
 18336     093F  00A1               	movwf	i1___flmul@b+1
 18337     0940  0022               	movlb	2	; select bank2
 18338     0941  086C               	movf	_kp^(0+256),w
 18339     0942  0020               	movlb	0	; select bank0
 18340     0943  00A0               	movwf	i1___flmul@b
 18341     0944  3182  22C9  3188   	fcall	i1___flmul
 18342     0947  0020               	movlb	0	; select bank0
 18343     0948  0823               	movf	?i1___flmul+3,w
 18344     0949  00BD               	movwf	i1___fltol@f1+3
 18345     094A  0822               	movf	?i1___flmul+2,w
 18346     094B  00BC               	movwf	i1___fltol@f1+2
 18347     094C  0821               	movf	?i1___flmul+1,w
 18348     094D  00BB               	movwf	i1___fltol@f1+1
 18349     094E  0820               	movf	?i1___flmul,w
 18350     094F  00BA               	movwf	i1___fltol@f1
 18351     0950  3192  22CB  3188   	fcall	i1___fltol
 18352     0953  0020               	movlb	0	; select bank0
 18353     0954  083B               	movf	?i1___fltol+1,w
 18354     0955  00D0               	movwf	controller@P+1
 18355     0956  083A               	movf	?i1___fltol,w
 18356     0957  00CF               	movwf	controller@P
 18357     0958                     i1l6013:
 18358                           
 18359                           ;controller.c: 23:     int16_t I = ki * integraal;
 18360     0958  0022               	movlb	2	; select bank2
 18361     0959  086B               	movf	(_ki+3)^(0+256),w
 18362     095A  0020               	movlb	0	; select bank0
 18363     095B  00A7               	movwf	i1___flmul@a+3
 18364     095C  0022               	movlb	2	; select bank2
 18365     095D  086A               	movf	(_ki+2)^(0+256),w
 18366     095E  0020               	movlb	0	; select bank0
 18367     095F  00A6               	movwf	i1___flmul@a+2
 18368     0960  0022               	movlb	2	; select bank2
 18369     0961  0869               	movf	(_ki+1)^(0+256),w
 18370     0962  0020               	movlb	0	; select bank0
 18371     0963  00A5               	movwf	i1___flmul@a+1
 18372     0964  0022               	movlb	2	; select bank2
 18373     0965  0868               	movf	_ki^(0+256),w
 18374     0966  0020               	movlb	0	; select bank0
 18375     0967  00A4               	movwf	i1___flmul@a
 18376     0968  0022               	movlb	2	; select bank2
 18377     0969  0843               	movf	(_integraal+3)^(0+256),w
 18378     096A  0020               	movlb	0	; select bank0
 18379     096B  00A3               	movwf	i1___flmul@b+3
 18380     096C  0022               	movlb	2	; select bank2
 18381     096D  0842               	movf	(_integraal+2)^(0+256),w
 18382     096E  0020               	movlb	0	; select bank0
 18383     096F  00A2               	movwf	i1___flmul@b+2
 18384     0970  0022               	movlb	2	; select bank2
 18385     0971  0841               	movf	(_integraal+1)^(0+256),w
 18386     0972  0020               	movlb	0	; select bank0
 18387     0973  00A1               	movwf	i1___flmul@b+1
 18388     0974  0022               	movlb	2	; select bank2
 18389     0975  0840               	movf	_integraal^(0+256),w
 18390     0976  0020               	movlb	0	; select bank0
 18391     0977  00A0               	movwf	i1___flmul@b
 18392     0978  3182  22C9  3188   	fcall	i1___flmul
 18393     097B  0020               	movlb	0	; select bank0
 18394     097C  0823               	movf	?i1___flmul+3,w
 18395     097D  00BD               	movwf	i1___fltol@f1+3
 18396     097E  0822               	movf	?i1___flmul+2,w
 18397     097F  00BC               	movwf	i1___fltol@f1+2
 18398     0980  0821               	movf	?i1___flmul+1,w
 18399     0981  00BB               	movwf	i1___fltol@f1+1
 18400     0982  0820               	movf	?i1___flmul,w
 18401     0983  00BA               	movwf	i1___fltol@f1
 18402     0984  3192  22CB  3188   	fcall	i1___fltol
 18403     0987  0020               	movlb	0	; select bank0
 18404     0988  083B               	movf	?i1___fltol+1,w
 18405     0989  00D2               	movwf	controller@I+1
 18406     098A  083A               	movf	?i1___fltol,w
 18407     098B  00D1               	movwf	controller@I
 18408     098C                     i1l6015:
 18409                           
 18410                           ;controller.c: 25:     dutycycle = P + I;
 18411     098C  0851               	movf	controller@I,w
 18412     098D  074F               	addwf	controller@P,w
 18413     098E  00D7               	movwf	_dutycycle
 18414     098F  0852               	movf	controller@I+1,w
 18415     0990  3D50               	addwfc	controller@P+1,w
 18416     0991  00D8               	movwf	_dutycycle+1
 18417     0992                     i1l6017:
 18418                           
 18419                           ;controller.c: 27:     if (dutycycle > 1023 && error > 0) {
 18420     0992  3004               	movlw	4
 18421     0993  0258               	subwf	_dutycycle+1,w
 18422     0994  3000               	movlw	0
 18423     0995  1903               	skipnz
 18424     0996  0257               	subwf	_dutycycle,w
 18425     0997  1C03               	skipc
 18426     0998  299A               	goto	u735_21
 18427     0999  299B               	goto	u735_20
 18428     099A                     u735_21:
 18429     099A  29AE               	goto	i1l6023
 18430     099B                     u735_20:
 18431     099B                     i1l6019:
 18432     099B  0854               	movf	controller@error+1,w
 18433     099C  3A80               	xorlw	128
 18434     099D  00CE               	movwf	??_controller
 18435     099E  3080               	movlw	128
 18436     099F  024E               	subwf	??_controller,w
 18437     09A0  1D03               	skipz
 18438     09A1  29A4               	goto	u736_25
 18439     09A2  3001               	movlw	1
 18440     09A3  0253               	subwf	controller@error,w
 18441     09A4                     u736_25:
 18442     09A4  1C03               	skipc
 18443     09A5  29A7               	goto	u736_21
 18444     09A6  29A8               	goto	u736_20
 18445     09A7                     u736_21:
 18446     09A7  29AE               	goto	i1l6023
 18447     09A8                     u736_20:
 18448     09A8                     i1l6021:
 18449                           
 18450                           ;controller.c: 28:         dutycycle = 1023;
 18451     09A8  30FF               	movlw	255
 18452     09A9  0020               	movlb	0	; select bank0
 18453     09AA  00D7               	movwf	_dutycycle
 18454     09AB  3003               	movlw	3
 18455     09AC  00D8               	movwf	_dutycycle+1
 18456                           
 18457                           ;controller.c: 29:     } else if (dutycycle > 1023 && error < 0) {
 18458     09AD  29BF               	goto	i1l6031
 18459     09AE                     i1l6023:
 18460     09AE  3004               	movlw	4
 18461     09AF  0020               	movlb	0	; select bank0
 18462     09B0  0258               	subwf	_dutycycle+1,w
 18463     09B1  3000               	movlw	0
 18464     09B2  1903               	skipnz
 18465     09B3  0257               	subwf	_dutycycle,w
 18466     09B4  1C03               	skipc
 18467     09B5  29B7               	goto	u737_21
 18468     09B6  29B8               	goto	u737_20
 18469     09B7                     u737_21:
 18470     09B7  29BF               	goto	i1l926
 18471     09B8                     u737_20:
 18472     09B8                     i1l6025:
 18473     09B8  1FD4               	btfss	controller@error+1,7
 18474     09B9  29BB               	goto	u738_21
 18475     09BA  29BC               	goto	u738_20
 18476     09BB                     u738_21:
 18477     09BB  29BF               	goto	i1l926
 18478     09BC                     u738_20:
 18479     09BC                     i1l6027:
 18480                           
 18481                           ;controller.c: 30:         dutycycle = 0;
 18482     09BC  01D7               	clrf	_dutycycle
 18483     09BD  01D8               	clrf	_dutycycle+1
 18484                           
 18485                           ;controller.c: 31:     } else if (dutycycle < 0) {
 18486     09BE  29BF               	goto	i1l6031
 18487     09BF                     i1l926:
 18488     09BF                     i1l6031:
 18489                           
 18490                           ;controller.c: 35:     pwm_fan_LoadDutyValue(dutycycle);
 18491     09BF  0858               	movf	_dutycycle+1,w
 18492     09C0  00F1               	movwf	pwm_fan_LoadDutyValue@dutyValue+1
 18493     09C1  0857               	movf	_dutycycle,w
 18494     09C2  00F0               	movwf	pwm_fan_LoadDutyValue@dutyValue
 18495     09C3  319D  2513  3188   	fcall	_pwm_fan_LoadDutyValue
 18496     09C6                     i1l928:
 18497     09C6  0008               	return
 18498     09C7                     __end_of_controller:
 18499                           
 18500                           	psect	text77
 18501     1B54                     __ptext77:	
 18502 ;; *************** function i1_getHoogtesensor *****************
 18503 ;; Defined at:
 18504 ;;		line 33 in file "adcMeasurements.c"
 18505 ;; Parameters:    Size  Location     Type
 18506 ;;		None
 18507 ;; Auto vars:     Size  Location     Type
 18508 ;;		None
 18509 ;; Return value:  Size  Location     Type
 18510 ;;                  2    0[COMMON] unsigned short 
 18511 ;; Registers used:
 18512 ;;		wreg
 18513 ;; Tracked objects:
 18514 ;;		On entry : 0/0
 18515 ;;		On exit  : 0/0
 18516 ;;		Unchanged: 0/0
 18517 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 18518 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18519 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18520 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18521 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18522 ;;Total ram usage:        2 bytes
 18523 ;; Hardware stack levels used: 1
 18524 ;; This function calls:
 18525 ;;		Nothing
 18526 ;; This function is called by:
 18527 ;;		_controller
 18528 ;; This function uses a non-reentrant model
 18529 ;;
 18530                           
 18531     1B54                     i1_getHoogtesensor:	
 18532                           ;psect for function i1_getHoogtesensor
 18533                           
 18534     1B54                     i1l5281:	
 18535                           ;incstack = 0
 18536                           ; Regs used in i1_getHoogtesensor: [wreg]
 18537                           
 18538                           
 18539                           ;adcMeasurements.c: 34:     return ADC_hoogtesensor;
 18540     1B54  0020               	movlb	0	; select bank0
 18541     1B55  085A               	movf	_ADC_hoogtesensor+1,w	;volatile
 18542     1B56  00F1               	movwf	?i1_getHoogtesensor+1
 18543     1B57  0859               	movf	_ADC_hoogtesensor,w	;volatile
 18544     1B58  00F0               	movwf	?i1_getHoogtesensor
 18545     1B59                     i1l820:
 18546     1B59  0008               	return
 18547     1B5A                     __end_ofi1_getHoogtesensor:
 18548                           
 18549                           	psect	text78
 18550     160C                     __ptext78:	
 18551 ;; *************** function i1___xxtofl *****************
 18552 ;; Defined at:
 18553 ;;		line 10 in file "C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\xxtofl.c"
 18554 ;; Parameters:    Size  Location     Type
 18555 ;;  sign            1    wreg     unsigned char 
 18556 ;;  val             4    0[COMMON] long 
 18557 ;; Auto vars:     Size  Location     Type
 18558 ;;  sign            1    8[COMMON] unsigned char 
 18559 ;;  arg             4   10[COMMON] unsigned long 
 18560 ;;  exp             1    9[COMMON] unsigned char 
 18561 ;; Return value:  Size  Location     Type
 18562 ;;                  4    0[COMMON] unsigned char 
 18563 ;; Registers used:
 18564 ;;		wreg, status,2, status,0
 18565 ;; Tracked objects:
 18566 ;;		On entry : 0/0
 18567 ;;		On exit  : 0/0
 18568 ;;		Unchanged: 0/0
 18569 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 18570 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18571 ;;      Locals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18572 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18573 ;;      Totals:        14       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18574 ;;Total ram usage:       14 bytes
 18575 ;; Hardware stack levels used: 1
 18576 ;; This function calls:
 18577 ;;		Nothing
 18578 ;; This function is called by:
 18579 ;;		_controller
 18580 ;; This function uses a non-reentrant model
 18581 ;;
 18582                           
 18583     160C                     i1___xxtofl:	
 18584                           ;psect for function i1___xxtofl
 18585                           
 18586                           
 18587                           ;incstack = 0
 18588                           ; Regs used in i1___xxtofl: [wreg+status,2+status,0]
 18589                           ;i1___xxtofl@sign stored from wreg
 18590     160C  00F8               	movwf	i1___xxtofl@sign
 18591     160D                     i1l5657:
 18592     160D  0878               	movf	i1___xxtofl@sign,w
 18593     160E  1903               	btfsc	3,2
 18594     160F  2E11               	goto	u704_21
 18595     1610  2E12               	goto	u704_20
 18596     1611                     u704_21:
 18597     1611  2E26               	goto	i1l5663
 18598     1612                     u704_20:
 18599     1612                     i1l5659:
 18600     1612  1FF3               	btfss	i1___xxtofl@val+3,7
 18601     1613  2E15               	goto	u705_21
 18602     1614  2E16               	goto	u705_20
 18603     1615                     u705_21:
 18604     1615  2E26               	goto	i1l5663
 18605     1616                     u705_20:
 18606     1616                     i1l5661:
 18607     1616  0970               	comf	i1___xxtofl@val,w
 18608     1617  00FA               	movwf	i1___xxtofl@arg
 18609     1618  0971               	comf	i1___xxtofl@val+1,w
 18610     1619  00FB               	movwf	i1___xxtofl@arg+1
 18611     161A  0972               	comf	i1___xxtofl@val+2,w
 18612     161B  00FC               	movwf	i1___xxtofl@arg+2
 18613     161C  0973               	comf	i1___xxtofl@val+3,w
 18614     161D  00FD               	movwf	i1___xxtofl@arg+3
 18615     161E  0AFA               	incf	i1___xxtofl@arg,f
 18616     161F  1903               	skipnz
 18617     1620  0AFB               	incf	i1___xxtofl@arg+1,f
 18618     1621  1903               	skipnz
 18619     1622  0AFC               	incf	i1___xxtofl@arg+2,f
 18620     1623  1903               	skipnz
 18621     1624  0AFD               	incf	i1___xxtofl@arg+3,f
 18622     1625  2E2E               	goto	i1l1606
 18623     1626                     i1l5663:
 18624     1626  0873               	movf	i1___xxtofl@val+3,w
 18625     1627  00FD               	movwf	i1___xxtofl@arg+3
 18626     1628  0872               	movf	i1___xxtofl@val+2,w
 18627     1629  00FC               	movwf	i1___xxtofl@arg+2
 18628     162A  0871               	movf	i1___xxtofl@val+1,w
 18629     162B  00FB               	movwf	i1___xxtofl@arg+1
 18630     162C  0870               	movf	i1___xxtofl@val,w
 18631     162D  00FA               	movwf	i1___xxtofl@arg
 18632     162E                     i1l1606:
 18633     162E  0873               	movf	i1___xxtofl@val+3,w
 18634     162F  0472               	iorwf	i1___xxtofl@val+2,w
 18635     1630  0471               	iorwf	i1___xxtofl@val+1,w
 18636     1631  0470               	iorwf	i1___xxtofl@val,w
 18637     1632  1D03               	skipz
 18638     1633  2E35               	goto	u706_21
 18639     1634  2E36               	goto	u706_20
 18640     1635                     u706_21:
 18641     1635  2E3F               	goto	i1l1607
 18642     1636                     u706_20:
 18643     1636                     i1l5665:
 18644     1636  3000               	movlw	0
 18645     1637  00F3               	movwf	?i1___xxtofl+3
 18646     1638  3000               	movlw	0
 18647     1639  00F2               	movwf	?i1___xxtofl+2
 18648     163A  3000               	movlw	0
 18649     163B  00F1               	movwf	?i1___xxtofl+1
 18650     163C  3000               	movlw	0
 18651     163D  00F0               	movwf	?i1___xxtofl
 18652     163E  2EAF               	goto	i1l1608
 18653     163F                     i1l1607:
 18654     163F  3096               	movlw	150
 18655     1640  00F9               	movwf	i1___xxtofl@exp
 18656     1641  2E4B               	goto	i1l5671
 18657     1642                     i1l5669:
 18658     1642  3001               	movlw	1
 18659     1643  07F9               	addwf	i1___xxtofl@exp,f
 18660     1644  3001               	movlw	1
 18661     1645                     u707_25:
 18662     1645  36FD               	lsrf	i1___xxtofl@arg+3,f
 18663     1646  0CFC               	rrf	i1___xxtofl@arg+2,f
 18664     1647  0CFB               	rrf	i1___xxtofl@arg+1,f
 18665     1648  0CFA               	rrf	i1___xxtofl@arg,f
 18666     1649  0B89               	decfsz	9,f
 18667     164A  2E45               	goto	u707_25
 18668     164B                     i1l5671:
 18669     164B  30FE               	movlw	254
 18670     164C  057D               	andwf	i1___xxtofl@arg+3,w
 18671     164D  1D03               	btfss	3,2
 18672     164E  2E50               	goto	u708_21
 18673     164F  2E51               	goto	u708_20
 18674     1650                     u708_21:
 18675     1650  2E42               	goto	i1l5669
 18676     1651                     u708_20:
 18677     1651  2E61               	goto	i1l5675
 18678     1652                     i1l5673:
 18679     1652  3001               	movlw	1
 18680     1653  07F9               	addwf	i1___xxtofl@exp,f
 18681     1654  3001               	movlw	1
 18682     1655  07FA               	addwf	i1___xxtofl@arg,f
 18683     1656  3000               	movlw	0
 18684     1657  3DFB               	addwfc	i1___xxtofl@arg+1,f
 18685     1658  3DFC               	addwfc	i1___xxtofl@arg+2,f
 18686     1659  3DFD               	addwfc	i1___xxtofl@arg+3,f
 18687     165A  3001               	movlw	1
 18688     165B                     u709_25:
 18689     165B  36FD               	lsrf	i1___xxtofl@arg+3,f
 18690     165C  0CFC               	rrf	i1___xxtofl@arg+2,f
 18691     165D  0CFB               	rrf	i1___xxtofl@arg+1,f
 18692     165E  0CFA               	rrf	i1___xxtofl@arg,f
 18693     165F  0B89               	decfsz	9,f
 18694     1660  2E5B               	goto	u709_25
 18695     1661                     i1l5675:
 18696     1661  30FF               	movlw	255
 18697     1662  057D               	andwf	i1___xxtofl@arg+3,w
 18698     1663  1D03               	btfss	3,2
 18699     1664  2E66               	goto	u710_21
 18700     1665  2E67               	goto	u710_20
 18701     1666                     u710_21:
 18702     1666  2E52               	goto	i1l5673
 18703     1667                     u710_20:
 18704     1667  2E71               	goto	i1l5679
 18705     1668                     i1l5677:
 18706     1668  3001               	movlw	1
 18707     1669  02F9               	subwf	i1___xxtofl@exp,f
 18708     166A  3001               	movlw	1
 18709     166B                     u711_25:
 18710     166B  35FA               	lslf	i1___xxtofl@arg,f
 18711     166C  0DFB               	rlf	i1___xxtofl@arg+1,f
 18712     166D  0DFC               	rlf	i1___xxtofl@arg+2,f
 18713     166E  0DFD               	rlf	i1___xxtofl@arg+3,f
 18714     166F  0B89               	decfsz	9,f
 18715     1670  2E6B               	goto	u711_25
 18716     1671                     i1l5679:
 18717     1671  1BFC               	btfsc	i1___xxtofl@arg+2,7
 18718     1672  2E74               	goto	u712_21
 18719     1673  2E75               	goto	u712_20
 18720     1674                     u712_21:
 18721     1674  2E7B               	goto	i1l1619
 18722     1675                     u712_20:
 18723     1675                     i1l5681:
 18724     1675  3002               	movlw	2
 18725     1676  0279               	subwf	i1___xxtofl@exp,w
 18726     1677  1803               	skipnc
 18727     1678  2E7A               	goto	u713_21
 18728     1679  2E7B               	goto	u713_20
 18729     167A                     u713_21:
 18730     167A  2E68               	goto	i1l5677
 18731     167B                     u713_20:
 18732     167B                     i1l1619:
 18733     167B  1879               	btfsc	i1___xxtofl@exp,0
 18734     167C  2E7E               	goto	u714_21
 18735     167D  2E7F               	goto	u714_20
 18736     167E                     u714_21:
 18737     167E  2E87               	goto	i1l1620
 18738     167F                     u714_20:
 18739     167F                     i1l5683:
 18740     167F  30FF               	movlw	255
 18741     1680  05FA               	andwf	i1___xxtofl@arg,f
 18742     1681  30FF               	movlw	255
 18743     1682  05FB               	andwf	i1___xxtofl@arg+1,f
 18744     1683  307F               	movlw	127
 18745     1684  05FC               	andwf	i1___xxtofl@arg+2,f
 18746     1685  30FF               	movlw	255
 18747     1686  05FD               	andwf	i1___xxtofl@arg+3,f
 18748     1687                     i1l1620:
 18749     1687  1003               	clrc
 18750     1688  0CF9               	rrf	i1___xxtofl@exp,f
 18751     1689                     i1l5685:
 18752     1689  0879               	movf	i1___xxtofl@exp,w
 18753     168A  00F4               	movwf	??i1___xxtofl
 18754     168B  01F5               	clrf	??i1___xxtofl+1
 18755     168C  01F6               	clrf	??i1___xxtofl+2
 18756     168D  01F7               	clrf	??i1___xxtofl+3
 18757     168E  3018               	movlw	24
 18758     168F                     u715_25:
 18759     168F  35F4               	lslf	??i1___xxtofl,f
 18760     1690  0DF5               	rlf	??i1___xxtofl+1,f
 18761     1691  0DF6               	rlf	??i1___xxtofl+2,f
 18762     1692  0DF7               	rlf	??i1___xxtofl+3,f
 18763     1693                     u715_20:
 18764     1693  0B89               	decfsz	9,f
 18765     1694  2E8F               	goto	u715_25
 18766     1695  0874               	movf	??i1___xxtofl,w
 18767     1696  04FA               	iorwf	i1___xxtofl@arg,f
 18768     1697  0875               	movf	??i1___xxtofl+1,w
 18769     1698  04FB               	iorwf	i1___xxtofl@arg+1,f
 18770     1699  0876               	movf	??i1___xxtofl+2,w
 18771     169A  04FC               	iorwf	i1___xxtofl@arg+2,f
 18772     169B  0877               	movf	??i1___xxtofl+3,w
 18773     169C  04FD               	iorwf	i1___xxtofl@arg+3,f
 18774     169D                     i1l5687:
 18775     169D  0878               	movf	i1___xxtofl@sign,w
 18776     169E  1903               	btfsc	3,2
 18777     169F  2EA1               	goto	u716_21
 18778     16A0  2EA2               	goto	u716_20
 18779     16A1                     u716_21:
 18780     16A1  2EA7               	goto	i1l5693
 18781     16A2                     u716_20:
 18782     16A2                     i1l5689:
 18783     16A2  1FF3               	btfss	i1___xxtofl@val+3,7
 18784     16A3  2EA5               	goto	u717_21
 18785     16A4  2EA6               	goto	u717_20
 18786     16A5                     u717_21:
 18787     16A5  2EA7               	goto	i1l5693
 18788     16A6                     u717_20:
 18789     16A6                     i1l5691:
 18790     16A6  17FD               	bsf	i1___xxtofl@arg+3,7
 18791     16A7                     i1l5693:
 18792     16A7  087D               	movf	i1___xxtofl@arg+3,w
 18793     16A8  00F3               	movwf	?i1___xxtofl+3
 18794     16A9  087C               	movf	i1___xxtofl@arg+2,w
 18795     16AA  00F2               	movwf	?i1___xxtofl+2
 18796     16AB  087B               	movf	i1___xxtofl@arg+1,w
 18797     16AC  00F1               	movwf	?i1___xxtofl+1
 18798     16AD  087A               	movf	i1___xxtofl@arg,w
 18799     16AE  00F0               	movwf	?i1___xxtofl
 18800     16AF                     i1l1608:
 18801     16AF  0008               	return
 18802     16B0                     __end_ofi1___xxtofl:
 18803                           
 18804                           	psect	text79
 18805     12CB                     __ptext79:	
 18806 ;; *************** function i1___fltol *****************
 18807 ;; Defined at:
 18808 ;;		line 43 in file "C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\fltol.c"
 18809 ;; Parameters:    Size  Location     Type
 18810 ;;  f1              4   26[BANK0 ] unsigned char 
 18811 ;; Auto vars:     Size  Location     Type
 18812 ;;  exp1            1   35[BANK0 ] unsigned char 
 18813 ;;  sign1           1   34[BANK0 ] unsigned char 
 18814 ;; Return value:  Size  Location     Type
 18815 ;;                  4   26[BANK0 ] long 
 18816 ;; Registers used:
 18817 ;;		wreg, status,2, status,0
 18818 ;; Tracked objects:
 18819 ;;		On entry : 0/0
 18820 ;;		On exit  : 0/0
 18821 ;;		Unchanged: 0/0
 18822 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 18823 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18824 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18825 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18826 ;;      Totals:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18827 ;;Total ram usage:       10 bytes
 18828 ;; Hardware stack levels used: 1
 18829 ;; This function calls:
 18830 ;;		Nothing
 18831 ;; This function is called by:
 18832 ;;		_controller
 18833 ;; This function uses a non-reentrant model
 18834 ;;
 18835                           
 18836     12CB                     i1___fltol:	
 18837                           ;psect for function i1___fltol
 18838                           
 18839     12CB                     i1l5285:	
 18840                           ;incstack = 0
 18841                           ; Regs used in i1___fltol: [wreg+status,2+status,0]
 18842                           
 18843     12CB  1003               	clrc
 18844     12CC  0020               	movlb	0	; select bank0
 18845     12CD  0D3C               	rlf	i1___fltol@f1+2,w
 18846     12CE  0D3D               	rlf	i1___fltol@f1+3,w
 18847     12CF  00C3               	movwf	i1___fltol@exp1
 18848     12D0  0843               	movf	i1___fltol@exp1,w
 18849     12D1  1D03               	btfss	3,2
 18850     12D2  2AD4               	goto	u621_21
 18851     12D3  2AD5               	goto	u621_20
 18852     12D4                     u621_21:
 18853     12D4  2ADE               	goto	i1l5291
 18854     12D5                     u621_20:
 18855     12D5                     i1l5287:
 18856     12D5  3000               	movlw	0
 18857     12D6  00BD               	movwf	?i1___fltol+3
 18858     12D7  3000               	movlw	0
 18859     12D8  00BC               	movwf	?i1___fltol+2
 18860     12D9  3000               	movlw	0
 18861     12DA  00BB               	movwf	?i1___fltol+1
 18862     12DB  3000               	movlw	0
 18863     12DC  00BA               	movwf	?i1___fltol
 18864     12DD  2B39               	goto	i1l1359
 18865     12DE                     i1l5291:
 18866     12DE  083A               	movf	i1___fltol@f1,w
 18867     12DF  00BE               	movwf	??i1___fltol
 18868     12E0  083B               	movf	i1___fltol@f1+1,w
 18869     12E1  00BF               	movwf	??i1___fltol+1
 18870     12E2  083C               	movf	i1___fltol@f1+2,w
 18871     12E3  00C0               	movwf	??i1___fltol+2
 18872     12E4  083D               	movf	i1___fltol@f1+3,w
 18873     12E5  00C1               	movwf	??i1___fltol+3
 18874     12E6  301F               	movlw	31
 18875     12E7                     u622_25:
 18876     12E7  36C1               	lsrf	??i1___fltol+3,f
 18877     12E8  0CC0               	rrf	??i1___fltol+2,f
 18878     12E9  0CBF               	rrf	??i1___fltol+1,f
 18879     12EA  0CBE               	rrf	??i1___fltol,f
 18880     12EB                     u622_20:
 18881     12EB  0B89               	decfsz	9,f
 18882     12EC  2AE7               	goto	u622_25
 18883     12ED  083E               	movf	??i1___fltol,w
 18884     12EE  00C2               	movwf	i1___fltol@sign1
 18885     12EF                     i1l5293:
 18886     12EF  17BC               	bsf	i1___fltol@f1+2,7
 18887     12F0                     i1l5295:
 18888     12F0  30FF               	movlw	255
 18889     12F1  05BA               	andwf	i1___fltol@f1,f
 18890     12F2  30FF               	movlw	255
 18891     12F3  05BB               	andwf	i1___fltol@f1+1,f
 18892     12F4  30FF               	movlw	255
 18893     12F5  05BC               	andwf	i1___fltol@f1+2,f
 18894     12F6  3000               	movlw	0
 18895     12F7  05BD               	andwf	i1___fltol@f1+3,f
 18896     12F8                     i1l5297:
 18897     12F8  3096               	movlw	150
 18898     12F9  02C3               	subwf	i1___fltol@exp1,f
 18899     12FA                     i1l5299:
 18900     12FA  1FC3               	btfss	i1___fltol@exp1,7
 18901     12FB  2AFD               	goto	u623_21
 18902     12FC  2AFE               	goto	u623_20
 18903     12FD                     u623_21:
 18904     12FD  2B14               	goto	i1l5309
 18905     12FE                     u623_20:
 18906     12FE                     i1l5301:
 18907     12FE  0843               	movf	i1___fltol@exp1,w
 18908     12FF  3A80               	xorlw	128
 18909     1300  3E97               	addlw	151
 18910     1301  1803               	skipnc
 18911     1302  2B04               	goto	u624_21
 18912     1303  2B05               	goto	u624_20
 18913     1304                     u624_21:
 18914     1304  2B06               	goto	i1l5307
 18915     1305                     u624_20:
 18916     1305  2AD5               	goto	i1l5287
 18917     1306                     i1l5307:
 18918     1306  3001               	movlw	1
 18919     1307                     u625_25:
 18920     1307  36BD               	lsrf	i1___fltol@f1+3,f
 18921     1308  0CBC               	rrf	i1___fltol@f1+2,f
 18922     1309  0CBB               	rrf	i1___fltol@f1+1,f
 18923     130A  0CBA               	rrf	i1___fltol@f1,f
 18924     130B  0B89               	decfsz	9,f
 18925     130C  2B07               	goto	u625_25
 18926     130D  3001               	movlw	1
 18927     130E  07C3               	addwf	i1___fltol@exp1,f
 18928     130F  1D03               	btfss	3,2
 18929     1310  2B12               	goto	u626_21
 18930     1311  2B13               	goto	u626_20
 18931     1312                     u626_21:
 18932     1312  2B06               	goto	i1l5307
 18933     1313                     u626_20:
 18934     1313  2B29               	goto	i1l5317
 18935     1314                     i1l5309:
 18936     1314  3020               	movlw	32
 18937     1315  0243               	subwf	i1___fltol@exp1,w
 18938     1316  1C03               	skipc
 18939     1317  2B19               	goto	u627_21
 18940     1318  2B1A               	goto	u627_20
 18941     1319                     u627_21:
 18942     1319  2B24               	goto	i1l1366
 18943     131A                     u627_20:
 18944     131A  2AD5               	goto	i1l5287
 18945     131B                     i1l5315:
 18946     131B  3001               	movlw	1
 18947     131C                     u628_25:
 18948     131C  35BA               	lslf	i1___fltol@f1,f
 18949     131D  0DBB               	rlf	i1___fltol@f1+1,f
 18950     131E  0DBC               	rlf	i1___fltol@f1+2,f
 18951     131F  0DBD               	rlf	i1___fltol@f1+3,f
 18952     1320  0B89               	decfsz	9,f
 18953     1321  2B1C               	goto	u628_25
 18954     1322  3001               	movlw	1
 18955     1323  02C3               	subwf	i1___fltol@exp1,f
 18956     1324                     i1l1366:
 18957     1324  0843               	movf	i1___fltol@exp1,w
 18958     1325  1D03               	btfss	3,2
 18959     1326  2B28               	goto	u629_21
 18960     1327  2B29               	goto	u629_20
 18961     1328                     u629_21:
 18962     1328  2B1B               	goto	i1l5315
 18963     1329                     u629_20:
 18964     1329                     i1l5317:
 18965     1329  0842               	movf	i1___fltol@sign1,w
 18966     132A  1903               	btfsc	3,2
 18967     132B  2B2D               	goto	u630_21
 18968     132C  2B2E               	goto	u630_20
 18969     132D                     u630_21:
 18970     132D  2B39               	goto	i1l1369
 18971     132E                     u630_20:
 18972     132E                     i1l5319:
 18973     132E  09BA               	comf	i1___fltol@f1,f
 18974     132F  09BB               	comf	i1___fltol@f1+1,f
 18975     1330  09BC               	comf	i1___fltol@f1+2,f
 18976     1331  09BD               	comf	i1___fltol@f1+3,f
 18977     1332  0ABA               	incf	i1___fltol@f1,f
 18978     1333  1903               	skipnz
 18979     1334  0ABB               	incf	i1___fltol@f1+1,f
 18980     1335  1903               	skipnz
 18981     1336  0ABC               	incf	i1___fltol@f1+2,f
 18982     1337  1903               	skipnz
 18983     1338  0ABD               	incf	i1___fltol@f1+3,f
 18984     1339                     i1l1369:
 18985     1339                     i1l1359:
 18986     1339  0008               	return
 18987     133A                     __end_ofi1___fltol:
 18988                           
 18989                           	psect	text80
 18990     02C9                     __ptext80:	
 18991 ;; *************** function i1___flmul *****************
 18992 ;; Defined at:
 18993 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\sprcmul.c"
 18994 ;; Parameters:    Size  Location     Type
 18995 ;;  b               4    0[BANK0 ] long 
 18996 ;;  a               4    4[BANK0 ] long 
 18997 ;; Auto vars:     Size  Location     Type
 18998 ;;  prod            4   20[BANK0 ] struct .
 18999 ;;  grs             4   14[BANK0 ] unsigned long 
 19000 ;;  temp            2   24[BANK0 ] struct .
 19001 ;;  bexp            1   19[BANK0 ] unsigned char 
 19002 ;;  aexp            1   18[BANK0 ] unsigned char 
 19003 ;;  sign            1   13[BANK0 ] unsigned char 
 19004 ;; Return value:  Size  Location     Type
 19005 ;;                  4    0[BANK0 ] unsigned char 
 19006 ;; Registers used:
 19007 ;;		wreg, status,2, status,0, pclath, cstack
 19008 ;; Tracked objects:
 19009 ;;		On entry : 0/0
 19010 ;;		On exit  : 0/0
 19011 ;;		Unchanged: 0/0
 19012 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 19013 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0
 19014 ;;      Locals:         0      13       0       0       0       0       0       0       0       0       0       0       
      +0       0
 19015 ;;      Temps:          0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0
 19016 ;;      Totals:         0      26       0       0       0       0       0       0       0       0       0       0       
      +0       0
 19017 ;;Total ram usage:       26 bytes
 19018 ;; Hardware stack levels used: 1
 19019 ;; Hardware stack levels required when called: 1
 19020 ;; This function calls:
 19021 ;;		i1__Umul8_16
 19022 ;; This function is called by:
 19023 ;;		_controller
 19024 ;; This function uses a non-reentrant model
 19025 ;;
 19026                           
 19027     02C9                     i1___flmul:	
 19028                           ;psect for function i1___flmul
 19029                           
 19030     02C9                     i1l5517:	
 19031                           ;incstack = 0
 19032                           ; Regs used in i1___flmul: [wreg+status,2+status,0+pclath+cstack]
 19033                           
 19034     02C9  0020               	movlb	0	; select bank0
 19035     02CA  0823               	movf	i1___flmul@b+3,w
 19036     02CB  3980               	andlw	128
 19037     02CC  00AD               	movwf	i1___flmul@sign
 19038     02CD                     i1l5519:
 19039     02CD  3523               	lslf	i1___flmul@b+3,w
 19040     02CE  00B3               	movwf	i1___flmul@bexp
 19041     02CF                     i1l5521:
 19042     02CF  1FA2               	btfss	i1___flmul@b+2,7
 19043     02D0  2AD2               	goto	u677_21
 19044     02D1  2AD3               	goto	u677_20
 19045     02D2                     u677_21:
 19046     02D2  2AD4               	goto	i1l5525
 19047     02D3                     u677_20:
 19048     02D3                     i1l5523:
 19049     02D3  1433               	bsf	i1___flmul@bexp,0
 19050     02D4                     i1l5525:
 19051     02D4  0833               	movf	i1___flmul@bexp,w
 19052     02D5  1903               	btfsc	3,2
 19053     02D6  2AD8               	goto	u678_21
 19054     02D7  2AD9               	goto	u678_20
 19055     02D8                     u678_21:
 19056     02D8  2AE8               	goto	i1l5533
 19057     02D9                     u678_20:
 19058     02D9                     i1l5527:
 19059     02D9  0A33               	incf	i1___flmul@bexp,w
 19060     02DA  1D03               	btfss	3,2
 19061     02DB  2ADD               	goto	u679_21
 19062     02DC  2ADE               	goto	u679_20
 19063     02DD                     u679_21:
 19064     02DD  2AE6               	goto	i1l5531
 19065     02DE                     u679_20:
 19066     02DE                     i1l5529:
 19067     02DE  3000               	movlw	0
 19068     02DF  00A3               	movwf	i1___flmul@b+3
 19069     02E0  3000               	movlw	0
 19070     02E1  00A2               	movwf	i1___flmul@b+2
 19071     02E2  3000               	movlw	0
 19072     02E3  00A1               	movwf	i1___flmul@b+1
 19073     02E4  3000               	movlw	0
 19074     02E5  00A0               	movwf	i1___flmul@b
 19075     02E6                     i1l5531:
 19076     02E6  17A2               	bsf	i1___flmul@b+2,7
 19077     02E7  2AF0               	goto	i1l5535
 19078     02E8                     i1l5533:
 19079     02E8  3000               	movlw	0
 19080     02E9  00A3               	movwf	i1___flmul@b+3
 19081     02EA  3000               	movlw	0
 19082     02EB  00A2               	movwf	i1___flmul@b+2
 19083     02EC  3000               	movlw	0
 19084     02ED  00A1               	movwf	i1___flmul@b+1
 19085     02EE  3000               	movlw	0
 19086     02EF  00A0               	movwf	i1___flmul@b
 19087     02F0                     i1l5535:
 19088     02F0  0827               	movf	i1___flmul@a+3,w
 19089     02F1  3980               	andlw	128
 19090     02F2  06AD               	xorwf	i1___flmul@sign,f
 19091     02F3                     i1l5537:
 19092     02F3  3527               	lslf	i1___flmul@a+3,w
 19093     02F4  00B2               	movwf	i1___flmul@aexp
 19094     02F5                     i1l5539:
 19095     02F5  1FA6               	btfss	i1___flmul@a+2,7
 19096     02F6  2AF8               	goto	u680_21
 19097     02F7  2AF9               	goto	u680_20
 19098     02F8                     u680_21:
 19099     02F8  2AFA               	goto	i1l5543
 19100     02F9                     u680_20:
 19101     02F9                     i1l5541:
 19102     02F9  1432               	bsf	i1___flmul@aexp,0
 19103     02FA                     i1l5543:
 19104     02FA  0832               	movf	i1___flmul@aexp,w
 19105     02FB  1903               	btfsc	3,2
 19106     02FC  2AFE               	goto	u681_21
 19107     02FD  2AFF               	goto	u681_20
 19108     02FE                     u681_21:
 19109     02FE  2B0E               	goto	i1l5551
 19110     02FF                     u681_20:
 19111     02FF                     i1l5545:
 19112     02FF  0A32               	incf	i1___flmul@aexp,w
 19113     0300  1D03               	btfss	3,2
 19114     0301  2B03               	goto	u682_21
 19115     0302  2B04               	goto	u682_20
 19116     0303                     u682_21:
 19117     0303  2B0C               	goto	i1l5549
 19118     0304                     u682_20:
 19119     0304                     i1l5547:
 19120     0304  3000               	movlw	0
 19121     0305  00A7               	movwf	i1___flmul@a+3
 19122     0306  3000               	movlw	0
 19123     0307  00A6               	movwf	i1___flmul@a+2
 19124     0308  3000               	movlw	0
 19125     0309  00A5               	movwf	i1___flmul@a+1
 19126     030A  3000               	movlw	0
 19127     030B  00A4               	movwf	i1___flmul@a
 19128     030C                     i1l5549:
 19129     030C  17A6               	bsf	i1___flmul@a+2,7
 19130     030D  2B16               	goto	i1l5553
 19131     030E                     i1l5551:
 19132     030E  3000               	movlw	0
 19133     030F  00A7               	movwf	i1___flmul@a+3
 19134     0310  3000               	movlw	0
 19135     0311  00A6               	movwf	i1___flmul@a+2
 19136     0312  3000               	movlw	0
 19137     0313  00A5               	movwf	i1___flmul@a+1
 19138     0314  3000               	movlw	0
 19139     0315  00A4               	movwf	i1___flmul@a
 19140     0316                     i1l5553:
 19141     0316  0832               	movf	i1___flmul@aexp,w
 19142     0317  1903               	btfsc	3,2
 19143     0318  2B1A               	goto	u683_21
 19144     0319  2B1B               	goto	u683_20
 19145     031A                     u683_21:
 19146     031A  2B20               	goto	i1l5557
 19147     031B                     u683_20:
 19148     031B                     i1l5555:
 19149     031B  0833               	movf	i1___flmul@bexp,w
 19150     031C  1D03               	btfss	3,2
 19151     031D  2B1F               	goto	u684_21
 19152     031E  2B20               	goto	u684_20
 19153     031F                     u684_21:
 19154     031F  2B29               	goto	i1l5561
 19155     0320                     u684_20:
 19156     0320                     i1l5557:
 19157     0320  3000               	movlw	0
 19158     0321  00A3               	movwf	?i1___flmul+3
 19159     0322  3000               	movlw	0
 19160     0323  00A2               	movwf	?i1___flmul+2
 19161     0324  3000               	movlw	0
 19162     0325  00A1               	movwf	?i1___flmul+1
 19163     0326  3000               	movlw	0
 19164     0327  00A0               	movwf	?i1___flmul
 19165     0328  2D03               	goto	i1l1562
 19166     0329                     i1l5561:
 19167     0329  0820               	movf	i1___flmul@b,w
 19168     032A  00F0               	movwf	i1__Umul8_16@multiplicand
 19169     032B  0826               	movf	i1___flmul@a+2,w
 19170     032C  319E  2638  3182   	fcall	i1__Umul8_16
 19171     032F  0871               	movf	?i1__Umul8_16+1,w
 19172     0330  0020               	movlb	0	; select bank0
 19173     0331  00B9               	movwf	i1___flmul@temp+1
 19174     0332  0870               	movf	?i1__Umul8_16,w
 19175     0333  00B8               	movwf	i1___flmul@temp
 19176     0334                     i1l5563:
 19177     0334  0838               	movf	i1___flmul@temp,w
 19178     0335  00A8               	movwf	??i1___flmul
 19179     0336  01A9               	clrf	??i1___flmul+1
 19180     0337  01AA               	clrf	??i1___flmul+2
 19181     0338  01AB               	clrf	??i1___flmul+3
 19182     0339  082B               	movf	??i1___flmul+3,w
 19183     033A  00B1               	movwf	i1___flmul@grs+3
 19184     033B  082A               	movf	??i1___flmul+2,w
 19185     033C  00B0               	movwf	i1___flmul@grs+2
 19186     033D  0829               	movf	??i1___flmul+1,w
 19187     033E  00AF               	movwf	i1___flmul@grs+1
 19188     033F  0828               	movf	??i1___flmul,w
 19189     0340  00AE               	movwf	i1___flmul@grs
 19190     0341                     i1l5565:
 19191     0341  0839               	movf	i1___flmul@temp+1,w
 19192     0342  00A8               	movwf	??i1___flmul
 19193     0343  01A9               	clrf	??i1___flmul+1
 19194     0344  01AA               	clrf	??i1___flmul+2
 19195     0345  01AB               	clrf	??i1___flmul+3
 19196     0346  082B               	movf	??i1___flmul+3,w
 19197     0347  00B7               	movwf	i1___flmul@prod+3
 19198     0348  082A               	movf	??i1___flmul+2,w
 19199     0349  00B6               	movwf	i1___flmul@prod+2
 19200     034A  0829               	movf	??i1___flmul+1,w
 19201     034B  00B5               	movwf	i1___flmul@prod+1
 19202     034C  0828               	movf	??i1___flmul,w
 19203     034D  00B4               	movwf	i1___flmul@prod
 19204     034E  0821               	movf	i1___flmul@b+1,w
 19205     034F  00F0               	movwf	i1__Umul8_16@multiplicand
 19206     0350  0825               	movf	i1___flmul@a+1,w
 19207     0351  319E  2638  3182   	fcall	i1__Umul8_16
 19208     0354  0871               	movf	?i1__Umul8_16+1,w
 19209     0355  0020               	movlb	0	; select bank0
 19210     0356  00B9               	movwf	i1___flmul@temp+1
 19211     0357  0870               	movf	?i1__Umul8_16,w
 19212     0358  00B8               	movwf	i1___flmul@temp
 19213     0359                     i1l5567:
 19214     0359  0838               	movf	i1___flmul@temp,w
 19215     035A  00A8               	movwf	??i1___flmul
 19216     035B  01A9               	clrf	??i1___flmul+1
 19217     035C  01AA               	clrf	??i1___flmul+2
 19218     035D  01AB               	clrf	??i1___flmul+3
 19219     035E  0828               	movf	??i1___flmul,w
 19220     035F  07AE               	addwf	i1___flmul@grs,f
 19221     0360  0829               	movf	??i1___flmul+1,w
 19222     0361  3DAF               	addwfc	i1___flmul@grs+1,f
 19223     0362  082A               	movf	??i1___flmul+2,w
 19224     0363  3DB0               	addwfc	i1___flmul@grs+2,f
 19225     0364  082B               	movf	??i1___flmul+3,w
 19226     0365  3DB1               	addwfc	i1___flmul@grs+3,f
 19227     0366                     i1l5569:
 19228     0366  0839               	movf	i1___flmul@temp+1,w
 19229     0367  00A8               	movwf	??i1___flmul
 19230     0368  01A9               	clrf	??i1___flmul+1
 19231     0369  01AA               	clrf	??i1___flmul+2
 19232     036A  01AB               	clrf	??i1___flmul+3
 19233     036B  0828               	movf	??i1___flmul,w
 19234     036C  07B4               	addwf	i1___flmul@prod,f
 19235     036D  0829               	movf	??i1___flmul+1,w
 19236     036E  3DB5               	addwfc	i1___flmul@prod+1,f
 19237     036F  082A               	movf	??i1___flmul+2,w
 19238     0370  3DB6               	addwfc	i1___flmul@prod+2,f
 19239     0371  082B               	movf	??i1___flmul+3,w
 19240     0372  3DB7               	addwfc	i1___flmul@prod+3,f
 19241     0373  0822               	movf	i1___flmul@b+2,w
 19242     0374  00F0               	movwf	i1__Umul8_16@multiplicand
 19243     0375  0824               	movf	i1___flmul@a,w
 19244     0376  319E  2638  3182   	fcall	i1__Umul8_16
 19245     0379  0871               	movf	?i1__Umul8_16+1,w
 19246     037A  0020               	movlb	0	; select bank0
 19247     037B  00B9               	movwf	i1___flmul@temp+1
 19248     037C  0870               	movf	?i1__Umul8_16,w
 19249     037D  00B8               	movwf	i1___flmul@temp
 19250     037E                     i1l5571:
 19251     037E  0838               	movf	i1___flmul@temp,w
 19252     037F  00A8               	movwf	??i1___flmul
 19253     0380  01A9               	clrf	??i1___flmul+1
 19254     0381  01AA               	clrf	??i1___flmul+2
 19255     0382  01AB               	clrf	??i1___flmul+3
 19256     0383  0828               	movf	??i1___flmul,w
 19257     0384  07AE               	addwf	i1___flmul@grs,f
 19258     0385  0829               	movf	??i1___flmul+1,w
 19259     0386  3DAF               	addwfc	i1___flmul@grs+1,f
 19260     0387  082A               	movf	??i1___flmul+2,w
 19261     0388  3DB0               	addwfc	i1___flmul@grs+2,f
 19262     0389  082B               	movf	??i1___flmul+3,w
 19263     038A  3DB1               	addwfc	i1___flmul@grs+3,f
 19264     038B                     i1l5573:
 19265     038B  0839               	movf	i1___flmul@temp+1,w
 19266     038C  00A8               	movwf	??i1___flmul
 19267     038D  01A9               	clrf	??i1___flmul+1
 19268     038E  01AA               	clrf	??i1___flmul+2
 19269     038F  01AB               	clrf	??i1___flmul+3
 19270     0390  0828               	movf	??i1___flmul,w
 19271     0391  07B4               	addwf	i1___flmul@prod,f
 19272     0392  0829               	movf	??i1___flmul+1,w
 19273     0393  3DB5               	addwfc	i1___flmul@prod+1,f
 19274     0394  082A               	movf	??i1___flmul+2,w
 19275     0395  3DB6               	addwfc	i1___flmul@prod+2,f
 19276     0396  082B               	movf	??i1___flmul+3,w
 19277     0397  3DB7               	addwfc	i1___flmul@prod+3,f
 19278     0398                     i1l5575:
 19279     0398  3008               	movlw	8
 19280     0399                     u685_25:
 19281     0399  35AE               	lslf	i1___flmul@grs,f
 19282     039A  0DAF               	rlf	i1___flmul@grs+1,f
 19283     039B  0DB0               	rlf	i1___flmul@grs+2,f
 19284     039C  0DB1               	rlf	i1___flmul@grs+3,f
 19285     039D  0B89               	decfsz	9,f
 19286     039E  2B99               	goto	u685_25
 19287     039F                     i1l5577:
 19288     039F  0821               	movf	i1___flmul@b+1,w
 19289     03A0  00F0               	movwf	i1__Umul8_16@multiplicand
 19290     03A1  0824               	movf	i1___flmul@a,w
 19291     03A2  319E  2638  3182   	fcall	i1__Umul8_16
 19292     03A5  0871               	movf	?i1__Umul8_16+1,w
 19293     03A6  0020               	movlb	0	; select bank0
 19294     03A7  00B9               	movwf	i1___flmul@temp+1
 19295     03A8  0870               	movf	?i1__Umul8_16,w
 19296     03A9  00B8               	movwf	i1___flmul@temp
 19297     03AA                     i1l5579:
 19298     03AA  0838               	movf	i1___flmul@temp,w
 19299     03AB  07AE               	addwf	i1___flmul@grs,f
 19300     03AC  0839               	movf	i1___flmul@temp+1,w
 19301     03AD  3DAF               	addwfc	i1___flmul@grs+1,f
 19302     03AE  3000               	movlw	0
 19303     03AF  3DB0               	addwfc	i1___flmul@grs+2,f
 19304     03B0  3DB1               	addwfc	i1___flmul@grs+3,f
 19305     03B1                     i1l5581:
 19306     03B1  0820               	movf	i1___flmul@b,w
 19307     03B2  00F0               	movwf	i1__Umul8_16@multiplicand
 19308     03B3  0825               	movf	i1___flmul@a+1,w
 19309     03B4  319E  2638  3182   	fcall	i1__Umul8_16
 19310     03B7  0871               	movf	?i1__Umul8_16+1,w
 19311     03B8  0020               	movlb	0	; select bank0
 19312     03B9  00B9               	movwf	i1___flmul@temp+1
 19313     03BA  0870               	movf	?i1__Umul8_16,w
 19314     03BB  00B8               	movwf	i1___flmul@temp
 19315     03BC                     i1l5583:
 19316     03BC  0838               	movf	i1___flmul@temp,w
 19317     03BD  07AE               	addwf	i1___flmul@grs,f
 19318     03BE  0839               	movf	i1___flmul@temp+1,w
 19319     03BF  3DAF               	addwfc	i1___flmul@grs+1,f
 19320     03C0  3000               	movlw	0
 19321     03C1  3DB0               	addwfc	i1___flmul@grs+2,f
 19322     03C2  3DB1               	addwfc	i1___flmul@grs+3,f
 19323     03C3                     i1l5585:
 19324     03C3  3008               	movlw	8
 19325     03C4                     u686_25:
 19326     03C4  35AE               	lslf	i1___flmul@grs,f
 19327     03C5  0DAF               	rlf	i1___flmul@grs+1,f
 19328     03C6  0DB0               	rlf	i1___flmul@grs+2,f
 19329     03C7  0DB1               	rlf	i1___flmul@grs+3,f
 19330     03C8  0B89               	decfsz	9,f
 19331     03C9  2BC4               	goto	u686_25
 19332     03CA  0820               	movf	i1___flmul@b,w
 19333     03CB  00F0               	movwf	i1__Umul8_16@multiplicand
 19334     03CC  0824               	movf	i1___flmul@a,w
 19335     03CD  319E  2638  3182   	fcall	i1__Umul8_16
 19336     03D0  0871               	movf	?i1__Umul8_16+1,w
 19337     03D1  0020               	movlb	0	; select bank0
 19338     03D2  00B9               	movwf	i1___flmul@temp+1
 19339     03D3  0870               	movf	?i1__Umul8_16,w
 19340     03D4  00B8               	movwf	i1___flmul@temp
 19341     03D5                     i1l5587:
 19342     03D5  0838               	movf	i1___flmul@temp,w
 19343     03D6  07AE               	addwf	i1___flmul@grs,f
 19344     03D7  0839               	movf	i1___flmul@temp+1,w
 19345     03D8  3DAF               	addwfc	i1___flmul@grs+1,f
 19346     03D9  3000               	movlw	0
 19347     03DA  3DB0               	addwfc	i1___flmul@grs+2,f
 19348     03DB  3DB1               	addwfc	i1___flmul@grs+3,f
 19349     03DC                     i1l5589:
 19350     03DC  0821               	movf	i1___flmul@b+1,w
 19351     03DD  00F0               	movwf	i1__Umul8_16@multiplicand
 19352     03DE  0826               	movf	i1___flmul@a+2,w
 19353     03DF  319E  2638  3182   	fcall	i1__Umul8_16
 19354     03E2  0871               	movf	?i1__Umul8_16+1,w
 19355     03E3  0020               	movlb	0	; select bank0
 19356     03E4  00B9               	movwf	i1___flmul@temp+1
 19357     03E5  0870               	movf	?i1__Umul8_16,w
 19358     03E6  00B8               	movwf	i1___flmul@temp
 19359     03E7  0838               	movf	i1___flmul@temp,w
 19360     03E8  07B4               	addwf	i1___flmul@prod,f
 19361     03E9  0839               	movf	i1___flmul@temp+1,w
 19362     03EA  3DB5               	addwfc	i1___flmul@prod+1,f
 19363     03EB  3000               	movlw	0
 19364     03EC  3DB6               	addwfc	i1___flmul@prod+2,f
 19365     03ED  3DB7               	addwfc	i1___flmul@prod+3,f
 19366     03EE                     i1l5591:
 19367     03EE  0822               	movf	i1___flmul@b+2,w
 19368     03EF  00F0               	movwf	i1__Umul8_16@multiplicand
 19369     03F0  0825               	movf	i1___flmul@a+1,w
 19370     03F1  319E  2638  3182   	fcall	i1__Umul8_16
 19371     03F4  0871               	movf	?i1__Umul8_16+1,w
 19372     03F5  0020               	movlb	0	; select bank0
 19373     03F6  00B9               	movwf	i1___flmul@temp+1
 19374     03F7  0870               	movf	?i1__Umul8_16,w
 19375     03F8  00B8               	movwf	i1___flmul@temp
 19376     03F9                     i1l5593:
 19377     03F9  0838               	movf	i1___flmul@temp,w
 19378     03FA  07B4               	addwf	i1___flmul@prod,f
 19379     03FB  0839               	movf	i1___flmul@temp+1,w
 19380     03FC  3DB5               	addwfc	i1___flmul@prod+1,f
 19381     03FD  3000               	movlw	0
 19382     03FE  3DB6               	addwfc	i1___flmul@prod+2,f
 19383     03FF  3DB7               	addwfc	i1___flmul@prod+3,f
 19384     0400  0822               	movf	i1___flmul@b+2,w
 19385     0401  00F0               	movwf	i1__Umul8_16@multiplicand
 19386     0402  0826               	movf	i1___flmul@a+2,w
 19387     0403  319E  2638  3182   	fcall	i1__Umul8_16
 19388     0406  0871               	movf	?i1__Umul8_16+1,w
 19389     0407  0020               	movlb	0	; select bank0
 19390     0408  00B9               	movwf	i1___flmul@temp+1
 19391     0409  0870               	movf	?i1__Umul8_16,w
 19392     040A  00B8               	movwf	i1___flmul@temp
 19393     040B                     i1l5595:
 19394     040B  0838               	movf	i1___flmul@temp,w
 19395     040C  00A8               	movwf	??i1___flmul
 19396     040D  0839               	movf	i1___flmul@temp+1,w
 19397     040E  00A9               	movwf	??i1___flmul+1
 19398     040F  01AA               	clrf	??i1___flmul+2
 19399     0410  01AB               	clrf	??i1___flmul+3
 19400     0411  3008               	movlw	8
 19401     0412                     u687_25:
 19402     0412  35A8               	lslf	??i1___flmul,f
 19403     0413  0DA9               	rlf	??i1___flmul+1,f
 19404     0414  0DAA               	rlf	??i1___flmul+2,f
 19405     0415  0DAB               	rlf	??i1___flmul+3,f
 19406     0416                     u687_20:
 19407     0416  0B89               	decfsz	9,f
 19408     0417  2C12               	goto	u687_25
 19409     0418  0828               	movf	??i1___flmul,w
 19410     0419  07B4               	addwf	i1___flmul@prod,f
 19411     041A  0829               	movf	??i1___flmul+1,w
 19412     041B  3DB5               	addwfc	i1___flmul@prod+1,f
 19413     041C  082A               	movf	??i1___flmul+2,w
 19414     041D  3DB6               	addwfc	i1___flmul@prod+2,f
 19415     041E  082B               	movf	??i1___flmul+3,w
 19416     041F  3DB7               	addwfc	i1___flmul@prod+3,f
 19417     0420                     i1l5597:
 19418     0420  082E               	movf	i1___flmul@grs,w
 19419     0421  00A8               	movwf	??i1___flmul
 19420     0422  082F               	movf	i1___flmul@grs+1,w
 19421     0423  00A9               	movwf	??i1___flmul+1
 19422     0424  0830               	movf	i1___flmul@grs+2,w
 19423     0425  00AA               	movwf	??i1___flmul+2
 19424     0426  0831               	movf	i1___flmul@grs+3,w
 19425     0427  00AB               	movwf	??i1___flmul+3
 19426     0428  3018               	movlw	24
 19427     0429                     u688_25:
 19428     0429  36AB               	lsrf	??i1___flmul+3,f
 19429     042A  0CAA               	rrf	??i1___flmul+2,f
 19430     042B  0CA9               	rrf	??i1___flmul+1,f
 19431     042C  0CA8               	rrf	??i1___flmul,f
 19432     042D                     u688_20:
 19433     042D  0B89               	decfsz	9,f
 19434     042E  2C29               	goto	u688_25
 19435     042F  0828               	movf	??i1___flmul,w
 19436     0430  07B4               	addwf	i1___flmul@prod,f
 19437     0431  0829               	movf	??i1___flmul+1,w
 19438     0432  3DB5               	addwfc	i1___flmul@prod+1,f
 19439     0433  082A               	movf	??i1___flmul+2,w
 19440     0434  3DB6               	addwfc	i1___flmul@prod+2,f
 19441     0435  082B               	movf	??i1___flmul+3,w
 19442     0436  3DB7               	addwfc	i1___flmul@prod+3,f
 19443     0437                     i1l5599:
 19444     0437  3008               	movlw	8
 19445     0438                     u689_25:
 19446     0438  35AE               	lslf	i1___flmul@grs,f
 19447     0439  0DAF               	rlf	i1___flmul@grs+1,f
 19448     043A  0DB0               	rlf	i1___flmul@grs+2,f
 19449     043B  0DB1               	rlf	i1___flmul@grs+3,f
 19450     043C  0B89               	decfsz	9,f
 19451     043D  2C38               	goto	u689_25
 19452     043E                     i1l5601:
 19453     043E  0833               	movf	i1___flmul@bexp,w
 19454     043F  0732               	addwf	i1___flmul@aexp,w
 19455     0440  00A8               	movwf	??i1___flmul
 19456     0441  01A9               	clrf	??i1___flmul+1
 19457     0442  0DA9               	rlf	??i1___flmul+1,f
 19458     0443  0828               	movf	??i1___flmul,w
 19459     0444  3E82               	addlw	130
 19460     0445  00B8               	movwf	i1___flmul@temp
 19461     0446  30FF               	movlw	255
 19462     0447  3D29               	addwfc	??i1___flmul+1,w
 19463     0448  00B9               	movwf	i1___flmul@temp+1
 19464     0449  2C61               	goto	i1l5613
 19465     044A                     i1l5603:
 19466     044A  3001               	movlw	1
 19467     044B                     u690_25:
 19468     044B  35B4               	lslf	i1___flmul@prod,f
 19469     044C  0DB5               	rlf	i1___flmul@prod+1,f
 19470     044D  0DB6               	rlf	i1___flmul@prod+2,f
 19471     044E  0DB7               	rlf	i1___flmul@prod+3,f
 19472     044F  0B89               	decfsz	9,f
 19473     0450  2C4B               	goto	u690_25
 19474     0451                     i1l5605:
 19475     0451  1FB1               	btfss	i1___flmul@grs+3,7
 19476     0452  2C54               	goto	u691_21
 19477     0453  2C55               	goto	u691_20
 19478     0454                     u691_21:
 19479     0454  2C56               	goto	i1l5609
 19480     0455                     u691_20:
 19481     0455                     i1l5607:
 19482     0455  1434               	bsf	i1___flmul@prod,0
 19483     0456                     i1l5609:
 19484     0456  3001               	movlw	1
 19485     0457                     u692_25:
 19486     0457  35AE               	lslf	i1___flmul@grs,f
 19487     0458  0DAF               	rlf	i1___flmul@grs+1,f
 19488     0459  0DB0               	rlf	i1___flmul@grs+2,f
 19489     045A  0DB1               	rlf	i1___flmul@grs+3,f
 19490     045B  0B89               	decfsz	9,f
 19491     045C  2C57               	goto	u692_25
 19492     045D                     i1l5611:
 19493     045D  30FF               	movlw	255
 19494     045E  07B8               	addwf	i1___flmul@temp,f
 19495     045F  30FF               	movlw	255
 19496     0460  3DB9               	addwfc	i1___flmul@temp+1,f
 19497     0461                     i1l5613:
 19498     0461  1FB6               	btfss	i1___flmul@prod+2,7
 19499     0462  2C64               	goto	u693_21
 19500     0463  2C65               	goto	u693_20
 19501     0464                     u693_21:
 19502     0464  2C4A               	goto	i1l5603
 19503     0465                     u693_20:
 19504     0465                     i1l5615:
 19505     0465  01B2               	clrf	i1___flmul@aexp
 19506     0466                     i1l5617:
 19507     0466  1FB1               	btfss	i1___flmul@grs+3,7
 19508     0467  2C69               	goto	u694_21
 19509     0468  2C6A               	goto	u694_20
 19510     0469                     u694_21:
 19511     0469  2C86               	goto	i1l5625
 19512     046A                     u694_20:
 19513     046A                     i1l5619:
 19514     046A  30FF               	movlw	255
 19515     046B  052E               	andwf	i1___flmul@grs,w
 19516     046C  00A8               	movwf	??i1___flmul
 19517     046D  30FF               	movlw	255
 19518     046E  052F               	andwf	i1___flmul@grs+1,w
 19519     046F  00A9               	movwf	??i1___flmul+1
 19520     0470  30FF               	movlw	255
 19521     0471  0530               	andwf	i1___flmul@grs+2,w
 19522     0472  00AA               	movwf	??i1___flmul+2
 19523     0473  307F               	movlw	127
 19524     0474  0531               	andwf	i1___flmul@grs+3,w
 19525     0475  00AB               	movwf	??i1___flmul+3
 19526     0476  082B               	movf	??i1___flmul+3,w
 19527     0477  042A               	iorwf	??i1___flmul+2,w
 19528     0478  0429               	iorwf	??i1___flmul+1,w
 19529     0479  0428               	iorwf	??i1___flmul,w
 19530     047A  1903               	skipnz
 19531     047B  2C7D               	goto	u695_21
 19532     047C  2C7E               	goto	u695_20
 19533     047D                     u695_21:
 19534     047D  2C81               	goto	i1l1568
 19535     047E                     u695_20:
 19536     047E                     i1l5621:
 19537     047E  3001               	movlw	1
 19538     047F  00B2               	movwf	i1___flmul@aexp
 19539     0480  2C86               	goto	i1l5625
 19540     0481                     i1l1568:
 19541     0481  1C34               	btfss	i1___flmul@prod,0
 19542     0482  2C84               	goto	u696_21
 19543     0483  2C85               	goto	u696_20
 19544     0484                     u696_21:
 19545     0484  2C86               	goto	i1l5625
 19546     0485                     u696_20:
 19547     0485  2C7E               	goto	i1l5621
 19548     0486                     i1l5625:
 19549     0486  0832               	movf	i1___flmul@aexp,w
 19550     0487  1903               	btfsc	3,2
 19551     0488  2C8A               	goto	u697_21
 19552     0489  2C8B               	goto	u697_20
 19553     048A                     u697_21:
 19554     048A  2CB1               	goto	i1l5635
 19555     048B                     u697_20:
 19556     048B                     i1l5627:
 19557     048B  3001               	movlw	1
 19558     048C  07B4               	addwf	i1___flmul@prod,f
 19559     048D  3000               	movlw	0
 19560     048E  3DB5               	addwfc	i1___flmul@prod+1,f
 19561     048F  3DB6               	addwfc	i1___flmul@prod+2,f
 19562     0490  3DB7               	addwfc	i1___flmul@prod+3,f
 19563     0491                     i1l5629:
 19564     0491  1C37               	btfss	i1___flmul@prod+3,0
 19565     0492  2C94               	goto	u698_21
 19566     0493  2C95               	goto	u698_20
 19567     0494                     u698_21:
 19568     0494  2CB1               	goto	i1l5635
 19569     0495                     u698_20:
 19570     0495                     i1l5631:
 19571     0495  0834               	movf	i1___flmul@prod,w
 19572     0496  00A8               	movwf	??i1___flmul
 19573     0497  0835               	movf	i1___flmul@prod+1,w
 19574     0498  00A9               	movwf	??i1___flmul+1
 19575     0499  0836               	movf	i1___flmul@prod+2,w
 19576     049A  00AA               	movwf	??i1___flmul+2
 19577     049B  0837               	movf	i1___flmul@prod+3,w
 19578     049C  00AB               	movwf	??i1___flmul+3
 19579     049D  3001               	movlw	1
 19580     049E  00AC               	movwf	??i1___flmul+4
 19581     049F                     u699_25:
 19582     049F  37AB               	asrf	??i1___flmul+3,f
 19583     04A0  0CAA               	rrf	??i1___flmul+2,f
 19584     04A1  0CA9               	rrf	??i1___flmul+1,f
 19585     04A2  0CA8               	rrf	??i1___flmul,f
 19586     04A3                     u699_20:
 19587     04A3  0BAC               	decfsz	??i1___flmul+4,f
 19588     04A4  2C9F               	goto	u699_25
 19589     04A5  082B               	movf	??i1___flmul+3,w
 19590     04A6  00B7               	movwf	i1___flmul@prod+3
 19591     04A7  082A               	movf	??i1___flmul+2,w
 19592     04A8  00B6               	movwf	i1___flmul@prod+2
 19593     04A9  0829               	movf	??i1___flmul+1,w
 19594     04AA  00B5               	movwf	i1___flmul@prod+1
 19595     04AB  0828               	movf	??i1___flmul,w
 19596     04AC  00B4               	movwf	i1___flmul@prod
 19597     04AD                     i1l5633:
 19598     04AD  3001               	movlw	1
 19599     04AE  07B8               	addwf	i1___flmul@temp,f
 19600     04AF  3000               	movlw	0
 19601     04B0  3DB9               	addwfc	i1___flmul@temp+1,f
 19602     04B1                     i1l5635:
 19603     04B1  0839               	movf	i1___flmul@temp+1,w
 19604     04B2  3A80               	xorlw	128
 19605     04B3  00A8               	movwf	??i1___flmul
 19606     04B4  3080               	movlw	128
 19607     04B5  0228               	subwf	??i1___flmul,w
 19608     04B6  1D03               	skipz
 19609     04B7  2CBA               	goto	u700_25
 19610     04B8  30FF               	movlw	255
 19611     04B9  0238               	subwf	i1___flmul@temp,w
 19612     04BA                     u700_25:
 19613     04BA  1C03               	skipc
 19614     04BB  2CBD               	goto	u700_21
 19615     04BC  2CBE               	goto	u700_20
 19616     04BD                     u700_21:
 19617     04BD  2CC8               	goto	i1l5639
 19618     04BE                     u700_20:
 19619     04BE                     i1l5637:
 19620     04BE  307F               	movlw	127
 19621     04BF  0020               	movlb	0	; select bank0
 19622     04C0  00B7               	movwf	i1___flmul@prod+3
 19623     04C1  3080               	movlw	128
 19624     04C2  00B6               	movwf	i1___flmul@prod+2
 19625     04C3  3000               	movlw	0
 19626     04C4  00B5               	movwf	i1___flmul@prod+1
 19627     04C5  3000               	movlw	0
 19628     04C6  00B4               	movwf	i1___flmul@prod
 19629     04C7  2CF9               	goto	i1l1574
 19630     04C8                     i1l5639:
 19631     04C8  0020               	movlb	0	; select bank0
 19632     04C9  0839               	movf	i1___flmul@temp+1,w
 19633     04CA  3A80               	xorlw	128
 19634     04CB  00A8               	movwf	??i1___flmul
 19635     04CC  3080               	movlw	128
 19636     04CD  0228               	subwf	??i1___flmul,w
 19637     04CE  1D03               	skipz
 19638     04CF  2CD2               	goto	u701_25
 19639     04D0  3001               	movlw	1
 19640     04D1  0238               	subwf	i1___flmul@temp,w
 19641     04D2                     u701_25:
 19642     04D2  1803               	skipnc
 19643     04D3  2CD5               	goto	u701_21
 19644     04D4  2CD6               	goto	u701_20
 19645     04D5                     u701_21:
 19646     04D5  2CE1               	goto	i1l5645
 19647     04D6                     u701_20:
 19648     04D6                     i1l5641:
 19649     04D6  3000               	movlw	0
 19650     04D7  0020               	movlb	0	; select bank0
 19651     04D8  00B7               	movwf	i1___flmul@prod+3
 19652     04D9  3000               	movlw	0
 19653     04DA  00B6               	movwf	i1___flmul@prod+2
 19654     04DB  3000               	movlw	0
 19655     04DC  00B5               	movwf	i1___flmul@prod+1
 19656     04DD  3000               	movlw	0
 19657     04DE  00B4               	movwf	i1___flmul@prod
 19658     04DF                     i1l5643:
 19659     04DF  01AD               	clrf	i1___flmul@sign
 19660     04E0  2CF9               	goto	i1l1574
 19661     04E1                     i1l5645:
 19662     04E1  0020               	movlb	0	; select bank0
 19663     04E2  0838               	movf	i1___flmul@temp,w
 19664     04E3  00B3               	movwf	i1___flmul@bexp
 19665     04E4  30FF               	movlw	255
 19666     04E5  05B4               	andwf	i1___flmul@prod,f
 19667     04E6  30FF               	movlw	255
 19668     04E7  05B5               	andwf	i1___flmul@prod+1,f
 19669     04E8  307F               	movlw	127
 19670     04E9  05B6               	andwf	i1___flmul@prod+2,f
 19671     04EA  3000               	movlw	0
 19672     04EB  05B7               	andwf	i1___flmul@prod+3,f
 19673     04EC                     i1l5647:
 19674     04EC  1C33               	btfss	i1___flmul@bexp,0
 19675     04ED  2CEF               	goto	u702_21
 19676     04EE  2CF0               	goto	u702_20
 19677     04EF                     u702_21:
 19678     04EF  2CF1               	goto	i1l5651
 19679     04F0                     u702_20:
 19680     04F0                     i1l5649:
 19681     04F0  17B6               	bsf	i1___flmul@prod+2,7
 19682     04F1                     i1l5651:
 19683     04F1  0833               	movf	i1___flmul@bexp,w
 19684     04F2  00A8               	movwf	??i1___flmul
 19685     04F3  3001               	movlw	1
 19686     04F4                     u703_25:
 19687     04F4  36A8               	lsrf	??i1___flmul,f
 19688     04F5  0B89               	decfsz	9,f
 19689     04F6  2CF4               	goto	u703_25
 19690     04F7  0828               	movf	??i1___flmul,w
 19691     04F8  00B7               	movwf	i1___flmul@prod+3
 19692     04F9                     i1l1574:
 19693     04F9  082D               	movf	i1___flmul@sign,w
 19694     04FA  04B7               	iorwf	i1___flmul@prod+3,f
 19695     04FB                     i1l5653:
 19696     04FB  0837               	movf	i1___flmul@prod+3,w
 19697     04FC  00A3               	movwf	?i1___flmul+3
 19698     04FD  0836               	movf	i1___flmul@prod+2,w
 19699     04FE  00A2               	movwf	?i1___flmul+2
 19700     04FF  0835               	movf	i1___flmul@prod+1,w
 19701     0500  00A1               	movwf	?i1___flmul+1
 19702     0501  0834               	movf	i1___flmul@prod,w
 19703     0502  00A0               	movwf	?i1___flmul
 19704     0503                     i1l1562:
 19705     0503  0008               	return
 19706     0504                     __end_ofi1___flmul:
 19707                           
 19708                           	psect	text81
 19709     1E38                     __ptext81:	
 19710 ;; *************** function i1__Umul8_16 *****************
 19711 ;; Defined at:
 19712 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\Umul8_16.c"
 19713 ;; Parameters:    Size  Location     Type
 19714 ;;  multiplier      1    wreg     unsigned char 
 19715 ;;  multiplicand    1    0[COMMON] unsigned char 
 19716 ;; Auto vars:     Size  Location     Type
 19717 ;;  multiplier      1    8[COMMON] unsigned char 
 19718 ;;  word_mpld       2    6[COMMON] unsigned short 
 19719 ;;  product         2    4[COMMON] unsigned short 
 19720 ;; Return value:  Size  Location     Type
 19721 ;;                  2    0[COMMON] unsigned int 
 19722 ;; Registers used:
 19723 ;;		wreg, status,2, status,0
 19724 ;; Tracked objects:
 19725 ;;		On entry : 0/0
 19726 ;;		On exit  : 0/0
 19727 ;;		Unchanged: 0/0
 19728 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 19729 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 19730 ;;      Locals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 19731 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 19732 ;;      Totals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 19733 ;;Total ram usage:        9 bytes
 19734 ;; Hardware stack levels used: 1
 19735 ;; This function calls:
 19736 ;;		Nothing
 19737 ;; This function is called by:
 19738 ;;		i1___flmul
 19739 ;; This function uses a non-reentrant model
 19740 ;;
 19741                           
 19742     1E38                     i1__Umul8_16:	
 19743                           ;psect for function i1__Umul8_16
 19744                           
 19745                           
 19746                           ;incstack = 0
 19747                           ; Regs used in i1__Umul8_16: [wreg+status,2+status,0]
 19748                           ;i1__Umul8_16@multiplier stored from wreg
 19749     1E38  00F8               	movwf	i1__Umul8_16@multiplier
 19750     1E39                     i1l5001:
 19751     1E39  01F4               	clrf	i1__Umul8_16@product
 19752     1E3A  01F5               	clrf	i1__Umul8_16@product+1
 19753     1E3B                     i1l5003:
 19754     1E3B  0870               	movf	i1__Umul8_16@multiplicand,w
 19755     1E3C  00F2               	movwf	??i1__Umul8_16
 19756     1E3D  01F3               	clrf	??i1__Umul8_16+1
 19757     1E3E  0872               	movf	??i1__Umul8_16,w
 19758     1E3F  00F6               	movwf	i1__Umul8_16@word_mpld
 19759     1E40  0873               	movf	??i1__Umul8_16+1,w
 19760     1E41  00F7               	movwf	i1__Umul8_16@word_mpld+1
 19761     1E42                     i1l5005:
 19762     1E42  1C78               	btfss	i1__Umul8_16@multiplier,0
 19763     1E43  2E45               	goto	u570_21
 19764     1E44  2E46               	goto	u570_20
 19765     1E45                     u570_21:
 19766     1E45  2E4A               	goto	i1l1581
 19767     1E46                     u570_20:
 19768     1E46                     i1l5007:
 19769     1E46  0876               	movf	i1__Umul8_16@word_mpld,w
 19770     1E47  07F4               	addwf	i1__Umul8_16@product,f
 19771     1E48  0877               	movf	i1__Umul8_16@word_mpld+1,w
 19772     1E49  3DF5               	addwfc	i1__Umul8_16@product+1,f
 19773     1E4A                     i1l1581:
 19774     1E4A  3001               	movlw	1
 19775     1E4B                     u571_25:
 19776     1E4B  35F6               	lslf	i1__Umul8_16@word_mpld,f
 19777     1E4C  0DF7               	rlf	i1__Umul8_16@word_mpld+1,f
 19778     1E4D  0B89               	decfsz	9,f
 19779     1E4E  2E4B               	goto	u571_25
 19780     1E4F  1003               	clrc
 19781     1E50  0CF8               	rrf	i1__Umul8_16@multiplier,f
 19782     1E51                     i1l5009:
 19783     1E51  0878               	movf	i1__Umul8_16@multiplier,w
 19784     1E52  1D03               	btfss	3,2
 19785     1E53  2E55               	goto	u572_21
 19786     1E54  2E56               	goto	u572_20
 19787     1E55                     u572_21:
 19788     1E55  2E42               	goto	i1l5005
 19789     1E56                     u572_20:
 19790     1E56                     i1l5011:
 19791     1E56  0875               	movf	i1__Umul8_16@product+1,w
 19792     1E57  00F1               	movwf	?i1__Umul8_16+1
 19793     1E58  0874               	movf	i1__Umul8_16@product,w
 19794     1E59  00F0               	movwf	?i1__Umul8_16
 19795     1E5A                     i1l1583:
 19796     1E5A  0008               	return
 19797     1E5B                     __end_ofi1__Umul8_16:
 19798                           
 19799                           	psect	text82
 19800     0DF4                     __ptext82:	
 19801 ;; *************** function i1___fladd *****************
 19802 ;; Defined at:
 19803 ;;		line 10 in file "C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\sprcadd.c"
 19804 ;; Parameters:    Size  Location     Type
 19805 ;;  b               4   26[BANK0 ] unsigned int 
 19806 ;;  a               4   30[BANK0 ] unsigned int 
 19807 ;; Auto vars:     Size  Location     Type
 19808 ;;  grs             1   45[BANK0 ] unsigned char 
 19809 ;;  bexp            1   44[BANK0 ] unsigned char 
 19810 ;;  aexp            1   43[BANK0 ] unsigned char 
 19811 ;;  signs           1   42[BANK0 ] unsigned char 
 19812 ;; Return value:  Size  Location     Type
 19813 ;;                  4   26[BANK0 ] unsigned char 
 19814 ;; Registers used:
 19815 ;;		wreg, status,2, status,0
 19816 ;; Tracked objects:
 19817 ;;		On entry : 0/0
 19818 ;;		On exit  : 0/0
 19819 ;;		Unchanged: 0/0
 19820 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 19821 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0
 19822 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
 19823 ;;      Temps:          0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0
 19824 ;;      Totals:         0      20       0       0       0       0       0       0       0       0       0       0       
      +0       0
 19825 ;;Total ram usage:       20 bytes
 19826 ;; Hardware stack levels used: 1
 19827 ;; This function calls:
 19828 ;;		Nothing
 19829 ;; This function is called by:
 19830 ;;		_controller
 19831 ;; This function uses a non-reentrant model
 19832 ;;
 19833                           
 19834     0DF4                     i1___fladd:	
 19835                           ;psect for function i1___fladd
 19836                           
 19837     0DF4                     i1l5321:	
 19838                           ;incstack = 0
 19839                           ; Regs used in i1___fladd: [wreg+status,2+status,0]
 19840                           
 19841     0DF4  0020               	movlb	0	; select bank0
 19842     0DF5  083D               	movf	i1___fladd@b+3,w
 19843     0DF6  3980               	andlw	128
 19844     0DF7  00CA               	movwf	i1___fladd@signs
 19845     0DF8                     i1l5323:
 19846     0DF8  353D               	lslf	i1___fladd@b+3,w
 19847     0DF9  00CC               	movwf	i1___fladd@bexp
 19848     0DFA                     i1l5325:
 19849     0DFA  1FBC               	btfss	i1___fladd@b+2,7
 19850     0DFB  2DFD               	goto	u631_21
 19851     0DFC  2DFE               	goto	u631_20
 19852     0DFD                     u631_21:
 19853     0DFD  2DFF               	goto	i1l5329
 19854     0DFE                     u631_20:
 19855     0DFE                     i1l5327:
 19856     0DFE  144C               	bsf	i1___fladd@bexp,0
 19857     0DFF                     i1l5329:
 19858     0DFF  084C               	movf	i1___fladd@bexp,w
 19859     0E00  1903               	btfsc	3,2
 19860     0E01  2E03               	goto	u632_21
 19861     0E02  2E04               	goto	u632_20
 19862     0E03                     u632_21:
 19863     0E03  2E14               	goto	i1l5339
 19864     0E04                     u632_20:
 19865     0E04                     i1l5331:
 19866     0E04  0A4C               	incf	i1___fladd@bexp,w
 19867     0E05  1D03               	btfss	3,2
 19868     0E06  2E08               	goto	u633_21
 19869     0E07  2E09               	goto	u633_20
 19870     0E08                     u633_21:
 19871     0E08  2E11               	goto	i1l5335
 19872     0E09                     u633_20:
 19873     0E09                     i1l5333:
 19874     0E09  3000               	movlw	0
 19875     0E0A  00BD               	movwf	i1___fladd@b+3
 19876     0E0B  3000               	movlw	0
 19877     0E0C  00BC               	movwf	i1___fladd@b+2
 19878     0E0D  3000               	movlw	0
 19879     0E0E  00BB               	movwf	i1___fladd@b+1
 19880     0E0F  3000               	movlw	0
 19881     0E10  00BA               	movwf	i1___fladd@b
 19882     0E11                     i1l5335:
 19883     0E11  17BC               	bsf	i1___fladd@b+2,7
 19884     0E12                     i1l5337:
 19885     0E12  01BD               	clrf	i1___fladd@b+3
 19886     0E13  2E1C               	goto	i1l5341
 19887     0E14                     i1l5339:
 19888     0E14  3000               	movlw	0
 19889     0E15  00BD               	movwf	i1___fladd@b+3
 19890     0E16  3000               	movlw	0
 19891     0E17  00BC               	movwf	i1___fladd@b+2
 19892     0E18  3000               	movlw	0
 19893     0E19  00BB               	movwf	i1___fladd@b+1
 19894     0E1A  3000               	movlw	0
 19895     0E1B  00BA               	movwf	i1___fladd@b
 19896     0E1C                     i1l5341:
 19897     0E1C  0841               	movf	i1___fladd@a+3,w
 19898     0E1D  3980               	andlw	128
 19899     0E1E  00CB               	movwf	i1___fladd@aexp
 19900     0E1F                     i1l5343:
 19901     0E1F  084B               	movf	i1___fladd@aexp,w
 19902     0E20  064A               	xorwf	i1___fladd@signs,w
 19903     0E21  1903               	skipnz
 19904     0E22  2E24               	goto	u634_21
 19905     0E23  2E25               	goto	u634_20
 19906     0E24                     u634_21:
 19907     0E24  2E26               	goto	i1l5347
 19908     0E25                     u634_20:
 19909     0E25                     i1l5345:
 19910     0E25  174A               	bsf	i1___fladd@signs,6
 19911     0E26                     i1l5347:
 19912     0E26  3541               	lslf	i1___fladd@a+3,w
 19913     0E27  00CB               	movwf	i1___fladd@aexp
 19914     0E28                     i1l5349:
 19915     0E28  1FC0               	btfss	i1___fladd@a+2,7
 19916     0E29  2E2B               	goto	u635_21
 19917     0E2A  2E2C               	goto	u635_20
 19918     0E2B                     u635_21:
 19919     0E2B  2E2D               	goto	i1l5353
 19920     0E2C                     u635_20:
 19921     0E2C                     i1l5351:
 19922     0E2C  144B               	bsf	i1___fladd@aexp,0
 19923     0E2D                     i1l5353:
 19924     0E2D  084B               	movf	i1___fladd@aexp,w
 19925     0E2E  1903               	btfsc	3,2
 19926     0E2F  2E31               	goto	u636_21
 19927     0E30  2E32               	goto	u636_20
 19928     0E31                     u636_21:
 19929     0E31  2E42               	goto	i1l5363
 19930     0E32                     u636_20:
 19931     0E32                     i1l5355:
 19932     0E32  0A4B               	incf	i1___fladd@aexp,w
 19933     0E33  1D03               	btfss	3,2
 19934     0E34  2E36               	goto	u637_21
 19935     0E35  2E37               	goto	u637_20
 19936     0E36                     u637_21:
 19937     0E36  2E3F               	goto	i1l5359
 19938     0E37                     u637_20:
 19939     0E37                     i1l5357:
 19940     0E37  3000               	movlw	0
 19941     0E38  00C1               	movwf	i1___fladd@a+3
 19942     0E39  3000               	movlw	0
 19943     0E3A  00C0               	movwf	i1___fladd@a+2
 19944     0E3B  3000               	movlw	0
 19945     0E3C  00BF               	movwf	i1___fladd@a+1
 19946     0E3D  3000               	movlw	0
 19947     0E3E  00BE               	movwf	i1___fladd@a
 19948     0E3F                     i1l5359:
 19949     0E3F  17C0               	bsf	i1___fladd@a+2,7
 19950     0E40                     i1l5361:
 19951     0E40  01C1               	clrf	i1___fladd@a+3
 19952     0E41  2E4A               	goto	i1l1466
 19953     0E42                     i1l5363:
 19954     0E42  3000               	movlw	0
 19955     0E43  00C1               	movwf	i1___fladd@a+3
 19956     0E44  3000               	movlw	0
 19957     0E45  00C0               	movwf	i1___fladd@a+2
 19958     0E46  3000               	movlw	0
 19959     0E47  00BF               	movwf	i1___fladd@a+1
 19960     0E48  3000               	movlw	0
 19961     0E49  00BE               	movwf	i1___fladd@a
 19962     0E4A                     i1l1466:
 19963     0E4A  084C               	movf	i1___fladd@bexp,w
 19964     0E4B  024B               	subwf	i1___fladd@aexp,w
 19965     0E4C  1803               	skipnc
 19966     0E4D  2E4F               	goto	u638_21
 19967     0E4E  2E50               	goto	u638_20
 19968     0E4F                     u638_21:
 19969     0E4F  2E74               	goto	i1l5399
 19970     0E50                     u638_20:
 19971     0E50                     i1l5365:
 19972     0E50  1F4A               	btfss	i1___fladd@signs,6
 19973     0E51  2E53               	goto	u639_21
 19974     0E52  2E54               	goto	u639_20
 19975     0E53                     u639_21:
 19976     0E53  2E56               	goto	i1l5369
 19977     0E54                     u639_20:
 19978     0E54                     i1l5367:
 19979     0E54  3080               	movlw	128
 19980     0E55  06CA               	xorwf	i1___fladd@signs,f
 19981     0E56                     i1l5369:
 19982     0E56  084C               	movf	i1___fladd@bexp,w
 19983     0E57  00CD               	movwf	i1___fladd@grs
 19984     0E58                     i1l5371:
 19985     0E58  084B               	movf	i1___fladd@aexp,w
 19986     0E59  00CC               	movwf	i1___fladd@bexp
 19987     0E5A                     i1l5373:
 19988     0E5A  084D               	movf	i1___fladd@grs,w
 19989     0E5B  00CB               	movwf	i1___fladd@aexp
 19990     0E5C                     i1l5375:
 19991     0E5C  083A               	movf	i1___fladd@b,w
 19992     0E5D  00CD               	movwf	i1___fladd@grs
 19993     0E5E                     i1l5377:
 19994     0E5E  083E               	movf	i1___fladd@a,w
 19995     0E5F  00BA               	movwf	i1___fladd@b
 19996     0E60                     i1l5379:
 19997     0E60  084D               	movf	i1___fladd@grs,w
 19998     0E61  00BE               	movwf	i1___fladd@a
 19999     0E62                     i1l5381:
 20000     0E62  083B               	movf	i1___fladd@b+1,w
 20001     0E63  00CD               	movwf	i1___fladd@grs
 20002     0E64                     i1l5383:
 20003     0E64  083F               	movf	i1___fladd@a+1,w
 20004     0E65  00BB               	movwf	i1___fladd@b+1
 20005     0E66                     i1l5385:
 20006     0E66  084D               	movf	i1___fladd@grs,w
 20007     0E67  00BF               	movwf	i1___fladd@a+1
 20008     0E68                     i1l5387:
 20009     0E68  083C               	movf	i1___fladd@b+2,w
 20010     0E69  00CD               	movwf	i1___fladd@grs
 20011     0E6A                     i1l5389:
 20012     0E6A  0840               	movf	i1___fladd@a+2,w
 20013     0E6B  00BC               	movwf	i1___fladd@b+2
 20014     0E6C                     i1l5391:
 20015     0E6C  084D               	movf	i1___fladd@grs,w
 20016     0E6D  00C0               	movwf	i1___fladd@a+2
 20017     0E6E                     i1l5393:
 20018     0E6E  083D               	movf	i1___fladd@b+3,w
 20019     0E6F  00CD               	movwf	i1___fladd@grs
 20020     0E70                     i1l5395:
 20021     0E70  0841               	movf	i1___fladd@a+3,w
 20022     0E71  00BD               	movwf	i1___fladd@b+3
 20023     0E72                     i1l5397:
 20024     0E72  084D               	movf	i1___fladd@grs,w
 20025     0E73  00C1               	movwf	i1___fladd@a+3
 20026     0E74                     i1l5399:
 20027     0E74  01CD               	clrf	i1___fladd@grs
 20028     0E75                     i1l5401:
 20029     0E75  084B               	movf	i1___fladd@aexp,w
 20030     0E76  00C2               	movwf	??i1___fladd
 20031     0E77  01C3               	clrf	??i1___fladd+1
 20032     0E78  0843               	movf	??i1___fladd+1,w
 20033     0E79  00C5               	movwf	??i1___fladd+3
 20034     0E7A  084C               	movf	i1___fladd@bexp,w
 20035     0E7B  0242               	subwf	??i1___fladd,w
 20036     0E7C  00C4               	movwf	??i1___fladd+2
 20037     0E7D  1C03               	skipc
 20038     0E7E  03C5               	decf	??i1___fladd+3,f
 20039     0E7F  0845               	movf	??i1___fladd+3,w
 20040     0E80  3A80               	xorlw	128
 20041     0E81  00C6               	movwf	??i1___fladd+4
 20042     0E82  3080               	movlw	128
 20043     0E83  0246               	subwf	??i1___fladd+4,w
 20044     0E84  1D03               	skipz
 20045     0E85  2E88               	goto	u640_25
 20046     0E86  301A               	movlw	26
 20047     0E87  0244               	subwf	??i1___fladd+2,w
 20048     0E88                     u640_25:
 20049     0E88  1C03               	skipc
 20050     0E89  2E8B               	goto	u640_21
 20051     0E8A  2E8C               	goto	u640_20
 20052     0E8B                     u640_21:
 20053     0E8B  2EC2               	goto	i1l5417
 20054     0E8C                     u640_20:
 20055     0E8C                     i1l5403:
 20056     0E8C  0020               	movlb	0	; select bank0
 20057     0E8D  083D               	movf	i1___fladd@b+3,w
 20058     0E8E  043C               	iorwf	i1___fladd@b+2,w
 20059     0E8F  043B               	iorwf	i1___fladd@b+1,w
 20060     0E90  043A               	iorwf	i1___fladd@b,w
 20061     0E91  1D03               	skipz
 20062     0E92  2E94               	goto	u641_21
 20063     0E93  2E96               	goto	u641_20
 20064     0E94                     u641_21:
 20065     0E94  3001               	movlw	1
 20066     0E95  2E97               	goto	u642_20
 20067     0E96                     u641_20:
 20068     0E96  3000               	movlw	0
 20069     0E97                     u642_20:
 20070     0E97  00CD               	movwf	i1___fladd@grs
 20071     0E98  3000               	movlw	0
 20072     0E99  00BD               	movwf	i1___fladd@b+3
 20073     0E9A  3000               	movlw	0
 20074     0E9B  00BC               	movwf	i1___fladd@b+2
 20075     0E9C  3000               	movlw	0
 20076     0E9D  00BB               	movwf	i1___fladd@b+1
 20077     0E9E  3000               	movlw	0
 20078     0E9F  00BA               	movwf	i1___fladd@b
 20079     0EA0  084B               	movf	i1___fladd@aexp,w
 20080     0EA1  00CC               	movwf	i1___fladd@bexp
 20081     0EA2  2EC9               	goto	i1l1470
 20082     0EA3                     i1l1472:
 20083     0EA3  1C4D               	btfss	i1___fladd@grs,0
 20084     0EA4  2EA6               	goto	u643_21
 20085     0EA5  2EA7               	goto	u643_20
 20086     0EA6                     u643_21:
 20087     0EA6  2EB1               	goto	i1l5407
 20088     0EA7                     u643_20:
 20089     0EA7                     i1l5405:
 20090     0EA7  084D               	movf	i1___fladd@grs,w
 20091     0EA8  00C2               	movwf	??i1___fladd
 20092     0EA9  3001               	movlw	1
 20093     0EAA                     u644_25:
 20094     0EAA  36C2               	lsrf	??i1___fladd,f
 20095     0EAB  0B89               	decfsz	9,f
 20096     0EAC  2EAA               	goto	u644_25
 20097     0EAD  0842               	movf	??i1___fladd,w
 20098     0EAE  3801               	iorlw	1
 20099     0EAF  00CD               	movwf	i1___fladd@grs
 20100     0EB0  2EB3               	goto	i1l5409
 20101     0EB1                     i1l5407:
 20102     0EB1  1003               	clrc
 20103     0EB2  0CCD               	rrf	i1___fladd@grs,f
 20104     0EB3                     i1l5409:
 20105     0EB3  1C3A               	btfss	i1___fladd@b,0
 20106     0EB4  2EB6               	goto	u645_21
 20107     0EB5  2EB7               	goto	u645_20
 20108     0EB6                     u645_21:
 20109     0EB6  2EB8               	goto	i1l5413
 20110     0EB7                     u645_20:
 20111     0EB7                     i1l5411:
 20112     0EB7  17CD               	bsf	i1___fladd@grs,7
 20113     0EB8                     i1l5413:
 20114     0EB8  3001               	movlw	1
 20115     0EB9  00C2               	movwf	??i1___fladd
 20116     0EBA                     u646_25:
 20117     0EBA  37BD               	asrf	i1___fladd@b+3,f
 20118     0EBB  0CBC               	rrf	i1___fladd@b+2,f
 20119     0EBC  0CBB               	rrf	i1___fladd@b+1,f
 20120     0EBD  0CBA               	rrf	i1___fladd@b,f
 20121     0EBE  0BC2               	decfsz	??i1___fladd& (0+127),f
 20122     0EBF  2EBA               	goto	u646_25
 20123     0EC0                     i1l5415:
 20124     0EC0  3001               	movlw	1
 20125     0EC1  07CC               	addwf	i1___fladd@bexp,f
 20126     0EC2                     i1l5417:
 20127     0EC2  0020               	movlb	0	; select bank0
 20128     0EC3  084B               	movf	i1___fladd@aexp,w
 20129     0EC4  024C               	subwf	i1___fladd@bexp,w
 20130     0EC5  1C03               	skipc
 20131     0EC6  2EC8               	goto	u647_21
 20132     0EC7  2EC9               	goto	u647_20
 20133     0EC8                     u647_21:
 20134     0EC8  2EA3               	goto	i1l1472
 20135     0EC9                     u647_20:
 20136     0EC9                     i1l1470:
 20137     0EC9  1B4A               	btfsc	i1___fladd@signs,6
 20138     0ECA  2ECC               	goto	u648_21
 20139     0ECB  2ECD               	goto	u648_20
 20140     0ECC                     u648_21:
 20141     0ECC  2F07               	goto	i1l5443
 20142     0ECD                     u648_20:
 20143     0ECD                     i1l5419:
 20144     0ECD  084C               	movf	i1___fladd@bexp,w
 20145     0ECE  1D03               	btfss	3,2
 20146     0ECF  2ED1               	goto	u649_21
 20147     0ED0  2ED2               	goto	u649_20
 20148     0ED1                     u649_21:
 20149     0ED1  2EDB               	goto	i1l5425
 20150     0ED2                     u649_20:
 20151     0ED2                     i1l5421:
 20152     0ED2  3000               	movlw	0
 20153     0ED3  00BD               	movwf	?i1___fladd+3
 20154     0ED4  3000               	movlw	0
 20155     0ED5  00BC               	movwf	?i1___fladd+2
 20156     0ED6  3000               	movlw	0
 20157     0ED7  00BB               	movwf	?i1___fladd+1
 20158     0ED8  3000               	movlw	0
 20159     0ED9  00BA               	movwf	?i1___fladd
 20160     0EDA  2FFF               	goto	i1l1479
 20161     0EDB                     i1l5425:
 20162     0EDB  083E               	movf	i1___fladd@a,w
 20163     0EDC  07BA               	addwf	i1___fladd@b,f
 20164     0EDD  083F               	movf	i1___fladd@a+1,w
 20165     0EDE  3DBB               	addwfc	i1___fladd@b+1,f
 20166     0EDF  0840               	movf	i1___fladd@a+2,w
 20167     0EE0  3DBC               	addwfc	i1___fladd@b+2,f
 20168     0EE1  0841               	movf	i1___fladd@a+3,w
 20169     0EE2  3DBD               	addwfc	i1___fladd@b+3,f
 20170     0EE3                     i1l5427:
 20171     0EE3  1C3D               	btfss	i1___fladd@b+3,0
 20172     0EE4  2EE6               	goto	u650_21
 20173     0EE5  2EE7               	goto	u650_20
 20174     0EE6                     u650_21:
 20175     0EE6  2F91               	goto	i1l5479
 20176     0EE7                     u650_20:
 20177     0EE7                     i1l5429:
 20178     0EE7  1C4D               	btfss	i1___fladd@grs,0
 20179     0EE8  2EEA               	goto	u651_21
 20180     0EE9  2EEB               	goto	u651_20
 20181     0EEA                     u651_21:
 20182     0EEA  2EF5               	goto	i1l5433
 20183     0EEB                     u651_20:
 20184     0EEB                     i1l5431:
 20185     0EEB  084D               	movf	i1___fladd@grs,w
 20186     0EEC  00C2               	movwf	??i1___fladd
 20187     0EED  3001               	movlw	1
 20188     0EEE                     u652_25:
 20189     0EEE  36C2               	lsrf	??i1___fladd,f
 20190     0EEF  0B89               	decfsz	9,f
 20191     0EF0  2EEE               	goto	u652_25
 20192     0EF1  0842               	movf	??i1___fladd,w
 20193     0EF2  3801               	iorlw	1
 20194     0EF3  00CD               	movwf	i1___fladd@grs
 20195     0EF4  2EF7               	goto	i1l5435
 20196     0EF5                     i1l5433:
 20197     0EF5  1003               	clrc
 20198     0EF6  0CCD               	rrf	i1___fladd@grs,f
 20199     0EF7                     i1l5435:
 20200     0EF7  1C3A               	btfss	i1___fladd@b,0
 20201     0EF8  2EFA               	goto	u653_21
 20202     0EF9  2EFB               	goto	u653_20
 20203     0EFA                     u653_21:
 20204     0EFA  2EFC               	goto	i1l5439
 20205     0EFB                     u653_20:
 20206     0EFB                     i1l5437:
 20207     0EFB  17CD               	bsf	i1___fladd@grs,7
 20208     0EFC                     i1l5439:
 20209     0EFC  3001               	movlw	1
 20210     0EFD  00C2               	movwf	??i1___fladd
 20211     0EFE                     u654_25:
 20212     0EFE  37BD               	asrf	i1___fladd@b+3,f
 20213     0EFF  0CBC               	rrf	i1___fladd@b+2,f
 20214     0F00  0CBB               	rrf	i1___fladd@b+1,f
 20215     0F01  0CBA               	rrf	i1___fladd@b,f
 20216     0F02  0BC2               	decfsz	??i1___fladd& (0+127),f
 20217     0F03  2EFE               	goto	u654_25
 20218     0F04                     i1l5441:
 20219     0F04  3001               	movlw	1
 20220     0F05  07CC               	addwf	i1___fladd@bexp,f
 20221     0F06  2F91               	goto	i1l5479
 20222     0F07                     i1l5443:
 20223     0F07  083D               	movf	i1___fladd@b+3,w
 20224     0F08  3A80               	xorlw	128
 20225     0F09  00C2               	movwf	??i1___fladd
 20226     0F0A  0841               	movf	i1___fladd@a+3,w
 20227     0F0B  3A80               	xorlw	128
 20228     0F0C  0242               	subwf	??i1___fladd,w
 20229     0F0D  1D03               	skipz
 20230     0F0E  2F19               	goto	u655_23
 20231     0F0F  0840               	movf	i1___fladd@a+2,w
 20232     0F10  023C               	subwf	i1___fladd@b+2,w
 20233     0F11  1D03               	skipz
 20234     0F12  2F19               	goto	u655_23
 20235     0F13  083F               	movf	i1___fladd@a+1,w
 20236     0F14  023B               	subwf	i1___fladd@b+1,w
 20237     0F15  1D03               	skipz
 20238     0F16  2F19               	goto	u655_23
 20239     0F17  083E               	movf	i1___fladd@a,w
 20240     0F18  023A               	subwf	i1___fladd@b,w
 20241     0F19                     u655_23:
 20242     0F19  1803               	skipnc
 20243     0F1A  2F1C               	goto	u655_21
 20244     0F1B  2F1D               	goto	u655_20
 20245     0F1C                     u655_21:
 20246     0F1C  2F52               	goto	i1l5455
 20247     0F1D                     u655_20:
 20248     0F1D                     i1l5445:
 20249     0F1D  30FF               	movlw	255
 20250     0F1E  00C2               	movwf	??i1___fladd
 20251     0F1F  30FF               	movlw	255
 20252     0F20  00C3               	movwf	??i1___fladd+1
 20253     0F21  30FF               	movlw	255
 20254     0F22  00C4               	movwf	??i1___fladd+2
 20255     0F23  30FF               	movlw	255
 20256     0F24  00C5               	movwf	??i1___fladd+3
 20257     0F25  083A               	movf	i1___fladd@b,w
 20258     0F26  023E               	subwf	i1___fladd@a,w
 20259     0F27  00C6               	movwf	??i1___fladd+4
 20260     0F28  083B               	movf	i1___fladd@b+1,w
 20261     0F29  3B3F               	subwfb	i1___fladd@a+1,w
 20262     0F2A  00C7               	movwf	??i1___fladd+5
 20263     0F2B  083C               	movf	i1___fladd@b+2,w
 20264     0F2C  3B40               	subwfb	i1___fladd@a+2,w
 20265     0F2D  00C8               	movwf	??i1___fladd+6
 20266     0F2E  083D               	movf	i1___fladd@b+3,w
 20267     0F2F  3B41               	subwfb	i1___fladd@a+3,w
 20268     0F30  00C9               	movwf	??i1___fladd+7
 20269     0F31  0846               	movf	??i1___fladd+4,w
 20270     0F32  07C2               	addwf	??i1___fladd,f
 20271     0F33  0847               	movf	??i1___fladd+5,w
 20272     0F34  3DC3               	addwfc	??i1___fladd+1,f
 20273     0F35  0848               	movf	??i1___fladd+6,w
 20274     0F36  3DC4               	addwfc	??i1___fladd+2,f
 20275     0F37  0849               	movf	??i1___fladd+7,w
 20276     0F38  3DC5               	addwfc	??i1___fladd+3,f
 20277     0F39  0845               	movf	??i1___fladd+3,w
 20278     0F3A  00BD               	movwf	i1___fladd@b+3
 20279     0F3B  0844               	movf	??i1___fladd+2,w
 20280     0F3C  00BC               	movwf	i1___fladd@b+2
 20281     0F3D  0843               	movf	??i1___fladd+1,w
 20282     0F3E  00BB               	movwf	i1___fladd@b+1
 20283     0F3F  0842               	movf	??i1___fladd,w
 20284     0F40  00BA               	movwf	i1___fladd@b
 20285     0F41                     i1l5447:
 20286     0F41  3080               	movlw	128
 20287     0F42  06CA               	xorwf	i1___fladd@signs,f
 20288     0F43                     i1l5449:
 20289     0F43  034D               	decf	i1___fladd@grs,w
 20290     0F44  3AFF               	xorlw	255
 20291     0F45  00CD               	movwf	i1___fladd@grs
 20292     0F46                     i1l5451:
 20293     0F46  084D               	movf	i1___fladd@grs,w
 20294     0F47  1D03               	btfss	3,2
 20295     0F48  2F4A               	goto	u656_21
 20296     0F49  2F4B               	goto	u656_20
 20297     0F4A                     u656_21:
 20298     0F4A  2F5A               	goto	i1l1487
 20299     0F4B                     u656_20:
 20300     0F4B                     i1l5453:
 20301     0F4B  3001               	movlw	1
 20302     0F4C  07BA               	addwf	i1___fladd@b,f
 20303     0F4D  3000               	movlw	0
 20304     0F4E  3DBB               	addwfc	i1___fladd@b+1,f
 20305     0F4F  3DBC               	addwfc	i1___fladd@b+2,f
 20306     0F50  3DBD               	addwfc	i1___fladd@b+3,f
 20307     0F51  2F5A               	goto	i1l1487
 20308     0F52                     i1l5455:
 20309     0F52  083E               	movf	i1___fladd@a,w
 20310     0F53  02BA               	subwf	i1___fladd@b,f
 20311     0F54  083F               	movf	i1___fladd@a+1,w
 20312     0F55  3BBB               	subwfb	i1___fladd@b+1,f
 20313     0F56  0840               	movf	i1___fladd@a+2,w
 20314     0F57  3BBC               	subwfb	i1___fladd@b+2,f
 20315     0F58  0841               	movf	i1___fladd@a+3,w
 20316     0F59  3BBD               	subwfb	i1___fladd@b+3,f
 20317     0F5A                     i1l1487:
 20318     0F5A  083D               	movf	i1___fladd@b+3,w
 20319     0F5B  043C               	iorwf	i1___fladd@b+2,w
 20320     0F5C  043B               	iorwf	i1___fladd@b+1,w
 20321     0F5D  043A               	iorwf	i1___fladd@b,w
 20322     0F5E  1D03               	skipz
 20323     0F5F  2F61               	goto	u657_21
 20324     0F60  2F62               	goto	u657_20
 20325     0F61                     u657_21:
 20326     0F61  2F8D               	goto	i1l5477
 20327     0F62                     u657_20:
 20328     0F62                     i1l5457:
 20329     0F62  084D               	movf	i1___fladd@grs,w
 20330     0F63  1D03               	btfss	3,2
 20331     0F64  2F66               	goto	u658_21
 20332     0F65  2F67               	goto	u658_20
 20333     0F66                     u658_21:
 20334     0F66  2F8D               	goto	i1l5477
 20335     0F67                     u658_20:
 20336     0F67                     i1l5459:
 20337     0F67  3000               	movlw	0
 20338     0F68  00BD               	movwf	?i1___fladd+3
 20339     0F69  3000               	movlw	0
 20340     0F6A  00BC               	movwf	?i1___fladd+2
 20341     0F6B  3000               	movlw	0
 20342     0F6C  00BB               	movwf	?i1___fladd+1
 20343     0F6D  3000               	movlw	0
 20344     0F6E  00BA               	movwf	?i1___fladd
 20345     0F6F  2FFF               	goto	i1l1479
 20346     0F70                     i1l5463:
 20347     0F70  3001               	movlw	1
 20348     0F71                     u659_25:
 20349     0F71  35BA               	lslf	i1___fladd@b,f
 20350     0F72  0DBB               	rlf	i1___fladd@b+1,f
 20351     0F73  0DBC               	rlf	i1___fladd@b+2,f
 20352     0F74  0DBD               	rlf	i1___fladd@b+3,f
 20353     0F75  0B89               	decfsz	9,f
 20354     0F76  2F71               	goto	u659_25
 20355     0F77                     i1l5465:
 20356     0F77  1FCD               	btfss	i1___fladd@grs,7
 20357     0F78  2F7A               	goto	u660_21
 20358     0F79  2F7B               	goto	u660_20
 20359     0F7A                     u660_21:
 20360     0F7A  2F7C               	goto	i1l1491
 20361     0F7B                     u660_20:
 20362     0F7B                     i1l5467:
 20363     0F7B  143A               	bsf	i1___fladd@b,0
 20364     0F7C                     i1l1491:
 20365     0F7C  1C4D               	btfss	i1___fladd@grs,0
 20366     0F7D  2F7F               	goto	u661_21
 20367     0F7E  2F80               	goto	u661_20
 20368     0F7F                     u661_21:
 20369     0F7F  2F84               	goto	i1l5471
 20370     0F80                     u661_20:
 20371     0F80                     i1l5469:
 20372     0F80  1403               	setc
 20373     0F81  0D4D               	rlf	i1___fladd@grs,w
 20374     0F82  00CD               	movwf	i1___fladd@grs
 20375     0F83  2F86               	goto	i1l5473
 20376     0F84                     i1l5471:
 20377     0F84  1003               	clrc
 20378     0F85  0DCD               	rlf	i1___fladd@grs,f
 20379     0F86                     i1l5473:
 20380     0F86  084C               	movf	i1___fladd@bexp,w
 20381     0F87  1903               	btfsc	3,2
 20382     0F88  2F8A               	goto	u662_21
 20383     0F89  2F8B               	goto	u662_20
 20384     0F8A                     u662_21:
 20385     0F8A  2F8D               	goto	i1l5477
 20386     0F8B                     u662_20:
 20387     0F8B                     i1l5475:
 20388     0F8B  3001               	movlw	1
 20389     0F8C  02CC               	subwf	i1___fladd@bexp,f
 20390     0F8D                     i1l5477:
 20391     0F8D  1FBC               	btfss	i1___fladd@b+2,7
 20392     0F8E  2F90               	goto	u663_21
 20393     0F8F  2F91               	goto	u663_20
 20394     0F90                     u663_21:
 20395     0F90  2F70               	goto	i1l5463
 20396     0F91                     u663_20:
 20397     0F91                     i1l5479:
 20398     0F91  01CB               	clrf	i1___fladd@aexp
 20399     0F92                     i1l5481:
 20400     0F92  1FCD               	btfss	i1___fladd@grs,7
 20401     0F93  2F95               	goto	u664_21
 20402     0F94  2F96               	goto	u664_20
 20403     0F95                     u664_21:
 20404     0F95  2FA4               	goto	i1l5489
 20405     0F96                     u664_20:
 20406     0F96                     i1l5483:
 20407     0F96  084D               	movf	i1___fladd@grs,w
 20408     0F97  397F               	andlw	127
 20409     0F98  1903               	btfsc	3,2
 20410     0F99  2F9B               	goto	u665_21
 20411     0F9A  2F9C               	goto	u665_20
 20412     0F9B                     u665_21:
 20413     0F9B  2F9F               	goto	i1l1497
 20414     0F9C                     u665_20:
 20415     0F9C                     i1l5485:
 20416     0F9C  3001               	movlw	1
 20417     0F9D  00CB               	movwf	i1___fladd@aexp
 20418     0F9E  2FA4               	goto	i1l5489
 20419     0F9F                     i1l1497:
 20420     0F9F  1C3A               	btfss	i1___fladd@b,0
 20421     0FA0  2FA2               	goto	u666_21
 20422     0FA1  2FA3               	goto	u666_20
 20423     0FA2                     u666_21:
 20424     0FA2  2FA4               	goto	i1l5489
 20425     0FA3                     u666_20:
 20426     0FA3  2F9C               	goto	i1l5485
 20427     0FA4                     i1l5489:
 20428     0FA4  084B               	movf	i1___fladd@aexp,w
 20429     0FA5  1903               	btfsc	3,2
 20430     0FA6  2FA8               	goto	u667_21
 20431     0FA7  2FA9               	goto	u667_20
 20432     0FA8                     u667_21:
 20433     0FA8  2FD2               	goto	i1l1500
 20434     0FA9                     u667_20:
 20435     0FA9                     i1l5491:
 20436     0FA9  3001               	movlw	1
 20437     0FAA  07BA               	addwf	i1___fladd@b,f
 20438     0FAB  3000               	movlw	0
 20439     0FAC  3DBB               	addwfc	i1___fladd@b+1,f
 20440     0FAD  3DBC               	addwfc	i1___fladd@b+2,f
 20441     0FAE  3DBD               	addwfc	i1___fladd@b+3,f
 20442     0FAF                     i1l5493:
 20443     0FAF  1C3D               	btfss	i1___fladd@b+3,0
 20444     0FB0  2FB2               	goto	u668_21
 20445     0FB1  2FB3               	goto	u668_20
 20446     0FB2                     u668_21:
 20447     0FB2  2FD2               	goto	i1l1500
 20448     0FB3                     u668_20:
 20449     0FB3                     i1l5495:
 20450     0FB3  083A               	movf	i1___fladd@b,w
 20451     0FB4  00C2               	movwf	??i1___fladd
 20452     0FB5  083B               	movf	i1___fladd@b+1,w
 20453     0FB6  00C3               	movwf	??i1___fladd+1
 20454     0FB7  083C               	movf	i1___fladd@b+2,w
 20455     0FB8  00C4               	movwf	??i1___fladd+2
 20456     0FB9  083D               	movf	i1___fladd@b+3,w
 20457     0FBA  00C5               	movwf	??i1___fladd+3
 20458     0FBB  3001               	movlw	1
 20459     0FBC  00C6               	movwf	??i1___fladd+4
 20460     0FBD                     u669_25:
 20461     0FBD  37C5               	asrf	??i1___fladd+3,f
 20462     0FBE  0CC4               	rrf	??i1___fladd+2,f
 20463     0FBF  0CC3               	rrf	??i1___fladd+1,f
 20464     0FC0  0CC2               	rrf	??i1___fladd,f
 20465     0FC1                     u669_20:
 20466     0FC1  0BC6               	decfsz	??i1___fladd+4,f
 20467     0FC2  2FBD               	goto	u669_25
 20468     0FC3  0845               	movf	??i1___fladd+3,w
 20469     0FC4  00BD               	movwf	i1___fladd@b+3
 20470     0FC5  0844               	movf	??i1___fladd+2,w
 20471     0FC6  00BC               	movwf	i1___fladd@b+2
 20472     0FC7  0843               	movf	??i1___fladd+1,w
 20473     0FC8  00BB               	movwf	i1___fladd@b+1
 20474     0FC9  0842               	movf	??i1___fladd,w
 20475     0FCA  00BA               	movwf	i1___fladd@b
 20476     0FCB  0A4C               	incf	i1___fladd@bexp,w
 20477     0FCC  1903               	btfsc	3,2
 20478     0FCD  2FCF               	goto	u670_21
 20479     0FCE  2FD0               	goto	u670_20
 20480     0FCF                     u670_21:
 20481     0FCF  2FD2               	goto	i1l1500
 20482     0FD0                     u670_20:
 20483     0FD0                     i1l5497:
 20484     0FD0  3001               	movlw	1
 20485     0FD1  07CC               	addwf	i1___fladd@bexp,f
 20486     0FD2                     i1l1500:
 20487     0FD2  0A4C               	incf	i1___fladd@bexp,w
 20488     0FD3  1903               	btfsc	3,2
 20489     0FD4  2FD6               	goto	u671_21
 20490     0FD5  2FD7               	goto	u671_20
 20491     0FD6                     u671_21:
 20492     0FD6  2FDC               	goto	i1l5501
 20493     0FD7                     u671_20:
 20494     0FD7                     i1l5499:
 20495     0FD7  084C               	movf	i1___fladd@bexp,w
 20496     0FD8  1D03               	btfss	3,2
 20497     0FD9  2FDB               	goto	u672_21
 20498     0FDA  2FDC               	goto	u672_20
 20499     0FDB                     u672_21:
 20500     0FDB  2FEA               	goto	i1l5507
 20501     0FDC                     u672_20:
 20502     0FDC                     i1l5501:
 20503     0FDC  3000               	movlw	0
 20504     0FDD  00BD               	movwf	i1___fladd@b+3
 20505     0FDE  3000               	movlw	0
 20506     0FDF  00BC               	movwf	i1___fladd@b+2
 20507     0FE0  3000               	movlw	0
 20508     0FE1  00BB               	movwf	i1___fladd@b+1
 20509     0FE2  3000               	movlw	0
 20510     0FE3  00BA               	movwf	i1___fladd@b
 20511     0FE4                     i1l5503:
 20512     0FE4  084C               	movf	i1___fladd@bexp,w
 20513     0FE5  1D03               	btfss	3,2
 20514     0FE6  2FE8               	goto	u673_21
 20515     0FE7  2FE9               	goto	u673_20
 20516     0FE8                     u673_21:
 20517     0FE8  2FEA               	goto	i1l5507
 20518     0FE9                     u673_20:
 20519     0FE9                     i1l5505:
 20520     0FE9  01CA               	clrf	i1___fladd@signs
 20521     0FEA                     i1l5507:
 20522     0FEA  1C4C               	btfss	i1___fladd@bexp,0
 20523     0FEB  2FED               	goto	u674_21
 20524     0FEC  2FEE               	goto	u674_20
 20525     0FED                     u674_21:
 20526     0FED  2FF0               	goto	i1l5511
 20527     0FEE                     u674_20:
 20528     0FEE                     i1l5509:
 20529     0FEE  17BC               	bsf	i1___fladd@b+2,7
 20530     0FEF  2FF2               	goto	i1l1508
 20531     0FF0                     i1l5511:
 20532     0FF0  307F               	movlw	127
 20533     0FF1  05BC               	andwf	i1___fladd@b+2,f
 20534     0FF2                     i1l1508:
 20535     0FF2  084C               	movf	i1___fladd@bexp,w
 20536     0FF3  00C2               	movwf	??i1___fladd
 20537     0FF4  3001               	movlw	1
 20538     0FF5                     u675_25:
 20539     0FF5  36C2               	lsrf	??i1___fladd,f
 20540     0FF6  0B89               	decfsz	9,f
 20541     0FF7  2FF5               	goto	u675_25
 20542     0FF8  0842               	movf	??i1___fladd,w
 20543     0FF9  00BD               	movwf	i1___fladd@b+3
 20544     0FFA                     i1l5513:
 20545     0FFA  1FCA               	btfss	i1___fladd@signs,7
 20546     0FFB  2FFD               	goto	u676_21
 20547     0FFC  2FFE               	goto	u676_20
 20548     0FFD                     u676_21:
 20549     0FFD  2FFF               	goto	i1l1509
 20550     0FFE                     u676_20:
 20551     0FFE                     i1l5515:
 20552     0FFE  17BD               	bsf	i1___fladd@b+3,7
 20553     0FFF                     i1l1509:
 20554     0FFF                     i1l1479:
 20555     0FFF  0008               	return
 20556     1000                     __end_ofi1___fladd:
 20557                           
 20558                           	psect	text83
 20559     1D13                     __ptext83:	
 20560 ;; *************** function _pwm_fan_LoadDutyValue *****************
 20561 ;; Defined at:
 20562 ;;		line 63 in file "mcc_generated_files/pwm/src/pwm5.c"
 20563 ;; Parameters:    Size  Location     Type
 20564 ;;  dutyValue       2    0[COMMON] unsigned short 
 20565 ;; Auto vars:     Size  Location     Type
 20566 ;;		None
 20567 ;; Return value:  Size  Location     Type
 20568 ;;                  1    wreg      void 
 20569 ;; Registers used:
 20570 ;;		wreg, status,2, status,0
 20571 ;; Tracked objects:
 20572 ;;		On entry : 0/0
 20573 ;;		On exit  : 0/0
 20574 ;;		Unchanged: 0/0
 20575 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 20576 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 20577 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 20578 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 20579 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 20580 ;;Total ram usage:        4 bytes
 20581 ;; Hardware stack levels used: 1
 20582 ;; This function calls:
 20583 ;;		Nothing
 20584 ;; This function is called by:
 20585 ;;		_controller
 20586 ;; This function uses a non-reentrant model
 20587 ;;
 20588                           
 20589     1D13                     _pwm_fan_LoadDutyValue:	
 20590                           ;psect for function _pwm_fan_LoadDutyValue
 20591                           
 20592     1D13                     i1l5021:	
 20593                           ;incstack = 0
 20594                           ; Regs used in _pwm_fan_LoadDutyValue: [wreg+status,2+status,0]
 20595                           
 20596                           
 20597                           ;mcc_generated_files/pwm/src/pwm5.c: 63:  void pwm_fan_LoadDutyValue(uint16_t dutyValue)
      +                          ;mcc_generated_files/pwm/src/pwm5.c: 64:  {;mcc_generated_files/pwm/src/pwm5.c: 66:     
      +                           PWM5DCH = (uint8_t) ((dutyValue & 0x03FCu) >> 2);
 20598     1D13  0871               	movf	pwm_fan_LoadDutyValue@dutyValue+1,w
 20599     1D14  00F3               	movwf	??_pwm_fan_LoadDutyValue+1
 20600     1D15  0870               	movf	pwm_fan_LoadDutyValue@dutyValue,w
 20601     1D16  00F2               	movwf	??_pwm_fan_LoadDutyValue
 20602     1D17  36F3               	lsrf	??_pwm_fan_LoadDutyValue+1,f
 20603     1D18  0CF2               	rrf	??_pwm_fan_LoadDutyValue,f
 20604     1D19  36F3               	lsrf	??_pwm_fan_LoadDutyValue+1,f
 20605     1D1A  0CF2               	rrf	??_pwm_fan_LoadDutyValue,f
 20606     1D1B  0872               	movf	??_pwm_fan_LoadDutyValue,w
 20607     1D1C  002C               	movlb	12	; select bank12
 20608     1D1D  0098               	movwf	24	;volatile
 20609                           
 20610                           ;mcc_generated_files/pwm/src/pwm5.c: 69:      PWM5DCL = (uint8_t) ((dutyValue & 0x0003u)
      +                           << 6);
 20611     1D1E  0870               	movf	pwm_fan_LoadDutyValue@dutyValue,w
 20612     1D1F  3903               	andlw	3
 20613     1D20  00F2               	movwf	??_pwm_fan_LoadDutyValue
 20614     1D21  3006               	movlw	6
 20615     1D22                     u573_25:
 20616     1D22  35F2               	lslf	??_pwm_fan_LoadDutyValue,f
 20617     1D23  0B89               	decfsz	9,f
 20618     1D24  2D22               	goto	u573_25
 20619     1D25  0872               	movf	??_pwm_fan_LoadDutyValue,w
 20620     1D26  0097               	movwf	23	;volatile
 20621     1D27                     i1l72:
 20622     1D27  0008               	return
 20623     1D28                     __end_of_pwm_fan_LoadDutyValue:
 20624                           
 20625                           	psect	text84
 20626     1C4E                     __ptext84:	
 20627 ;; *************** function _TMR2_ISR *****************
 20628 ;; Defined at:
 20629 ;;		line 114 in file "mcc_generated_files/timer/src/tmr2.c"
 20630 ;; Parameters:    Size  Location     Type
 20631 ;;		None
 20632 ;; Auto vars:     Size  Location     Type
 20633 ;;		None
 20634 ;; Return value:  Size  Location     Type
 20635 ;;                  1    wreg      void 
 20636 ;; Registers used:
 20637 ;;		wreg, status,2, status,0, pclath, cstack
 20638 ;; Tracked objects:
 20639 ;;		On entry : 0/0
 20640 ;;		On exit  : 0/0
 20641 ;;		Unchanged: 0/0
 20642 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 20643 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 20644 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 20645 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 20646 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 20647 ;;Total ram usage:        0 bytes
 20648 ;; Hardware stack levels used: 1
 20649 ;; Hardware stack levels required when called: 1
 20650 ;; This function calls:
 20651 ;;		NULL
 20652 ;;		_TMR2_DefaultPeriodMatchCallback
 20653 ;; This function is called by:
 20654 ;;		_INTERRUPT_InterruptManager
 20655 ;; This function uses a non-reentrant model
 20656 ;;
 20657                           
 20658     1C4E                     _TMR2_ISR:	
 20659                           ;psect for function _TMR2_ISR
 20660                           
 20661     1C4E                     i1l6047:	
 20662                           ;incstack = 0
 20663                           ; Regs used in _TMR2_ISR: [wreg+status,2+status,0+pclath+cstack]
 20664                           
 20665                           
 20666                           ;mcc_generated_files/timer/src/tmr2.c: 117:     if(((void*)0) != TMR2_PeriodMatchCallbac
      +                          k)
 20667     1C4E  0022               	movlb	2	; select bank2
 20668     1C4F  0862               	movf	_TMR2_PeriodMatchCallback^(0+256),w
 20669     1C50  0463               	iorwf	(_TMR2_PeriodMatchCallback+1)^(0+256),w
 20670     1C51  1903               	btfsc	3,2
 20671     1C52  2C54               	goto	u741_21
 20672     1C53  2C55               	goto	u741_20
 20673     1C54                     u741_21:
 20674     1C54  2C5A               	goto	i1l6051
 20675     1C55                     u741_20:
 20676     1C55                     i1l6049:
 20677                           
 20678                           ;mcc_generated_files/timer/src/tmr2.c: 118:     {;mcc_generated_files/timer/src/tmr2.c: 
      +                          119:         TMR2_PeriodMatchCallback();
 20679     1C55  0863               	movf	(_TMR2_PeriodMatchCallback+1)^(0+256),w
 20680     1C56  008A               	movwf	10
 20681     1C57  0862               	movf	_TMR2_PeriodMatchCallback^(0+256),w
 20682     1C58  000A               	callw
 20683     1C59  319C               	pagesel	$
 20684     1C5A                     i1l6051:
 20685                           
 20686                           ;mcc_generated_files/timer/src/tmr2.c: 121:     PIR1bits.TMR2IF = 0;
 20687     1C5A  0020               	movlb	0	; select bank0
 20688     1C5B  1091               	bcf	17,1	;volatile
 20689     1C5C                     i1l414:
 20690     1C5C  0008               	return
 20691     1C5D                     __end_of_TMR2_ISR:
 20692                           
 20693                           	psect	text85
 20694     1B41                     __ptext85:	
 20695 ;; *************** function _TMR2_DefaultPeriodMatchCallback *****************
 20696 ;; Defined at:
 20697 ;;		line 129 in file "mcc_generated_files/timer/src/tmr2.c"
 20698 ;; Parameters:    Size  Location     Type
 20699 ;;		None
 20700 ;; Auto vars:     Size  Location     Type
 20701 ;;		None
 20702 ;; Return value:  Size  Location     Type
 20703 ;;                  1    wreg      void 
 20704 ;; Registers used:
 20705 ;;		None
 20706 ;; Tracked objects:
 20707 ;;		On entry : 0/0
 20708 ;;		On exit  : 0/0
 20709 ;;		Unchanged: 0/0
 20710 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 20711 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 20712 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 20713 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 20714 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 20715 ;;Total ram usage:        0 bytes
 20716 ;; Hardware stack levels used: 1
 20717 ;; This function calls:
 20718 ;;		Nothing
 20719 ;; This function is called by:
 20720 ;;		_TMR2_Initialize
 20721 ;;		_TMR2_ISR
 20722 ;; This function uses a non-reentrant model
 20723 ;;
 20724                           
 20725     1B41                     _TMR2_DefaultPeriodMatchCallback:	
 20726                           ;psect for function _TMR2_DefaultPeriodMatchCallback
 20727                           
 20728     1B41                     i1l420:	
 20729                           ;incstack = 0
 20730                           ; Regs used in _TMR2_DefaultPeriodMatchCallback: []
 20731                           
 20732     1B41  0008               	return
 20733     1B42                     __end_of_TMR2_DefaultPeriodMatchCallback:
 20734                           
 20735                           	psect	text86
 20736     1D9D                     __ptext86:	
 20737 ;; *************** function _EUSART_TransmitISR *****************
 20738 ;; Defined at:
 20739 ;;		line 377 in file "mcc_generated_files/uart/src/eusart.c"
 20740 ;; Parameters:    Size  Location     Type
 20741 ;;		None
 20742 ;; Auto vars:     Size  Location     Type
 20743 ;;  tempTxTail      1    0[COMMON] unsigned char 
 20744 ;; Return value:  Size  Location     Type
 20745 ;;                  1    wreg      void 
 20746 ;; Registers used:
 20747 ;;		wreg, fsr1l, fsr1h, status,2, status,0
 20748 ;; Tracked objects:
 20749 ;;		On entry : 0/0
 20750 ;;		On exit  : 0/0
 20751 ;;		Unchanged: 0/0
 20752 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 20753 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 20754 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 20755 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 20756 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 20757 ;;Total ram usage:        1 bytes
 20758 ;; Hardware stack levels used: 1
 20759 ;; This function calls:
 20760 ;;		Nothing
 20761 ;; This function is called by:
 20762 ;;		_EUSART_Initialize
 20763 ;;		_INTERRUPT_InterruptManager
 20764 ;; This function uses a non-reentrant model
 20765 ;;
 20766                           
 20767     1D9D                     _EUSART_TransmitISR:	
 20768                           ;psect for function _EUSART_TransmitISR
 20769                           
 20770     1D9D                     i1l6113:	
 20771                           ;incstack = 0
 20772                           ; Regs used in _EUSART_TransmitISR: [wreg+fsr1l+fsr1h+status,2+status,0]
 20773                           
 20774                           
 20775                           ;mcc_generated_files/uart/src/eusart.c: 379:     uint8_t tempTxTail;;mcc_generated_files
      +                          /uart/src/eusart.c: 381:     if(sizeof(eusartTxBuffer) > eusartTxBufferRemaining)
 20776     1D9D  3008               	movlw	8
 20777     1D9E  0020               	movlb	0	; select bank0
 20778     1D9F  0269               	subwf	_eusartTxBufferRemaining,w	;volatile
 20779     1DA0  1803               	skipnc
 20780     1DA1  2DA3               	goto	u749_21
 20781     1DA2  2DA4               	goto	u749_20
 20782     1DA3                     u749_21:
 20783     1DA3  2DB6               	goto	i1l727
 20784     1DA4                     u749_20:
 20785     1DA4                     i1l6115:
 20786                           
 20787                           ;mcc_generated_files/uart/src/eusart.c: 382:     {;mcc_generated_files/uart/src/eusart.c
      +                          : 383:        TX1REG = eusartTxBuffer[eusartTxTail];
 20788     1DA4  086A               	movf	_eusartTxTail,w
 20789     1DA5  3E38               	addlw	(low (_eusartTxBuffer| (0+256)))& (0+255)
 20790     1DA6  0086               	movwf	6
 20791     1DA7  3001               	movlw	1	; select bank2/3
 20792     1DA8  0087               	movwf	7
 20793     1DA9  0801               	movf	1,w
 20794     1DAA  0023               	movlb	3	; select bank3
 20795     1DAB  009A               	movwf	26	;volatile
 20796     1DAC                     i1l6117:
 20797                           
 20798                           ;mcc_generated_files/uart/src/eusart.c: 384:        tempTxTail = (eusartTxTail + 1U) & (
      +                          (8U) - 1U);
 20799     1DAC  0020               	movlb	0	; select bank0
 20800     1DAD  086A               	movf	_eusartTxTail,w	;volatile
 20801     1DAE  3E01               	addlw	1
 20802     1DAF  3907               	andlw	7
 20803     1DB0  00F0               	movwf	EUSART_TransmitISR@tempTxTail
 20804     1DB1                     i1l6119:
 20805                           
 20806                           ;mcc_generated_files/uart/src/eusart.c: 386:        eusartTxTail = tempTxTail;
 20807     1DB1  0870               	movf	EUSART_TransmitISR@tempTxTail,w
 20808     1DB2  00EA               	movwf	_eusartTxTail	;volatile
 20809     1DB3                     i1l6121:
 20810                           
 20811                           ;mcc_generated_files/uart/src/eusart.c: 387:        eusartTxBufferRemaining++;
 20812     1DB3  3001               	movlw	1
 20813     1DB4  07E9               	addwf	_eusartTxBufferRemaining,f	;volatile
 20814                           
 20815                           ;mcc_generated_files/uart/src/eusart.c: 388:     }
 20816     1DB5  2DB8               	goto	i1l730
 20817     1DB6                     i1l727:	
 20818                           ;mcc_generated_files/uart/src/eusart.c: 389:     else
 20819                           
 20820                           
 20821                           ;mcc_generated_files/uart/src/eusart.c: 390:     {;mcc_generated_files/uart/src/eusart.c
      +                          : 391:         PIE1bits.TXIE = 0;
 20822     1DB6  0021               	movlb	1	; select bank1
 20823     1DB7  1211               	bcf	17,4	;volatile
 20824     1DB8                     i1l730:
 20825     1DB8  0008               	return
 20826     1DB9                     __end_of_EUSART_TransmitISR:
 20827                           
 20828                           	psect	text87
 20829     1008                     __ptext87:	
 20830 ;; *************** function _EUSART_ReceiveISR *****************
 20831 ;; Defined at:
 20832 ;;		line 308 in file "mcc_generated_files/uart/src/eusart.c"
 20833 ;; Parameters:    Size  Location     Type
 20834 ;;		None
 20835 ;; Auto vars:     Size  Location     Type
 20836 ;;  tempRxHead      1    1[COMMON] unsigned char 
 20837 ;;  regValue        1    0[COMMON] unsigned char 
 20838 ;; Return value:  Size  Location     Type
 20839 ;;                  1    wreg      void 
 20840 ;; Registers used:
 20841 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 20842 ;; Tracked objects:
 20843 ;;		On entry : 0/0
 20844 ;;		On exit  : 0/0
 20845 ;;		Unchanged: 0/0
 20846 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 20847 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 20848 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 20849 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 20850 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 20851 ;;Total ram usage:        2 bytes
 20852 ;; Hardware stack levels used: 1
 20853 ;; Hardware stack levels required when called: 1
 20854 ;; This function calls:
 20855 ;;		NULL
 20856 ;;		_EUSART_DefaultFramingErrorCallback
 20857 ;;		_EUSART_DefaultOverrunErrorCallback
 20858 ;; This function is called by:
 20859 ;;		_EUSART_Initialize
 20860 ;;		_INTERRUPT_InterruptManager
 20861 ;; This function uses a non-reentrant model
 20862 ;;
 20863                           
 20864     1008                     _EUSART_ReceiveISR:	
 20865                           ;psect for function _EUSART_ReceiveISR
 20866                           
 20867     1008                     i1l6079:	
 20868                           ;incstack = 0
 20869                           ; Regs used in _EUSART_ReceiveISR: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
 20870                           
 20871                           
 20872                           ;mcc_generated_files/uart/src/eusart.c: 310:     uint8_t regValue;;mcc_generated_files/u
      +                          art/src/eusart.c: 311:  uint8_t tempRxHead;;mcc_generated_files/uart/src/eusart.c: 314: 
      +                              eusartRxStatusBuffer[eusartRxHead].status = 0;
 20873     1008  0020               	movlb	0	; select bank0
 20874     1009  3568               	lslf	_eusartRxHead,w	;volatile
 20875     100A  3E20               	addlw	(low (_eusartRxStatusBuffer| (0+256)))& (0+255)
 20876     100B  0086               	movwf	6
 20877     100C  3001               	movlw	1	; select bank2/3
 20878     100D  0087               	movwf	7
 20879     100E  3000               	movlw	0
 20880     100F  3FC0               	movwi [0]fsr1
 20881     1010  3FC1               	movwi [1]fsr1
 20882     1011                     i1l6081:
 20883                           
 20884                           ;mcc_generated_files/uart/src/eusart.c: 316:     if(1 == RC1STAbits.OERR)
 20885     1011  0023               	movlb	3	; select bank3
 20886     1012  1C9D               	btfss	29,1	;volatile
 20887     1013  2815               	goto	u744_21
 20888     1014  2816               	goto	u744_20
 20889     1015                     u744_21:
 20890     1015  2828               	goto	i1l6089
 20891     1016                     u744_20:
 20892     1016                     i1l6083:
 20893                           
 20894                           ;mcc_generated_files/uart/src/eusart.c: 317:     {;mcc_generated_files/uart/src/eusart.c
      +                          : 318:         eusartRxStatusBuffer[eusartRxHead].oerr = 1;
 20895     1016  0020               	movlb	0	; select bank0
 20896     1017  3568               	lslf	_eusartRxHead,w	;volatile
 20897     1018  3E20               	addlw	(low (_eusartRxStatusBuffer| (0+256)))& (0+255)
 20898     1019  0086               	movwf	6
 20899     101A  3001               	movlw	1	; select bank2/3
 20900     101B  0087               	movwf	7
 20901     101C  1501               	bsf	1,2
 20902     101D                     i1l6085:
 20903                           
 20904                           ;mcc_generated_files/uart/src/eusart.c: 319:         if(((void*)0) != EUSART_OverrunErro
      +                          rHandler)
 20905     101D  085B               	movf	_EUSART_OverrunErrorHandler,w
 20906     101E  045C               	iorwf	_EUSART_OverrunErrorHandler+1,w
 20907     101F  1903               	btfsc	3,2
 20908     1020  2822               	goto	u745_21
 20909     1021  2823               	goto	u745_20
 20910     1022                     u745_21:
 20911     1022  2828               	goto	i1l6089
 20912     1023                     u745_20:
 20913     1023                     i1l6087:
 20914                           
 20915                           ;mcc_generated_files/uart/src/eusart.c: 320:         {;mcc_generated_files/uart/src/eusa
      +                          rt.c: 321:             EUSART_OverrunErrorHandler();
 20916     1023  085C               	movf	_EUSART_OverrunErrorHandler+1,w
 20917     1024  008A               	movwf	10
 20918     1025  085B               	movf	_EUSART_OverrunErrorHandler,w
 20919     1026  000A               	callw
 20920     1027  3190               	pagesel	$
 20921     1028                     i1l6089:
 20922                           
 20923                           ;mcc_generated_files/uart/src/eusart.c: 324:     if(1 == RC1STAbits.FERR)
 20924     1028  0023               	movlb	3	; select bank3
 20925     1029  1D1D               	btfss	29,2	;volatile
 20926     102A  282C               	goto	u746_21
 20927     102B  282D               	goto	u746_20
 20928     102C                     u746_21:
 20929     102C  283F               	goto	i1l6097
 20930     102D                     u746_20:
 20931     102D                     i1l6091:
 20932                           
 20933                           ;mcc_generated_files/uart/src/eusart.c: 325:     {;mcc_generated_files/uart/src/eusart.c
      +                          : 326:         eusartRxStatusBuffer[eusartRxHead].ferr = 1;
 20934     102D  0020               	movlb	0	; select bank0
 20935     102E  3568               	lslf	_eusartRxHead,w	;volatile
 20936     102F  3E20               	addlw	(low (_eusartRxStatusBuffer| (0+256)))& (0+255)
 20937     1030  0086               	movwf	6
 20938     1031  3001               	movlw	1	; select bank2/3
 20939     1032  0087               	movwf	7
 20940     1033  1481               	bsf	1,1
 20941     1034                     i1l6093:
 20942                           
 20943                           ;mcc_generated_files/uart/src/eusart.c: 327:         if(((void*)0) != EUSART_FramingErro
      +                          rHandler)
 20944     1034  085D               	movf	_EUSART_FramingErrorHandler,w
 20945     1035  045E               	iorwf	_EUSART_FramingErrorHandler+1,w
 20946     1036  1903               	btfsc	3,2
 20947     1037  2839               	goto	u747_21
 20948     1038  283A               	goto	u747_20
 20949     1039                     u747_21:
 20950     1039  283F               	goto	i1l6097
 20951     103A                     u747_20:
 20952     103A                     i1l6095:
 20953                           
 20954                           ;mcc_generated_files/uart/src/eusart.c: 328:         {;mcc_generated_files/uart/src/eusa
      +                          rt.c: 329:             EUSART_FramingErrorHandler();
 20955     103A  085E               	movf	_EUSART_FramingErrorHandler+1,w
 20956     103B  008A               	movwf	10
 20957     103C  085D               	movf	_EUSART_FramingErrorHandler,w
 20958     103D  000A               	callw
 20959     103E  3190               	pagesel	$
 20960     103F                     i1l6097:
 20961                           
 20962                           ;mcc_generated_files/uart/src/eusart.c: 333:     regValue = RC1REG;
 20963     103F  0023               	movlb	3	; select bank3
 20964     1040  0819               	movf	25,w	;volatile
 20965     1041  00F0               	movwf	EUSART_ReceiveISR@regValue
 20966     1042                     i1l6099:
 20967                           
 20968                           ;mcc_generated_files/uart/src/eusart.c: 335:     tempRxHead = (eusartRxHead + 1U) & ((8U
      +                          ) - 1U);
 20969     1042  0020               	movlb	0	; select bank0
 20970     1043  0868               	movf	_eusartRxHead,w	;volatile
 20971     1044  3E01               	addlw	1
 20972     1045  3907               	andlw	7
 20973     1046  00F1               	movwf	EUSART_ReceiveISR@tempRxHead
 20974     1047                     i1l6101:
 20975                           
 20976                           ;mcc_generated_files/uart/src/eusart.c: 336:     if (tempRxHead == eusartRxTail)
 20977     1047  0871               	movf	EUSART_ReceiveISR@tempRxHead,w
 20978     1048  0667               	xorwf	_eusartRxTail,w	;volatile
 20979     1049  1D03               	skipz
 20980     104A  284C               	goto	u748_21
 20981     104B  284D               	goto	u748_20
 20982     104C                     u748_21:
 20983     104C  284E               	goto	i1l6105
 20984     104D                     u748_20:
 20985     104D  2859               	goto	i1l717
 20986     104E                     i1l6105:
 20987                           
 20988                           ;mcc_generated_files/uart/src/eusart.c: 341:     {;mcc_generated_files/uart/src/eusart.c
      +                          : 342:         eusartRxBuffer[eusartRxHead] = regValue;
 20989     104E  0868               	movf	_eusartRxHead,w
 20990     104F  3E30               	addlw	(low (_eusartRxBuffer| (0+256)))& (0+255)
 20991     1050  0086               	movwf	6
 20992     1051  3001               	movlw	1	; select bank2/3
 20993     1052  0087               	movwf	7
 20994     1053  0870               	movf	EUSART_ReceiveISR@regValue,w
 20995     1054  0081               	movwf	1
 20996     1055                     i1l6107:
 20997                           
 20998                           ;mcc_generated_files/uart/src/eusart.c: 343:   eusartRxHead = tempRxHead;
 20999     1055  0871               	movf	EUSART_ReceiveISR@tempRxHead,w
 21000     1056  00E8               	movwf	_eusartRxHead	;volatile
 21001     1057                     i1l6109:
 21002                           
 21003                           ;mcc_generated_files/uart/src/eusart.c: 344:   eusartRxCount++;
 21004     1057  3001               	movlw	1
 21005     1058  07E6               	addwf	_eusartRxCount,f	;volatile
 21006     1059                     i1l717:
 21007     1059  0008               	return
 21008     105A                     __end_of_EUSART_ReceiveISR:
 21009                           
 21010                           	psect	text88
 21011     1B42                     __ptext88:	
 21012 ;; *************** function _EUSART_DefaultOverrunErrorCallback *****************
 21013 ;; Defined at:
 21014 ;;		line 423 in file "mcc_generated_files/uart/src/eusart.c"
 21015 ;; Parameters:    Size  Location     Type
 21016 ;;		None
 21017 ;; Auto vars:     Size  Location     Type
 21018 ;;		None
 21019 ;; Return value:  Size  Location     Type
 21020 ;;                  1    wreg      void 
 21021 ;; Registers used:
 21022 ;;		None
 21023 ;; Tracked objects:
 21024 ;;		On entry : 0/0
 21025 ;;		On exit  : 0/0
 21026 ;;		Unchanged: 0/0
 21027 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 21028 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 21029 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 21030 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 21031 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 21032 ;;Total ram usage:        0 bytes
 21033 ;; Hardware stack levels used: 1
 21034 ;; This function calls:
 21035 ;;		Nothing
 21036 ;; This function is called by:
 21037 ;;		_EUSART_Initialize
 21038 ;;		_EUSART_ReceiveISR
 21039 ;; This function uses a non-reentrant model
 21040 ;;
 21041                           
 21042     1B42                     _EUSART_DefaultOverrunErrorCallback:	
 21043                           ;psect for function _EUSART_DefaultOverrunErrorCallback
 21044                           
 21045     1B42                     i1l5853:	
 21046                           ;incstack = 0
 21047                           ; Regs used in _EUSART_DefaultOverrunErrorCallback: []
 21048                           
 21049                           
 21050                           ;mcc_generated_files/uart/src/eusart.c: 426:     RC1STAbits.CREN = 0;
 21051     1B42  0023               	movlb	3	; select bank3
 21052     1B43  121D               	bcf	29,4	;volatile
 21053                           
 21054                           ;mcc_generated_files/uart/src/eusart.c: 427:     RC1STAbits.CREN = 1;
 21055     1B44  161D               	bsf	29,4	;volatile
 21056     1B45                     i1l748:
 21057     1B45  0008               	return
 21058     1B46                     __end_of_EUSART_DefaultOverrunErrorCallback:
 21059                           
 21060                           	psect	text89
 21061     1B40                     __ptext89:	
 21062 ;; *************** function _EUSART_DefaultFramingErrorCallback *****************
 21063 ;; Defined at:
 21064 ;;		line 418 in file "mcc_generated_files/uart/src/eusart.c"
 21065 ;; Parameters:    Size  Location     Type
 21066 ;;		None
 21067 ;; Auto vars:     Size  Location     Type
 21068 ;;		None
 21069 ;; Return value:  Size  Location     Type
 21070 ;;                  1    wreg      void 
 21071 ;; Registers used:
 21072 ;;		None
 21073 ;; Tracked objects:
 21074 ;;		On entry : 0/0
 21075 ;;		On exit  : 0/0
 21076 ;;		Unchanged: 0/0
 21077 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 21078 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 21079 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 21080 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 21081 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 21082 ;;Total ram usage:        0 bytes
 21083 ;; Hardware stack levels used: 1
 21084 ;; This function calls:
 21085 ;;		Nothing
 21086 ;; This function is called by:
 21087 ;;		_EUSART_Initialize
 21088 ;;		_EUSART_ReceiveISR
 21089 ;; This function uses a non-reentrant model
 21090 ;;
 21091                           
 21092     1B40                     _EUSART_DefaultFramingErrorCallback:	
 21093                           ;psect for function _EUSART_DefaultFramingErrorCallback
 21094                           
 21095     1B40                     i1l745:	
 21096                           ;incstack = 0
 21097                           ; Regs used in _EUSART_DefaultFramingErrorCallback: []
 21098                           
 21099     1B40  0008               	return
 21100     1B41                     __end_of_EUSART_DefaultFramingErrorCallback:
 21101                           
 21102                           	psect	text90
 21103     1C3F                     __ptext90:	
 21104 ;; *************** function _ADC_ISR *****************
 21105 ;; Defined at:
 21106 ;;		line 134 in file "mcc_generated_files/adc/src/adc.c"
 21107 ;; Parameters:    Size  Location     Type
 21108 ;;		None
 21109 ;; Auto vars:     Size  Location     Type
 21110 ;;		None
 21111 ;; Return value:  Size  Location     Type
 21112 ;;                  1    wreg      void 
 21113 ;; Registers used:
 21114 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
 21115 ;; Tracked objects:
 21116 ;;		On entry : 0/0
 21117 ;;		On exit  : 0/0
 21118 ;;		Unchanged: 0/0
 21119 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 21120 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 21121 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 21122 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 21123 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 21124 ;;Total ram usage:        0 bytes
 21125 ;; Hardware stack levels used: 1
 21126 ;; Hardware stack levels required when called: 2
 21127 ;; This function calls:
 21128 ;;		NULL
 21129 ;;		_ADC_DefaultInterruptHandler
 21130 ;;		_adcConversionDoneHandler
 21131 ;; This function is called by:
 21132 ;;		_INTERRUPT_InterruptManager
 21133 ;; This function uses a non-reentrant model
 21134 ;;
 21135                           
 21136     1C3F                     _ADC_ISR:	
 21137                           ;psect for function _ADC_ISR
 21138                           
 21139     1C3F                     i1l6035:	
 21140                           ;incstack = 0
 21141                           ; Regs used in _ADC_ISR: [wreg-fsr0h+status,2+status,0+pclath+cstack]
 21142                           
 21143                           
 21144                           ;mcc_generated_files/adc/src/adc.c: 137:     PIR1bits.ADIF = 0;
 21145     1C3F  0020               	movlb	0	; select bank0
 21146     1C40  1311               	bcf	17,6	;volatile
 21147     1C41                     i1l6037:
 21148                           
 21149                           ;mcc_generated_files/adc/src/adc.c: 139:  if(ADC_InterruptHandler)
 21150     1C41  0022               	movlb	2	; select bank2
 21151     1C42  0866               	movf	_ADC_InterruptHandler^(0+256),w
 21152     1C43  0467               	iorwf	(_ADC_InterruptHandler+1)^(0+256),w
 21153     1C44  1903               	btfsc	3,2
 21154     1C45  2C47               	goto	u739_21
 21155     1C46  2C48               	goto	u739_20
 21156     1C47                     u739_21:
 21157     1C47  2C4D               	goto	i1l52
 21158     1C48                     u739_20:
 21159     1C48                     i1l6039:
 21160                           
 21161                           ;mcc_generated_files/adc/src/adc.c: 140:     {;mcc_generated_files/adc/src/adc.c: 141:  
      +                                 ADC_InterruptHandler();
 21162     1C48  0867               	movf	(_ADC_InterruptHandler+1)^(0+256),w
 21163     1C49  008A               	movwf	10
 21164     1C4A  0866               	movf	_ADC_InterruptHandler^(0+256),w
 21165     1C4B  000A               	callw
 21166     1C4C  319C               	pagesel	$
 21167     1C4D                     i1l52:
 21168     1C4D  0008               	return
 21169     1C4E                     __end_of_ADC_ISR:
 21170                           
 21171                           	psect	text91
 21172     1B3F                     __ptext91:	
 21173 ;; *************** function _ADC_DefaultInterruptHandler *****************
 21174 ;; Defined at:
 21175 ;;		line 150 in file "mcc_generated_files/adc/src/adc.c"
 21176 ;; Parameters:    Size  Location     Type
 21177 ;;		None
 21178 ;; Auto vars:     Size  Location     Type
 21179 ;;		None
 21180 ;; Return value:  Size  Location     Type
 21181 ;;                  1    wreg      void 
 21182 ;; Registers used:
 21183 ;;		None
 21184 ;; Tracked objects:
 21185 ;;		On entry : 0/0
 21186 ;;		On exit  : 0/0
 21187 ;;		Unchanged: 0/0
 21188 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 21189 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 21190 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 21191 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 21192 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 21193 ;;Total ram usage:        0 bytes
 21194 ;; Hardware stack levels used: 1
 21195 ;; This function calls:
 21196 ;;		Nothing
 21197 ;; This function is called by:
 21198 ;;		_ADC_Initialize
 21199 ;;		_ADC_ISR
 21200 ;; This function uses a non-reentrant model
 21201 ;;
 21202                           
 21203     1B3F                     _ADC_DefaultInterruptHandler:	
 21204                           ;psect for function _ADC_DefaultInterruptHandler
 21205                           
 21206     1B3F                     i1l58:	
 21207                           ;incstack = 0
 21208                           ; Regs used in _ADC_DefaultInterruptHandler: []
 21209                           
 21210     1B3F  0008               	return
 21211     1B40                     __end_of_ADC_DefaultInterruptHandler:
 21212                           
 21213                           	psect	text92
 21214     1F20                     __ptext92:	
 21215 ;; *************** function _adcConversionDoneHandler *****************
 21216 ;; Defined at:
 21217 ;;		line 5 in file "adcMeasurements.c"
 21218 ;; Parameters:    Size  Location     Type
 21219 ;;		None
 21220 ;; Auto vars:     Size  Location     Type
 21221 ;;		None
 21222 ;; Return value:  Size  Location     Type
 21223 ;;                  1    wreg      void 
 21224 ;; Registers used:
 21225 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
 21226 ;; Tracked objects:
 21227 ;;		On entry : 0/0
 21228 ;;		On exit  : 0/0
 21229 ;;		Unchanged: 0/0
 21230 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 21231 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 21232 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 21233 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 21234 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 21235 ;;Total ram usage:        2 bytes
 21236 ;; Hardware stack levels used: 1
 21237 ;; Hardware stack levels required when called: 1
 21238 ;; This function calls:
 21239 ;;		_ADC_GetConversionResult
 21240 ;;		i1_ADC_SelectChannel
 21241 ;; This function is called by:
 21242 ;;		_initAdcMultiplexer
 21243 ;;		_ADC_ISR
 21244 ;; This function uses a non-reentrant model
 21245 ;;
 21246                           
 21247     1F20                     _adcConversionDoneHandler:	
 21248                           ;psect for function _adcConversionDoneHandler
 21249                           
 21250     1F20                     i1l5855:	
 21251                           ;incstack = 0
 21252                           ; Regs used in _adcConversionDoneHandler: [wreg-fsr0h+status,2+status,0+pclath+cstack]
 21253                           
 21254                           
 21255                           ;adcMeasurements.c: 10:     static adc_channel_t new_channel = potentiometer;;adcMeasure
      +                          ments.c: 11:     switch (new_channel) {
 21256     1F20  2F38               	goto	i1l5867
 21257     1F21                     i1l5857:
 21258                           
 21259                           ;adcMeasurements.c: 13:             ADC_potentiometer = ADC_GetConversionResult();
 21260     1F21  319B  234E  319F   	fcall	_ADC_GetConversionResult
 21261     1F24  0871               	movf	?_ADC_GetConversionResult+1,w
 21262     1F25  0022               	movlb	2	; select bank2
 21263     1F26  00CB               	movwf	(_ADC_potentiometer+1)^(0+256)	;volatile
 21264     1F27  0870               	movf	?_ADC_GetConversionResult,w
 21265     1F28  00CA               	movwf	_ADC_potentiometer^(0+256)	;volatile
 21266     1F29                     i1l5859:
 21267                           
 21268                           ;adcMeasurements.c: 14:             new_channel = hoogtesensor;
 21269     1F29  3012               	movlw	18
 21270     1F2A  0020               	movlb	0	; select bank0
 21271     1F2B  00EF               	movwf	adcConversionDoneHandler@new_channel
 21272                           
 21273                           ;adcMeasurements.c: 15:             break;
 21274     1F2C  2F49               	goto	i1l5869
 21275     1F2D                     i1l5861:
 21276                           
 21277                           ;adcMeasurements.c: 17:             ADC_hoogtesensor = ADC_GetConversionResult();
 21278     1F2D  319B  234E  319F   	fcall	_ADC_GetConversionResult
 21279     1F30  0871               	movf	?_ADC_GetConversionResult+1,w
 21280     1F31  0020               	movlb	0	; select bank0
 21281     1F32  00DA               	movwf	_ADC_hoogtesensor+1	;volatile
 21282     1F33  0870               	movf	?_ADC_GetConversionResult,w
 21283     1F34  00D9               	movwf	_ADC_hoogtesensor	;volatile
 21284     1F35                     i1l5863:
 21285                           
 21286                           ;adcMeasurements.c: 18:             new_channel = potentiometer;
 21287     1F35  3010               	movlw	16
 21288     1F36  00EF               	movwf	adcConversionDoneHandler@new_channel
 21289                           
 21290                           ;adcMeasurements.c: 19:             break;
 21291     1F37  2F49               	goto	i1l5869
 21292     1F38                     i1l5867:
 21293     1F38  0020               	movlb	0	; select bank0
 21294     1F39  086F               	movf	adcConversionDoneHandler@new_channel,w
 21295     1F3A  00F2               	movwf	??_adcConversionDoneHandler
 21296     1F3B  01F3               	clrf	??_adcConversionDoneHandler+1
 21297                           
 21298                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 21299                           ; Switch size 1, requested type "simple"
 21300                           ; Number of cases is 1, Range of values is 0 to 0
 21301                           ; switch strategies available:
 21302                           ; Name         Instructions Cycles
 21303                           ; simple_byte            4     3 (average)
 21304                           ; direct_byte            8     6 (fixed)
 21305                           ; jumptable            260     6 (fixed)
 21306                           ;	Chosen strategy is simple_byte
 21307     1F3C  0873               	movf	??_adcConversionDoneHandler+1,w
 21308     1F3D  3A00               	xorlw	0	; case 0
 21309     1F3E  1903               	skipnz
 21310     1F3F  2F41               	goto	i1l6271
 21311     1F40  2F49               	goto	i1l5869
 21312     1F41                     i1l6271:
 21313                           
 21314                           ; Switch size 1, requested type "simple"
 21315                           ; Number of cases is 2, Range of values is 16 to 18
 21316                           ; switch strategies available:
 21317                           ; Name         Instructions Cycles
 21318                           ; simple_byte            7     4 (average)
 21319                           ; direct_byte           15     9 (fixed)
 21320                           ; jumptable            263     9 (fixed)
 21321                           ;	Chosen strategy is simple_byte
 21322     1F41  0872               	movf	??_adcConversionDoneHandler,w
 21323     1F42  3A10               	xorlw	16	; case 16
 21324     1F43  1903               	skipnz
 21325     1F44  2F21               	goto	i1l5857
 21326     1F45  3A02               	xorlw	2	; case 18
 21327     1F46  1903               	skipnz
 21328     1F47  2F2D               	goto	i1l5861
 21329     1F48  2F49               	goto	i1l5869
 21330     1F49                     i1l5869:
 21331                           
 21332                           ;adcMeasurements.c: 21:     ADC_SelectChannel(new_channel);
 21333     1F49  086F               	movf	adcConversionDoneHandler@new_channel,w
 21334     1F4A  319B  23E7  319F   	fcall	i1_ADC_SelectChannel
 21335     1F4D                     i1l811:
 21336     1F4D  0008               	return
 21337     1F4E                     __end_of_adcConversionDoneHandler:
 21338                           
 21339                           	psect	text93
 21340     1BE7                     __ptext93:	
 21341 ;; *************** function i1_ADC_SelectChannel *****************
 21342 ;; Defined at:
 21343 ;;		line 82 in file "mcc_generated_files/adc/src/adc.c"
 21344 ;; Parameters:    Size  Location     Type
 21345 ;;  channel         1    wreg     enum E6663
 21346 ;; Auto vars:     Size  Location     Type
 21347 ;;  channel         1    1[COMMON] enum E6663
 21348 ;; Return value:  Size  Location     Type
 21349 ;;                  1    wreg      void 
 21350 ;; Registers used:
 21351 ;;		wreg, status,2, status,0
 21352 ;; Tracked objects:
 21353 ;;		On entry : 0/0
 21354 ;;		On exit  : 0/0
 21355 ;;		Unchanged: 0/0
 21356 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 21357 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 21358 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 21359 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 21360 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 21361 ;;Total ram usage:        2 bytes
 21362 ;; Hardware stack levels used: 1
 21363 ;; This function calls:
 21364 ;;		Nothing
 21365 ;; This function is called by:
 21366 ;;		_adcConversionDoneHandler
 21367 ;; This function uses a non-reentrant model
 21368 ;;
 21369                           
 21370     1BE7                     i1_ADC_SelectChannel:	
 21371                           ;psect for function i1_ADC_SelectChannel
 21372                           
 21373                           
 21374                           ;incstack = 0
 21375                           ; Regs used in i1_ADC_SelectChannel: [wreg+status,2+status,0]
 21376                           ;i1ADC_SelectChannel@channel stored from wreg
 21377     1BE7  00F1               	movwf	i1ADC_SelectChannel@channel
 21378     1BE8                     i1l5279:
 21379                           
 21380                           ;mcc_generated_files/adc/src/adc.c: 82: void ADC_SelectChannel(adc_channel_t channel);mc
      +                          c_generated_files/adc/src/adc.c: 83: {;mcc_generated_files/adc/src/adc.c: 85:     ADCON0
      +                          bits.CHS = channel;
 21381     1BE8  0871               	movf	i1ADC_SelectChannel@channel,w
 21382     1BE9  00F0               	movwf	??i1_ADC_SelectChannel
 21383     1BEA  0DF0               	rlf	??i1_ADC_SelectChannel,f
 21384     1BEB  0DF0               	rlf	??i1_ADC_SelectChannel,f
 21385     1BEC  0021               	movlb	1	; select bank1
 21386     1BED  081D               	movf	29,w	;volatile
 21387     1BEE  0670               	xorwf	??i1_ADC_SelectChannel,w
 21388     1BEF  3903               	andlw	-253
 21389     1BF0  0670               	xorwf	??i1_ADC_SelectChannel,w
 21390     1BF1  009D               	movwf	29	;volatile
 21391     1BF2                     i1l30:
 21392     1BF2  0008               	return
 21393     1BF3                     __end_ofi1_ADC_SelectChannel:
 21394                           
 21395                           	psect	text94
 21396     1B4E                     __ptext94:	
 21397 ;; *************** function _ADC_GetConversionResult *****************
 21398 ;; Defined at:
 21399 ;;		line 100 in file "mcc_generated_files/adc/src/adc.c"
 21400 ;; Parameters:    Size  Location     Type
 21401 ;;		None
 21402 ;; Auto vars:     Size  Location     Type
 21403 ;;		None
 21404 ;; Return value:  Size  Location     Type
 21405 ;;                  2    0[COMMON] unsigned short 
 21406 ;; Registers used:
 21407 ;;		wreg
 21408 ;; Tracked objects:
 21409 ;;		On entry : 0/0
 21410 ;;		On exit  : 0/0
 21411 ;;		Unchanged: 0/0
 21412 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 21413 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 21414 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 21415 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 21416 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 21417 ;;Total ram usage:        2 bytes
 21418 ;; Hardware stack levels used: 1
 21419 ;; This function calls:
 21420 ;;		Nothing
 21421 ;; This function is called by:
 21422 ;;		_adcConversionDoneHandler
 21423 ;; This function uses a non-reentrant model
 21424 ;;
 21425                           
 21426     1B4E                     _ADC_GetConversionResult:	
 21427                           ;psect for function _ADC_GetConversionResult
 21428                           
 21429     1B4E                     i1l5017:	
 21430                           ;incstack = 0
 21431                           ; Regs used in _ADC_GetConversionResult: [wreg]
 21432                           
 21433                           
 21434                           ;mcc_generated_files/adc/src/adc.c: 103:     return ((adc_result_t)((ADRESH << 8) + ADRE
      +                          SL));
 21435     1B4E  0021               	movlb	1	; select bank1
 21436     1B4F  081C               	movf	28,w	;volatile
 21437     1B50  00F1               	movwf	?_ADC_GetConversionResult+1
 21438     1B51  081B               	movf	27,w	;volatile
 21439     1B52  00F0               	movwf	?_ADC_GetConversionResult
 21440     1B53                     i1l39:
 21441     1B53  0008               	return
 21442     1B54                     __end_of_ADC_GetConversionResult:
 21443     0002                     ___latbits      equ	2
 21444     007E                     btemp           set	126	;btemp
 21445     007E                     int$flags       set	126
 21446     007E                     wtemp0          set	126
 21447                           
 21448                           	psect	config
 21449                           
 21450                           ;Config register CONFIG1 @ 0x8007
 21451                           ;	FEXTOSC External Oscillator mode Selection bits
 21452                           ;	FEXTOSC = OFF, Oscillator not enabled
 21453                           ;	Power-up default value for COSC bits
 21454                           ;	RSTOSC = HFINT32, HFINTOSC with 2x PLL (32MHz)
 21455                           ;	Clock Out Enable bit
 21456                           ;	CLKOUTEN = OFF, CLKOUT function is disabled; I/O or oscillator function on OSC2
 21457                           ;	Clock Switch Enable bit
 21458                           ;	CSWEN = ON, Writing to NOSC and NDIV is allowed
 21459                           ;	Fail-Safe Clock Monitor Enable
 21460                           ;	FCMEN = ON, Fail-Safe Clock Monitor is enabled
 21461     8007                     	org	32775
 21462     8007  3F8C               	dw	16268
 21463                           
 21464                           ;Config register CONFIG2 @ 0x8008
 21465                           ;	Master Clear Enable bit
 21466                           ;	MCLRE = ON, MCLR/VPP pin function is MCLR; Weak pull-up enabled
 21467                           ;	Power-up Timer Enable bit
 21468                           ;	PWRTE = OFF, PWRT disabled
 21469                           ;	Watchdog Timer Enable bits
 21470                           ;	WDTE = OFF, WDT disabled; SWDTEN is ignored
 21471                           ;	Low-power BOR enable bit
 21472                           ;	LPBOREN = OFF, ULPBOR disabled
 21473                           ;	Brown-out Reset Enable bits
 21474                           ;	BOREN = ON, Brown-out Reset enabled, SBOREN bit ignored
 21475                           ;	Brown-out Reset Voltage selection bit
 21476                           ;	BORV = LOW, Brown-out voltage (Vbor) set to 2.45V
 21477                           ;	PPSLOCK bit One-Way Set Enable bit
 21478                           ;	PPS1WAY = ON, The PPSLOCK bit can be cleared and set only once; PPS registers remain l
      +                          ocked after one clear/set cycle
 21479                           ;	Stack Overflow/Underflow Reset Enable bit
 21480                           ;	STVREN = ON, Stack Overflow or Underflow will cause a Reset
 21481                           ;	Debugger enable bit
 21482                           ;	DEBUG = 0x1, unprogrammed default
 21483     8008                     	org	32776
 21484     8008  3FF3               	dw	16371
 21485                           
 21486                           ;Config register CONFIG3 @ 0x8009
 21487                           ;	User NVM self-write protection bits
 21488                           ;	WRT = OFF, Write protection off
 21489                           ;	Low Voltage Programming Enable bit
 21490                           ;	LVP = ON, Low Voltage programming enabled. MCLR/VPP pin function is MCLR. MCLRE config
      +                          uration bit is ignored.
 21491     8009                     	org	32777
 21492     8009  3FFF               	dw	16383
 21493                           
 21494                           ;Config register CONFIG4 @ 0x800A
 21495                           ;	User NVM Program Memory Code Protection bit
 21496                           ;	CP = OFF, User NVM code protection disabled
 21497                           ;	Data NVM Memory Code Protection bit
 21498                           ;	CPD = OFF, Data NVM code protection disabled
 21499     800A                     	org	32778
 21500     800A  3FFF               	dw	16383

Data Sizes:
    Strings     172
    Constant    86
    Data        12
    BSS         123
    Persistent  44
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     14      14
    BANK0            80     53      80
    BANK1            80     80      80
    BANK2            80     14      80
    BANK3            80      0      54
    BANK4            80      0       0
    BANK5            80      0       0
    BANK6            80      0       0
    BANK7            80      0       0
    BANK8            80      0       0
    BANK9            80      0       0
    BANK10           80      0       0
    BANK11           80      0       0
    BANK12           48      0       0

Pointer List with Targets:

    ADC_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> ADC_DefaultInterruptHandler(), adcConversionDoneHandler(), NULL(), 

    ADC_SetInterruptHandler@InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> ADC_DefaultInterruptHandler(), adcConversionDoneHandler(), 

    atoi@s	PTR const unsigned char  size(1) Largest target is 20
		 -> line(BANK3[20]), 

    dtoa@fp	PTR struct _IO_FILE size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    EUSART_FramingErrorCallbackRegister@callbackHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART_DefaultFramingErrorCallback(), 

    EUSART_FramingErrorHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART_DefaultFramingErrorCallback(), NULL(), 

    EUSART_OverrunErrorCallbackRegister@callbackHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART_DefaultOverrunErrorCallback(), 

    EUSART_OverrunErrorHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART_DefaultOverrunErrorCallback(), NULL(), 

    EUSART_RxCompleteInterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> NULL(), 

    EUSART_RxInterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART_ReceiveISR(), NULL(), 

    EUSART_TxCompleteInterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> NULL(), 

    EUSART_TxInterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART_TransmitISR(), NULL(), 

    fputc@fp	PTR struct _IO_FILE size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    fputc@fp$.$buffer	PTR unsigned char  size(2) Largest target is 0

    fputc@fp$.$source	PTR const unsigned char  size(2) Largest target is 0

    fputs@fp	PTR struct _IO_FILE size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    fputs@s	PTR const unsigned char  size(1) Largest target is 32
		 -> dbuf(BANK3[32]), 

    INT_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> INT_DefaultInterruptHandler(), NULL(), 

    INT_SetInterruptHandler@InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> INT_DefaultInterruptHandler(), 

    ledstrip$BufferExchange	PTR FTN(PTR void ,unsigned int ,)void  size(2) Largest target is 1
		 -> SPI1_BufferExchange(), 

    ledstrip$BufferRead	PTR FTN(PTR void ,unsigned int ,)void  size(2) Largest target is 1
		 -> SPI1_BufferRead(), 

    ledstrip$BufferWrite	PTR FTN(PTR void ,unsigned int ,)void  size(2) Largest target is 1
		 -> SPI1_BufferWrite(), 

    ledstrip$ByteExchange	PTR FTN(unsigned char ,)unsigned char  size(2) Largest target is 1
		 -> SPI1_ByteExchange(), 

    ledstrip$ByteRead	PTR FTN()unsigned char  size(2) Largest target is 1
		 -> SPI1_ByteRead(), 

    ledstrip$ByteWrite	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> SPI1_ByteWrite(), 

    ledstrip$Close	PTR FTN()void  size(2) Largest target is 1
		 -> SPI1_Close(), 

    ledstrip$Deinitialize	PTR FTN()void  size(2) Largest target is 1
		 -> SPI1_Deinitialize(), 

    ledstrip$Initialize	PTR FTN()void  size(2) Largest target is 1
		 -> SPI1_Initialize(), 

    ledstrip$IsRxReady	PTR FTN()_Bool  size(2) Largest target is 1
		 -> SPI1_IsRxReady(), 

    ledstrip$IsTxReady	PTR FTN()_Bool  size(2) Largest target is 1
		 -> SPI1_IsTxReady(), 

    ledstrip$Open	PTR FTN(unsigned char ,)_Bool  size(2) Largest target is 1
		 -> SPI1_Open(), 

    ledstrip$RxCompleteCallbackRegister	PTR FTN(PTR FTN()void ,)void  size(2) Largest target is 1
		 -> NULL(), 

    ledstrip$TxCompleteCallbackRegister	PTR FTN(PTR FTN()void ,)void  size(2) Largest target is 1
		 -> NULL(), 

    pad@buf	PTR unsigned char  size(1) Largest target is 32
		 -> dbuf(BANK3[32]), 

    pad@fp	PTR struct _IO_FILE size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    printf@ap	PTR void [1] size(1) Largest target is 2
		 -> ?_printf(BANK1[2]), 

    printf@fmt	PTR const unsigned char  size(2) Largest target is 25
		 -> STR_1(CODE[8]), STR_10(CODE[13]), STR_11(CODE[13]), STR_12(CODE[15]), 
		 -> STR_13(CODE[17]), STR_2(CODE[24]), STR_3(CODE[11]), STR_4(CODE[15]), 
		 -> STR_5(CODE[17]), STR_6(CODE[7]), STR_7(CODE[7]), STR_8(CODE[3]), 
		 -> STR_9(CODE[25]), 

    read_prec_or_width@ap	PTR PTR void [1] size(1) Largest target is 1
		 -> printf@ap(BANK1[1]), 

    read_prec_or_width@fmt	PTR PTR const unsigned char  size(1) Largest target is 2
		 -> vfprintf@cfmt(BANK1[2]), 

    S2037$buffer	PTR unsigned char  size(2) Largest target is 0

    S2037$source	PTR const unsigned char  size(2) Largest target is 0

    S223$4$0	PTR void  size(2) Largest target is 0

    S223$5$0	PTR void  size(2) Largest target is 0

    S223$6$0	PTR void  size(2) Largest target is 0

    S223SPI_INTERFACE$BufferExchange	PTR FTN(PTR void ,unsigned int ,)void  size(2) Largest target is 1
		 -> SPI1_BufferExchange(), 

    S223SPI_INTERFACE$BufferRead	PTR FTN(PTR void ,unsigned int ,)void  size(2) Largest target is 1
		 -> SPI1_BufferRead(), 

    S223SPI_INTERFACE$BufferWrite	PTR FTN(PTR void ,unsigned int ,)void  size(2) Largest target is 1
		 -> SPI1_BufferWrite(), 

    S223SPI_INTERFACE$ByteExchange	PTR FTN(unsigned char ,)unsigned char  size(2) Largest target is 1
		 -> SPI1_ByteExchange(), 

    S223SPI_INTERFACE$ByteRead	PTR FTN()unsigned char  size(2) Largest target is 1
		 -> SPI1_ByteRead(), 

    S223SPI_INTERFACE$ByteWrite	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> SPI1_ByteWrite(), 

    S223SPI_INTERFACE$Close	PTR FTN()void  size(2) Largest target is 1
		 -> SPI1_Close(), 

    S223SPI_INTERFACE$Deinitialize	PTR FTN()void  size(2) Largest target is 1
		 -> SPI1_Deinitialize(), 

    S223SPI_INTERFACE$Initialize	PTR FTN()void  size(2) Largest target is 1
		 -> SPI1_Initialize(), 

    S223SPI_INTERFACE$IsRxReady	PTR FTN()_Bool  size(2) Largest target is 1
		 -> SPI1_IsRxReady(), 

    S223SPI_INTERFACE$IsTxReady	PTR FTN()_Bool  size(2) Largest target is 1
		 -> SPI1_IsTxReady(), 

    S223SPI_INTERFACE$Open	PTR FTN(unsigned char ,)_Bool  size(2) Largest target is 1
		 -> SPI1_Open(), 

    S223SPI_INTERFACE$RxCompleteCallbackRegister	PTR FTN(PTR FTN()void ,)void  size(2) Largest target is 1
		 -> NULL(), 

    S223SPI_INTERFACE$TxCompleteCallbackRegister	PTR FTN(PTR FTN()void ,)void  size(2) Largest target is 1
		 -> NULL(), 

    S975$17$0	PTR FTN()void  size(2) Largest target is 0

    S975$18$0	PTR FTN()void  size(2) Largest target is 0

    S975$20$0	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART_DefaultFramingErrorCallback(), 

    S975$21$0	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART_DefaultOverrunErrorCallback(), 

    S975$AutoBaudEventEnableGet	PTR FTN()_Bool  size(2) Largest target is 1
		 -> NULL(), 

    S975$AutoBaudQuery	PTR FTN()_Bool  size(2) Largest target is 1
		 -> EUSART_AutoBaudQuery(), 

    S975$AutoBaudSet	PTR FTN(_Bool ,)void  size(2) Largest target is 1
		 -> EUSART_AutoBaudSet(), 

    S975$BaudRateGet	PTR FTN()unsigned long  size(2) Largest target is 1
		 -> NULL(), 

    S975$BaudRateSet	PTR FTN(unsigned long ,)void  size(2) Largest target is 1
		 -> NULL(), 

    S975$BRGCountGet	PTR FTN()unsigned long  size(2) Largest target is 1
		 -> NULL(), 

    S975$BRGCountSet	PTR FTN(unsigned long ,)void  size(2) Largest target is 1
		 -> NULL(), 

    S975$Deinitialize	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART_Deinitialize(), 

    S975$ErrorGet	PTR FTN()unsigned int  size(2) Largest target is 2
		 -> EUSART_ErrorGet(), 

    S975$EventCallbackRegister	PTR FTN(PTR FTN()void ,)void  size(2) Largest target is 1
		 -> NULL(), 

    S975$FramingErrorCallbackRegister	PTR FTN(PTR FTN()void ,)void  size(2) Largest target is 1
		 -> EUSART_FramingErrorCallbackRegister(), 

    S975$Initialize	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART_Initialize(), 

    S975$IsRxReady	PTR FTN()_Bool  size(2) Largest target is 1
		 -> EUSART_IsRxReady(), 

    S975$IsTxDone	PTR FTN()_Bool  size(2) Largest target is 1
		 -> EUSART_IsTxDone(), 

    S975$IsTxReady	PTR FTN()_Bool  size(2) Largest target is 1
		 -> EUSART_IsTxReady(), 

    S975$OverrunErrorCallbackRegister	PTR FTN(PTR FTN()void ,)void  size(2) Largest target is 1
		 -> EUSART_OverrunErrorCallbackRegister(), 

    S975$ParityErrorCallbackRegister	PTR FTN(PTR FTN()void ,)void  size(2) Largest target is 1
		 -> NULL(), 

    S975$Read	PTR FTN()unsigned char  size(2) Largest target is 1
		 -> EUSART_Read(), 

    S975$RxCompleteCallbackRegister	PTR FTN(PTR FTN()void ,)void  size(2) Largest target is 1
		 -> EUSART_RxCompleteCallbackRegister(), 

    S975$TransmitDisable	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART_TransmitDisable(), 

    S975$TransmitEnable	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART_TransmitEnable(), 

    S975$TxCollisionCallbackRegister	PTR FTN(PTR FTN()void ,)void  size(2) Largest target is 1
		 -> NULL(), 

    S975$TxCompleteCallbackRegister	PTR FTN(PTR FTN()void ,)void  size(2) Largest target is 1
		 -> EUSART_TxCompleteCallbackRegister(), 

    S975$Write	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> EUSART_Write(), 

    sp__readLine	PTR unsigned char  size(1) Largest target is 20
		 -> line(BANK3[20]), 

    str2float@str	PTR unsigned char  size(1) Largest target is 20
		 -> line(BANK3[20]), 

    strlen@a	PTR const unsigned char  size(1) Largest target is 32
		 -> dbuf(BANK3[32]), 

    strlen@s	PTR const unsigned char  size(1) Largest target is 32
		 -> dbuf(BANK3[32]), 

    TMR2_PeriodMatchCallback	PTR FTN()void  size(2) Largest target is 1
		 -> TMR2_DefaultPeriodMatchCallback(), NULL(), 

    TMR4_PeriodMatchCallback	PTR FTN()void  size(2) Largest target is 1
		 -> controller(), TMR4_DefaultPeriodMatchCallback(), NULL(), 

    TMR4_PeriodMatchCallbackRegister@CallbackHandler	PTR FTN()void  size(2) Largest target is 1
		 -> controller(), 

    TMR6_PeriodMatchCallback	PTR FTN()void  size(2) Largest target is 1
		 -> TMR6_DefaultPeriodMatchCallback(), updateLedstripAnimation(), NULL(), 

    TMR6_PeriodMatchCallbackRegister@CallbackHandler	PTR FTN()void  size(2) Largest target is 1
		 -> updateLedstripAnimation(), 

    UART1$AutoBaudEventEnableGet	PTR FTN()_Bool  size(2) Largest target is 1
		 -> NULL(), 

    UART1$AutoBaudQuery	PTR FTN()_Bool  size(2) Largest target is 1
		 -> EUSART_AutoBaudQuery(), 

    UART1$AutoBaudSet	PTR FTN(_Bool ,)void  size(2) Largest target is 1
		 -> EUSART_AutoBaudSet(), 

    UART1$BaudRateGet	PTR FTN()unsigned long  size(2) Largest target is 1
		 -> NULL(), 

    UART1$BaudRateSet	PTR FTN(unsigned long ,)void  size(2) Largest target is 1
		 -> NULL(), 

    UART1$BRGCountGet	PTR FTN()unsigned long  size(2) Largest target is 1
		 -> NULL(), 

    UART1$BRGCountSet	PTR FTN(unsigned long ,)void  size(2) Largest target is 1
		 -> NULL(), 

    UART1$Deinitialize	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART_Deinitialize(), 

    UART1$ErrorGet	PTR FTN()unsigned int  size(2) Largest target is 2
		 -> EUSART_ErrorGet(), 

    UART1$EventCallbackRegister	PTR FTN(PTR FTN()void ,)void  size(2) Largest target is 1
		 -> NULL(), 

    UART1$FramingErrorCallbackRegister	PTR FTN(PTR FTN()void ,)void  size(2) Largest target is 1
		 -> EUSART_FramingErrorCallbackRegister(), 

    UART1$Initialize	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART_Initialize(), 

    UART1$IsRxReady	PTR FTN()_Bool  size(2) Largest target is 1
		 -> EUSART_IsRxReady(), 

    UART1$IsTxDone	PTR FTN()_Bool  size(2) Largest target is 1
		 -> EUSART_IsTxDone(), 

    UART1$IsTxReady	PTR FTN()_Bool  size(2) Largest target is 1
		 -> EUSART_IsTxReady(), 

    UART1$OverrunErrorCallbackRegister	PTR FTN(PTR FTN()void ,)void  size(2) Largest target is 1
		 -> EUSART_OverrunErrorCallbackRegister(), 

    UART1$ParityErrorCallbackRegister	PTR FTN(PTR FTN()void ,)void  size(2) Largest target is 1
		 -> NULL(), 

    UART1$Read	PTR FTN()unsigned char  size(2) Largest target is 1
		 -> EUSART_Read(), 

    UART1$RxCompleteCallbackRegister	PTR FTN(PTR FTN()void ,)void  size(2) Largest target is 1
		 -> EUSART_RxCompleteCallbackRegister(), 

    UART1$TransmitDisable	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART_TransmitDisable(), 

    UART1$TransmitEnable	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART_TransmitEnable(), 

    UART1$TxCollisionCallbackRegister	PTR FTN(PTR FTN()void ,)void  size(2) Largest target is 1
		 -> NULL(), 

    UART1$TxCompleteCallbackRegister	PTR FTN(PTR FTN()void ,)void  size(2) Largest target is 1
		 -> EUSART_TxCompleteCallbackRegister(), 

    UART1$Write	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> EUSART_Write(), 

    uartHandler@str	PTR unsigned char  size(1) Largest target is 20
		 -> line(BANK3[20]), 

    utoa@fp	PTR struct _IO_FILE size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    vfpfcnvrt@ap	PTR PTR void  size(2) Largest target is 1
		 -> printf@ap(BANK1[1]), 

    vfpfcnvrt@cp	PTR unsigned char  size(2) Largest target is 25
		 -> STR_1(CODE[8]), STR_10(CODE[13]), STR_11(CODE[13]), STR_12(CODE[15]), 
		 -> STR_13(CODE[17]), STR_2(CODE[24]), STR_3(CODE[11]), STR_4(CODE[15]), 
		 -> STR_5(CODE[17]), STR_6(CODE[7]), STR_7(CODE[7]), STR_8(CODE[3]), 
		 -> STR_9(CODE[25]), 

    vfpfcnvrt@fmt	PTR PTR unsigned char  size(1) Largest target is 2
		 -> vfprintf@cfmt(BANK1[2]), 

    vfpfcnvrt@fp	PTR struct _IO_FILE size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    vfprintf@ap	PTR PTR void  size(1) Largest target is 1
		 -> printf@ap(BANK1[1]), 

    vfprintf@cfmt	PTR unsigned char  size(2) Largest target is 25
		 -> STR_1(CODE[8]), STR_10(CODE[13]), STR_11(CODE[13]), STR_12(CODE[15]), 
		 -> STR_13(CODE[17]), STR_2(CODE[24]), STR_3(CODE[11]), STR_4(CODE[15]), 
		 -> STR_5(CODE[17]), STR_6(CODE[7]), STR_7(CODE[7]), STR_8(CODE[3]), 
		 -> STR_9(CODE[25]), 

    vfprintf@fmt	PTR const unsigned char  size(2) Largest target is 25
		 -> STR_1(CODE[8]), STR_10(CODE[13]), STR_11(CODE[13]), STR_12(CODE[15]), 
		 -> STR_13(CODE[17]), STR_2(CODE[24]), STR_3(CODE[11]), STR_4(CODE[15]), 
		 -> STR_5(CODE[17]), STR_6(CODE[7]), STR_7(CODE[7]), STR_8(CODE[3]), 
		 -> STR_9(CODE[25]), 

    vfprintf@fp	PTR struct _IO_FILE size(2) Largest target is 0
		 -> NULL(NULL[0]), 


Critical Paths under _main in COMMON

    None.

Critical Paths under _INTERRUPT_InterruptManager in COMMON

    _controller->i1___xxtofl
    i1___fltol->i1___xxtofl
    i1___flmul->i1___xxtofl
    i1___fladd->i1___xxtofl
    _ADC_ISR->_adcConversionDoneHandler
    _adcConversionDoneHandler->_ADC_GetConversionResult
    _adcConversionDoneHandler->i1_ADC_SelectChannel

Critical Paths under _main in BANK0

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK0

    _TMR4_ISR->_controller
    _controller->i1___fladd
    i1___fltol->i1___flmul
    i1___fladd->i1___flmul

Critical Paths under _main in BANK1

    _uartHandler->_str2float
    _str2float->___flmul
    _setSetpoint->_atoi
    _setKp->_str2float
    _setKi->_str2float
    _readLine->_printf
    _atoi->___wmul
    _printLogs->_printFloat
    _printFloat->___fltol
    _printf->_vfprintf
    _vfprintf->_vfpfcnvrt
    _vfpfcnvrt->_dtoa
    _utoa->_pad
    _read_prec_or_width->___wmul
    _dtoa->_pad
    _pad->_fputs
    _fputs->_fputc
    _fputc->_putch
    _putch->_EUSART_Write
    _abs->___awmod
    ___flsub->___fladd
    _initLedstrip->_SPI1_Open
    _SPI1_Open->___wmul
    _initAdcMultiplexer->_ADC_SelectChannel
    _initAdcMultiplexer->_ADC_SetInterruptHandler
    _position_led_strip->_getLedNumber
    _sendLedstripStartFrame->_SPI1_ByteExchange
    _sendLedstripFrame->_SPI1_ByteExchange
    _sendLedstripEndFrame->_SPI1_ByteExchange
    _getLedNumber->___fltol
    ___fltol->___flmul
    ___flmul->___flsub
    ___fladd->___xxtofl
    _INTERRUPT_Initialize->_INT_SetInterruptHandler
    _EUSART_Initialize->_EUSART_FramingErrorCallbackRegister
    _EUSART_Initialize->_EUSART_OverrunErrorCallbackRegister
    _ADC_Initialize->_ADC_SetInterruptHandler

Critical Paths under _INTERRUPT_InterruptManager in BANK1

    None.

Critical Paths under _main in BANK2

    _uartHandler->_setKi
    _uartHandler->_setKp
    _printLogs->_printFloat
    _updateLedstripAnimation->_position_led_strip
    _position_led_strip->_getLedNumber

Critical Paths under _INTERRUPT_InterruptManager in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK12

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 2     2      0   37127
                                             12 BANK2      2     2      0
                  _SYSTEM_Initialize
   _TMR4_PeriodMatchCallbackRegister
                         _TMR6_Tasks
                 _initAdcMultiplexer
                       _initLedstrip
                          _printLogs
                        _uartHandler
 ---------------------------------------------------------------------------------
 (1) _uartHandler                                          1     1      0   16706
                                              4 BANK2      1     1      0
                               _atoi
                             _printf
                           _readLine
                              _setKi
                              _setKp
                        _setSetpoint
                          _str2float
 ---------------------------------------------------------------------------------
 (2) _str2float                                           12     8      4    5363
                                             68 BANK1     12     8      4
                            ___fladd
                            ___fldiv
                            ___flmul
                           ___xxtofl
 ---------------------------------------------------------------------------------
 (3) ___fldiv                                             26    18      8    1123
                                              0 BANK1     26    18      8
 ---------------------------------------------------------------------------------
 (2) _setSetpoint                                          2     0      2      23
                                             13 BANK1      2     0      2
                               _atoi (ARG)
 ---------------------------------------------------------------------------------
 (2) _setKp                                                4     0      4      23
                                              0 BANK2      4     0      4
                          _str2float (ARG)
 ---------------------------------------------------------------------------------
 (2) _setKi                                                4     0      4      23
                                              0 BANK2      4     0      4
                          _str2float (ARG)
 ---------------------------------------------------------------------------------
 (2) _readLine                                             3     1      2    5437
                                             72 BANK1      3     1      2
                   _EUSART_IsRxReady
                        _EUSART_Read
                             _printf
 ---------------------------------------------------------------------------------
 (3) _EUSART_Read                                          2     2      0      47
                                              0 BANK1      2     2      0
 ---------------------------------------------------------------------------------
 (3) _EUSART_IsRxReady                                     0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _atoi                                                 7     5      2     336
                                              6 BANK1      7     5      2
                             ___wmul
 ---------------------------------------------------------------------------------
 (1) _printLogs                                            0     0      0   15113
                       _getDutycycle
                    _getHoogtesensor
                              _getKi
                              _getKp
                        _getSetpoint
                         _printFloat
                             _printf
 ---------------------------------------------------------------------------------
 (2) _printFloat                                           9     5      4    9723
                                             78 BANK1      2     2      0
                                              0 BANK2      7     3      4
                            ___flmul
                            ___flsub
                            ___fltol
                           ___xxtofl
                              _getKi (ARG)
                              _getKp (ARG)
                             _printf
 ---------------------------------------------------------------------------------
 (3) _printf                                               9     3      6    5390
                                             65 BANK1      7     1      6
                               _atoi (ARG)
                       _getDutycycle (ARG)
                    _getHoogtesensor (ARG)
                        _getSetpoint (ARG)
                           _vfprintf
 ---------------------------------------------------------------------------------
 (4) _vfprintf                                             8     3      5    5316
                                             57 BANK1      8     3      5
                          _vfpfcnvrt
 ---------------------------------------------------------------------------------
 (5) _vfpfcnvrt                                           17    12      5    5175
                                             41 BANK1     16    11      5
                               _dtoa
                              _fputc
                 _read_prec_or_width
                               _utoa
 ---------------------------------------------------------------------------------
 (6) _utoa                                                10     6      4    1661
                                             28 BANK1     10     6      4
                            ___lwdiv
                            ___lwmod
                                _pad
 ---------------------------------------------------------------------------------
 (7) ___lwmod                                              5     1      4     161
                                              0 BANK1      5     1      4
 ---------------------------------------------------------------------------------
 (7) ___lwdiv                                              7     3      4     166
                                              0 BANK1      7     3      4
 ---------------------------------------------------------------------------------
 (6) _read_prec_or_width                                   8     6      2     288
                                              6 BANK1      8     6      2
                             ___wmul
 ---------------------------------------------------------------------------------
 (6) _dtoa                                                13     9      4    2161
                                             28 BANK1     13     9      4
                            ___awdiv
                            ___awmod
                                _abs
                                _pad
 ---------------------------------------------------------------------------------
 (7) _pad                                                  8     3      5    1083
                                             20 BANK1      8     3      5
                              _fputc
                              _fputs
                             _strlen
 ---------------------------------------------------------------------------------
 (8) _strlen                                               3     1      2      91
                                              0 BANK1      3     1      2
 ---------------------------------------------------------------------------------
 (8) _fputs                                                8     5      3     432
                                             12 BANK1      8     5      3
                              _fputc
 ---------------------------------------------------------------------------------
 (9) _fputc                                                9     5      4     331
                                              3 BANK1      9     5      4
                              _putch
 ---------------------------------------------------------------------------------
 (10) _putch                                               1     1      0      97
                                              2 BANK1      1     1      0
                   _EUSART_IsTxReady
                       _EUSART_Write
 ---------------------------------------------------------------------------------
 (11) _EUSART_Write                                        2     1      1      68
                                              0 BANK1      2     1      1
 ---------------------------------------------------------------------------------
 (11) _EUSART_IsTxReady                                    0     0      0       0
 ---------------------------------------------------------------------------------
 (7) _abs                                                  4     2      2      67
                                              6 BANK1      4     2      2
                            ___awmod (ARG)
 ---------------------------------------------------------------------------------
 (7) ___awmod                                              6     2      4     298
                                              0 BANK1      6     2      4
 ---------------------------------------------------------------------------------
 (7) ___awdiv                                              8     4      4     302
                                              0 BANK1      8     4      4
 ---------------------------------------------------------------------------------
 (3) ___flsub                                              8     0      8    2037
                                             34 BANK1      8     0      8
                            ___fladd
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (2) _getKp                                                4     0      4       0
                                              0 BANK1      4     0      4
 ---------------------------------------------------------------------------------
 (2) _getKi                                                4     0      4       0
                                              0 BANK1      4     0      4
 ---------------------------------------------------------------------------------
 (2) _getDutycycle                                         2     0      2       0
                                              0 BANK1      2     0      2
 ---------------------------------------------------------------------------------
 (1) _initLedstrip                                         0     0      0     227
                          _SPI1_Open
   _TMR6_PeriodMatchCallbackRegister
 ---------------------------------------------------------------------------------
 (2) _TMR6_PeriodMatchCallbackRegister                     2     0      2      23
                                              0 BANK1      2     0      2
 ---------------------------------------------------------------------------------
 (2) _SPI1_Open                                            4     3      1     204
                                              6 BANK1      3     2      1
                             ___wmul
 ---------------------------------------------------------------------------------
 (7) ___wmul                                               6     2      4     106
                                              0 BANK1      6     2      4
 ---------------------------------------------------------------------------------
 (1) _initAdcMultiplexer                                   0     0      0      53
                  _ADC_SelectChannel
            _ADC_SetInterruptHandler
 ---------------------------------------------------------------------------------
 (2) _ADC_SelectChannel                                    2     2      0      29
                                              0 BANK1      2     2      0
 ---------------------------------------------------------------------------------
 (1) _TMR6_Tasks                                           0     0      0    4868
                                NULL *
    _TMR6_DefaultPeriodMatchCallback *
            _updateLedstripAnimation *
 ---------------------------------------------------------------------------------
 (2) _updateLedstripAnimation                              0     0      0    4868
                 _position_led_strip
 ---------------------------------------------------------------------------------
 (3) _position_led_strip                                   8     8      0    4868
                                              4 BANK2      8     8      0
                    _getHoogtesensor
                       _getLedNumber
                        _getSetpoint
               _sendLedstripEndFrame
                  _sendLedstripFrame
             _sendLedstripStartFrame
 ---------------------------------------------------------------------------------
 (4) _sendLedstripStartFrame                               0     0      0      34
                  _SPI1_ByteExchange
 ---------------------------------------------------------------------------------
 (4) _sendLedstripFrame                                    4     1      3     156
                                              1 BANK1      4     1      3
                  _SPI1_ByteExchange
 ---------------------------------------------------------------------------------
 (4) _sendLedstripEndFrame                                 0     0      0      34
                  _SPI1_ByteExchange
 ---------------------------------------------------------------------------------
 (5) _SPI1_ByteExchange                                    1     0      1      34
                                              0 BANK1      1     0      1
 ---------------------------------------------------------------------------------
 (2) _getSetpoint                                          2     0      2       0
                                              0 BANK1      2     0      2
 ---------------------------------------------------------------------------------
 (4) _getLedNumber                                         6     4      2    4219
                                             78 BANK1      2     0      2
                                              0 BANK2      4     4      0
                            ___fladd
                            ___flmul
                            ___fltol
                           ___xxtofl
                    _getHoogtesensor (ARG)
                        _getSetpoint (ARG)
 ---------------------------------------------------------------------------------
 (3) ___xxtofl                                            14    10      4     339
                                              0 BANK1     14    10      4
 ---------------------------------------------------------------------------------
 (3) ___fltol                                             10     6      4     232
                                             68 BANK1     10     6      4
                            ___flmul (ARG)
                            ___flsub (ARG)
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (3) ___flmul                                             26    18      8    1611
                                             42 BANK1     26    18      8
                          __Umul8_16
                            ___fladd (ARG)
                            ___flsub (ARG)
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (4) __Umul8_16                                            9     7      2     139
                                              0 BANK1      9     7      2
 ---------------------------------------------------------------------------------
 (3) ___fladd                                             20    12      8    1990
                                             14 BANK1     20    12      8
                          __Umul8_16 (ARG)
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (2) _getHoogtesensor                                      2     0      2       0
                                              0 BANK1      2     0      2
 ---------------------------------------------------------------------------------
 (2) _TMR6_DefaultPeriodMatchCallback                      0     0      0       0
 ---------------------------------------------------------------------------------
 (14) NULL(Fake)                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _TMR4_PeriodMatchCallbackRegister                     2     0      2      23
                                              0 BANK1      2     0      2
 ---------------------------------------------------------------------------------
 (1) _SYSTEM_Initialize                                    0     0      0     137
                     _ADC_Initialize
                   _CLOCK_Initialize
                  _EUSART_Initialize
               _INTERRUPT_Initialize
             _PIN_MANAGER_Initialize
                    _SPI1_Initialize
                    _TMR2_Initialize
                    _TMR4_Initialize
                    _TMR6_Initialize
                 _pwm_fan_Initialize
 ---------------------------------------------------------------------------------
 (2) _pwm_fan_Initialize                                   0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _TMR6_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _TMR4_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _TMR2_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _SPI1_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _PIN_MANAGER_Initialize                               0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _INTERRUPT_Initialize                                 0     0      0      23
            _INT_SetInterruptHandler
 ---------------------------------------------------------------------------------
 (3) _INT_SetInterruptHandler                              2     0      2      23
                                              0 BANK1      2     0      2
 ---------------------------------------------------------------------------------
 (2) _EUSART_Initialize                                    0     0      0      90
_EUSART_FramingErrorCallbackRegister
_EUSART_OverrunErrorCallbackRegister
 ---------------------------------------------------------------------------------
 (3) _EUSART_OverrunErrorCallbackRegister                  2     0      2      45
                                              0 BANK1      2     0      2
 ---------------------------------------------------------------------------------
 (3) _EUSART_FramingErrorCallbackRegister                  2     0      2      45
                                              0 BANK1      2     0      2
 ---------------------------------------------------------------------------------
 (2) _CLOCK_Initialize                                     0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _ADC_Initialize                                       0     0      0      24
            _ADC_SetInterruptHandler
 ---------------------------------------------------------------------------------
 (2) _ADC_SetInterruptHandler                              2     0      2      24
                                              0 BANK1      2     0      2
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 14
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (12) _INTERRUPT_InterruptManager                          0     0      0    4466
                                NULL *
                            _ADC_ISR
                  _EUSART_ReceiveISR *
                 _EUSART_TransmitISR *
                           _TMR2_ISR
                           _TMR4_ISR
 ---------------------------------------------------------------------------------
 (13) _TMR4_ISR                                            0     0      0    4346
                                NULL *
    _TMR4_DefaultPeriodMatchCallback *
                         _controller *
 ---------------------------------------------------------------------------------
 (14) _controller                                          7     7      0    4346
                                             46 BANK0      7     7      0
              _pwm_fan_LoadDutyValue
                          i1___fladd
                          i1___flmul
                          i1___fltol
                         i1___xxtofl
                  i1_getHoogtesensor
 ---------------------------------------------------------------------------------
 (15) i1_getHoogtesensor                                   2     0      2       0
                                              0 COMMON     2     0      2
 ---------------------------------------------------------------------------------
 (15) i1___xxtofl                                         14    10      4     338
                                              0 COMMON    14    10      4
 ---------------------------------------------------------------------------------
 (15) i1___fltol                                          10     6      4     231
                                             26 BANK0     10     6      4
                          i1___flmul (ARG)
                         i1___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (15) i1___flmul                                          26    18      8    1611
                                              0 BANK0     26    18      8
                        i1__Umul8_16
                         i1___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (16) i1__Umul8_16                                         9     7      2     139
                                              0 COMMON     9     7      2
 ---------------------------------------------------------------------------------
 (15) i1___fladd                                          20    12      8    1986
                                             26 BANK0     20    12      8
                          i1___flmul (ARG)
                         i1___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (15) _pwm_fan_LoadDutyValue                               4     2      2      45
                                              0 COMMON     4     2      2
 ---------------------------------------------------------------------------------
 (14) _TMR4_DefaultPeriodMatchCallback                     0     0      0       0
 ---------------------------------------------------------------------------------
 (13) _TMR2_ISR                                            0     0      0       0
                                NULL *
    _TMR2_DefaultPeriodMatchCallback *
 ---------------------------------------------------------------------------------
 (14) _TMR2_DefaultPeriodMatchCallback                     0     0      0       0
 ---------------------------------------------------------------------------------
 (13) _EUSART_TransmitISR                                  1     1      0      23
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (13) _EUSART_ReceiveISR                                   2     2      0      68
                                              0 COMMON     2     2      0
                                NULL *
 _EUSART_DefaultFramingErrorCallback *
 _EUSART_DefaultOverrunErrorCallback *
 ---------------------------------------------------------------------------------
 (14) _EUSART_DefaultOverrunErrorCallback                  0     0      0       0
 ---------------------------------------------------------------------------------
 (14) _EUSART_DefaultFramingErrorCallback                  0     0      0       0
 ---------------------------------------------------------------------------------
 (13) _ADC_ISR                                             0     0      0      29
                                NULL *
        _ADC_DefaultInterruptHandler *
           _adcConversionDoneHandler *
 ---------------------------------------------------------------------------------
 (14) _adcConversionDoneHandler                            2     2      0      29
                                              2 COMMON     2     2      0
            _ADC_GetConversionResult
                i1_ADC_SelectChannel
 ---------------------------------------------------------------------------------
 (15) i1_ADC_SelectChannel                                 2     2      0      29
                                              0 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 (15) _ADC_GetConversionResult                             2     0      2       0
                                              0 COMMON     2     0      2
 ---------------------------------------------------------------------------------
 (14) _ADC_DefaultInterruptHandler                         0     0      0       0
 ---------------------------------------------------------------------------------
 (14) NULL(Fake)                                           0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 16
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _SYSTEM_Initialize
     _ADC_Initialize
       _ADC_SetInterruptHandler
     _CLOCK_Initialize
     _EUSART_Initialize
       _EUSART_FramingErrorCallbackRegister
       _EUSART_OverrunErrorCallbackRegister
     _INTERRUPT_Initialize
       _INT_SetInterruptHandler
     _PIN_MANAGER_Initialize
     _SPI1_Initialize
     _TMR2_Initialize
     _TMR4_Initialize
     _TMR6_Initialize
     _pwm_fan_Initialize
   _TMR4_PeriodMatchCallbackRegister
   _TMR6_Tasks
     NULL(Fake) *
     _TMR6_DefaultPeriodMatchCallback *
     _updateLedstripAnimation *
       _position_led_strip
         _getHoogtesensor
         _getLedNumber
           ___fladd
             __Umul8_16 (ARG)
             ___xxtofl (ARG)
           ___flmul
             __Umul8_16
             ___fladd (ARG)
             ___flsub (ARG)
               ___fladd
               ___xxtofl (ARG)
             ___xxtofl (ARG)
           ___fltol
             ___flmul (ARG)
             ___flsub (ARG)
             ___xxtofl (ARG)
           ___xxtofl
           _getHoogtesensor (ARG)
           _getSetpoint (ARG)
         _getSetpoint
         _sendLedstripEndFrame
           _SPI1_ByteExchange
         _sendLedstripFrame
           _SPI1_ByteExchange
         _sendLedstripStartFrame
           _SPI1_ByteExchange
   _initAdcMultiplexer
     _ADC_SelectChannel
     _ADC_SetInterruptHandler
   _initLedstrip
     _SPI1_Open
       ___wmul
     _TMR6_PeriodMatchCallbackRegister
   _printLogs
     _getDutycycle
     _getHoogtesensor
     _getKi
     _getKp
     _getSetpoint
     _printFloat
       ___flmul
       ___flsub
       ___fltol
       ___xxtofl
       _getKi (ARG)
       _getKp (ARG)
       _printf (ARG)
         _atoi (ARG)
           ___wmul
         _getDutycycle (ARG)
         _getHoogtesensor (ARG)
         _getSetpoint (ARG)
         _vfprintf (ARG)
           _vfpfcnvrt
             _dtoa
               ___awdiv
               ___awmod
               _abs
                 ___awmod (ARG)
               _pad
                 _fputc
                   _putch
                     _EUSART_IsTxReady
                     _EUSART_Write
                 _fputs
                   _fputc
                 _strlen
             _fputc
             _read_prec_or_width
               ___wmul
             _utoa
               ___lwdiv
               ___lwmod
               _pad
     _printf
   _uartHandler
     _atoi
     _printf
     _readLine
       _EUSART_IsRxReady
       _EUSART_Read
       _printf
     _setKi
       _str2float (ARG)
         ___fladd
         ___fldiv
         ___flmul
         ___xxtofl
     _setKp
       _str2float (ARG)
     _setSetpoint
       _atoi (ARG)
     _str2float

 _INTERRUPT_InterruptManager (ROOT)
   NULL(Fake) *
   _ADC_ISR *
     NULL(Fake) *
     _ADC_DefaultInterruptHandler *
     _adcConversionDoneHandler *
       _ADC_GetConversionResult
       i1_ADC_SelectChannel
   _EUSART_ReceiveISR *
     NULL(Fake) *
     _EUSART_DefaultFramingErrorCallback *
     _EUSART_DefaultOverrunErrorCallback *
   _EUSART_TransmitISR *
   _TMR2_ISR *
     NULL(Fake) *
     _TMR2_DefaultPeriodMatchCallback *
   _TMR4_ISR *
     NULL(Fake) *
     _TMR4_DefaultPeriodMatchCallback *
     _controller *
       _pwm_fan_LoadDutyValue
       i1___fladd
         i1___flmul (ARG)
           i1__Umul8_16
           i1___xxtofl (ARG)
         i1___xxtofl (ARG)
       i1___flmul
       i1___fltol
         i1___flmul (ARG)
         i1___xxtofl (ARG)
       i1___xxtofl
       i1_getHoogtesensor

Address spaces:
Name               Size   Autos  Total    Usage
BITCOMMON           14      0       0      0.0%
BITBANK0            80      0       0      0.0%
BITBANK1            80      0       0      0.0%
BITBANK2            80      0       0      0.0%
BITBANK3            80      0       0      0.0%
BITBANK4            80      0       0      0.0%
BITBANK5            80      0       0      0.0%
BITBANK6            80      0       0      0.0%
BITBANK7            80      0       0      0.0%
BITBANK8            80      0       0      0.0%
BITBANK9            80      0       0      0.0%
BITBANK10           80      0       0      0.0%
BITBANK11           80      0       0      0.0%
BITBANK12           48      0       0      0.0%
BIGRAM            1008      0       0      0.0%
COMMON              14     14      14    100.0%
BANK0               80     53      80    100.0%
BANK1               80     80      80    100.0%
BANK2               80     14      80    100.0%
BANK3               80      0      54     67.5%
BANK4               80      0       0      0.0%
BANK5               80      0       0      0.0%
BANK6               80      0       0      0.0%
BANK7               80      0       0      0.0%
BANK8               80      0       0      0.0%
BANK9               80      0       0      0.0%
BANK10              80      0       0      0.0%
BANK11              80      0       0      0.0%
BANK12              48      0       0      0.0%
STACK                0      0       0      0.0%
DATA                 0      0     308      0.0%


Microchip Technology PIC Macro Assembler V3.00 build 20241204225717 
Symbol Table                                                                                   Wed Feb 26 16:27:45 2025

           __end_of_TMR4_DefaultPeriodMatchCallback 0003                   ??_TMR4_DefaultPeriodMatchCallback 0070  
                  ?_TMR4_DefaultPeriodMatchCallback 0070                     _TMR4_DefaultPeriodMatchCallback 0002  
                                 _SPI1_ByteExchange 1C17                          __end_of_pwm_fan_Initialize 1C0B  
                                      ___fldiv@aexp 00B9                                        ___fldiv@bexp 00B8  
                                       i1___fladd@a 003E                                         i1___fladd@b 003A  
                                      ___fldiv@sign 00B1                                                  l30 1C16  
                                                l27 1D52                                                  l55 1B6E  
                                                l69 1C0A                                  ?_SPI1_ByteExchange 00A0  
                                      ___awdiv@sign 00A5         __end_of_EUSART_OverrunErrorCallbackRegister 1C8A  
             ??_EUSART_OverrunErrorCallbackRegister 00A2                ?_EUSART_OverrunErrorCallbackRegister 00A0  
               _EUSART_OverrunErrorCallbackRegister 1C7B                                         i1___flmul@a 0024  
                                                _ki 0168                                         i1___flmul@b 0020  
                                                _kp 016C                                 ___wmul@multiplicand 00A2  
                               __Umul8_16@word_mpld 00A6                                          i1___xxtofl 160C  
                                               l213 1BFE                                                 l119 1BD2  
                                               l127 1418                                                 l240 1B80  
                                               l160 1C1B                                                 l162 1C20  
                                               l163 1C23                                                 l335 1FFF  
                                               l361 1DD7                                                 l258 1B77  
                                               l380 1CB9                                                 l525 1BA4  
                                               l439 1CCA                                                 l528 0003  
                                               l721 1EC8                                                 l539 1D12  
                                               l707 1E37                                                 l476 1B89  
                                               l820 1B92                                                 l724 1ECA  
                                               l638 07FF                                                 l814 1C30  
                                               l742 0810                                                 l752 1C7A  
                                               l904 08BE                                                 l498 1C98  
                                               l931 1B9B                                                 l851 160B  
                                               l756 1C89                                                 l940 1CDB  
                                               l934 1BAD                                                 l694 1BBF  
                                               l943 1BC8                                                 l952 1BDC  
                                               l937 1CEC                                                 l697 1BB6  
                                               l873 1101                                                 l970 1D81  
                                               l875 1159                                                 l859 17C8  
                                               l868 17FF                                                 l973 1D9C  
                                               l949 1BE6                                                 l886 1585  
                                               l967 1D3C                                                 l976 11B4  
                                               _PR2 001E                                                 _PR4 0416  
                                               _PR6 041D                                                 _abs 1CED  
                                               _pad 10AC                                     __end_of_ADC_ISR 1C4E  
                                      i1___fltol@f1 003A                     __end_of_ADC_SetInterruptHandler 1B6F  
                               ??_SPI1_ByteExchange 00A1                                        ___awmod@sign 00A5  
                                   _TMR2_Initialize 1CA9                        __end_of_sendLedstripEndFrame 1D82  
                                               wreg 0009                                       i1___fladd@grs 004D  
                                      ___flmul@aexp 00DC                                        ___flmul@bexp 00DD  
                      ?_ADC_DefaultInterruptHandler 0070                                        ___flmul@sign 00D7  
                                      ___flmul@temp 00E2                                        ___flmul@prod 00DE  
                               i1_ADC_SelectChannel 1BE7                                        ?_EUSART_Read 0070  
                                      _BAUD1CONbits 019F                                        ___fltol@exp1 00ED  
                                              l1010 1B49                                                l1013 1C3E  
                                              l1007 0ADD                                                ?_abs 00A6  
                                              l1331 10AB                                                l1500 06E2  
                                              l1165 1DE3                                                l1318 1210  
                                              l1167 1DF7                                                l1512 1E17  
                                              l1522 0C9F                                                l1508 0702  
                                              l1620 172C                                                l1524 0DF3  
                                              l1509 070F                                                l1445 1FBB  
                                              l1470 05D9                                                l1366 1393  
                                              l1606 16D3                                                l1359 13A8  
                                              l1607 16E4                                                l1455 1F80  
                                              l1543 0DC3                                                l1472 05B3  
                                              l1608 1754                                                l1544 0DDD  
                                              l1369 13A8                                                l4201 11B7  
                                              l1466 055A                                                l1562 02C8  
                                              l1722 0C4F                                                l1714 0B05  
                                              l1546 0DE8                                                l1538 0D79  
                                              l1491 068C                                                l1619 1720  
                                              l4211 11CB                                                l4203 11BB  
                                              l4123 1BAE                                                l4131 1EAC  
                                              l1707 126C                                                l1716 0B11  
                                              l1644 1CA8                                                l1581 1E6E  
                                              l5101 0A67                                                l4221 11DD  
                                              l4213 11CD                                                l4205 11C0  
                                              l4141 1EC5                                                l4133 1EB2  
                                              l4301 1FB1                                                l1637 150A  
                                              l1574 02BE                                                l5015 1B66  
                                              l5031 1C82                                                l5023 1B78  
                                              l1487 066A                                                l1479 070F  
                                              l1583 1E7E                                                l5103 0A73  
                                              l5111 0A96                                                l4231 11F7  
                                              l4223 11DF                                                l4215 11CF  
                                              l4207 11C2                                                l1743 1CFE  
                                              l4135 1EBA                                                l4127 1EA3  
                                              l4143 0802                                                l4151 126D  
                                              l1671 10E4                                                l4303 1FB7  
                                              l4311 1F58                                                l1568 0246  
                                              l1680 0739                                                l1736 1EF4  
                                              l5025 1C6C                                                l1497 06AF  
                                              l5113 0AA4                                                l5105 0A80  
                                              l4233 11FC                                                l4225 11E3  
                                              l4217 11D5                                                l4209 11C6  
                                              l4137 1EC0                                                l4129 1EA8  
                                              l4145 0802                                                l4161 12AA  
                                              l4153 1274                                                l1673 1100  
                                              l4401 078D                                                l4321 1F71  
                                              l4313 1F5D                                                l5033 1BB7  
                                              l5041 1E21                                                l6001 1BDD  
                                              l5201 0CF4                                                l5027 1C73  
                                              l5131 0ADA                                                l5123 0AC7  
                                              l5107 0A8A                                                l4227 11F2  
                                              l4219 11D8                                                l4235 1202  
                                              l4251 1067                                                l4243 105A  
                                              l4139 1EC3                                                l4147 080A  
                                              l4163 12C0                                                l1755 12CA  
                                              l4155 127A                                                l1763 1EA2  
                                              l4171 1E91                                                l4331 10B1  
                                              l4411 07AE                                                l4403 0792  
                                              l4323 1F76                                                l4315 1F5F  
                                              l4307 1F4E                                                l5051 1E34  
                                              l5043 1E27                                                l6003 1BD3  
                                              l5211 0D0E                                                l5203 0CF6  
                                              l1668 10C2                                                l1676 073B  
                                              l5029 1C7B                                                l4501 138A  
                                              l5117 0AB0                                                l5109 0A93  
                                              l5133 1DF8                                                l4237 1207  
                                              l4229 11F6                                                l4261 107E  
                                              l4253 106B                                                l4245 105C  
                                              l4157 127F                                                l4173 1E96  
                                              l4181 1D62                                                l4341 10D6  
                                              l4333 10BB                                                l4413 07B5  
                                              l4405 079F                                                l4317 1F63  
                                              l4309 1F55                                                l4325 1F7C  
                                              l4421 1428                                                l5053 1E36  
                                              l5045 1E2A                                                l5037 1E18  
                                              l5205 0CFB                                                l5213 0D15  
                                              l5221 0D32                                                l5141 0C54  
                                              l4511 050A                                                l4503 1398  
                                              l5119 0ABD                                                l5127 0AD1  
                                              l5071 09EE                                                l5063 09C7  
                                              l4191 1DE8                                                l5135 1DFB  
                                              l4239 120C                                                l4271 1097  
                                              l4263 1080                                                l4255 1070  
                                              l4247 1060                                                l4351 1CF2  
                                              l4159 128A                                                l4167 1E7F  
                                              l4175 1D53                                                l4343 10E9  
                                              l4335 10C0                                                l4407 07A4  
                                              l4319 1F6D                                                l4431 1449  
                                              l4423 142B                                                l5047 1E2C  
                                              l5039 1E18                                                l5231 0D4D  
                                              l5223 0D38                                                l5215 0D27  
                                              l5207 0D09                                                l5151 0C65  
                                              l5143 0C56                                                l4601 05D0  
                                              l4521 0521                                                l4513 050E  
                                              l4361 1E66                                                l4505 139D  
                                              l5129 0AD4                                                l5081 0A0F  
                                              l5073 09F3                                                l5065 09DA  
                                              l6033 1B46                                                l4193 1DED  
                                              l4185 1DD8                                                l4265 1084  
                                              l4257 1076                                                l4273 109D  
                                              l4249 1065                                                l4353 1CF3  
                                              l4169 1E83                                                l1769 1D68  
                                              l4177 1D57                                                l4345 10F3  
                                              l4337 10C5                                                l4329 10AC  
                                              l1689 07C8                                                l4409 07AA  
                                              l4281 1F81                                                l4441 1478  
                                              l4425 1430                                                l4433 1459  
                                              l4417 1419                                                l5057 1C99  
                                              l5049 1E32                                                l5241 0D5E  
                                              l5233 0D4E                                                l5225 0D40  
                                              l5217 0D28                                                l5209 0D0D  
                                              l5161 0C7B                                                l5153 0C6D  
                                              l5145 0C5A                                                l4611 05EB  
                                              l4603 05D2                                                l4531 0535  
                                              l4523 0522                                                l4515 050F  
                                              l4507 0504                                                l4363 1E6A  
                                              l5091 0A1E                                                l5075 0A06  
                                              l5067 09DE                                                l4195 1DF3  
                                              l4187 1DDB                                                l4275 10A2  
                                              l4267 108E                                                l4259 1079  
                                              l4179 1D59                                                l4339 10D1  
                                              l4371 0710                                                l4451 1225  
                                              l4291 1F94                                                l4283 1F84  
                                              l1699 1491                                                l4435 1460  
                                              l4443 147D                                                l4427 1444  
                                              l4419 141C                                                l5059 1C9C  
                                              l5251 0D83                                                l5243 0D62  
                                              l5235 0D55                                                l5227 0D42  
                                              l5219 0D30                                                l5171 0C8C  
                                              l5163 0C7D                                                l5155 0C6E  
                                              l5147 0C5B                                                l5139 0C50  
                                              l6131 0811                                                l6211 1EF5  
                                              l6061 1DC8                                                l6053 1DB9  
                                              l4701 070E                                                l4621 0607  
                                              l4613 05F3                                                l4605 05DD  
                                              l4541 0542                                                l4533 0536  
                                              l4517 0514                                                l4525 0524  
                                              l4509 0508                                                l4365 1E75  
                                              l4357 1E5D                                                l5093 0A24  
                                              l5077 0A0A                                                l5069 09E1  
                                              l6125 1C24                                                l4189 1DDF  
                                              l4277 10A7                                                l4269 1092  
                                              l4349 1CED                                                l4381 0730  
                                              l4373 0713                                                l4461 1268  
                                              l4453 122D                                                l4293 1F98  
                                              l4285 1F8A                                                l4437 1466  
                                              l4429 1445                                                l5261 0DB6  
                                              l5253 0D89                                                l5245 0D76  
                                              l5229 0D49                                                l5237 0D59  
                                              l5181 0CB3                                                l5173 0C94  
                                              l5165 0C81                                                l5149 0C60  
                                              l5157 0C70                                                l6141 085F  
                                              l6133 0817                                                l6221 1F0B  
                                              l6213 1EF8                                                ?_pad 00B4  
                                              l6063 1DCB                                                l6055 1DBF  
                                              l4631 062D                                                l4623 060B  
                                              l4615 05F7                                                l4607 05E2  
                                              l4551 0560                                                l4543 0547  
                                              l4535 0538                                                l4527 052C  
                                              l4519 0519                                                l4367 1E7A  
                                              l4359 1E5F                                                l4711 0099  
                                              l4703 008E                                                l4471 133A  
                                              l5095 0A39                                                l5087 0A11  
                                              l5079 0A0C                                                l6071 1CFF  
                                              l6127 1C31                                                l4199 11B5  
                                              l4391 0763                                                l4383 0735  
                                              l4375 0722                                                l4455 123A  
                                              l4447 1211                                                l4295 1FA7  
                                              l4287 1F8D                                                l4439 146B  
                                              l5271 0DE4                                                l5263 0DD1  
                                              l5255 0D8D                                                l5239 0D5D  
                                              l5183 0CB5                                                l5175 0C95  
                                              l5167 0C82                                                l5159 0C78  
                                              l6143 0879                                                l6135 0826  
                                              l6151 089D                                                l6223 1F17  
                                              l6215 1EF9                                                l6065 1DCE  
                                              l6057 1DC2                                                l4633 0651  
                                              l4641 0662                                                l4625 060C  
                                              l4617 05FB                                                l4561 056C  
                                              l4553 0564                                                l4545 054F  
                                              l4537 053C                                                l4529 052F  
                                              l4801 022A                                                l4721 00B5  
                                              l4713 009E                                                l4705 0092  
                                              l4481 135F                                                l4473 1344  
                                              l4465 1C17                                                l5097 0A4E  
                                              l5089 0A1B                                                l6073 1D04  
                                              l6129 1C36                                                l4393 0764  
                                              l4385 073F                                                l4377 0727  
                                              l4457 124C                                                l4449 1214  
                                              l4297 1FAB                                                l4289 1F92  
                                              l6153 150B                                                l5273 0DE6  
                                              l5265 0DD4                                                l5257 0DA5  
                                              l5249 0D7E                                                l5193 0CCC  
                                              l5169 0C87                                                l5177 0C97  
                                              l6145 0882                                                l6137 083C  
                                              l6225 1F1A                                                l6217 1F05  
                                              l6067 1DD4                                                l6059 1DC5  
                                              l4651 0687                                                l4643 0672  
                                              l4635 0653                                                l4627 0614  
                                              l4619 0605                                                l4571 0576  
                                              l4563 056E                                                l4555 0566  
                                              l4547 0550                                                l4539 053D  
                                              l4811 024B                                                l4803 022B  
                                              l4731 00C4                                                l4723 00B8  
                                              l4715 00A3                                                l4707 0094  
                                              l4483 1367                                                l4467 1C21  
                                              l5099 0A59                                                l6075 1D0B  
                                              l4395 0768                                                l4387 0742  
                                              l4379 072B                                                l4459 1254  
                                              l4299 1FAC                                                l6155 1511  
                                              l5267 0DDC                                                l5259 0DA9  
                                              l5195 0CDC                                                l5179 0CA7  
                                              l5187 0CBE                                                l6147 088B  
                                              l6139 0856                                                l6219 1F08  
                                              l5701 1D42                                                l6069 1B81  
                                              l4661 069B                                                l4653 068B  
                                              l4645 0677                                                l4637 0656  
                                              l4629 0617                                                l4581 0580  
                                              l4573 0578                                                l4565 0570  
                                              l4557 0568                                                l4549 0552  
                                              l4813 0250                                                l4821 0276  
                                              l4805 022F                                                l4741 00E0  
                                              l4733 00C9                                                l4725 00BA  
                                              l4717 00AB                                                l4709 0098  
                                              l4493 1375                                                l4485 1369  
                                              l4477 134D                                                l6077 1D10  
                                              l4389 0747                                                l4397 0778  
                                              l4901 0B29                                                l5269 0DE0  
                                              l5197 0CE4                                                l5189 0CC3  
                                              l6149 0894                                                l5703 1D44  
                                              l4671 06AC                                                l4655 0690  
                                              l4663 069D                                                l4639 065B  
                                              l4591 05B7                                                l4583 0582  
                                              l4575 057A                                                l4567 0572  
                                              l4559 056A                                                l4831 02A6  
                                              l4823 0283                                                l4815 0256  
                                              l4807 0243                                                l4751 0106  
                                              l4743 00E5                                                l4735 00D1  
                                              l4727 00BE                                                l4719 00AD  
                                              l4487 136D                                                l4495 1383  
                                              l4479 135E                                                l5711 1C0D  
                                              l4399 0786                                                l4911 0B4A  
                                              l4903 0B38                                                l5199 0CEC  
                                              l5705 1D46                                                l5801 1CC5  
                                              l5713 1BFF                                                l4681 06C3  
                                              l4657 0694                                                l4649 0680  
                                              l4665 06A1                                                l4593 05C1  
                                              l4577 057C                                                l4569 0574  
                                              l4585 0584                                                l4833 02B1  
                                              l4825 028D                                                l4817 025A  
                                              l4761 015D                                                l4753 011E  
                                              l4737 00D3                                                l4729 00BF  
                                              l5721 13A9                                                l4913 0B54  
                                              l4905 0B3C                                                l5707 1D48  
                                              l5803 1CC7                                                l5811 1C93  
                                              l5715 1C06                                                l4691 06F9  
                                              l4683 06E0                                                l4675 06B4  
                                              l4667 06A2                                                l4659 0696  
                                              l4595 05C3                                                l4587 0585  
                                              l4579 057E                                                l4835 02B5  
                                              l4827 029B                                                l4819 0272  
                                              l4771 0188                                                l4763 0164  
                                              l4755 012B                                                l4747 00EE  
                                              l4739 00DB                                                l4851 16DB  
                                              l4843 16B2                                                l5731 1418  
                                              l5723 13A9                                                l4923 0B89  
                                              l4915 0B5E                                                l4907 0B3D  
                                              l5709 1D50                                                l5741 1B73  
                                              l5821 07D7                                                l5717 1BC9  
                                              l5813 1C95                                                l5805 1C8A  
                                              l4693 06FA                                                l4685 06E7  
                                              l4677 06B9                                                l4669 06A6  
                                              l4597 05C7                                                l4589 059C  
                                              l4837 02B6                                                l4829 02A4  
                                              l4781 01D0                                                l4773 019A  
                                              l4765 016F                                                l4757 0143  
                                              l4749 00F9                                                l4861 1706  
                                              l4845 16B7                                                l5725 13AE  
                                              l4941 0BE8                                                l4925 0B93  
                                              l4917 0B6B                                                l4909 0B42  
                                              l5901 17CC                                                l5831 07E2  
                                              l5823 07DA                                                l5815 07C9  
                                              l5735 1BF3                                                l5751 1FC7  
                                              l5743 1FBC                                                l5719 1BCD  
                                              l5807 1C8D                                                l4695 06FE  
                                              l4687 06EC                                                l4679 06BF  
                                              l4599 05C8                                                l4839 02C0  
                                              l4791 0216                                                l4783 01E5  
                                              l4775 01A1                                                l4767 0176  
                                              l4759 0150                                                l4871 172E  
                                              l4863 170D                                                l4855 16E7  
                                              l4847 16BB                                                l5727 1416  
                                              l4951 0C12                                                l4943 0BF6  
                                              l4935 0BBF                                                l4927 0BA0  
                                              l4919 0B78                                                l5911 17F7  
                                              l5903 17CE                                                l5841 07F8  
                                              l5833 07EA                                                l5825 07DC  
                                              l5817 07CB                                                l5737 1BF6  
                                              l5761 1FDB                                                l5753 1FCA  
                                              l5745 1FC0                                                l5809 1C8E  
                                              l4697 0700                                                l4689 06F4  
                                              l4793 021A                                                l4785 01FC  
                                              l4777 01B3                                                l4769 0181  
                                              l4873 1742                                                l4865 1716  
                                              l4857 16F0                                                l4849 16CB  
                                              l5729 1417                                                l4953 0C1D  
                                              l4929 0BAE                                                l4937 0BC8  
                                              l5905 17EA                                                l5739 1B6F  
                                              l5843 07FA                                                l5835 07F2  
                                              l5827 07DE                                                l5819 07D0  
                                              l5771 1FE8                                                l5763 1FDD  
                                              l5755 1FCC                                                l5747 1FC3  
                                              l4971 1B8A                                                l4699 070A  
                                              l4795 021B                                                l4787 0203  
                                              l4779 01BE                                                l4875 1747  
                                              l4867 171A                                                l4859 16F7  
                                              l5851 1B9C                                                l4939 0BD2  
                                              l4947 0BF9                                                l4891 0B02  
                                              l4963 0C2C                                                l4883 0ADE  
                                              l5931 1126                                                l5923 1113  
                                              l5915 1101                                                l5907 17EC  
                                              l5845 07FB                                                l5837 07F5  
                                              l5829 07E0                                                l5773 1FEB  
                                              l5765 1FE0                                                l5757 1FD6  
                                              l5749 1FC5                                                l5781 1CA9  
                                              l4797 0222                                                l4789 020F  
                                              l4877 174B                                                l4869 1724  
                                              l4981 1D69                                                l4965 0C45  
                                              l4949 0C0A                                                l4957 0C23  
                                              l4893 0B07                                                l4885 0AF0  
                                              l5933 112E                                                l5941 1134  
                                              l5917 1109                                                l5909 17F1  
                                              l5847 07FC                                                l5839 07F7  
                                              l5775 1FED                                                l5767 1FE2  
                                              l5759 1FD9                                                l5791 1CB6  
                                              l5783 1CAC                                                l4799 0226  
                                              l4879 174C                                                l4975 1B93  
                                              l4983 1D84                                                l4887 0AF8  
                                              l4991 1ED0                                                l5943 1142  
                                              l5935 1130                                                l5927 111B  
                                              l5919 1110                                                l5697 1D3D  
                                              l5849 07FD                                                l5777 1FEF  
                                              l5769 1FE6                                                l5785 1CAD  
                                              l5793 1CBA                                                l4985 115A  
                                              l4897 0B14                                                l4889 0AFD  
                                              l4993 1ED4                                                l5945 114E  
                                              l5953 1156                                                l5937 1132  
                                              l5929 111E                                                l5881 175E  
                                              l5699 1D40                                                l5779 1FF2  
                                              l5787 1CB2                                                l5795 1CBD  
                                              l4979 1D28                                                l5955 1BA5  
                                              l5963 1CCB                                                l4899 0B24  
                                              l4995 1EE8                                                l5875 1586  
                                              l5971 1499                                                l5947 1154  
                                              l5891 1773                                                l5883 175F  
                                              l5789 1CB4                                                l5797 1CBE  
                                              l4997 1EF2                                                l4989 1ECB  
                                              l5877 15F4                                                l5981 14BF  
                                              l5973 14A3                                                l5893 17B9  
                                              l5885 1765                                                l5799 1CC3  
                                              l5959 1CDC                                                l5991 14F5  
                                              l5975 14B0                                                l5967 1492  
                                              l5895 17BC                                                l5887 1767  
                                              l5879 1755                                                l5993 14FA  
                                              l5985 14CA                                                l5977 14BA  
                                              l5969 1497                                                l5897 17C2  
                                              l5889 176D                                                l5995 1506  
                                              l5979 14BC                                                l5899 17CA  
                                              l5989 14E8                                                l5999 1BC0  
                                              STR_1 18EC                                                STR_2 1865  
                                              STR_3 18D7                                                STR_4 18AE  
                                              STR_5 188E                                                STR_6 18FB  
                                              STR_7 18F4                                                STR_8 18AB  
                                              STR_9 184C                                                _LATA 010C  
                                              _LATB 010D                                                _LATC 010E  
                                              u4000 1EA2                                                u4001 1EA1  
                                              u4010 1D62                                                u4011 1D61  
                                              u4020 1DDF                                                u4100 11E3  
                                              u4021 1DDE                                                u4101 11E2  
                                              u5000 0672                                                u4120 11F2  
                                              u4200 1084                                                u5001 0671  
                                              u4121 11F1                                                u4201 1083  
                                              u5010 0677                                                u4050 1DF3  
                                              u4210 108E                                                u5011 0676  
                                              u4051 1DF2                                                u4035 1DE4  
                                              u4115 11E4                                                u4211 108D  
                                              u5100 06B9                                                u4140 1202  
                                              u4060 11BB                                                u5101 06B8  
                                              u4045 1DE9                                                u4141 1201  
                                              u4125 11EE                                                u4061 11BA  
                                              u5110 06C3                                                u5030 068B  
                                              u4150 1207                                                u4070 11C6  
                                              u4230 109D                                                u4310 1FB7  
                                              u5111 06C2                                                u5031 068A  
                                              u4151 1206                                                u4135 11F8  
                                              u4071 11C5                                                u4231 109C  
                                              u4215 108A                                                u4311 1FB6  
                                              u5120 06D1                                                u5040 0690  
                                              u5200 0098                                                u4080 11D5  
                                              u4240 10A2                                                u4160 1060  
                                              u4400 10E4                                                u4320 1F55  
                                              u5041 068F                                                u5025 0681  
                                              u5201 0097                                                u4081 11D4  
                                              u4241 10A1                                                u4225 1093  
                                              u4161 105F                                                u4401 10E3  
                                              u4305 1FAD                                                u4321 1F54  
                                              u5130 06E0                                                u5050 069B  
                                              u5210 009E                                                u4170 106B  
                                              u4410 10E9                                                u4250 1F8A  
                                              u5131 06DF                                                u5051 069A  
                                              u5211 009D                                                u4171 106A  
                                              u4411 10E8                                                u4251 1F89  
                                              u5140 06E7                                                u5060 06A1  
                                              u5300 01DB                                                u5220 00A3  
                                              u4180 1076                                                u4420 1CF2  
                                              u4500 0786                                                u4340 1F63  
                                              u6100 0D5D                                                u6020 0D0D  
                                              u5141 06E6                                                u5125 06CD  
                                              u5061 06A0                                                u5221 00A2  
                                              u4181 1075                                                u4421 1CF1  
                                              u4405 10E0                                                u4501 0785  
                                              u4341 1F62                                                u6101 0D5C  
                                              u6021 0D0C                                                u6005 0CFC  
                                              u5150 06EC                                                u5070 06A6  
                                              u4430 1E6A                                                u5310 01F2  
                                              u5230 00BE                                                u4510 078D  
                                              u4270 1F98                                                u4350 1F6D  
                                              u6110 0D62                                                u5151 06EB  
                                              u5071 06A5                                                u4431 1E69  
                                              u5231 00BD                                                u4095 11D9  
                                              u4511 078C                                                u4271 1F97  
                                              u4351 1F6C                                                u4335 1F59  
                                              u6111 0D61                                                u6015 0D03  
                                              u5160 06F9                                                u5080 06AC  
                                              u5400 0250                                                u5240 00C4  
                                              u4520 0792                                                u4600 147D  
                                              u6120 0D76                                                u6040 0D27  
                                              u5161 06F8                                                u5081 06AB  
                                              u5401 024F                                                u5305 01D7  
                                              u5241 00C3                                                u4521 0791  
                                              u4505 0782                                                u4265 1F8E  
                                              u4601 147C                                                u6121 0D75  
                                              u6041 0D26                                                u5170 06FE  
                                              u5090 06B3                                                u4450 1E7A  
                                              u5410 025A                                                u5250 00C9  
                                              u4530 079F                                                u4610 1225  
                                              u4290 1FA7                                                u4370 1F7C  
                                              u6130 0D7D                                                u6050 0D38  
                                              u5171 06FD                                                u5091 06B2  
                                              u4451 1E79                                                u5411 0259  
                                              u5315 01EE                                                u5251 00C8  
                                              u4195 107A                                                u4531 079E  
                                              u4611 1224                                                u4291 1FA6  
                                              u4371 1F7B                                                u4355 1F69  
                                              u6131 0D7C                                                u6051 0D37  
                                              u6035 0D0F                                                u5420 0268  
                                              u5340 021A                                                u5260 00E0  
                                              u4700 1389                                                u4380 10B1  
                                              u4540 07A4                                                u4460 0718  
                                              u4620 1268                                                u6140 0D83  
                                              u6060 0D40                                                u4445 1E6F  
                                              u5341 0219                                                u5325 01FD  
                                              u5261 00DF                                                u4701 1388  
                                              u4381 10B0                                                u4541 07A3  
                                              u4461 0716                                                u4621 1267  
                                              u4285 1F99                                                u4365 1F72  
                                              u6205 0DEB                                                u6141 0D82  
                                              u6061 0D3F                                                u6045 0D23  
                                              i1l30 1BF2                                                u5190 070E  
                                              u5430 0283                                                u5270 00E5  
                                              u5510 16F6                                                u4630 1C20  
                                              u3910 1BB5                                                u4390 10C0  
                                              u4550 07AA                                                u4470 0719  
                                              u6150 0D8D                                                u5191 070D  
                                              u5431 0282                                                u5335 0210  
                                              u5271 00E4                                                u5511 16F5  
                                              u4631 1C1F                                                u3911 1BB3  
                                              u4391 10BF                                                u4551 07A9  
                                              u4535 079B                                                u4295 1FA3  
                                              u6151 0D8C                                                u4800 0547  
                                              u5440 029B                                                u5360 022A  
                                              u4720 1398                                                u4640 1344  
                                              u5600 174B                                                u3920 1BB6  
                                              u4480 0727                                                u4560 1460  
                                              u6160 0D9B                                                u6080 0D4D  
                                              u7200 1773                                                u5185 0705  
                                              u4801 0546                                                u5441 029A  
                                              u5425 0264                                                u5361 0229  
                                              u4721 1397                                                u4641 1343  
                                              u5601 174A                                                u5505 16EA  
                                              u4481 0726                                                u4561 145F  
                                              u6081 0D4C                                                u7201 1772  
                                              u4810 0560                                                u5450 02B5  
                                              u5370 022F                                                u4730 139D  
                                              u4650 135A                                                u5530 170C  
                                              u3930 1EA8                                                u4490 0730  
                                              u4570 1466                                                u5610 0AF0  
                                              u6170 0DB6                                                u7210 17C2  
                                              u4811 055F                                                u5451 02B4  
                                              u5435 027F                                                u5371 022E  
                                              u5355 021C                                                u4731 139C  
                                              u4715 138B                                                u5531 170B  
                                              u3931 1EA7                                                u4491 072F  
                                              u4571 1465                                                u5611 0AEF  
                                              u6171 0DB5                                                u6075 0D43  
                                              u7211 17C1                                                i1l52 1C4D  
                                              u4900 05D9                                                u4820 0564  
                                              u4740 050E                                                u5380 0243  
                                              u4660 136D                                                u3940 1EB2  
                                              u4580 146B                                                u5620 0B29  
                                              u7300 14B0                                                u6180 0DD1  
                                              u7220 17C8                                                u4901 05D8  
                                              u4821 0563                                                u4741 050D  
                                              u5445 0297                                                u5381 0242  
                                              u5285 015E                                                u4661 136C  
                                              u5525 1700                                                u3941 1EB1  
                                              u4581 146A                                                u5621 0B28  
                                              u7301 14AF                                                u6181 0DD0  
                                              u6165 0D97                                                u7221 17C7  
                                              u4910 05DD                                                u4830 059C  
                                              u4750 0514                                                u5390 024A  
                                              u4670 1374                                                u5550 171A  
                                              u5470 16B7                                                u3950 080A  
                                              u4590 1478                                                u5630 0B3C  
                                              u7310 14BA                                                u6190 0DE4  
                                              u7230 17F1                                                i1l39 1B53  
                                              u4911 05DC                                                u4831 059B  
                                              u4751 0513                                                u5391 0249  
                                              u5295 0189                                                u4671 1373  
                                              u4655 1356                                                u5551 1719  
                                              u5471 16B6                                                u3951 0809  
                                              u4591 1477                                                u5631 0B3B  
                                              u7311 14B9                                                u6191 0DE3  
                                              u6175 0DB2                                                u6095 0D4F  
                                              u7231 17F0                                                i1l72 1D27  
                                              u4920 05E2                                                u4840 05A6  
                                              u4760 0519                                                u5560 1720  
                                              u5480 16BB                                                u5800 09EE  
                                              u3960 1274                                                u5640 0B54  
                                              u7320 14C9                                                u7240 17F7  
                                              u4921 05E1                                                u4841 05A4  
                                              u4761 0518                                                u5465 02B9  
                                              u5561 171F                                                u5545 1710  
                                              u5481 16BA                                                u5801 09ED  
                                              u3961 1273                                                u5641 0B53  
                                              u7321 14C8                                                u6185 0DCD  
                                              u7241 17F6                                                i1l58 1B3F  
                                              u4930 05F7                                                u4850 05A7  
                                              u4770 0535                                                u4690 1382  
                                              u5570 1724                                                u5490 16DB  
                                              u5810 0A0A                                                u3970 127A  
                                              u5650 0B5E                                                u7330 14F5  
                                              u7250 1109                                                u4931 05F6  
                                              u4835 0598                                                u4771 0534  
                                              u4691 1381                                                u5571 1723  
                                              u5491 16DA                                                u5811 0A09  
                                              u3971 1279                                                u4595 1474  
                                              u5651 0B5D                                                u7331 14F4  
                                              u7251 1108                                                u5740 1C73  
                                              u4940 05FB                                                u4860 05B7  
                                              u4780 053C                                                u5580 1738  
                                              u5900 0ADA                                                u5820 0A1B  
                                              u7420 1D04                                                u7180 13AE  
                                              u3980 128A                                                u5660 0B93  
                                              u7340 14FA                                                u7260 111A  
                                              u7500 0889                                                u5741 1C72  
                                              u4941 05FA                                                u4861 05B6  
                                              u4781 053B                                                u4685 1376  
                                              u5901 0AD9                                                u5821 0A1A  
                                              u5805 09EA                                                u7421 1D03  
                                              u7181 13AD                                                u3981 1289  
                                              u5661 0B92                                                u7341 14F9  
                                              u7261 1119                                                u7501 0887  
                                              u5750 1C82                                                u4790 0542  
                                              u5590 1747                                                u5830 0A24  
                                              u7430 1D0B                                                u3990 12AA  
                                              u5670 0BD2                                                u7270 1126  
                                              u5910 0C5A                                                u7190 176D  
                                              u7510 088A                                                u5751 1C81  
                                              u4791 0541                                                u5591 1746  
                                              u5831 0A23                                                u7431 1D0A  
                                              u3991 12A9                                                u5671 0BD1  
                                              u7271 1125                                                u5911 0C59  
                                              u7191 176C                                                u4960 060B  
                                              u4880 05C7                                                u5840 0A39  
                                              u5680 0C0A                                                u7520 1511  
                                              u5760 1BBE                                                u7280 114E  
                                              u5920 0C60                                                u4961 060A  
                                              u4881 05C6                                                u5585 1734  
                                              u5841 0A38                                                u5825 0A17  
                                              u5681 0C09                                                u7521 1510  
                                              u5761 1BBC                                                u7281 114D  
                                              u5921 0C5F                                                u5850 0A4E  
                                              u5690 1EF2                                                u7290 14A3  
                                              u5770 1BBF                                                u5930 0C65  
                                              u4955 05FE                                                u4875 05BA  
                                              u5851 0A4D                                                u3995 12A6  
                                              u5691 1EF1                                                u7291 14A2  
                                              u5931 0C64                                                u4980 062D  
                                              u5860 0A67                                                u5780 1E32  
                                              u5940 0C81                                                u4981 062C  
                                              u5861 0A66                                                u5845 0A35  
                                              u5781 1E31                                                u5941 0C80  
                                              u4990 065B                                                u5870 0A80  
                                              u5790 09DE                                                u5950 0C87  
                                              u4991 065A                                                u4983 0629  
                                              u4975 060E                                                u4895 05CA  
                                              u5871 0A7F                                                u5855 0A4A  
                                              u5791 09DD                                                u5951 0C86  
                                              u5880 0AA4                                                u5960 0C8C  
                                              u5881 0AA3                                                u5865 0A63  
                                              u5961 0C8B                                                u5890 0ABD  
                                              u5970 0CA7                                                u5891 0ABC  
                                              u5875 0A7C                                                u5971 0CA6  
                                              u7707 1F11                                                u5980 0CC3  
                                              u5885 0AA0                                                u5981 0CC2  
                                              u5990 0CFB                                                u5895 0AB9  
                                              u5991 0CFA                                                _TMR2 001D  
                                              _TMR4 0415                                                _TMR6 041C  
                                              _WPUA 020C                                                _WPUB 020D  
                                              _WPUC 020E                           EUSART_ReceiveISR@regValue 0070  
                                   _getHoogtesensor 1B8A                                                abs@a 00A6  
                                              _dbuf 01A0                                                _atoi 1492  
                                              _main 1EF5                                                _dtoa 0710  
                                              _line 01C0                                       i1___flmul@grs 002E  
                                              _prec 0146                                                _nout 0144  
                                              pad@i 00BA                                                pad@p 00B7  
                                              fsr0h 0005                                                fsr1h 0007  
                                              indf0 0000                                                fsr0l 0004  
                                              indf1 0001                                                fsr1l 0006  
                                              btemp 007E                                                _utoa 1419  
                       _INT_DefaultInterruptHandler 0000                    __end_of_adcConversionDoneHandler 1F4E  
                                    i1___fladd@aexp 004B                                      i1___fladd@bexp 004C  
                                              start 0058          __end_of_EUSART_DefaultOverrunErrorCallback 1B46  
              ??_EUSART_DefaultOverrunErrorCallback 0070                 ?_EUSART_DefaultOverrunErrorCallback 0070  
                _EUSART_DefaultOverrunErrorCallback 1B42                                     ___fldiv@new_exp 00B2  
                         __end_of_SPI1_ByteExchange 1C24                     __end_of_INT_SetInterruptHandler 1B81  
                              ?i1_ADC_SelectChannel 0070                                               ??_abs 00A8  
                                             ??_pad 00B9                                       ?_EUSART_Write 00A0  
                                     ___fltol@sign1 00EC                                               _ADACT 009F  
                                             ?_atoi 00A6                                     __end_of___fladd 0710  
                                             ?_main 0070                                               ?_dtoa 00BC  
                                   __end_of___fldiv 0DF4                                     __end_of___awdiv 1211  
                                             STR_10 18CA                                               STR_11 18BD  
                                             STR_12 189F                                               STR_13 187D  
                                   __end_of___awmod 10AC                                     __end_of___flmul 02C9  
                                   __end_of___flsub 1E18                                     __end_of___fltol 13A9  
                                             ?_utoa 00BC                                     ___awdiv@divisor 00A0  
                                             _T2CON 001F                                               _T4CON 0417  
                                             _IOCAF 0393                                               _IOCBF 0396  
                                             _IOCCF 0399                                               _IOCAN 0392  
                                             _IOCAP 0391                                               _IOCBN 0395  
                                             _T6CON 041E                                               _IOCBP 0394  
                                             _IOCCN 0398                                               _IOCCP 0397  
                                   __end_of___lwdiv 1FBC                                               i1l221 002C  
                                             i1l230 0056                                               i1l223 003A  
                                             i1l224 0056                                               i1l225 0048  
                                             i1l219 001B                                               i1l420 1B41  
                                             i1l414 1C5C                                     __end_of___lwmod 1F81  
                                             i1l473 1C6B                                               i1l730 1DB8  
                                             i1l811 1F4D                                               i1l820 1B59  
                                             i1l717 1059                                               i1l727 1DB6  
                                             i1l479 0002                                               i1l745 1B40  
                                             i1l748 1B45                                               i1l926 09BF  
                                             i1l928 09C6                                     ___awdiv@counter 00A4  
                                             _OSCEN 091D                                               _UART1 1800  
                                      vfpfcnvrt@fmt 00CB                                               _TRISA 008C  
                                             _TRISB 008D                                               _TRISC 008E  
                                             _RXPPS 0E24                                     _TMR4_Initialize 1CBA  
                                  __end_of_TMR2_ISR 1C5D                                    __end_of_TMR4_ISR 1C6C  
                                             _getKi 1CCB                                               _getKp 1CDC  
                                             _flags 0063                                  _EUSART_TransmitISR 1D9D  
                                    i1___flmul@aexp 0032                                 read_prec_or_width@c 00AB  
                                    i1___flmul@bexp 0033                                 read_prec_or_width@n 00AC  
                                             _fputc 126D                                               _fputs 1E7F  
                                             _setKi 1BD3                                               _setKp 1BDD  
                                       ?_TMR6_Tasks 0070                                      i1___flmul@sign 002D  
                                    i1___flmul@temp 0038                                      i1___flmul@prod 0034  
                                             atoi@n 00AB                                               pad@fp 00B4  
                                             atoi@s 00A6                                               _width 0055  
                                             _putch 0800                                               dtoa@d 00BE  
                                             dtoa@i 00C7                                               dtoa@p 00C3  
                                             dtoa@s 00C6                                               dtoa@w 00C4  
                                             pclath 000A                                      i1___fltol@exp1 0043  
                              __end_of_getLedNumber 11B5                                               utoa@d 00BE  
                                             utoa@i 00C4                                               utoa@p 00C1  
                                             utoa@w 00C2                                               status 0003  
                                             wtemp0 007E                                 ?_EUSART_TransmitISR 0070  
                                   i1___fladd@signs 004A                                         controller@I 0051  
                                       controller@P 004F                               ??i1_ADC_SelectChannel 0070  
                                   __initialization 005A                                        __end_of_atoi 150B  
                                      __end_of_main 1F20                                        __end_of_dtoa 07C9  
                                      __end_of_utoa 1492                                       ?_initLedstrip 0070  
                                    ??_EUSART_Write 00A1                   _EUSART_TxCompleteInterruptHandler 005F  
                           __end_of_TMR2_Initialize 1CBA                                           ??_ADC_ISR 0074  
                       ?_INTERRUPT_InterruptManager 0070                              printFloat@integer_part 0156  
                                            ??_atoi 00A8                                ??_EUSART_TransmitISR 0070  
                                            ??_main 015C                                              ??_dtoa 00C0  
                                       ?i1___xxtofl 0070                                __end_of_getDutycycle 1BAE  
                                            ??_utoa 00C0                             setSetpoint@new_setpoint 00AD  
                        __end_of_read_prec_or_width 126D                                     _TMR6_Initialize 1C8A  
EUSART_OverrunErrorCallbackRegister@callbackHandler 00A0  EUSART_FramingErrorCallbackRegister@callbackHandler 00A0  
                           __end_of_getHoogtesensor 1B93                                              ?_getKi 00A0  
                                            ?_getKp 00A0                                              _ADCON0 009D  
                                            _ADCON1 009E                          _EUSART_OverrunErrorHandler 005B  
                                            ?_fputc 00A3                                              ?_fputs 00AC  
                                            _ADRESH 009C                                              _ADRESL 009B  
                                            ?_setKi 0150                                              ?_setKp 0150  
                        __end_of_position_led_strip 0ADE                                    ___awdiv@dividend 00A2  
                                            _ANSELA 018C                                              ?_putch 0070  
                                            _ANSELB 018D                                              _ANSELC 018E  
                                      ?_setSetpoint 00AD                                              _RC1REG 0199  
                                            _RC1STA 019D                                              _RB4PPS 0E9C  
                                            _RB5PPS 0E9D                                              _RB6PPS 0E9E  
                                            _RC5PPS 0EA5                                              i1l1500 0FD2  
                                            _ODCONA 028C                                              _ODCONB 028D  
                                            _ODCONC 028E                                              i1l1508 0FF2  
                                            i1l1620 1687                                              i1l1509 0FFF  
                                            i1l1470 0EC9                                              i1l1366 1324  
                                            i1l1606 162E                                              i1l1359 1339  
                                            i1l1607 163F                                              i1l1472 0EA3  
                                            i1l1608 16AF                                              i1l5001 1E39  
                                            i1l1369 1339                                              i1l1466 0E4A  
                                            i1l1562 0503                                              i1l1491 0F7C  
                                            i1l5011 1E56                                              i1l5003 1E3B  
                                            i1l1619 167B                                              i1l5021 1D13  
                                            i1l1581 1E4A                                              i1l5005 1E42  
                                            i1l1574 04F9                                              i1l1487 0F5A  
                                            i1l1479 0FFF                                              i1l1583 1E5A  
                                            i1l5007 1E46                                              i1l1568 0481  
                                            i1l5017 1B4E                                              i1l1497 0F9F  
                                            i1l5009 1E51                                              i1l6011 091D  
                                            i1l6101 1047                                              i1l5301 12FE  
                                            i1l6021 09A8                                              i1l6013 0958  
                                            i1l6005 08BF                                              i1l6031 09BF  
                                            i1l6023 09AE                                              i1l6015 098C  
                                            i1l6007 08C7                                              i1l6105 104E  
                                            i1l6121 1DB3                                              i1l6113 1D9D  
                                            i1l5401 0E75                                              i1l5321 0DF4  
                                            i1l6025 09B8                                              i1l6017 0992  
                                            i1l6009 08D0                                              i1l6041 1C5D  
                                            i1l6035 1C3F                                              i1l6107 1055  
                                            i1l6115 1DA4                                              i1l6051 1C5A  
                                            i1l5411 0EB7                                              i1l5403 0E8C  
                                            i1l5331 0E04                                              i1l5323 0DF8  
                                            i1l5315 131B                                              i1l5307 1306  
                                            i1l6027 09BC                                              i1l6019 099B  
                                            i1l6043 1C64                                              i1l6037 1C41  
                                            i1l6109 1057                                              i1l6117 1DAC  
                                            i1l5501 0FDC                                              i1l5421 0ED2  
                                            i1l5413 0EB8                                              i1l5405 0EA7  
                                            i1l5341 0E1C                                              i1l5333 0E09  
                                            i1l5325 0DFA                                              i1l5317 1329  
                                            i1l5309 1314                                              i1l6045 1C69  
                                            i1l6039 1C48                                              i1l6119 1DB1  
                                            i1l6047 1C4E                                              i1l5511 0FF0  
                                            i1l5503 0FE4                                              i1l5431 0EEB  
                                            i1l5415 0EC0                                              i1l5407 0EB1  
                                            i1l5351 0E2C                                              i1l5343 0E1F  
                                            i1l5335 0E11                                              i1l5327 0DFE  
                                            i1l5319 132E                                              i1l6081 1011  
                                            i1l6049 1C55                                              i1l5513 0FFA  
                                            i1l5505 0FE9                                              i1l5441 0F04  
                                            i1l5433 0EF5                                              i1l5425 0EDB  
                                            i1l5409 0EB3                                              i1l5417 0EC2  
                                            i1l5361 0E40                                              i1l5353 0E2D  
                                            i1l5345 0E25                                              i1l5337 0E12  
                                            i1l5329 0DFF                                              i1l5601 043E  
                                            i1l5521 02CF                                              i1l5281 1B54  
                                            i1l6161 000F                                              i1l6091 102D  
                                            i1l6083 1016                                              i1l5515 0FFE  
                                            i1l5507 0FEA                                              i1l5451 0F46  
                                            i1l5435 0EF7                                              i1l5427 0EE3  
                                            i1l5419 0ECD                                              i1l5443 0F07  
                                            i1l5371 0E58                                              i1l5355 0E32  
                                            i1l5363 0E42                                              i1l5347 0E26  
                                            i1l5339 0E14                                              i1l5611 045D  
                                            i1l5603 044A                                              i1l5531 02E6  
                                            i1l5523 02D3                                              i1l5291 12DE  
                                            i1l6171 0036                                              i1l6163 0014  
                                            i1l6093 1034                                              i1l6085 101D  
                                            i1l5509 0FEE                                              i1l5453 0F4B  
                                            i1l5445 0F1D                                              i1l5437 0EFB  
                                            i1l5429 0EE7                                              i1l5381 0E62  
                                            i1l5373 0E5A                                              i1l5365 0E50  
                                            i1l5357 0E37                                              i1l5349 0E28  
                                            i1l5621 047E                                              i1l5605 0451  
                                            i1l5613 0461                                              i1l5541 02F9  
                                            i1l5533 02E8                                              i1l5525 02D4  
                                            i1l5517 02C9                                              i1l5293 12EF  
                                            i1l5285 12CB                                              i1l6173 003F  
                                            i1l6165 0020                                              i1l6157 0006  
                                            i1l5279 1BE8                                              i1l6271 1F41  
                                            i1l6095 103A                                              i1l6087 1023  
                                            i1l6079 1008                                              i1l5471 0F84  
                                            i1l5463 0F70                                              i1l5447 0F41  
                                            i1l5455 0F52                                              i1l5439 0EFC  
                                            i1l5391 0E6C                                              i1l5383 0E64  
                                            i1l5375 0E5C                                              i1l5367 0E54  
                                            i1l5359 0E3F                                              i1l5631 0495  
                                            i1l5615 0465                                              i1l5607 0455  
                                            i1l5551 030E                                              i1l5543 02FA  
                                            i1l5535 02F0                                              i1l5527 02D9  
                                            i1l5519 02CD                                              i1l5295 12F0  
                                            i1l5287 12D5                                              i1l6175 0044  
                                            i1l6167 0025                                              i1l6159 000A  
                                            i1l6097 103F                                              i1l6089 1028  
                                            i1l5481 0F92                                              i1l5473 0F86  
                                            i1l5465 0F77                                              i1l5457 0F62  
                                            i1l5449 0F43                                              i1l5393 0E6E  
                                            i1l5385 0E66                                              i1l5377 0E5E  
                                            i1l5369 0E56                                              i1l5641 04D6  
                                            i1l5633 04AD                                              i1l5625 0486  
                                            i1l5617 0466                                              i1l5609 0456  
                                            i1l5561 0329                                              i1l5553 0316  
                                            i1l5545 02FF                                              i1l5537 02F3  
                                            i1l5529 02DE                                              i1l5297 12F8  
                                            i1l6177 004D                                              i1l6169 0031  
                                            i1l6099 1042                                              i1l5491 0FA9  
                                            i1l5483 0F96                                              i1l5475 0F8B  
                                            i1l5467 0F7B                                              i1l5459 0F67  
                                            i1l5395 0E70                                              i1l5387 0E68  
                                            i1l5379 0E60                                              i1l5651 04F1  
                                            i1l5643 04DF                                              i1l5627 048B  
                                            i1l5635 04B1                                              i1l5619 046A  
                                            i1l5571 037E                                              i1l5563 0334  
                                            i1l5555 031B                                              i1l5547 0304  
                                            i1l5539 02F5                                              i1l5299 12FA  
                                            i1l6179 0052                                              i1l5493 0FAF  
                                            i1l5485 0F9C                                              i1l5469 0F80  
                                            i1l5477 0F8D                                              i1l5397 0E72  
                                            i1l5389 0E6A                                              i1l5653 04FB  
                                            i1l5645 04E1                                              i1l5637 04BE  
                                            i1l5629 0491                                              i1l5581 03B1  
                                            i1l5573 038B                                              i1l5565 0341  
                                            i1l5557 0320                                              i1l5549 030C  
                                            i1l5661 1616                                              i1l5495 0FB3  
                                            i1l5479 0F91                                              i1l5399 0E74  
                                            i1l5647 04EC                                              i1l5639 04C8  
                                            i1l5591 03EE                                              i1l5583 03BC  
                                            i1l5575 0398                                              i1l5567 0359  
                                            i1l5671 164B                                              i1l5663 1626  
                                            i1l5497 0FD0                                              i1l5489 0FA4  
                                            i1l5649 04F0                                              i1l5593 03F9  
                                            i1l5585 03C3                                              i1l5577 039F  
                                            i1l5569 0366                                              i1l5681 1675  
                                            i1l5673 1652                                              i1l5665 1636  
                                            i1l5657 160D                                              i1l5499 0FD7  
                                            i1l5595 040B                                              i1l5587 03D5  
                                            i1l5579 03AA                                              i1l5691 16A6  
                                            i1l5683 167F                                              i1l5675 1661  
                                            i1l5659 1612                                              i1l5861 1F2D  
                                            i1l5853 1B42                                              i1l5597 0420  
                                            i1l5589 03DC                                              i1l5693 16A7  
                                            i1l5685 1689                                              i1l5677 1668  
                                            i1l5669 1642                                              i1l5863 1F35  
                                            i1l5855 1F20                                              i1l5599 0437  
                                            i1l5687 169D                                              i1l5679 1671  
                                            i1l5857 1F21                                              i1l5689 16A2  
                                            i1l5859 1F29                                              i1l5867 1F38  
                                            i1l5869 1F49                                              _INLVLA 038C  
                                            _INLVLB 038D                                              _INLVLC 038E  
                                            u700_20 04BE                                              u700_21 04BD  
                                            u700_25 04BA                                              u701_20 04D6  
                                            u621_20 12D5                                              u701_21 04D5  
                                            u621_21 12D4                                              u701_25 04D2  
                                            u702_20 04F0                                              u630_20 132E  
                                            u622_20 12EB                                              u710_20 1667  
                                            u702_21 04EF                                              u630_21 132D  
                                            u710_21 1666                                              u622_25 12E7  
                                            u631_20 0DFE                                              u623_20 12FE  
                                            u631_21 0DFD                                              u623_21 12FD  
                                            u703_25 04F4                                              u711_25 166B  
                                            u640_20 0E8C                                              u632_20 0E04  
                                            u624_20 1305                                              u712_20 1675  
                                            u704_20 1612                                              u640_21 0E8B  
                                            u632_21 0E03                                              u624_21 1304  
                                            u712_21 1674                                              u704_21 1611  
                                            u640_25 0E88                                              u641_20 0E96  
                                            u633_20 0E09                                              u713_20 167B  
                                            u705_20 1616                                              u641_21 0E94  
                                            u633_21 0E08                                              u713_21 167A  
                                            u705_21 1615                                              u625_25 1307  
                                            u650_20 0EE7                                              u642_20 0E97  
                                            u634_20 0E25                                              u570_20 1E46  
                                            u626_20 1313                                              u714_20 167F  
                                            u706_20 1636                                              u650_21 0EE6  
                                            u634_21 0E24                                              u570_21 1E45  
                                            u626_21 1312                                              u714_21 167E  
                                            u706_21 1635                                              u651_20 0EEB  
                                            u643_20 0EA7                                              u635_20 0E2C  
                                            u627_20 131A                                              u715_20 1693  
                                            u651_21 0EEA                                              u643_21 0EA6  
                                            u635_21 0E2B                                              u627_21 1319  
                                            u571_25 1E4B                                              u715_25 168F  
                                            u707_25 1645                                              u660_20 0F7B  
                                            u636_20 0E32                                              u572_20 1E56  
                                            u716_20 16A2                                              u708_20 1651  
                                            u740_20 1C64                                              u660_21 0F7A  
                                            u636_21 0E31                                              u572_21 1E55  
                                            u716_21 16A1                                              u708_21 1650  
                                            u740_21 1C63                                              u652_25 0EEE  
                                            u644_25 0EAA                                              u628_25 131C  
                                            _OSCFRQ 091F                                              u741_20 1C55  
                                            u661_20 0F80                                              u653_20 0EFB  
                                            u645_20 0EB7                                              u637_20 0E37  
                                            u629_20 1329                                              u717_20 16A6  
                                            u741_21 1C54                                              u661_21 0F7F  
                                            u653_21 0EFA                                              u645_21 0EB6  
                                            u637_21 0E36                                              u629_21 1328  
                                            u717_21 16A5                                              u573_25 1D22  
                                            u709_25 165B                                              u670_20 0FD0  
                                            u662_20 0F8B                                              u638_20 0E50  
                                            u670_21 0FCF                                              u662_21 0F8A  
                                            u638_21 0E4F                                              u654_25 0EFE  
                                            u646_25 0EBA                                              u671_20 0FD7  
                                            u663_20 0F91                                              u655_20 0F1D  
                                            u647_20 0EC9                                              u639_20 0E54  
                                            u735_20 099B                                              u671_21 0FD6  
                                            u663_21 0F90                                              u655_21 0F1C  
                                            u647_21 0EC8                                              u639_21 0E53  
                                            u735_21 099A                                              u655_23 0F19  
                                            u744_20 1016                                              u672_20 0FDC  
                                            u664_20 0F96                                              u656_20 0F4B  
                                            u648_20 0ECD                                              u680_20 02F9  
                                            u736_20 09A8                                              u760_20 003F  
                                            u744_21 1015                                              u672_21 0FDB  
                                            u664_21 0F95                                              u656_21 0F4A  
                                            u648_21 0ECC                                              u680_21 02F8  
                                            u736_21 09A7                                              u760_21 003E  
                                            u736_25 09A4                                       vfpfcnvrt@done 00D2  
                                            u745_20 1023                                              u673_20 0FE9  
                                            u665_20 0F9C                                              u657_20 0F62  
                                            u649_20 0ED2                                              u681_20 02FF  
                                            u737_20 09B8                                              u761_20 0044  
                                            u753_20 000A                                              u745_21 1022  
                                            u673_21 0FE8                                              u665_21 0F9B  
                                            u657_21 0F61                                              u649_21 0ED1  
                                            u681_21 02FE                                              u737_21 09B7  
                                            u761_21 0043                                              u753_21 0009  
                                            u746_20 102D                                              u674_20 0FEE  
                                            u666_20 0FA3                                              u658_20 0F67  
                                            u682_20 0304                                              u738_20 09BC  
                                            u762_20 004D                                              u754_20 000F  
                                            u746_21 102C                                              u674_21 0FED  
                                            u666_21 0FA2                                              u658_21 0F66  
                                            u682_21 0303                                              u738_21 09BB  
                                            u762_21 004C                                              u754_21 000E  
                                            u690_25 044B                                              u739_20 1C48  
                                            u747_20 103A                                              u667_20 0FA9  
                                            u691_20 0455                                              u683_20 031B  
                                            u763_20 0052                                              u755_20 0014  
                                            u739_21 1C47                                              u747_21 1039  
                                            u667_21 0FA8                                              u691_21 0454  
                                            u683_21 031A                                              u763_21 0051  
                                            u755_21 0013                                              u675_25 0FF5  
                                            u659_25 0F71                                              u748_20 104D  
                                            u676_20 0FFE                                              u668_20 0FB3  
                                            u684_20 0320                                              u756_20 0020  
                                            u748_21 104C                                              u676_21 0FFD  
                                            u668_21 0FB2                                              u684_21 031F  
                                            u756_21 001F                                              u692_25 0457  
                                            u749_20 1DA4                                              u669_20 0FC1  
                                            u693_20 0465                                              u677_20 02D3  
                                            u757_20 0025                                              u749_21 1DA3  
                                            u693_21 0464                                              u677_21 02D2  
                                            u757_21 0024                                              u669_25 0FBD  
                                            u685_25 0399                                              u694_20 046A  
                                            u678_20 02D9                                              u758_20 0031  
                                            u694_21 0469                                              u678_21 02D8  
                                            u758_21 0030                                              u686_25 03C4  
                                            u695_20 047E                                              u687_20 0416  
                                            u679_20 02DE                                              u759_20 0036  
                                            u695_21 047D                                              u679_21 02DD  
                                            u759_21 0035                                              u687_25 0412  
                                            u696_20 0485                                              u688_20 042D  
                                            u696_21 0484                                              u688_25 0429  
                                            u697_20 048B                                              u697_21 048A  
                                            u689_25 0438                                              u698_20 0495  
                                            u698_21 0494                                              _TX1REG 019A  
                                            u699_20 04A3                                              u699_25 049F  
                                            _TX1STA 019E                                    __end_of___xxtofl 1755  
                                      ?_uartHandler 0070                                   __end_of_SPI1_Open 1419  
                              _sendLedstripEndFrame 1D69                                   _ADC_potentiometer 014A  
                                      vfprintf@cfmt 00DF                                      ??_initLedstrip 00A9  
                                         ??___fladd 00B6                                              ___wmul 1DD8  
                           _updateLedstripAnimation 1B46                                           ??___fldiv 00A8  
                                         ??___awdiv 00A4                                           ??___awmod 00A4  
                                         ??___flmul 00D2                                           ??___flsub 00CA  
                                         ??___fltol 00E8                                           ??___lwdiv 00A4  
                                         ??___lwmod 00A4                                    __end_of_ledstrip 184C  
                                  __end_of_readLine 115A                                read_prec_or_width@ap 00A7  
                           __end_of_TMR4_Initialize 1CCB                                    ___awdiv@quotient 00A6  
                                 ?_EUSART_IsRxReady 0070                                     ___awmod@divisor 00A0  
                                 ?_EUSART_IsTxReady 0070                                     ___awmod@counter 00A4  
                                            _printf 1C99                                              pad@buf 00B6  
                                 ?_CLOCK_Initialize 0070                                              dtoa@fp 00BC  
                                            _strlen 1D53                                   __end_ofi1___fladd 1000  
                                ??_EUSART_IsRxReady 00A0                                   __end_ofi1___flmul 0504  
                                 __end_ofi1___fltol 133A                                              fputc@c 00A3  
                                ??_EUSART_IsTxReady 00A0                                              fputs@c 00B1  
                                            fputs@i 00B2                                              fputs@s 00AC  
                         ?_adcConversionDoneHandler 0070                                  ??_CLOCK_Initialize 00A0  
                        str2float@decimal_separator 00E8                                     i1___fltol@sign1 0042  
                           ?_sendLedstripStartFrame 0070                         EUSART_ReceiveISR@tempRxHead 0071  
                                  __end_of_vfprintf 1EF5                               _pwm_fan_LoadDutyValue 1D13  
                                            utoa@fp 00BC             INT_SetInterruptHandler@InterruptHandler 00A0  
           ADC_SetInterruptHandler@InterruptHandler 00A0                                      _SPI1_IsRxReady 0000  
                                    _SPI1_IsTxReady 0000                                        ___xxtofl@arg 00AA  
                                      ___xxtofl@exp 00A9                                   _SYSTEM_Initialize 1DB9  
                                      ___xxtofl@val 00A0                             __end_of__initialization 008A  
                                    _SPI1_ByteWrite 0000                                    printFloat@number 0150  
                                ?_SYSTEM_Initialize 0070                                          ___fltol@f1 00E4  
                                      ?i1__Umul8_16 0070                                       __end_of_UART1 1830  
                             ?_sendLedstripEndFrame 0070                                      __pcstackCOMMON 0070  
                                      __pidataBANK0 1B4A                                        __pidataBANK2 1000  
                               ??_SYSTEM_Initialize 00A2                                           ?_TMR2_ISR 0070  
                                     __end_of_getKi 1CDC                                       __end_of_getKp 1CED  
                                         ?_TMR4_ISR 0070                                       __end_of_fputc 12CB  
                                     __end_of_fputs 1EA3                                   ??_SPI1_Initialize 00A0  
                                     __end_of_setKi 1BDD                                       __end_of_setKp 1BE7  
                                     __end_of_putch 0811                                    ?_TMR2_Initialize 0070  
                           __end_of_TMR6_Initialize 1C99                             _ADC_GetConversionResult 1B4E  
                                _spi1_configuration 18E2                      __end_of_sendLedstripStartFrame 1D3D  
                              _eusartRxStatusBuffer 0120                                    _ADC_hoogtesensor 0059  
                                _pwm_fan_Initialize 1BFF                                    ?_getHoogtesensor 00A0  
                                           ??_getKi 00A4                                             ??_getKp 00A4  
                                       setKi@new_ki 0150                                             ??_fputc 00A7  
                         __end_of_SYSTEM_Initialize 1DD8                                             ??_fputs 00AF  
                                           ??_setKi 00F0                                             ??_setKp 00F0  
                                           ??_putch 00A2                                          __pbssBANK0 0055  
                                        __pbssBANK2 0120                                          __pbssBANK3 01A0  
                               ?_pwm_fan_Initialize 0070                                __end_of_EUSART_Write 1ECB  
                                       setKp@new_kp 0150                                      i1___xxtofl@arg 007A  
                                    i1___xxtofl@exp 0079                                      i1___xxtofl@val 0070  
                         ??_updateLedstripAnimation 00F0                                   __end_of__Umul8_16 1E7F  
                          _TMR6_PeriodMatchCallback 015E                                          __pmaintext 1EF5  
                                           ?___wmul 00A0                                          ??_TMR2_ISR 0070  
                                        ??_TMR4_ISR 007E                                          __pintentry 0004  
                              _EUSART_AutoBaudQuery 0000                                ??_pwm_fan_Initialize 00A0  
                                           _ADC_ISR 1C3F                                    ?_TMR4_Initialize 0070  
                                           ?_printf 00E1                                        _getLedNumber 115A  
                                           ?_strlen 00A0                                     _EUSART_IsTxDone 0000  
                                     _eusartRxCount 0066                   _EUSART_RxCompleteCallbackRegister 0000  
                                         ?___xxtofl 00A0                                     _EUSART_ErrorGet 0000  
                                           _SP1BRGH 019C                                             _SP1BRGL 019B  
                                           _OSCCON1 0919                                             _OSCCON3 091B  
                               i1__Umul8_16@product 0074                              ?_pwm_fan_LoadDutyValue 0070  
                                           _OSCTUNE 091E                                             _PWM5DCH 0618  
                                           _PWM5DCL 0617                                             _PWM5CON 0619  
                        sendLedstripFrame@intensity 00A3                                             _SSP1ADD 0212  
                                           _SLRCONA 030C                                             _SLRCONB 030D  
                                           _SLRCONC 030E                                             _SSP1BUF 0211  
                                      ??_TMR6_Tasks 00F0                                __end_of_initLedstrip 1C3F  
                                         ?_readLine 00E8                                        _getDutycycle 1BA5  
                                        _controller 08BF                               EUSART_Read@tempRxTail 00A0  
                            ??_sendLedstripEndFrame 00A1                                _ADC_InterruptHandler 0166  
                           _ADC_SetInterruptHandler 1B66                                             ___fladd 0504  
                                           ___fldiv 0C50                                             ___awdiv 11B5  
                                           ___awmod 105A                                             ___flmul 008E  
                                           ___flsub 1DF8                                             ___fltol 133A  
               adcConversionDoneHandler@new_channel 006F                                      uartHandler@str 0154  
                                           ___lwdiv 1F81                                             ___lwmod 1F4E  
                                         ?_vfprintf 00D9                           ??_ADC_GetConversionResult 0072  
                                        _hoogte_bal 0148                                    ?_TMR6_Initialize 0070  
                                __end_of_TMR6_Tasks 1D13                                        ??i1___xxtofl 0074  
                                           __ptext1 0811                                             __ptext2 1755  
                                           __ptext3 0C50                                             __ptext4 1BC0  
                                           __ptext5 1BDD                                             __ptext6 1BD3  
                                           __ptext7 1101                                             __ptext8 1E18  
                                           __ptext9 1BB7                                           _T2CONbits 001F  
                             read_prec_or_width@fmt 00A6                     __end_of_updateLedstripAnimation 1B4A  
                                        ??___xxtofl 00A4                                    ___awmod@dividend 00A2  
                                         _T4CONbits 0417                            ??_PIN_MANAGER_Initialize 00A0  
                           _INT_SetInterruptHandler 1B78                                           _T6CONbits 041E  
                                           atoi@neg 00AA                           printFloat@fractional_part 0154  
                                           clrloop0 1B5B                                end_of_initialization 008A  
                                           fputc@fp 00A5                         __end_ofi1_ADC_SelectChannel 1BF3  
                                        ??_readLine 00EA                                             init_ram 1B60  
                                           fputs@fp 00AD                                             initloop 1B61  
                                _read_prec_or_width 1211                                   _EUSART_Initialize 07C9  
                                 __end_of_str2float 1800                                  __end_ofi1___xxtofl 16B0  
                                 __end_of_printLogs 1586             __end_of_TMR6_DefaultPeriodMatchCallback 0004  
                  ?_TMR6_DefaultPeriodMatchCallback 0070                   ??_TMR6_DefaultPeriodMatchCallback 00A0  
                   _TMR6_DefaultPeriodMatchCallback 0003                                  ?_EUSART_Initialize 0070  
                                _position_led_strip 09C7                                   __end_of_vfpfcnvrt 0C50  
                                   _SPI1_BufferRead 0000                                   _EUSART_ReceiveISR 1008  
                               ?_read_prec_or_width 00A6                                    vfpfcnvrt@convarg 00D3  
                                        ??_vfprintf 00DE                                  ?_EUSART_ReceiveISR 0070  
                                         _SPI1_Open 13A9                                             strlen@a 00A2  
                                           strlen@s 00A0                                 ??_EUSART_Initialize 00A2  
                               ?_position_led_strip 0070                               i1__Umul8_16@word_mpld 0076  
                                        _printFloat 1586                                 _SPI1_BufferExchange 0000  
                                       ___fladd@grs 00C1                                 ??_EUSART_ReceiveISR 0070  
               __end_of_ADC_DefaultInterruptHandler 1B40                         _ADC_DefaultInterruptHandler 1B3F  
                                     ___xxtofl@sign 00A8     TMR6_PeriodMatchCallbackRegister@CallbackHandler 00A0  
   TMR4_PeriodMatchCallbackRegister@CallbackHandler 00A0            __end_of_TMR6_PeriodMatchCallbackRegister 1BA5  
                ??_TMR6_PeriodMatchCallbackRegister 00A2                   ?_TMR6_PeriodMatchCallbackRegister 00A0  
                  _TMR6_PeriodMatchCallbackRegister 1B9C                                           i1___fladd 0DF4  
                              ??_read_prec_or_width 00A8                                           i1___flmul 02C9  
                                       ___fldiv@grs 00B4                                           i1___fltol 12CB  
                                       ___fldiv@rem 00AD                                 _EUSART_Deinitialize 0000  
                                     ??_getSetpoint 00A2                          __end_of_initAdcMultiplexer 1C31  
                              ??_position_led_strip 0154                                         ___flmul@grs 00D8  
                         __end_of_EUSART_Initialize 0800                       ??_ADC_DefaultInterruptHandler 0070  
                         ??_ADC_SetInterruptHandler 00A2                                     _SPI1_Initialize 1BC9  
                                       ?_controller 0070                           __end_of_EUSART_ReceiveISR 105A  
           __end_of_TMR2_DefaultPeriodMatchCallback 1B42                   ??_TMR2_DefaultPeriodMatchCallback 0070  
                  ?_TMR2_DefaultPeriodMatchCallback 0070                     _TMR2_DefaultPeriodMatchCallback 1B41  
                      __end_of_INTERRUPT_Initialize 1BFF                                          ?_SPI1_Open 00A6  
                                       vfpfcnvrt@ap 00CC                                         vfpfcnvrt@cp 00D7  
                                       vfpfcnvrt@fp 00C9                                      __end_of___wmul 1DF8  
                               str2float@multiplier 00E9                                        _EUSART_Write 1EA3  
                                    _ADC_Initialize 1D3D                           ??_INT_SetInterruptHandler 00A2  
                                    __end_of_printf 1CA9                                      __end_of_strlen 1D69  
                               start_initialization 005A                                         __end_of_abs 1CFF  
                                        ?i1___fladd 003A                                         __end_of_pad 1101  
                                        ?i1___flmul 0020                                       ??_EUSART_Read 00A0  
                                        ?i1___fltol 003A            __end_of_TMR4_PeriodMatchCallbackRegister 1B8A  
                ??_TMR4_PeriodMatchCallbackRegister 00A2                   ?_TMR4_PeriodMatchCallbackRegister 00A0  
                  _TMR4_PeriodMatchCallbackRegister 1B81                                         putch@txData 00A2  
                         _EUSART_RxInterruptHandler 01D4                                 __end_of_getSetpoint 1B9C  
                                   str2float@number 00EB                                         vfprintf@fmt 00DB  
                        _EUSART_FramingErrorHandler 005D                                            ??___wmul 00A4  
                            __end_of_ADC_Initialize 1D53                                           __Umul8_16 1E5B  
                                      _initLedstrip 1C31                                         __pdataBANK0 006C  
                                       __pdataBANK2 0168                               position_led_strip@led 0159  
                                          ?_ADC_ISR 0070                            _adcConversionDoneHandler 1F20  
                                          ??_printf 00E7                                         ?_printFloat 0150  
                                          ??_strlen 00A2                             ??_pwm_fan_LoadDutyValue 0072  
                                         ___fladd@a 00B2                                           ___fladd@b 00AE  
                                     _SPI1_ByteRead 0000                                           ___fldiv@a 00A0  
                                         ___fldiv@b 00A4                                           ___flmul@a 00CE  
                                         ___flmul@b 00CA                                           ___flsub@a 00C2  
                                         ___flsub@b 00C6                                           ___latbits 0002  
                                     __pcstackBANK0 0020                                       __pcstackBANK1 00A0  
                                     __pcstackBANK2 0150                             __end_of_SPI1_Initialize 1BD3  
                                 i1_getHoogtesensor 1B54                                     i1___xxtofl@sign 0078  
                                ?i1_getHoogtesensor 0070                                   _sendLedstripFrame 1D82  
                               __end_of_EUSART_Read 1E38                              EUSART_Write@tempTxHead 00A1  
                                      _is_on_target 0064                                           __pnvBANK2 015E  
                                         __pnvBANK3 01D4                                  ?_sendLedstripFrame 00A1  
                                  ___lwdiv@dividend 00A2                              _PIN_MANAGER_Initialize 1FBC  
                               ??i1_getHoogtesensor 0072                                           _dtoa$2108 00C1  
                          _TMR4_PeriodMatchCallback 0160                                EUSART_Read@readValue 00A1  
                                 _ADC_SelectChannel 1C0B                            i1__Umul8_16@multiplicand 0070  
                                          ?___fladd 00AE                                            ?___fldiv 00A0  
                                          ?___awdiv 00A0                                            ?___awmod 00A0  
                                          ?___flmul 00CA                                            ?___flsub 00C2  
                                          ?___fltol 00E4                                 ??_sendLedstripFrame 00A4  
                                        ?__Umul8_16 00A0                                            ?___lwdiv 00A0  
                                       ??_SPI1_Open 00A7                                            ?___lwmod 00A0  
                                   ?_ADC_Initialize 0070                                        _eusartRxHead 0068  
                                ?_ADC_SelectChannel 0070                                        _eusartTxHead 006B  
                                      _eusartRxTail 0067                                        _eusartTxTail 006A  
                      ??_INTERRUPT_InterruptManager 007E                                  getLedNumber@height 00EE  
                      EUSART_TransmitISR@tempTxTail 0070                             _eusartTxBufferRemaining 0069  
                                          _BAUD1CON 019F                                  getLedNumber@result 0150  
                            _EUSART_TransmitDisable 0000                                 ??_ADC_SelectChannel 00A0  
                         __end_ofi1_getHoogtesensor 1B5A                                         ??i1___fladd 0042  
                                       ??i1___flmul 0028                                         ??i1___fltol 003E  
                                  ___lwdiv@quotient 00A4                                         _getSetpoint 1B93  
                                     ??_setSetpoint 00AF                           __end_of_sendLedstripFrame 1D9D  
                                  _EUSART_IsRxReady 1BB7                                _INTERRUPT_Initialize 1BF3  
                                         _integraal 0140                                    _EUSART_IsTxReady 1BAE  
                                    _eusartRxBuffer 0130                                    _CLOCK_Initialize 1B6F  
                                         _dutycycle 0057                            ?_updateLedstripAnimation 0070  
                                    _eusartTxBuffer 0138                                      ___wmul@product 00A4  
                                         clear_ram0 1B5A                                            _PIE1bits 0091  
                 _EUSART_TxCompleteCallbackRegister 0000                                            _PIE2bits 0092  
                                 _eusartRxLastError 014E                                       ??_uartHandler 00F0  
                         __end_of_ADC_SelectChannel 1C17                                            _PIR0bits 0010  
                                          _PIR1bits 0011                                            _PIR2bits 0012  
                                          _OSCSTAT1 091C                                          str2float@i 00EA  
                                         _str2float 1755                                            _SSP1CON1 0215  
                                          _SSP1CON3 0217                                            _TMR2_ISR 1C4E  
                                          _TMR4_ISR 1C5D                                            _SSP1STAT 0214  
                                         _printLogs 150B                            ??_sendLedstripStartFrame 00A1  
                                         _vfpfcnvrt 0ADE                                          _ADCON0bits 009D  
                                 _SPI1_Deinitialize 0000                                   ___wmul@multiplier 00A0  
                          ADC_SelectChannel@channel 00A1                                       readLine@index 0065  
                                       _EUSART_Read 1E18                                    ?_SPI1_Initialize 0070  
                             ?_INTERRUPT_Initialize 0070                   _EUSART_RxCompleteInterruptHandler 014C  
                                 ??_TMR2_Initialize 00A0                                        ??_controller 004E  
                                     ??i1__Umul8_16 0072                                 __end_of_setSetpoint 1BC9  
                                    str2float@digit 00EF                                  _initAdcMultiplexer 1C24  
                                        vfprintf@ap 00DD                                          vfprintf@fp 00D9  
                          ?_ADC_GetConversionResult 0070                                          ?_str2float 00E4  
                        i1ADC_SelectChannel@channel 0071                                   ??_getHoogtesensor 00A2  
                                       ??__Umul8_16 00A2                                          ?_printLogs 0070  
                               __end_of_uartHandler 08BF                          __end_of_EUSART_TransmitISR 1DB9  
                               ?_initAdcMultiplexer 0070                                          ?_vfpfcnvrt 00C9  
                                          ___xxtofl 16B0                                  __end_of_controller 09C7  
                                   ___lwdiv@divisor 00A0                                  _EUSART_AutoBaudSet 0000  
                                   ___lwdiv@counter 00A6                                            __ptext10 1492  
                                          __ptext11 150B                                            __ptext20 0710  
                                          __ptext12 1586                                            __ptext21 10AC  
                                          __ptext13 1C99                                            __ptext30 11B5  
                                          __ptext22 1D53                                            __ptext14 1ECB  
                                          __ptext31 1DF8                                            __ptext23 1E7F  
                                          __ptext15 0ADE                                            __ptext40 1C0B  
                                          __ptext32 1CDC                                            __ptext24 126D  
                                          __ptext16 1419                                            __ptext41 1CFF  
                                          __ptext33 1CCB                                            __ptext25 0800  
                                          __ptext17 1F4E                                            __ptext50 115A  
                                          __ptext42 0003                                            __ptext34 1BA5  
                                          __ptext26 1EA3                                            __ptext18 1F81  
                                          __ptext51 16B0                                            __ptext43 1B46  
                                          __ptext35 1C31                                            __ptext27 1BAE  
                                          __ptext19 1211                                            __ptext60 1C8A  
                                          __ptext52 133A                                            __ptext44 09C7  
                                          __ptext36 1B9C                                            __ptext28 1CED  
                                          __ptext61 1CBA                                            __ptext53 008E  
                                          __ptext45 1D28                                            __ptext37 13A9  
                                          __ptext29 105A                                            __ptext70 1B6F  
                                          __ptext62 1CA9                                            __ptext54 1E5B  
                                          __ptext46 1D82                                            __ptext38 1DD8  
                                          __ptext71 1D3D                                            __ptext63 1BC9  
                                          __ptext55 0504                                            __ptext47 1D69  
                                          __ptext39 1C24                                            __ptext80 02C9  
                                          __ptext72 1B66                                            __ptext64 1FBC  
                                          __ptext56 1B8A                                            __ptext48 1C17  
                                          __ptext81 1E38                                            __ptext65 1BF3  
                                          __ptext57 1B81                                            __ptext49 1B93  
                                          __ptext90 1C3F                                            __ptext82 0DF4  
                                          __ptext74 1C5D                                            __ptext66 1B78  
                                          __ptext58 1DB9                                            __ptext91 1B3F  
                                          __ptext83 1D13                                            __ptext75 0002  
                                          __ptext67 07C9                                            __ptext59 1BFF  
                                          __ptext92 1F20                                            __ptext84 1C4E  
                                          __ptext76 08BF                                            __ptext68 1C7B  
                                          __ptext93 1BE7                                            __ptext85 1B41  
                                          __ptext77 1B54                                            __ptext69 1C6C  
                                          __ptext94 1B4E                                            __ptext86 1D9D  
                                          __ptext78 160C                                            __ptext87 1008  
                                          __ptext79 12CB                                            __ptext88 1B42  
                                          __ptext89 1B40                                        _SSP1CON1bits 0215  
                              ??_initAdcMultiplexer 00A2                               _EUSART_TransmitEnable 0000  
                                          _ledstrip 1830                                            _readLine 1101  
                                 ??_TMR4_Initialize 00A0                          ??_adcConversionDoneHandler 0072  
                                        _RC1STAbits 019D                                            _setpoint 006C  
                                          int$flags 007E                                 __end_ofi1__Umul8_16 1E5B  
                                          _vfprintf 1ECB                  __end_of_INTERRUPT_InterruptManager 0058  
                        _INTERRUPT_InterruptManager 0004         __end_of_EUSART_FramingErrorCallbackRegister 1C7B  
             ??_EUSART_FramingErrorCallbackRegister 00A2                ?_EUSART_FramingErrorCallbackRegister 00A0  
               _EUSART_FramingErrorCallbackRegister 1C6C                                           printf@fmt 00E1  
                                     ?_getLedNumber 00EE                                        ??_printFloat 00EE  
                    pwm_fan_LoadDutyValue@dutyValue 0070                                          _INTCONbits 000B  
                     __end_of_pwm_fan_LoadDutyValue 1D28                                _INT_InterruptHandler 0061  
                                    __pstringtext10 18BD                                      __pstringtext11 18CA  
                                    __pstringtext12 18D7                                      __pstringtext13 18EC  
                                    __pstringtext14 18F4                                      __pstringtext15 18FB  
                                    __pstringtext16 0000                              ??_INTERRUPT_Initialize 00A2  
                          position_led_strip@led_on 015A                            ?_ADC_SetInterruptHandler 00A0  
                          position_led_strip@target 0157                                         _setSetpoint 1BC0  
                                          intlevel1 0000                              i1__Umul8_16@multiplier 0078  
                                  ___lwmod@dividend 00A2                           _EUSART_TxInterruptHandler 0164  
                           ?_PIN_MANAGER_Initialize 0070                                       ?_getDutycycle 00A0  
                                 ??_TMR6_Initialize 00A0                           SPI1_ByteExchange@byteData 00A0  
        __end_of_EUSART_DefaultFramingErrorCallback 1B41                ??_EUSART_DefaultFramingErrorCallback 0070  
               ?_EUSART_DefaultFramingErrorCallback 0070                  _EUSART_DefaultFramingErrorCallback 1B40  
                   __end_of_ADC_GetConversionResult 1B54                                  __end_of_printFloat 160C  
                                  ??_ADC_Initialize 00A2                                         _uartHandler 0811  
                                       ??_str2float 00E8                                       _mustPrintLogs 006E  
                                          printf@ap 00E7                                    _SPI1_BufferWrite 0000  
                                       ??_printLogs 00F0                            ?_INT_SetInterruptHandler 00A0  
                          __end_of_EUSART_IsRxReady 1BC0                                      ??_getLedNumber 00F0  
                                       ??_vfpfcnvrt 00CE                            __end_of_EUSART_IsTxReady 1BB7  
                                      str2float@str 00E4                            __end_of_CLOCK_Initialize 1B78  
                                     __pstringtext1 1800                                       __pstringtext2 1830  
                                     __pstringtext3 18E2                                       __pstringtext4 184C  
                                     __pstringtext5 1865                                       __pstringtext6 187D  
                                     __pstringtext7 188E                                       __pstringtext8 189F  
                                     __pstringtext9 18AE                                          _SPI1_Close 0000  
                            __Umul8_16@multiplicand 00A0                                          _SSP1DATPPS 0E21  
                                        _SSP1CLKPPS 0E20                                     ___lwmod@divisor 00A0  
                                   ___lwmod@counter 00A4                                          _TX1STAbits 019E  
                                      ?_getSetpoint 00A0                              sendLedstripFrame@green 00A1  
                                     ___fladd@signs 00BE                                     controller@error 0053  
                                        _TMR6_Tasks 1CFF                                  EUSART_Write@txData 00A0  
                            _sendLedstripStartFrame 1D28                      __end_of_PIN_MANAGER_Initialize 2000  
                                    ??_getDutycycle 00A2                                         _PWMTMRSbits 061F  
                                      ___fladd@aexp 00BF                                        ___fladd@bexp 00C0  
                             sendLedstripFrame@blue 00A2                                __Umul8_16@multiplier 00A8  
                           SPI1_Open@spiConfigIndex 00A6                                sendLedstripFrame@red 00A4  
                                       i1__Umul8_16 1E38                            _TMR2_PeriodMatchCallback 0162  
                        __end_of_spi1_configuration 18EC                                   __Umul8_16@product 00A4  
