

Microchip MPLAB XC8 Assembler V3.00 build 20241204225717 
                                                                                               Wed Mar 05 16:00:52 2025

Microchip MPLAB XC8 C Compiler v3.00 (Free license) build 20241204225717 Og1 
     1                           	processor	16F18345
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	idataBANK0,global,class=CODE,space=0,delta=2,noexec
     5                           	psect	idataBANK2,global,class=CODE,space=0,delta=2,noexec
     6                           	psect	stringtext1,global,class=STRCODE,space=0,delta=2,noexec
     7                           	psect	stringtext2,global,class=STRCODE,space=0,delta=2,noexec
     8                           	psect	stringtext3,global,class=STRCODE,space=0,delta=2,noexec
     9                           	psect	nvBANK2,global,class=BANK2,space=1,delta=1,noexec
    10                           	psect	nvBANK3,global,class=BANK3,space=1,delta=1,noexec
    11                           	psect	stringtext4,global,class=STRCODE,space=0,delta=2,noexec
    12                           	psect	stringtext5,global,class=STRCODE,space=0,delta=2,noexec
    13                           	psect	stringtext6,global,class=STRCODE,space=0,delta=2,noexec
    14                           	psect	stringtext7,global,class=STRCODE,space=0,delta=2,noexec
    15                           	psect	stringtext8,global,class=STRCODE,space=0,delta=2,noexec
    16                           	psect	stringtext9,global,class=STRCODE,space=0,delta=2,noexec
    17                           	psect	stringtext10,global,class=STRCODE,space=0,delta=2,noexec
    18                           	psect	stringtext11,global,class=STRCODE,space=0,delta=2,noexec
    19                           	psect	stringtext12,global,class=STRCODE,space=0,delta=2,noexec
    20                           	psect	stringtext13,global,class=STRCODE,space=0,delta=2,noexec
    21                           	psect	stringtext14,global,class=STRCODE,space=0,delta=2,noexec
    22                           	psect	stringtext15,global,class=STRCODE,space=0,delta=2,noexec
    23                           	psect	stringtext16,global,class=STRCODE,space=0,delta=2,noexec
    24                           	psect	stringtext17,global,class=STRCODE,space=0,delta=2,noexec
    25                           	psect	stringtext18,global,class=STRCODE,space=0,delta=2,noexec
    26                           	psect	cinit,global,class=CODE,space=0,merge=1,delta=2
    27                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,noexec
    28                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,noexec
    29                           	psect	bssBANK2,global,class=BANK2,space=1,delta=1,noexec
    30                           	psect	dataBANK2,global,class=BANK2,space=1,delta=1,noexec
    31                           	psect	bssBANK3,global,class=BANK3,space=1,delta=1,noexec
    32                           	psect	inittext,global,class=CODE,space=0,delta=2
    33                           	psect	clrtext,global,class=CODE,space=0,delta=2
    34                           	psect	cstackBANK2,global,class=BANK2,space=1,delta=1,noexec
    35                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1,noexec
    36                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
    37                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    38                           	psect	maintext,global,class=CODE,space=0,merge=1,split=1,delta=2
    39                           	psect	text1,local,class=CODE,space=0,merge=1,delta=2
    40                           	psect	text2,local,class=CODE,space=0,merge=1,delta=2
    41                           	psect	text3,local,class=CODE,space=0,merge=1,delta=2,group=2
    42                           	psect	text4,local,class=CODE,space=0,merge=1,delta=2
    43                           	psect	text5,local,class=CODE,space=0,merge=1,delta=2
    44                           	psect	text6,local,class=CODE,space=0,merge=1,delta=2
    45                           	psect	text7,local,class=CODE,space=0,merge=1,delta=2
    46                           	psect	text8,local,class=CODE,space=0,merge=1,delta=2
    47                           	psect	text9,local,class=CODE,space=0,merge=1,delta=2
    48                           	psect	text10,local,class=CODE,space=0,merge=1,delta=2,group=3
    49                           	psect	text11,local,class=CODE,space=0,merge=1,delta=2,group=3
    50                           	psect	text12,local,class=CODE,space=0,merge=1,delta=2
    51                           	psect	text13,local,class=CODE,space=0,merge=1,delta=2
    52                           	psect	text14,local,class=CODE,space=0,merge=1,delta=2
    53                           	psect	text15,local,class=CODE,space=0,merge=1,delta=2,group=3
    54                           	psect	text16,local,class=CODE,space=0,merge=1,delta=2,group=1
    55                           	psect	text17,local,class=CODE,space=0,merge=1,delta=2,group=1
    56                           	psect	text18,local,class=CODE,space=0,merge=1,delta=2,group=1
    57                           	psect	text19,local,class=CODE,space=0,merge=1,delta=2,group=2
    58                           	psect	text20,local,class=CODE,space=0,merge=1,delta=2,group=2
    59                           	psect	text21,local,class=CODE,space=0,merge=1,delta=2,group=1
    60                           	psect	text22,local,class=CODE,space=0,merge=1,delta=2,group=1
    61                           	psect	text23,local,class=CODE,space=0,merge=1,delta=2,group=1
    62                           	psect	text24,local,class=CODE,space=0,merge=1,delta=2,group=3
    63                           	psect	text25,local,class=CODE,space=0,merge=1,delta=2,group=3
    64                           	psect	text26,local,class=CODE,space=0,merge=1,delta=2,group=3
    65                           	psect	text27,local,class=CODE,space=0,merge=1,delta=2
    66                           	psect	text28,local,class=CODE,space=0,merge=1,delta=2
    67                           	psect	text29,local,class=CODE,space=0,merge=1,delta=2
    68                           	psect	text30,local,class=CODE,space=0,merge=1,delta=2,group=3
    69                           	psect	text31,local,class=CODE,space=0,merge=1,delta=2,group=2
    70                           	psect	text32,local,class=CODE,space=0,merge=1,delta=2,group=2
    71                           	psect	text33,local,class=CODE,space=0,merge=1,delta=2,group=2
    72                           	psect	text34,local,class=CODE,space=0,merge=1,delta=2
    73                           	psect	text35,local,class=CODE,space=0,merge=1,delta=2
    74                           	psect	text36,local,class=CODE,space=0,merge=1,delta=2
    75                           	psect	text37,local,class=CODE,space=0,merge=1,delta=2
    76                           	psect	text38,local,class=CODE,space=0,merge=1,delta=2
    77                           	psect	text39,local,class=CODE,space=0,merge=1,delta=2
    78                           	psect	text40,local,class=CODE,space=0,merge=1,delta=2
    79                           	psect	text41,local,class=CODE,space=0,merge=1,delta=2,group=2
    80                           	psect	text42,local,class=CODE,space=0,merge=1,delta=2
    81                           	psect	text43,local,class=CODE,space=0,merge=1,delta=2
    82                           	psect	text44,local,class=CODE,space=0,merge=1,delta=2
    83                           	psect	text45,local,class=CODE,space=0,merge=1,delta=2
    84                           	psect	text46,local,class=CODE,space=0,merge=1,delta=2
    85                           	psect	text47,local,class=CODE,space=0,merge=1,delta=2
    86                           	psect	text48,local,class=CODE,space=0,merge=1,delta=2
    87                           	psect	text49,local,class=CODE,space=0,merge=1,delta=2
    88                           	psect	text50,local,class=CODE,space=0,merge=1,delta=2
    89                           	psect	text51,local,class=CODE,space=0,merge=1,delta=2
    90                           	psect	text52,local,class=CODE,space=0,merge=1,delta=2
    91                           	psect	text53,local,class=CODE,space=0,merge=1,delta=2
    92                           	psect	text54,local,class=CODE,space=0,merge=1,delta=2,group=2
    93                           	psect	text55,local,class=CODE,space=0,merge=1,delta=2,group=2
    94                           	psect	text56,local,class=CODE,space=0,merge=1,delta=2,group=2
    95                           	psect	text57,local,class=CODE,space=0,merge=1,delta=2,group=2
    96                           	psect	text58,local,class=CODE,space=0,merge=1,delta=2,group=2
    97                           	psect	text59,local,class=CODE,space=0,merge=1,delta=2
    98                           	psect	text60,local,class=CODE,space=0,merge=1,delta=2
    99                           	psect	text61,local,class=CODE,space=0,merge=1,delta=2
   100                           	psect	text62,local,class=CODE,space=0,merge=1,delta=2
   101                           	psect	text63,local,class=CODE,space=0,merge=1,delta=2
   102                           	psect	text64,local,class=CODE,space=0,merge=1,delta=2
   103                           	psect	text65,local,class=CODE,space=0,merge=1,delta=2
   104                           	psect	text66,local,class=CODE,space=0,merge=1,delta=2
   105                           	psect	text67,local,class=CODE,space=0,merge=1,delta=2
   106                           	psect	text68,local,class=CODE,space=0,merge=1,delta=2
   107                           	psect	text69,local,class=CODE,space=0,merge=1,delta=2
   108                           	psect	text70,local,class=CODE,space=0,merge=1,delta=2
   109                           	psect	text71,local,class=CODE,space=0,merge=1,delta=2
   110                           	psect	text72,local,class=CODE,space=0,merge=1,delta=2
   111                           	psect	text73,local,class=CODE,space=0,merge=1,delta=2
   112                           	psect	text74,local,class=CODE,space=0,merge=1,delta=2
   113                           	psect	text75,local,class=CODE,space=0,merge=1,delta=2
   114                           	psect	text76,local,class=CODE,space=0,merge=1,delta=2
   115                           	psect	text77,local,class=CODE,space=0,merge=1,delta=2
   116                           	psect	intentry,global,class=CODE,space=0,delta=2
   117                           	psect	text79,local,class=CODE,space=0,merge=1,delta=2
   118                           	psect	text80,local,class=CODE,space=0,merge=1,delta=2
   119                           	psect	text81,local,class=CODE,space=0,merge=1,delta=2
   120                           	psect	text82,local,class=CODE,space=0,merge=1,delta=2
   121                           	psect	text83,local,class=CODE,space=0,merge=1,delta=2
   122                           	psect	text84,local,class=CODE,space=0,merge=1,delta=2
   123                           	psect	text85,local,class=CODE,space=0,merge=1,delta=2
   124                           	psect	text86,local,class=CODE,space=0,merge=1,delta=2
   125                           	psect	text87,local,class=CODE,space=0,merge=1,delta=2
   126                           	psect	text88,local,class=CODE,space=0,merge=1,delta=2
   127                           	psect	text89,local,class=CODE,space=0,merge=1,delta=2
   128                           	psect	text90,local,class=CODE,space=0,merge=1,delta=2
   129                           	psect	text91,local,class=CODE,space=0,merge=1,delta=2
   130                           	psect	text92,local,class=CODE,space=0,merge=1,delta=2
   131                           	psect	text93,local,class=CODE,space=0,merge=1,delta=2
   132                           	psect	text94,local,class=CODE,space=0,merge=1,delta=2
   133                           	psect	text95,local,class=CODE,space=0,merge=1,delta=2
   134                           	psect	text96,local,class=CODE,space=0,merge=1,delta=2
   135                           	psect	text97,local,class=CODE,space=0,merge=1,delta=2
   136                           	psect	text98,local,class=CODE,space=0,merge=1,delta=2
   137                           	psect	text99,local,class=CODE,space=0,merge=1,delta=2
   138                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
   139                           	dabs	1,0x7E,2
   140     0000                     
   141                           ; Generated 11/01/2024 GMT
   142                           ; 
   143                           ; Copyright © 2024, Microchip Technology Inc. and its subsidiaries ("Microchip")
   144                           ; All rights reserved.
   145                           ; 
   146                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
   147                           ; 
   148                           ; Redistribution and use in source and binary forms, with or without modification, are
   149                           ; permitted provided that the following conditions are met:
   150                           ; 
   151                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
   152                           ;        conditions and the following disclaimer.
   153                           ; 
   154                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
   155                           ;        of conditions and the following disclaimer in the documentation and/or other
   156                           ;        materials provided with the distribution. Publication is not required when
   157                           ;        this file is used in an embedded application.
   158                           ; 
   159                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
   160                           ;        software without specific prior written permission.
   161                           ; 
   162                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
   163                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
   164                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
   165                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
   166                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
   167                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
   168                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
   169                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
   170                           ; 
   171                           ; 
   172                           ; Code-generator required, PIC16F18345 Definitions
   173                           ; 
   174                           ; SFR Addresses
   175     0008                     bsr             equ	8
   176     0005                     fsr0h           equ	5
   177     0004                     fsr0l           equ	4
   178     0007                     fsr1h           equ	7
   179     0006                     fsr1l           equ	6
   180     0000                     indf            equ	0
   181     0000                     indf0           equ	0
   182     0001                     indf1           equ	1
   183     000B                     intcon          equ	11
   184     0002                     pc              equ	2
   185     0002                     pcl             equ	2
   186     000A                     pclath          equ	10
   187     0003                     status          equ	3
   188     0009                     wreg            equ	9
   189     0000                     INDF0           equ	0	;# 
   190     0001                     INDF1           equ	1	;# 
   191     0002                     PCL             equ	2	;# 
   192     0003                     STATUS          equ	3	;# 
   193     0004                     FSR0L           equ	4	;# 
   194     0005                     FSR0H           equ	5	;# 
   195     0006                     FSR1L           equ	6	;# 
   196     0007                     FSR1H           equ	7	;# 
   197     0008                     BSR             equ	8	;# 
   198     0009                     WREG            equ	9	;# 
   199     000A                     PCLATH          equ	10	;# 
   200     000B                     INTCON          equ	11	;# 
   201     000C                     PORTA           equ	12	;# 
   202     000D                     PORTB           equ	13	;# 
   203     000E                     PORTC           equ	14	;# 
   204     0010                     PIR0            equ	16	;# 
   205     0011                     PIR1            equ	17	;# 
   206     0012                     PIR2            equ	18	;# 
   207     0013                     PIR3            equ	19	;# 
   208     0014                     PIR4            equ	20	;# 
   209     0015                     TMR0L           equ	21	;# 
   210     0015                     TMR0            equ	21	;# 
   211     0016                     TMR0H           equ	22	;# 
   212     0016                     PR0             equ	22	;# 
   213     0017                     T0CON0          equ	23	;# 
   214     0018                     T0CON1          equ	24	;# 
   215     0019                     TMR1            equ	25	;# 
   216     0019                     TMR1L           equ	25	;# 
   217     001A                     TMR1H           equ	26	;# 
   218     001B                     T1CON           equ	27	;# 
   219     001C                     T1GCON          equ	28	;# 
   220     001D                     TMR2            equ	29	;# 
   221     001E                     PR2             equ	30	;# 
   222     001F                     T2CON           equ	31	;# 
   223     008C                     TRISA           equ	140	;# 
   224     008D                     TRISB           equ	141	;# 
   225     008E                     TRISC           equ	142	;# 
   226     0090                     PIE0            equ	144	;# 
   227     0091                     PIE1            equ	145	;# 
   228     0092                     PIE2            equ	146	;# 
   229     0093                     PIE3            equ	147	;# 
   230     0094                     PIE4            equ	148	;# 
   231     0097                     WDTCON          equ	151	;# 
   232     009B                     ADRES           equ	155	;# 
   233     009B                     ADRESL          equ	155	;# 
   234     009C                     ADRESH          equ	156	;# 
   235     009D                     ADCON0          equ	157	;# 
   236     009E                     ADCON1          equ	158	;# 
   237     009F                     ADACT           equ	159	;# 
   238     010C                     LATA            equ	268	;# 
   239     010D                     LATB            equ	269	;# 
   240     010E                     LATC            equ	270	;# 
   241     0111                     CM1CON0         equ	273	;# 
   242     0112                     CM1CON1         equ	274	;# 
   243     0113                     CM2CON0         equ	275	;# 
   244     0114                     CM2CON1         equ	276	;# 
   245     0115                     CMOUT           equ	277	;# 
   246     0116                     BORCON          equ	278	;# 
   247     0117                     FVRCON          equ	279	;# 
   248     0118                     DACCON0         equ	280	;# 
   249     0119                     DACCON1         equ	281	;# 
   250     018C                     ANSELA          equ	396	;# 
   251     018D                     ANSELB          equ	397	;# 
   252     018E                     ANSELC          equ	398	;# 
   253     0197                     VREGCON         equ	407	;# 
   254     0199                     RC1REG          equ	409	;# 
   255     0199                     RCREG           equ	409	;# 
   256     0199                     RCREG1          equ	409	;# 
   257     019A                     TX1REG          equ	410	;# 
   258     019A                     TXREG1          equ	410	;# 
   259     019A                     TXREG           equ	410	;# 
   260     019B                     SP1BRG          equ	411	;# 
   261     019B                     SPBRG           equ	411	;# 
   262     019B                     SP1BRGL         equ	411	;# 
   263     019B                     SPBRG1          equ	411	;# 
   264     019B                     SPBRGL          equ	411	;# 
   265     019C                     SP1BRGH         equ	412	;# 
   266     019C                     SPBRGH          equ	412	;# 
   267     019C                     SPBRGH1         equ	412	;# 
   268     019D                     RC1STA          equ	413	;# 
   269     019D                     RCSTA1          equ	413	;# 
   270     019D                     RCSTA           equ	413	;# 
   271     019E                     TX1STA          equ	414	;# 
   272     019E                     TXSTA1          equ	414	;# 
   273     019E                     TXSTA           equ	414	;# 
   274     019F                     BAUD1CON        equ	415	;# 
   275     019F                     BAUDCON1        equ	415	;# 
   276     019F                     BAUDCTL1        equ	415	;# 
   277     019F                     BAUDCON         equ	415	;# 
   278     019F                     BAUDCTL         equ	415	;# 
   279     020C                     WPUA            equ	524	;# 
   280     020D                     WPUB            equ	525	;# 
   281     020E                     WPUC            equ	526	;# 
   282     0211                     SSP1BUF         equ	529	;# 
   283     0211                     SSPBUF          equ	529	;# 
   284     0212                     SSP1ADD         equ	530	;# 
   285     0212                     SSPADD          equ	530	;# 
   286     0213                     SSP1MSK         equ	531	;# 
   287     0213                     SSPMSK          equ	531	;# 
   288     0214                     SSP1STAT        equ	532	;# 
   289     0214                     SSPSTAT         equ	532	;# 
   290     0215                     SSP1CON1        equ	533	;# 
   291     0215                     SSPCON          equ	533	;# 
   292     0215                     SSPCON1         equ	533	;# 
   293     0215                     SSP1CON         equ	533	;# 
   294     0216                     SSP1CON2        equ	534	;# 
   295     0216                     SSPCON2         equ	534	;# 
   296     0217                     SSP1CON3        equ	535	;# 
   297     0217                     SSPCON3         equ	535	;# 
   298     0219                     SSP2BUF         equ	537	;# 
   299     021A                     SSP2ADD         equ	538	;# 
   300     021B                     SSP2MSK         equ	539	;# 
   301     021C                     SSP2STAT        equ	540	;# 
   302     021D                     SSP2CON1        equ	541	;# 
   303     021D                     SSP2CON         equ	541	;# 
   304     021E                     SSP2CON2        equ	542	;# 
   305     021F                     SSP2CON3        equ	543	;# 
   306     028C                     ODCONA          equ	652	;# 
   307     028D                     ODCONB          equ	653	;# 
   308     028E                     ODCONC          equ	654	;# 
   309     0291                     CCPR1           equ	657	;# 
   310     0291                     CCPR1L          equ	657	;# 
   311     0292                     CCPR1H          equ	658	;# 
   312     0293                     CCP1CON         equ	659	;# 
   313     0294                     CCP1CAP         equ	660	;# 
   314     0295                     CCPR2           equ	661	;# 
   315     0295                     CCPR2L          equ	661	;# 
   316     0296                     CCPR2H          equ	662	;# 
   317     0297                     CCP2CON         equ	663	;# 
   318     0298                     CCP2CAP         equ	664	;# 
   319     029F                     CCPTMRS         equ	671	;# 
   320     030C                     SLRCONA         equ	780	;# 
   321     030D                     SLRCONB         equ	781	;# 
   322     030E                     SLRCONC         equ	782	;# 
   323     0311                     CCPR3           equ	785	;# 
   324     0311                     CCPR3L          equ	785	;# 
   325     0312                     CCPR3H          equ	786	;# 
   326     0313                     CCP3CON         equ	787	;# 
   327     0314                     CCP3CAP         equ	788	;# 
   328     0315                     CCPR4           equ	789	;# 
   329     0315                     CCPR4L          equ	789	;# 
   330     0316                     CCPR4H          equ	790	;# 
   331     0317                     CCP4CON         equ	791	;# 
   332     0318                     CCP4CAP         equ	792	;# 
   333     038C                     INLVLA          equ	908	;# 
   334     038D                     INLVLB          equ	909	;# 
   335     038E                     INLVLC          equ	910	;# 
   336     0391                     IOCAP           equ	913	;# 
   337     0392                     IOCAN           equ	914	;# 
   338     0393                     IOCAF           equ	915	;# 
   339     0394                     IOCBP           equ	916	;# 
   340     0395                     IOCBN           equ	917	;# 
   341     0396                     IOCBF           equ	918	;# 
   342     0397                     IOCCP           equ	919	;# 
   343     0398                     IOCCN           equ	920	;# 
   344     0399                     IOCCF           equ	921	;# 
   345     039A                     CLKRCON         equ	922	;# 
   346     039C                     MDCON           equ	924	;# 
   347     039D                     MDSRC           equ	925	;# 
   348     039E                     MDCARH          equ	926	;# 
   349     039F                     MDCARL          equ	927	;# 
   350     0411                     TMR3            equ	1041	;# 
   351     0411                     TMR3L           equ	1041	;# 
   352     0412                     TMR3H           equ	1042	;# 
   353     0413                     T3CON           equ	1043	;# 
   354     0414                     T3GCON          equ	1044	;# 
   355     0415                     TMR4            equ	1045	;# 
   356     0416                     PR4             equ	1046	;# 
   357     0417                     T4CON           equ	1047	;# 
   358     0418                     TMR5            equ	1048	;# 
   359     0418                     TMR5L           equ	1048	;# 
   360     0419                     TMR5H           equ	1049	;# 
   361     041A                     T5CON           equ	1050	;# 
   362     041B                     T5GCON          equ	1051	;# 
   363     041C                     TMR6            equ	1052	;# 
   364     041D                     PR6             equ	1053	;# 
   365     041E                     T6CON           equ	1054	;# 
   366     041F                     CCDCON          equ	1055	;# 
   367     0498                     NCO1ACC         equ	1176	;# 
   368     0498                     NCO1ACCL        equ	1176	;# 
   369     0499                     NCO1ACCH        equ	1177	;# 
   370     049A                     NCO1ACCU        equ	1178	;# 
   371     049B                     NCO1INC         equ	1179	;# 
   372     049B                     NCO1INCL        equ	1179	;# 
   373     049C                     NCO1INCH        equ	1180	;# 
   374     049D                     NCO1INCU        equ	1181	;# 
   375     049E                     NCO1CON         equ	1182	;# 
   376     049F                     NCO1CLK         equ	1183	;# 
   377     0617                     PWM5DCL         equ	1559	;# 
   378     0618                     PWM5DCH         equ	1560	;# 
   379     0619                     PWM5CON         equ	1561	;# 
   380     0619                     PWM5CON0        equ	1561	;# 
   381     061A                     PWM6DCL         equ	1562	;# 
   382     061B                     PWM6DCH         equ	1563	;# 
   383     061C                     PWM6CON         equ	1564	;# 
   384     061C                     PWM6CON0        equ	1564	;# 
   385     061F                     PWMTMRS         equ	1567	;# 
   386     0691                     CWG1CLKCON      equ	1681	;# 
   387     0692                     CWG1DAT         equ	1682	;# 
   388     0693                     CWG1DBR         equ	1683	;# 
   389     0694                     CWG1DBF         equ	1684	;# 
   390     0695                     CWG1CON0        equ	1685	;# 
   391     0696                     CWG1CON1        equ	1686	;# 
   392     0697                     CWG1AS0         equ	1687	;# 
   393     0698                     CWG1AS1         equ	1688	;# 
   394     0699                     CWG1STR         equ	1689	;# 
   395     0711                     CWG2CLKCON      equ	1809	;# 
   396     0712                     CWG2DAT         equ	1810	;# 
   397     0713                     CWG2DBR         equ	1811	;# 
   398     0714                     CWG2DBF         equ	1812	;# 
   399     0715                     CWG2CON0        equ	1813	;# 
   400     0716                     CWG2CON1        equ	1814	;# 
   401     0717                     CWG2AS0         equ	1815	;# 
   402     0718                     CWG2AS1         equ	1816	;# 
   403     0719                     CWG2STR         equ	1817	;# 
   404     0891                     NVMADR          equ	2193	;# 
   405     0891                     EEADR           equ	2193	;# 
   406     0891                     PMADR           equ	2193	;# 
   407     0891                     NVMADRL         equ	2193	;# 
   408     0891                     EEADRL          equ	2193	;# 
   409     0891                     PMADRL          equ	2193	;# 
   410     0892                     NVMADRH         equ	2194	;# 
   411     0892                     EEADRH          equ	2194	;# 
   412     0892                     PMADRH          equ	2194	;# 
   413     0893                     NVMDAT          equ	2195	;# 
   414     0893                     EEDAT           equ	2195	;# 
   415     0893                     PMDAT           equ	2195	;# 
   416     0893                     NVMDATL         equ	2195	;# 
   417     0893                     EEDATL          equ	2195	;# 
   418     0893                     PMDATL          equ	2195	;# 
   419     0894                     NVMDATH         equ	2196	;# 
   420     0894                     EEDATH          equ	2196	;# 
   421     0894                     PMDATH          equ	2196	;# 
   422     0895                     NVMCON1         equ	2197	;# 
   423     0895                     EECON1          equ	2197	;# 
   424     0895                     PMCON1          equ	2197	;# 
   425     0896                     NVMCON2         equ	2198	;# 
   426     0896                     EECON2          equ	2198	;# 
   427     0896                     PMCON2          equ	2198	;# 
   428     089B                     PCON0           equ	2203	;# 
   429     0911                     PMD0            equ	2321	;# 
   430     0912                     PMD1            equ	2322	;# 
   431     0913                     PMD2            equ	2323	;# 
   432     0914                     PMD3            equ	2324	;# 
   433     0915                     PMD4            equ	2325	;# 
   434     0916                     PMD5            equ	2326	;# 
   435     0918                     CPUDOZE         equ	2328	;# 
   436     0919                     OSCCON1         equ	2329	;# 
   437     091A                     OSCCON2         equ	2330	;# 
   438     091B                     OSCCON3         equ	2331	;# 
   439     091C                     OSCSTAT1        equ	2332	;# 
   440     091D                     OSCEN           equ	2333	;# 
   441     091E                     OSCTUNE         equ	2334	;# 
   442     091F                     OSCFRQ          equ	2335	;# 
   443     0E0F                     PPSLOCK         equ	3599	;# 
   444     0E10                     INTPPS          equ	3600	;# 
   445     0E11                     T0CKIPPS        equ	3601	;# 
   446     0E12                     T1CKIPPS        equ	3602	;# 
   447     0E13                     T1GPPS          equ	3603	;# 
   448     0E14                     CCP1PPS         equ	3604	;# 
   449     0E15                     CCP2PPS         equ	3605	;# 
   450     0E16                     CCP3PPS         equ	3606	;# 
   451     0E17                     CCP4PPS         equ	3607	;# 
   452     0E18                     CWG1PPS         equ	3608	;# 
   453     0E19                     CWG2PPS         equ	3609	;# 
   454     0E1A                     MDCIN1PPS       equ	3610	;# 
   455     0E1B                     MDCIN2PPS       equ	3611	;# 
   456     0E1C                     MDMINPPS        equ	3612	;# 
   457     0E1D                     SSP2CLKPPS      equ	3613	;# 
   458     0E1E                     SSP2DATPPS      equ	3614	;# 
   459     0E1F                     SSP2SSPPS       equ	3615	;# 
   460     0E20                     SSP1CLKPPS      equ	3616	;# 
   461     0E21                     SSP1DATPPS      equ	3617	;# 
   462     0E22                     SSP1SSPPS       equ	3618	;# 
   463     0E24                     RXPPS           equ	3620	;# 
   464     0E25                     TXPPS           equ	3621	;# 
   465     0E28                     CLCIN0PPS       equ	3624	;# 
   466     0E29                     CLCIN1PPS       equ	3625	;# 
   467     0E2A                     CLCIN2PPS       equ	3626	;# 
   468     0E2B                     CLCIN3PPS       equ	3627	;# 
   469     0E2C                     T3CKIPPS        equ	3628	;# 
   470     0E2D                     T3GPPS          equ	3629	;# 
   471     0E2E                     T5CKIPPS        equ	3630	;# 
   472     0E2F                     T5GPPS          equ	3631	;# 
   473     0E90                     RA0PPS          equ	3728	;# 
   474     0E91                     RA1PPS          equ	3729	;# 
   475     0E92                     RA2PPS          equ	3730	;# 
   476     0E94                     RA4PPS          equ	3732	;# 
   477     0E95                     RA5PPS          equ	3733	;# 
   478     0E9C                     RB4PPS          equ	3740	;# 
   479     0E9D                     RB5PPS          equ	3741	;# 
   480     0E9E                     RB6PPS          equ	3742	;# 
   481     0E9F                     RB7PPS          equ	3743	;# 
   482     0EA0                     RC0PPS          equ	3744	;# 
   483     0EA1                     RC1PPS          equ	3745	;# 
   484     0EA2                     RC2PPS          equ	3746	;# 
   485     0EA3                     RC3PPS          equ	3747	;# 
   486     0EA4                     RC4PPS          equ	3748	;# 
   487     0EA5                     RC5PPS          equ	3749	;# 
   488     0EA6                     RC6PPS          equ	3750	;# 
   489     0EA7                     RC7PPS          equ	3751	;# 
   490     0F0F                     CLCDATA         equ	3855	;# 
   491     0F10                     CLC1CON         equ	3856	;# 
   492     0F11                     CLC1POL         equ	3857	;# 
   493     0F12                     CLC1SEL0        equ	3858	;# 
   494     0F13                     CLC1SEL1        equ	3859	;# 
   495     0F14                     CLC1SEL2        equ	3860	;# 
   496     0F15                     CLC1SEL3        equ	3861	;# 
   497     0F16                     CLC1GLS0        equ	3862	;# 
   498     0F17                     CLC1GLS1        equ	3863	;# 
   499     0F18                     CLC1GLS2        equ	3864	;# 
   500     0F19                     CLC1GLS3        equ	3865	;# 
   501     0F1A                     CLC2CON         equ	3866	;# 
   502     0F1B                     CLC2POL         equ	3867	;# 
   503     0F1C                     CLC2SEL0        equ	3868	;# 
   504     0F1D                     CLC2SEL1        equ	3869	;# 
   505     0F1E                     CLC2SEL2        equ	3870	;# 
   506     0F1F                     CLC2SEL3        equ	3871	;# 
   507     0F20                     CLC2GLS0        equ	3872	;# 
   508     0F21                     CLC2GLS1        equ	3873	;# 
   509     0F22                     CLC2GLS2        equ	3874	;# 
   510     0F23                     CLC2GLS3        equ	3875	;# 
   511     0F24                     CLC3CON         equ	3876	;# 
   512     0F25                     CLC3POL         equ	3877	;# 
   513     0F26                     CLC3SEL0        equ	3878	;# 
   514     0F27                     CLC3SEL1        equ	3879	;# 
   515     0F28                     CLC3SEL2        equ	3880	;# 
   516     0F29                     CLC3SEL3        equ	3881	;# 
   517     0F2A                     CLC3GLS0        equ	3882	;# 
   518     0F2B                     CLC3GLS1        equ	3883	;# 
   519     0F2C                     CLC3GLS2        equ	3884	;# 
   520     0F2D                     CLC3GLS3        equ	3885	;# 
   521     0F2E                     CLC4CON         equ	3886	;# 
   522     0F2F                     CLC4POL         equ	3887	;# 
   523     0F30                     CLC4SEL0        equ	3888	;# 
   524     0F31                     CLC4SEL1        equ	3889	;# 
   525     0F32                     CLC4SEL2        equ	3890	;# 
   526     0F33                     CLC4SEL3        equ	3891	;# 
   527     0F34                     CLC4GLS0        equ	3892	;# 
   528     0F35                     CLC4GLS1        equ	3893	;# 
   529     0F36                     CLC4GLS2        equ	3894	;# 
   530     0F37                     CLC4GLS3        equ	3895	;# 
   531     0FE4                     STATUS_SHAD     equ	4068	;# 
   532     0FE5                     WREG_SHAD       equ	4069	;# 
   533     0FE6                     BSR_SHAD        equ	4070	;# 
   534     0FE7                     PCLATH_SHAD     equ	4071	;# 
   535     0FE8                     FSR0L_SHAD      equ	4072	;# 
   536     0FE9                     FSR0H_SHAD      equ	4073	;# 
   537     0FEA                     FSR1L_SHAD      equ	4074	;# 
   538     0FEB                     FSR1H_SHAD      equ	4075	;# 
   539     0FED                     STKPTR          equ	4077	;# 
   540     0FEE                     TOSL            equ	4078	;# 
   541     0FEF                     TOSH            equ	4079	;# 
   542     0000                     INDF0           equ	0	;# 
   543     0001                     INDF1           equ	1	;# 
   544     0002                     PCL             equ	2	;# 
   545     0003                     STATUS          equ	3	;# 
   546     0004                     FSR0L           equ	4	;# 
   547     0005                     FSR0H           equ	5	;# 
   548     0006                     FSR1L           equ	6	;# 
   549     0007                     FSR1H           equ	7	;# 
   550     0008                     BSR             equ	8	;# 
   551     0009                     WREG            equ	9	;# 
   552     000A                     PCLATH          equ	10	;# 
   553     000B                     INTCON          equ	11	;# 
   554     000C                     PORTA           equ	12	;# 
   555     000D                     PORTB           equ	13	;# 
   556     000E                     PORTC           equ	14	;# 
   557     0010                     PIR0            equ	16	;# 
   558     0011                     PIR1            equ	17	;# 
   559     0012                     PIR2            equ	18	;# 
   560     0013                     PIR3            equ	19	;# 
   561     0014                     PIR4            equ	20	;# 
   562     0015                     TMR0L           equ	21	;# 
   563     0015                     TMR0            equ	21	;# 
   564     0016                     TMR0H           equ	22	;# 
   565     0016                     PR0             equ	22	;# 
   566     0017                     T0CON0          equ	23	;# 
   567     0018                     T0CON1          equ	24	;# 
   568     0019                     TMR1            equ	25	;# 
   569     0019                     TMR1L           equ	25	;# 
   570     001A                     TMR1H           equ	26	;# 
   571     001B                     T1CON           equ	27	;# 
   572     001C                     T1GCON          equ	28	;# 
   573     001D                     TMR2            equ	29	;# 
   574     001E                     PR2             equ	30	;# 
   575     001F                     T2CON           equ	31	;# 
   576     008C                     TRISA           equ	140	;# 
   577     008D                     TRISB           equ	141	;# 
   578     008E                     TRISC           equ	142	;# 
   579     0090                     PIE0            equ	144	;# 
   580     0091                     PIE1            equ	145	;# 
   581     0092                     PIE2            equ	146	;# 
   582     0093                     PIE3            equ	147	;# 
   583     0094                     PIE4            equ	148	;# 
   584     0097                     WDTCON          equ	151	;# 
   585     009B                     ADRES           equ	155	;# 
   586     009B                     ADRESL          equ	155	;# 
   587     009C                     ADRESH          equ	156	;# 
   588     009D                     ADCON0          equ	157	;# 
   589     009E                     ADCON1          equ	158	;# 
   590     009F                     ADACT           equ	159	;# 
   591     010C                     LATA            equ	268	;# 
   592     010D                     LATB            equ	269	;# 
   593     010E                     LATC            equ	270	;# 
   594     0111                     CM1CON0         equ	273	;# 
   595     0112                     CM1CON1         equ	274	;# 
   596     0113                     CM2CON0         equ	275	;# 
   597     0114                     CM2CON1         equ	276	;# 
   598     0115                     CMOUT           equ	277	;# 
   599     0116                     BORCON          equ	278	;# 
   600     0117                     FVRCON          equ	279	;# 
   601     0118                     DACCON0         equ	280	;# 
   602     0119                     DACCON1         equ	281	;# 
   603     018C                     ANSELA          equ	396	;# 
   604     018D                     ANSELB          equ	397	;# 
   605     018E                     ANSELC          equ	398	;# 
   606     0197                     VREGCON         equ	407	;# 
   607     0199                     RC1REG          equ	409	;# 
   608     0199                     RCREG           equ	409	;# 
   609     0199                     RCREG1          equ	409	;# 
   610     019A                     TX1REG          equ	410	;# 
   611     019A                     TXREG1          equ	410	;# 
   612     019A                     TXREG           equ	410	;# 
   613     019B                     SP1BRG          equ	411	;# 
   614     019B                     SPBRG           equ	411	;# 
   615     019B                     SP1BRGL         equ	411	;# 
   616     019B                     SPBRG1          equ	411	;# 
   617     019B                     SPBRGL          equ	411	;# 
   618     019C                     SP1BRGH         equ	412	;# 
   619     019C                     SPBRGH          equ	412	;# 
   620     019C                     SPBRGH1         equ	412	;# 
   621     019D                     RC1STA          equ	413	;# 
   622     019D                     RCSTA1          equ	413	;# 
   623     019D                     RCSTA           equ	413	;# 
   624     019E                     TX1STA          equ	414	;# 
   625     019E                     TXSTA1          equ	414	;# 
   626     019E                     TXSTA           equ	414	;# 
   627     019F                     BAUD1CON        equ	415	;# 
   628     019F                     BAUDCON1        equ	415	;# 
   629     019F                     BAUDCTL1        equ	415	;# 
   630     019F                     BAUDCON         equ	415	;# 
   631     019F                     BAUDCTL         equ	415	;# 
   632     020C                     WPUA            equ	524	;# 
   633     020D                     WPUB            equ	525	;# 
   634     020E                     WPUC            equ	526	;# 
   635     0211                     SSP1BUF         equ	529	;# 
   636     0211                     SSPBUF          equ	529	;# 
   637     0212                     SSP1ADD         equ	530	;# 
   638     0212                     SSPADD          equ	530	;# 
   639     0213                     SSP1MSK         equ	531	;# 
   640     0213                     SSPMSK          equ	531	;# 
   641     0214                     SSP1STAT        equ	532	;# 
   642     0214                     SSPSTAT         equ	532	;# 
   643     0215                     SSP1CON1        equ	533	;# 
   644     0215                     SSPCON          equ	533	;# 
   645     0215                     SSPCON1         equ	533	;# 
   646     0215                     SSP1CON         equ	533	;# 
   647     0216                     SSP1CON2        equ	534	;# 
   648     0216                     SSPCON2         equ	534	;# 
   649     0217                     SSP1CON3        equ	535	;# 
   650     0217                     SSPCON3         equ	535	;# 
   651     0219                     SSP2BUF         equ	537	;# 
   652     021A                     SSP2ADD         equ	538	;# 
   653     021B                     SSP2MSK         equ	539	;# 
   654     021C                     SSP2STAT        equ	540	;# 
   655     021D                     SSP2CON1        equ	541	;# 
   656     021D                     SSP2CON         equ	541	;# 
   657     021E                     SSP2CON2        equ	542	;# 
   658     021F                     SSP2CON3        equ	543	;# 
   659     028C                     ODCONA          equ	652	;# 
   660     028D                     ODCONB          equ	653	;# 
   661     028E                     ODCONC          equ	654	;# 
   662     0291                     CCPR1           equ	657	;# 
   663     0291                     CCPR1L          equ	657	;# 
   664     0292                     CCPR1H          equ	658	;# 
   665     0293                     CCP1CON         equ	659	;# 
   666     0294                     CCP1CAP         equ	660	;# 
   667     0295                     CCPR2           equ	661	;# 
   668     0295                     CCPR2L          equ	661	;# 
   669     0296                     CCPR2H          equ	662	;# 
   670     0297                     CCP2CON         equ	663	;# 
   671     0298                     CCP2CAP         equ	664	;# 
   672     029F                     CCPTMRS         equ	671	;# 
   673     030C                     SLRCONA         equ	780	;# 
   674     030D                     SLRCONB         equ	781	;# 
   675     030E                     SLRCONC         equ	782	;# 
   676     0311                     CCPR3           equ	785	;# 
   677     0311                     CCPR3L          equ	785	;# 
   678     0312                     CCPR3H          equ	786	;# 
   679     0313                     CCP3CON         equ	787	;# 
   680     0314                     CCP3CAP         equ	788	;# 
   681     0315                     CCPR4           equ	789	;# 
   682     0315                     CCPR4L          equ	789	;# 
   683     0316                     CCPR4H          equ	790	;# 
   684     0317                     CCP4CON         equ	791	;# 
   685     0318                     CCP4CAP         equ	792	;# 
   686     038C                     INLVLA          equ	908	;# 
   687     038D                     INLVLB          equ	909	;# 
   688     038E                     INLVLC          equ	910	;# 
   689     0391                     IOCAP           equ	913	;# 
   690     0392                     IOCAN           equ	914	;# 
   691     0393                     IOCAF           equ	915	;# 
   692     0394                     IOCBP           equ	916	;# 
   693     0395                     IOCBN           equ	917	;# 
   694     0396                     IOCBF           equ	918	;# 
   695     0397                     IOCCP           equ	919	;# 
   696     0398                     IOCCN           equ	920	;# 
   697     0399                     IOCCF           equ	921	;# 
   698     039A                     CLKRCON         equ	922	;# 
   699     039C                     MDCON           equ	924	;# 
   700     039D                     MDSRC           equ	925	;# 
   701     039E                     MDCARH          equ	926	;# 
   702     039F                     MDCARL          equ	927	;# 
   703     0411                     TMR3            equ	1041	;# 
   704     0411                     TMR3L           equ	1041	;# 
   705     0412                     TMR3H           equ	1042	;# 
   706     0413                     T3CON           equ	1043	;# 
   707     0414                     T3GCON          equ	1044	;# 
   708     0415                     TMR4            equ	1045	;# 
   709     0416                     PR4             equ	1046	;# 
   710     0417                     T4CON           equ	1047	;# 
   711     0418                     TMR5            equ	1048	;# 
   712     0418                     TMR5L           equ	1048	;# 
   713     0419                     TMR5H           equ	1049	;# 
   714     041A                     T5CON           equ	1050	;# 
   715     041B                     T5GCON          equ	1051	;# 
   716     041C                     TMR6            equ	1052	;# 
   717     041D                     PR6             equ	1053	;# 
   718     041E                     T6CON           equ	1054	;# 
   719     041F                     CCDCON          equ	1055	;# 
   720     0498                     NCO1ACC         equ	1176	;# 
   721     0498                     NCO1ACCL        equ	1176	;# 
   722     0499                     NCO1ACCH        equ	1177	;# 
   723     049A                     NCO1ACCU        equ	1178	;# 
   724     049B                     NCO1INC         equ	1179	;# 
   725     049B                     NCO1INCL        equ	1179	;# 
   726     049C                     NCO1INCH        equ	1180	;# 
   727     049D                     NCO1INCU        equ	1181	;# 
   728     049E                     NCO1CON         equ	1182	;# 
   729     049F                     NCO1CLK         equ	1183	;# 
   730     0617                     PWM5DCL         equ	1559	;# 
   731     0618                     PWM5DCH         equ	1560	;# 
   732     0619                     PWM5CON         equ	1561	;# 
   733     0619                     PWM5CON0        equ	1561	;# 
   734     061A                     PWM6DCL         equ	1562	;# 
   735     061B                     PWM6DCH         equ	1563	;# 
   736     061C                     PWM6CON         equ	1564	;# 
   737     061C                     PWM6CON0        equ	1564	;# 
   738     061F                     PWMTMRS         equ	1567	;# 
   739     0691                     CWG1CLKCON      equ	1681	;# 
   740     0692                     CWG1DAT         equ	1682	;# 
   741     0693                     CWG1DBR         equ	1683	;# 
   742     0694                     CWG1DBF         equ	1684	;# 
   743     0695                     CWG1CON0        equ	1685	;# 
   744     0696                     CWG1CON1        equ	1686	;# 
   745     0697                     CWG1AS0         equ	1687	;# 
   746     0698                     CWG1AS1         equ	1688	;# 
   747     0699                     CWG1STR         equ	1689	;# 
   748     0711                     CWG2CLKCON      equ	1809	;# 
   749     0712                     CWG2DAT         equ	1810	;# 
   750     0713                     CWG2DBR         equ	1811	;# 
   751     0714                     CWG2DBF         equ	1812	;# 
   752     0715                     CWG2CON0        equ	1813	;# 
   753     0716                     CWG2CON1        equ	1814	;# 
   754     0717                     CWG2AS0         equ	1815	;# 
   755     0718                     CWG2AS1         equ	1816	;# 
   756     0719                     CWG2STR         equ	1817	;# 
   757     0891                     NVMADR          equ	2193	;# 
   758     0891                     EEADR           equ	2193	;# 
   759     0891                     PMADR           equ	2193	;# 
   760     0891                     NVMADRL         equ	2193	;# 
   761     0891                     EEADRL          equ	2193	;# 
   762     0891                     PMADRL          equ	2193	;# 
   763     0892                     NVMADRH         equ	2194	;# 
   764     0892                     EEADRH          equ	2194	;# 
   765     0892                     PMADRH          equ	2194	;# 
   766     0893                     NVMDAT          equ	2195	;# 
   767     0893                     EEDAT           equ	2195	;# 
   768     0893                     PMDAT           equ	2195	;# 
   769     0893                     NVMDATL         equ	2195	;# 
   770     0893                     EEDATL          equ	2195	;# 
   771     0893                     PMDATL          equ	2195	;# 
   772     0894                     NVMDATH         equ	2196	;# 
   773     0894                     EEDATH          equ	2196	;# 
   774     0894                     PMDATH          equ	2196	;# 
   775     0895                     NVMCON1         equ	2197	;# 
   776     0895                     EECON1          equ	2197	;# 
   777     0895                     PMCON1          equ	2197	;# 
   778     0896                     NVMCON2         equ	2198	;# 
   779     0896                     EECON2          equ	2198	;# 
   780     0896                     PMCON2          equ	2198	;# 
   781     089B                     PCON0           equ	2203	;# 
   782     0911                     PMD0            equ	2321	;# 
   783     0912                     PMD1            equ	2322	;# 
   784     0913                     PMD2            equ	2323	;# 
   785     0914                     PMD3            equ	2324	;# 
   786     0915                     PMD4            equ	2325	;# 
   787     0916                     PMD5            equ	2326	;# 
   788     0918                     CPUDOZE         equ	2328	;# 
   789     0919                     OSCCON1         equ	2329	;# 
   790     091A                     OSCCON2         equ	2330	;# 
   791     091B                     OSCCON3         equ	2331	;# 
   792     091C                     OSCSTAT1        equ	2332	;# 
   793     091D                     OSCEN           equ	2333	;# 
   794     091E                     OSCTUNE         equ	2334	;# 
   795     091F                     OSCFRQ          equ	2335	;# 
   796     0E0F                     PPSLOCK         equ	3599	;# 
   797     0E10                     INTPPS          equ	3600	;# 
   798     0E11                     T0CKIPPS        equ	3601	;# 
   799     0E12                     T1CKIPPS        equ	3602	;# 
   800     0E13                     T1GPPS          equ	3603	;# 
   801     0E14                     CCP1PPS         equ	3604	;# 
   802     0E15                     CCP2PPS         equ	3605	;# 
   803     0E16                     CCP3PPS         equ	3606	;# 
   804     0E17                     CCP4PPS         equ	3607	;# 
   805     0E18                     CWG1PPS         equ	3608	;# 
   806     0E19                     CWG2PPS         equ	3609	;# 
   807     0E1A                     MDCIN1PPS       equ	3610	;# 
   808     0E1B                     MDCIN2PPS       equ	3611	;# 
   809     0E1C                     MDMINPPS        equ	3612	;# 
   810     0E1D                     SSP2CLKPPS      equ	3613	;# 
   811     0E1E                     SSP2DATPPS      equ	3614	;# 
   812     0E1F                     SSP2SSPPS       equ	3615	;# 
   813     0E20                     SSP1CLKPPS      equ	3616	;# 
   814     0E21                     SSP1DATPPS      equ	3617	;# 
   815     0E22                     SSP1SSPPS       equ	3618	;# 
   816     0E24                     RXPPS           equ	3620	;# 
   817     0E25                     TXPPS           equ	3621	;# 
   818     0E28                     CLCIN0PPS       equ	3624	;# 
   819     0E29                     CLCIN1PPS       equ	3625	;# 
   820     0E2A                     CLCIN2PPS       equ	3626	;# 
   821     0E2B                     CLCIN3PPS       equ	3627	;# 
   822     0E2C                     T3CKIPPS        equ	3628	;# 
   823     0E2D                     T3GPPS          equ	3629	;# 
   824     0E2E                     T5CKIPPS        equ	3630	;# 
   825     0E2F                     T5GPPS          equ	3631	;# 
   826     0E90                     RA0PPS          equ	3728	;# 
   827     0E91                     RA1PPS          equ	3729	;# 
   828     0E92                     RA2PPS          equ	3730	;# 
   829     0E94                     RA4PPS          equ	3732	;# 
   830     0E95                     RA5PPS          equ	3733	;# 
   831     0E9C                     RB4PPS          equ	3740	;# 
   832     0E9D                     RB5PPS          equ	3741	;# 
   833     0E9E                     RB6PPS          equ	3742	;# 
   834     0E9F                     RB7PPS          equ	3743	;# 
   835     0EA0                     RC0PPS          equ	3744	;# 
   836     0EA1                     RC1PPS          equ	3745	;# 
   837     0EA2                     RC2PPS          equ	3746	;# 
   838     0EA3                     RC3PPS          equ	3747	;# 
   839     0EA4                     RC4PPS          equ	3748	;# 
   840     0EA5                     RC5PPS          equ	3749	;# 
   841     0EA6                     RC6PPS          equ	3750	;# 
   842     0EA7                     RC7PPS          equ	3751	;# 
   843     0F0F                     CLCDATA         equ	3855	;# 
   844     0F10                     CLC1CON         equ	3856	;# 
   845     0F11                     CLC1POL         equ	3857	;# 
   846     0F12                     CLC1SEL0        equ	3858	;# 
   847     0F13                     CLC1SEL1        equ	3859	;# 
   848     0F14                     CLC1SEL2        equ	3860	;# 
   849     0F15                     CLC1SEL3        equ	3861	;# 
   850     0F16                     CLC1GLS0        equ	3862	;# 
   851     0F17                     CLC1GLS1        equ	3863	;# 
   852     0F18                     CLC1GLS2        equ	3864	;# 
   853     0F19                     CLC1GLS3        equ	3865	;# 
   854     0F1A                     CLC2CON         equ	3866	;# 
   855     0F1B                     CLC2POL         equ	3867	;# 
   856     0F1C                     CLC2SEL0        equ	3868	;# 
   857     0F1D                     CLC2SEL1        equ	3869	;# 
   858     0F1E                     CLC2SEL2        equ	3870	;# 
   859     0F1F                     CLC2SEL3        equ	3871	;# 
   860     0F20                     CLC2GLS0        equ	3872	;# 
   861     0F21                     CLC2GLS1        equ	3873	;# 
   862     0F22                     CLC2GLS2        equ	3874	;# 
   863     0F23                     CLC2GLS3        equ	3875	;# 
   864     0F24                     CLC3CON         equ	3876	;# 
   865     0F25                     CLC3POL         equ	3877	;# 
   866     0F26                     CLC3SEL0        equ	3878	;# 
   867     0F27                     CLC3SEL1        equ	3879	;# 
   868     0F28                     CLC3SEL2        equ	3880	;# 
   869     0F29                     CLC3SEL3        equ	3881	;# 
   870     0F2A                     CLC3GLS0        equ	3882	;# 
   871     0F2B                     CLC3GLS1        equ	3883	;# 
   872     0F2C                     CLC3GLS2        equ	3884	;# 
   873     0F2D                     CLC3GLS3        equ	3885	;# 
   874     0F2E                     CLC4CON         equ	3886	;# 
   875     0F2F                     CLC4POL         equ	3887	;# 
   876     0F30                     CLC4SEL0        equ	3888	;# 
   877     0F31                     CLC4SEL1        equ	3889	;# 
   878     0F32                     CLC4SEL2        equ	3890	;# 
   879     0F33                     CLC4SEL3        equ	3891	;# 
   880     0F34                     CLC4GLS0        equ	3892	;# 
   881     0F35                     CLC4GLS1        equ	3893	;# 
   882     0F36                     CLC4GLS2        equ	3894	;# 
   883     0F37                     CLC4GLS3        equ	3895	;# 
   884     0FE4                     STATUS_SHAD     equ	4068	;# 
   885     0FE5                     WREG_SHAD       equ	4069	;# 
   886     0FE6                     BSR_SHAD        equ	4070	;# 
   887     0FE7                     PCLATH_SHAD     equ	4071	;# 
   888     0FE8                     FSR0L_SHAD      equ	4072	;# 
   889     0FE9                     FSR0H_SHAD      equ	4073	;# 
   890     0FEA                     FSR1L_SHAD      equ	4074	;# 
   891     0FEB                     FSR1H_SHAD      equ	4075	;# 
   892     0FED                     STKPTR          equ	4077	;# 
   893     0FEE                     TOSL            equ	4078	;# 
   894     0FEF                     TOSH            equ	4079	;# 
   895     0000                     INDF0           equ	0	;# 
   896     0001                     INDF1           equ	1	;# 
   897     0002                     PCL             equ	2	;# 
   898     0003                     STATUS          equ	3	;# 
   899     0004                     FSR0L           equ	4	;# 
   900     0005                     FSR0H           equ	5	;# 
   901     0006                     FSR1L           equ	6	;# 
   902     0007                     FSR1H           equ	7	;# 
   903     0008                     BSR             equ	8	;# 
   904     0009                     WREG            equ	9	;# 
   905     000A                     PCLATH          equ	10	;# 
   906     000B                     INTCON          equ	11	;# 
   907     000C                     PORTA           equ	12	;# 
   908     000D                     PORTB           equ	13	;# 
   909     000E                     PORTC           equ	14	;# 
   910     0010                     PIR0            equ	16	;# 
   911     0011                     PIR1            equ	17	;# 
   912     0012                     PIR2            equ	18	;# 
   913     0013                     PIR3            equ	19	;# 
   914     0014                     PIR4            equ	20	;# 
   915     0015                     TMR0L           equ	21	;# 
   916     0015                     TMR0            equ	21	;# 
   917     0016                     TMR0H           equ	22	;# 
   918     0016                     PR0             equ	22	;# 
   919     0017                     T0CON0          equ	23	;# 
   920     0018                     T0CON1          equ	24	;# 
   921     0019                     TMR1            equ	25	;# 
   922     0019                     TMR1L           equ	25	;# 
   923     001A                     TMR1H           equ	26	;# 
   924     001B                     T1CON           equ	27	;# 
   925     001C                     T1GCON          equ	28	;# 
   926     001D                     TMR2            equ	29	;# 
   927     001E                     PR2             equ	30	;# 
   928     001F                     T2CON           equ	31	;# 
   929     008C                     TRISA           equ	140	;# 
   930     008D                     TRISB           equ	141	;# 
   931     008E                     TRISC           equ	142	;# 
   932     0090                     PIE0            equ	144	;# 
   933     0091                     PIE1            equ	145	;# 
   934     0092                     PIE2            equ	146	;# 
   935     0093                     PIE3            equ	147	;# 
   936     0094                     PIE4            equ	148	;# 
   937     0097                     WDTCON          equ	151	;# 
   938     009B                     ADRES           equ	155	;# 
   939     009B                     ADRESL          equ	155	;# 
   940     009C                     ADRESH          equ	156	;# 
   941     009D                     ADCON0          equ	157	;# 
   942     009E                     ADCON1          equ	158	;# 
   943     009F                     ADACT           equ	159	;# 
   944     010C                     LATA            equ	268	;# 
   945     010D                     LATB            equ	269	;# 
   946     010E                     LATC            equ	270	;# 
   947     0111                     CM1CON0         equ	273	;# 
   948     0112                     CM1CON1         equ	274	;# 
   949     0113                     CM2CON0         equ	275	;# 
   950     0114                     CM2CON1         equ	276	;# 
   951     0115                     CMOUT           equ	277	;# 
   952     0116                     BORCON          equ	278	;# 
   953     0117                     FVRCON          equ	279	;# 
   954     0118                     DACCON0         equ	280	;# 
   955     0119                     DACCON1         equ	281	;# 
   956     018C                     ANSELA          equ	396	;# 
   957     018D                     ANSELB          equ	397	;# 
   958     018E                     ANSELC          equ	398	;# 
   959     0197                     VREGCON         equ	407	;# 
   960     0199                     RC1REG          equ	409	;# 
   961     0199                     RCREG           equ	409	;# 
   962     0199                     RCREG1          equ	409	;# 
   963     019A                     TX1REG          equ	410	;# 
   964     019A                     TXREG1          equ	410	;# 
   965     019A                     TXREG           equ	410	;# 
   966     019B                     SP1BRG          equ	411	;# 
   967     019B                     SPBRG           equ	411	;# 
   968     019B                     SP1BRGL         equ	411	;# 
   969     019B                     SPBRG1          equ	411	;# 
   970     019B                     SPBRGL          equ	411	;# 
   971     019C                     SP1BRGH         equ	412	;# 
   972     019C                     SPBRGH          equ	412	;# 
   973     019C                     SPBRGH1         equ	412	;# 
   974     019D                     RC1STA          equ	413	;# 
   975     019D                     RCSTA1          equ	413	;# 
   976     019D                     RCSTA           equ	413	;# 
   977     019E                     TX1STA          equ	414	;# 
   978     019E                     TXSTA1          equ	414	;# 
   979     019E                     TXSTA           equ	414	;# 
   980     019F                     BAUD1CON        equ	415	;# 
   981     019F                     BAUDCON1        equ	415	;# 
   982     019F                     BAUDCTL1        equ	415	;# 
   983     019F                     BAUDCON         equ	415	;# 
   984     019F                     BAUDCTL         equ	415	;# 
   985     020C                     WPUA            equ	524	;# 
   986     020D                     WPUB            equ	525	;# 
   987     020E                     WPUC            equ	526	;# 
   988     0211                     SSP1BUF         equ	529	;# 
   989     0211                     SSPBUF          equ	529	;# 
   990     0212                     SSP1ADD         equ	530	;# 
   991     0212                     SSPADD          equ	530	;# 
   992     0213                     SSP1MSK         equ	531	;# 
   993     0213                     SSPMSK          equ	531	;# 
   994     0214                     SSP1STAT        equ	532	;# 
   995     0214                     SSPSTAT         equ	532	;# 
   996     0215                     SSP1CON1        equ	533	;# 
   997     0215                     SSPCON          equ	533	;# 
   998     0215                     SSPCON1         equ	533	;# 
   999     0215                     SSP1CON         equ	533	;# 
  1000     0216                     SSP1CON2        equ	534	;# 
  1001     0216                     SSPCON2         equ	534	;# 
  1002     0217                     SSP1CON3        equ	535	;# 
  1003     0217                     SSPCON3         equ	535	;# 
  1004     0219                     SSP2BUF         equ	537	;# 
  1005     021A                     SSP2ADD         equ	538	;# 
  1006     021B                     SSP2MSK         equ	539	;# 
  1007     021C                     SSP2STAT        equ	540	;# 
  1008     021D                     SSP2CON1        equ	541	;# 
  1009     021D                     SSP2CON         equ	541	;# 
  1010     021E                     SSP2CON2        equ	542	;# 
  1011     021F                     SSP2CON3        equ	543	;# 
  1012     028C                     ODCONA          equ	652	;# 
  1013     028D                     ODCONB          equ	653	;# 
  1014     028E                     ODCONC          equ	654	;# 
  1015     0291                     CCPR1           equ	657	;# 
  1016     0291                     CCPR1L          equ	657	;# 
  1017     0292                     CCPR1H          equ	658	;# 
  1018     0293                     CCP1CON         equ	659	;# 
  1019     0294                     CCP1CAP         equ	660	;# 
  1020     0295                     CCPR2           equ	661	;# 
  1021     0295                     CCPR2L          equ	661	;# 
  1022     0296                     CCPR2H          equ	662	;# 
  1023     0297                     CCP2CON         equ	663	;# 
  1024     0298                     CCP2CAP         equ	664	;# 
  1025     029F                     CCPTMRS         equ	671	;# 
  1026     030C                     SLRCONA         equ	780	;# 
  1027     030D                     SLRCONB         equ	781	;# 
  1028     030E                     SLRCONC         equ	782	;# 
  1029     0311                     CCPR3           equ	785	;# 
  1030     0311                     CCPR3L          equ	785	;# 
  1031     0312                     CCPR3H          equ	786	;# 
  1032     0313                     CCP3CON         equ	787	;# 
  1033     0314                     CCP3CAP         equ	788	;# 
  1034     0315                     CCPR4           equ	789	;# 
  1035     0315                     CCPR4L          equ	789	;# 
  1036     0316                     CCPR4H          equ	790	;# 
  1037     0317                     CCP4CON         equ	791	;# 
  1038     0318                     CCP4CAP         equ	792	;# 
  1039     038C                     INLVLA          equ	908	;# 
  1040     038D                     INLVLB          equ	909	;# 
  1041     038E                     INLVLC          equ	910	;# 
  1042     0391                     IOCAP           equ	913	;# 
  1043     0392                     IOCAN           equ	914	;# 
  1044     0393                     IOCAF           equ	915	;# 
  1045     0394                     IOCBP           equ	916	;# 
  1046     0395                     IOCBN           equ	917	;# 
  1047     0396                     IOCBF           equ	918	;# 
  1048     0397                     IOCCP           equ	919	;# 
  1049     0398                     IOCCN           equ	920	;# 
  1050     0399                     IOCCF           equ	921	;# 
  1051     039A                     CLKRCON         equ	922	;# 
  1052     039C                     MDCON           equ	924	;# 
  1053     039D                     MDSRC           equ	925	;# 
  1054     039E                     MDCARH          equ	926	;# 
  1055     039F                     MDCARL          equ	927	;# 
  1056     0411                     TMR3            equ	1041	;# 
  1057     0411                     TMR3L           equ	1041	;# 
  1058     0412                     TMR3H           equ	1042	;# 
  1059     0413                     T3CON           equ	1043	;# 
  1060     0414                     T3GCON          equ	1044	;# 
  1061     0415                     TMR4            equ	1045	;# 
  1062     0416                     PR4             equ	1046	;# 
  1063     0417                     T4CON           equ	1047	;# 
  1064     0418                     TMR5            equ	1048	;# 
  1065     0418                     TMR5L           equ	1048	;# 
  1066     0419                     TMR5H           equ	1049	;# 
  1067     041A                     T5CON           equ	1050	;# 
  1068     041B                     T5GCON          equ	1051	;# 
  1069     041C                     TMR6            equ	1052	;# 
  1070     041D                     PR6             equ	1053	;# 
  1071     041E                     T6CON           equ	1054	;# 
  1072     041F                     CCDCON          equ	1055	;# 
  1073     0498                     NCO1ACC         equ	1176	;# 
  1074     0498                     NCO1ACCL        equ	1176	;# 
  1075     0499                     NCO1ACCH        equ	1177	;# 
  1076     049A                     NCO1ACCU        equ	1178	;# 
  1077     049B                     NCO1INC         equ	1179	;# 
  1078     049B                     NCO1INCL        equ	1179	;# 
  1079     049C                     NCO1INCH        equ	1180	;# 
  1080     049D                     NCO1INCU        equ	1181	;# 
  1081     049E                     NCO1CON         equ	1182	;# 
  1082     049F                     NCO1CLK         equ	1183	;# 
  1083     0617                     PWM5DCL         equ	1559	;# 
  1084     0618                     PWM5DCH         equ	1560	;# 
  1085     0619                     PWM5CON         equ	1561	;# 
  1086     0619                     PWM5CON0        equ	1561	;# 
  1087     061A                     PWM6DCL         equ	1562	;# 
  1088     061B                     PWM6DCH         equ	1563	;# 
  1089     061C                     PWM6CON         equ	1564	;# 
  1090     061C                     PWM6CON0        equ	1564	;# 
  1091     061F                     PWMTMRS         equ	1567	;# 
  1092     0691                     CWG1CLKCON      equ	1681	;# 
  1093     0692                     CWG1DAT         equ	1682	;# 
  1094     0693                     CWG1DBR         equ	1683	;# 
  1095     0694                     CWG1DBF         equ	1684	;# 
  1096     0695                     CWG1CON0        equ	1685	;# 
  1097     0696                     CWG1CON1        equ	1686	;# 
  1098     0697                     CWG1AS0         equ	1687	;# 
  1099     0698                     CWG1AS1         equ	1688	;# 
  1100     0699                     CWG1STR         equ	1689	;# 
  1101     0711                     CWG2CLKCON      equ	1809	;# 
  1102     0712                     CWG2DAT         equ	1810	;# 
  1103     0713                     CWG2DBR         equ	1811	;# 
  1104     0714                     CWG2DBF         equ	1812	;# 
  1105     0715                     CWG2CON0        equ	1813	;# 
  1106     0716                     CWG2CON1        equ	1814	;# 
  1107     0717                     CWG2AS0         equ	1815	;# 
  1108     0718                     CWG2AS1         equ	1816	;# 
  1109     0719                     CWG2STR         equ	1817	;# 
  1110     0891                     NVMADR          equ	2193	;# 
  1111     0891                     EEADR           equ	2193	;# 
  1112     0891                     PMADR           equ	2193	;# 
  1113     0891                     NVMADRL         equ	2193	;# 
  1114     0891                     EEADRL          equ	2193	;# 
  1115     0891                     PMADRL          equ	2193	;# 
  1116     0892                     NVMADRH         equ	2194	;# 
  1117     0892                     EEADRH          equ	2194	;# 
  1118     0892                     PMADRH          equ	2194	;# 
  1119     0893                     NVMDAT          equ	2195	;# 
  1120     0893                     EEDAT           equ	2195	;# 
  1121     0893                     PMDAT           equ	2195	;# 
  1122     0893                     NVMDATL         equ	2195	;# 
  1123     0893                     EEDATL          equ	2195	;# 
  1124     0893                     PMDATL          equ	2195	;# 
  1125     0894                     NVMDATH         equ	2196	;# 
  1126     0894                     EEDATH          equ	2196	;# 
  1127     0894                     PMDATH          equ	2196	;# 
  1128     0895                     NVMCON1         equ	2197	;# 
  1129     0895                     EECON1          equ	2197	;# 
  1130     0895                     PMCON1          equ	2197	;# 
  1131     0896                     NVMCON2         equ	2198	;# 
  1132     0896                     EECON2          equ	2198	;# 
  1133     0896                     PMCON2          equ	2198	;# 
  1134     089B                     PCON0           equ	2203	;# 
  1135     0911                     PMD0            equ	2321	;# 
  1136     0912                     PMD1            equ	2322	;# 
  1137     0913                     PMD2            equ	2323	;# 
  1138     0914                     PMD3            equ	2324	;# 
  1139     0915                     PMD4            equ	2325	;# 
  1140     0916                     PMD5            equ	2326	;# 
  1141     0918                     CPUDOZE         equ	2328	;# 
  1142     0919                     OSCCON1         equ	2329	;# 
  1143     091A                     OSCCON2         equ	2330	;# 
  1144     091B                     OSCCON3         equ	2331	;# 
  1145     091C                     OSCSTAT1        equ	2332	;# 
  1146     091D                     OSCEN           equ	2333	;# 
  1147     091E                     OSCTUNE         equ	2334	;# 
  1148     091F                     OSCFRQ          equ	2335	;# 
  1149     0E0F                     PPSLOCK         equ	3599	;# 
  1150     0E10                     INTPPS          equ	3600	;# 
  1151     0E11                     T0CKIPPS        equ	3601	;# 
  1152     0E12                     T1CKIPPS        equ	3602	;# 
  1153     0E13                     T1GPPS          equ	3603	;# 
  1154     0E14                     CCP1PPS         equ	3604	;# 
  1155     0E15                     CCP2PPS         equ	3605	;# 
  1156     0E16                     CCP3PPS         equ	3606	;# 
  1157     0E17                     CCP4PPS         equ	3607	;# 
  1158     0E18                     CWG1PPS         equ	3608	;# 
  1159     0E19                     CWG2PPS         equ	3609	;# 
  1160     0E1A                     MDCIN1PPS       equ	3610	;# 
  1161     0E1B                     MDCIN2PPS       equ	3611	;# 
  1162     0E1C                     MDMINPPS        equ	3612	;# 
  1163     0E1D                     SSP2CLKPPS      equ	3613	;# 
  1164     0E1E                     SSP2DATPPS      equ	3614	;# 
  1165     0E1F                     SSP2SSPPS       equ	3615	;# 
  1166     0E20                     SSP1CLKPPS      equ	3616	;# 
  1167     0E21                     SSP1DATPPS      equ	3617	;# 
  1168     0E22                     SSP1SSPPS       equ	3618	;# 
  1169     0E24                     RXPPS           equ	3620	;# 
  1170     0E25                     TXPPS           equ	3621	;# 
  1171     0E28                     CLCIN0PPS       equ	3624	;# 
  1172     0E29                     CLCIN1PPS       equ	3625	;# 
  1173     0E2A                     CLCIN2PPS       equ	3626	;# 
  1174     0E2B                     CLCIN3PPS       equ	3627	;# 
  1175     0E2C                     T3CKIPPS        equ	3628	;# 
  1176     0E2D                     T3GPPS          equ	3629	;# 
  1177     0E2E                     T5CKIPPS        equ	3630	;# 
  1178     0E2F                     T5GPPS          equ	3631	;# 
  1179     0E90                     RA0PPS          equ	3728	;# 
  1180     0E91                     RA1PPS          equ	3729	;# 
  1181     0E92                     RA2PPS          equ	3730	;# 
  1182     0E94                     RA4PPS          equ	3732	;# 
  1183     0E95                     RA5PPS          equ	3733	;# 
  1184     0E9C                     RB4PPS          equ	3740	;# 
  1185     0E9D                     RB5PPS          equ	3741	;# 
  1186     0E9E                     RB6PPS          equ	3742	;# 
  1187     0E9F                     RB7PPS          equ	3743	;# 
  1188     0EA0                     RC0PPS          equ	3744	;# 
  1189     0EA1                     RC1PPS          equ	3745	;# 
  1190     0EA2                     RC2PPS          equ	3746	;# 
  1191     0EA3                     RC3PPS          equ	3747	;# 
  1192     0EA4                     RC4PPS          equ	3748	;# 
  1193     0EA5                     RC5PPS          equ	3749	;# 
  1194     0EA6                     RC6PPS          equ	3750	;# 
  1195     0EA7                     RC7PPS          equ	3751	;# 
  1196     0F0F                     CLCDATA         equ	3855	;# 
  1197     0F10                     CLC1CON         equ	3856	;# 
  1198     0F11                     CLC1POL         equ	3857	;# 
  1199     0F12                     CLC1SEL0        equ	3858	;# 
  1200     0F13                     CLC1SEL1        equ	3859	;# 
  1201     0F14                     CLC1SEL2        equ	3860	;# 
  1202     0F15                     CLC1SEL3        equ	3861	;# 
  1203     0F16                     CLC1GLS0        equ	3862	;# 
  1204     0F17                     CLC1GLS1        equ	3863	;# 
  1205     0F18                     CLC1GLS2        equ	3864	;# 
  1206     0F19                     CLC1GLS3        equ	3865	;# 
  1207     0F1A                     CLC2CON         equ	3866	;# 
  1208     0F1B                     CLC2POL         equ	3867	;# 
  1209     0F1C                     CLC2SEL0        equ	3868	;# 
  1210     0F1D                     CLC2SEL1        equ	3869	;# 
  1211     0F1E                     CLC2SEL2        equ	3870	;# 
  1212     0F1F                     CLC2SEL3        equ	3871	;# 
  1213     0F20                     CLC2GLS0        equ	3872	;# 
  1214     0F21                     CLC2GLS1        equ	3873	;# 
  1215     0F22                     CLC2GLS2        equ	3874	;# 
  1216     0F23                     CLC2GLS3        equ	3875	;# 
  1217     0F24                     CLC3CON         equ	3876	;# 
  1218     0F25                     CLC3POL         equ	3877	;# 
  1219     0F26                     CLC3SEL0        equ	3878	;# 
  1220     0F27                     CLC3SEL1        equ	3879	;# 
  1221     0F28                     CLC3SEL2        equ	3880	;# 
  1222     0F29                     CLC3SEL3        equ	3881	;# 
  1223     0F2A                     CLC3GLS0        equ	3882	;# 
  1224     0F2B                     CLC3GLS1        equ	3883	;# 
  1225     0F2C                     CLC3GLS2        equ	3884	;# 
  1226     0F2D                     CLC3GLS3        equ	3885	;# 
  1227     0F2E                     CLC4CON         equ	3886	;# 
  1228     0F2F                     CLC4POL         equ	3887	;# 
  1229     0F30                     CLC4SEL0        equ	3888	;# 
  1230     0F31                     CLC4SEL1        equ	3889	;# 
  1231     0F32                     CLC4SEL2        equ	3890	;# 
  1232     0F33                     CLC4SEL3        equ	3891	;# 
  1233     0F34                     CLC4GLS0        equ	3892	;# 
  1234     0F35                     CLC4GLS1        equ	3893	;# 
  1235     0F36                     CLC4GLS2        equ	3894	;# 
  1236     0F37                     CLC4GLS3        equ	3895	;# 
  1237     0FE4                     STATUS_SHAD     equ	4068	;# 
  1238     0FE5                     WREG_SHAD       equ	4069	;# 
  1239     0FE6                     BSR_SHAD        equ	4070	;# 
  1240     0FE7                     PCLATH_SHAD     equ	4071	;# 
  1241     0FE8                     FSR0L_SHAD      equ	4072	;# 
  1242     0FE9                     FSR0H_SHAD      equ	4073	;# 
  1243     0FEA                     FSR1L_SHAD      equ	4074	;# 
  1244     0FEB                     FSR1H_SHAD      equ	4075	;# 
  1245     0FED                     STKPTR          equ	4077	;# 
  1246     0FEE                     TOSL            equ	4078	;# 
  1247     0FEF                     TOSH            equ	4079	;# 
  1248     0000                     INDF0           equ	0	;# 
  1249     0001                     INDF1           equ	1	;# 
  1250     0002                     PCL             equ	2	;# 
  1251     0003                     STATUS          equ	3	;# 
  1252     0004                     FSR0L           equ	4	;# 
  1253     0005                     FSR0H           equ	5	;# 
  1254     0006                     FSR1L           equ	6	;# 
  1255     0007                     FSR1H           equ	7	;# 
  1256     0008                     BSR             equ	8	;# 
  1257     0009                     WREG            equ	9	;# 
  1258     000A                     PCLATH          equ	10	;# 
  1259     000B                     INTCON          equ	11	;# 
  1260     000C                     PORTA           equ	12	;# 
  1261     000D                     PORTB           equ	13	;# 
  1262     000E                     PORTC           equ	14	;# 
  1263     0010                     PIR0            equ	16	;# 
  1264     0011                     PIR1            equ	17	;# 
  1265     0012                     PIR2            equ	18	;# 
  1266     0013                     PIR3            equ	19	;# 
  1267     0014                     PIR4            equ	20	;# 
  1268     0015                     TMR0L           equ	21	;# 
  1269     0015                     TMR0            equ	21	;# 
  1270     0016                     TMR0H           equ	22	;# 
  1271     0016                     PR0             equ	22	;# 
  1272     0017                     T0CON0          equ	23	;# 
  1273     0018                     T0CON1          equ	24	;# 
  1274     0019                     TMR1            equ	25	;# 
  1275     0019                     TMR1L           equ	25	;# 
  1276     001A                     TMR1H           equ	26	;# 
  1277     001B                     T1CON           equ	27	;# 
  1278     001C                     T1GCON          equ	28	;# 
  1279     001D                     TMR2            equ	29	;# 
  1280     001E                     PR2             equ	30	;# 
  1281     001F                     T2CON           equ	31	;# 
  1282     008C                     TRISA           equ	140	;# 
  1283     008D                     TRISB           equ	141	;# 
  1284     008E                     TRISC           equ	142	;# 
  1285     0090                     PIE0            equ	144	;# 
  1286     0091                     PIE1            equ	145	;# 
  1287     0092                     PIE2            equ	146	;# 
  1288     0093                     PIE3            equ	147	;# 
  1289     0094                     PIE4            equ	148	;# 
  1290     0097                     WDTCON          equ	151	;# 
  1291     009B                     ADRES           equ	155	;# 
  1292     009B                     ADRESL          equ	155	;# 
  1293     009C                     ADRESH          equ	156	;# 
  1294     009D                     ADCON0          equ	157	;# 
  1295     009E                     ADCON1          equ	158	;# 
  1296     009F                     ADACT           equ	159	;# 
  1297     010C                     LATA            equ	268	;# 
  1298     010D                     LATB            equ	269	;# 
  1299     010E                     LATC            equ	270	;# 
  1300     0111                     CM1CON0         equ	273	;# 
  1301     0112                     CM1CON1         equ	274	;# 
  1302     0113                     CM2CON0         equ	275	;# 
  1303     0114                     CM2CON1         equ	276	;# 
  1304     0115                     CMOUT           equ	277	;# 
  1305     0116                     BORCON          equ	278	;# 
  1306     0117                     FVRCON          equ	279	;# 
  1307     0118                     DACCON0         equ	280	;# 
  1308     0119                     DACCON1         equ	281	;# 
  1309     018C                     ANSELA          equ	396	;# 
  1310     018D                     ANSELB          equ	397	;# 
  1311     018E                     ANSELC          equ	398	;# 
  1312     0197                     VREGCON         equ	407	;# 
  1313     0199                     RC1REG          equ	409	;# 
  1314     0199                     RCREG           equ	409	;# 
  1315     0199                     RCREG1          equ	409	;# 
  1316     019A                     TX1REG          equ	410	;# 
  1317     019A                     TXREG1          equ	410	;# 
  1318     019A                     TXREG           equ	410	;# 
  1319     019B                     SP1BRG          equ	411	;# 
  1320     019B                     SPBRG           equ	411	;# 
  1321     019B                     SP1BRGL         equ	411	;# 
  1322     019B                     SPBRG1          equ	411	;# 
  1323     019B                     SPBRGL          equ	411	;# 
  1324     019C                     SP1BRGH         equ	412	;# 
  1325     019C                     SPBRGH          equ	412	;# 
  1326     019C                     SPBRGH1         equ	412	;# 
  1327     019D                     RC1STA          equ	413	;# 
  1328     019D                     RCSTA1          equ	413	;# 
  1329     019D                     RCSTA           equ	413	;# 
  1330     019E                     TX1STA          equ	414	;# 
  1331     019E                     TXSTA1          equ	414	;# 
  1332     019E                     TXSTA           equ	414	;# 
  1333     019F                     BAUD1CON        equ	415	;# 
  1334     019F                     BAUDCON1        equ	415	;# 
  1335     019F                     BAUDCTL1        equ	415	;# 
  1336     019F                     BAUDCON         equ	415	;# 
  1337     019F                     BAUDCTL         equ	415	;# 
  1338     020C                     WPUA            equ	524	;# 
  1339     020D                     WPUB            equ	525	;# 
  1340     020E                     WPUC            equ	526	;# 
  1341     0211                     SSP1BUF         equ	529	;# 
  1342     0211                     SSPBUF          equ	529	;# 
  1343     0212                     SSP1ADD         equ	530	;# 
  1344     0212                     SSPADD          equ	530	;# 
  1345     0213                     SSP1MSK         equ	531	;# 
  1346     0213                     SSPMSK          equ	531	;# 
  1347     0214                     SSP1STAT        equ	532	;# 
  1348     0214                     SSPSTAT         equ	532	;# 
  1349     0215                     SSP1CON1        equ	533	;# 
  1350     0215                     SSPCON          equ	533	;# 
  1351     0215                     SSPCON1         equ	533	;# 
  1352     0215                     SSP1CON         equ	533	;# 
  1353     0216                     SSP1CON2        equ	534	;# 
  1354     0216                     SSPCON2         equ	534	;# 
  1355     0217                     SSP1CON3        equ	535	;# 
  1356     0217                     SSPCON3         equ	535	;# 
  1357     0219                     SSP2BUF         equ	537	;# 
  1358     021A                     SSP2ADD         equ	538	;# 
  1359     021B                     SSP2MSK         equ	539	;# 
  1360     021C                     SSP2STAT        equ	540	;# 
  1361     021D                     SSP2CON1        equ	541	;# 
  1362     021D                     SSP2CON         equ	541	;# 
  1363     021E                     SSP2CON2        equ	542	;# 
  1364     021F                     SSP2CON3        equ	543	;# 
  1365     028C                     ODCONA          equ	652	;# 
  1366     028D                     ODCONB          equ	653	;# 
  1367     028E                     ODCONC          equ	654	;# 
  1368     0291                     CCPR1           equ	657	;# 
  1369     0291                     CCPR1L          equ	657	;# 
  1370     0292                     CCPR1H          equ	658	;# 
  1371     0293                     CCP1CON         equ	659	;# 
  1372     0294                     CCP1CAP         equ	660	;# 
  1373     0295                     CCPR2           equ	661	;# 
  1374     0295                     CCPR2L          equ	661	;# 
  1375     0296                     CCPR2H          equ	662	;# 
  1376     0297                     CCP2CON         equ	663	;# 
  1377     0298                     CCP2CAP         equ	664	;# 
  1378     029F                     CCPTMRS         equ	671	;# 
  1379     030C                     SLRCONA         equ	780	;# 
  1380     030D                     SLRCONB         equ	781	;# 
  1381     030E                     SLRCONC         equ	782	;# 
  1382     0311                     CCPR3           equ	785	;# 
  1383     0311                     CCPR3L          equ	785	;# 
  1384     0312                     CCPR3H          equ	786	;# 
  1385     0313                     CCP3CON         equ	787	;# 
  1386     0314                     CCP3CAP         equ	788	;# 
  1387     0315                     CCPR4           equ	789	;# 
  1388     0315                     CCPR4L          equ	789	;# 
  1389     0316                     CCPR4H          equ	790	;# 
  1390     0317                     CCP4CON         equ	791	;# 
  1391     0318                     CCP4CAP         equ	792	;# 
  1392     038C                     INLVLA          equ	908	;# 
  1393     038D                     INLVLB          equ	909	;# 
  1394     038E                     INLVLC          equ	910	;# 
  1395     0391                     IOCAP           equ	913	;# 
  1396     0392                     IOCAN           equ	914	;# 
  1397     0393                     IOCAF           equ	915	;# 
  1398     0394                     IOCBP           equ	916	;# 
  1399     0395                     IOCBN           equ	917	;# 
  1400     0396                     IOCBF           equ	918	;# 
  1401     0397                     IOCCP           equ	919	;# 
  1402     0398                     IOCCN           equ	920	;# 
  1403     0399                     IOCCF           equ	921	;# 
  1404     039A                     CLKRCON         equ	922	;# 
  1405     039C                     MDCON           equ	924	;# 
  1406     039D                     MDSRC           equ	925	;# 
  1407     039E                     MDCARH          equ	926	;# 
  1408     039F                     MDCARL          equ	927	;# 
  1409     0411                     TMR3            equ	1041	;# 
  1410     0411                     TMR3L           equ	1041	;# 
  1411     0412                     TMR3H           equ	1042	;# 
  1412     0413                     T3CON           equ	1043	;# 
  1413     0414                     T3GCON          equ	1044	;# 
  1414     0415                     TMR4            equ	1045	;# 
  1415     0416                     PR4             equ	1046	;# 
  1416     0417                     T4CON           equ	1047	;# 
  1417     0418                     TMR5            equ	1048	;# 
  1418     0418                     TMR5L           equ	1048	;# 
  1419     0419                     TMR5H           equ	1049	;# 
  1420     041A                     T5CON           equ	1050	;# 
  1421     041B                     T5GCON          equ	1051	;# 
  1422     041C                     TMR6            equ	1052	;# 
  1423     041D                     PR6             equ	1053	;# 
  1424     041E                     T6CON           equ	1054	;# 
  1425     041F                     CCDCON          equ	1055	;# 
  1426     0498                     NCO1ACC         equ	1176	;# 
  1427     0498                     NCO1ACCL        equ	1176	;# 
  1428     0499                     NCO1ACCH        equ	1177	;# 
  1429     049A                     NCO1ACCU        equ	1178	;# 
  1430     049B                     NCO1INC         equ	1179	;# 
  1431     049B                     NCO1INCL        equ	1179	;# 
  1432     049C                     NCO1INCH        equ	1180	;# 
  1433     049D                     NCO1INCU        equ	1181	;# 
  1434     049E                     NCO1CON         equ	1182	;# 
  1435     049F                     NCO1CLK         equ	1183	;# 
  1436     0617                     PWM5DCL         equ	1559	;# 
  1437     0618                     PWM5DCH         equ	1560	;# 
  1438     0619                     PWM5CON         equ	1561	;# 
  1439     0619                     PWM5CON0        equ	1561	;# 
  1440     061A                     PWM6DCL         equ	1562	;# 
  1441     061B                     PWM6DCH         equ	1563	;# 
  1442     061C                     PWM6CON         equ	1564	;# 
  1443     061C                     PWM6CON0        equ	1564	;# 
  1444     061F                     PWMTMRS         equ	1567	;# 
  1445     0691                     CWG1CLKCON      equ	1681	;# 
  1446     0692                     CWG1DAT         equ	1682	;# 
  1447     0693                     CWG1DBR         equ	1683	;# 
  1448     0694                     CWG1DBF         equ	1684	;# 
  1449     0695                     CWG1CON0        equ	1685	;# 
  1450     0696                     CWG1CON1        equ	1686	;# 
  1451     0697                     CWG1AS0         equ	1687	;# 
  1452     0698                     CWG1AS1         equ	1688	;# 
  1453     0699                     CWG1STR         equ	1689	;# 
  1454     0711                     CWG2CLKCON      equ	1809	;# 
  1455     0712                     CWG2DAT         equ	1810	;# 
  1456     0713                     CWG2DBR         equ	1811	;# 
  1457     0714                     CWG2DBF         equ	1812	;# 
  1458     0715                     CWG2CON0        equ	1813	;# 
  1459     0716                     CWG2CON1        equ	1814	;# 
  1460     0717                     CWG2AS0         equ	1815	;# 
  1461     0718                     CWG2AS1         equ	1816	;# 
  1462     0719                     CWG2STR         equ	1817	;# 
  1463     0891                     NVMADR          equ	2193	;# 
  1464     0891                     EEADR           equ	2193	;# 
  1465     0891                     PMADR           equ	2193	;# 
  1466     0891                     NVMADRL         equ	2193	;# 
  1467     0891                     EEADRL          equ	2193	;# 
  1468     0891                     PMADRL          equ	2193	;# 
  1469     0892                     NVMADRH         equ	2194	;# 
  1470     0892                     EEADRH          equ	2194	;# 
  1471     0892                     PMADRH          equ	2194	;# 
  1472     0893                     NVMDAT          equ	2195	;# 
  1473     0893                     EEDAT           equ	2195	;# 
  1474     0893                     PMDAT           equ	2195	;# 
  1475     0893                     NVMDATL         equ	2195	;# 
  1476     0893                     EEDATL          equ	2195	;# 
  1477     0893                     PMDATL          equ	2195	;# 
  1478     0894                     NVMDATH         equ	2196	;# 
  1479     0894                     EEDATH          equ	2196	;# 
  1480     0894                     PMDATH          equ	2196	;# 
  1481     0895                     NVMCON1         equ	2197	;# 
  1482     0895                     EECON1          equ	2197	;# 
  1483     0895                     PMCON1          equ	2197	;# 
  1484     0896                     NVMCON2         equ	2198	;# 
  1485     0896                     EECON2          equ	2198	;# 
  1486     0896                     PMCON2          equ	2198	;# 
  1487     089B                     PCON0           equ	2203	;# 
  1488     0911                     PMD0            equ	2321	;# 
  1489     0912                     PMD1            equ	2322	;# 
  1490     0913                     PMD2            equ	2323	;# 
  1491     0914                     PMD3            equ	2324	;# 
  1492     0915                     PMD4            equ	2325	;# 
  1493     0916                     PMD5            equ	2326	;# 
  1494     0918                     CPUDOZE         equ	2328	;# 
  1495     0919                     OSCCON1         equ	2329	;# 
  1496     091A                     OSCCON2         equ	2330	;# 
  1497     091B                     OSCCON3         equ	2331	;# 
  1498     091C                     OSCSTAT1        equ	2332	;# 
  1499     091D                     OSCEN           equ	2333	;# 
  1500     091E                     OSCTUNE         equ	2334	;# 
  1501     091F                     OSCFRQ          equ	2335	;# 
  1502     0E0F                     PPSLOCK         equ	3599	;# 
  1503     0E10                     INTPPS          equ	3600	;# 
  1504     0E11                     T0CKIPPS        equ	3601	;# 
  1505     0E12                     T1CKIPPS        equ	3602	;# 
  1506     0E13                     T1GPPS          equ	3603	;# 
  1507     0E14                     CCP1PPS         equ	3604	;# 
  1508     0E15                     CCP2PPS         equ	3605	;# 
  1509     0E16                     CCP3PPS         equ	3606	;# 
  1510     0E17                     CCP4PPS         equ	3607	;# 
  1511     0E18                     CWG1PPS         equ	3608	;# 
  1512     0E19                     CWG2PPS         equ	3609	;# 
  1513     0E1A                     MDCIN1PPS       equ	3610	;# 
  1514     0E1B                     MDCIN2PPS       equ	3611	;# 
  1515     0E1C                     MDMINPPS        equ	3612	;# 
  1516     0E1D                     SSP2CLKPPS      equ	3613	;# 
  1517     0E1E                     SSP2DATPPS      equ	3614	;# 
  1518     0E1F                     SSP2SSPPS       equ	3615	;# 
  1519     0E20                     SSP1CLKPPS      equ	3616	;# 
  1520     0E21                     SSP1DATPPS      equ	3617	;# 
  1521     0E22                     SSP1SSPPS       equ	3618	;# 
  1522     0E24                     RXPPS           equ	3620	;# 
  1523     0E25                     TXPPS           equ	3621	;# 
  1524     0E28                     CLCIN0PPS       equ	3624	;# 
  1525     0E29                     CLCIN1PPS       equ	3625	;# 
  1526     0E2A                     CLCIN2PPS       equ	3626	;# 
  1527     0E2B                     CLCIN3PPS       equ	3627	;# 
  1528     0E2C                     T3CKIPPS        equ	3628	;# 
  1529     0E2D                     T3GPPS          equ	3629	;# 
  1530     0E2E                     T5CKIPPS        equ	3630	;# 
  1531     0E2F                     T5GPPS          equ	3631	;# 
  1532     0E90                     RA0PPS          equ	3728	;# 
  1533     0E91                     RA1PPS          equ	3729	;# 
  1534     0E92                     RA2PPS          equ	3730	;# 
  1535     0E94                     RA4PPS          equ	3732	;# 
  1536     0E95                     RA5PPS          equ	3733	;# 
  1537     0E9C                     RB4PPS          equ	3740	;# 
  1538     0E9D                     RB5PPS          equ	3741	;# 
  1539     0E9E                     RB6PPS          equ	3742	;# 
  1540     0E9F                     RB7PPS          equ	3743	;# 
  1541     0EA0                     RC0PPS          equ	3744	;# 
  1542     0EA1                     RC1PPS          equ	3745	;# 
  1543     0EA2                     RC2PPS          equ	3746	;# 
  1544     0EA3                     RC3PPS          equ	3747	;# 
  1545     0EA4                     RC4PPS          equ	3748	;# 
  1546     0EA5                     RC5PPS          equ	3749	;# 
  1547     0EA6                     RC6PPS          equ	3750	;# 
  1548     0EA7                     RC7PPS          equ	3751	;# 
  1549     0F0F                     CLCDATA         equ	3855	;# 
  1550     0F10                     CLC1CON         equ	3856	;# 
  1551     0F11                     CLC1POL         equ	3857	;# 
  1552     0F12                     CLC1SEL0        equ	3858	;# 
  1553     0F13                     CLC1SEL1        equ	3859	;# 
  1554     0F14                     CLC1SEL2        equ	3860	;# 
  1555     0F15                     CLC1SEL3        equ	3861	;# 
  1556     0F16                     CLC1GLS0        equ	3862	;# 
  1557     0F17                     CLC1GLS1        equ	3863	;# 
  1558     0F18                     CLC1GLS2        equ	3864	;# 
  1559     0F19                     CLC1GLS3        equ	3865	;# 
  1560     0F1A                     CLC2CON         equ	3866	;# 
  1561     0F1B                     CLC2POL         equ	3867	;# 
  1562     0F1C                     CLC2SEL0        equ	3868	;# 
  1563     0F1D                     CLC2SEL1        equ	3869	;# 
  1564     0F1E                     CLC2SEL2        equ	3870	;# 
  1565     0F1F                     CLC2SEL3        equ	3871	;# 
  1566     0F20                     CLC2GLS0        equ	3872	;# 
  1567     0F21                     CLC2GLS1        equ	3873	;# 
  1568     0F22                     CLC2GLS2        equ	3874	;# 
  1569     0F23                     CLC2GLS3        equ	3875	;# 
  1570     0F24                     CLC3CON         equ	3876	;# 
  1571     0F25                     CLC3POL         equ	3877	;# 
  1572     0F26                     CLC3SEL0        equ	3878	;# 
  1573     0F27                     CLC3SEL1        equ	3879	;# 
  1574     0F28                     CLC3SEL2        equ	3880	;# 
  1575     0F29                     CLC3SEL3        equ	3881	;# 
  1576     0F2A                     CLC3GLS0        equ	3882	;# 
  1577     0F2B                     CLC3GLS1        equ	3883	;# 
  1578     0F2C                     CLC3GLS2        equ	3884	;# 
  1579     0F2D                     CLC3GLS3        equ	3885	;# 
  1580     0F2E                     CLC4CON         equ	3886	;# 
  1581     0F2F                     CLC4POL         equ	3887	;# 
  1582     0F30                     CLC4SEL0        equ	3888	;# 
  1583     0F31                     CLC4SEL1        equ	3889	;# 
  1584     0F32                     CLC4SEL2        equ	3890	;# 
  1585     0F33                     CLC4SEL3        equ	3891	;# 
  1586     0F34                     CLC4GLS0        equ	3892	;# 
  1587     0F35                     CLC4GLS1        equ	3893	;# 
  1588     0F36                     CLC4GLS2        equ	3894	;# 
  1589     0F37                     CLC4GLS3        equ	3895	;# 
  1590     0FE4                     STATUS_SHAD     equ	4068	;# 
  1591     0FE5                     WREG_SHAD       equ	4069	;# 
  1592     0FE6                     BSR_SHAD        equ	4070	;# 
  1593     0FE7                     PCLATH_SHAD     equ	4071	;# 
  1594     0FE8                     FSR0L_SHAD      equ	4072	;# 
  1595     0FE9                     FSR0H_SHAD      equ	4073	;# 
  1596     0FEA                     FSR1L_SHAD      equ	4074	;# 
  1597     0FEB                     FSR1H_SHAD      equ	4075	;# 
  1598     0FED                     STKPTR          equ	4077	;# 
  1599     0FEE                     TOSL            equ	4078	;# 
  1600     0FEF                     TOSH            equ	4079	;# 
  1601     0000                     INDF0           equ	0	;# 
  1602     0001                     INDF1           equ	1	;# 
  1603     0002                     PCL             equ	2	;# 
  1604     0003                     STATUS          equ	3	;# 
  1605     0004                     FSR0L           equ	4	;# 
  1606     0005                     FSR0H           equ	5	;# 
  1607     0006                     FSR1L           equ	6	;# 
  1608     0007                     FSR1H           equ	7	;# 
  1609     0008                     BSR             equ	8	;# 
  1610     0009                     WREG            equ	9	;# 
  1611     000A                     PCLATH          equ	10	;# 
  1612     000B                     INTCON          equ	11	;# 
  1613     000C                     PORTA           equ	12	;# 
  1614     000D                     PORTB           equ	13	;# 
  1615     000E                     PORTC           equ	14	;# 
  1616     0010                     PIR0            equ	16	;# 
  1617     0011                     PIR1            equ	17	;# 
  1618     0012                     PIR2            equ	18	;# 
  1619     0013                     PIR3            equ	19	;# 
  1620     0014                     PIR4            equ	20	;# 
  1621     0015                     TMR0L           equ	21	;# 
  1622     0015                     TMR0            equ	21	;# 
  1623     0016                     TMR0H           equ	22	;# 
  1624     0016                     PR0             equ	22	;# 
  1625     0017                     T0CON0          equ	23	;# 
  1626     0018                     T0CON1          equ	24	;# 
  1627     0019                     TMR1            equ	25	;# 
  1628     0019                     TMR1L           equ	25	;# 
  1629     001A                     TMR1H           equ	26	;# 
  1630     001B                     T1CON           equ	27	;# 
  1631     001C                     T1GCON          equ	28	;# 
  1632     001D                     TMR2            equ	29	;# 
  1633     001E                     PR2             equ	30	;# 
  1634     001F                     T2CON           equ	31	;# 
  1635     008C                     TRISA           equ	140	;# 
  1636     008D                     TRISB           equ	141	;# 
  1637     008E                     TRISC           equ	142	;# 
  1638     0090                     PIE0            equ	144	;# 
  1639     0091                     PIE1            equ	145	;# 
  1640     0092                     PIE2            equ	146	;# 
  1641     0093                     PIE3            equ	147	;# 
  1642     0094                     PIE4            equ	148	;# 
  1643     0097                     WDTCON          equ	151	;# 
  1644     009B                     ADRES           equ	155	;# 
  1645     009B                     ADRESL          equ	155	;# 
  1646     009C                     ADRESH          equ	156	;# 
  1647     009D                     ADCON0          equ	157	;# 
  1648     009E                     ADCON1          equ	158	;# 
  1649     009F                     ADACT           equ	159	;# 
  1650     010C                     LATA            equ	268	;# 
  1651     010D                     LATB            equ	269	;# 
  1652     010E                     LATC            equ	270	;# 
  1653     0111                     CM1CON0         equ	273	;# 
  1654     0112                     CM1CON1         equ	274	;# 
  1655     0113                     CM2CON0         equ	275	;# 
  1656     0114                     CM2CON1         equ	276	;# 
  1657     0115                     CMOUT           equ	277	;# 
  1658     0116                     BORCON          equ	278	;# 
  1659     0117                     FVRCON          equ	279	;# 
  1660     0118                     DACCON0         equ	280	;# 
  1661     0119                     DACCON1         equ	281	;# 
  1662     018C                     ANSELA          equ	396	;# 
  1663     018D                     ANSELB          equ	397	;# 
  1664     018E                     ANSELC          equ	398	;# 
  1665     0197                     VREGCON         equ	407	;# 
  1666     0199                     RC1REG          equ	409	;# 
  1667     0199                     RCREG           equ	409	;# 
  1668     0199                     RCREG1          equ	409	;# 
  1669     019A                     TX1REG          equ	410	;# 
  1670     019A                     TXREG1          equ	410	;# 
  1671     019A                     TXREG           equ	410	;# 
  1672     019B                     SP1BRG          equ	411	;# 
  1673     019B                     SPBRG           equ	411	;# 
  1674     019B                     SP1BRGL         equ	411	;# 
  1675     019B                     SPBRG1          equ	411	;# 
  1676     019B                     SPBRGL          equ	411	;# 
  1677     019C                     SP1BRGH         equ	412	;# 
  1678     019C                     SPBRGH          equ	412	;# 
  1679     019C                     SPBRGH1         equ	412	;# 
  1680     019D                     RC1STA          equ	413	;# 
  1681     019D                     RCSTA1          equ	413	;# 
  1682     019D                     RCSTA           equ	413	;# 
  1683     019E                     TX1STA          equ	414	;# 
  1684     019E                     TXSTA1          equ	414	;# 
  1685     019E                     TXSTA           equ	414	;# 
  1686     019F                     BAUD1CON        equ	415	;# 
  1687     019F                     BAUDCON1        equ	415	;# 
  1688     019F                     BAUDCTL1        equ	415	;# 
  1689     019F                     BAUDCON         equ	415	;# 
  1690     019F                     BAUDCTL         equ	415	;# 
  1691     020C                     WPUA            equ	524	;# 
  1692     020D                     WPUB            equ	525	;# 
  1693     020E                     WPUC            equ	526	;# 
  1694     0211                     SSP1BUF         equ	529	;# 
  1695     0211                     SSPBUF          equ	529	;# 
  1696     0212                     SSP1ADD         equ	530	;# 
  1697     0212                     SSPADD          equ	530	;# 
  1698     0213                     SSP1MSK         equ	531	;# 
  1699     0213                     SSPMSK          equ	531	;# 
  1700     0214                     SSP1STAT        equ	532	;# 
  1701     0214                     SSPSTAT         equ	532	;# 
  1702     0215                     SSP1CON1        equ	533	;# 
  1703     0215                     SSPCON          equ	533	;# 
  1704     0215                     SSPCON1         equ	533	;# 
  1705     0215                     SSP1CON         equ	533	;# 
  1706     0216                     SSP1CON2        equ	534	;# 
  1707     0216                     SSPCON2         equ	534	;# 
  1708     0217                     SSP1CON3        equ	535	;# 
  1709     0217                     SSPCON3         equ	535	;# 
  1710     0219                     SSP2BUF         equ	537	;# 
  1711     021A                     SSP2ADD         equ	538	;# 
  1712     021B                     SSP2MSK         equ	539	;# 
  1713     021C                     SSP2STAT        equ	540	;# 
  1714     021D                     SSP2CON1        equ	541	;# 
  1715     021D                     SSP2CON         equ	541	;# 
  1716     021E                     SSP2CON2        equ	542	;# 
  1717     021F                     SSP2CON3        equ	543	;# 
  1718     028C                     ODCONA          equ	652	;# 
  1719     028D                     ODCONB          equ	653	;# 
  1720     028E                     ODCONC          equ	654	;# 
  1721     0291                     CCPR1           equ	657	;# 
  1722     0291                     CCPR1L          equ	657	;# 
  1723     0292                     CCPR1H          equ	658	;# 
  1724     0293                     CCP1CON         equ	659	;# 
  1725     0294                     CCP1CAP         equ	660	;# 
  1726     0295                     CCPR2           equ	661	;# 
  1727     0295                     CCPR2L          equ	661	;# 
  1728     0296                     CCPR2H          equ	662	;# 
  1729     0297                     CCP2CON         equ	663	;# 
  1730     0298                     CCP2CAP         equ	664	;# 
  1731     029F                     CCPTMRS         equ	671	;# 
  1732     030C                     SLRCONA         equ	780	;# 
  1733     030D                     SLRCONB         equ	781	;# 
  1734     030E                     SLRCONC         equ	782	;# 
  1735     0311                     CCPR3           equ	785	;# 
  1736     0311                     CCPR3L          equ	785	;# 
  1737     0312                     CCPR3H          equ	786	;# 
  1738     0313                     CCP3CON         equ	787	;# 
  1739     0314                     CCP3CAP         equ	788	;# 
  1740     0315                     CCPR4           equ	789	;# 
  1741     0315                     CCPR4L          equ	789	;# 
  1742     0316                     CCPR4H          equ	790	;# 
  1743     0317                     CCP4CON         equ	791	;# 
  1744     0318                     CCP4CAP         equ	792	;# 
  1745     038C                     INLVLA          equ	908	;# 
  1746     038D                     INLVLB          equ	909	;# 
  1747     038E                     INLVLC          equ	910	;# 
  1748     0391                     IOCAP           equ	913	;# 
  1749     0392                     IOCAN           equ	914	;# 
  1750     0393                     IOCAF           equ	915	;# 
  1751     0394                     IOCBP           equ	916	;# 
  1752     0395                     IOCBN           equ	917	;# 
  1753     0396                     IOCBF           equ	918	;# 
  1754     0397                     IOCCP           equ	919	;# 
  1755     0398                     IOCCN           equ	920	;# 
  1756     0399                     IOCCF           equ	921	;# 
  1757     039A                     CLKRCON         equ	922	;# 
  1758     039C                     MDCON           equ	924	;# 
  1759     039D                     MDSRC           equ	925	;# 
  1760     039E                     MDCARH          equ	926	;# 
  1761     039F                     MDCARL          equ	927	;# 
  1762     0411                     TMR3            equ	1041	;# 
  1763     0411                     TMR3L           equ	1041	;# 
  1764     0412                     TMR3H           equ	1042	;# 
  1765     0413                     T3CON           equ	1043	;# 
  1766     0414                     T3GCON          equ	1044	;# 
  1767     0415                     TMR4            equ	1045	;# 
  1768     0416                     PR4             equ	1046	;# 
  1769     0417                     T4CON           equ	1047	;# 
  1770     0418                     TMR5            equ	1048	;# 
  1771     0418                     TMR5L           equ	1048	;# 
  1772     0419                     TMR5H           equ	1049	;# 
  1773     041A                     T5CON           equ	1050	;# 
  1774     041B                     T5GCON          equ	1051	;# 
  1775     041C                     TMR6            equ	1052	;# 
  1776     041D                     PR6             equ	1053	;# 
  1777     041E                     T6CON           equ	1054	;# 
  1778     041F                     CCDCON          equ	1055	;# 
  1779     0498                     NCO1ACC         equ	1176	;# 
  1780     0498                     NCO1ACCL        equ	1176	;# 
  1781     0499                     NCO1ACCH        equ	1177	;# 
  1782     049A                     NCO1ACCU        equ	1178	;# 
  1783     049B                     NCO1INC         equ	1179	;# 
  1784     049B                     NCO1INCL        equ	1179	;# 
  1785     049C                     NCO1INCH        equ	1180	;# 
  1786     049D                     NCO1INCU        equ	1181	;# 
  1787     049E                     NCO1CON         equ	1182	;# 
  1788     049F                     NCO1CLK         equ	1183	;# 
  1789     0617                     PWM5DCL         equ	1559	;# 
  1790     0618                     PWM5DCH         equ	1560	;# 
  1791     0619                     PWM5CON         equ	1561	;# 
  1792     0619                     PWM5CON0        equ	1561	;# 
  1793     061A                     PWM6DCL         equ	1562	;# 
  1794     061B                     PWM6DCH         equ	1563	;# 
  1795     061C                     PWM6CON         equ	1564	;# 
  1796     061C                     PWM6CON0        equ	1564	;# 
  1797     061F                     PWMTMRS         equ	1567	;# 
  1798     0691                     CWG1CLKCON      equ	1681	;# 
  1799     0692                     CWG1DAT         equ	1682	;# 
  1800     0693                     CWG1DBR         equ	1683	;# 
  1801     0694                     CWG1DBF         equ	1684	;# 
  1802     0695                     CWG1CON0        equ	1685	;# 
  1803     0696                     CWG1CON1        equ	1686	;# 
  1804     0697                     CWG1AS0         equ	1687	;# 
  1805     0698                     CWG1AS1         equ	1688	;# 
  1806     0699                     CWG1STR         equ	1689	;# 
  1807     0711                     CWG2CLKCON      equ	1809	;# 
  1808     0712                     CWG2DAT         equ	1810	;# 
  1809     0713                     CWG2DBR         equ	1811	;# 
  1810     0714                     CWG2DBF         equ	1812	;# 
  1811     0715                     CWG2CON0        equ	1813	;# 
  1812     0716                     CWG2CON1        equ	1814	;# 
  1813     0717                     CWG2AS0         equ	1815	;# 
  1814     0718                     CWG2AS1         equ	1816	;# 
  1815     0719                     CWG2STR         equ	1817	;# 
  1816     0891                     NVMADR          equ	2193	;# 
  1817     0891                     EEADR           equ	2193	;# 
  1818     0891                     PMADR           equ	2193	;# 
  1819     0891                     NVMADRL         equ	2193	;# 
  1820     0891                     EEADRL          equ	2193	;# 
  1821     0891                     PMADRL          equ	2193	;# 
  1822     0892                     NVMADRH         equ	2194	;# 
  1823     0892                     EEADRH          equ	2194	;# 
  1824     0892                     PMADRH          equ	2194	;# 
  1825     0893                     NVMDAT          equ	2195	;# 
  1826     0893                     EEDAT           equ	2195	;# 
  1827     0893                     PMDAT           equ	2195	;# 
  1828     0893                     NVMDATL         equ	2195	;# 
  1829     0893                     EEDATL          equ	2195	;# 
  1830     0893                     PMDATL          equ	2195	;# 
  1831     0894                     NVMDATH         equ	2196	;# 
  1832     0894                     EEDATH          equ	2196	;# 
  1833     0894                     PMDATH          equ	2196	;# 
  1834     0895                     NVMCON1         equ	2197	;# 
  1835     0895                     EECON1          equ	2197	;# 
  1836     0895                     PMCON1          equ	2197	;# 
  1837     0896                     NVMCON2         equ	2198	;# 
  1838     0896                     EECON2          equ	2198	;# 
  1839     0896                     PMCON2          equ	2198	;# 
  1840     089B                     PCON0           equ	2203	;# 
  1841     0911                     PMD0            equ	2321	;# 
  1842     0912                     PMD1            equ	2322	;# 
  1843     0913                     PMD2            equ	2323	;# 
  1844     0914                     PMD3            equ	2324	;# 
  1845     0915                     PMD4            equ	2325	;# 
  1846     0916                     PMD5            equ	2326	;# 
  1847     0918                     CPUDOZE         equ	2328	;# 
  1848     0919                     OSCCON1         equ	2329	;# 
  1849     091A                     OSCCON2         equ	2330	;# 
  1850     091B                     OSCCON3         equ	2331	;# 
  1851     091C                     OSCSTAT1        equ	2332	;# 
  1852     091D                     OSCEN           equ	2333	;# 
  1853     091E                     OSCTUNE         equ	2334	;# 
  1854     091F                     OSCFRQ          equ	2335	;# 
  1855     0E0F                     PPSLOCK         equ	3599	;# 
  1856     0E10                     INTPPS          equ	3600	;# 
  1857     0E11                     T0CKIPPS        equ	3601	;# 
  1858     0E12                     T1CKIPPS        equ	3602	;# 
  1859     0E13                     T1GPPS          equ	3603	;# 
  1860     0E14                     CCP1PPS         equ	3604	;# 
  1861     0E15                     CCP2PPS         equ	3605	;# 
  1862     0E16                     CCP3PPS         equ	3606	;# 
  1863     0E17                     CCP4PPS         equ	3607	;# 
  1864     0E18                     CWG1PPS         equ	3608	;# 
  1865     0E19                     CWG2PPS         equ	3609	;# 
  1866     0E1A                     MDCIN1PPS       equ	3610	;# 
  1867     0E1B                     MDCIN2PPS       equ	3611	;# 
  1868     0E1C                     MDMINPPS        equ	3612	;# 
  1869     0E1D                     SSP2CLKPPS      equ	3613	;# 
  1870     0E1E                     SSP2DATPPS      equ	3614	;# 
  1871     0E1F                     SSP2SSPPS       equ	3615	;# 
  1872     0E20                     SSP1CLKPPS      equ	3616	;# 
  1873     0E21                     SSP1DATPPS      equ	3617	;# 
  1874     0E22                     SSP1SSPPS       equ	3618	;# 
  1875     0E24                     RXPPS           equ	3620	;# 
  1876     0E25                     TXPPS           equ	3621	;# 
  1877     0E28                     CLCIN0PPS       equ	3624	;# 
  1878     0E29                     CLCIN1PPS       equ	3625	;# 
  1879     0E2A                     CLCIN2PPS       equ	3626	;# 
  1880     0E2B                     CLCIN3PPS       equ	3627	;# 
  1881     0E2C                     T3CKIPPS        equ	3628	;# 
  1882     0E2D                     T3GPPS          equ	3629	;# 
  1883     0E2E                     T5CKIPPS        equ	3630	;# 
  1884     0E2F                     T5GPPS          equ	3631	;# 
  1885     0E90                     RA0PPS          equ	3728	;# 
  1886     0E91                     RA1PPS          equ	3729	;# 
  1887     0E92                     RA2PPS          equ	3730	;# 
  1888     0E94                     RA4PPS          equ	3732	;# 
  1889     0E95                     RA5PPS          equ	3733	;# 
  1890     0E9C                     RB4PPS          equ	3740	;# 
  1891     0E9D                     RB5PPS          equ	3741	;# 
  1892     0E9E                     RB6PPS          equ	3742	;# 
  1893     0E9F                     RB7PPS          equ	3743	;# 
  1894     0EA0                     RC0PPS          equ	3744	;# 
  1895     0EA1                     RC1PPS          equ	3745	;# 
  1896     0EA2                     RC2PPS          equ	3746	;# 
  1897     0EA3                     RC3PPS          equ	3747	;# 
  1898     0EA4                     RC4PPS          equ	3748	;# 
  1899     0EA5                     RC5PPS          equ	3749	;# 
  1900     0EA6                     RC6PPS          equ	3750	;# 
  1901     0EA7                     RC7PPS          equ	3751	;# 
  1902     0F0F                     CLCDATA         equ	3855	;# 
  1903     0F10                     CLC1CON         equ	3856	;# 
  1904     0F11                     CLC1POL         equ	3857	;# 
  1905     0F12                     CLC1SEL0        equ	3858	;# 
  1906     0F13                     CLC1SEL1        equ	3859	;# 
  1907     0F14                     CLC1SEL2        equ	3860	;# 
  1908     0F15                     CLC1SEL3        equ	3861	;# 
  1909     0F16                     CLC1GLS0        equ	3862	;# 
  1910     0F17                     CLC1GLS1        equ	3863	;# 
  1911     0F18                     CLC1GLS2        equ	3864	;# 
  1912     0F19                     CLC1GLS3        equ	3865	;# 
  1913     0F1A                     CLC2CON         equ	3866	;# 
  1914     0F1B                     CLC2POL         equ	3867	;# 
  1915     0F1C                     CLC2SEL0        equ	3868	;# 
  1916     0F1D                     CLC2SEL1        equ	3869	;# 
  1917     0F1E                     CLC2SEL2        equ	3870	;# 
  1918     0F1F                     CLC2SEL3        equ	3871	;# 
  1919     0F20                     CLC2GLS0        equ	3872	;# 
  1920     0F21                     CLC2GLS1        equ	3873	;# 
  1921     0F22                     CLC2GLS2        equ	3874	;# 
  1922     0F23                     CLC2GLS3        equ	3875	;# 
  1923     0F24                     CLC3CON         equ	3876	;# 
  1924     0F25                     CLC3POL         equ	3877	;# 
  1925     0F26                     CLC3SEL0        equ	3878	;# 
  1926     0F27                     CLC3SEL1        equ	3879	;# 
  1927     0F28                     CLC3SEL2        equ	3880	;# 
  1928     0F29                     CLC3SEL3        equ	3881	;# 
  1929     0F2A                     CLC3GLS0        equ	3882	;# 
  1930     0F2B                     CLC3GLS1        equ	3883	;# 
  1931     0F2C                     CLC3GLS2        equ	3884	;# 
  1932     0F2D                     CLC3GLS3        equ	3885	;# 
  1933     0F2E                     CLC4CON         equ	3886	;# 
  1934     0F2F                     CLC4POL         equ	3887	;# 
  1935     0F30                     CLC4SEL0        equ	3888	;# 
  1936     0F31                     CLC4SEL1        equ	3889	;# 
  1937     0F32                     CLC4SEL2        equ	3890	;# 
  1938     0F33                     CLC4SEL3        equ	3891	;# 
  1939     0F34                     CLC4GLS0        equ	3892	;# 
  1940     0F35                     CLC4GLS1        equ	3893	;# 
  1941     0F36                     CLC4GLS2        equ	3894	;# 
  1942     0F37                     CLC4GLS3        equ	3895	;# 
  1943     0FE4                     STATUS_SHAD     equ	4068	;# 
  1944     0FE5                     WREG_SHAD       equ	4069	;# 
  1945     0FE6                     BSR_SHAD        equ	4070	;# 
  1946     0FE7                     PCLATH_SHAD     equ	4071	;# 
  1947     0FE8                     FSR0L_SHAD      equ	4072	;# 
  1948     0FE9                     FSR0H_SHAD      equ	4073	;# 
  1949     0FEA                     FSR1L_SHAD      equ	4074	;# 
  1950     0FEB                     FSR1H_SHAD      equ	4075	;# 
  1951     0FED                     STKPTR          equ	4077	;# 
  1952     0FEE                     TOSL            equ	4078	;# 
  1953     0FEF                     TOSH            equ	4079	;# 
  1954     0000                     INDF0           equ	0	;# 
  1955     0001                     INDF1           equ	1	;# 
  1956     0002                     PCL             equ	2	;# 
  1957     0003                     STATUS          equ	3	;# 
  1958     0004                     FSR0L           equ	4	;# 
  1959     0005                     FSR0H           equ	5	;# 
  1960     0006                     FSR1L           equ	6	;# 
  1961     0007                     FSR1H           equ	7	;# 
  1962     0008                     BSR             equ	8	;# 
  1963     0009                     WREG            equ	9	;# 
  1964     000A                     PCLATH          equ	10	;# 
  1965     000B                     INTCON          equ	11	;# 
  1966     000C                     PORTA           equ	12	;# 
  1967     000D                     PORTB           equ	13	;# 
  1968     000E                     PORTC           equ	14	;# 
  1969     0010                     PIR0            equ	16	;# 
  1970     0011                     PIR1            equ	17	;# 
  1971     0012                     PIR2            equ	18	;# 
  1972     0013                     PIR3            equ	19	;# 
  1973     0014                     PIR4            equ	20	;# 
  1974     0015                     TMR0L           equ	21	;# 
  1975     0015                     TMR0            equ	21	;# 
  1976     0016                     TMR0H           equ	22	;# 
  1977     0016                     PR0             equ	22	;# 
  1978     0017                     T0CON0          equ	23	;# 
  1979     0018                     T0CON1          equ	24	;# 
  1980     0019                     TMR1            equ	25	;# 
  1981     0019                     TMR1L           equ	25	;# 
  1982     001A                     TMR1H           equ	26	;# 
  1983     001B                     T1CON           equ	27	;# 
  1984     001C                     T1GCON          equ	28	;# 
  1985     001D                     TMR2            equ	29	;# 
  1986     001E                     PR2             equ	30	;# 
  1987     001F                     T2CON           equ	31	;# 
  1988     008C                     TRISA           equ	140	;# 
  1989     008D                     TRISB           equ	141	;# 
  1990     008E                     TRISC           equ	142	;# 
  1991     0090                     PIE0            equ	144	;# 
  1992     0091                     PIE1            equ	145	;# 
  1993     0092                     PIE2            equ	146	;# 
  1994     0093                     PIE3            equ	147	;# 
  1995     0094                     PIE4            equ	148	;# 
  1996     0097                     WDTCON          equ	151	;# 
  1997     009B                     ADRES           equ	155	;# 
  1998     009B                     ADRESL          equ	155	;# 
  1999     009C                     ADRESH          equ	156	;# 
  2000     009D                     ADCON0          equ	157	;# 
  2001     009E                     ADCON1          equ	158	;# 
  2002     009F                     ADACT           equ	159	;# 
  2003     010C                     LATA            equ	268	;# 
  2004     010D                     LATB            equ	269	;# 
  2005     010E                     LATC            equ	270	;# 
  2006     0111                     CM1CON0         equ	273	;# 
  2007     0112                     CM1CON1         equ	274	;# 
  2008     0113                     CM2CON0         equ	275	;# 
  2009     0114                     CM2CON1         equ	276	;# 
  2010     0115                     CMOUT           equ	277	;# 
  2011     0116                     BORCON          equ	278	;# 
  2012     0117                     FVRCON          equ	279	;# 
  2013     0118                     DACCON0         equ	280	;# 
  2014     0119                     DACCON1         equ	281	;# 
  2015     018C                     ANSELA          equ	396	;# 
  2016     018D                     ANSELB          equ	397	;# 
  2017     018E                     ANSELC          equ	398	;# 
  2018     0197                     VREGCON         equ	407	;# 
  2019     0199                     RC1REG          equ	409	;# 
  2020     0199                     RCREG           equ	409	;# 
  2021     0199                     RCREG1          equ	409	;# 
  2022     019A                     TX1REG          equ	410	;# 
  2023     019A                     TXREG1          equ	410	;# 
  2024     019A                     TXREG           equ	410	;# 
  2025     019B                     SP1BRG          equ	411	;# 
  2026     019B                     SPBRG           equ	411	;# 
  2027     019B                     SP1BRGL         equ	411	;# 
  2028     019B                     SPBRG1          equ	411	;# 
  2029     019B                     SPBRGL          equ	411	;# 
  2030     019C                     SP1BRGH         equ	412	;# 
  2031     019C                     SPBRGH          equ	412	;# 
  2032     019C                     SPBRGH1         equ	412	;# 
  2033     019D                     RC1STA          equ	413	;# 
  2034     019D                     RCSTA1          equ	413	;# 
  2035     019D                     RCSTA           equ	413	;# 
  2036     019E                     TX1STA          equ	414	;# 
  2037     019E                     TXSTA1          equ	414	;# 
  2038     019E                     TXSTA           equ	414	;# 
  2039     019F                     BAUD1CON        equ	415	;# 
  2040     019F                     BAUDCON1        equ	415	;# 
  2041     019F                     BAUDCTL1        equ	415	;# 
  2042     019F                     BAUDCON         equ	415	;# 
  2043     019F                     BAUDCTL         equ	415	;# 
  2044     020C                     WPUA            equ	524	;# 
  2045     020D                     WPUB            equ	525	;# 
  2046     020E                     WPUC            equ	526	;# 
  2047     0211                     SSP1BUF         equ	529	;# 
  2048     0211                     SSPBUF          equ	529	;# 
  2049     0212                     SSP1ADD         equ	530	;# 
  2050     0212                     SSPADD          equ	530	;# 
  2051     0213                     SSP1MSK         equ	531	;# 
  2052     0213                     SSPMSK          equ	531	;# 
  2053     0214                     SSP1STAT        equ	532	;# 
  2054     0214                     SSPSTAT         equ	532	;# 
  2055     0215                     SSP1CON1        equ	533	;# 
  2056     0215                     SSPCON          equ	533	;# 
  2057     0215                     SSPCON1         equ	533	;# 
  2058     0215                     SSP1CON         equ	533	;# 
  2059     0216                     SSP1CON2        equ	534	;# 
  2060     0216                     SSPCON2         equ	534	;# 
  2061     0217                     SSP1CON3        equ	535	;# 
  2062     0217                     SSPCON3         equ	535	;# 
  2063     0219                     SSP2BUF         equ	537	;# 
  2064     021A                     SSP2ADD         equ	538	;# 
  2065     021B                     SSP2MSK         equ	539	;# 
  2066     021C                     SSP2STAT        equ	540	;# 
  2067     021D                     SSP2CON1        equ	541	;# 
  2068     021D                     SSP2CON         equ	541	;# 
  2069     021E                     SSP2CON2        equ	542	;# 
  2070     021F                     SSP2CON3        equ	543	;# 
  2071     028C                     ODCONA          equ	652	;# 
  2072     028D                     ODCONB          equ	653	;# 
  2073     028E                     ODCONC          equ	654	;# 
  2074     0291                     CCPR1           equ	657	;# 
  2075     0291                     CCPR1L          equ	657	;# 
  2076     0292                     CCPR1H          equ	658	;# 
  2077     0293                     CCP1CON         equ	659	;# 
  2078     0294                     CCP1CAP         equ	660	;# 
  2079     0295                     CCPR2           equ	661	;# 
  2080     0295                     CCPR2L          equ	661	;# 
  2081     0296                     CCPR2H          equ	662	;# 
  2082     0297                     CCP2CON         equ	663	;# 
  2083     0298                     CCP2CAP         equ	664	;# 
  2084     029F                     CCPTMRS         equ	671	;# 
  2085     030C                     SLRCONA         equ	780	;# 
  2086     030D                     SLRCONB         equ	781	;# 
  2087     030E                     SLRCONC         equ	782	;# 
  2088     0311                     CCPR3           equ	785	;# 
  2089     0311                     CCPR3L          equ	785	;# 
  2090     0312                     CCPR3H          equ	786	;# 
  2091     0313                     CCP3CON         equ	787	;# 
  2092     0314                     CCP3CAP         equ	788	;# 
  2093     0315                     CCPR4           equ	789	;# 
  2094     0315                     CCPR4L          equ	789	;# 
  2095     0316                     CCPR4H          equ	790	;# 
  2096     0317                     CCP4CON         equ	791	;# 
  2097     0318                     CCP4CAP         equ	792	;# 
  2098     038C                     INLVLA          equ	908	;# 
  2099     038D                     INLVLB          equ	909	;# 
  2100     038E                     INLVLC          equ	910	;# 
  2101     0391                     IOCAP           equ	913	;# 
  2102     0392                     IOCAN           equ	914	;# 
  2103     0393                     IOCAF           equ	915	;# 
  2104     0394                     IOCBP           equ	916	;# 
  2105     0395                     IOCBN           equ	917	;# 
  2106     0396                     IOCBF           equ	918	;# 
  2107     0397                     IOCCP           equ	919	;# 
  2108     0398                     IOCCN           equ	920	;# 
  2109     0399                     IOCCF           equ	921	;# 
  2110     039A                     CLKRCON         equ	922	;# 
  2111     039C                     MDCON           equ	924	;# 
  2112     039D                     MDSRC           equ	925	;# 
  2113     039E                     MDCARH          equ	926	;# 
  2114     039F                     MDCARL          equ	927	;# 
  2115     0411                     TMR3            equ	1041	;# 
  2116     0411                     TMR3L           equ	1041	;# 
  2117     0412                     TMR3H           equ	1042	;# 
  2118     0413                     T3CON           equ	1043	;# 
  2119     0414                     T3GCON          equ	1044	;# 
  2120     0415                     TMR4            equ	1045	;# 
  2121     0416                     PR4             equ	1046	;# 
  2122     0417                     T4CON           equ	1047	;# 
  2123     0418                     TMR5            equ	1048	;# 
  2124     0418                     TMR5L           equ	1048	;# 
  2125     0419                     TMR5H           equ	1049	;# 
  2126     041A                     T5CON           equ	1050	;# 
  2127     041B                     T5GCON          equ	1051	;# 
  2128     041C                     TMR6            equ	1052	;# 
  2129     041D                     PR6             equ	1053	;# 
  2130     041E                     T6CON           equ	1054	;# 
  2131     041F                     CCDCON          equ	1055	;# 
  2132     0498                     NCO1ACC         equ	1176	;# 
  2133     0498                     NCO1ACCL        equ	1176	;# 
  2134     0499                     NCO1ACCH        equ	1177	;# 
  2135     049A                     NCO1ACCU        equ	1178	;# 
  2136     049B                     NCO1INC         equ	1179	;# 
  2137     049B                     NCO1INCL        equ	1179	;# 
  2138     049C                     NCO1INCH        equ	1180	;# 
  2139     049D                     NCO1INCU        equ	1181	;# 
  2140     049E                     NCO1CON         equ	1182	;# 
  2141     049F                     NCO1CLK         equ	1183	;# 
  2142     0617                     PWM5DCL         equ	1559	;# 
  2143     0618                     PWM5DCH         equ	1560	;# 
  2144     0619                     PWM5CON         equ	1561	;# 
  2145     0619                     PWM5CON0        equ	1561	;# 
  2146     061A                     PWM6DCL         equ	1562	;# 
  2147     061B                     PWM6DCH         equ	1563	;# 
  2148     061C                     PWM6CON         equ	1564	;# 
  2149     061C                     PWM6CON0        equ	1564	;# 
  2150     061F                     PWMTMRS         equ	1567	;# 
  2151     0691                     CWG1CLKCON      equ	1681	;# 
  2152     0692                     CWG1DAT         equ	1682	;# 
  2153     0693                     CWG1DBR         equ	1683	;# 
  2154     0694                     CWG1DBF         equ	1684	;# 
  2155     0695                     CWG1CON0        equ	1685	;# 
  2156     0696                     CWG1CON1        equ	1686	;# 
  2157     0697                     CWG1AS0         equ	1687	;# 
  2158     0698                     CWG1AS1         equ	1688	;# 
  2159     0699                     CWG1STR         equ	1689	;# 
  2160     0711                     CWG2CLKCON      equ	1809	;# 
  2161     0712                     CWG2DAT         equ	1810	;# 
  2162     0713                     CWG2DBR         equ	1811	;# 
  2163     0714                     CWG2DBF         equ	1812	;# 
  2164     0715                     CWG2CON0        equ	1813	;# 
  2165     0716                     CWG2CON1        equ	1814	;# 
  2166     0717                     CWG2AS0         equ	1815	;# 
  2167     0718                     CWG2AS1         equ	1816	;# 
  2168     0719                     CWG2STR         equ	1817	;# 
  2169     0891                     NVMADR          equ	2193	;# 
  2170     0891                     EEADR           equ	2193	;# 
  2171     0891                     PMADR           equ	2193	;# 
  2172     0891                     NVMADRL         equ	2193	;# 
  2173     0891                     EEADRL          equ	2193	;# 
  2174     0891                     PMADRL          equ	2193	;# 
  2175     0892                     NVMADRH         equ	2194	;# 
  2176     0892                     EEADRH          equ	2194	;# 
  2177     0892                     PMADRH          equ	2194	;# 
  2178     0893                     NVMDAT          equ	2195	;# 
  2179     0893                     EEDAT           equ	2195	;# 
  2180     0893                     PMDAT           equ	2195	;# 
  2181     0893                     NVMDATL         equ	2195	;# 
  2182     0893                     EEDATL          equ	2195	;# 
  2183     0893                     PMDATL          equ	2195	;# 
  2184     0894                     NVMDATH         equ	2196	;# 
  2185     0894                     EEDATH          equ	2196	;# 
  2186     0894                     PMDATH          equ	2196	;# 
  2187     0895                     NVMCON1         equ	2197	;# 
  2188     0895                     EECON1          equ	2197	;# 
  2189     0895                     PMCON1          equ	2197	;# 
  2190     0896                     NVMCON2         equ	2198	;# 
  2191     0896                     EECON2          equ	2198	;# 
  2192     0896                     PMCON2          equ	2198	;# 
  2193     089B                     PCON0           equ	2203	;# 
  2194     0911                     PMD0            equ	2321	;# 
  2195     0912                     PMD1            equ	2322	;# 
  2196     0913                     PMD2            equ	2323	;# 
  2197     0914                     PMD3            equ	2324	;# 
  2198     0915                     PMD4            equ	2325	;# 
  2199     0916                     PMD5            equ	2326	;# 
  2200     0918                     CPUDOZE         equ	2328	;# 
  2201     0919                     OSCCON1         equ	2329	;# 
  2202     091A                     OSCCON2         equ	2330	;# 
  2203     091B                     OSCCON3         equ	2331	;# 
  2204     091C                     OSCSTAT1        equ	2332	;# 
  2205     091D                     OSCEN           equ	2333	;# 
  2206     091E                     OSCTUNE         equ	2334	;# 
  2207     091F                     OSCFRQ          equ	2335	;# 
  2208     0E0F                     PPSLOCK         equ	3599	;# 
  2209     0E10                     INTPPS          equ	3600	;# 
  2210     0E11                     T0CKIPPS        equ	3601	;# 
  2211     0E12                     T1CKIPPS        equ	3602	;# 
  2212     0E13                     T1GPPS          equ	3603	;# 
  2213     0E14                     CCP1PPS         equ	3604	;# 
  2214     0E15                     CCP2PPS         equ	3605	;# 
  2215     0E16                     CCP3PPS         equ	3606	;# 
  2216     0E17                     CCP4PPS         equ	3607	;# 
  2217     0E18                     CWG1PPS         equ	3608	;# 
  2218     0E19                     CWG2PPS         equ	3609	;# 
  2219     0E1A                     MDCIN1PPS       equ	3610	;# 
  2220     0E1B                     MDCIN2PPS       equ	3611	;# 
  2221     0E1C                     MDMINPPS        equ	3612	;# 
  2222     0E1D                     SSP2CLKPPS      equ	3613	;# 
  2223     0E1E                     SSP2DATPPS      equ	3614	;# 
  2224     0E1F                     SSP2SSPPS       equ	3615	;# 
  2225     0E20                     SSP1CLKPPS      equ	3616	;# 
  2226     0E21                     SSP1DATPPS      equ	3617	;# 
  2227     0E22                     SSP1SSPPS       equ	3618	;# 
  2228     0E24                     RXPPS           equ	3620	;# 
  2229     0E25                     TXPPS           equ	3621	;# 
  2230     0E28                     CLCIN0PPS       equ	3624	;# 
  2231     0E29                     CLCIN1PPS       equ	3625	;# 
  2232     0E2A                     CLCIN2PPS       equ	3626	;# 
  2233     0E2B                     CLCIN3PPS       equ	3627	;# 
  2234     0E2C                     T3CKIPPS        equ	3628	;# 
  2235     0E2D                     T3GPPS          equ	3629	;# 
  2236     0E2E                     T5CKIPPS        equ	3630	;# 
  2237     0E2F                     T5GPPS          equ	3631	;# 
  2238     0E90                     RA0PPS          equ	3728	;# 
  2239     0E91                     RA1PPS          equ	3729	;# 
  2240     0E92                     RA2PPS          equ	3730	;# 
  2241     0E94                     RA4PPS          equ	3732	;# 
  2242     0E95                     RA5PPS          equ	3733	;# 
  2243     0E9C                     RB4PPS          equ	3740	;# 
  2244     0E9D                     RB5PPS          equ	3741	;# 
  2245     0E9E                     RB6PPS          equ	3742	;# 
  2246     0E9F                     RB7PPS          equ	3743	;# 
  2247     0EA0                     RC0PPS          equ	3744	;# 
  2248     0EA1                     RC1PPS          equ	3745	;# 
  2249     0EA2                     RC2PPS          equ	3746	;# 
  2250     0EA3                     RC3PPS          equ	3747	;# 
  2251     0EA4                     RC4PPS          equ	3748	;# 
  2252     0EA5                     RC5PPS          equ	3749	;# 
  2253     0EA6                     RC6PPS          equ	3750	;# 
  2254     0EA7                     RC7PPS          equ	3751	;# 
  2255     0F0F                     CLCDATA         equ	3855	;# 
  2256     0F10                     CLC1CON         equ	3856	;# 
  2257     0F11                     CLC1POL         equ	3857	;# 
  2258     0F12                     CLC1SEL0        equ	3858	;# 
  2259     0F13                     CLC1SEL1        equ	3859	;# 
  2260     0F14                     CLC1SEL2        equ	3860	;# 
  2261     0F15                     CLC1SEL3        equ	3861	;# 
  2262     0F16                     CLC1GLS0        equ	3862	;# 
  2263     0F17                     CLC1GLS1        equ	3863	;# 
  2264     0F18                     CLC1GLS2        equ	3864	;# 
  2265     0F19                     CLC1GLS3        equ	3865	;# 
  2266     0F1A                     CLC2CON         equ	3866	;# 
  2267     0F1B                     CLC2POL         equ	3867	;# 
  2268     0F1C                     CLC2SEL0        equ	3868	;# 
  2269     0F1D                     CLC2SEL1        equ	3869	;# 
  2270     0F1E                     CLC2SEL2        equ	3870	;# 
  2271     0F1F                     CLC2SEL3        equ	3871	;# 
  2272     0F20                     CLC2GLS0        equ	3872	;# 
  2273     0F21                     CLC2GLS1        equ	3873	;# 
  2274     0F22                     CLC2GLS2        equ	3874	;# 
  2275     0F23                     CLC2GLS3        equ	3875	;# 
  2276     0F24                     CLC3CON         equ	3876	;# 
  2277     0F25                     CLC3POL         equ	3877	;# 
  2278     0F26                     CLC3SEL0        equ	3878	;# 
  2279     0F27                     CLC3SEL1        equ	3879	;# 
  2280     0F28                     CLC3SEL2        equ	3880	;# 
  2281     0F29                     CLC3SEL3        equ	3881	;# 
  2282     0F2A                     CLC3GLS0        equ	3882	;# 
  2283     0F2B                     CLC3GLS1        equ	3883	;# 
  2284     0F2C                     CLC3GLS2        equ	3884	;# 
  2285     0F2D                     CLC3GLS3        equ	3885	;# 
  2286     0F2E                     CLC4CON         equ	3886	;# 
  2287     0F2F                     CLC4POL         equ	3887	;# 
  2288     0F30                     CLC4SEL0        equ	3888	;# 
  2289     0F31                     CLC4SEL1        equ	3889	;# 
  2290     0F32                     CLC4SEL2        equ	3890	;# 
  2291     0F33                     CLC4SEL3        equ	3891	;# 
  2292     0F34                     CLC4GLS0        equ	3892	;# 
  2293     0F35                     CLC4GLS1        equ	3893	;# 
  2294     0F36                     CLC4GLS2        equ	3894	;# 
  2295     0F37                     CLC4GLS3        equ	3895	;# 
  2296     0FE4                     STATUS_SHAD     equ	4068	;# 
  2297     0FE5                     WREG_SHAD       equ	4069	;# 
  2298     0FE6                     BSR_SHAD        equ	4070	;# 
  2299     0FE7                     PCLATH_SHAD     equ	4071	;# 
  2300     0FE8                     FSR0L_SHAD      equ	4072	;# 
  2301     0FE9                     FSR0H_SHAD      equ	4073	;# 
  2302     0FEA                     FSR1L_SHAD      equ	4074	;# 
  2303     0FEB                     FSR1H_SHAD      equ	4075	;# 
  2304     0FED                     STKPTR          equ	4077	;# 
  2305     0FEE                     TOSL            equ	4078	;# 
  2306     0FEF                     TOSH            equ	4079	;# 
  2307     0000                     INDF0           equ	0	;# 
  2308     0001                     INDF1           equ	1	;# 
  2309     0002                     PCL             equ	2	;# 
  2310     0003                     STATUS          equ	3	;# 
  2311     0004                     FSR0L           equ	4	;# 
  2312     0005                     FSR0H           equ	5	;# 
  2313     0006                     FSR1L           equ	6	;# 
  2314     0007                     FSR1H           equ	7	;# 
  2315     0008                     BSR             equ	8	;# 
  2316     0009                     WREG            equ	9	;# 
  2317     000A                     PCLATH          equ	10	;# 
  2318     000B                     INTCON          equ	11	;# 
  2319     000C                     PORTA           equ	12	;# 
  2320     000D                     PORTB           equ	13	;# 
  2321     000E                     PORTC           equ	14	;# 
  2322     0010                     PIR0            equ	16	;# 
  2323     0011                     PIR1            equ	17	;# 
  2324     0012                     PIR2            equ	18	;# 
  2325     0013                     PIR3            equ	19	;# 
  2326     0014                     PIR4            equ	20	;# 
  2327     0015                     TMR0L           equ	21	;# 
  2328     0015                     TMR0            equ	21	;# 
  2329     0016                     TMR0H           equ	22	;# 
  2330     0016                     PR0             equ	22	;# 
  2331     0017                     T0CON0          equ	23	;# 
  2332     0018                     T0CON1          equ	24	;# 
  2333     0019                     TMR1            equ	25	;# 
  2334     0019                     TMR1L           equ	25	;# 
  2335     001A                     TMR1H           equ	26	;# 
  2336     001B                     T1CON           equ	27	;# 
  2337     001C                     T1GCON          equ	28	;# 
  2338     001D                     TMR2            equ	29	;# 
  2339     001E                     PR2             equ	30	;# 
  2340     001F                     T2CON           equ	31	;# 
  2341     008C                     TRISA           equ	140	;# 
  2342     008D                     TRISB           equ	141	;# 
  2343     008E                     TRISC           equ	142	;# 
  2344     0090                     PIE0            equ	144	;# 
  2345     0091                     PIE1            equ	145	;# 
  2346     0092                     PIE2            equ	146	;# 
  2347     0093                     PIE3            equ	147	;# 
  2348     0094                     PIE4            equ	148	;# 
  2349     0097                     WDTCON          equ	151	;# 
  2350     009B                     ADRES           equ	155	;# 
  2351     009B                     ADRESL          equ	155	;# 
  2352     009C                     ADRESH          equ	156	;# 
  2353     009D                     ADCON0          equ	157	;# 
  2354     009E                     ADCON1          equ	158	;# 
  2355     009F                     ADACT           equ	159	;# 
  2356     010C                     LATA            equ	268	;# 
  2357     010D                     LATB            equ	269	;# 
  2358     010E                     LATC            equ	270	;# 
  2359     0111                     CM1CON0         equ	273	;# 
  2360     0112                     CM1CON1         equ	274	;# 
  2361     0113                     CM2CON0         equ	275	;# 
  2362     0114                     CM2CON1         equ	276	;# 
  2363     0115                     CMOUT           equ	277	;# 
  2364     0116                     BORCON          equ	278	;# 
  2365     0117                     FVRCON          equ	279	;# 
  2366     0118                     DACCON0         equ	280	;# 
  2367     0119                     DACCON1         equ	281	;# 
  2368     018C                     ANSELA          equ	396	;# 
  2369     018D                     ANSELB          equ	397	;# 
  2370     018E                     ANSELC          equ	398	;# 
  2371     0197                     VREGCON         equ	407	;# 
  2372     0199                     RC1REG          equ	409	;# 
  2373     0199                     RCREG           equ	409	;# 
  2374     0199                     RCREG1          equ	409	;# 
  2375     019A                     TX1REG          equ	410	;# 
  2376     019A                     TXREG1          equ	410	;# 
  2377     019A                     TXREG           equ	410	;# 
  2378     019B                     SP1BRG          equ	411	;# 
  2379     019B                     SPBRG           equ	411	;# 
  2380     019B                     SP1BRGL         equ	411	;# 
  2381     019B                     SPBRG1          equ	411	;# 
  2382     019B                     SPBRGL          equ	411	;# 
  2383     019C                     SP1BRGH         equ	412	;# 
  2384     019C                     SPBRGH          equ	412	;# 
  2385     019C                     SPBRGH1         equ	412	;# 
  2386     019D                     RC1STA          equ	413	;# 
  2387     019D                     RCSTA1          equ	413	;# 
  2388     019D                     RCSTA           equ	413	;# 
  2389     019E                     TX1STA          equ	414	;# 
  2390     019E                     TXSTA1          equ	414	;# 
  2391     019E                     TXSTA           equ	414	;# 
  2392     019F                     BAUD1CON        equ	415	;# 
  2393     019F                     BAUDCON1        equ	415	;# 
  2394     019F                     BAUDCTL1        equ	415	;# 
  2395     019F                     BAUDCON         equ	415	;# 
  2396     019F                     BAUDCTL         equ	415	;# 
  2397     020C                     WPUA            equ	524	;# 
  2398     020D                     WPUB            equ	525	;# 
  2399     020E                     WPUC            equ	526	;# 
  2400     0211                     SSP1BUF         equ	529	;# 
  2401     0211                     SSPBUF          equ	529	;# 
  2402     0212                     SSP1ADD         equ	530	;# 
  2403     0212                     SSPADD          equ	530	;# 
  2404     0213                     SSP1MSK         equ	531	;# 
  2405     0213                     SSPMSK          equ	531	;# 
  2406     0214                     SSP1STAT        equ	532	;# 
  2407     0214                     SSPSTAT         equ	532	;# 
  2408     0215                     SSP1CON1        equ	533	;# 
  2409     0215                     SSPCON          equ	533	;# 
  2410     0215                     SSPCON1         equ	533	;# 
  2411     0215                     SSP1CON         equ	533	;# 
  2412     0216                     SSP1CON2        equ	534	;# 
  2413     0216                     SSPCON2         equ	534	;# 
  2414     0217                     SSP1CON3        equ	535	;# 
  2415     0217                     SSPCON3         equ	535	;# 
  2416     0219                     SSP2BUF         equ	537	;# 
  2417     021A                     SSP2ADD         equ	538	;# 
  2418     021B                     SSP2MSK         equ	539	;# 
  2419     021C                     SSP2STAT        equ	540	;# 
  2420     021D                     SSP2CON1        equ	541	;# 
  2421     021D                     SSP2CON         equ	541	;# 
  2422     021E                     SSP2CON2        equ	542	;# 
  2423     021F                     SSP2CON3        equ	543	;# 
  2424     028C                     ODCONA          equ	652	;# 
  2425     028D                     ODCONB          equ	653	;# 
  2426     028E                     ODCONC          equ	654	;# 
  2427     0291                     CCPR1           equ	657	;# 
  2428     0291                     CCPR1L          equ	657	;# 
  2429     0292                     CCPR1H          equ	658	;# 
  2430     0293                     CCP1CON         equ	659	;# 
  2431     0294                     CCP1CAP         equ	660	;# 
  2432     0295                     CCPR2           equ	661	;# 
  2433     0295                     CCPR2L          equ	661	;# 
  2434     0296                     CCPR2H          equ	662	;# 
  2435     0297                     CCP2CON         equ	663	;# 
  2436     0298                     CCP2CAP         equ	664	;# 
  2437     029F                     CCPTMRS         equ	671	;# 
  2438     030C                     SLRCONA         equ	780	;# 
  2439     030D                     SLRCONB         equ	781	;# 
  2440     030E                     SLRCONC         equ	782	;# 
  2441     0311                     CCPR3           equ	785	;# 
  2442     0311                     CCPR3L          equ	785	;# 
  2443     0312                     CCPR3H          equ	786	;# 
  2444     0313                     CCP3CON         equ	787	;# 
  2445     0314                     CCP3CAP         equ	788	;# 
  2446     0315                     CCPR4           equ	789	;# 
  2447     0315                     CCPR4L          equ	789	;# 
  2448     0316                     CCPR4H          equ	790	;# 
  2449     0317                     CCP4CON         equ	791	;# 
  2450     0318                     CCP4CAP         equ	792	;# 
  2451     038C                     INLVLA          equ	908	;# 
  2452     038D                     INLVLB          equ	909	;# 
  2453     038E                     INLVLC          equ	910	;# 
  2454     0391                     IOCAP           equ	913	;# 
  2455     0392                     IOCAN           equ	914	;# 
  2456     0393                     IOCAF           equ	915	;# 
  2457     0394                     IOCBP           equ	916	;# 
  2458     0395                     IOCBN           equ	917	;# 
  2459     0396                     IOCBF           equ	918	;# 
  2460     0397                     IOCCP           equ	919	;# 
  2461     0398                     IOCCN           equ	920	;# 
  2462     0399                     IOCCF           equ	921	;# 
  2463     039A                     CLKRCON         equ	922	;# 
  2464     039C                     MDCON           equ	924	;# 
  2465     039D                     MDSRC           equ	925	;# 
  2466     039E                     MDCARH          equ	926	;# 
  2467     039F                     MDCARL          equ	927	;# 
  2468     0411                     TMR3            equ	1041	;# 
  2469     0411                     TMR3L           equ	1041	;# 
  2470     0412                     TMR3H           equ	1042	;# 
  2471     0413                     T3CON           equ	1043	;# 
  2472     0414                     T3GCON          equ	1044	;# 
  2473     0415                     TMR4            equ	1045	;# 
  2474     0416                     PR4             equ	1046	;# 
  2475     0417                     T4CON           equ	1047	;# 
  2476     0418                     TMR5            equ	1048	;# 
  2477     0418                     TMR5L           equ	1048	;# 
  2478     0419                     TMR5H           equ	1049	;# 
  2479     041A                     T5CON           equ	1050	;# 
  2480     041B                     T5GCON          equ	1051	;# 
  2481     041C                     TMR6            equ	1052	;# 
  2482     041D                     PR6             equ	1053	;# 
  2483     041E                     T6CON           equ	1054	;# 
  2484     041F                     CCDCON          equ	1055	;# 
  2485     0498                     NCO1ACC         equ	1176	;# 
  2486     0498                     NCO1ACCL        equ	1176	;# 
  2487     0499                     NCO1ACCH        equ	1177	;# 
  2488     049A                     NCO1ACCU        equ	1178	;# 
  2489     049B                     NCO1INC         equ	1179	;# 
  2490     049B                     NCO1INCL        equ	1179	;# 
  2491     049C                     NCO1INCH        equ	1180	;# 
  2492     049D                     NCO1INCU        equ	1181	;# 
  2493     049E                     NCO1CON         equ	1182	;# 
  2494     049F                     NCO1CLK         equ	1183	;# 
  2495     0617                     PWM5DCL         equ	1559	;# 
  2496     0618                     PWM5DCH         equ	1560	;# 
  2497     0619                     PWM5CON         equ	1561	;# 
  2498     0619                     PWM5CON0        equ	1561	;# 
  2499     061A                     PWM6DCL         equ	1562	;# 
  2500     061B                     PWM6DCH         equ	1563	;# 
  2501     061C                     PWM6CON         equ	1564	;# 
  2502     061C                     PWM6CON0        equ	1564	;# 
  2503     061F                     PWMTMRS         equ	1567	;# 
  2504     0691                     CWG1CLKCON      equ	1681	;# 
  2505     0692                     CWG1DAT         equ	1682	;# 
  2506     0693                     CWG1DBR         equ	1683	;# 
  2507     0694                     CWG1DBF         equ	1684	;# 
  2508     0695                     CWG1CON0        equ	1685	;# 
  2509     0696                     CWG1CON1        equ	1686	;# 
  2510     0697                     CWG1AS0         equ	1687	;# 
  2511     0698                     CWG1AS1         equ	1688	;# 
  2512     0699                     CWG1STR         equ	1689	;# 
  2513     0711                     CWG2CLKCON      equ	1809	;# 
  2514     0712                     CWG2DAT         equ	1810	;# 
  2515     0713                     CWG2DBR         equ	1811	;# 
  2516     0714                     CWG2DBF         equ	1812	;# 
  2517     0715                     CWG2CON0        equ	1813	;# 
  2518     0716                     CWG2CON1        equ	1814	;# 
  2519     0717                     CWG2AS0         equ	1815	;# 
  2520     0718                     CWG2AS1         equ	1816	;# 
  2521     0719                     CWG2STR         equ	1817	;# 
  2522     0891                     NVMADR          equ	2193	;# 
  2523     0891                     EEADR           equ	2193	;# 
  2524     0891                     PMADR           equ	2193	;# 
  2525     0891                     NVMADRL         equ	2193	;# 
  2526     0891                     EEADRL          equ	2193	;# 
  2527     0891                     PMADRL          equ	2193	;# 
  2528     0892                     NVMADRH         equ	2194	;# 
  2529     0892                     EEADRH          equ	2194	;# 
  2530     0892                     PMADRH          equ	2194	;# 
  2531     0893                     NVMDAT          equ	2195	;# 
  2532     0893                     EEDAT           equ	2195	;# 
  2533     0893                     PMDAT           equ	2195	;# 
  2534     0893                     NVMDATL         equ	2195	;# 
  2535     0893                     EEDATL          equ	2195	;# 
  2536     0893                     PMDATL          equ	2195	;# 
  2537     0894                     NVMDATH         equ	2196	;# 
  2538     0894                     EEDATH          equ	2196	;# 
  2539     0894                     PMDATH          equ	2196	;# 
  2540     0895                     NVMCON1         equ	2197	;# 
  2541     0895                     EECON1          equ	2197	;# 
  2542     0895                     PMCON1          equ	2197	;# 
  2543     0896                     NVMCON2         equ	2198	;# 
  2544     0896                     EECON2          equ	2198	;# 
  2545     0896                     PMCON2          equ	2198	;# 
  2546     089B                     PCON0           equ	2203	;# 
  2547     0911                     PMD0            equ	2321	;# 
  2548     0912                     PMD1            equ	2322	;# 
  2549     0913                     PMD2            equ	2323	;# 
  2550     0914                     PMD3            equ	2324	;# 
  2551     0915                     PMD4            equ	2325	;# 
  2552     0916                     PMD5            equ	2326	;# 
  2553     0918                     CPUDOZE         equ	2328	;# 
  2554     0919                     OSCCON1         equ	2329	;# 
  2555     091A                     OSCCON2         equ	2330	;# 
  2556     091B                     OSCCON3         equ	2331	;# 
  2557     091C                     OSCSTAT1        equ	2332	;# 
  2558     091D                     OSCEN           equ	2333	;# 
  2559     091E                     OSCTUNE         equ	2334	;# 
  2560     091F                     OSCFRQ          equ	2335	;# 
  2561     0E0F                     PPSLOCK         equ	3599	;# 
  2562     0E10                     INTPPS          equ	3600	;# 
  2563     0E11                     T0CKIPPS        equ	3601	;# 
  2564     0E12                     T1CKIPPS        equ	3602	;# 
  2565     0E13                     T1GPPS          equ	3603	;# 
  2566     0E14                     CCP1PPS         equ	3604	;# 
  2567     0E15                     CCP2PPS         equ	3605	;# 
  2568     0E16                     CCP3PPS         equ	3606	;# 
  2569     0E17                     CCP4PPS         equ	3607	;# 
  2570     0E18                     CWG1PPS         equ	3608	;# 
  2571     0E19                     CWG2PPS         equ	3609	;# 
  2572     0E1A                     MDCIN1PPS       equ	3610	;# 
  2573     0E1B                     MDCIN2PPS       equ	3611	;# 
  2574     0E1C                     MDMINPPS        equ	3612	;# 
  2575     0E1D                     SSP2CLKPPS      equ	3613	;# 
  2576     0E1E                     SSP2DATPPS      equ	3614	;# 
  2577     0E1F                     SSP2SSPPS       equ	3615	;# 
  2578     0E20                     SSP1CLKPPS      equ	3616	;# 
  2579     0E21                     SSP1DATPPS      equ	3617	;# 
  2580     0E22                     SSP1SSPPS       equ	3618	;# 
  2581     0E24                     RXPPS           equ	3620	;# 
  2582     0E25                     TXPPS           equ	3621	;# 
  2583     0E28                     CLCIN0PPS       equ	3624	;# 
  2584     0E29                     CLCIN1PPS       equ	3625	;# 
  2585     0E2A                     CLCIN2PPS       equ	3626	;# 
  2586     0E2B                     CLCIN3PPS       equ	3627	;# 
  2587     0E2C                     T3CKIPPS        equ	3628	;# 
  2588     0E2D                     T3GPPS          equ	3629	;# 
  2589     0E2E                     T5CKIPPS        equ	3630	;# 
  2590     0E2F                     T5GPPS          equ	3631	;# 
  2591     0E90                     RA0PPS          equ	3728	;# 
  2592     0E91                     RA1PPS          equ	3729	;# 
  2593     0E92                     RA2PPS          equ	3730	;# 
  2594     0E94                     RA4PPS          equ	3732	;# 
  2595     0E95                     RA5PPS          equ	3733	;# 
  2596     0E9C                     RB4PPS          equ	3740	;# 
  2597     0E9D                     RB5PPS          equ	3741	;# 
  2598     0E9E                     RB6PPS          equ	3742	;# 
  2599     0E9F                     RB7PPS          equ	3743	;# 
  2600     0EA0                     RC0PPS          equ	3744	;# 
  2601     0EA1                     RC1PPS          equ	3745	;# 
  2602     0EA2                     RC2PPS          equ	3746	;# 
  2603     0EA3                     RC3PPS          equ	3747	;# 
  2604     0EA4                     RC4PPS          equ	3748	;# 
  2605     0EA5                     RC5PPS          equ	3749	;# 
  2606     0EA6                     RC6PPS          equ	3750	;# 
  2607     0EA7                     RC7PPS          equ	3751	;# 
  2608     0F0F                     CLCDATA         equ	3855	;# 
  2609     0F10                     CLC1CON         equ	3856	;# 
  2610     0F11                     CLC1POL         equ	3857	;# 
  2611     0F12                     CLC1SEL0        equ	3858	;# 
  2612     0F13                     CLC1SEL1        equ	3859	;# 
  2613     0F14                     CLC1SEL2        equ	3860	;# 
  2614     0F15                     CLC1SEL3        equ	3861	;# 
  2615     0F16                     CLC1GLS0        equ	3862	;# 
  2616     0F17                     CLC1GLS1        equ	3863	;# 
  2617     0F18                     CLC1GLS2        equ	3864	;# 
  2618     0F19                     CLC1GLS3        equ	3865	;# 
  2619     0F1A                     CLC2CON         equ	3866	;# 
  2620     0F1B                     CLC2POL         equ	3867	;# 
  2621     0F1C                     CLC2SEL0        equ	3868	;# 
  2622     0F1D                     CLC2SEL1        equ	3869	;# 
  2623     0F1E                     CLC2SEL2        equ	3870	;# 
  2624     0F1F                     CLC2SEL3        equ	3871	;# 
  2625     0F20                     CLC2GLS0        equ	3872	;# 
  2626     0F21                     CLC2GLS1        equ	3873	;# 
  2627     0F22                     CLC2GLS2        equ	3874	;# 
  2628     0F23                     CLC2GLS3        equ	3875	;# 
  2629     0F24                     CLC3CON         equ	3876	;# 
  2630     0F25                     CLC3POL         equ	3877	;# 
  2631     0F26                     CLC3SEL0        equ	3878	;# 
  2632     0F27                     CLC3SEL1        equ	3879	;# 
  2633     0F28                     CLC3SEL2        equ	3880	;# 
  2634     0F29                     CLC3SEL3        equ	3881	;# 
  2635     0F2A                     CLC3GLS0        equ	3882	;# 
  2636     0F2B                     CLC3GLS1        equ	3883	;# 
  2637     0F2C                     CLC3GLS2        equ	3884	;# 
  2638     0F2D                     CLC3GLS3        equ	3885	;# 
  2639     0F2E                     CLC4CON         equ	3886	;# 
  2640     0F2F                     CLC4POL         equ	3887	;# 
  2641     0F30                     CLC4SEL0        equ	3888	;# 
  2642     0F31                     CLC4SEL1        equ	3889	;# 
  2643     0F32                     CLC4SEL2        equ	3890	;# 
  2644     0F33                     CLC4SEL3        equ	3891	;# 
  2645     0F34                     CLC4GLS0        equ	3892	;# 
  2646     0F35                     CLC4GLS1        equ	3893	;# 
  2647     0F36                     CLC4GLS2        equ	3894	;# 
  2648     0F37                     CLC4GLS3        equ	3895	;# 
  2649     0FE4                     STATUS_SHAD     equ	4068	;# 
  2650     0FE5                     WREG_SHAD       equ	4069	;# 
  2651     0FE6                     BSR_SHAD        equ	4070	;# 
  2652     0FE7                     PCLATH_SHAD     equ	4071	;# 
  2653     0FE8                     FSR0L_SHAD      equ	4072	;# 
  2654     0FE9                     FSR0H_SHAD      equ	4073	;# 
  2655     0FEA                     FSR1L_SHAD      equ	4074	;# 
  2656     0FEB                     FSR1H_SHAD      equ	4075	;# 
  2657     0FED                     STKPTR          equ	4077	;# 
  2658     0FEE                     TOSL            equ	4078	;# 
  2659     0FEF                     TOSH            equ	4079	;# 
  2660     0000                     INDF0           equ	0	;# 
  2661     0001                     INDF1           equ	1	;# 
  2662     0002                     PCL             equ	2	;# 
  2663     0003                     STATUS          equ	3	;# 
  2664     0004                     FSR0L           equ	4	;# 
  2665     0005                     FSR0H           equ	5	;# 
  2666     0006                     FSR1L           equ	6	;# 
  2667     0007                     FSR1H           equ	7	;# 
  2668     0008                     BSR             equ	8	;# 
  2669     0009                     WREG            equ	9	;# 
  2670     000A                     PCLATH          equ	10	;# 
  2671     000B                     INTCON          equ	11	;# 
  2672     000C                     PORTA           equ	12	;# 
  2673     000D                     PORTB           equ	13	;# 
  2674     000E                     PORTC           equ	14	;# 
  2675     0010                     PIR0            equ	16	;# 
  2676     0011                     PIR1            equ	17	;# 
  2677     0012                     PIR2            equ	18	;# 
  2678     0013                     PIR3            equ	19	;# 
  2679     0014                     PIR4            equ	20	;# 
  2680     0015                     TMR0L           equ	21	;# 
  2681     0015                     TMR0            equ	21	;# 
  2682     0016                     TMR0H           equ	22	;# 
  2683     0016                     PR0             equ	22	;# 
  2684     0017                     T0CON0          equ	23	;# 
  2685     0018                     T0CON1          equ	24	;# 
  2686     0019                     TMR1            equ	25	;# 
  2687     0019                     TMR1L           equ	25	;# 
  2688     001A                     TMR1H           equ	26	;# 
  2689     001B                     T1CON           equ	27	;# 
  2690     001C                     T1GCON          equ	28	;# 
  2691     001D                     TMR2            equ	29	;# 
  2692     001E                     PR2             equ	30	;# 
  2693     001F                     T2CON           equ	31	;# 
  2694     008C                     TRISA           equ	140	;# 
  2695     008D                     TRISB           equ	141	;# 
  2696     008E                     TRISC           equ	142	;# 
  2697     0090                     PIE0            equ	144	;# 
  2698     0091                     PIE1            equ	145	;# 
  2699     0092                     PIE2            equ	146	;# 
  2700     0093                     PIE3            equ	147	;# 
  2701     0094                     PIE4            equ	148	;# 
  2702     0097                     WDTCON          equ	151	;# 
  2703     009B                     ADRES           equ	155	;# 
  2704     009B                     ADRESL          equ	155	;# 
  2705     009C                     ADRESH          equ	156	;# 
  2706     009D                     ADCON0          equ	157	;# 
  2707     009E                     ADCON1          equ	158	;# 
  2708     009F                     ADACT           equ	159	;# 
  2709     010C                     LATA            equ	268	;# 
  2710     010D                     LATB            equ	269	;# 
  2711     010E                     LATC            equ	270	;# 
  2712     0111                     CM1CON0         equ	273	;# 
  2713     0112                     CM1CON1         equ	274	;# 
  2714     0113                     CM2CON0         equ	275	;# 
  2715     0114                     CM2CON1         equ	276	;# 
  2716     0115                     CMOUT           equ	277	;# 
  2717     0116                     BORCON          equ	278	;# 
  2718     0117                     FVRCON          equ	279	;# 
  2719     0118                     DACCON0         equ	280	;# 
  2720     0119                     DACCON1         equ	281	;# 
  2721     018C                     ANSELA          equ	396	;# 
  2722     018D                     ANSELB          equ	397	;# 
  2723     018E                     ANSELC          equ	398	;# 
  2724     0197                     VREGCON         equ	407	;# 
  2725     0199                     RC1REG          equ	409	;# 
  2726     0199                     RCREG           equ	409	;# 
  2727     0199                     RCREG1          equ	409	;# 
  2728     019A                     TX1REG          equ	410	;# 
  2729     019A                     TXREG1          equ	410	;# 
  2730     019A                     TXREG           equ	410	;# 
  2731     019B                     SP1BRG          equ	411	;# 
  2732     019B                     SPBRG           equ	411	;# 
  2733     019B                     SP1BRGL         equ	411	;# 
  2734     019B                     SPBRG1          equ	411	;# 
  2735     019B                     SPBRGL          equ	411	;# 
  2736     019C                     SP1BRGH         equ	412	;# 
  2737     019C                     SPBRGH          equ	412	;# 
  2738     019C                     SPBRGH1         equ	412	;# 
  2739     019D                     RC1STA          equ	413	;# 
  2740     019D                     RCSTA1          equ	413	;# 
  2741     019D                     RCSTA           equ	413	;# 
  2742     019E                     TX1STA          equ	414	;# 
  2743     019E                     TXSTA1          equ	414	;# 
  2744     019E                     TXSTA           equ	414	;# 
  2745     019F                     BAUD1CON        equ	415	;# 
  2746     019F                     BAUDCON1        equ	415	;# 
  2747     019F                     BAUDCTL1        equ	415	;# 
  2748     019F                     BAUDCON         equ	415	;# 
  2749     019F                     BAUDCTL         equ	415	;# 
  2750     020C                     WPUA            equ	524	;# 
  2751     020D                     WPUB            equ	525	;# 
  2752     020E                     WPUC            equ	526	;# 
  2753     0211                     SSP1BUF         equ	529	;# 
  2754     0211                     SSPBUF          equ	529	;# 
  2755     0212                     SSP1ADD         equ	530	;# 
  2756     0212                     SSPADD          equ	530	;# 
  2757     0213                     SSP1MSK         equ	531	;# 
  2758     0213                     SSPMSK          equ	531	;# 
  2759     0214                     SSP1STAT        equ	532	;# 
  2760     0214                     SSPSTAT         equ	532	;# 
  2761     0215                     SSP1CON1        equ	533	;# 
  2762     0215                     SSPCON          equ	533	;# 
  2763     0215                     SSPCON1         equ	533	;# 
  2764     0215                     SSP1CON         equ	533	;# 
  2765     0216                     SSP1CON2        equ	534	;# 
  2766     0216                     SSPCON2         equ	534	;# 
  2767     0217                     SSP1CON3        equ	535	;# 
  2768     0217                     SSPCON3         equ	535	;# 
  2769     0219                     SSP2BUF         equ	537	;# 
  2770     021A                     SSP2ADD         equ	538	;# 
  2771     021B                     SSP2MSK         equ	539	;# 
  2772     021C                     SSP2STAT        equ	540	;# 
  2773     021D                     SSP2CON1        equ	541	;# 
  2774     021D                     SSP2CON         equ	541	;# 
  2775     021E                     SSP2CON2        equ	542	;# 
  2776     021F                     SSP2CON3        equ	543	;# 
  2777     028C                     ODCONA          equ	652	;# 
  2778     028D                     ODCONB          equ	653	;# 
  2779     028E                     ODCONC          equ	654	;# 
  2780     0291                     CCPR1           equ	657	;# 
  2781     0291                     CCPR1L          equ	657	;# 
  2782     0292                     CCPR1H          equ	658	;# 
  2783     0293                     CCP1CON         equ	659	;# 
  2784     0294                     CCP1CAP         equ	660	;# 
  2785     0295                     CCPR2           equ	661	;# 
  2786     0295                     CCPR2L          equ	661	;# 
  2787     0296                     CCPR2H          equ	662	;# 
  2788     0297                     CCP2CON         equ	663	;# 
  2789     0298                     CCP2CAP         equ	664	;# 
  2790     029F                     CCPTMRS         equ	671	;# 
  2791     030C                     SLRCONA         equ	780	;# 
  2792     030D                     SLRCONB         equ	781	;# 
  2793     030E                     SLRCONC         equ	782	;# 
  2794     0311                     CCPR3           equ	785	;# 
  2795     0311                     CCPR3L          equ	785	;# 
  2796     0312                     CCPR3H          equ	786	;# 
  2797     0313                     CCP3CON         equ	787	;# 
  2798     0314                     CCP3CAP         equ	788	;# 
  2799     0315                     CCPR4           equ	789	;# 
  2800     0315                     CCPR4L          equ	789	;# 
  2801     0316                     CCPR4H          equ	790	;# 
  2802     0317                     CCP4CON         equ	791	;# 
  2803     0318                     CCP4CAP         equ	792	;# 
  2804     038C                     INLVLA          equ	908	;# 
  2805     038D                     INLVLB          equ	909	;# 
  2806     038E                     INLVLC          equ	910	;# 
  2807     0391                     IOCAP           equ	913	;# 
  2808     0392                     IOCAN           equ	914	;# 
  2809     0393                     IOCAF           equ	915	;# 
  2810     0394                     IOCBP           equ	916	;# 
  2811     0395                     IOCBN           equ	917	;# 
  2812     0396                     IOCBF           equ	918	;# 
  2813     0397                     IOCCP           equ	919	;# 
  2814     0398                     IOCCN           equ	920	;# 
  2815     0399                     IOCCF           equ	921	;# 
  2816     039A                     CLKRCON         equ	922	;# 
  2817     039C                     MDCON           equ	924	;# 
  2818     039D                     MDSRC           equ	925	;# 
  2819     039E                     MDCARH          equ	926	;# 
  2820     039F                     MDCARL          equ	927	;# 
  2821     0411                     TMR3            equ	1041	;# 
  2822     0411                     TMR3L           equ	1041	;# 
  2823     0412                     TMR3H           equ	1042	;# 
  2824     0413                     T3CON           equ	1043	;# 
  2825     0414                     T3GCON          equ	1044	;# 
  2826     0415                     TMR4            equ	1045	;# 
  2827     0416                     PR4             equ	1046	;# 
  2828     0417                     T4CON           equ	1047	;# 
  2829     0418                     TMR5            equ	1048	;# 
  2830     0418                     TMR5L           equ	1048	;# 
  2831     0419                     TMR5H           equ	1049	;# 
  2832     041A                     T5CON           equ	1050	;# 
  2833     041B                     T5GCON          equ	1051	;# 
  2834     041C                     TMR6            equ	1052	;# 
  2835     041D                     PR6             equ	1053	;# 
  2836     041E                     T6CON           equ	1054	;# 
  2837     041F                     CCDCON          equ	1055	;# 
  2838     0498                     NCO1ACC         equ	1176	;# 
  2839     0498                     NCO1ACCL        equ	1176	;# 
  2840     0499                     NCO1ACCH        equ	1177	;# 
  2841     049A                     NCO1ACCU        equ	1178	;# 
  2842     049B                     NCO1INC         equ	1179	;# 
  2843     049B                     NCO1INCL        equ	1179	;# 
  2844     049C                     NCO1INCH        equ	1180	;# 
  2845     049D                     NCO1INCU        equ	1181	;# 
  2846     049E                     NCO1CON         equ	1182	;# 
  2847     049F                     NCO1CLK         equ	1183	;# 
  2848     0617                     PWM5DCL         equ	1559	;# 
  2849     0618                     PWM5DCH         equ	1560	;# 
  2850     0619                     PWM5CON         equ	1561	;# 
  2851     0619                     PWM5CON0        equ	1561	;# 
  2852     061A                     PWM6DCL         equ	1562	;# 
  2853     061B                     PWM6DCH         equ	1563	;# 
  2854     061C                     PWM6CON         equ	1564	;# 
  2855     061C                     PWM6CON0        equ	1564	;# 
  2856     061F                     PWMTMRS         equ	1567	;# 
  2857     0691                     CWG1CLKCON      equ	1681	;# 
  2858     0692                     CWG1DAT         equ	1682	;# 
  2859     0693                     CWG1DBR         equ	1683	;# 
  2860     0694                     CWG1DBF         equ	1684	;# 
  2861     0695                     CWG1CON0        equ	1685	;# 
  2862     0696                     CWG1CON1        equ	1686	;# 
  2863     0697                     CWG1AS0         equ	1687	;# 
  2864     0698                     CWG1AS1         equ	1688	;# 
  2865     0699                     CWG1STR         equ	1689	;# 
  2866     0711                     CWG2CLKCON      equ	1809	;# 
  2867     0712                     CWG2DAT         equ	1810	;# 
  2868     0713                     CWG2DBR         equ	1811	;# 
  2869     0714                     CWG2DBF         equ	1812	;# 
  2870     0715                     CWG2CON0        equ	1813	;# 
  2871     0716                     CWG2CON1        equ	1814	;# 
  2872     0717                     CWG2AS0         equ	1815	;# 
  2873     0718                     CWG2AS1         equ	1816	;# 
  2874     0719                     CWG2STR         equ	1817	;# 
  2875     0891                     NVMADR          equ	2193	;# 
  2876     0891                     EEADR           equ	2193	;# 
  2877     0891                     PMADR           equ	2193	;# 
  2878     0891                     NVMADRL         equ	2193	;# 
  2879     0891                     EEADRL          equ	2193	;# 
  2880     0891                     PMADRL          equ	2193	;# 
  2881     0892                     NVMADRH         equ	2194	;# 
  2882     0892                     EEADRH          equ	2194	;# 
  2883     0892                     PMADRH          equ	2194	;# 
  2884     0893                     NVMDAT          equ	2195	;# 
  2885     0893                     EEDAT           equ	2195	;# 
  2886     0893                     PMDAT           equ	2195	;# 
  2887     0893                     NVMDATL         equ	2195	;# 
  2888     0893                     EEDATL          equ	2195	;# 
  2889     0893                     PMDATL          equ	2195	;# 
  2890     0894                     NVMDATH         equ	2196	;# 
  2891     0894                     EEDATH          equ	2196	;# 
  2892     0894                     PMDATH          equ	2196	;# 
  2893     0895                     NVMCON1         equ	2197	;# 
  2894     0895                     EECON1          equ	2197	;# 
  2895     0895                     PMCON1          equ	2197	;# 
  2896     0896                     NVMCON2         equ	2198	;# 
  2897     0896                     EECON2          equ	2198	;# 
  2898     0896                     PMCON2          equ	2198	;# 
  2899     089B                     PCON0           equ	2203	;# 
  2900     0911                     PMD0            equ	2321	;# 
  2901     0912                     PMD1            equ	2322	;# 
  2902     0913                     PMD2            equ	2323	;# 
  2903     0914                     PMD3            equ	2324	;# 
  2904     0915                     PMD4            equ	2325	;# 
  2905     0916                     PMD5            equ	2326	;# 
  2906     0918                     CPUDOZE         equ	2328	;# 
  2907     0919                     OSCCON1         equ	2329	;# 
  2908     091A                     OSCCON2         equ	2330	;# 
  2909     091B                     OSCCON3         equ	2331	;# 
  2910     091C                     OSCSTAT1        equ	2332	;# 
  2911     091D                     OSCEN           equ	2333	;# 
  2912     091E                     OSCTUNE         equ	2334	;# 
  2913     091F                     OSCFRQ          equ	2335	;# 
  2914     0E0F                     PPSLOCK         equ	3599	;# 
  2915     0E10                     INTPPS          equ	3600	;# 
  2916     0E11                     T0CKIPPS        equ	3601	;# 
  2917     0E12                     T1CKIPPS        equ	3602	;# 
  2918     0E13                     T1GPPS          equ	3603	;# 
  2919     0E14                     CCP1PPS         equ	3604	;# 
  2920     0E15                     CCP2PPS         equ	3605	;# 
  2921     0E16                     CCP3PPS         equ	3606	;# 
  2922     0E17                     CCP4PPS         equ	3607	;# 
  2923     0E18                     CWG1PPS         equ	3608	;# 
  2924     0E19                     CWG2PPS         equ	3609	;# 
  2925     0E1A                     MDCIN1PPS       equ	3610	;# 
  2926     0E1B                     MDCIN2PPS       equ	3611	;# 
  2927     0E1C                     MDMINPPS        equ	3612	;# 
  2928     0E1D                     SSP2CLKPPS      equ	3613	;# 
  2929     0E1E                     SSP2DATPPS      equ	3614	;# 
  2930     0E1F                     SSP2SSPPS       equ	3615	;# 
  2931     0E20                     SSP1CLKPPS      equ	3616	;# 
  2932     0E21                     SSP1DATPPS      equ	3617	;# 
  2933     0E22                     SSP1SSPPS       equ	3618	;# 
  2934     0E24                     RXPPS           equ	3620	;# 
  2935     0E25                     TXPPS           equ	3621	;# 
  2936     0E28                     CLCIN0PPS       equ	3624	;# 
  2937     0E29                     CLCIN1PPS       equ	3625	;# 
  2938     0E2A                     CLCIN2PPS       equ	3626	;# 
  2939     0E2B                     CLCIN3PPS       equ	3627	;# 
  2940     0E2C                     T3CKIPPS        equ	3628	;# 
  2941     0E2D                     T3GPPS          equ	3629	;# 
  2942     0E2E                     T5CKIPPS        equ	3630	;# 
  2943     0E2F                     T5GPPS          equ	3631	;# 
  2944     0E90                     RA0PPS          equ	3728	;# 
  2945     0E91                     RA1PPS          equ	3729	;# 
  2946     0E92                     RA2PPS          equ	3730	;# 
  2947     0E94                     RA4PPS          equ	3732	;# 
  2948     0E95                     RA5PPS          equ	3733	;# 
  2949     0E9C                     RB4PPS          equ	3740	;# 
  2950     0E9D                     RB5PPS          equ	3741	;# 
  2951     0E9E                     RB6PPS          equ	3742	;# 
  2952     0E9F                     RB7PPS          equ	3743	;# 
  2953     0EA0                     RC0PPS          equ	3744	;# 
  2954     0EA1                     RC1PPS          equ	3745	;# 
  2955     0EA2                     RC2PPS          equ	3746	;# 
  2956     0EA3                     RC3PPS          equ	3747	;# 
  2957     0EA4                     RC4PPS          equ	3748	;# 
  2958     0EA5                     RC5PPS          equ	3749	;# 
  2959     0EA6                     RC6PPS          equ	3750	;# 
  2960     0EA7                     RC7PPS          equ	3751	;# 
  2961     0F0F                     CLCDATA         equ	3855	;# 
  2962     0F10                     CLC1CON         equ	3856	;# 
  2963     0F11                     CLC1POL         equ	3857	;# 
  2964     0F12                     CLC1SEL0        equ	3858	;# 
  2965     0F13                     CLC1SEL1        equ	3859	;# 
  2966     0F14                     CLC1SEL2        equ	3860	;# 
  2967     0F15                     CLC1SEL3        equ	3861	;# 
  2968     0F16                     CLC1GLS0        equ	3862	;# 
  2969     0F17                     CLC1GLS1        equ	3863	;# 
  2970     0F18                     CLC1GLS2        equ	3864	;# 
  2971     0F19                     CLC1GLS3        equ	3865	;# 
  2972     0F1A                     CLC2CON         equ	3866	;# 
  2973     0F1B                     CLC2POL         equ	3867	;# 
  2974     0F1C                     CLC2SEL0        equ	3868	;# 
  2975     0F1D                     CLC2SEL1        equ	3869	;# 
  2976     0F1E                     CLC2SEL2        equ	3870	;# 
  2977     0F1F                     CLC2SEL3        equ	3871	;# 
  2978     0F20                     CLC2GLS0        equ	3872	;# 
  2979     0F21                     CLC2GLS1        equ	3873	;# 
  2980     0F22                     CLC2GLS2        equ	3874	;# 
  2981     0F23                     CLC2GLS3        equ	3875	;# 
  2982     0F24                     CLC3CON         equ	3876	;# 
  2983     0F25                     CLC3POL         equ	3877	;# 
  2984     0F26                     CLC3SEL0        equ	3878	;# 
  2985     0F27                     CLC3SEL1        equ	3879	;# 
  2986     0F28                     CLC3SEL2        equ	3880	;# 
  2987     0F29                     CLC3SEL3        equ	3881	;# 
  2988     0F2A                     CLC3GLS0        equ	3882	;# 
  2989     0F2B                     CLC3GLS1        equ	3883	;# 
  2990     0F2C                     CLC3GLS2        equ	3884	;# 
  2991     0F2D                     CLC3GLS3        equ	3885	;# 
  2992     0F2E                     CLC4CON         equ	3886	;# 
  2993     0F2F                     CLC4POL         equ	3887	;# 
  2994     0F30                     CLC4SEL0        equ	3888	;# 
  2995     0F31                     CLC4SEL1        equ	3889	;# 
  2996     0F32                     CLC4SEL2        equ	3890	;# 
  2997     0F33                     CLC4SEL3        equ	3891	;# 
  2998     0F34                     CLC4GLS0        equ	3892	;# 
  2999     0F35                     CLC4GLS1        equ	3893	;# 
  3000     0F36                     CLC4GLS2        equ	3894	;# 
  3001     0F37                     CLC4GLS3        equ	3895	;# 
  3002     0FE4                     STATUS_SHAD     equ	4068	;# 
  3003     0FE5                     WREG_SHAD       equ	4069	;# 
  3004     0FE6                     BSR_SHAD        equ	4070	;# 
  3005     0FE7                     PCLATH_SHAD     equ	4071	;# 
  3006     0FE8                     FSR0L_SHAD      equ	4072	;# 
  3007     0FE9                     FSR0H_SHAD      equ	4073	;# 
  3008     0FEA                     FSR1L_SHAD      equ	4074	;# 
  3009     0FEB                     FSR1H_SHAD      equ	4075	;# 
  3010     0FED                     STKPTR          equ	4077	;# 
  3011     0FEE                     TOSL            equ	4078	;# 
  3012     0FEF                     TOSH            equ	4079	;# 
  3013     0000                     INDF0           equ	0	;# 
  3014     0001                     INDF1           equ	1	;# 
  3015     0002                     PCL             equ	2	;# 
  3016     0003                     STATUS          equ	3	;# 
  3017     0004                     FSR0L           equ	4	;# 
  3018     0005                     FSR0H           equ	5	;# 
  3019     0006                     FSR1L           equ	6	;# 
  3020     0007                     FSR1H           equ	7	;# 
  3021     0008                     BSR             equ	8	;# 
  3022     0009                     WREG            equ	9	;# 
  3023     000A                     PCLATH          equ	10	;# 
  3024     000B                     INTCON          equ	11	;# 
  3025     000C                     PORTA           equ	12	;# 
  3026     000D                     PORTB           equ	13	;# 
  3027     000E                     PORTC           equ	14	;# 
  3028     0010                     PIR0            equ	16	;# 
  3029     0011                     PIR1            equ	17	;# 
  3030     0012                     PIR2            equ	18	;# 
  3031     0013                     PIR3            equ	19	;# 
  3032     0014                     PIR4            equ	20	;# 
  3033     0015                     TMR0L           equ	21	;# 
  3034     0015                     TMR0            equ	21	;# 
  3035     0016                     TMR0H           equ	22	;# 
  3036     0016                     PR0             equ	22	;# 
  3037     0017                     T0CON0          equ	23	;# 
  3038     0018                     T0CON1          equ	24	;# 
  3039     0019                     TMR1            equ	25	;# 
  3040     0019                     TMR1L           equ	25	;# 
  3041     001A                     TMR1H           equ	26	;# 
  3042     001B                     T1CON           equ	27	;# 
  3043     001C                     T1GCON          equ	28	;# 
  3044     001D                     TMR2            equ	29	;# 
  3045     001E                     PR2             equ	30	;# 
  3046     001F                     T2CON           equ	31	;# 
  3047     008C                     TRISA           equ	140	;# 
  3048     008D                     TRISB           equ	141	;# 
  3049     008E                     TRISC           equ	142	;# 
  3050     0090                     PIE0            equ	144	;# 
  3051     0091                     PIE1            equ	145	;# 
  3052     0092                     PIE2            equ	146	;# 
  3053     0093                     PIE3            equ	147	;# 
  3054     0094                     PIE4            equ	148	;# 
  3055     0097                     WDTCON          equ	151	;# 
  3056     009B                     ADRES           equ	155	;# 
  3057     009B                     ADRESL          equ	155	;# 
  3058     009C                     ADRESH          equ	156	;# 
  3059     009D                     ADCON0          equ	157	;# 
  3060     009E                     ADCON1          equ	158	;# 
  3061     009F                     ADACT           equ	159	;# 
  3062     010C                     LATA            equ	268	;# 
  3063     010D                     LATB            equ	269	;# 
  3064     010E                     LATC            equ	270	;# 
  3065     0111                     CM1CON0         equ	273	;# 
  3066     0112                     CM1CON1         equ	274	;# 
  3067     0113                     CM2CON0         equ	275	;# 
  3068     0114                     CM2CON1         equ	276	;# 
  3069     0115                     CMOUT           equ	277	;# 
  3070     0116                     BORCON          equ	278	;# 
  3071     0117                     FVRCON          equ	279	;# 
  3072     0118                     DACCON0         equ	280	;# 
  3073     0119                     DACCON1         equ	281	;# 
  3074     018C                     ANSELA          equ	396	;# 
  3075     018D                     ANSELB          equ	397	;# 
  3076     018E                     ANSELC          equ	398	;# 
  3077     0197                     VREGCON         equ	407	;# 
  3078     0199                     RC1REG          equ	409	;# 
  3079     0199                     RCREG           equ	409	;# 
  3080     0199                     RCREG1          equ	409	;# 
  3081     019A                     TX1REG          equ	410	;# 
  3082     019A                     TXREG1          equ	410	;# 
  3083     019A                     TXREG           equ	410	;# 
  3084     019B                     SP1BRG          equ	411	;# 
  3085     019B                     SPBRG           equ	411	;# 
  3086     019B                     SP1BRGL         equ	411	;# 
  3087     019B                     SPBRG1          equ	411	;# 
  3088     019B                     SPBRGL          equ	411	;# 
  3089     019C                     SP1BRGH         equ	412	;# 
  3090     019C                     SPBRGH          equ	412	;# 
  3091     019C                     SPBRGH1         equ	412	;# 
  3092     019D                     RC1STA          equ	413	;# 
  3093     019D                     RCSTA1          equ	413	;# 
  3094     019D                     RCSTA           equ	413	;# 
  3095     019E                     TX1STA          equ	414	;# 
  3096     019E                     TXSTA1          equ	414	;# 
  3097     019E                     TXSTA           equ	414	;# 
  3098     019F                     BAUD1CON        equ	415	;# 
  3099     019F                     BAUDCON1        equ	415	;# 
  3100     019F                     BAUDCTL1        equ	415	;# 
  3101     019F                     BAUDCON         equ	415	;# 
  3102     019F                     BAUDCTL         equ	415	;# 
  3103     020C                     WPUA            equ	524	;# 
  3104     020D                     WPUB            equ	525	;# 
  3105     020E                     WPUC            equ	526	;# 
  3106     0211                     SSP1BUF         equ	529	;# 
  3107     0211                     SSPBUF          equ	529	;# 
  3108     0212                     SSP1ADD         equ	530	;# 
  3109     0212                     SSPADD          equ	530	;# 
  3110     0213                     SSP1MSK         equ	531	;# 
  3111     0213                     SSPMSK          equ	531	;# 
  3112     0214                     SSP1STAT        equ	532	;# 
  3113     0214                     SSPSTAT         equ	532	;# 
  3114     0215                     SSP1CON1        equ	533	;# 
  3115     0215                     SSPCON          equ	533	;# 
  3116     0215                     SSPCON1         equ	533	;# 
  3117     0215                     SSP1CON         equ	533	;# 
  3118     0216                     SSP1CON2        equ	534	;# 
  3119     0216                     SSPCON2         equ	534	;# 
  3120     0217                     SSP1CON3        equ	535	;# 
  3121     0217                     SSPCON3         equ	535	;# 
  3122     0219                     SSP2BUF         equ	537	;# 
  3123     021A                     SSP2ADD         equ	538	;# 
  3124     021B                     SSP2MSK         equ	539	;# 
  3125     021C                     SSP2STAT        equ	540	;# 
  3126     021D                     SSP2CON1        equ	541	;# 
  3127     021D                     SSP2CON         equ	541	;# 
  3128     021E                     SSP2CON2        equ	542	;# 
  3129     021F                     SSP2CON3        equ	543	;# 
  3130     028C                     ODCONA          equ	652	;# 
  3131     028D                     ODCONB          equ	653	;# 
  3132     028E                     ODCONC          equ	654	;# 
  3133     0291                     CCPR1           equ	657	;# 
  3134     0291                     CCPR1L          equ	657	;# 
  3135     0292                     CCPR1H          equ	658	;# 
  3136     0293                     CCP1CON         equ	659	;# 
  3137     0294                     CCP1CAP         equ	660	;# 
  3138     0295                     CCPR2           equ	661	;# 
  3139     0295                     CCPR2L          equ	661	;# 
  3140     0296                     CCPR2H          equ	662	;# 
  3141     0297                     CCP2CON         equ	663	;# 
  3142     0298                     CCP2CAP         equ	664	;# 
  3143     029F                     CCPTMRS         equ	671	;# 
  3144     030C                     SLRCONA         equ	780	;# 
  3145     030D                     SLRCONB         equ	781	;# 
  3146     030E                     SLRCONC         equ	782	;# 
  3147     0311                     CCPR3           equ	785	;# 
  3148     0311                     CCPR3L          equ	785	;# 
  3149     0312                     CCPR3H          equ	786	;# 
  3150     0313                     CCP3CON         equ	787	;# 
  3151     0314                     CCP3CAP         equ	788	;# 
  3152     0315                     CCPR4           equ	789	;# 
  3153     0315                     CCPR4L          equ	789	;# 
  3154     0316                     CCPR4H          equ	790	;# 
  3155     0317                     CCP4CON         equ	791	;# 
  3156     0318                     CCP4CAP         equ	792	;# 
  3157     038C                     INLVLA          equ	908	;# 
  3158     038D                     INLVLB          equ	909	;# 
  3159     038E                     INLVLC          equ	910	;# 
  3160     0391                     IOCAP           equ	913	;# 
  3161     0392                     IOCAN           equ	914	;# 
  3162     0393                     IOCAF           equ	915	;# 
  3163     0394                     IOCBP           equ	916	;# 
  3164     0395                     IOCBN           equ	917	;# 
  3165     0396                     IOCBF           equ	918	;# 
  3166     0397                     IOCCP           equ	919	;# 
  3167     0398                     IOCCN           equ	920	;# 
  3168     0399                     IOCCF           equ	921	;# 
  3169     039A                     CLKRCON         equ	922	;# 
  3170     039C                     MDCON           equ	924	;# 
  3171     039D                     MDSRC           equ	925	;# 
  3172     039E                     MDCARH          equ	926	;# 
  3173     039F                     MDCARL          equ	927	;# 
  3174     0411                     TMR3            equ	1041	;# 
  3175     0411                     TMR3L           equ	1041	;# 
  3176     0412                     TMR3H           equ	1042	;# 
  3177     0413                     T3CON           equ	1043	;# 
  3178     0414                     T3GCON          equ	1044	;# 
  3179     0415                     TMR4            equ	1045	;# 
  3180     0416                     PR4             equ	1046	;# 
  3181     0417                     T4CON           equ	1047	;# 
  3182     0418                     TMR5            equ	1048	;# 
  3183     0418                     TMR5L           equ	1048	;# 
  3184     0419                     TMR5H           equ	1049	;# 
  3185     041A                     T5CON           equ	1050	;# 
  3186     041B                     T5GCON          equ	1051	;# 
  3187     041C                     TMR6            equ	1052	;# 
  3188     041D                     PR6             equ	1053	;# 
  3189     041E                     T6CON           equ	1054	;# 
  3190     041F                     CCDCON          equ	1055	;# 
  3191     0498                     NCO1ACC         equ	1176	;# 
  3192     0498                     NCO1ACCL        equ	1176	;# 
  3193     0499                     NCO1ACCH        equ	1177	;# 
  3194     049A                     NCO1ACCU        equ	1178	;# 
  3195     049B                     NCO1INC         equ	1179	;# 
  3196     049B                     NCO1INCL        equ	1179	;# 
  3197     049C                     NCO1INCH        equ	1180	;# 
  3198     049D                     NCO1INCU        equ	1181	;# 
  3199     049E                     NCO1CON         equ	1182	;# 
  3200     049F                     NCO1CLK         equ	1183	;# 
  3201     0617                     PWM5DCL         equ	1559	;# 
  3202     0618                     PWM5DCH         equ	1560	;# 
  3203     0619                     PWM5CON         equ	1561	;# 
  3204     0619                     PWM5CON0        equ	1561	;# 
  3205     061A                     PWM6DCL         equ	1562	;# 
  3206     061B                     PWM6DCH         equ	1563	;# 
  3207     061C                     PWM6CON         equ	1564	;# 
  3208     061C                     PWM6CON0        equ	1564	;# 
  3209     061F                     PWMTMRS         equ	1567	;# 
  3210     0691                     CWG1CLKCON      equ	1681	;# 
  3211     0692                     CWG1DAT         equ	1682	;# 
  3212     0693                     CWG1DBR         equ	1683	;# 
  3213     0694                     CWG1DBF         equ	1684	;# 
  3214     0695                     CWG1CON0        equ	1685	;# 
  3215     0696                     CWG1CON1        equ	1686	;# 
  3216     0697                     CWG1AS0         equ	1687	;# 
  3217     0698                     CWG1AS1         equ	1688	;# 
  3218     0699                     CWG1STR         equ	1689	;# 
  3219     0711                     CWG2CLKCON      equ	1809	;# 
  3220     0712                     CWG2DAT         equ	1810	;# 
  3221     0713                     CWG2DBR         equ	1811	;# 
  3222     0714                     CWG2DBF         equ	1812	;# 
  3223     0715                     CWG2CON0        equ	1813	;# 
  3224     0716                     CWG2CON1        equ	1814	;# 
  3225     0717                     CWG2AS0         equ	1815	;# 
  3226     0718                     CWG2AS1         equ	1816	;# 
  3227     0719                     CWG2STR         equ	1817	;# 
  3228     0891                     NVMADR          equ	2193	;# 
  3229     0891                     EEADR           equ	2193	;# 
  3230     0891                     PMADR           equ	2193	;# 
  3231     0891                     NVMADRL         equ	2193	;# 
  3232     0891                     EEADRL          equ	2193	;# 
  3233     0891                     PMADRL          equ	2193	;# 
  3234     0892                     NVMADRH         equ	2194	;# 
  3235     0892                     EEADRH          equ	2194	;# 
  3236     0892                     PMADRH          equ	2194	;# 
  3237     0893                     NVMDAT          equ	2195	;# 
  3238     0893                     EEDAT           equ	2195	;# 
  3239     0893                     PMDAT           equ	2195	;# 
  3240     0893                     NVMDATL         equ	2195	;# 
  3241     0893                     EEDATL          equ	2195	;# 
  3242     0893                     PMDATL          equ	2195	;# 
  3243     0894                     NVMDATH         equ	2196	;# 
  3244     0894                     EEDATH          equ	2196	;# 
  3245     0894                     PMDATH          equ	2196	;# 
  3246     0895                     NVMCON1         equ	2197	;# 
  3247     0895                     EECON1          equ	2197	;# 
  3248     0895                     PMCON1          equ	2197	;# 
  3249     0896                     NVMCON2         equ	2198	;# 
  3250     0896                     EECON2          equ	2198	;# 
  3251     0896                     PMCON2          equ	2198	;# 
  3252     089B                     PCON0           equ	2203	;# 
  3253     0911                     PMD0            equ	2321	;# 
  3254     0912                     PMD1            equ	2322	;# 
  3255     0913                     PMD2            equ	2323	;# 
  3256     0914                     PMD3            equ	2324	;# 
  3257     0915                     PMD4            equ	2325	;# 
  3258     0916                     PMD5            equ	2326	;# 
  3259     0918                     CPUDOZE         equ	2328	;# 
  3260     0919                     OSCCON1         equ	2329	;# 
  3261     091A                     OSCCON2         equ	2330	;# 
  3262     091B                     OSCCON3         equ	2331	;# 
  3263     091C                     OSCSTAT1        equ	2332	;# 
  3264     091D                     OSCEN           equ	2333	;# 
  3265     091E                     OSCTUNE         equ	2334	;# 
  3266     091F                     OSCFRQ          equ	2335	;# 
  3267     0E0F                     PPSLOCK         equ	3599	;# 
  3268     0E10                     INTPPS          equ	3600	;# 
  3269     0E11                     T0CKIPPS        equ	3601	;# 
  3270     0E12                     T1CKIPPS        equ	3602	;# 
  3271     0E13                     T1GPPS          equ	3603	;# 
  3272     0E14                     CCP1PPS         equ	3604	;# 
  3273     0E15                     CCP2PPS         equ	3605	;# 
  3274     0E16                     CCP3PPS         equ	3606	;# 
  3275     0E17                     CCP4PPS         equ	3607	;# 
  3276     0E18                     CWG1PPS         equ	3608	;# 
  3277     0E19                     CWG2PPS         equ	3609	;# 
  3278     0E1A                     MDCIN1PPS       equ	3610	;# 
  3279     0E1B                     MDCIN2PPS       equ	3611	;# 
  3280     0E1C                     MDMINPPS        equ	3612	;# 
  3281     0E1D                     SSP2CLKPPS      equ	3613	;# 
  3282     0E1E                     SSP2DATPPS      equ	3614	;# 
  3283     0E1F                     SSP2SSPPS       equ	3615	;# 
  3284     0E20                     SSP1CLKPPS      equ	3616	;# 
  3285     0E21                     SSP1DATPPS      equ	3617	;# 
  3286     0E22                     SSP1SSPPS       equ	3618	;# 
  3287     0E24                     RXPPS           equ	3620	;# 
  3288     0E25                     TXPPS           equ	3621	;# 
  3289     0E28                     CLCIN0PPS       equ	3624	;# 
  3290     0E29                     CLCIN1PPS       equ	3625	;# 
  3291     0E2A                     CLCIN2PPS       equ	3626	;# 
  3292     0E2B                     CLCIN3PPS       equ	3627	;# 
  3293     0E2C                     T3CKIPPS        equ	3628	;# 
  3294     0E2D                     T3GPPS          equ	3629	;# 
  3295     0E2E                     T5CKIPPS        equ	3630	;# 
  3296     0E2F                     T5GPPS          equ	3631	;# 
  3297     0E90                     RA0PPS          equ	3728	;# 
  3298     0E91                     RA1PPS          equ	3729	;# 
  3299     0E92                     RA2PPS          equ	3730	;# 
  3300     0E94                     RA4PPS          equ	3732	;# 
  3301     0E95                     RA5PPS          equ	3733	;# 
  3302     0E9C                     RB4PPS          equ	3740	;# 
  3303     0E9D                     RB5PPS          equ	3741	;# 
  3304     0E9E                     RB6PPS          equ	3742	;# 
  3305     0E9F                     RB7PPS          equ	3743	;# 
  3306     0EA0                     RC0PPS          equ	3744	;# 
  3307     0EA1                     RC1PPS          equ	3745	;# 
  3308     0EA2                     RC2PPS          equ	3746	;# 
  3309     0EA3                     RC3PPS          equ	3747	;# 
  3310     0EA4                     RC4PPS          equ	3748	;# 
  3311     0EA5                     RC5PPS          equ	3749	;# 
  3312     0EA6                     RC6PPS          equ	3750	;# 
  3313     0EA7                     RC7PPS          equ	3751	;# 
  3314     0F0F                     CLCDATA         equ	3855	;# 
  3315     0F10                     CLC1CON         equ	3856	;# 
  3316     0F11                     CLC1POL         equ	3857	;# 
  3317     0F12                     CLC1SEL0        equ	3858	;# 
  3318     0F13                     CLC1SEL1        equ	3859	;# 
  3319     0F14                     CLC1SEL2        equ	3860	;# 
  3320     0F15                     CLC1SEL3        equ	3861	;# 
  3321     0F16                     CLC1GLS0        equ	3862	;# 
  3322     0F17                     CLC1GLS1        equ	3863	;# 
  3323     0F18                     CLC1GLS2        equ	3864	;# 
  3324     0F19                     CLC1GLS3        equ	3865	;# 
  3325     0F1A                     CLC2CON         equ	3866	;# 
  3326     0F1B                     CLC2POL         equ	3867	;# 
  3327     0F1C                     CLC2SEL0        equ	3868	;# 
  3328     0F1D                     CLC2SEL1        equ	3869	;# 
  3329     0F1E                     CLC2SEL2        equ	3870	;# 
  3330     0F1F                     CLC2SEL3        equ	3871	;# 
  3331     0F20                     CLC2GLS0        equ	3872	;# 
  3332     0F21                     CLC2GLS1        equ	3873	;# 
  3333     0F22                     CLC2GLS2        equ	3874	;# 
  3334     0F23                     CLC2GLS3        equ	3875	;# 
  3335     0F24                     CLC3CON         equ	3876	;# 
  3336     0F25                     CLC3POL         equ	3877	;# 
  3337     0F26                     CLC3SEL0        equ	3878	;# 
  3338     0F27                     CLC3SEL1        equ	3879	;# 
  3339     0F28                     CLC3SEL2        equ	3880	;# 
  3340     0F29                     CLC3SEL3        equ	3881	;# 
  3341     0F2A                     CLC3GLS0        equ	3882	;# 
  3342     0F2B                     CLC3GLS1        equ	3883	;# 
  3343     0F2C                     CLC3GLS2        equ	3884	;# 
  3344     0F2D                     CLC3GLS3        equ	3885	;# 
  3345     0F2E                     CLC4CON         equ	3886	;# 
  3346     0F2F                     CLC4POL         equ	3887	;# 
  3347     0F30                     CLC4SEL0        equ	3888	;# 
  3348     0F31                     CLC4SEL1        equ	3889	;# 
  3349     0F32                     CLC4SEL2        equ	3890	;# 
  3350     0F33                     CLC4SEL3        equ	3891	;# 
  3351     0F34                     CLC4GLS0        equ	3892	;# 
  3352     0F35                     CLC4GLS1        equ	3893	;# 
  3353     0F36                     CLC4GLS2        equ	3894	;# 
  3354     0F37                     CLC4GLS3        equ	3895	;# 
  3355     0FE4                     STATUS_SHAD     equ	4068	;# 
  3356     0FE5                     WREG_SHAD       equ	4069	;# 
  3357     0FE6                     BSR_SHAD        equ	4070	;# 
  3358     0FE7                     PCLATH_SHAD     equ	4071	;# 
  3359     0FE8                     FSR0L_SHAD      equ	4072	;# 
  3360     0FE9                     FSR0H_SHAD      equ	4073	;# 
  3361     0FEA                     FSR1L_SHAD      equ	4074	;# 
  3362     0FEB                     FSR1H_SHAD      equ	4075	;# 
  3363     0FED                     STKPTR          equ	4077	;# 
  3364     0FEE                     TOSL            equ	4078	;# 
  3365     0FEF                     TOSH            equ	4079	;# 
  3366     0000                     INDF0           equ	0	;# 
  3367     0001                     INDF1           equ	1	;# 
  3368     0002                     PCL             equ	2	;# 
  3369     0003                     STATUS          equ	3	;# 
  3370     0004                     FSR0L           equ	4	;# 
  3371     0005                     FSR0H           equ	5	;# 
  3372     0006                     FSR1L           equ	6	;# 
  3373     0007                     FSR1H           equ	7	;# 
  3374     0008                     BSR             equ	8	;# 
  3375     0009                     WREG            equ	9	;# 
  3376     000A                     PCLATH          equ	10	;# 
  3377     000B                     INTCON          equ	11	;# 
  3378     000C                     PORTA           equ	12	;# 
  3379     000D                     PORTB           equ	13	;# 
  3380     000E                     PORTC           equ	14	;# 
  3381     0010                     PIR0            equ	16	;# 
  3382     0011                     PIR1            equ	17	;# 
  3383     0012                     PIR2            equ	18	;# 
  3384     0013                     PIR3            equ	19	;# 
  3385     0014                     PIR4            equ	20	;# 
  3386     0015                     TMR0L           equ	21	;# 
  3387     0015                     TMR0            equ	21	;# 
  3388     0016                     TMR0H           equ	22	;# 
  3389     0016                     PR0             equ	22	;# 
  3390     0017                     T0CON0          equ	23	;# 
  3391     0018                     T0CON1          equ	24	;# 
  3392     0019                     TMR1            equ	25	;# 
  3393     0019                     TMR1L           equ	25	;# 
  3394     001A                     TMR1H           equ	26	;# 
  3395     001B                     T1CON           equ	27	;# 
  3396     001C                     T1GCON          equ	28	;# 
  3397     001D                     TMR2            equ	29	;# 
  3398     001E                     PR2             equ	30	;# 
  3399     001F                     T2CON           equ	31	;# 
  3400     008C                     TRISA           equ	140	;# 
  3401     008D                     TRISB           equ	141	;# 
  3402     008E                     TRISC           equ	142	;# 
  3403     0090                     PIE0            equ	144	;# 
  3404     0091                     PIE1            equ	145	;# 
  3405     0092                     PIE2            equ	146	;# 
  3406     0093                     PIE3            equ	147	;# 
  3407     0094                     PIE4            equ	148	;# 
  3408     0097                     WDTCON          equ	151	;# 
  3409     009B                     ADRES           equ	155	;# 
  3410     009B                     ADRESL          equ	155	;# 
  3411     009C                     ADRESH          equ	156	;# 
  3412     009D                     ADCON0          equ	157	;# 
  3413     009E                     ADCON1          equ	158	;# 
  3414     009F                     ADACT           equ	159	;# 
  3415     010C                     LATA            equ	268	;# 
  3416     010D                     LATB            equ	269	;# 
  3417     010E                     LATC            equ	270	;# 
  3418     0111                     CM1CON0         equ	273	;# 
  3419     0112                     CM1CON1         equ	274	;# 
  3420     0113                     CM2CON0         equ	275	;# 
  3421     0114                     CM2CON1         equ	276	;# 
  3422     0115                     CMOUT           equ	277	;# 
  3423     0116                     BORCON          equ	278	;# 
  3424     0117                     FVRCON          equ	279	;# 
  3425     0118                     DACCON0         equ	280	;# 
  3426     0119                     DACCON1         equ	281	;# 
  3427     018C                     ANSELA          equ	396	;# 
  3428     018D                     ANSELB          equ	397	;# 
  3429     018E                     ANSELC          equ	398	;# 
  3430     0197                     VREGCON         equ	407	;# 
  3431     0199                     RC1REG          equ	409	;# 
  3432     0199                     RCREG           equ	409	;# 
  3433     0199                     RCREG1          equ	409	;# 
  3434     019A                     TX1REG          equ	410	;# 
  3435     019A                     TXREG1          equ	410	;# 
  3436     019A                     TXREG           equ	410	;# 
  3437     019B                     SP1BRG          equ	411	;# 
  3438     019B                     SPBRG           equ	411	;# 
  3439     019B                     SP1BRGL         equ	411	;# 
  3440     019B                     SPBRG1          equ	411	;# 
  3441     019B                     SPBRGL          equ	411	;# 
  3442     019C                     SP1BRGH         equ	412	;# 
  3443     019C                     SPBRGH          equ	412	;# 
  3444     019C                     SPBRGH1         equ	412	;# 
  3445     019D                     RC1STA          equ	413	;# 
  3446     019D                     RCSTA1          equ	413	;# 
  3447     019D                     RCSTA           equ	413	;# 
  3448     019E                     TX1STA          equ	414	;# 
  3449     019E                     TXSTA1          equ	414	;# 
  3450     019E                     TXSTA           equ	414	;# 
  3451     019F                     BAUD1CON        equ	415	;# 
  3452     019F                     BAUDCON1        equ	415	;# 
  3453     019F                     BAUDCTL1        equ	415	;# 
  3454     019F                     BAUDCON         equ	415	;# 
  3455     019F                     BAUDCTL         equ	415	;# 
  3456     020C                     WPUA            equ	524	;# 
  3457     020D                     WPUB            equ	525	;# 
  3458     020E                     WPUC            equ	526	;# 
  3459     0211                     SSP1BUF         equ	529	;# 
  3460     0211                     SSPBUF          equ	529	;# 
  3461     0212                     SSP1ADD         equ	530	;# 
  3462     0212                     SSPADD          equ	530	;# 
  3463     0213                     SSP1MSK         equ	531	;# 
  3464     0213                     SSPMSK          equ	531	;# 
  3465     0214                     SSP1STAT        equ	532	;# 
  3466     0214                     SSPSTAT         equ	532	;# 
  3467     0215                     SSP1CON1        equ	533	;# 
  3468     0215                     SSPCON          equ	533	;# 
  3469     0215                     SSPCON1         equ	533	;# 
  3470     0215                     SSP1CON         equ	533	;# 
  3471     0216                     SSP1CON2        equ	534	;# 
  3472     0216                     SSPCON2         equ	534	;# 
  3473     0217                     SSP1CON3        equ	535	;# 
  3474     0217                     SSPCON3         equ	535	;# 
  3475     0219                     SSP2BUF         equ	537	;# 
  3476     021A                     SSP2ADD         equ	538	;# 
  3477     021B                     SSP2MSK         equ	539	;# 
  3478     021C                     SSP2STAT        equ	540	;# 
  3479     021D                     SSP2CON1        equ	541	;# 
  3480     021D                     SSP2CON         equ	541	;# 
  3481     021E                     SSP2CON2        equ	542	;# 
  3482     021F                     SSP2CON3        equ	543	;# 
  3483     028C                     ODCONA          equ	652	;# 
  3484     028D                     ODCONB          equ	653	;# 
  3485     028E                     ODCONC          equ	654	;# 
  3486     0291                     CCPR1           equ	657	;# 
  3487     0291                     CCPR1L          equ	657	;# 
  3488     0292                     CCPR1H          equ	658	;# 
  3489     0293                     CCP1CON         equ	659	;# 
  3490     0294                     CCP1CAP         equ	660	;# 
  3491     0295                     CCPR2           equ	661	;# 
  3492     0295                     CCPR2L          equ	661	;# 
  3493     0296                     CCPR2H          equ	662	;# 
  3494     0297                     CCP2CON         equ	663	;# 
  3495     0298                     CCP2CAP         equ	664	;# 
  3496     029F                     CCPTMRS         equ	671	;# 
  3497     030C                     SLRCONA         equ	780	;# 
  3498     030D                     SLRCONB         equ	781	;# 
  3499     030E                     SLRCONC         equ	782	;# 
  3500     0311                     CCPR3           equ	785	;# 
  3501     0311                     CCPR3L          equ	785	;# 
  3502     0312                     CCPR3H          equ	786	;# 
  3503     0313                     CCP3CON         equ	787	;# 
  3504     0314                     CCP3CAP         equ	788	;# 
  3505     0315                     CCPR4           equ	789	;# 
  3506     0315                     CCPR4L          equ	789	;# 
  3507     0316                     CCPR4H          equ	790	;# 
  3508     0317                     CCP4CON         equ	791	;# 
  3509     0318                     CCP4CAP         equ	792	;# 
  3510     038C                     INLVLA          equ	908	;# 
  3511     038D                     INLVLB          equ	909	;# 
  3512     038E                     INLVLC          equ	910	;# 
  3513     0391                     IOCAP           equ	913	;# 
  3514     0392                     IOCAN           equ	914	;# 
  3515     0393                     IOCAF           equ	915	;# 
  3516     0394                     IOCBP           equ	916	;# 
  3517     0395                     IOCBN           equ	917	;# 
  3518     0396                     IOCBF           equ	918	;# 
  3519     0397                     IOCCP           equ	919	;# 
  3520     0398                     IOCCN           equ	920	;# 
  3521     0399                     IOCCF           equ	921	;# 
  3522     039A                     CLKRCON         equ	922	;# 
  3523     039C                     MDCON           equ	924	;# 
  3524     039D                     MDSRC           equ	925	;# 
  3525     039E                     MDCARH          equ	926	;# 
  3526     039F                     MDCARL          equ	927	;# 
  3527     0411                     TMR3            equ	1041	;# 
  3528     0411                     TMR3L           equ	1041	;# 
  3529     0412                     TMR3H           equ	1042	;# 
  3530     0413                     T3CON           equ	1043	;# 
  3531     0414                     T3GCON          equ	1044	;# 
  3532     0415                     TMR4            equ	1045	;# 
  3533     0416                     PR4             equ	1046	;# 
  3534     0417                     T4CON           equ	1047	;# 
  3535     0418                     TMR5            equ	1048	;# 
  3536     0418                     TMR5L           equ	1048	;# 
  3537     0419                     TMR5H           equ	1049	;# 
  3538     041A                     T5CON           equ	1050	;# 
  3539     041B                     T5GCON          equ	1051	;# 
  3540     041C                     TMR6            equ	1052	;# 
  3541     041D                     PR6             equ	1053	;# 
  3542     041E                     T6CON           equ	1054	;# 
  3543     041F                     CCDCON          equ	1055	;# 
  3544     0498                     NCO1ACC         equ	1176	;# 
  3545     0498                     NCO1ACCL        equ	1176	;# 
  3546     0499                     NCO1ACCH        equ	1177	;# 
  3547     049A                     NCO1ACCU        equ	1178	;# 
  3548     049B                     NCO1INC         equ	1179	;# 
  3549     049B                     NCO1INCL        equ	1179	;# 
  3550     049C                     NCO1INCH        equ	1180	;# 
  3551     049D                     NCO1INCU        equ	1181	;# 
  3552     049E                     NCO1CON         equ	1182	;# 
  3553     049F                     NCO1CLK         equ	1183	;# 
  3554     0617                     PWM5DCL         equ	1559	;# 
  3555     0618                     PWM5DCH         equ	1560	;# 
  3556     0619                     PWM5CON         equ	1561	;# 
  3557     0619                     PWM5CON0        equ	1561	;# 
  3558     061A                     PWM6DCL         equ	1562	;# 
  3559     061B                     PWM6DCH         equ	1563	;# 
  3560     061C                     PWM6CON         equ	1564	;# 
  3561     061C                     PWM6CON0        equ	1564	;# 
  3562     061F                     PWMTMRS         equ	1567	;# 
  3563     0691                     CWG1CLKCON      equ	1681	;# 
  3564     0692                     CWG1DAT         equ	1682	;# 
  3565     0693                     CWG1DBR         equ	1683	;# 
  3566     0694                     CWG1DBF         equ	1684	;# 
  3567     0695                     CWG1CON0        equ	1685	;# 
  3568     0696                     CWG1CON1        equ	1686	;# 
  3569     0697                     CWG1AS0         equ	1687	;# 
  3570     0698                     CWG1AS1         equ	1688	;# 
  3571     0699                     CWG1STR         equ	1689	;# 
  3572     0711                     CWG2CLKCON      equ	1809	;# 
  3573     0712                     CWG2DAT         equ	1810	;# 
  3574     0713                     CWG2DBR         equ	1811	;# 
  3575     0714                     CWG2DBF         equ	1812	;# 
  3576     0715                     CWG2CON0        equ	1813	;# 
  3577     0716                     CWG2CON1        equ	1814	;# 
  3578     0717                     CWG2AS0         equ	1815	;# 
  3579     0718                     CWG2AS1         equ	1816	;# 
  3580     0719                     CWG2STR         equ	1817	;# 
  3581     0891                     NVMADR          equ	2193	;# 
  3582     0891                     EEADR           equ	2193	;# 
  3583     0891                     PMADR           equ	2193	;# 
  3584     0891                     NVMADRL         equ	2193	;# 
  3585     0891                     EEADRL          equ	2193	;# 
  3586     0891                     PMADRL          equ	2193	;# 
  3587     0892                     NVMADRH         equ	2194	;# 
  3588     0892                     EEADRH          equ	2194	;# 
  3589     0892                     PMADRH          equ	2194	;# 
  3590     0893                     NVMDAT          equ	2195	;# 
  3591     0893                     EEDAT           equ	2195	;# 
  3592     0893                     PMDAT           equ	2195	;# 
  3593     0893                     NVMDATL         equ	2195	;# 
  3594     0893                     EEDATL          equ	2195	;# 
  3595     0893                     PMDATL          equ	2195	;# 
  3596     0894                     NVMDATH         equ	2196	;# 
  3597     0894                     EEDATH          equ	2196	;# 
  3598     0894                     PMDATH          equ	2196	;# 
  3599     0895                     NVMCON1         equ	2197	;# 
  3600     0895                     EECON1          equ	2197	;# 
  3601     0895                     PMCON1          equ	2197	;# 
  3602     0896                     NVMCON2         equ	2198	;# 
  3603     0896                     EECON2          equ	2198	;# 
  3604     0896                     PMCON2          equ	2198	;# 
  3605     089B                     PCON0           equ	2203	;# 
  3606     0911                     PMD0            equ	2321	;# 
  3607     0912                     PMD1            equ	2322	;# 
  3608     0913                     PMD2            equ	2323	;# 
  3609     0914                     PMD3            equ	2324	;# 
  3610     0915                     PMD4            equ	2325	;# 
  3611     0916                     PMD5            equ	2326	;# 
  3612     0918                     CPUDOZE         equ	2328	;# 
  3613     0919                     OSCCON1         equ	2329	;# 
  3614     091A                     OSCCON2         equ	2330	;# 
  3615     091B                     OSCCON3         equ	2331	;# 
  3616     091C                     OSCSTAT1        equ	2332	;# 
  3617     091D                     OSCEN           equ	2333	;# 
  3618     091E                     OSCTUNE         equ	2334	;# 
  3619     091F                     OSCFRQ          equ	2335	;# 
  3620     0E0F                     PPSLOCK         equ	3599	;# 
  3621     0E10                     INTPPS          equ	3600	;# 
  3622     0E11                     T0CKIPPS        equ	3601	;# 
  3623     0E12                     T1CKIPPS        equ	3602	;# 
  3624     0E13                     T1GPPS          equ	3603	;# 
  3625     0E14                     CCP1PPS         equ	3604	;# 
  3626     0E15                     CCP2PPS         equ	3605	;# 
  3627     0E16                     CCP3PPS         equ	3606	;# 
  3628     0E17                     CCP4PPS         equ	3607	;# 
  3629     0E18                     CWG1PPS         equ	3608	;# 
  3630     0E19                     CWG2PPS         equ	3609	;# 
  3631     0E1A                     MDCIN1PPS       equ	3610	;# 
  3632     0E1B                     MDCIN2PPS       equ	3611	;# 
  3633     0E1C                     MDMINPPS        equ	3612	;# 
  3634     0E1D                     SSP2CLKPPS      equ	3613	;# 
  3635     0E1E                     SSP2DATPPS      equ	3614	;# 
  3636     0E1F                     SSP2SSPPS       equ	3615	;# 
  3637     0E20                     SSP1CLKPPS      equ	3616	;# 
  3638     0E21                     SSP1DATPPS      equ	3617	;# 
  3639     0E22                     SSP1SSPPS       equ	3618	;# 
  3640     0E24                     RXPPS           equ	3620	;# 
  3641     0E25                     TXPPS           equ	3621	;# 
  3642     0E28                     CLCIN0PPS       equ	3624	;# 
  3643     0E29                     CLCIN1PPS       equ	3625	;# 
  3644     0E2A                     CLCIN2PPS       equ	3626	;# 
  3645     0E2B                     CLCIN3PPS       equ	3627	;# 
  3646     0E2C                     T3CKIPPS        equ	3628	;# 
  3647     0E2D                     T3GPPS          equ	3629	;# 
  3648     0E2E                     T5CKIPPS        equ	3630	;# 
  3649     0E2F                     T5GPPS          equ	3631	;# 
  3650     0E90                     RA0PPS          equ	3728	;# 
  3651     0E91                     RA1PPS          equ	3729	;# 
  3652     0E92                     RA2PPS          equ	3730	;# 
  3653     0E94                     RA4PPS          equ	3732	;# 
  3654     0E95                     RA5PPS          equ	3733	;# 
  3655     0E9C                     RB4PPS          equ	3740	;# 
  3656     0E9D                     RB5PPS          equ	3741	;# 
  3657     0E9E                     RB6PPS          equ	3742	;# 
  3658     0E9F                     RB7PPS          equ	3743	;# 
  3659     0EA0                     RC0PPS          equ	3744	;# 
  3660     0EA1                     RC1PPS          equ	3745	;# 
  3661     0EA2                     RC2PPS          equ	3746	;# 
  3662     0EA3                     RC3PPS          equ	3747	;# 
  3663     0EA4                     RC4PPS          equ	3748	;# 
  3664     0EA5                     RC5PPS          equ	3749	;# 
  3665     0EA6                     RC6PPS          equ	3750	;# 
  3666     0EA7                     RC7PPS          equ	3751	;# 
  3667     0F0F                     CLCDATA         equ	3855	;# 
  3668     0F10                     CLC1CON         equ	3856	;# 
  3669     0F11                     CLC1POL         equ	3857	;# 
  3670     0F12                     CLC1SEL0        equ	3858	;# 
  3671     0F13                     CLC1SEL1        equ	3859	;# 
  3672     0F14                     CLC1SEL2        equ	3860	;# 
  3673     0F15                     CLC1SEL3        equ	3861	;# 
  3674     0F16                     CLC1GLS0        equ	3862	;# 
  3675     0F17                     CLC1GLS1        equ	3863	;# 
  3676     0F18                     CLC1GLS2        equ	3864	;# 
  3677     0F19                     CLC1GLS3        equ	3865	;# 
  3678     0F1A                     CLC2CON         equ	3866	;# 
  3679     0F1B                     CLC2POL         equ	3867	;# 
  3680     0F1C                     CLC2SEL0        equ	3868	;# 
  3681     0F1D                     CLC2SEL1        equ	3869	;# 
  3682     0F1E                     CLC2SEL2        equ	3870	;# 
  3683     0F1F                     CLC2SEL3        equ	3871	;# 
  3684     0F20                     CLC2GLS0        equ	3872	;# 
  3685     0F21                     CLC2GLS1        equ	3873	;# 
  3686     0F22                     CLC2GLS2        equ	3874	;# 
  3687     0F23                     CLC2GLS3        equ	3875	;# 
  3688     0F24                     CLC3CON         equ	3876	;# 
  3689     0F25                     CLC3POL         equ	3877	;# 
  3690     0F26                     CLC3SEL0        equ	3878	;# 
  3691     0F27                     CLC3SEL1        equ	3879	;# 
  3692     0F28                     CLC3SEL2        equ	3880	;# 
  3693     0F29                     CLC3SEL3        equ	3881	;# 
  3694     0F2A                     CLC3GLS0        equ	3882	;# 
  3695     0F2B                     CLC3GLS1        equ	3883	;# 
  3696     0F2C                     CLC3GLS2        equ	3884	;# 
  3697     0F2D                     CLC3GLS3        equ	3885	;# 
  3698     0F2E                     CLC4CON         equ	3886	;# 
  3699     0F2F                     CLC4POL         equ	3887	;# 
  3700     0F30                     CLC4SEL0        equ	3888	;# 
  3701     0F31                     CLC4SEL1        equ	3889	;# 
  3702     0F32                     CLC4SEL2        equ	3890	;# 
  3703     0F33                     CLC4SEL3        equ	3891	;# 
  3704     0F34                     CLC4GLS0        equ	3892	;# 
  3705     0F35                     CLC4GLS1        equ	3893	;# 
  3706     0F36                     CLC4GLS2        equ	3894	;# 
  3707     0F37                     CLC4GLS3        equ	3895	;# 
  3708     0FE4                     STATUS_SHAD     equ	4068	;# 
  3709     0FE5                     WREG_SHAD       equ	4069	;# 
  3710     0FE6                     BSR_SHAD        equ	4070	;# 
  3711     0FE7                     PCLATH_SHAD     equ	4071	;# 
  3712     0FE8                     FSR0L_SHAD      equ	4072	;# 
  3713     0FE9                     FSR0H_SHAD      equ	4073	;# 
  3714     0FEA                     FSR1L_SHAD      equ	4074	;# 
  3715     0FEB                     FSR1H_SHAD      equ	4075	;# 
  3716     0FED                     STKPTR          equ	4077	;# 
  3717     0FEE                     TOSL            equ	4078	;# 
  3718     0FEF                     TOSH            equ	4079	;# 
  3719     0000                     INDF0           equ	0	;# 
  3720     0001                     INDF1           equ	1	;# 
  3721     0002                     PCL             equ	2	;# 
  3722     0003                     STATUS          equ	3	;# 
  3723     0004                     FSR0L           equ	4	;# 
  3724     0005                     FSR0H           equ	5	;# 
  3725     0006                     FSR1L           equ	6	;# 
  3726     0007                     FSR1H           equ	7	;# 
  3727     0008                     BSR             equ	8	;# 
  3728     0009                     WREG            equ	9	;# 
  3729     000A                     PCLATH          equ	10	;# 
  3730     000B                     INTCON          equ	11	;# 
  3731     000C                     PORTA           equ	12	;# 
  3732     000D                     PORTB           equ	13	;# 
  3733     000E                     PORTC           equ	14	;# 
  3734     0010                     PIR0            equ	16	;# 
  3735     0011                     PIR1            equ	17	;# 
  3736     0012                     PIR2            equ	18	;# 
  3737     0013                     PIR3            equ	19	;# 
  3738     0014                     PIR4            equ	20	;# 
  3739     0015                     TMR0L           equ	21	;# 
  3740     0015                     TMR0            equ	21	;# 
  3741     0016                     TMR0H           equ	22	;# 
  3742     0016                     PR0             equ	22	;# 
  3743     0017                     T0CON0          equ	23	;# 
  3744     0018                     T0CON1          equ	24	;# 
  3745     0019                     TMR1            equ	25	;# 
  3746     0019                     TMR1L           equ	25	;# 
  3747     001A                     TMR1H           equ	26	;# 
  3748     001B                     T1CON           equ	27	;# 
  3749     001C                     T1GCON          equ	28	;# 
  3750     001D                     TMR2            equ	29	;# 
  3751     001E                     PR2             equ	30	;# 
  3752     001F                     T2CON           equ	31	;# 
  3753     008C                     TRISA           equ	140	;# 
  3754     008D                     TRISB           equ	141	;# 
  3755     008E                     TRISC           equ	142	;# 
  3756     0090                     PIE0            equ	144	;# 
  3757     0091                     PIE1            equ	145	;# 
  3758     0092                     PIE2            equ	146	;# 
  3759     0093                     PIE3            equ	147	;# 
  3760     0094                     PIE4            equ	148	;# 
  3761     0097                     WDTCON          equ	151	;# 
  3762     009B                     ADRES           equ	155	;# 
  3763     009B                     ADRESL          equ	155	;# 
  3764     009C                     ADRESH          equ	156	;# 
  3765     009D                     ADCON0          equ	157	;# 
  3766     009E                     ADCON1          equ	158	;# 
  3767     009F                     ADACT           equ	159	;# 
  3768     010C                     LATA            equ	268	;# 
  3769     010D                     LATB            equ	269	;# 
  3770     010E                     LATC            equ	270	;# 
  3771     0111                     CM1CON0         equ	273	;# 
  3772     0112                     CM1CON1         equ	274	;# 
  3773     0113                     CM2CON0         equ	275	;# 
  3774     0114                     CM2CON1         equ	276	;# 
  3775     0115                     CMOUT           equ	277	;# 
  3776     0116                     BORCON          equ	278	;# 
  3777     0117                     FVRCON          equ	279	;# 
  3778     0118                     DACCON0         equ	280	;# 
  3779     0119                     DACCON1         equ	281	;# 
  3780     018C                     ANSELA          equ	396	;# 
  3781     018D                     ANSELB          equ	397	;# 
  3782     018E                     ANSELC          equ	398	;# 
  3783     0197                     VREGCON         equ	407	;# 
  3784     0199                     RC1REG          equ	409	;# 
  3785     0199                     RCREG           equ	409	;# 
  3786     0199                     RCREG1          equ	409	;# 
  3787     019A                     TX1REG          equ	410	;# 
  3788     019A                     TXREG1          equ	410	;# 
  3789     019A                     TXREG           equ	410	;# 
  3790     019B                     SP1BRG          equ	411	;# 
  3791     019B                     SPBRG           equ	411	;# 
  3792     019B                     SP1BRGL         equ	411	;# 
  3793     019B                     SPBRG1          equ	411	;# 
  3794     019B                     SPBRGL          equ	411	;# 
  3795     019C                     SP1BRGH         equ	412	;# 
  3796     019C                     SPBRGH          equ	412	;# 
  3797     019C                     SPBRGH1         equ	412	;# 
  3798     019D                     RC1STA          equ	413	;# 
  3799     019D                     RCSTA1          equ	413	;# 
  3800     019D                     RCSTA           equ	413	;# 
  3801     019E                     TX1STA          equ	414	;# 
  3802     019E                     TXSTA1          equ	414	;# 
  3803     019E                     TXSTA           equ	414	;# 
  3804     019F                     BAUD1CON        equ	415	;# 
  3805     019F                     BAUDCON1        equ	415	;# 
  3806     019F                     BAUDCTL1        equ	415	;# 
  3807     019F                     BAUDCON         equ	415	;# 
  3808     019F                     BAUDCTL         equ	415	;# 
  3809     020C                     WPUA            equ	524	;# 
  3810     020D                     WPUB            equ	525	;# 
  3811     020E                     WPUC            equ	526	;# 
  3812     0211                     SSP1BUF         equ	529	;# 
  3813     0211                     SSPBUF          equ	529	;# 
  3814     0212                     SSP1ADD         equ	530	;# 
  3815     0212                     SSPADD          equ	530	;# 
  3816     0213                     SSP1MSK         equ	531	;# 
  3817     0213                     SSPMSK          equ	531	;# 
  3818     0214                     SSP1STAT        equ	532	;# 
  3819     0214                     SSPSTAT         equ	532	;# 
  3820     0215                     SSP1CON1        equ	533	;# 
  3821     0215                     SSPCON          equ	533	;# 
  3822     0215                     SSPCON1         equ	533	;# 
  3823     0215                     SSP1CON         equ	533	;# 
  3824     0216                     SSP1CON2        equ	534	;# 
  3825     0216                     SSPCON2         equ	534	;# 
  3826     0217                     SSP1CON3        equ	535	;# 
  3827     0217                     SSPCON3         equ	535	;# 
  3828     0219                     SSP2BUF         equ	537	;# 
  3829     021A                     SSP2ADD         equ	538	;# 
  3830     021B                     SSP2MSK         equ	539	;# 
  3831     021C                     SSP2STAT        equ	540	;# 
  3832     021D                     SSP2CON1        equ	541	;# 
  3833     021D                     SSP2CON         equ	541	;# 
  3834     021E                     SSP2CON2        equ	542	;# 
  3835     021F                     SSP2CON3        equ	543	;# 
  3836     028C                     ODCONA          equ	652	;# 
  3837     028D                     ODCONB          equ	653	;# 
  3838     028E                     ODCONC          equ	654	;# 
  3839     0291                     CCPR1           equ	657	;# 
  3840     0291                     CCPR1L          equ	657	;# 
  3841     0292                     CCPR1H          equ	658	;# 
  3842     0293                     CCP1CON         equ	659	;# 
  3843     0294                     CCP1CAP         equ	660	;# 
  3844     0295                     CCPR2           equ	661	;# 
  3845     0295                     CCPR2L          equ	661	;# 
  3846     0296                     CCPR2H          equ	662	;# 
  3847     0297                     CCP2CON         equ	663	;# 
  3848     0298                     CCP2CAP         equ	664	;# 
  3849     029F                     CCPTMRS         equ	671	;# 
  3850     030C                     SLRCONA         equ	780	;# 
  3851     030D                     SLRCONB         equ	781	;# 
  3852     030E                     SLRCONC         equ	782	;# 
  3853     0311                     CCPR3           equ	785	;# 
  3854     0311                     CCPR3L          equ	785	;# 
  3855     0312                     CCPR3H          equ	786	;# 
  3856     0313                     CCP3CON         equ	787	;# 
  3857     0314                     CCP3CAP         equ	788	;# 
  3858     0315                     CCPR4           equ	789	;# 
  3859     0315                     CCPR4L          equ	789	;# 
  3860     0316                     CCPR4H          equ	790	;# 
  3861     0317                     CCP4CON         equ	791	;# 
  3862     0318                     CCP4CAP         equ	792	;# 
  3863     038C                     INLVLA          equ	908	;# 
  3864     038D                     INLVLB          equ	909	;# 
  3865     038E                     INLVLC          equ	910	;# 
  3866     0391                     IOCAP           equ	913	;# 
  3867     0392                     IOCAN           equ	914	;# 
  3868     0393                     IOCAF           equ	915	;# 
  3869     0394                     IOCBP           equ	916	;# 
  3870     0395                     IOCBN           equ	917	;# 
  3871     0396                     IOCBF           equ	918	;# 
  3872     0397                     IOCCP           equ	919	;# 
  3873     0398                     IOCCN           equ	920	;# 
  3874     0399                     IOCCF           equ	921	;# 
  3875     039A                     CLKRCON         equ	922	;# 
  3876     039C                     MDCON           equ	924	;# 
  3877     039D                     MDSRC           equ	925	;# 
  3878     039E                     MDCARH          equ	926	;# 
  3879     039F                     MDCARL          equ	927	;# 
  3880     0411                     TMR3            equ	1041	;# 
  3881     0411                     TMR3L           equ	1041	;# 
  3882     0412                     TMR3H           equ	1042	;# 
  3883     0413                     T3CON           equ	1043	;# 
  3884     0414                     T3GCON          equ	1044	;# 
  3885     0415                     TMR4            equ	1045	;# 
  3886     0416                     PR4             equ	1046	;# 
  3887     0417                     T4CON           equ	1047	;# 
  3888     0418                     TMR5            equ	1048	;# 
  3889     0418                     TMR5L           equ	1048	;# 
  3890     0419                     TMR5H           equ	1049	;# 
  3891     041A                     T5CON           equ	1050	;# 
  3892     041B                     T5GCON          equ	1051	;# 
  3893     041C                     TMR6            equ	1052	;# 
  3894     041D                     PR6             equ	1053	;# 
  3895     041E                     T6CON           equ	1054	;# 
  3896     041F                     CCDCON          equ	1055	;# 
  3897     0498                     NCO1ACC         equ	1176	;# 
  3898     0498                     NCO1ACCL        equ	1176	;# 
  3899     0499                     NCO1ACCH        equ	1177	;# 
  3900     049A                     NCO1ACCU        equ	1178	;# 
  3901     049B                     NCO1INC         equ	1179	;# 
  3902     049B                     NCO1INCL        equ	1179	;# 
  3903     049C                     NCO1INCH        equ	1180	;# 
  3904     049D                     NCO1INCU        equ	1181	;# 
  3905     049E                     NCO1CON         equ	1182	;# 
  3906     049F                     NCO1CLK         equ	1183	;# 
  3907     0617                     PWM5DCL         equ	1559	;# 
  3908     0618                     PWM5DCH         equ	1560	;# 
  3909     0619                     PWM5CON         equ	1561	;# 
  3910     0619                     PWM5CON0        equ	1561	;# 
  3911     061A                     PWM6DCL         equ	1562	;# 
  3912     061B                     PWM6DCH         equ	1563	;# 
  3913     061C                     PWM6CON         equ	1564	;# 
  3914     061C                     PWM6CON0        equ	1564	;# 
  3915     061F                     PWMTMRS         equ	1567	;# 
  3916     0691                     CWG1CLKCON      equ	1681	;# 
  3917     0692                     CWG1DAT         equ	1682	;# 
  3918     0693                     CWG1DBR         equ	1683	;# 
  3919     0694                     CWG1DBF         equ	1684	;# 
  3920     0695                     CWG1CON0        equ	1685	;# 
  3921     0696                     CWG1CON1        equ	1686	;# 
  3922     0697                     CWG1AS0         equ	1687	;# 
  3923     0698                     CWG1AS1         equ	1688	;# 
  3924     0699                     CWG1STR         equ	1689	;# 
  3925     0711                     CWG2CLKCON      equ	1809	;# 
  3926     0712                     CWG2DAT         equ	1810	;# 
  3927     0713                     CWG2DBR         equ	1811	;# 
  3928     0714                     CWG2DBF         equ	1812	;# 
  3929     0715                     CWG2CON0        equ	1813	;# 
  3930     0716                     CWG2CON1        equ	1814	;# 
  3931     0717                     CWG2AS0         equ	1815	;# 
  3932     0718                     CWG2AS1         equ	1816	;# 
  3933     0719                     CWG2STR         equ	1817	;# 
  3934     0891                     NVMADR          equ	2193	;# 
  3935     0891                     EEADR           equ	2193	;# 
  3936     0891                     PMADR           equ	2193	;# 
  3937     0891                     NVMADRL         equ	2193	;# 
  3938     0891                     EEADRL          equ	2193	;# 
  3939     0891                     PMADRL          equ	2193	;# 
  3940     0892                     NVMADRH         equ	2194	;# 
  3941     0892                     EEADRH          equ	2194	;# 
  3942     0892                     PMADRH          equ	2194	;# 
  3943     0893                     NVMDAT          equ	2195	;# 
  3944     0893                     EEDAT           equ	2195	;# 
  3945     0893                     PMDAT           equ	2195	;# 
  3946     0893                     NVMDATL         equ	2195	;# 
  3947     0893                     EEDATL          equ	2195	;# 
  3948     0893                     PMDATL          equ	2195	;# 
  3949     0894                     NVMDATH         equ	2196	;# 
  3950     0894                     EEDATH          equ	2196	;# 
  3951     0894                     PMDATH          equ	2196	;# 
  3952     0895                     NVMCON1         equ	2197	;# 
  3953     0895                     EECON1          equ	2197	;# 
  3954     0895                     PMCON1          equ	2197	;# 
  3955     0896                     NVMCON2         equ	2198	;# 
  3956     0896                     EECON2          equ	2198	;# 
  3957     0896                     PMCON2          equ	2198	;# 
  3958     089B                     PCON0           equ	2203	;# 
  3959     0911                     PMD0            equ	2321	;# 
  3960     0912                     PMD1            equ	2322	;# 
  3961     0913                     PMD2            equ	2323	;# 
  3962     0914                     PMD3            equ	2324	;# 
  3963     0915                     PMD4            equ	2325	;# 
  3964     0916                     PMD5            equ	2326	;# 
  3965     0918                     CPUDOZE         equ	2328	;# 
  3966     0919                     OSCCON1         equ	2329	;# 
  3967     091A                     OSCCON2         equ	2330	;# 
  3968     091B                     OSCCON3         equ	2331	;# 
  3969     091C                     OSCSTAT1        equ	2332	;# 
  3970     091D                     OSCEN           equ	2333	;# 
  3971     091E                     OSCTUNE         equ	2334	;# 
  3972     091F                     OSCFRQ          equ	2335	;# 
  3973     0E0F                     PPSLOCK         equ	3599	;# 
  3974     0E10                     INTPPS          equ	3600	;# 
  3975     0E11                     T0CKIPPS        equ	3601	;# 
  3976     0E12                     T1CKIPPS        equ	3602	;# 
  3977     0E13                     T1GPPS          equ	3603	;# 
  3978     0E14                     CCP1PPS         equ	3604	;# 
  3979     0E15                     CCP2PPS         equ	3605	;# 
  3980     0E16                     CCP3PPS         equ	3606	;# 
  3981     0E17                     CCP4PPS         equ	3607	;# 
  3982     0E18                     CWG1PPS         equ	3608	;# 
  3983     0E19                     CWG2PPS         equ	3609	;# 
  3984     0E1A                     MDCIN1PPS       equ	3610	;# 
  3985     0E1B                     MDCIN2PPS       equ	3611	;# 
  3986     0E1C                     MDMINPPS        equ	3612	;# 
  3987     0E1D                     SSP2CLKPPS      equ	3613	;# 
  3988     0E1E                     SSP2DATPPS      equ	3614	;# 
  3989     0E1F                     SSP2SSPPS       equ	3615	;# 
  3990     0E20                     SSP1CLKPPS      equ	3616	;# 
  3991     0E21                     SSP1DATPPS      equ	3617	;# 
  3992     0E22                     SSP1SSPPS       equ	3618	;# 
  3993     0E24                     RXPPS           equ	3620	;# 
  3994     0E25                     TXPPS           equ	3621	;# 
  3995     0E28                     CLCIN0PPS       equ	3624	;# 
  3996     0E29                     CLCIN1PPS       equ	3625	;# 
  3997     0E2A                     CLCIN2PPS       equ	3626	;# 
  3998     0E2B                     CLCIN3PPS       equ	3627	;# 
  3999     0E2C                     T3CKIPPS        equ	3628	;# 
  4000     0E2D                     T3GPPS          equ	3629	;# 
  4001     0E2E                     T5CKIPPS        equ	3630	;# 
  4002     0E2F                     T5GPPS          equ	3631	;# 
  4003     0E90                     RA0PPS          equ	3728	;# 
  4004     0E91                     RA1PPS          equ	3729	;# 
  4005     0E92                     RA2PPS          equ	3730	;# 
  4006     0E94                     RA4PPS          equ	3732	;# 
  4007     0E95                     RA5PPS          equ	3733	;# 
  4008     0E9C                     RB4PPS          equ	3740	;# 
  4009     0E9D                     RB5PPS          equ	3741	;# 
  4010     0E9E                     RB6PPS          equ	3742	;# 
  4011     0E9F                     RB7PPS          equ	3743	;# 
  4012     0EA0                     RC0PPS          equ	3744	;# 
  4013     0EA1                     RC1PPS          equ	3745	;# 
  4014     0EA2                     RC2PPS          equ	3746	;# 
  4015     0EA3                     RC3PPS          equ	3747	;# 
  4016     0EA4                     RC4PPS          equ	3748	;# 
  4017     0EA5                     RC5PPS          equ	3749	;# 
  4018     0EA6                     RC6PPS          equ	3750	;# 
  4019     0EA7                     RC7PPS          equ	3751	;# 
  4020     0F0F                     CLCDATA         equ	3855	;# 
  4021     0F10                     CLC1CON         equ	3856	;# 
  4022     0F11                     CLC1POL         equ	3857	;# 
  4023     0F12                     CLC1SEL0        equ	3858	;# 
  4024     0F13                     CLC1SEL1        equ	3859	;# 
  4025     0F14                     CLC1SEL2        equ	3860	;# 
  4026     0F15                     CLC1SEL3        equ	3861	;# 
  4027     0F16                     CLC1GLS0        equ	3862	;# 
  4028     0F17                     CLC1GLS1        equ	3863	;# 
  4029     0F18                     CLC1GLS2        equ	3864	;# 
  4030     0F19                     CLC1GLS3        equ	3865	;# 
  4031     0F1A                     CLC2CON         equ	3866	;# 
  4032     0F1B                     CLC2POL         equ	3867	;# 
  4033     0F1C                     CLC2SEL0        equ	3868	;# 
  4034     0F1D                     CLC2SEL1        equ	3869	;# 
  4035     0F1E                     CLC2SEL2        equ	3870	;# 
  4036     0F1F                     CLC2SEL3        equ	3871	;# 
  4037     0F20                     CLC2GLS0        equ	3872	;# 
  4038     0F21                     CLC2GLS1        equ	3873	;# 
  4039     0F22                     CLC2GLS2        equ	3874	;# 
  4040     0F23                     CLC2GLS3        equ	3875	;# 
  4041     0F24                     CLC3CON         equ	3876	;# 
  4042     0F25                     CLC3POL         equ	3877	;# 
  4043     0F26                     CLC3SEL0        equ	3878	;# 
  4044     0F27                     CLC3SEL1        equ	3879	;# 
  4045     0F28                     CLC3SEL2        equ	3880	;# 
  4046     0F29                     CLC3SEL3        equ	3881	;# 
  4047     0F2A                     CLC3GLS0        equ	3882	;# 
  4048     0F2B                     CLC3GLS1        equ	3883	;# 
  4049     0F2C                     CLC3GLS2        equ	3884	;# 
  4050     0F2D                     CLC3GLS3        equ	3885	;# 
  4051     0F2E                     CLC4CON         equ	3886	;# 
  4052     0F2F                     CLC4POL         equ	3887	;# 
  4053     0F30                     CLC4SEL0        equ	3888	;# 
  4054     0F31                     CLC4SEL1        equ	3889	;# 
  4055     0F32                     CLC4SEL2        equ	3890	;# 
  4056     0F33                     CLC4SEL3        equ	3891	;# 
  4057     0F34                     CLC4GLS0        equ	3892	;# 
  4058     0F35                     CLC4GLS1        equ	3893	;# 
  4059     0F36                     CLC4GLS2        equ	3894	;# 
  4060     0F37                     CLC4GLS3        equ	3895	;# 
  4061     0FE4                     STATUS_SHAD     equ	4068	;# 
  4062     0FE5                     WREG_SHAD       equ	4069	;# 
  4063     0FE6                     BSR_SHAD        equ	4070	;# 
  4064     0FE7                     PCLATH_SHAD     equ	4071	;# 
  4065     0FE8                     FSR0L_SHAD      equ	4072	;# 
  4066     0FE9                     FSR0H_SHAD      equ	4073	;# 
  4067     0FEA                     FSR1L_SHAD      equ	4074	;# 
  4068     0FEB                     FSR1H_SHAD      equ	4075	;# 
  4069     0FED                     STKPTR          equ	4077	;# 
  4070     0FEE                     TOSL            equ	4078	;# 
  4071     0FEF                     TOSH            equ	4079	;# 
  4072     0000                     INDF0           equ	0	;# 
  4073     0001                     INDF1           equ	1	;# 
  4074     0002                     PCL             equ	2	;# 
  4075     0003                     STATUS          equ	3	;# 
  4076     0004                     FSR0L           equ	4	;# 
  4077     0005                     FSR0H           equ	5	;# 
  4078     0006                     FSR1L           equ	6	;# 
  4079     0007                     FSR1H           equ	7	;# 
  4080     0008                     BSR             equ	8	;# 
  4081     0009                     WREG            equ	9	;# 
  4082     000A                     PCLATH          equ	10	;# 
  4083     000B                     INTCON          equ	11	;# 
  4084     000C                     PORTA           equ	12	;# 
  4085     000D                     PORTB           equ	13	;# 
  4086     000E                     PORTC           equ	14	;# 
  4087     0010                     PIR0            equ	16	;# 
  4088     0011                     PIR1            equ	17	;# 
  4089     0012                     PIR2            equ	18	;# 
  4090     0013                     PIR3            equ	19	;# 
  4091     0014                     PIR4            equ	20	;# 
  4092     0015                     TMR0L           equ	21	;# 
  4093     0015                     TMR0            equ	21	;# 
  4094     0016                     TMR0H           equ	22	;# 
  4095     0016                     PR0             equ	22	;# 
  4096     0017                     T0CON0          equ	23	;# 
  4097     0018                     T0CON1          equ	24	;# 
  4098     0019                     TMR1            equ	25	;# 
  4099     0019                     TMR1L           equ	25	;# 
  4100     001A                     TMR1H           equ	26	;# 
  4101     001B                     T1CON           equ	27	;# 
  4102     001C                     T1GCON          equ	28	;# 
  4103     001D                     TMR2            equ	29	;# 
  4104     001E                     PR2             equ	30	;# 
  4105     001F                     T2CON           equ	31	;# 
  4106     008C                     TRISA           equ	140	;# 
  4107     008D                     TRISB           equ	141	;# 
  4108     008E                     TRISC           equ	142	;# 
  4109     0090                     PIE0            equ	144	;# 
  4110     0091                     PIE1            equ	145	;# 
  4111     0092                     PIE2            equ	146	;# 
  4112     0093                     PIE3            equ	147	;# 
  4113     0094                     PIE4            equ	148	;# 
  4114     0097                     WDTCON          equ	151	;# 
  4115     009B                     ADRES           equ	155	;# 
  4116     009B                     ADRESL          equ	155	;# 
  4117     009C                     ADRESH          equ	156	;# 
  4118     009D                     ADCON0          equ	157	;# 
  4119     009E                     ADCON1          equ	158	;# 
  4120     009F                     ADACT           equ	159	;# 
  4121     010C                     LATA            equ	268	;# 
  4122     010D                     LATB            equ	269	;# 
  4123     010E                     LATC            equ	270	;# 
  4124     0111                     CM1CON0         equ	273	;# 
  4125     0112                     CM1CON1         equ	274	;# 
  4126     0113                     CM2CON0         equ	275	;# 
  4127     0114                     CM2CON1         equ	276	;# 
  4128     0115                     CMOUT           equ	277	;# 
  4129     0116                     BORCON          equ	278	;# 
  4130     0117                     FVRCON          equ	279	;# 
  4131     0118                     DACCON0         equ	280	;# 
  4132     0119                     DACCON1         equ	281	;# 
  4133     018C                     ANSELA          equ	396	;# 
  4134     018D                     ANSELB          equ	397	;# 
  4135     018E                     ANSELC          equ	398	;# 
  4136     0197                     VREGCON         equ	407	;# 
  4137     0199                     RC1REG          equ	409	;# 
  4138     0199                     RCREG           equ	409	;# 
  4139     0199                     RCREG1          equ	409	;# 
  4140     019A                     TX1REG          equ	410	;# 
  4141     019A                     TXREG1          equ	410	;# 
  4142     019A                     TXREG           equ	410	;# 
  4143     019B                     SP1BRG          equ	411	;# 
  4144     019B                     SPBRG           equ	411	;# 
  4145     019B                     SP1BRGL         equ	411	;# 
  4146     019B                     SPBRG1          equ	411	;# 
  4147     019B                     SPBRGL          equ	411	;# 
  4148     019C                     SP1BRGH         equ	412	;# 
  4149     019C                     SPBRGH          equ	412	;# 
  4150     019C                     SPBRGH1         equ	412	;# 
  4151     019D                     RC1STA          equ	413	;# 
  4152     019D                     RCSTA1          equ	413	;# 
  4153     019D                     RCSTA           equ	413	;# 
  4154     019E                     TX1STA          equ	414	;# 
  4155     019E                     TXSTA1          equ	414	;# 
  4156     019E                     TXSTA           equ	414	;# 
  4157     019F                     BAUD1CON        equ	415	;# 
  4158     019F                     BAUDCON1        equ	415	;# 
  4159     019F                     BAUDCTL1        equ	415	;# 
  4160     019F                     BAUDCON         equ	415	;# 
  4161     019F                     BAUDCTL         equ	415	;# 
  4162     020C                     WPUA            equ	524	;# 
  4163     020D                     WPUB            equ	525	;# 
  4164     020E                     WPUC            equ	526	;# 
  4165     0211                     SSP1BUF         equ	529	;# 
  4166     0211                     SSPBUF          equ	529	;# 
  4167     0212                     SSP1ADD         equ	530	;# 
  4168     0212                     SSPADD          equ	530	;# 
  4169     0213                     SSP1MSK         equ	531	;# 
  4170     0213                     SSPMSK          equ	531	;# 
  4171     0214                     SSP1STAT        equ	532	;# 
  4172     0214                     SSPSTAT         equ	532	;# 
  4173     0215                     SSP1CON1        equ	533	;# 
  4174     0215                     SSPCON          equ	533	;# 
  4175     0215                     SSPCON1         equ	533	;# 
  4176     0215                     SSP1CON         equ	533	;# 
  4177     0216                     SSP1CON2        equ	534	;# 
  4178     0216                     SSPCON2         equ	534	;# 
  4179     0217                     SSP1CON3        equ	535	;# 
  4180     0217                     SSPCON3         equ	535	;# 
  4181     0219                     SSP2BUF         equ	537	;# 
  4182     021A                     SSP2ADD         equ	538	;# 
  4183     021B                     SSP2MSK         equ	539	;# 
  4184     021C                     SSP2STAT        equ	540	;# 
  4185     021D                     SSP2CON1        equ	541	;# 
  4186     021D                     SSP2CON         equ	541	;# 
  4187     021E                     SSP2CON2        equ	542	;# 
  4188     021F                     SSP2CON3        equ	543	;# 
  4189     028C                     ODCONA          equ	652	;# 
  4190     028D                     ODCONB          equ	653	;# 
  4191     028E                     ODCONC          equ	654	;# 
  4192     0291                     CCPR1           equ	657	;# 
  4193     0291                     CCPR1L          equ	657	;# 
  4194     0292                     CCPR1H          equ	658	;# 
  4195     0293                     CCP1CON         equ	659	;# 
  4196     0294                     CCP1CAP         equ	660	;# 
  4197     0295                     CCPR2           equ	661	;# 
  4198     0295                     CCPR2L          equ	661	;# 
  4199     0296                     CCPR2H          equ	662	;# 
  4200     0297                     CCP2CON         equ	663	;# 
  4201     0298                     CCP2CAP         equ	664	;# 
  4202     029F                     CCPTMRS         equ	671	;# 
  4203     030C                     SLRCONA         equ	780	;# 
  4204     030D                     SLRCONB         equ	781	;# 
  4205     030E                     SLRCONC         equ	782	;# 
  4206     0311                     CCPR3           equ	785	;# 
  4207     0311                     CCPR3L          equ	785	;# 
  4208     0312                     CCPR3H          equ	786	;# 
  4209     0313                     CCP3CON         equ	787	;# 
  4210     0314                     CCP3CAP         equ	788	;# 
  4211     0315                     CCPR4           equ	789	;# 
  4212     0315                     CCPR4L          equ	789	;# 
  4213     0316                     CCPR4H          equ	790	;# 
  4214     0317                     CCP4CON         equ	791	;# 
  4215     0318                     CCP4CAP         equ	792	;# 
  4216     038C                     INLVLA          equ	908	;# 
  4217     038D                     INLVLB          equ	909	;# 
  4218     038E                     INLVLC          equ	910	;# 
  4219     0391                     IOCAP           equ	913	;# 
  4220     0392                     IOCAN           equ	914	;# 
  4221     0393                     IOCAF           equ	915	;# 
  4222     0394                     IOCBP           equ	916	;# 
  4223     0395                     IOCBN           equ	917	;# 
  4224     0396                     IOCBF           equ	918	;# 
  4225     0397                     IOCCP           equ	919	;# 
  4226     0398                     IOCCN           equ	920	;# 
  4227     0399                     IOCCF           equ	921	;# 
  4228     039A                     CLKRCON         equ	922	;# 
  4229     039C                     MDCON           equ	924	;# 
  4230     039D                     MDSRC           equ	925	;# 
  4231     039E                     MDCARH          equ	926	;# 
  4232     039F                     MDCARL          equ	927	;# 
  4233     0411                     TMR3            equ	1041	;# 
  4234     0411                     TMR3L           equ	1041	;# 
  4235     0412                     TMR3H           equ	1042	;# 
  4236     0413                     T3CON           equ	1043	;# 
  4237     0414                     T3GCON          equ	1044	;# 
  4238     0415                     TMR4            equ	1045	;# 
  4239     0416                     PR4             equ	1046	;# 
  4240     0417                     T4CON           equ	1047	;# 
  4241     0418                     TMR5            equ	1048	;# 
  4242     0418                     TMR5L           equ	1048	;# 
  4243     0419                     TMR5H           equ	1049	;# 
  4244     041A                     T5CON           equ	1050	;# 
  4245     041B                     T5GCON          equ	1051	;# 
  4246     041C                     TMR6            equ	1052	;# 
  4247     041D                     PR6             equ	1053	;# 
  4248     041E                     T6CON           equ	1054	;# 
  4249     041F                     CCDCON          equ	1055	;# 
  4250     0498                     NCO1ACC         equ	1176	;# 
  4251     0498                     NCO1ACCL        equ	1176	;# 
  4252     0499                     NCO1ACCH        equ	1177	;# 
  4253     049A                     NCO1ACCU        equ	1178	;# 
  4254     049B                     NCO1INC         equ	1179	;# 
  4255     049B                     NCO1INCL        equ	1179	;# 
  4256     049C                     NCO1INCH        equ	1180	;# 
  4257     049D                     NCO1INCU        equ	1181	;# 
  4258     049E                     NCO1CON         equ	1182	;# 
  4259     049F                     NCO1CLK         equ	1183	;# 
  4260     0617                     PWM5DCL         equ	1559	;# 
  4261     0618                     PWM5DCH         equ	1560	;# 
  4262     0619                     PWM5CON         equ	1561	;# 
  4263     0619                     PWM5CON0        equ	1561	;# 
  4264     061A                     PWM6DCL         equ	1562	;# 
  4265     061B                     PWM6DCH         equ	1563	;# 
  4266     061C                     PWM6CON         equ	1564	;# 
  4267     061C                     PWM6CON0        equ	1564	;# 
  4268     061F                     PWMTMRS         equ	1567	;# 
  4269     0691                     CWG1CLKCON      equ	1681	;# 
  4270     0692                     CWG1DAT         equ	1682	;# 
  4271     0693                     CWG1DBR         equ	1683	;# 
  4272     0694                     CWG1DBF         equ	1684	;# 
  4273     0695                     CWG1CON0        equ	1685	;# 
  4274     0696                     CWG1CON1        equ	1686	;# 
  4275     0697                     CWG1AS0         equ	1687	;# 
  4276     0698                     CWG1AS1         equ	1688	;# 
  4277     0699                     CWG1STR         equ	1689	;# 
  4278     0711                     CWG2CLKCON      equ	1809	;# 
  4279     0712                     CWG2DAT         equ	1810	;# 
  4280     0713                     CWG2DBR         equ	1811	;# 
  4281     0714                     CWG2DBF         equ	1812	;# 
  4282     0715                     CWG2CON0        equ	1813	;# 
  4283     0716                     CWG2CON1        equ	1814	;# 
  4284     0717                     CWG2AS0         equ	1815	;# 
  4285     0718                     CWG2AS1         equ	1816	;# 
  4286     0719                     CWG2STR         equ	1817	;# 
  4287     0891                     NVMADR          equ	2193	;# 
  4288     0891                     EEADR           equ	2193	;# 
  4289     0891                     PMADR           equ	2193	;# 
  4290     0891                     NVMADRL         equ	2193	;# 
  4291     0891                     EEADRL          equ	2193	;# 
  4292     0891                     PMADRL          equ	2193	;# 
  4293     0892                     NVMADRH         equ	2194	;# 
  4294     0892                     EEADRH          equ	2194	;# 
  4295     0892                     PMADRH          equ	2194	;# 
  4296     0893                     NVMDAT          equ	2195	;# 
  4297     0893                     EEDAT           equ	2195	;# 
  4298     0893                     PMDAT           equ	2195	;# 
  4299     0893                     NVMDATL         equ	2195	;# 
  4300     0893                     EEDATL          equ	2195	;# 
  4301     0893                     PMDATL          equ	2195	;# 
  4302     0894                     NVMDATH         equ	2196	;# 
  4303     0894                     EEDATH          equ	2196	;# 
  4304     0894                     PMDATH          equ	2196	;# 
  4305     0895                     NVMCON1         equ	2197	;# 
  4306     0895                     EECON1          equ	2197	;# 
  4307     0895                     PMCON1          equ	2197	;# 
  4308     0896                     NVMCON2         equ	2198	;# 
  4309     0896                     EECON2          equ	2198	;# 
  4310     0896                     PMCON2          equ	2198	;# 
  4311     089B                     PCON0           equ	2203	;# 
  4312     0911                     PMD0            equ	2321	;# 
  4313     0912                     PMD1            equ	2322	;# 
  4314     0913                     PMD2            equ	2323	;# 
  4315     0914                     PMD3            equ	2324	;# 
  4316     0915                     PMD4            equ	2325	;# 
  4317     0916                     PMD5            equ	2326	;# 
  4318     0918                     CPUDOZE         equ	2328	;# 
  4319     0919                     OSCCON1         equ	2329	;# 
  4320     091A                     OSCCON2         equ	2330	;# 
  4321     091B                     OSCCON3         equ	2331	;# 
  4322     091C                     OSCSTAT1        equ	2332	;# 
  4323     091D                     OSCEN           equ	2333	;# 
  4324     091E                     OSCTUNE         equ	2334	;# 
  4325     091F                     OSCFRQ          equ	2335	;# 
  4326     0E0F                     PPSLOCK         equ	3599	;# 
  4327     0E10                     INTPPS          equ	3600	;# 
  4328     0E11                     T0CKIPPS        equ	3601	;# 
  4329     0E12                     T1CKIPPS        equ	3602	;# 
  4330     0E13                     T1GPPS          equ	3603	;# 
  4331     0E14                     CCP1PPS         equ	3604	;# 
  4332     0E15                     CCP2PPS         equ	3605	;# 
  4333     0E16                     CCP3PPS         equ	3606	;# 
  4334     0E17                     CCP4PPS         equ	3607	;# 
  4335     0E18                     CWG1PPS         equ	3608	;# 
  4336     0E19                     CWG2PPS         equ	3609	;# 
  4337     0E1A                     MDCIN1PPS       equ	3610	;# 
  4338     0E1B                     MDCIN2PPS       equ	3611	;# 
  4339     0E1C                     MDMINPPS        equ	3612	;# 
  4340     0E1D                     SSP2CLKPPS      equ	3613	;# 
  4341     0E1E                     SSP2DATPPS      equ	3614	;# 
  4342     0E1F                     SSP2SSPPS       equ	3615	;# 
  4343     0E20                     SSP1CLKPPS      equ	3616	;# 
  4344     0E21                     SSP1DATPPS      equ	3617	;# 
  4345     0E22                     SSP1SSPPS       equ	3618	;# 
  4346     0E24                     RXPPS           equ	3620	;# 
  4347     0E25                     TXPPS           equ	3621	;# 
  4348     0E28                     CLCIN0PPS       equ	3624	;# 
  4349     0E29                     CLCIN1PPS       equ	3625	;# 
  4350     0E2A                     CLCIN2PPS       equ	3626	;# 
  4351     0E2B                     CLCIN3PPS       equ	3627	;# 
  4352     0E2C                     T3CKIPPS        equ	3628	;# 
  4353     0E2D                     T3GPPS          equ	3629	;# 
  4354     0E2E                     T5CKIPPS        equ	3630	;# 
  4355     0E2F                     T5GPPS          equ	3631	;# 
  4356     0E90                     RA0PPS          equ	3728	;# 
  4357     0E91                     RA1PPS          equ	3729	;# 
  4358     0E92                     RA2PPS          equ	3730	;# 
  4359     0E94                     RA4PPS          equ	3732	;# 
  4360     0E95                     RA5PPS          equ	3733	;# 
  4361     0E9C                     RB4PPS          equ	3740	;# 
  4362     0E9D                     RB5PPS          equ	3741	;# 
  4363     0E9E                     RB6PPS          equ	3742	;# 
  4364     0E9F                     RB7PPS          equ	3743	;# 
  4365     0EA0                     RC0PPS          equ	3744	;# 
  4366     0EA1                     RC1PPS          equ	3745	;# 
  4367     0EA2                     RC2PPS          equ	3746	;# 
  4368     0EA3                     RC3PPS          equ	3747	;# 
  4369     0EA4                     RC4PPS          equ	3748	;# 
  4370     0EA5                     RC5PPS          equ	3749	;# 
  4371     0EA6                     RC6PPS          equ	3750	;# 
  4372     0EA7                     RC7PPS          equ	3751	;# 
  4373     0F0F                     CLCDATA         equ	3855	;# 
  4374     0F10                     CLC1CON         equ	3856	;# 
  4375     0F11                     CLC1POL         equ	3857	;# 
  4376     0F12                     CLC1SEL0        equ	3858	;# 
  4377     0F13                     CLC1SEL1        equ	3859	;# 
  4378     0F14                     CLC1SEL2        equ	3860	;# 
  4379     0F15                     CLC1SEL3        equ	3861	;# 
  4380     0F16                     CLC1GLS0        equ	3862	;# 
  4381     0F17                     CLC1GLS1        equ	3863	;# 
  4382     0F18                     CLC1GLS2        equ	3864	;# 
  4383     0F19                     CLC1GLS3        equ	3865	;# 
  4384     0F1A                     CLC2CON         equ	3866	;# 
  4385     0F1B                     CLC2POL         equ	3867	;# 
  4386     0F1C                     CLC2SEL0        equ	3868	;# 
  4387     0F1D                     CLC2SEL1        equ	3869	;# 
  4388     0F1E                     CLC2SEL2        equ	3870	;# 
  4389     0F1F                     CLC2SEL3        equ	3871	;# 
  4390     0F20                     CLC2GLS0        equ	3872	;# 
  4391     0F21                     CLC2GLS1        equ	3873	;# 
  4392     0F22                     CLC2GLS2        equ	3874	;# 
  4393     0F23                     CLC2GLS3        equ	3875	;# 
  4394     0F24                     CLC3CON         equ	3876	;# 
  4395     0F25                     CLC3POL         equ	3877	;# 
  4396     0F26                     CLC3SEL0        equ	3878	;# 
  4397     0F27                     CLC3SEL1        equ	3879	;# 
  4398     0F28                     CLC3SEL2        equ	3880	;# 
  4399     0F29                     CLC3SEL3        equ	3881	;# 
  4400     0F2A                     CLC3GLS0        equ	3882	;# 
  4401     0F2B                     CLC3GLS1        equ	3883	;# 
  4402     0F2C                     CLC3GLS2        equ	3884	;# 
  4403     0F2D                     CLC3GLS3        equ	3885	;# 
  4404     0F2E                     CLC4CON         equ	3886	;# 
  4405     0F2F                     CLC4POL         equ	3887	;# 
  4406     0F30                     CLC4SEL0        equ	3888	;# 
  4407     0F31                     CLC4SEL1        equ	3889	;# 
  4408     0F32                     CLC4SEL2        equ	3890	;# 
  4409     0F33                     CLC4SEL3        equ	3891	;# 
  4410     0F34                     CLC4GLS0        equ	3892	;# 
  4411     0F35                     CLC4GLS1        equ	3893	;# 
  4412     0F36                     CLC4GLS2        equ	3894	;# 
  4413     0F37                     CLC4GLS3        equ	3895	;# 
  4414     0FE4                     STATUS_SHAD     equ	4068	;# 
  4415     0FE5                     WREG_SHAD       equ	4069	;# 
  4416     0FE6                     BSR_SHAD        equ	4070	;# 
  4417     0FE7                     PCLATH_SHAD     equ	4071	;# 
  4418     0FE8                     FSR0L_SHAD      equ	4072	;# 
  4419     0FE9                     FSR0H_SHAD      equ	4073	;# 
  4420     0FEA                     FSR1L_SHAD      equ	4074	;# 
  4421     0FEB                     FSR1H_SHAD      equ	4075	;# 
  4422     0FED                     STKPTR          equ	4077	;# 
  4423     0FEE                     TOSL            equ	4078	;# 
  4424     0FEF                     TOSH            equ	4079	;# 
  4425     0000                     INDF0           equ	0	;# 
  4426     0001                     INDF1           equ	1	;# 
  4427     0002                     PCL             equ	2	;# 
  4428     0003                     STATUS          equ	3	;# 
  4429     0004                     FSR0L           equ	4	;# 
  4430     0005                     FSR0H           equ	5	;# 
  4431     0006                     FSR1L           equ	6	;# 
  4432     0007                     FSR1H           equ	7	;# 
  4433     0008                     BSR             equ	8	;# 
  4434     0009                     WREG            equ	9	;# 
  4435     000A                     PCLATH          equ	10	;# 
  4436     000B                     INTCON          equ	11	;# 
  4437     000C                     PORTA           equ	12	;# 
  4438     000D                     PORTB           equ	13	;# 
  4439     000E                     PORTC           equ	14	;# 
  4440     0010                     PIR0            equ	16	;# 
  4441     0011                     PIR1            equ	17	;# 
  4442     0012                     PIR2            equ	18	;# 
  4443     0013                     PIR3            equ	19	;# 
  4444     0014                     PIR4            equ	20	;# 
  4445     0015                     TMR0L           equ	21	;# 
  4446     0015                     TMR0            equ	21	;# 
  4447     0016                     TMR0H           equ	22	;# 
  4448     0016                     PR0             equ	22	;# 
  4449     0017                     T0CON0          equ	23	;# 
  4450     0018                     T0CON1          equ	24	;# 
  4451     0019                     TMR1            equ	25	;# 
  4452     0019                     TMR1L           equ	25	;# 
  4453     001A                     TMR1H           equ	26	;# 
  4454     001B                     T1CON           equ	27	;# 
  4455     001C                     T1GCON          equ	28	;# 
  4456     001D                     TMR2            equ	29	;# 
  4457     001E                     PR2             equ	30	;# 
  4458     001F                     T2CON           equ	31	;# 
  4459     008C                     TRISA           equ	140	;# 
  4460     008D                     TRISB           equ	141	;# 
  4461     008E                     TRISC           equ	142	;# 
  4462     0090                     PIE0            equ	144	;# 
  4463     0091                     PIE1            equ	145	;# 
  4464     0092                     PIE2            equ	146	;# 
  4465     0093                     PIE3            equ	147	;# 
  4466     0094                     PIE4            equ	148	;# 
  4467     0097                     WDTCON          equ	151	;# 
  4468     009B                     ADRES           equ	155	;# 
  4469     009B                     ADRESL          equ	155	;# 
  4470     009C                     ADRESH          equ	156	;# 
  4471     009D                     ADCON0          equ	157	;# 
  4472     009E                     ADCON1          equ	158	;# 
  4473     009F                     ADACT           equ	159	;# 
  4474     010C                     LATA            equ	268	;# 
  4475     010D                     LATB            equ	269	;# 
  4476     010E                     LATC            equ	270	;# 
  4477     0111                     CM1CON0         equ	273	;# 
  4478     0112                     CM1CON1         equ	274	;# 
  4479     0113                     CM2CON0         equ	275	;# 
  4480     0114                     CM2CON1         equ	276	;# 
  4481     0115                     CMOUT           equ	277	;# 
  4482     0116                     BORCON          equ	278	;# 
  4483     0117                     FVRCON          equ	279	;# 
  4484     0118                     DACCON0         equ	280	;# 
  4485     0119                     DACCON1         equ	281	;# 
  4486     018C                     ANSELA          equ	396	;# 
  4487     018D                     ANSELB          equ	397	;# 
  4488     018E                     ANSELC          equ	398	;# 
  4489     0197                     VREGCON         equ	407	;# 
  4490     0199                     RC1REG          equ	409	;# 
  4491     0199                     RCREG           equ	409	;# 
  4492     0199                     RCREG1          equ	409	;# 
  4493     019A                     TX1REG          equ	410	;# 
  4494     019A                     TXREG1          equ	410	;# 
  4495     019A                     TXREG           equ	410	;# 
  4496     019B                     SP1BRG          equ	411	;# 
  4497     019B                     SPBRG           equ	411	;# 
  4498     019B                     SP1BRGL         equ	411	;# 
  4499     019B                     SPBRG1          equ	411	;# 
  4500     019B                     SPBRGL          equ	411	;# 
  4501     019C                     SP1BRGH         equ	412	;# 
  4502     019C                     SPBRGH          equ	412	;# 
  4503     019C                     SPBRGH1         equ	412	;# 
  4504     019D                     RC1STA          equ	413	;# 
  4505     019D                     RCSTA1          equ	413	;# 
  4506     019D                     RCSTA           equ	413	;# 
  4507     019E                     TX1STA          equ	414	;# 
  4508     019E                     TXSTA1          equ	414	;# 
  4509     019E                     TXSTA           equ	414	;# 
  4510     019F                     BAUD1CON        equ	415	;# 
  4511     019F                     BAUDCON1        equ	415	;# 
  4512     019F                     BAUDCTL1        equ	415	;# 
  4513     019F                     BAUDCON         equ	415	;# 
  4514     019F                     BAUDCTL         equ	415	;# 
  4515     020C                     WPUA            equ	524	;# 
  4516     020D                     WPUB            equ	525	;# 
  4517     020E                     WPUC            equ	526	;# 
  4518     0211                     SSP1BUF         equ	529	;# 
  4519     0211                     SSPBUF          equ	529	;# 
  4520     0212                     SSP1ADD         equ	530	;# 
  4521     0212                     SSPADD          equ	530	;# 
  4522     0213                     SSP1MSK         equ	531	;# 
  4523     0213                     SSPMSK          equ	531	;# 
  4524     0214                     SSP1STAT        equ	532	;# 
  4525     0214                     SSPSTAT         equ	532	;# 
  4526     0215                     SSP1CON1        equ	533	;# 
  4527     0215                     SSPCON          equ	533	;# 
  4528     0215                     SSPCON1         equ	533	;# 
  4529     0215                     SSP1CON         equ	533	;# 
  4530     0216                     SSP1CON2        equ	534	;# 
  4531     0216                     SSPCON2         equ	534	;# 
  4532     0217                     SSP1CON3        equ	535	;# 
  4533     0217                     SSPCON3         equ	535	;# 
  4534     0219                     SSP2BUF         equ	537	;# 
  4535     021A                     SSP2ADD         equ	538	;# 
  4536     021B                     SSP2MSK         equ	539	;# 
  4537     021C                     SSP2STAT        equ	540	;# 
  4538     021D                     SSP2CON1        equ	541	;# 
  4539     021D                     SSP2CON         equ	541	;# 
  4540     021E                     SSP2CON2        equ	542	;# 
  4541     021F                     SSP2CON3        equ	543	;# 
  4542     028C                     ODCONA          equ	652	;# 
  4543     028D                     ODCONB          equ	653	;# 
  4544     028E                     ODCONC          equ	654	;# 
  4545     0291                     CCPR1           equ	657	;# 
  4546     0291                     CCPR1L          equ	657	;# 
  4547     0292                     CCPR1H          equ	658	;# 
  4548     0293                     CCP1CON         equ	659	;# 
  4549     0294                     CCP1CAP         equ	660	;# 
  4550     0295                     CCPR2           equ	661	;# 
  4551     0295                     CCPR2L          equ	661	;# 
  4552     0296                     CCPR2H          equ	662	;# 
  4553     0297                     CCP2CON         equ	663	;# 
  4554     0298                     CCP2CAP         equ	664	;# 
  4555     029F                     CCPTMRS         equ	671	;# 
  4556     030C                     SLRCONA         equ	780	;# 
  4557     030D                     SLRCONB         equ	781	;# 
  4558     030E                     SLRCONC         equ	782	;# 
  4559     0311                     CCPR3           equ	785	;# 
  4560     0311                     CCPR3L          equ	785	;# 
  4561     0312                     CCPR3H          equ	786	;# 
  4562     0313                     CCP3CON         equ	787	;# 
  4563     0314                     CCP3CAP         equ	788	;# 
  4564     0315                     CCPR4           equ	789	;# 
  4565     0315                     CCPR4L          equ	789	;# 
  4566     0316                     CCPR4H          equ	790	;# 
  4567     0317                     CCP4CON         equ	791	;# 
  4568     0318                     CCP4CAP         equ	792	;# 
  4569     038C                     INLVLA          equ	908	;# 
  4570     038D                     INLVLB          equ	909	;# 
  4571     038E                     INLVLC          equ	910	;# 
  4572     0391                     IOCAP           equ	913	;# 
  4573     0392                     IOCAN           equ	914	;# 
  4574     0393                     IOCAF           equ	915	;# 
  4575     0394                     IOCBP           equ	916	;# 
  4576     0395                     IOCBN           equ	917	;# 
  4577     0396                     IOCBF           equ	918	;# 
  4578     0397                     IOCCP           equ	919	;# 
  4579     0398                     IOCCN           equ	920	;# 
  4580     0399                     IOCCF           equ	921	;# 
  4581     039A                     CLKRCON         equ	922	;# 
  4582     039C                     MDCON           equ	924	;# 
  4583     039D                     MDSRC           equ	925	;# 
  4584     039E                     MDCARH          equ	926	;# 
  4585     039F                     MDCARL          equ	927	;# 
  4586     0411                     TMR3            equ	1041	;# 
  4587     0411                     TMR3L           equ	1041	;# 
  4588     0412                     TMR3H           equ	1042	;# 
  4589     0413                     T3CON           equ	1043	;# 
  4590     0414                     T3GCON          equ	1044	;# 
  4591     0415                     TMR4            equ	1045	;# 
  4592     0416                     PR4             equ	1046	;# 
  4593     0417                     T4CON           equ	1047	;# 
  4594     0418                     TMR5            equ	1048	;# 
  4595     0418                     TMR5L           equ	1048	;# 
  4596     0419                     TMR5H           equ	1049	;# 
  4597     041A                     T5CON           equ	1050	;# 
  4598     041B                     T5GCON          equ	1051	;# 
  4599     041C                     TMR6            equ	1052	;# 
  4600     041D                     PR6             equ	1053	;# 
  4601     041E                     T6CON           equ	1054	;# 
  4602     041F                     CCDCON          equ	1055	;# 
  4603     0498                     NCO1ACC         equ	1176	;# 
  4604     0498                     NCO1ACCL        equ	1176	;# 
  4605     0499                     NCO1ACCH        equ	1177	;# 
  4606     049A                     NCO1ACCU        equ	1178	;# 
  4607     049B                     NCO1INC         equ	1179	;# 
  4608     049B                     NCO1INCL        equ	1179	;# 
  4609     049C                     NCO1INCH        equ	1180	;# 
  4610     049D                     NCO1INCU        equ	1181	;# 
  4611     049E                     NCO1CON         equ	1182	;# 
  4612     049F                     NCO1CLK         equ	1183	;# 
  4613     0617                     PWM5DCL         equ	1559	;# 
  4614     0618                     PWM5DCH         equ	1560	;# 
  4615     0619                     PWM5CON         equ	1561	;# 
  4616     0619                     PWM5CON0        equ	1561	;# 
  4617     061A                     PWM6DCL         equ	1562	;# 
  4618     061B                     PWM6DCH         equ	1563	;# 
  4619     061C                     PWM6CON         equ	1564	;# 
  4620     061C                     PWM6CON0        equ	1564	;# 
  4621     061F                     PWMTMRS         equ	1567	;# 
  4622     0691                     CWG1CLKCON      equ	1681	;# 
  4623     0692                     CWG1DAT         equ	1682	;# 
  4624     0693                     CWG1DBR         equ	1683	;# 
  4625     0694                     CWG1DBF         equ	1684	;# 
  4626     0695                     CWG1CON0        equ	1685	;# 
  4627     0696                     CWG1CON1        equ	1686	;# 
  4628     0697                     CWG1AS0         equ	1687	;# 
  4629     0698                     CWG1AS1         equ	1688	;# 
  4630     0699                     CWG1STR         equ	1689	;# 
  4631     0711                     CWG2CLKCON      equ	1809	;# 
  4632     0712                     CWG2DAT         equ	1810	;# 
  4633     0713                     CWG2DBR         equ	1811	;# 
  4634     0714                     CWG2DBF         equ	1812	;# 
  4635     0715                     CWG2CON0        equ	1813	;# 
  4636     0716                     CWG2CON1        equ	1814	;# 
  4637     0717                     CWG2AS0         equ	1815	;# 
  4638     0718                     CWG2AS1         equ	1816	;# 
  4639     0719                     CWG2STR         equ	1817	;# 
  4640     0891                     NVMADR          equ	2193	;# 
  4641     0891                     EEADR           equ	2193	;# 
  4642     0891                     PMADR           equ	2193	;# 
  4643     0891                     NVMADRL         equ	2193	;# 
  4644     0891                     EEADRL          equ	2193	;# 
  4645     0891                     PMADRL          equ	2193	;# 
  4646     0892                     NVMADRH         equ	2194	;# 
  4647     0892                     EEADRH          equ	2194	;# 
  4648     0892                     PMADRH          equ	2194	;# 
  4649     0893                     NVMDAT          equ	2195	;# 
  4650     0893                     EEDAT           equ	2195	;# 
  4651     0893                     PMDAT           equ	2195	;# 
  4652     0893                     NVMDATL         equ	2195	;# 
  4653     0893                     EEDATL          equ	2195	;# 
  4654     0893                     PMDATL          equ	2195	;# 
  4655     0894                     NVMDATH         equ	2196	;# 
  4656     0894                     EEDATH          equ	2196	;# 
  4657     0894                     PMDATH          equ	2196	;# 
  4658     0895                     NVMCON1         equ	2197	;# 
  4659     0895                     EECON1          equ	2197	;# 
  4660     0895                     PMCON1          equ	2197	;# 
  4661     0896                     NVMCON2         equ	2198	;# 
  4662     0896                     EECON2          equ	2198	;# 
  4663     0896                     PMCON2          equ	2198	;# 
  4664     089B                     PCON0           equ	2203	;# 
  4665     0911                     PMD0            equ	2321	;# 
  4666     0912                     PMD1            equ	2322	;# 
  4667     0913                     PMD2            equ	2323	;# 
  4668     0914                     PMD3            equ	2324	;# 
  4669     0915                     PMD4            equ	2325	;# 
  4670     0916                     PMD5            equ	2326	;# 
  4671     0918                     CPUDOZE         equ	2328	;# 
  4672     0919                     OSCCON1         equ	2329	;# 
  4673     091A                     OSCCON2         equ	2330	;# 
  4674     091B                     OSCCON3         equ	2331	;# 
  4675     091C                     OSCSTAT1        equ	2332	;# 
  4676     091D                     OSCEN           equ	2333	;# 
  4677     091E                     OSCTUNE         equ	2334	;# 
  4678     091F                     OSCFRQ          equ	2335	;# 
  4679     0E0F                     PPSLOCK         equ	3599	;# 
  4680     0E10                     INTPPS          equ	3600	;# 
  4681     0E11                     T0CKIPPS        equ	3601	;# 
  4682     0E12                     T1CKIPPS        equ	3602	;# 
  4683     0E13                     T1GPPS          equ	3603	;# 
  4684     0E14                     CCP1PPS         equ	3604	;# 
  4685     0E15                     CCP2PPS         equ	3605	;# 
  4686     0E16                     CCP3PPS         equ	3606	;# 
  4687     0E17                     CCP4PPS         equ	3607	;# 
  4688     0E18                     CWG1PPS         equ	3608	;# 
  4689     0E19                     CWG2PPS         equ	3609	;# 
  4690     0E1A                     MDCIN1PPS       equ	3610	;# 
  4691     0E1B                     MDCIN2PPS       equ	3611	;# 
  4692     0E1C                     MDMINPPS        equ	3612	;# 
  4693     0E1D                     SSP2CLKPPS      equ	3613	;# 
  4694     0E1E                     SSP2DATPPS      equ	3614	;# 
  4695     0E1F                     SSP2SSPPS       equ	3615	;# 
  4696     0E20                     SSP1CLKPPS      equ	3616	;# 
  4697     0E21                     SSP1DATPPS      equ	3617	;# 
  4698     0E22                     SSP1SSPPS       equ	3618	;# 
  4699     0E24                     RXPPS           equ	3620	;# 
  4700     0E25                     TXPPS           equ	3621	;# 
  4701     0E28                     CLCIN0PPS       equ	3624	;# 
  4702     0E29                     CLCIN1PPS       equ	3625	;# 
  4703     0E2A                     CLCIN2PPS       equ	3626	;# 
  4704     0E2B                     CLCIN3PPS       equ	3627	;# 
  4705     0E2C                     T3CKIPPS        equ	3628	;# 
  4706     0E2D                     T3GPPS          equ	3629	;# 
  4707     0E2E                     T5CKIPPS        equ	3630	;# 
  4708     0E2F                     T5GPPS          equ	3631	;# 
  4709     0E90                     RA0PPS          equ	3728	;# 
  4710     0E91                     RA1PPS          equ	3729	;# 
  4711     0E92                     RA2PPS          equ	3730	;# 
  4712     0E94                     RA4PPS          equ	3732	;# 
  4713     0E95                     RA5PPS          equ	3733	;# 
  4714     0E9C                     RB4PPS          equ	3740	;# 
  4715     0E9D                     RB5PPS          equ	3741	;# 
  4716     0E9E                     RB6PPS          equ	3742	;# 
  4717     0E9F                     RB7PPS          equ	3743	;# 
  4718     0EA0                     RC0PPS          equ	3744	;# 
  4719     0EA1                     RC1PPS          equ	3745	;# 
  4720     0EA2                     RC2PPS          equ	3746	;# 
  4721     0EA3                     RC3PPS          equ	3747	;# 
  4722     0EA4                     RC4PPS          equ	3748	;# 
  4723     0EA5                     RC5PPS          equ	3749	;# 
  4724     0EA6                     RC6PPS          equ	3750	;# 
  4725     0EA7                     RC7PPS          equ	3751	;# 
  4726     0F0F                     CLCDATA         equ	3855	;# 
  4727     0F10                     CLC1CON         equ	3856	;# 
  4728     0F11                     CLC1POL         equ	3857	;# 
  4729     0F12                     CLC1SEL0        equ	3858	;# 
  4730     0F13                     CLC1SEL1        equ	3859	;# 
  4731     0F14                     CLC1SEL2        equ	3860	;# 
  4732     0F15                     CLC1SEL3        equ	3861	;# 
  4733     0F16                     CLC1GLS0        equ	3862	;# 
  4734     0F17                     CLC1GLS1        equ	3863	;# 
  4735     0F18                     CLC1GLS2        equ	3864	;# 
  4736     0F19                     CLC1GLS3        equ	3865	;# 
  4737     0F1A                     CLC2CON         equ	3866	;# 
  4738     0F1B                     CLC2POL         equ	3867	;# 
  4739     0F1C                     CLC2SEL0        equ	3868	;# 
  4740     0F1D                     CLC2SEL1        equ	3869	;# 
  4741     0F1E                     CLC2SEL2        equ	3870	;# 
  4742     0F1F                     CLC2SEL3        equ	3871	;# 
  4743     0F20                     CLC2GLS0        equ	3872	;# 
  4744     0F21                     CLC2GLS1        equ	3873	;# 
  4745     0F22                     CLC2GLS2        equ	3874	;# 
  4746     0F23                     CLC2GLS3        equ	3875	;# 
  4747     0F24                     CLC3CON         equ	3876	;# 
  4748     0F25                     CLC3POL         equ	3877	;# 
  4749     0F26                     CLC3SEL0        equ	3878	;# 
  4750     0F27                     CLC3SEL1        equ	3879	;# 
  4751     0F28                     CLC3SEL2        equ	3880	;# 
  4752     0F29                     CLC3SEL3        equ	3881	;# 
  4753     0F2A                     CLC3GLS0        equ	3882	;# 
  4754     0F2B                     CLC3GLS1        equ	3883	;# 
  4755     0F2C                     CLC3GLS2        equ	3884	;# 
  4756     0F2D                     CLC3GLS3        equ	3885	;# 
  4757     0F2E                     CLC4CON         equ	3886	;# 
  4758     0F2F                     CLC4POL         equ	3887	;# 
  4759     0F30                     CLC4SEL0        equ	3888	;# 
  4760     0F31                     CLC4SEL1        equ	3889	;# 
  4761     0F32                     CLC4SEL2        equ	3890	;# 
  4762     0F33                     CLC4SEL3        equ	3891	;# 
  4763     0F34                     CLC4GLS0        equ	3892	;# 
  4764     0F35                     CLC4GLS1        equ	3893	;# 
  4765     0F36                     CLC4GLS2        equ	3894	;# 
  4766     0F37                     CLC4GLS3        equ	3895	;# 
  4767     0FE4                     STATUS_SHAD     equ	4068	;# 
  4768     0FE5                     WREG_SHAD       equ	4069	;# 
  4769     0FE6                     BSR_SHAD        equ	4070	;# 
  4770     0FE7                     PCLATH_SHAD     equ	4071	;# 
  4771     0FE8                     FSR0L_SHAD      equ	4072	;# 
  4772     0FE9                     FSR0H_SHAD      equ	4073	;# 
  4773     0FEA                     FSR1L_SHAD      equ	4074	;# 
  4774     0FEB                     FSR1H_SHAD      equ	4075	;# 
  4775     0FED                     STKPTR          equ	4077	;# 
  4776     0FEE                     TOSL            equ	4078	;# 
  4777     0FEF                     TOSH            equ	4079	;# 
  4778     0000                     INDF0           equ	0	;# 
  4779     0001                     INDF1           equ	1	;# 
  4780     0002                     PCL             equ	2	;# 
  4781     0003                     STATUS          equ	3	;# 
  4782     0004                     FSR0L           equ	4	;# 
  4783     0005                     FSR0H           equ	5	;# 
  4784     0006                     FSR1L           equ	6	;# 
  4785     0007                     FSR1H           equ	7	;# 
  4786     0008                     BSR             equ	8	;# 
  4787     0009                     WREG            equ	9	;# 
  4788     000A                     PCLATH          equ	10	;# 
  4789     000B                     INTCON          equ	11	;# 
  4790     000C                     PORTA           equ	12	;# 
  4791     000D                     PORTB           equ	13	;# 
  4792     000E                     PORTC           equ	14	;# 
  4793     0010                     PIR0            equ	16	;# 
  4794     0011                     PIR1            equ	17	;# 
  4795     0012                     PIR2            equ	18	;# 
  4796     0013                     PIR3            equ	19	;# 
  4797     0014                     PIR4            equ	20	;# 
  4798     0015                     TMR0L           equ	21	;# 
  4799     0015                     TMR0            equ	21	;# 
  4800     0016                     TMR0H           equ	22	;# 
  4801     0016                     PR0             equ	22	;# 
  4802     0017                     T0CON0          equ	23	;# 
  4803     0018                     T0CON1          equ	24	;# 
  4804     0019                     TMR1            equ	25	;# 
  4805     0019                     TMR1L           equ	25	;# 
  4806     001A                     TMR1H           equ	26	;# 
  4807     001B                     T1CON           equ	27	;# 
  4808     001C                     T1GCON          equ	28	;# 
  4809     001D                     TMR2            equ	29	;# 
  4810     001E                     PR2             equ	30	;# 
  4811     001F                     T2CON           equ	31	;# 
  4812     008C                     TRISA           equ	140	;# 
  4813     008D                     TRISB           equ	141	;# 
  4814     008E                     TRISC           equ	142	;# 
  4815     0090                     PIE0            equ	144	;# 
  4816     0091                     PIE1            equ	145	;# 
  4817     0092                     PIE2            equ	146	;# 
  4818     0093                     PIE3            equ	147	;# 
  4819     0094                     PIE4            equ	148	;# 
  4820     0097                     WDTCON          equ	151	;# 
  4821     009B                     ADRES           equ	155	;# 
  4822     009B                     ADRESL          equ	155	;# 
  4823     009C                     ADRESH          equ	156	;# 
  4824     009D                     ADCON0          equ	157	;# 
  4825     009E                     ADCON1          equ	158	;# 
  4826     009F                     ADACT           equ	159	;# 
  4827     010C                     LATA            equ	268	;# 
  4828     010D                     LATB            equ	269	;# 
  4829     010E                     LATC            equ	270	;# 
  4830     0111                     CM1CON0         equ	273	;# 
  4831     0112                     CM1CON1         equ	274	;# 
  4832     0113                     CM2CON0         equ	275	;# 
  4833     0114                     CM2CON1         equ	276	;# 
  4834     0115                     CMOUT           equ	277	;# 
  4835     0116                     BORCON          equ	278	;# 
  4836     0117                     FVRCON          equ	279	;# 
  4837     0118                     DACCON0         equ	280	;# 
  4838     0119                     DACCON1         equ	281	;# 
  4839     018C                     ANSELA          equ	396	;# 
  4840     018D                     ANSELB          equ	397	;# 
  4841     018E                     ANSELC          equ	398	;# 
  4842     0197                     VREGCON         equ	407	;# 
  4843     0199                     RC1REG          equ	409	;# 
  4844     0199                     RCREG           equ	409	;# 
  4845     0199                     RCREG1          equ	409	;# 
  4846     019A                     TX1REG          equ	410	;# 
  4847     019A                     TXREG1          equ	410	;# 
  4848     019A                     TXREG           equ	410	;# 
  4849     019B                     SP1BRG          equ	411	;# 
  4850     019B                     SPBRG           equ	411	;# 
  4851     019B                     SP1BRGL         equ	411	;# 
  4852     019B                     SPBRG1          equ	411	;# 
  4853     019B                     SPBRGL          equ	411	;# 
  4854     019C                     SP1BRGH         equ	412	;# 
  4855     019C                     SPBRGH          equ	412	;# 
  4856     019C                     SPBRGH1         equ	412	;# 
  4857     019D                     RC1STA          equ	413	;# 
  4858     019D                     RCSTA1          equ	413	;# 
  4859     019D                     RCSTA           equ	413	;# 
  4860     019E                     TX1STA          equ	414	;# 
  4861     019E                     TXSTA1          equ	414	;# 
  4862     019E                     TXSTA           equ	414	;# 
  4863     019F                     BAUD1CON        equ	415	;# 
  4864     019F                     BAUDCON1        equ	415	;# 
  4865     019F                     BAUDCTL1        equ	415	;# 
  4866     019F                     BAUDCON         equ	415	;# 
  4867     019F                     BAUDCTL         equ	415	;# 
  4868     020C                     WPUA            equ	524	;# 
  4869     020D                     WPUB            equ	525	;# 
  4870     020E                     WPUC            equ	526	;# 
  4871     0211                     SSP1BUF         equ	529	;# 
  4872     0211                     SSPBUF          equ	529	;# 
  4873     0212                     SSP1ADD         equ	530	;# 
  4874     0212                     SSPADD          equ	530	;# 
  4875     0213                     SSP1MSK         equ	531	;# 
  4876     0213                     SSPMSK          equ	531	;# 
  4877     0214                     SSP1STAT        equ	532	;# 
  4878     0214                     SSPSTAT         equ	532	;# 
  4879     0215                     SSP1CON1        equ	533	;# 
  4880     0215                     SSPCON          equ	533	;# 
  4881     0215                     SSPCON1         equ	533	;# 
  4882     0215                     SSP1CON         equ	533	;# 
  4883     0216                     SSP1CON2        equ	534	;# 
  4884     0216                     SSPCON2         equ	534	;# 
  4885     0217                     SSP1CON3        equ	535	;# 
  4886     0217                     SSPCON3         equ	535	;# 
  4887     0219                     SSP2BUF         equ	537	;# 
  4888     021A                     SSP2ADD         equ	538	;# 
  4889     021B                     SSP2MSK         equ	539	;# 
  4890     021C                     SSP2STAT        equ	540	;# 
  4891     021D                     SSP2CON1        equ	541	;# 
  4892     021D                     SSP2CON         equ	541	;# 
  4893     021E                     SSP2CON2        equ	542	;# 
  4894     021F                     SSP2CON3        equ	543	;# 
  4895     028C                     ODCONA          equ	652	;# 
  4896     028D                     ODCONB          equ	653	;# 
  4897     028E                     ODCONC          equ	654	;# 
  4898     0291                     CCPR1           equ	657	;# 
  4899     0291                     CCPR1L          equ	657	;# 
  4900     0292                     CCPR1H          equ	658	;# 
  4901     0293                     CCP1CON         equ	659	;# 
  4902     0294                     CCP1CAP         equ	660	;# 
  4903     0295                     CCPR2           equ	661	;# 
  4904     0295                     CCPR2L          equ	661	;# 
  4905     0296                     CCPR2H          equ	662	;# 
  4906     0297                     CCP2CON         equ	663	;# 
  4907     0298                     CCP2CAP         equ	664	;# 
  4908     029F                     CCPTMRS         equ	671	;# 
  4909     030C                     SLRCONA         equ	780	;# 
  4910     030D                     SLRCONB         equ	781	;# 
  4911     030E                     SLRCONC         equ	782	;# 
  4912     0311                     CCPR3           equ	785	;# 
  4913     0311                     CCPR3L          equ	785	;# 
  4914     0312                     CCPR3H          equ	786	;# 
  4915     0313                     CCP3CON         equ	787	;# 
  4916     0314                     CCP3CAP         equ	788	;# 
  4917     0315                     CCPR4           equ	789	;# 
  4918     0315                     CCPR4L          equ	789	;# 
  4919     0316                     CCPR4H          equ	790	;# 
  4920     0317                     CCP4CON         equ	791	;# 
  4921     0318                     CCP4CAP         equ	792	;# 
  4922     038C                     INLVLA          equ	908	;# 
  4923     038D                     INLVLB          equ	909	;# 
  4924     038E                     INLVLC          equ	910	;# 
  4925     0391                     IOCAP           equ	913	;# 
  4926     0392                     IOCAN           equ	914	;# 
  4927     0393                     IOCAF           equ	915	;# 
  4928     0394                     IOCBP           equ	916	;# 
  4929     0395                     IOCBN           equ	917	;# 
  4930     0396                     IOCBF           equ	918	;# 
  4931     0397                     IOCCP           equ	919	;# 
  4932     0398                     IOCCN           equ	920	;# 
  4933     0399                     IOCCF           equ	921	;# 
  4934     039A                     CLKRCON         equ	922	;# 
  4935     039C                     MDCON           equ	924	;# 
  4936     039D                     MDSRC           equ	925	;# 
  4937     039E                     MDCARH          equ	926	;# 
  4938     039F                     MDCARL          equ	927	;# 
  4939     0411                     TMR3            equ	1041	;# 
  4940     0411                     TMR3L           equ	1041	;# 
  4941     0412                     TMR3H           equ	1042	;# 
  4942     0413                     T3CON           equ	1043	;# 
  4943     0414                     T3GCON          equ	1044	;# 
  4944     0415                     TMR4            equ	1045	;# 
  4945     0416                     PR4             equ	1046	;# 
  4946     0417                     T4CON           equ	1047	;# 
  4947     0418                     TMR5            equ	1048	;# 
  4948     0418                     TMR5L           equ	1048	;# 
  4949     0419                     TMR5H           equ	1049	;# 
  4950     041A                     T5CON           equ	1050	;# 
  4951     041B                     T5GCON          equ	1051	;# 
  4952     041C                     TMR6            equ	1052	;# 
  4953     041D                     PR6             equ	1053	;# 
  4954     041E                     T6CON           equ	1054	;# 
  4955     041F                     CCDCON          equ	1055	;# 
  4956     0498                     NCO1ACC         equ	1176	;# 
  4957     0498                     NCO1ACCL        equ	1176	;# 
  4958     0499                     NCO1ACCH        equ	1177	;# 
  4959     049A                     NCO1ACCU        equ	1178	;# 
  4960     049B                     NCO1INC         equ	1179	;# 
  4961     049B                     NCO1INCL        equ	1179	;# 
  4962     049C                     NCO1INCH        equ	1180	;# 
  4963     049D                     NCO1INCU        equ	1181	;# 
  4964     049E                     NCO1CON         equ	1182	;# 
  4965     049F                     NCO1CLK         equ	1183	;# 
  4966     0617                     PWM5DCL         equ	1559	;# 
  4967     0618                     PWM5DCH         equ	1560	;# 
  4968     0619                     PWM5CON         equ	1561	;# 
  4969     0619                     PWM5CON0        equ	1561	;# 
  4970     061A                     PWM6DCL         equ	1562	;# 
  4971     061B                     PWM6DCH         equ	1563	;# 
  4972     061C                     PWM6CON         equ	1564	;# 
  4973     061C                     PWM6CON0        equ	1564	;# 
  4974     061F                     PWMTMRS         equ	1567	;# 
  4975     0691                     CWG1CLKCON      equ	1681	;# 
  4976     0692                     CWG1DAT         equ	1682	;# 
  4977     0693                     CWG1DBR         equ	1683	;# 
  4978     0694                     CWG1DBF         equ	1684	;# 
  4979     0695                     CWG1CON0        equ	1685	;# 
  4980     0696                     CWG1CON1        equ	1686	;# 
  4981     0697                     CWG1AS0         equ	1687	;# 
  4982     0698                     CWG1AS1         equ	1688	;# 
  4983     0699                     CWG1STR         equ	1689	;# 
  4984     0711                     CWG2CLKCON      equ	1809	;# 
  4985     0712                     CWG2DAT         equ	1810	;# 
  4986     0713                     CWG2DBR         equ	1811	;# 
  4987     0714                     CWG2DBF         equ	1812	;# 
  4988     0715                     CWG2CON0        equ	1813	;# 
  4989     0716                     CWG2CON1        equ	1814	;# 
  4990     0717                     CWG2AS0         equ	1815	;# 
  4991     0718                     CWG2AS1         equ	1816	;# 
  4992     0719                     CWG2STR         equ	1817	;# 
  4993     0891                     NVMADR          equ	2193	;# 
  4994     0891                     EEADR           equ	2193	;# 
  4995     0891                     PMADR           equ	2193	;# 
  4996     0891                     NVMADRL         equ	2193	;# 
  4997     0891                     EEADRL          equ	2193	;# 
  4998     0891                     PMADRL          equ	2193	;# 
  4999     0892                     NVMADRH         equ	2194	;# 
  5000     0892                     EEADRH          equ	2194	;# 
  5001     0892                     PMADRH          equ	2194	;# 
  5002     0893                     NVMDAT          equ	2195	;# 
  5003     0893                     EEDAT           equ	2195	;# 
  5004     0893                     PMDAT           equ	2195	;# 
  5005     0893                     NVMDATL         equ	2195	;# 
  5006     0893                     EEDATL          equ	2195	;# 
  5007     0893                     PMDATL          equ	2195	;# 
  5008     0894                     NVMDATH         equ	2196	;# 
  5009     0894                     EEDATH          equ	2196	;# 
  5010     0894                     PMDATH          equ	2196	;# 
  5011     0895                     NVMCON1         equ	2197	;# 
  5012     0895                     EECON1          equ	2197	;# 
  5013     0895                     PMCON1          equ	2197	;# 
  5014     0896                     NVMCON2         equ	2198	;# 
  5015     0896                     EECON2          equ	2198	;# 
  5016     0896                     PMCON2          equ	2198	;# 
  5017     089B                     PCON0           equ	2203	;# 
  5018     0911                     PMD0            equ	2321	;# 
  5019     0912                     PMD1            equ	2322	;# 
  5020     0913                     PMD2            equ	2323	;# 
  5021     0914                     PMD3            equ	2324	;# 
  5022     0915                     PMD4            equ	2325	;# 
  5023     0916                     PMD5            equ	2326	;# 
  5024     0918                     CPUDOZE         equ	2328	;# 
  5025     0919                     OSCCON1         equ	2329	;# 
  5026     091A                     OSCCON2         equ	2330	;# 
  5027     091B                     OSCCON3         equ	2331	;# 
  5028     091C                     OSCSTAT1        equ	2332	;# 
  5029     091D                     OSCEN           equ	2333	;# 
  5030     091E                     OSCTUNE         equ	2334	;# 
  5031     091F                     OSCFRQ          equ	2335	;# 
  5032     0E0F                     PPSLOCK         equ	3599	;# 
  5033     0E10                     INTPPS          equ	3600	;# 
  5034     0E11                     T0CKIPPS        equ	3601	;# 
  5035     0E12                     T1CKIPPS        equ	3602	;# 
  5036     0E13                     T1GPPS          equ	3603	;# 
  5037     0E14                     CCP1PPS         equ	3604	;# 
  5038     0E15                     CCP2PPS         equ	3605	;# 
  5039     0E16                     CCP3PPS         equ	3606	;# 
  5040     0E17                     CCP4PPS         equ	3607	;# 
  5041     0E18                     CWG1PPS         equ	3608	;# 
  5042     0E19                     CWG2PPS         equ	3609	;# 
  5043     0E1A                     MDCIN1PPS       equ	3610	;# 
  5044     0E1B                     MDCIN2PPS       equ	3611	;# 
  5045     0E1C                     MDMINPPS        equ	3612	;# 
  5046     0E1D                     SSP2CLKPPS      equ	3613	;# 
  5047     0E1E                     SSP2DATPPS      equ	3614	;# 
  5048     0E1F                     SSP2SSPPS       equ	3615	;# 
  5049     0E20                     SSP1CLKPPS      equ	3616	;# 
  5050     0E21                     SSP1DATPPS      equ	3617	;# 
  5051     0E22                     SSP1SSPPS       equ	3618	;# 
  5052     0E24                     RXPPS           equ	3620	;# 
  5053     0E25                     TXPPS           equ	3621	;# 
  5054     0E28                     CLCIN0PPS       equ	3624	;# 
  5055     0E29                     CLCIN1PPS       equ	3625	;# 
  5056     0E2A                     CLCIN2PPS       equ	3626	;# 
  5057     0E2B                     CLCIN3PPS       equ	3627	;# 
  5058     0E2C                     T3CKIPPS        equ	3628	;# 
  5059     0E2D                     T3GPPS          equ	3629	;# 
  5060     0E2E                     T5CKIPPS        equ	3630	;# 
  5061     0E2F                     T5GPPS          equ	3631	;# 
  5062     0E90                     RA0PPS          equ	3728	;# 
  5063     0E91                     RA1PPS          equ	3729	;# 
  5064     0E92                     RA2PPS          equ	3730	;# 
  5065     0E94                     RA4PPS          equ	3732	;# 
  5066     0E95                     RA5PPS          equ	3733	;# 
  5067     0E9C                     RB4PPS          equ	3740	;# 
  5068     0E9D                     RB5PPS          equ	3741	;# 
  5069     0E9E                     RB6PPS          equ	3742	;# 
  5070     0E9F                     RB7PPS          equ	3743	;# 
  5071     0EA0                     RC0PPS          equ	3744	;# 
  5072     0EA1                     RC1PPS          equ	3745	;# 
  5073     0EA2                     RC2PPS          equ	3746	;# 
  5074     0EA3                     RC3PPS          equ	3747	;# 
  5075     0EA4                     RC4PPS          equ	3748	;# 
  5076     0EA5                     RC5PPS          equ	3749	;# 
  5077     0EA6                     RC6PPS          equ	3750	;# 
  5078     0EA7                     RC7PPS          equ	3751	;# 
  5079     0F0F                     CLCDATA         equ	3855	;# 
  5080     0F10                     CLC1CON         equ	3856	;# 
  5081     0F11                     CLC1POL         equ	3857	;# 
  5082     0F12                     CLC1SEL0        equ	3858	;# 
  5083     0F13                     CLC1SEL1        equ	3859	;# 
  5084     0F14                     CLC1SEL2        equ	3860	;# 
  5085     0F15                     CLC1SEL3        equ	3861	;# 
  5086     0F16                     CLC1GLS0        equ	3862	;# 
  5087     0F17                     CLC1GLS1        equ	3863	;# 
  5088     0F18                     CLC1GLS2        equ	3864	;# 
  5089     0F19                     CLC1GLS3        equ	3865	;# 
  5090     0F1A                     CLC2CON         equ	3866	;# 
  5091     0F1B                     CLC2POL         equ	3867	;# 
  5092     0F1C                     CLC2SEL0        equ	3868	;# 
  5093     0F1D                     CLC2SEL1        equ	3869	;# 
  5094     0F1E                     CLC2SEL2        equ	3870	;# 
  5095     0F1F                     CLC2SEL3        equ	3871	;# 
  5096     0F20                     CLC2GLS0        equ	3872	;# 
  5097     0F21                     CLC2GLS1        equ	3873	;# 
  5098     0F22                     CLC2GLS2        equ	3874	;# 
  5099     0F23                     CLC2GLS3        equ	3875	;# 
  5100     0F24                     CLC3CON         equ	3876	;# 
  5101     0F25                     CLC3POL         equ	3877	;# 
  5102     0F26                     CLC3SEL0        equ	3878	;# 
  5103     0F27                     CLC3SEL1        equ	3879	;# 
  5104     0F28                     CLC3SEL2        equ	3880	;# 
  5105     0F29                     CLC3SEL3        equ	3881	;# 
  5106     0F2A                     CLC3GLS0        equ	3882	;# 
  5107     0F2B                     CLC3GLS1        equ	3883	;# 
  5108     0F2C                     CLC3GLS2        equ	3884	;# 
  5109     0F2D                     CLC3GLS3        equ	3885	;# 
  5110     0F2E                     CLC4CON         equ	3886	;# 
  5111     0F2F                     CLC4POL         equ	3887	;# 
  5112     0F30                     CLC4SEL0        equ	3888	;# 
  5113     0F31                     CLC4SEL1        equ	3889	;# 
  5114     0F32                     CLC4SEL2        equ	3890	;# 
  5115     0F33                     CLC4SEL3        equ	3891	;# 
  5116     0F34                     CLC4GLS0        equ	3892	;# 
  5117     0F35                     CLC4GLS1        equ	3893	;# 
  5118     0F36                     CLC4GLS2        equ	3894	;# 
  5119     0F37                     CLC4GLS3        equ	3895	;# 
  5120     0FE4                     STATUS_SHAD     equ	4068	;# 
  5121     0FE5                     WREG_SHAD       equ	4069	;# 
  5122     0FE6                     BSR_SHAD        equ	4070	;# 
  5123     0FE7                     PCLATH_SHAD     equ	4071	;# 
  5124     0FE8                     FSR0L_SHAD      equ	4072	;# 
  5125     0FE9                     FSR0H_SHAD      equ	4073	;# 
  5126     0FEA                     FSR1L_SHAD      equ	4074	;# 
  5127     0FEB                     FSR1H_SHAD      equ	4075	;# 
  5128     0FED                     STKPTR          equ	4077	;# 
  5129     0FEE                     TOSL            equ	4078	;# 
  5130     0FEF                     TOSH            equ	4079	;# 
  5131     0000                     INDF0           equ	0	;# 
  5132     0001                     INDF1           equ	1	;# 
  5133     0002                     PCL             equ	2	;# 
  5134     0003                     STATUS          equ	3	;# 
  5135     0004                     FSR0L           equ	4	;# 
  5136     0005                     FSR0H           equ	5	;# 
  5137     0006                     FSR1L           equ	6	;# 
  5138     0007                     FSR1H           equ	7	;# 
  5139     0008                     BSR             equ	8	;# 
  5140     0009                     WREG            equ	9	;# 
  5141     000A                     PCLATH          equ	10	;# 
  5142     000B                     INTCON          equ	11	;# 
  5143     000C                     PORTA           equ	12	;# 
  5144     000D                     PORTB           equ	13	;# 
  5145     000E                     PORTC           equ	14	;# 
  5146     0010                     PIR0            equ	16	;# 
  5147     0011                     PIR1            equ	17	;# 
  5148     0012                     PIR2            equ	18	;# 
  5149     0013                     PIR3            equ	19	;# 
  5150     0014                     PIR4            equ	20	;# 
  5151     0015                     TMR0L           equ	21	;# 
  5152     0015                     TMR0            equ	21	;# 
  5153     0016                     TMR0H           equ	22	;# 
  5154     0016                     PR0             equ	22	;# 
  5155     0017                     T0CON0          equ	23	;# 
  5156     0018                     T0CON1          equ	24	;# 
  5157     0019                     TMR1            equ	25	;# 
  5158     0019                     TMR1L           equ	25	;# 
  5159     001A                     TMR1H           equ	26	;# 
  5160     001B                     T1CON           equ	27	;# 
  5161     001C                     T1GCON          equ	28	;# 
  5162     001D                     TMR2            equ	29	;# 
  5163     001E                     PR2             equ	30	;# 
  5164     001F                     T2CON           equ	31	;# 
  5165     008C                     TRISA           equ	140	;# 
  5166     008D                     TRISB           equ	141	;# 
  5167     008E                     TRISC           equ	142	;# 
  5168     0090                     PIE0            equ	144	;# 
  5169     0091                     PIE1            equ	145	;# 
  5170     0092                     PIE2            equ	146	;# 
  5171     0093                     PIE3            equ	147	;# 
  5172     0094                     PIE4            equ	148	;# 
  5173     0097                     WDTCON          equ	151	;# 
  5174     009B                     ADRES           equ	155	;# 
  5175     009B                     ADRESL          equ	155	;# 
  5176     009C                     ADRESH          equ	156	;# 
  5177     009D                     ADCON0          equ	157	;# 
  5178     009E                     ADCON1          equ	158	;# 
  5179     009F                     ADACT           equ	159	;# 
  5180     010C                     LATA            equ	268	;# 
  5181     010D                     LATB            equ	269	;# 
  5182     010E                     LATC            equ	270	;# 
  5183     0111                     CM1CON0         equ	273	;# 
  5184     0112                     CM1CON1         equ	274	;# 
  5185     0113                     CM2CON0         equ	275	;# 
  5186     0114                     CM2CON1         equ	276	;# 
  5187     0115                     CMOUT           equ	277	;# 
  5188     0116                     BORCON          equ	278	;# 
  5189     0117                     FVRCON          equ	279	;# 
  5190     0118                     DACCON0         equ	280	;# 
  5191     0119                     DACCON1         equ	281	;# 
  5192     018C                     ANSELA          equ	396	;# 
  5193     018D                     ANSELB          equ	397	;# 
  5194     018E                     ANSELC          equ	398	;# 
  5195     0197                     VREGCON         equ	407	;# 
  5196     0199                     RC1REG          equ	409	;# 
  5197     0199                     RCREG           equ	409	;# 
  5198     0199                     RCREG1          equ	409	;# 
  5199     019A                     TX1REG          equ	410	;# 
  5200     019A                     TXREG1          equ	410	;# 
  5201     019A                     TXREG           equ	410	;# 
  5202     019B                     SP1BRG          equ	411	;# 
  5203     019B                     SPBRG           equ	411	;# 
  5204     019B                     SP1BRGL         equ	411	;# 
  5205     019B                     SPBRG1          equ	411	;# 
  5206     019B                     SPBRGL          equ	411	;# 
  5207     019C                     SP1BRGH         equ	412	;# 
  5208     019C                     SPBRGH          equ	412	;# 
  5209     019C                     SPBRGH1         equ	412	;# 
  5210     019D                     RC1STA          equ	413	;# 
  5211     019D                     RCSTA1          equ	413	;# 
  5212     019D                     RCSTA           equ	413	;# 
  5213     019E                     TX1STA          equ	414	;# 
  5214     019E                     TXSTA1          equ	414	;# 
  5215     019E                     TXSTA           equ	414	;# 
  5216     019F                     BAUD1CON        equ	415	;# 
  5217     019F                     BAUDCON1        equ	415	;# 
  5218     019F                     BAUDCTL1        equ	415	;# 
  5219     019F                     BAUDCON         equ	415	;# 
  5220     019F                     BAUDCTL         equ	415	;# 
  5221     020C                     WPUA            equ	524	;# 
  5222     020D                     WPUB            equ	525	;# 
  5223     020E                     WPUC            equ	526	;# 
  5224     0211                     SSP1BUF         equ	529	;# 
  5225     0211                     SSPBUF          equ	529	;# 
  5226     0212                     SSP1ADD         equ	530	;# 
  5227     0212                     SSPADD          equ	530	;# 
  5228     0213                     SSP1MSK         equ	531	;# 
  5229     0213                     SSPMSK          equ	531	;# 
  5230     0214                     SSP1STAT        equ	532	;# 
  5231     0214                     SSPSTAT         equ	532	;# 
  5232     0215                     SSP1CON1        equ	533	;# 
  5233     0215                     SSPCON          equ	533	;# 
  5234     0215                     SSPCON1         equ	533	;# 
  5235     0215                     SSP1CON         equ	533	;# 
  5236     0216                     SSP1CON2        equ	534	;# 
  5237     0216                     SSPCON2         equ	534	;# 
  5238     0217                     SSP1CON3        equ	535	;# 
  5239     0217                     SSPCON3         equ	535	;# 
  5240     0219                     SSP2BUF         equ	537	;# 
  5241     021A                     SSP2ADD         equ	538	;# 
  5242     021B                     SSP2MSK         equ	539	;# 
  5243     021C                     SSP2STAT        equ	540	;# 
  5244     021D                     SSP2CON1        equ	541	;# 
  5245     021D                     SSP2CON         equ	541	;# 
  5246     021E                     SSP2CON2        equ	542	;# 
  5247     021F                     SSP2CON3        equ	543	;# 
  5248     028C                     ODCONA          equ	652	;# 
  5249     028D                     ODCONB          equ	653	;# 
  5250     028E                     ODCONC          equ	654	;# 
  5251     0291                     CCPR1           equ	657	;# 
  5252     0291                     CCPR1L          equ	657	;# 
  5253     0292                     CCPR1H          equ	658	;# 
  5254     0293                     CCP1CON         equ	659	;# 
  5255     0294                     CCP1CAP         equ	660	;# 
  5256     0295                     CCPR2           equ	661	;# 
  5257     0295                     CCPR2L          equ	661	;# 
  5258     0296                     CCPR2H          equ	662	;# 
  5259     0297                     CCP2CON         equ	663	;# 
  5260     0298                     CCP2CAP         equ	664	;# 
  5261     029F                     CCPTMRS         equ	671	;# 
  5262     030C                     SLRCONA         equ	780	;# 
  5263     030D                     SLRCONB         equ	781	;# 
  5264     030E                     SLRCONC         equ	782	;# 
  5265     0311                     CCPR3           equ	785	;# 
  5266     0311                     CCPR3L          equ	785	;# 
  5267     0312                     CCPR3H          equ	786	;# 
  5268     0313                     CCP3CON         equ	787	;# 
  5269     0314                     CCP3CAP         equ	788	;# 
  5270     0315                     CCPR4           equ	789	;# 
  5271     0315                     CCPR4L          equ	789	;# 
  5272     0316                     CCPR4H          equ	790	;# 
  5273     0317                     CCP4CON         equ	791	;# 
  5274     0318                     CCP4CAP         equ	792	;# 
  5275     038C                     INLVLA          equ	908	;# 
  5276     038D                     INLVLB          equ	909	;# 
  5277     038E                     INLVLC          equ	910	;# 
  5278     0391                     IOCAP           equ	913	;# 
  5279     0392                     IOCAN           equ	914	;# 
  5280     0393                     IOCAF           equ	915	;# 
  5281     0394                     IOCBP           equ	916	;# 
  5282     0395                     IOCBN           equ	917	;# 
  5283     0396                     IOCBF           equ	918	;# 
  5284     0397                     IOCCP           equ	919	;# 
  5285     0398                     IOCCN           equ	920	;# 
  5286     0399                     IOCCF           equ	921	;# 
  5287     039A                     CLKRCON         equ	922	;# 
  5288     039C                     MDCON           equ	924	;# 
  5289     039D                     MDSRC           equ	925	;# 
  5290     039E                     MDCARH          equ	926	;# 
  5291     039F                     MDCARL          equ	927	;# 
  5292     0411                     TMR3            equ	1041	;# 
  5293     0411                     TMR3L           equ	1041	;# 
  5294     0412                     TMR3H           equ	1042	;# 
  5295     0413                     T3CON           equ	1043	;# 
  5296     0414                     T3GCON          equ	1044	;# 
  5297     0415                     TMR4            equ	1045	;# 
  5298     0416                     PR4             equ	1046	;# 
  5299     0417                     T4CON           equ	1047	;# 
  5300     0418                     TMR5            equ	1048	;# 
  5301     0418                     TMR5L           equ	1048	;# 
  5302     0419                     TMR5H           equ	1049	;# 
  5303     041A                     T5CON           equ	1050	;# 
  5304     041B                     T5GCON          equ	1051	;# 
  5305     041C                     TMR6            equ	1052	;# 
  5306     041D                     PR6             equ	1053	;# 
  5307     041E                     T6CON           equ	1054	;# 
  5308     041F                     CCDCON          equ	1055	;# 
  5309     0498                     NCO1ACC         equ	1176	;# 
  5310     0498                     NCO1ACCL        equ	1176	;# 
  5311     0499                     NCO1ACCH        equ	1177	;# 
  5312     049A                     NCO1ACCU        equ	1178	;# 
  5313     049B                     NCO1INC         equ	1179	;# 
  5314     049B                     NCO1INCL        equ	1179	;# 
  5315     049C                     NCO1INCH        equ	1180	;# 
  5316     049D                     NCO1INCU        equ	1181	;# 
  5317     049E                     NCO1CON         equ	1182	;# 
  5318     049F                     NCO1CLK         equ	1183	;# 
  5319     0617                     PWM5DCL         equ	1559	;# 
  5320     0618                     PWM5DCH         equ	1560	;# 
  5321     0619                     PWM5CON         equ	1561	;# 
  5322     0619                     PWM5CON0        equ	1561	;# 
  5323     061A                     PWM6DCL         equ	1562	;# 
  5324     061B                     PWM6DCH         equ	1563	;# 
  5325     061C                     PWM6CON         equ	1564	;# 
  5326     061C                     PWM6CON0        equ	1564	;# 
  5327     061F                     PWMTMRS         equ	1567	;# 
  5328     0691                     CWG1CLKCON      equ	1681	;# 
  5329     0692                     CWG1DAT         equ	1682	;# 
  5330     0693                     CWG1DBR         equ	1683	;# 
  5331     0694                     CWG1DBF         equ	1684	;# 
  5332     0695                     CWG1CON0        equ	1685	;# 
  5333     0696                     CWG1CON1        equ	1686	;# 
  5334     0697                     CWG1AS0         equ	1687	;# 
  5335     0698                     CWG1AS1         equ	1688	;# 
  5336     0699                     CWG1STR         equ	1689	;# 
  5337     0711                     CWG2CLKCON      equ	1809	;# 
  5338     0712                     CWG2DAT         equ	1810	;# 
  5339     0713                     CWG2DBR         equ	1811	;# 
  5340     0714                     CWG2DBF         equ	1812	;# 
  5341     0715                     CWG2CON0        equ	1813	;# 
  5342     0716                     CWG2CON1        equ	1814	;# 
  5343     0717                     CWG2AS0         equ	1815	;# 
  5344     0718                     CWG2AS1         equ	1816	;# 
  5345     0719                     CWG2STR         equ	1817	;# 
  5346     0891                     NVMADR          equ	2193	;# 
  5347     0891                     EEADR           equ	2193	;# 
  5348     0891                     PMADR           equ	2193	;# 
  5349     0891                     NVMADRL         equ	2193	;# 
  5350     0891                     EEADRL          equ	2193	;# 
  5351     0891                     PMADRL          equ	2193	;# 
  5352     0892                     NVMADRH         equ	2194	;# 
  5353     0892                     EEADRH          equ	2194	;# 
  5354     0892                     PMADRH          equ	2194	;# 
  5355     0893                     NVMDAT          equ	2195	;# 
  5356     0893                     EEDAT           equ	2195	;# 
  5357     0893                     PMDAT           equ	2195	;# 
  5358     0893                     NVMDATL         equ	2195	;# 
  5359     0893                     EEDATL          equ	2195	;# 
  5360     0893                     PMDATL          equ	2195	;# 
  5361     0894                     NVMDATH         equ	2196	;# 
  5362     0894                     EEDATH          equ	2196	;# 
  5363     0894                     PMDATH          equ	2196	;# 
  5364     0895                     NVMCON1         equ	2197	;# 
  5365     0895                     EECON1          equ	2197	;# 
  5366     0895                     PMCON1          equ	2197	;# 
  5367     0896                     NVMCON2         equ	2198	;# 
  5368     0896                     EECON2          equ	2198	;# 
  5369     0896                     PMCON2          equ	2198	;# 
  5370     089B                     PCON0           equ	2203	;# 
  5371     0911                     PMD0            equ	2321	;# 
  5372     0912                     PMD1            equ	2322	;# 
  5373     0913                     PMD2            equ	2323	;# 
  5374     0914                     PMD3            equ	2324	;# 
  5375     0915                     PMD4            equ	2325	;# 
  5376     0916                     PMD5            equ	2326	;# 
  5377     0918                     CPUDOZE         equ	2328	;# 
  5378     0919                     OSCCON1         equ	2329	;# 
  5379     091A                     OSCCON2         equ	2330	;# 
  5380     091B                     OSCCON3         equ	2331	;# 
  5381     091C                     OSCSTAT1        equ	2332	;# 
  5382     091D                     OSCEN           equ	2333	;# 
  5383     091E                     OSCTUNE         equ	2334	;# 
  5384     091F                     OSCFRQ          equ	2335	;# 
  5385     0E0F                     PPSLOCK         equ	3599	;# 
  5386     0E10                     INTPPS          equ	3600	;# 
  5387     0E11                     T0CKIPPS        equ	3601	;# 
  5388     0E12                     T1CKIPPS        equ	3602	;# 
  5389     0E13                     T1GPPS          equ	3603	;# 
  5390     0E14                     CCP1PPS         equ	3604	;# 
  5391     0E15                     CCP2PPS         equ	3605	;# 
  5392     0E16                     CCP3PPS         equ	3606	;# 
  5393     0E17                     CCP4PPS         equ	3607	;# 
  5394     0E18                     CWG1PPS         equ	3608	;# 
  5395     0E19                     CWG2PPS         equ	3609	;# 
  5396     0E1A                     MDCIN1PPS       equ	3610	;# 
  5397     0E1B                     MDCIN2PPS       equ	3611	;# 
  5398     0E1C                     MDMINPPS        equ	3612	;# 
  5399     0E1D                     SSP2CLKPPS      equ	3613	;# 
  5400     0E1E                     SSP2DATPPS      equ	3614	;# 
  5401     0E1F                     SSP2SSPPS       equ	3615	;# 
  5402     0E20                     SSP1CLKPPS      equ	3616	;# 
  5403     0E21                     SSP1DATPPS      equ	3617	;# 
  5404     0E22                     SSP1SSPPS       equ	3618	;# 
  5405     0E24                     RXPPS           equ	3620	;# 
  5406     0E25                     TXPPS           equ	3621	;# 
  5407     0E28                     CLCIN0PPS       equ	3624	;# 
  5408     0E29                     CLCIN1PPS       equ	3625	;# 
  5409     0E2A                     CLCIN2PPS       equ	3626	;# 
  5410     0E2B                     CLCIN3PPS       equ	3627	;# 
  5411     0E2C                     T3CKIPPS        equ	3628	;# 
  5412     0E2D                     T3GPPS          equ	3629	;# 
  5413     0E2E                     T5CKIPPS        equ	3630	;# 
  5414     0E2F                     T5GPPS          equ	3631	;# 
  5415     0E90                     RA0PPS          equ	3728	;# 
  5416     0E91                     RA1PPS          equ	3729	;# 
  5417     0E92                     RA2PPS          equ	3730	;# 
  5418     0E94                     RA4PPS          equ	3732	;# 
  5419     0E95                     RA5PPS          equ	3733	;# 
  5420     0E9C                     RB4PPS          equ	3740	;# 
  5421     0E9D                     RB5PPS          equ	3741	;# 
  5422     0E9E                     RB6PPS          equ	3742	;# 
  5423     0E9F                     RB7PPS          equ	3743	;# 
  5424     0EA0                     RC0PPS          equ	3744	;# 
  5425     0EA1                     RC1PPS          equ	3745	;# 
  5426     0EA2                     RC2PPS          equ	3746	;# 
  5427     0EA3                     RC3PPS          equ	3747	;# 
  5428     0EA4                     RC4PPS          equ	3748	;# 
  5429     0EA5                     RC5PPS          equ	3749	;# 
  5430     0EA6                     RC6PPS          equ	3750	;# 
  5431     0EA7                     RC7PPS          equ	3751	;# 
  5432     0F0F                     CLCDATA         equ	3855	;# 
  5433     0F10                     CLC1CON         equ	3856	;# 
  5434     0F11                     CLC1POL         equ	3857	;# 
  5435     0F12                     CLC1SEL0        equ	3858	;# 
  5436     0F13                     CLC1SEL1        equ	3859	;# 
  5437     0F14                     CLC1SEL2        equ	3860	;# 
  5438     0F15                     CLC1SEL3        equ	3861	;# 
  5439     0F16                     CLC1GLS0        equ	3862	;# 
  5440     0F17                     CLC1GLS1        equ	3863	;# 
  5441     0F18                     CLC1GLS2        equ	3864	;# 
  5442     0F19                     CLC1GLS3        equ	3865	;# 
  5443     0F1A                     CLC2CON         equ	3866	;# 
  5444     0F1B                     CLC2POL         equ	3867	;# 
  5445     0F1C                     CLC2SEL0        equ	3868	;# 
  5446     0F1D                     CLC2SEL1        equ	3869	;# 
  5447     0F1E                     CLC2SEL2        equ	3870	;# 
  5448     0F1F                     CLC2SEL3        equ	3871	;# 
  5449     0F20                     CLC2GLS0        equ	3872	;# 
  5450     0F21                     CLC2GLS1        equ	3873	;# 
  5451     0F22                     CLC2GLS2        equ	3874	;# 
  5452     0F23                     CLC2GLS3        equ	3875	;# 
  5453     0F24                     CLC3CON         equ	3876	;# 
  5454     0F25                     CLC3POL         equ	3877	;# 
  5455     0F26                     CLC3SEL0        equ	3878	;# 
  5456     0F27                     CLC3SEL1        equ	3879	;# 
  5457     0F28                     CLC3SEL2        equ	3880	;# 
  5458     0F29                     CLC3SEL3        equ	3881	;# 
  5459     0F2A                     CLC3GLS0        equ	3882	;# 
  5460     0F2B                     CLC3GLS1        equ	3883	;# 
  5461     0F2C                     CLC3GLS2        equ	3884	;# 
  5462     0F2D                     CLC3GLS3        equ	3885	;# 
  5463     0F2E                     CLC4CON         equ	3886	;# 
  5464     0F2F                     CLC4POL         equ	3887	;# 
  5465     0F30                     CLC4SEL0        equ	3888	;# 
  5466     0F31                     CLC4SEL1        equ	3889	;# 
  5467     0F32                     CLC4SEL2        equ	3890	;# 
  5468     0F33                     CLC4SEL3        equ	3891	;# 
  5469     0F34                     CLC4GLS0        equ	3892	;# 
  5470     0F35                     CLC4GLS1        equ	3893	;# 
  5471     0F36                     CLC4GLS2        equ	3894	;# 
  5472     0F37                     CLC4GLS3        equ	3895	;# 
  5473     0FE4                     STATUS_SHAD     equ	4068	;# 
  5474     0FE5                     WREG_SHAD       equ	4069	;# 
  5475     0FE6                     BSR_SHAD        equ	4070	;# 
  5476     0FE7                     PCLATH_SHAD     equ	4071	;# 
  5477     0FE8                     FSR0L_SHAD      equ	4072	;# 
  5478     0FE9                     FSR0H_SHAD      equ	4073	;# 
  5479     0FEA                     FSR1L_SHAD      equ	4074	;# 
  5480     0FEB                     FSR1H_SHAD      equ	4075	;# 
  5481     0FED                     STKPTR          equ	4077	;# 
  5482     0FEE                     TOSL            equ	4078	;# 
  5483     0FEF                     TOSH            equ	4079	;# 
  5484     0000                     INDF0           equ	0	;# 
  5485     0001                     INDF1           equ	1	;# 
  5486     0002                     PCL             equ	2	;# 
  5487     0003                     STATUS          equ	3	;# 
  5488     0004                     FSR0L           equ	4	;# 
  5489     0005                     FSR0H           equ	5	;# 
  5490     0006                     FSR1L           equ	6	;# 
  5491     0007                     FSR1H           equ	7	;# 
  5492     0008                     BSR             equ	8	;# 
  5493     0009                     WREG            equ	9	;# 
  5494     000A                     PCLATH          equ	10	;# 
  5495     000B                     INTCON          equ	11	;# 
  5496     000C                     PORTA           equ	12	;# 
  5497     000D                     PORTB           equ	13	;# 
  5498     000E                     PORTC           equ	14	;# 
  5499     0010                     PIR0            equ	16	;# 
  5500     0011                     PIR1            equ	17	;# 
  5501     0012                     PIR2            equ	18	;# 
  5502     0013                     PIR3            equ	19	;# 
  5503     0014                     PIR4            equ	20	;# 
  5504     0015                     TMR0L           equ	21	;# 
  5505     0015                     TMR0            equ	21	;# 
  5506     0016                     TMR0H           equ	22	;# 
  5507     0016                     PR0             equ	22	;# 
  5508     0017                     T0CON0          equ	23	;# 
  5509     0018                     T0CON1          equ	24	;# 
  5510     0019                     TMR1            equ	25	;# 
  5511     0019                     TMR1L           equ	25	;# 
  5512     001A                     TMR1H           equ	26	;# 
  5513     001B                     T1CON           equ	27	;# 
  5514     001C                     T1GCON          equ	28	;# 
  5515     001D                     TMR2            equ	29	;# 
  5516     001E                     PR2             equ	30	;# 
  5517     001F                     T2CON           equ	31	;# 
  5518     008C                     TRISA           equ	140	;# 
  5519     008D                     TRISB           equ	141	;# 
  5520     008E                     TRISC           equ	142	;# 
  5521     0090                     PIE0            equ	144	;# 
  5522     0091                     PIE1            equ	145	;# 
  5523     0092                     PIE2            equ	146	;# 
  5524     0093                     PIE3            equ	147	;# 
  5525     0094                     PIE4            equ	148	;# 
  5526     0097                     WDTCON          equ	151	;# 
  5527     009B                     ADRES           equ	155	;# 
  5528     009B                     ADRESL          equ	155	;# 
  5529     009C                     ADRESH          equ	156	;# 
  5530     009D                     ADCON0          equ	157	;# 
  5531     009E                     ADCON1          equ	158	;# 
  5532     009F                     ADACT           equ	159	;# 
  5533     010C                     LATA            equ	268	;# 
  5534     010D                     LATB            equ	269	;# 
  5535     010E                     LATC            equ	270	;# 
  5536     0111                     CM1CON0         equ	273	;# 
  5537     0112                     CM1CON1         equ	274	;# 
  5538     0113                     CM2CON0         equ	275	;# 
  5539     0114                     CM2CON1         equ	276	;# 
  5540     0115                     CMOUT           equ	277	;# 
  5541     0116                     BORCON          equ	278	;# 
  5542     0117                     FVRCON          equ	279	;# 
  5543     0118                     DACCON0         equ	280	;# 
  5544     0119                     DACCON1         equ	281	;# 
  5545     018C                     ANSELA          equ	396	;# 
  5546     018D                     ANSELB          equ	397	;# 
  5547     018E                     ANSELC          equ	398	;# 
  5548     0197                     VREGCON         equ	407	;# 
  5549     0199                     RC1REG          equ	409	;# 
  5550     0199                     RCREG           equ	409	;# 
  5551     0199                     RCREG1          equ	409	;# 
  5552     019A                     TX1REG          equ	410	;# 
  5553     019A                     TXREG1          equ	410	;# 
  5554     019A                     TXREG           equ	410	;# 
  5555     019B                     SP1BRG          equ	411	;# 
  5556     019B                     SPBRG           equ	411	;# 
  5557     019B                     SP1BRGL         equ	411	;# 
  5558     019B                     SPBRG1          equ	411	;# 
  5559     019B                     SPBRGL          equ	411	;# 
  5560     019C                     SP1BRGH         equ	412	;# 
  5561     019C                     SPBRGH          equ	412	;# 
  5562     019C                     SPBRGH1         equ	412	;# 
  5563     019D                     RC1STA          equ	413	;# 
  5564     019D                     RCSTA1          equ	413	;# 
  5565     019D                     RCSTA           equ	413	;# 
  5566     019E                     TX1STA          equ	414	;# 
  5567     019E                     TXSTA1          equ	414	;# 
  5568     019E                     TXSTA           equ	414	;# 
  5569     019F                     BAUD1CON        equ	415	;# 
  5570     019F                     BAUDCON1        equ	415	;# 
  5571     019F                     BAUDCTL1        equ	415	;# 
  5572     019F                     BAUDCON         equ	415	;# 
  5573     019F                     BAUDCTL         equ	415	;# 
  5574     020C                     WPUA            equ	524	;# 
  5575     020D                     WPUB            equ	525	;# 
  5576     020E                     WPUC            equ	526	;# 
  5577     0211                     SSP1BUF         equ	529	;# 
  5578     0211                     SSPBUF          equ	529	;# 
  5579     0212                     SSP1ADD         equ	530	;# 
  5580     0212                     SSPADD          equ	530	;# 
  5581     0213                     SSP1MSK         equ	531	;# 
  5582     0213                     SSPMSK          equ	531	;# 
  5583     0214                     SSP1STAT        equ	532	;# 
  5584     0214                     SSPSTAT         equ	532	;# 
  5585     0215                     SSP1CON1        equ	533	;# 
  5586     0215                     SSPCON          equ	533	;# 
  5587     0215                     SSPCON1         equ	533	;# 
  5588     0215                     SSP1CON         equ	533	;# 
  5589     0216                     SSP1CON2        equ	534	;# 
  5590     0216                     SSPCON2         equ	534	;# 
  5591     0217                     SSP1CON3        equ	535	;# 
  5592     0217                     SSPCON3         equ	535	;# 
  5593     0219                     SSP2BUF         equ	537	;# 
  5594     021A                     SSP2ADD         equ	538	;# 
  5595     021B                     SSP2MSK         equ	539	;# 
  5596     021C                     SSP2STAT        equ	540	;# 
  5597     021D                     SSP2CON1        equ	541	;# 
  5598     021D                     SSP2CON         equ	541	;# 
  5599     021E                     SSP2CON2        equ	542	;# 
  5600     021F                     SSP2CON3        equ	543	;# 
  5601     028C                     ODCONA          equ	652	;# 
  5602     028D                     ODCONB          equ	653	;# 
  5603     028E                     ODCONC          equ	654	;# 
  5604     0291                     CCPR1           equ	657	;# 
  5605     0291                     CCPR1L          equ	657	;# 
  5606     0292                     CCPR1H          equ	658	;# 
  5607     0293                     CCP1CON         equ	659	;# 
  5608     0294                     CCP1CAP         equ	660	;# 
  5609     0295                     CCPR2           equ	661	;# 
  5610     0295                     CCPR2L          equ	661	;# 
  5611     0296                     CCPR2H          equ	662	;# 
  5612     0297                     CCP2CON         equ	663	;# 
  5613     0298                     CCP2CAP         equ	664	;# 
  5614     029F                     CCPTMRS         equ	671	;# 
  5615     030C                     SLRCONA         equ	780	;# 
  5616     030D                     SLRCONB         equ	781	;# 
  5617     030E                     SLRCONC         equ	782	;# 
  5618     0311                     CCPR3           equ	785	;# 
  5619     0311                     CCPR3L          equ	785	;# 
  5620     0312                     CCPR3H          equ	786	;# 
  5621     0313                     CCP3CON         equ	787	;# 
  5622     0314                     CCP3CAP         equ	788	;# 
  5623     0315                     CCPR4           equ	789	;# 
  5624     0315                     CCPR4L          equ	789	;# 
  5625     0316                     CCPR4H          equ	790	;# 
  5626     0317                     CCP4CON         equ	791	;# 
  5627     0318                     CCP4CAP         equ	792	;# 
  5628     038C                     INLVLA          equ	908	;# 
  5629     038D                     INLVLB          equ	909	;# 
  5630     038E                     INLVLC          equ	910	;# 
  5631     0391                     IOCAP           equ	913	;# 
  5632     0392                     IOCAN           equ	914	;# 
  5633     0393                     IOCAF           equ	915	;# 
  5634     0394                     IOCBP           equ	916	;# 
  5635     0395                     IOCBN           equ	917	;# 
  5636     0396                     IOCBF           equ	918	;# 
  5637     0397                     IOCCP           equ	919	;# 
  5638     0398                     IOCCN           equ	920	;# 
  5639     0399                     IOCCF           equ	921	;# 
  5640     039A                     CLKRCON         equ	922	;# 
  5641     039C                     MDCON           equ	924	;# 
  5642     039D                     MDSRC           equ	925	;# 
  5643     039E                     MDCARH          equ	926	;# 
  5644     039F                     MDCARL          equ	927	;# 
  5645     0411                     TMR3            equ	1041	;# 
  5646     0411                     TMR3L           equ	1041	;# 
  5647     0412                     TMR3H           equ	1042	;# 
  5648     0413                     T3CON           equ	1043	;# 
  5649     0414                     T3GCON          equ	1044	;# 
  5650     0415                     TMR4            equ	1045	;# 
  5651     0416                     PR4             equ	1046	;# 
  5652     0417                     T4CON           equ	1047	;# 
  5653     0418                     TMR5            equ	1048	;# 
  5654     0418                     TMR5L           equ	1048	;# 
  5655     0419                     TMR5H           equ	1049	;# 
  5656     041A                     T5CON           equ	1050	;# 
  5657     041B                     T5GCON          equ	1051	;# 
  5658     041C                     TMR6            equ	1052	;# 
  5659     041D                     PR6             equ	1053	;# 
  5660     041E                     T6CON           equ	1054	;# 
  5661     041F                     CCDCON          equ	1055	;# 
  5662     0498                     NCO1ACC         equ	1176	;# 
  5663     0498                     NCO1ACCL        equ	1176	;# 
  5664     0499                     NCO1ACCH        equ	1177	;# 
  5665     049A                     NCO1ACCU        equ	1178	;# 
  5666     049B                     NCO1INC         equ	1179	;# 
  5667     049B                     NCO1INCL        equ	1179	;# 
  5668     049C                     NCO1INCH        equ	1180	;# 
  5669     049D                     NCO1INCU        equ	1181	;# 
  5670     049E                     NCO1CON         equ	1182	;# 
  5671     049F                     NCO1CLK         equ	1183	;# 
  5672     0617                     PWM5DCL         equ	1559	;# 
  5673     0618                     PWM5DCH         equ	1560	;# 
  5674     0619                     PWM5CON         equ	1561	;# 
  5675     0619                     PWM5CON0        equ	1561	;# 
  5676     061A                     PWM6DCL         equ	1562	;# 
  5677     061B                     PWM6DCH         equ	1563	;# 
  5678     061C                     PWM6CON         equ	1564	;# 
  5679     061C                     PWM6CON0        equ	1564	;# 
  5680     061F                     PWMTMRS         equ	1567	;# 
  5681     0691                     CWG1CLKCON      equ	1681	;# 
  5682     0692                     CWG1DAT         equ	1682	;# 
  5683     0693                     CWG1DBR         equ	1683	;# 
  5684     0694                     CWG1DBF         equ	1684	;# 
  5685     0695                     CWG1CON0        equ	1685	;# 
  5686     0696                     CWG1CON1        equ	1686	;# 
  5687     0697                     CWG1AS0         equ	1687	;# 
  5688     0698                     CWG1AS1         equ	1688	;# 
  5689     0699                     CWG1STR         equ	1689	;# 
  5690     0711                     CWG2CLKCON      equ	1809	;# 
  5691     0712                     CWG2DAT         equ	1810	;# 
  5692     0713                     CWG2DBR         equ	1811	;# 
  5693     0714                     CWG2DBF         equ	1812	;# 
  5694     0715                     CWG2CON0        equ	1813	;# 
  5695     0716                     CWG2CON1        equ	1814	;# 
  5696     0717                     CWG2AS0         equ	1815	;# 
  5697     0718                     CWG2AS1         equ	1816	;# 
  5698     0719                     CWG2STR         equ	1817	;# 
  5699     0891                     NVMADR          equ	2193	;# 
  5700     0891                     EEADR           equ	2193	;# 
  5701     0891                     PMADR           equ	2193	;# 
  5702     0891                     NVMADRL         equ	2193	;# 
  5703     0891                     EEADRL          equ	2193	;# 
  5704     0891                     PMADRL          equ	2193	;# 
  5705     0892                     NVMADRH         equ	2194	;# 
  5706     0892                     EEADRH          equ	2194	;# 
  5707     0892                     PMADRH          equ	2194	;# 
  5708     0893                     NVMDAT          equ	2195	;# 
  5709     0893                     EEDAT           equ	2195	;# 
  5710     0893                     PMDAT           equ	2195	;# 
  5711     0893                     NVMDATL         equ	2195	;# 
  5712     0893                     EEDATL          equ	2195	;# 
  5713     0893                     PMDATL          equ	2195	;# 
  5714     0894                     NVMDATH         equ	2196	;# 
  5715     0894                     EEDATH          equ	2196	;# 
  5716     0894                     PMDATH          equ	2196	;# 
  5717     0895                     NVMCON1         equ	2197	;# 
  5718     0895                     EECON1          equ	2197	;# 
  5719     0895                     PMCON1          equ	2197	;# 
  5720     0896                     NVMCON2         equ	2198	;# 
  5721     0896                     EECON2          equ	2198	;# 
  5722     0896                     PMCON2          equ	2198	;# 
  5723     089B                     PCON0           equ	2203	;# 
  5724     0911                     PMD0            equ	2321	;# 
  5725     0912                     PMD1            equ	2322	;# 
  5726     0913                     PMD2            equ	2323	;# 
  5727     0914                     PMD3            equ	2324	;# 
  5728     0915                     PMD4            equ	2325	;# 
  5729     0916                     PMD5            equ	2326	;# 
  5730     0918                     CPUDOZE         equ	2328	;# 
  5731     0919                     OSCCON1         equ	2329	;# 
  5732     091A                     OSCCON2         equ	2330	;# 
  5733     091B                     OSCCON3         equ	2331	;# 
  5734     091C                     OSCSTAT1        equ	2332	;# 
  5735     091D                     OSCEN           equ	2333	;# 
  5736     091E                     OSCTUNE         equ	2334	;# 
  5737     091F                     OSCFRQ          equ	2335	;# 
  5738     0E0F                     PPSLOCK         equ	3599	;# 
  5739     0E10                     INTPPS          equ	3600	;# 
  5740     0E11                     T0CKIPPS        equ	3601	;# 
  5741     0E12                     T1CKIPPS        equ	3602	;# 
  5742     0E13                     T1GPPS          equ	3603	;# 
  5743     0E14                     CCP1PPS         equ	3604	;# 
  5744     0E15                     CCP2PPS         equ	3605	;# 
  5745     0E16                     CCP3PPS         equ	3606	;# 
  5746     0E17                     CCP4PPS         equ	3607	;# 
  5747     0E18                     CWG1PPS         equ	3608	;# 
  5748     0E19                     CWG2PPS         equ	3609	;# 
  5749     0E1A                     MDCIN1PPS       equ	3610	;# 
  5750     0E1B                     MDCIN2PPS       equ	3611	;# 
  5751     0E1C                     MDMINPPS        equ	3612	;# 
  5752     0E1D                     SSP2CLKPPS      equ	3613	;# 
  5753     0E1E                     SSP2DATPPS      equ	3614	;# 
  5754     0E1F                     SSP2SSPPS       equ	3615	;# 
  5755     0E20                     SSP1CLKPPS      equ	3616	;# 
  5756     0E21                     SSP1DATPPS      equ	3617	;# 
  5757     0E22                     SSP1SSPPS       equ	3618	;# 
  5758     0E24                     RXPPS           equ	3620	;# 
  5759     0E25                     TXPPS           equ	3621	;# 
  5760     0E28                     CLCIN0PPS       equ	3624	;# 
  5761     0E29                     CLCIN1PPS       equ	3625	;# 
  5762     0E2A                     CLCIN2PPS       equ	3626	;# 
  5763     0E2B                     CLCIN3PPS       equ	3627	;# 
  5764     0E2C                     T3CKIPPS        equ	3628	;# 
  5765     0E2D                     T3GPPS          equ	3629	;# 
  5766     0E2E                     T5CKIPPS        equ	3630	;# 
  5767     0E2F                     T5GPPS          equ	3631	;# 
  5768     0E90                     RA0PPS          equ	3728	;# 
  5769     0E91                     RA1PPS          equ	3729	;# 
  5770     0E92                     RA2PPS          equ	3730	;# 
  5771     0E94                     RA4PPS          equ	3732	;# 
  5772     0E95                     RA5PPS          equ	3733	;# 
  5773     0E9C                     RB4PPS          equ	3740	;# 
  5774     0E9D                     RB5PPS          equ	3741	;# 
  5775     0E9E                     RB6PPS          equ	3742	;# 
  5776     0E9F                     RB7PPS          equ	3743	;# 
  5777     0EA0                     RC0PPS          equ	3744	;# 
  5778     0EA1                     RC1PPS          equ	3745	;# 
  5779     0EA2                     RC2PPS          equ	3746	;# 
  5780     0EA3                     RC3PPS          equ	3747	;# 
  5781     0EA4                     RC4PPS          equ	3748	;# 
  5782     0EA5                     RC5PPS          equ	3749	;# 
  5783     0EA6                     RC6PPS          equ	3750	;# 
  5784     0EA7                     RC7PPS          equ	3751	;# 
  5785     0F0F                     CLCDATA         equ	3855	;# 
  5786     0F10                     CLC1CON         equ	3856	;# 
  5787     0F11                     CLC1POL         equ	3857	;# 
  5788     0F12                     CLC1SEL0        equ	3858	;# 
  5789     0F13                     CLC1SEL1        equ	3859	;# 
  5790     0F14                     CLC1SEL2        equ	3860	;# 
  5791     0F15                     CLC1SEL3        equ	3861	;# 
  5792     0F16                     CLC1GLS0        equ	3862	;# 
  5793     0F17                     CLC1GLS1        equ	3863	;# 
  5794     0F18                     CLC1GLS2        equ	3864	;# 
  5795     0F19                     CLC1GLS3        equ	3865	;# 
  5796     0F1A                     CLC2CON         equ	3866	;# 
  5797     0F1B                     CLC2POL         equ	3867	;# 
  5798     0F1C                     CLC2SEL0        equ	3868	;# 
  5799     0F1D                     CLC2SEL1        equ	3869	;# 
  5800     0F1E                     CLC2SEL2        equ	3870	;# 
  5801     0F1F                     CLC2SEL3        equ	3871	;# 
  5802     0F20                     CLC2GLS0        equ	3872	;# 
  5803     0F21                     CLC2GLS1        equ	3873	;# 
  5804     0F22                     CLC2GLS2        equ	3874	;# 
  5805     0F23                     CLC2GLS3        equ	3875	;# 
  5806     0F24                     CLC3CON         equ	3876	;# 
  5807     0F25                     CLC3POL         equ	3877	;# 
  5808     0F26                     CLC3SEL0        equ	3878	;# 
  5809     0F27                     CLC3SEL1        equ	3879	;# 
  5810     0F28                     CLC3SEL2        equ	3880	;# 
  5811     0F29                     CLC3SEL3        equ	3881	;# 
  5812     0F2A                     CLC3GLS0        equ	3882	;# 
  5813     0F2B                     CLC3GLS1        equ	3883	;# 
  5814     0F2C                     CLC3GLS2        equ	3884	;# 
  5815     0F2D                     CLC3GLS3        equ	3885	;# 
  5816     0F2E                     CLC4CON         equ	3886	;# 
  5817     0F2F                     CLC4POL         equ	3887	;# 
  5818     0F30                     CLC4SEL0        equ	3888	;# 
  5819     0F31                     CLC4SEL1        equ	3889	;# 
  5820     0F32                     CLC4SEL2        equ	3890	;# 
  5821     0F33                     CLC4SEL3        equ	3891	;# 
  5822     0F34                     CLC4GLS0        equ	3892	;# 
  5823     0F35                     CLC4GLS1        equ	3893	;# 
  5824     0F36                     CLC4GLS2        equ	3894	;# 
  5825     0F37                     CLC4GLS3        equ	3895	;# 
  5826     0FE4                     STATUS_SHAD     equ	4068	;# 
  5827     0FE5                     WREG_SHAD       equ	4069	;# 
  5828     0FE6                     BSR_SHAD        equ	4070	;# 
  5829     0FE7                     PCLATH_SHAD     equ	4071	;# 
  5830     0FE8                     FSR0L_SHAD      equ	4072	;# 
  5831     0FE9                     FSR0H_SHAD      equ	4073	;# 
  5832     0FEA                     FSR1L_SHAD      equ	4074	;# 
  5833     0FEB                     FSR1H_SHAD      equ	4075	;# 
  5834     0FED                     STKPTR          equ	4077	;# 
  5835     0FEE                     TOSL            equ	4078	;# 
  5836     0FEF                     TOSH            equ	4079	;# 
  5837     0000                     INDF0           equ	0	;# 
  5838     0001                     INDF1           equ	1	;# 
  5839     0002                     PCL             equ	2	;# 
  5840     0003                     STATUS          equ	3	;# 
  5841     0004                     FSR0L           equ	4	;# 
  5842     0005                     FSR0H           equ	5	;# 
  5843     0006                     FSR1L           equ	6	;# 
  5844     0007                     FSR1H           equ	7	;# 
  5845     0008                     BSR             equ	8	;# 
  5846     0009                     WREG            equ	9	;# 
  5847     000A                     PCLATH          equ	10	;# 
  5848     000B                     INTCON          equ	11	;# 
  5849     000C                     PORTA           equ	12	;# 
  5850     000D                     PORTB           equ	13	;# 
  5851     000E                     PORTC           equ	14	;# 
  5852     0010                     PIR0            equ	16	;# 
  5853     0011                     PIR1            equ	17	;# 
  5854     0012                     PIR2            equ	18	;# 
  5855     0013                     PIR3            equ	19	;# 
  5856     0014                     PIR4            equ	20	;# 
  5857     0015                     TMR0L           equ	21	;# 
  5858     0015                     TMR0            equ	21	;# 
  5859     0016                     TMR0H           equ	22	;# 
  5860     0016                     PR0             equ	22	;# 
  5861     0017                     T0CON0          equ	23	;# 
  5862     0018                     T0CON1          equ	24	;# 
  5863     0019                     TMR1            equ	25	;# 
  5864     0019                     TMR1L           equ	25	;# 
  5865     001A                     TMR1H           equ	26	;# 
  5866     001B                     T1CON           equ	27	;# 
  5867     001C                     T1GCON          equ	28	;# 
  5868     001D                     TMR2            equ	29	;# 
  5869     001E                     PR2             equ	30	;# 
  5870     001F                     T2CON           equ	31	;# 
  5871     008C                     TRISA           equ	140	;# 
  5872     008D                     TRISB           equ	141	;# 
  5873     008E                     TRISC           equ	142	;# 
  5874     0090                     PIE0            equ	144	;# 
  5875     0091                     PIE1            equ	145	;# 
  5876     0092                     PIE2            equ	146	;# 
  5877     0093                     PIE3            equ	147	;# 
  5878     0094                     PIE4            equ	148	;# 
  5879     0097                     WDTCON          equ	151	;# 
  5880     009B                     ADRES           equ	155	;# 
  5881     009B                     ADRESL          equ	155	;# 
  5882     009C                     ADRESH          equ	156	;# 
  5883     009D                     ADCON0          equ	157	;# 
  5884     009E                     ADCON1          equ	158	;# 
  5885     009F                     ADACT           equ	159	;# 
  5886     010C                     LATA            equ	268	;# 
  5887     010D                     LATB            equ	269	;# 
  5888     010E                     LATC            equ	270	;# 
  5889     0111                     CM1CON0         equ	273	;# 
  5890     0112                     CM1CON1         equ	274	;# 
  5891     0113                     CM2CON0         equ	275	;# 
  5892     0114                     CM2CON1         equ	276	;# 
  5893     0115                     CMOUT           equ	277	;# 
  5894     0116                     BORCON          equ	278	;# 
  5895     0117                     FVRCON          equ	279	;# 
  5896     0118                     DACCON0         equ	280	;# 
  5897     0119                     DACCON1         equ	281	;# 
  5898     018C                     ANSELA          equ	396	;# 
  5899     018D                     ANSELB          equ	397	;# 
  5900     018E                     ANSELC          equ	398	;# 
  5901     0197                     VREGCON         equ	407	;# 
  5902     0199                     RC1REG          equ	409	;# 
  5903     0199                     RCREG           equ	409	;# 
  5904     0199                     RCREG1          equ	409	;# 
  5905     019A                     TX1REG          equ	410	;# 
  5906     019A                     TXREG1          equ	410	;# 
  5907     019A                     TXREG           equ	410	;# 
  5908     019B                     SP1BRG          equ	411	;# 
  5909     019B                     SPBRG           equ	411	;# 
  5910     019B                     SP1BRGL         equ	411	;# 
  5911     019B                     SPBRG1          equ	411	;# 
  5912     019B                     SPBRGL          equ	411	;# 
  5913     019C                     SP1BRGH         equ	412	;# 
  5914     019C                     SPBRGH          equ	412	;# 
  5915     019C                     SPBRGH1         equ	412	;# 
  5916     019D                     RC1STA          equ	413	;# 
  5917     019D                     RCSTA1          equ	413	;# 
  5918     019D                     RCSTA           equ	413	;# 
  5919     019E                     TX1STA          equ	414	;# 
  5920     019E                     TXSTA1          equ	414	;# 
  5921     019E                     TXSTA           equ	414	;# 
  5922     019F                     BAUD1CON        equ	415	;# 
  5923     019F                     BAUDCON1        equ	415	;# 
  5924     019F                     BAUDCTL1        equ	415	;# 
  5925     019F                     BAUDCON         equ	415	;# 
  5926     019F                     BAUDCTL         equ	415	;# 
  5927     020C                     WPUA            equ	524	;# 
  5928     020D                     WPUB            equ	525	;# 
  5929     020E                     WPUC            equ	526	;# 
  5930     0211                     SSP1BUF         equ	529	;# 
  5931     0211                     SSPBUF          equ	529	;# 
  5932     0212                     SSP1ADD         equ	530	;# 
  5933     0212                     SSPADD          equ	530	;# 
  5934     0213                     SSP1MSK         equ	531	;# 
  5935     0213                     SSPMSK          equ	531	;# 
  5936     0214                     SSP1STAT        equ	532	;# 
  5937     0214                     SSPSTAT         equ	532	;# 
  5938     0215                     SSP1CON1        equ	533	;# 
  5939     0215                     SSPCON          equ	533	;# 
  5940     0215                     SSPCON1         equ	533	;# 
  5941     0215                     SSP1CON         equ	533	;# 
  5942     0216                     SSP1CON2        equ	534	;# 
  5943     0216                     SSPCON2         equ	534	;# 
  5944     0217                     SSP1CON3        equ	535	;# 
  5945     0217                     SSPCON3         equ	535	;# 
  5946     0219                     SSP2BUF         equ	537	;# 
  5947     021A                     SSP2ADD         equ	538	;# 
  5948     021B                     SSP2MSK         equ	539	;# 
  5949     021C                     SSP2STAT        equ	540	;# 
  5950     021D                     SSP2CON1        equ	541	;# 
  5951     021D                     SSP2CON         equ	541	;# 
  5952     021E                     SSP2CON2        equ	542	;# 
  5953     021F                     SSP2CON3        equ	543	;# 
  5954     028C                     ODCONA          equ	652	;# 
  5955     028D                     ODCONB          equ	653	;# 
  5956     028E                     ODCONC          equ	654	;# 
  5957     0291                     CCPR1           equ	657	;# 
  5958     0291                     CCPR1L          equ	657	;# 
  5959     0292                     CCPR1H          equ	658	;# 
  5960     0293                     CCP1CON         equ	659	;# 
  5961     0294                     CCP1CAP         equ	660	;# 
  5962     0295                     CCPR2           equ	661	;# 
  5963     0295                     CCPR2L          equ	661	;# 
  5964     0296                     CCPR2H          equ	662	;# 
  5965     0297                     CCP2CON         equ	663	;# 
  5966     0298                     CCP2CAP         equ	664	;# 
  5967     029F                     CCPTMRS         equ	671	;# 
  5968     030C                     SLRCONA         equ	780	;# 
  5969     030D                     SLRCONB         equ	781	;# 
  5970     030E                     SLRCONC         equ	782	;# 
  5971     0311                     CCPR3           equ	785	;# 
  5972     0311                     CCPR3L          equ	785	;# 
  5973     0312                     CCPR3H          equ	786	;# 
  5974     0313                     CCP3CON         equ	787	;# 
  5975     0314                     CCP3CAP         equ	788	;# 
  5976     0315                     CCPR4           equ	789	;# 
  5977     0315                     CCPR4L          equ	789	;# 
  5978     0316                     CCPR4H          equ	790	;# 
  5979     0317                     CCP4CON         equ	791	;# 
  5980     0318                     CCP4CAP         equ	792	;# 
  5981     038C                     INLVLA          equ	908	;# 
  5982     038D                     INLVLB          equ	909	;# 
  5983     038E                     INLVLC          equ	910	;# 
  5984     0391                     IOCAP           equ	913	;# 
  5985     0392                     IOCAN           equ	914	;# 
  5986     0393                     IOCAF           equ	915	;# 
  5987     0394                     IOCBP           equ	916	;# 
  5988     0395                     IOCBN           equ	917	;# 
  5989     0396                     IOCBF           equ	918	;# 
  5990     0397                     IOCCP           equ	919	;# 
  5991     0398                     IOCCN           equ	920	;# 
  5992     0399                     IOCCF           equ	921	;# 
  5993     039A                     CLKRCON         equ	922	;# 
  5994     039C                     MDCON           equ	924	;# 
  5995     039D                     MDSRC           equ	925	;# 
  5996     039E                     MDCARH          equ	926	;# 
  5997     039F                     MDCARL          equ	927	;# 
  5998     0411                     TMR3            equ	1041	;# 
  5999     0411                     TMR3L           equ	1041	;# 
  6000     0412                     TMR3H           equ	1042	;# 
  6001     0413                     T3CON           equ	1043	;# 
  6002     0414                     T3GCON          equ	1044	;# 
  6003     0415                     TMR4            equ	1045	;# 
  6004     0416                     PR4             equ	1046	;# 
  6005     0417                     T4CON           equ	1047	;# 
  6006     0418                     TMR5            equ	1048	;# 
  6007     0418                     TMR5L           equ	1048	;# 
  6008     0419                     TMR5H           equ	1049	;# 
  6009     041A                     T5CON           equ	1050	;# 
  6010     041B                     T5GCON          equ	1051	;# 
  6011     041C                     TMR6            equ	1052	;# 
  6012     041D                     PR6             equ	1053	;# 
  6013     041E                     T6CON           equ	1054	;# 
  6014     041F                     CCDCON          equ	1055	;# 
  6015     0498                     NCO1ACC         equ	1176	;# 
  6016     0498                     NCO1ACCL        equ	1176	;# 
  6017     0499                     NCO1ACCH        equ	1177	;# 
  6018     049A                     NCO1ACCU        equ	1178	;# 
  6019     049B                     NCO1INC         equ	1179	;# 
  6020     049B                     NCO1INCL        equ	1179	;# 
  6021     049C                     NCO1INCH        equ	1180	;# 
  6022     049D                     NCO1INCU        equ	1181	;# 
  6023     049E                     NCO1CON         equ	1182	;# 
  6024     049F                     NCO1CLK         equ	1183	;# 
  6025     0617                     PWM5DCL         equ	1559	;# 
  6026     0618                     PWM5DCH         equ	1560	;# 
  6027     0619                     PWM5CON         equ	1561	;# 
  6028     0619                     PWM5CON0        equ	1561	;# 
  6029     061A                     PWM6DCL         equ	1562	;# 
  6030     061B                     PWM6DCH         equ	1563	;# 
  6031     061C                     PWM6CON         equ	1564	;# 
  6032     061C                     PWM6CON0        equ	1564	;# 
  6033     061F                     PWMTMRS         equ	1567	;# 
  6034     0691                     CWG1CLKCON      equ	1681	;# 
  6035     0692                     CWG1DAT         equ	1682	;# 
  6036     0693                     CWG1DBR         equ	1683	;# 
  6037     0694                     CWG1DBF         equ	1684	;# 
  6038     0695                     CWG1CON0        equ	1685	;# 
  6039     0696                     CWG1CON1        equ	1686	;# 
  6040     0697                     CWG1AS0         equ	1687	;# 
  6041     0698                     CWG1AS1         equ	1688	;# 
  6042     0699                     CWG1STR         equ	1689	;# 
  6043     0711                     CWG2CLKCON      equ	1809	;# 
  6044     0712                     CWG2DAT         equ	1810	;# 
  6045     0713                     CWG2DBR         equ	1811	;# 
  6046     0714                     CWG2DBF         equ	1812	;# 
  6047     0715                     CWG2CON0        equ	1813	;# 
  6048     0716                     CWG2CON1        equ	1814	;# 
  6049     0717                     CWG2AS0         equ	1815	;# 
  6050     0718                     CWG2AS1         equ	1816	;# 
  6051     0719                     CWG2STR         equ	1817	;# 
  6052     0891                     NVMADR          equ	2193	;# 
  6053     0891                     EEADR           equ	2193	;# 
  6054     0891                     PMADR           equ	2193	;# 
  6055     0891                     NVMADRL         equ	2193	;# 
  6056     0891                     EEADRL          equ	2193	;# 
  6057     0891                     PMADRL          equ	2193	;# 
  6058     0892                     NVMADRH         equ	2194	;# 
  6059     0892                     EEADRH          equ	2194	;# 
  6060     0892                     PMADRH          equ	2194	;# 
  6061     0893                     NVMDAT          equ	2195	;# 
  6062     0893                     EEDAT           equ	2195	;# 
  6063     0893                     PMDAT           equ	2195	;# 
  6064     0893                     NVMDATL         equ	2195	;# 
  6065     0893                     EEDATL          equ	2195	;# 
  6066     0893                     PMDATL          equ	2195	;# 
  6067     0894                     NVMDATH         equ	2196	;# 
  6068     0894                     EEDATH          equ	2196	;# 
  6069     0894                     PMDATH          equ	2196	;# 
  6070     0895                     NVMCON1         equ	2197	;# 
  6071     0895                     EECON1          equ	2197	;# 
  6072     0895                     PMCON1          equ	2197	;# 
  6073     0896                     NVMCON2         equ	2198	;# 
  6074     0896                     EECON2          equ	2198	;# 
  6075     0896                     PMCON2          equ	2198	;# 
  6076     089B                     PCON0           equ	2203	;# 
  6077     0911                     PMD0            equ	2321	;# 
  6078     0912                     PMD1            equ	2322	;# 
  6079     0913                     PMD2            equ	2323	;# 
  6080     0914                     PMD3            equ	2324	;# 
  6081     0915                     PMD4            equ	2325	;# 
  6082     0916                     PMD5            equ	2326	;# 
  6083     0918                     CPUDOZE         equ	2328	;# 
  6084     0919                     OSCCON1         equ	2329	;# 
  6085     091A                     OSCCON2         equ	2330	;# 
  6086     091B                     OSCCON3         equ	2331	;# 
  6087     091C                     OSCSTAT1        equ	2332	;# 
  6088     091D                     OSCEN           equ	2333	;# 
  6089     091E                     OSCTUNE         equ	2334	;# 
  6090     091F                     OSCFRQ          equ	2335	;# 
  6091     0E0F                     PPSLOCK         equ	3599	;# 
  6092     0E10                     INTPPS          equ	3600	;# 
  6093     0E11                     T0CKIPPS        equ	3601	;# 
  6094     0E12                     T1CKIPPS        equ	3602	;# 
  6095     0E13                     T1GPPS          equ	3603	;# 
  6096     0E14                     CCP1PPS         equ	3604	;# 
  6097     0E15                     CCP2PPS         equ	3605	;# 
  6098     0E16                     CCP3PPS         equ	3606	;# 
  6099     0E17                     CCP4PPS         equ	3607	;# 
  6100     0E18                     CWG1PPS         equ	3608	;# 
  6101     0E19                     CWG2PPS         equ	3609	;# 
  6102     0E1A                     MDCIN1PPS       equ	3610	;# 
  6103     0E1B                     MDCIN2PPS       equ	3611	;# 
  6104     0E1C                     MDMINPPS        equ	3612	;# 
  6105     0E1D                     SSP2CLKPPS      equ	3613	;# 
  6106     0E1E                     SSP2DATPPS      equ	3614	;# 
  6107     0E1F                     SSP2SSPPS       equ	3615	;# 
  6108     0E20                     SSP1CLKPPS      equ	3616	;# 
  6109     0E21                     SSP1DATPPS      equ	3617	;# 
  6110     0E22                     SSP1SSPPS       equ	3618	;# 
  6111     0E24                     RXPPS           equ	3620	;# 
  6112     0E25                     TXPPS           equ	3621	;# 
  6113     0E28                     CLCIN0PPS       equ	3624	;# 
  6114     0E29                     CLCIN1PPS       equ	3625	;# 
  6115     0E2A                     CLCIN2PPS       equ	3626	;# 
  6116     0E2B                     CLCIN3PPS       equ	3627	;# 
  6117     0E2C                     T3CKIPPS        equ	3628	;# 
  6118     0E2D                     T3GPPS          equ	3629	;# 
  6119     0E2E                     T5CKIPPS        equ	3630	;# 
  6120     0E2F                     T5GPPS          equ	3631	;# 
  6121     0E90                     RA0PPS          equ	3728	;# 
  6122     0E91                     RA1PPS          equ	3729	;# 
  6123     0E92                     RA2PPS          equ	3730	;# 
  6124     0E94                     RA4PPS          equ	3732	;# 
  6125     0E95                     RA5PPS          equ	3733	;# 
  6126     0E9C                     RB4PPS          equ	3740	;# 
  6127     0E9D                     RB5PPS          equ	3741	;# 
  6128     0E9E                     RB6PPS          equ	3742	;# 
  6129     0E9F                     RB7PPS          equ	3743	;# 
  6130     0EA0                     RC0PPS          equ	3744	;# 
  6131     0EA1                     RC1PPS          equ	3745	;# 
  6132     0EA2                     RC2PPS          equ	3746	;# 
  6133     0EA3                     RC3PPS          equ	3747	;# 
  6134     0EA4                     RC4PPS          equ	3748	;# 
  6135     0EA5                     RC5PPS          equ	3749	;# 
  6136     0EA6                     RC6PPS          equ	3750	;# 
  6137     0EA7                     RC7PPS          equ	3751	;# 
  6138     0F0F                     CLCDATA         equ	3855	;# 
  6139     0F10                     CLC1CON         equ	3856	;# 
  6140     0F11                     CLC1POL         equ	3857	;# 
  6141     0F12                     CLC1SEL0        equ	3858	;# 
  6142     0F13                     CLC1SEL1        equ	3859	;# 
  6143     0F14                     CLC1SEL2        equ	3860	;# 
  6144     0F15                     CLC1SEL3        equ	3861	;# 
  6145     0F16                     CLC1GLS0        equ	3862	;# 
  6146     0F17                     CLC1GLS1        equ	3863	;# 
  6147     0F18                     CLC1GLS2        equ	3864	;# 
  6148     0F19                     CLC1GLS3        equ	3865	;# 
  6149     0F1A                     CLC2CON         equ	3866	;# 
  6150     0F1B                     CLC2POL         equ	3867	;# 
  6151     0F1C                     CLC2SEL0        equ	3868	;# 
  6152     0F1D                     CLC2SEL1        equ	3869	;# 
  6153     0F1E                     CLC2SEL2        equ	3870	;# 
  6154     0F1F                     CLC2SEL3        equ	3871	;# 
  6155     0F20                     CLC2GLS0        equ	3872	;# 
  6156     0F21                     CLC2GLS1        equ	3873	;# 
  6157     0F22                     CLC2GLS2        equ	3874	;# 
  6158     0F23                     CLC2GLS3        equ	3875	;# 
  6159     0F24                     CLC3CON         equ	3876	;# 
  6160     0F25                     CLC3POL         equ	3877	;# 
  6161     0F26                     CLC3SEL0        equ	3878	;# 
  6162     0F27                     CLC3SEL1        equ	3879	;# 
  6163     0F28                     CLC3SEL2        equ	3880	;# 
  6164     0F29                     CLC3SEL3        equ	3881	;# 
  6165     0F2A                     CLC3GLS0        equ	3882	;# 
  6166     0F2B                     CLC3GLS1        equ	3883	;# 
  6167     0F2C                     CLC3GLS2        equ	3884	;# 
  6168     0F2D                     CLC3GLS3        equ	3885	;# 
  6169     0F2E                     CLC4CON         equ	3886	;# 
  6170     0F2F                     CLC4POL         equ	3887	;# 
  6171     0F30                     CLC4SEL0        equ	3888	;# 
  6172     0F31                     CLC4SEL1        equ	3889	;# 
  6173     0F32                     CLC4SEL2        equ	3890	;# 
  6174     0F33                     CLC4SEL3        equ	3891	;# 
  6175     0F34                     CLC4GLS0        equ	3892	;# 
  6176     0F35                     CLC4GLS1        equ	3893	;# 
  6177     0F36                     CLC4GLS2        equ	3894	;# 
  6178     0F37                     CLC4GLS3        equ	3895	;# 
  6179     0FE4                     STATUS_SHAD     equ	4068	;# 
  6180     0FE5                     WREG_SHAD       equ	4069	;# 
  6181     0FE6                     BSR_SHAD        equ	4070	;# 
  6182     0FE7                     PCLATH_SHAD     equ	4071	;# 
  6183     0FE8                     FSR0L_SHAD      equ	4072	;# 
  6184     0FE9                     FSR0H_SHAD      equ	4073	;# 
  6185     0FEA                     FSR1L_SHAD      equ	4074	;# 
  6186     0FEB                     FSR1H_SHAD      equ	4075	;# 
  6187     0FED                     STKPTR          equ	4077	;# 
  6188     0FEE                     TOSL            equ	4078	;# 
  6189     0FEF                     TOSH            equ	4079	;# 
  6190                           
  6191 ;; Function _SPI1_Deinitialize is unused but had its address taken
  6192     0000                     _SPI1_Deinitialize equ	0
  6193                           
  6194 ;; Function _SPI1_Close is unused but had its address taken
  6195     0000                     _SPI1_Close     equ	0
  6196                           
  6197 ;; Function _SPI1_BufferExchange is unused but had its address taken
  6198     0000                     _SPI1_BufferExchange equ	0
  6199                           
  6200 ;; Function _SPI1_BufferWrite is unused but had its address taken
  6201     0000                     _SPI1_BufferWrite equ	0
  6202                           
  6203 ;; Function _SPI1_BufferRead is unused but had its address taken
  6204     0000                     _SPI1_BufferRead equ	0
  6205                           
  6206 ;; Function _SPI1_ByteWrite is unused but had its address taken
  6207     0000                     _SPI1_ByteWrite equ	0
  6208                           
  6209 ;; Function _SPI1_ByteRead is unused but had its address taken
  6210     0000                     _SPI1_ByteRead  equ	0
  6211                           
  6212 ;; Function _SPI1_IsRxReady is unused but had its address taken
  6213     0000                     _SPI1_IsRxReady equ	0
  6214                           
  6215 ;; Function _SPI1_IsTxReady is unused but had its address taken
  6216     0000                     _SPI1_IsTxReady equ	0
  6217                           
  6218 ;; Function _INT_DefaultInterruptHandler is unused but had its address taken
  6219     0000                     _INT_DefaultInterruptHandler equ	0
  6220                           
  6221 ;; Function _EUSART_Deinitialize is unused but had its address taken
  6222     0000                     _EUSART_Deinitialize equ	0
  6223                           
  6224 ;; Function _EUSART_TransmitEnable is unused but had its address taken
  6225     0000                     _EUSART_TransmitEnable equ	0
  6226                           
  6227 ;; Function _EUSART_TransmitDisable is unused but had its address taken
  6228     0000                     _EUSART_TransmitDisable equ	0
  6229                           
  6230 ;; Function _EUSART_AutoBaudSet is unused but had its address taken
  6231     0000                     _EUSART_AutoBaudSet equ	0
  6232                           
  6233 ;; Function _EUSART_AutoBaudQuery is unused but had its address taken
  6234     0000                     _EUSART_AutoBaudQuery equ	0
  6235                           
  6236 ;; Function _EUSART_IsTxDone is unused but had its address taken
  6237     0000                     _EUSART_IsTxDone equ	0
  6238                           
  6239 ;; Function _EUSART_ErrorGet is unused but had its address taken
  6240     0000                     _EUSART_ErrorGet equ	0
  6241                           
  6242 ;; Function _EUSART_RxCompleteCallbackRegister is unused but had its address taken
  6243     0000                     _EUSART_RxCompleteCallbackRegister equ	0
  6244                           
  6245 ;; Function _EUSART_TxCompleteCallbackRegister is unused but had its address taken
  6246     0000                     _EUSART_TxCompleteCallbackRegister equ	0
  6247                           
  6248                           	psect	idataBANK0
  6249     0002                     __pidataBANK0:
  6250                           
  6251                           ;initializer for _mustPrintLogs
  6252     0002  3401               	retlw	1
  6253                           
  6254                           ;initializer for adcConversionDoneHandler@new_channel
  6255     0003  3410               	retlw	16
  6256                           
  6257                           	psect	idataBANK2
  6258     1AF8                     __pidataBANK2:
  6259                           
  6260                           ;initializer for _ki
  6261     1AF8  3400               	retlw	0
  6262     1AF9  3400               	retlw	0
  6263     1AFA  3480               	retlw	128
  6264     1AFB  343F               	retlw	63
  6265                           
  6266                           ;initializer for _kp
  6267     1AFC  3400               	retlw	0
  6268     1AFD  3400               	retlw	0
  6269     1AFE  3480               	retlw	128
  6270     1AFF  343F               	retlw	63
  6271                           
  6272                           ;initializer for _setpoint
  6273     1B00  3432               	retlw	50
  6274     1B01  3400               	retlw	0
  6275                           
  6276                           	psect	stringtext1
  6277     1800                     __pstringtext1:
  6278     1800                     _UART1:
  6279     1800  3495               	retlw	low _EUSART_Initialize
  6280     1801  341E               	retlw	high _EUSART_Initialize
  6281     1802  3400               	retlw	0
  6282     1803  3400               	retlw	0
  6283     1804  343C               	retlw	low _EUSART_Read
  6284     1805  341D               	retlw	high _EUSART_Read
  6285     1806  340F               	retlw	low _EUSART_Write
  6286     1807  341E               	retlw	high _EUSART_Write
  6287     1808  34D1               	retlw	low _EUSART_IsRxReady
  6288     1809  341A               	retlw	high _EUSART_IsRxReady
  6289     180A  34BF               	retlw	low _EUSART_IsTxReady
  6290     180B  341A               	retlw	high _EUSART_IsTxReady
  6291     180C  3400               	retlw	0
  6292     180D  3400               	retlw	0
  6293     180E  3400               	retlw	0
  6294     180F  3400               	retlw	0
  6295     1810  3400               	retlw	0
  6296     1811  3400               	retlw	0
  6297     1812  3400               	retlw	0
  6298     1813  3400               	retlw	0
  6299     1814  3400               	retlw	0
  6300     1815  3400               	retlw	0
  6301     1816  3400               	retlw	0
  6302     1817  3400               	retlw	0
  6303     1818  3400               	retlw	0
  6304     1819  3400               	retlw	0
  6305     181A  3400               	retlw	0
  6306     181B  3400               	retlw	0
  6307     181C  3400               	retlw	0
  6308     181D  3400               	retlw	0
  6309     181E  3400               	retlw	0
  6310     181F  3400               	retlw	0
  6311     1820  3400               	retlw	0
  6312     1821  3400               	retlw	0
  6313     1822  3400               	retlw	0
  6314     1823  3400               	retlw	0
  6315     1824  3400               	retlw	0
  6316     1825  3400               	retlw	0
  6317     1826  3400               	retlw	0
  6318     1827  3400               	retlw	0
  6319     1828  3493               	retlw	low _EUSART_FramingErrorCallbackRegister
  6320     1829  341B               	retlw	high _EUSART_FramingErrorCallbackRegister
  6321     182A  34A2               	retlw	low _EUSART_OverrunErrorCallbackRegister
  6322     182B  341B               	retlw	high _EUSART_OverrunErrorCallbackRegister
  6323     182C  3400               	retlw	0
  6324     182D  3400               	retlw	0
  6325     182E  3400               	retlw	0
  6326     182F  3400               	retlw	0
  6327     1830                     __end_of_UART1:
  6328                           
  6329                           	psect	stringtext2
  6330     1830                     __pstringtext2:
  6331     1830                     _ledstrip:
  6332     1830  34DA               	retlw	low _SPI1_Initialize
  6333     1831  341A               	retlw	high _SPI1_Initialize
  6334     1832  3400               	retlw	0
  6335     1833  3400               	retlw	0
  6336     1834  34F8               	retlw	low _SPI1_Open
  6337     1835  3412               	retlw	high _SPI1_Open
  6338     1836  3400               	retlw	0
  6339     1837  3400               	retlw	0
  6340     1838  3400               	retlw	0
  6341     1839  3400               	retlw	0
  6342     183A  3400               	retlw	0
  6343     183B  3400               	retlw	0
  6344     183C  3400               	retlw	0
  6345     183D  3400               	retlw	0
  6346     183E  343E               	retlw	low _SPI1_ByteExchange
  6347     183F  341B               	retlw	high _SPI1_ByteExchange
  6348     1840  3400               	retlw	0
  6349     1841  3400               	retlw	0
  6350     1842  3400               	retlw	0
  6351     1843  3400               	retlw	0
  6352     1844  3400               	retlw	0
  6353     1845  3400               	retlw	0
  6354     1846  3400               	retlw	0
  6355     1847  3400               	retlw	0
  6356     1848  3400               	retlw	0
  6357     1849  3400               	retlw	0
  6358     184A  3400               	retlw	0
  6359     184B  3400               	retlw	0
  6360     184C                     __end_of_ledstrip:
  6361                           
  6362                           	psect	stringtext3
  6363     18FB                     __pstringtext3:
  6364     18FB                     _spi1_configuration:
  6365     18FB  3440               	retlw	64
  6366     18FC  340A               	retlw	10
  6367     18FD  3410               	retlw	16
  6368     18FE  3407               	retlw	7
  6369     18FF  3400               	retlw	0
  6370     1900  3464               	retlw	100
  6371     1901  3400               	retlw	0
  6372     1902  3410               	retlw	16
  6373     1903  3401               	retlw	1
  6374     1904  3400               	retlw	0
  6375     1905                     __end_of_spi1_configuration:
  6376                           
  6377                           	psect	nvBANK2
  6378     0167                     __pnvBANK2:
  6379     0167                     _TMR6_PeriodMatchCallback:
  6380     0167                     	ds	2
  6381     0169                     _TMR4_PeriodMatchCallback:
  6382     0169                     	ds	2
  6383     016B                     _TMR2_PeriodMatchCallback:
  6384     016B                     	ds	2
  6385     016D                     _ADC_InterruptHandler:
  6386     016D                     	ds	2
  6387                           
  6388                           	psect	nvBANK3
  6389     01EC                     __pnvBANK3:
  6390     01EC                     _EUSART_RxInterruptHandler:
  6391     01EC                     	ds	2
  6392     01EE                     _EUSART_TxInterruptHandler:
  6393     01EE                     	ds	2
  6394     001F                     _T2CONbits      set	31
  6395     001F                     _T2CON          set	31
  6396     001D                     _TMR2           set	29
  6397     001E                     _PR2            set	30
  6398     0012                     _PIR2bits       set	18
  6399     000B                     _INTCONbits     set	11
  6400     0010                     _PIR0bits       set	16
  6401     0011                     _PIR1bits       set	17
  6402     008E                     _TRISC          set	142
  6403     008D                     _TRISB          set	141
  6404     008C                     _TRISA          set	140
  6405     0092                     _PIE2bits       set	146
  6406     009D                     _ADCON0bits     set	157
  6407     0091                     _PIE1bits       set	145
  6408     009D                     _ADCON0         set	157
  6409     009F                     _ADACT          set	159
  6410     009C                     _ADRESH         set	156
  6411     009B                     _ADRESL         set	155
  6412     009E                     _ADCON1         set	158
  6413     010E                     _LATC           set	270
  6414     010D                     _LATB           set	269
  6415     010C                     _LATA           set	268
  6416     019A                     _TX1REG         set	410
  6417     0199                     _RC1REG         set	409
  6418     019F                     _BAUD1CONbits   set	415
  6419     019E                     _TX1STAbits     set	414
  6420     019D                     _RC1STAbits     set	413
  6421     019C                     _SP1BRGH        set	412
  6422     019B                     _SP1BRGL        set	411
  6423     019E                     _TX1STA         set	414
  6424     019D                     _RC1STA         set	413
  6425     019F                     _BAUD1CON       set	415
  6426     018E                     _ANSELC         set	398
  6427     018D                     _ANSELB         set	397
  6428     018C                     _ANSELA         set	396
  6429     020E                     _WPUC           set	526
  6430     020D                     _WPUB           set	525
  6431     020C                     _WPUA           set	524
  6432     0211                     _SSP1BUF        set	529
  6433     0215                     _SSP1CON1bits   set	533
  6434     0212                     _SSP1ADD        set	530
  6435     0217                     _SSP1CON3       set	535
  6436     0215                     _SSP1CON1       set	533
  6437     0214                     _SSP1STAT       set	532
  6438     028E                     _ODCONC         set	654
  6439     028D                     _ODCONB         set	653
  6440     028C                     _ODCONA         set	652
  6441     030E                     _SLRCONC        set	782
  6442     030D                     _SLRCONB        set	781
  6443     030C                     _SLRCONA        set	780
  6444     0399                     _IOCCF          set	921
  6445     0398                     _IOCCN          set	920
  6446     0397                     _IOCCP          set	919
  6447     0396                     _IOCBF          set	918
  6448     0395                     _IOCBN          set	917
  6449     0394                     _IOCBP          set	916
  6450     0393                     _IOCAF          set	915
  6451     0392                     _IOCAN          set	914
  6452     0391                     _IOCAP          set	913
  6453     038E                     _INLVLC         set	910
  6454     038D                     _INLVLB         set	909
  6455     038C                     _INLVLA         set	908
  6456     041E                     _T6CONbits      set	1054
  6457     041E                     _T6CON          set	1054
  6458     041C                     _TMR6           set	1052
  6459     041D                     _PR6            set	1053
  6460     0417                     _T4CONbits      set	1047
  6461     0417                     _T4CON          set	1047
  6462     0415                     _TMR4           set	1045
  6463     0416                     _PR4            set	1046
  6464     061A                     _PWM6DCL        set	1562
  6465     061B                     _PWM6DCH        set	1563
  6466     061C                     _PWM6CON        set	1564
  6467     061F                     _PWMTMRSbits    set	1567
  6468     0617                     _PWM5DCL        set	1559
  6469     0618                     _PWM5DCH        set	1560
  6470     0619                     _PWM5CON        set	1561
  6471     091E                     _OSCTUNE        set	2334
  6472     091C                     _OSCSTAT1       set	2332
  6473     091F                     _OSCFRQ         set	2335
  6474     091D                     _OSCEN          set	2333
  6475     091B                     _OSCCON3        set	2331
  6476     0919                     _OSCCON1        set	2329
  6477     0E20                     _SSP1CLKPPS     set	3616
  6478     0E24                     _RXPPS          set	3620
  6479     0E21                     _SSP1DATPPS     set	3617
  6480     0E9E                     _RB6PPS         set	3742
  6481     0E9F                     _RB7PPS         set	3743
  6482     0EA7                     _RC7PPS         set	3751
  6483     0EA5                     _RC5PPS         set	3749
  6484     0E9C                     _RB4PPS         set	3740
  6485                           
  6486                           	psect	stringtext4
  6487     184C                     __pstringtext4:
  6488     184C                     STR_11:
  6489     184C  3463               	retlw	99	;'c'
  6490     184D  3468               	retlw	104	;'h'
  6491     184E  3461               	retlw	97	;'a'
  6492     184F  346E               	retlw	110	;'n'
  6493     1850  3467               	retlw	103	;'g'
  6494     1851  3465               	retlw	101	;'e'
  6495     1852  3464               	retlw	100	;'d'
  6496     1853  3420               	retlw	32	;' '
  6497     1854  3473               	retlw	115	;'s'
  6498     1855  3465               	retlw	101	;'e'
  6499     1856  3474               	retlw	116	;'t'
  6500     1857  3470               	retlw	112	;'p'
  6501     1858  346F               	retlw	111	;'o'
  6502     1859  3469               	retlw	105	;'i'
  6503     185A  346E               	retlw	110	;'n'
  6504     185B  3474               	retlw	116	;'t'
  6505     185C  3420               	retlw	32	;' '
  6506     185D  3474               	retlw	116	;'t'
  6507     185E  346F               	retlw	111	;'o'
  6508     185F  3420               	retlw	32	;' '
  6509     1860  3425               	retlw	37	;'%'
  6510     1861  3475               	retlw	117	;'u'
  6511     1862  340D               	retlw	13
  6512     1863  340A               	retlw	10
  6513     1864  3400               	retlw	0
  6514                           
  6515                           	psect	stringtext5
  6516     1865                     __pstringtext5:
  6517     1865                     STR_3:
  6518     1865  3469               	retlw	105	;'i'
  6519     1866  346E               	retlw	110	;'n'
  6520     1867  3470               	retlw	112	;'p'
  6521     1868  3475               	retlw	117	;'u'
  6522     1869  3474               	retlw	116	;'t'
  6523     186A  3420               	retlw	32	;' '
  6524     186B  3462               	retlw	98	;'b'
  6525     186C  3475               	retlw	117	;'u'
  6526     186D  3466               	retlw	102	;'f'
  6527     186E  3466               	retlw	102	;'f'
  6528     186F  3465               	retlw	101	;'e'
  6529     1870  3472               	retlw	114	;'r'
  6530     1871  3420               	retlw	32	;' '
  6531     1872  346F               	retlw	111	;'o'
  6532     1873  3476               	retlw	118	;'v'
  6533     1874  3465               	retlw	101	;'e'
  6534     1875  3472               	retlw	114	;'r'
  6535     1876  3466               	retlw	102	;'f'
  6536     1877  346C               	retlw	108	;'l'
  6537     1878  346F               	retlw	111	;'o'
  6538     1879  3477               	retlw	119	;'w'
  6539     187A  340D               	retlw	13
  6540     187B  340A               	retlw	10
  6541     187C  3400               	retlw	0
  6542                           
  6543                           	psect	stringtext6
  6544     187D                     __pstringtext6:
  6545     187D                     STR_15:
  6546     187D  3455               	retlw	85	;'U'
  6547     187E  346E               	retlw	110	;'n'
  6548     187F  346B               	retlw	107	;'k'
  6549     1880  346F               	retlw	111	;'o'
  6550     1881  3477               	retlw	119	;'w'
  6551     1882  346E               	retlw	110	;'n'
  6552     1883  3420               	retlw	32	;' '
  6553     1884  3463               	retlw	99	;'c'
  6554     1885  346F               	retlw	111	;'o'
  6555     1886  346D               	retlw	109	;'m'
  6556     1887  346D               	retlw	109	;'m'
  6557     1888  3461               	retlw	97	;'a'
  6558     1889  346E               	retlw	110	;'n'
  6559     188A  3464               	retlw	100	;'d'
  6560     188B  340D               	retlw	13
  6561     188C  340A               	retlw	10
  6562     188D  3400               	retlw	0
  6563                           
  6564                           	psect	stringtext7
  6565     188E                     __pstringtext7:
  6566     188E                     STR_6:
  6567     188E  342C               	retlw	44	;','
  6568     188F  3420               	retlw	32	;' '
  6569     1890  3464               	retlw	100	;'d'
  6570     1891  3475               	retlw	117	;'u'
  6571     1892  3474               	retlw	116	;'t'
  6572     1893  3479               	retlw	121	;'y'
  6573     1894  3420               	retlw	32	;' '
  6574     1895  3463               	retlw	99	;'c'
  6575     1896  3479               	retlw	121	;'y'
  6576     1897  3463               	retlw	99	;'c'
  6577     1898  346C               	retlw	108	;'l'
  6578     1899  3465               	retlw	101	;'e'
  6579     189A  343A               	retlw	58	;':'
  6580     189B  3420               	retlw	32	;' '
  6581     189C  3425               	retlw	37	;'%'
  6582     189D  3475               	retlw	117	;'u'
  6583     189E  3400               	retlw	0
  6584                           
  6585                           	psect	stringtext8
  6586     189F                     __pstringtext8:
  6587     189F                     STR_14:
  6588     189F  346C               	retlw	108	;'l'
  6589     18A0  346F               	retlw	111	;'o'
  6590     18A1  3467               	retlw	103	;'g'
  6591     18A2  3473               	retlw	115	;'s'
  6592     18A3  3420               	retlw	32	;' '
  6593     18A4  3474               	retlw	116	;'t'
  6594     18A5  346F               	retlw	111	;'o'
  6595     18A6  3467               	retlw	103	;'g'
  6596     18A7  3467               	retlw	103	;'g'
  6597     18A8  346C               	retlw	108	;'l'
  6598     18A9  3465               	retlw	101	;'e'
  6599     18AA  3464               	retlw	100	;'d'
  6600     18AB  340D               	retlw	13
  6601     18AC  340A               	retlw	10
  6602     18AD  3400               	retlw	0
  6603                           
  6604                           	psect	stringtext9
  6605     18AE                     __pstringtext9:
  6606     18AE                     STR_5:
  6607     18AE  342C               	retlw	44	;','
  6608     18AF  3420               	retlw	32	;' '
  6609     18B0  3473               	retlw	115	;'s'
  6610     18B1  3465               	retlw	101	;'e'
  6611     18B2  3474               	retlw	116	;'t'
  6612     18B3  3470               	retlw	112	;'p'
  6613     18B4  346F               	retlw	111	;'o'
  6614     18B5  3469               	retlw	105	;'i'
  6615     18B6  346E               	retlw	110	;'n'
  6616     18B7  3474               	retlw	116	;'t'
  6617     18B8  343A               	retlw	58	;':'
  6618     18B9  3420               	retlw	32	;' '
  6619     18BA  3425               	retlw	37	;'%'
  6620     18BB  3475               	retlw	117	;'u'
  6621     18BC  3400               	retlw	0
  6622                           
  6623                           	psect	stringtext10
  6624     18BD                     __pstringtext10:
  6625     18BD                     STR_1:
  6626     18BD  3463               	retlw	99	;'c'
  6627     18BE  346F               	retlw	111	;'o'
  6628     18BF  3475               	retlw	117	;'u'
  6629     18C0  346E               	retlw	110	;'n'
  6630     18C1  3474               	retlw	116	;'t'
  6631     18C2  3465               	retlw	101	;'e'
  6632     18C3  3472               	retlw	114	;'r'
  6633     18C4  343A               	retlw	58	;':'
  6634     18C5  3420               	retlw	32	;' '
  6635     18C6  3425               	retlw	37	;'%'
  6636     18C7  3475               	retlw	117	;'u'
  6637     18C8  340A               	retlw	10
  6638     18C9  340D               	retlw	13
  6639     18CA  3400               	retlw	0
  6640                           
  6641                           	psect	stringtext11
  6642     18CB                     __pstringtext11:
  6643     18CB                     STR_13:
  6644     18CB  3463               	retlw	99	;'c'
  6645     18CC  3468               	retlw	104	;'h'
  6646     18CD  3461               	retlw	97	;'a'
  6647     18CE  346E               	retlw	110	;'n'
  6648     18CF  3467               	retlw	103	;'g'
  6649     18D0  3465               	retlw	101	;'e'
  6650     18D1  3464               	retlw	100	;'d'
  6651     18D2  3420               	retlw	32	;' '
  6652     18D3  346B               	retlw	107	;'k'
  6653     18D4  3469               	retlw	105	;'i'
  6654     18D5  340D               	retlw	13
  6655     18D6  340A               	retlw	10
  6656     18D7  3400               	retlw	0
  6657                           
  6658                           	psect	stringtext12
  6659     18D8                     __pstringtext12:
  6660     18D8                     STR_12:
  6661     18D8  3463               	retlw	99	;'c'
  6662     18D9  3468               	retlw	104	;'h'
  6663     18DA  3461               	retlw	97	;'a'
  6664     18DB  346E               	retlw	110	;'n'
  6665     18DC  3467               	retlw	103	;'g'
  6666     18DD  3465               	retlw	101	;'e'
  6667     18DE  3464               	retlw	100	;'d'
  6668     18DF  3420               	retlw	32	;' '
  6669     18E0  346B               	retlw	107	;'k'
  6670     18E1  3470               	retlw	112	;'p'
  6671     18E2  340D               	retlw	13
  6672     18E3  340A               	retlw	10
  6673     18E4  3400               	retlw	0
  6674                           
  6675                           	psect	stringtext13
  6676     18E5                     __pstringtext13:
  6677     18E5                     STR_4:
  6678     18E5  3468               	retlw	104	;'h'
  6679     18E6  346F               	retlw	111	;'o'
  6680     18E7  346F               	retlw	111	;'o'
  6681     18E8  3467               	retlw	103	;'g'
  6682     18E9  3474               	retlw	116	;'t'
  6683     18EA  3465               	retlw	101	;'e'
  6684     18EB  343A               	retlw	58	;':'
  6685     18EC  3420               	retlw	32	;' '
  6686     18ED  3425               	retlw	37	;'%'
  6687     18EE  3475               	retlw	117	;'u'
  6688     18EF  3400               	retlw	0
  6689                           
  6690                           	psect	stringtext14
  6691     18F0                     __pstringtext14:
  6692     18F0                     STR_9:
  6693     18F0  342C               	retlw	44	;','
  6694     18F1  3420               	retlw	32	;' '
  6695     18F2  3470               	retlw	112	;'p'
  6696     18F3  346F               	retlw	111	;'o'
  6697     18F4  346D               	retlw	109	;'m'
  6698     18F5  3470               	retlw	112	;'p'
  6699     18F6  343A               	retlw	58	;':'
  6700     18F7  3420               	retlw	32	;' '
  6701     18F8  3425               	retlw	37	;'%'
  6702     18F9  3475               	retlw	117	;'u'
  6703     18FA  3400               	retlw	0
  6704                           
  6705                           	psect	stringtext15
  6706     1905                     __pstringtext15:
  6707     1905                     STR_2:
  6708     1905  3425               	retlw	37	;'%'
  6709     1906  3469               	retlw	105	;'i'
  6710     1907  342E               	retlw	46	;'.'
  6711     1908  3425               	retlw	37	;'%'
  6712     1909  3430               	retlw	48	;'0'
  6713     190A  3433               	retlw	51	;'3'
  6714     190B  3475               	retlw	117	;'u'
  6715     190C  3400               	retlw	0
  6716                           
  6717                           	psect	stringtext16
  6718     190D                     __pstringtext16:
  6719     190D                     STR_8:
  6720     190D  342C               	retlw	44	;','
  6721     190E  3420               	retlw	32	;' '
  6722     190F  346B               	retlw	107	;'k'
  6723     1910  3469               	retlw	105	;'i'
  6724     1911  343A               	retlw	58	;':'
  6725     1912  3420               	retlw	32	;' '
  6726     1913  3400               	retlw	0
  6727                           
  6728                           	psect	stringtext17
  6729     1914                     __pstringtext17:
  6730     1914                     STR_7:
  6731     1914  342C               	retlw	44	;','
  6732     1915  3420               	retlw	32	;' '
  6733     1916  346B               	retlw	107	;'k'
  6734     1917  3470               	retlw	112	;'p'
  6735     1918  343A               	retlw	58	;':'
  6736     1919  3420               	retlw	32	;' '
  6737     191A  3400               	retlw	0
  6738                           
  6739                           	psect	stringtext18
  6740     0000                     __pstringtext18:
  6741     18AB                     STR_10          equ	STR_14+12
  6742                           
  6743                           	psect	cinit
  6744     005A                     start_initialization:	
  6745                           ; #config settings
  6746                           
  6747     005A                     __initialization:
  6748                           
  6749                           ; Initialize objects allocated to BANK0
  6750     005A  3180  2002  3180   	fcall	__pidataBANK0	;fetch initializer
  6751     005D  00ED               	movwf	__pdataBANK0& (0+127)
  6752     005E  3180  2003  3180   	fcall	__pidataBANK0+1	;fetch initializer
  6753     0061  00EE               	movwf	(__pdataBANK0+1)& (0+127)
  6754                           
  6755                           ; Initialize objects allocated to BANK2
  6756     0062  30F8               	movlw	low __pidataBANK2
  6757     0063  0084               	movwf	4
  6758     0064  309A               	movlw	(high __pidataBANK2)| (0+128)
  6759     0065  0085               	movwf	5
  6760     0066  305D               	movlw	low __pdataBANK2
  6761     0067  0086               	movwf	6
  6762     0068  3001               	movlw	high __pdataBANK2
  6763     0069  0087               	movwf	7
  6764     006A  300A               	movlw	10
  6765     006B  319A  2268  3180   	fcall	init_ram
  6766                           
  6767                           ; Clear objects allocated to BANK0
  6768     006E  3055               	movlw	low __pbssBANK0
  6769     006F  0084               	movwf	4
  6770     0070  3000               	movlw	high __pbssBANK0
  6771     0071  0085               	movwf	5
  6772     0072  3018               	movlw	24
  6773     0073  319A  2262  3180   	fcall	clear_ram0
  6774                           
  6775                           ; Clear objects allocated to BANK2
  6776     0076  3043               	movlw	low __pbssBANK2
  6777     0077  0084               	movwf	4
  6778     0078  3001               	movlw	high __pbssBANK2
  6779     0079  0085               	movwf	5
  6780     007A  301A               	movlw	26
  6781     007B  319A  2262  3180   	fcall	clear_ram0
  6782                           
  6783                           ; Clear objects allocated to BANK3
  6784     007E  30A0               	movlw	low __pbssBANK3
  6785     007F  0084               	movwf	4
  6786     0080  3001               	movlw	high __pbssBANK3
  6787     0081  0085               	movwf	5
  6788     0082  304C               	movlw	76
  6789     0083  319A  2262  3180   	fcall	clear_ram0
  6790     0086                     end_of_initialization:	
  6791                           ;End of C runtime variable initialization code
  6792                           
  6793     0086                     __end_of__initialization:
  6794     0086  107E               	bcf	int$flags,0	;clear compiler interrupt flag (level 1)
  6795     0087  0020               	movlb	0
  6796     0088  3195  2D6B         	ljmp	_main	;jump to C main() function
  6797                           
  6798                           	psect	bssBANK0
  6799     0055                     __pbssBANK0:
  6800     0055                     _width:
  6801     0055                     	ds	2
  6802     0057                     _dutycycle:
  6803     0057                     	ds	2
  6804     0059                     _ADC_pomphoogte:
  6805     0059                     	ds	2
  6806     005B                     _ADC_hoogtesensor:
  6807     005B                     	ds	2
  6808     005D                     _EUSART_OverrunErrorHandler:
  6809     005D                     	ds	2
  6810     005F                     _EUSART_FramingErrorHandler:
  6811     005F                     	ds	2
  6812     0061                     _INT_InterruptHandler:
  6813     0061                     	ds	2
  6814     0063                     _flags:
  6815     0063                     	ds	1
  6816     0064                     _is_on_target:
  6817     0064                     	ds	1
  6818     0065                     readLine@index:
  6819     0065                     	ds	1
  6820     0066                     _buzzing:
  6821     0066                     	ds	1
  6822     0067                     _eusartRxCount:
  6823     0067                     	ds	1
  6824     0068                     _eusartRxTail:
  6825     0068                     	ds	1
  6826     0069                     _eusartRxHead:
  6827     0069                     	ds	1
  6828     006A                     _eusartTxBufferRemaining:
  6829     006A                     	ds	1
  6830     006B                     _eusartTxTail:
  6831     006B                     	ds	1
  6832     006C                     _eusartTxHead:
  6833     006C                     	ds	1
  6834                           
  6835                           	psect	dataBANK0
  6836     006D                     __pdataBANK0:
  6837     006D                     _mustPrintLogs:
  6838     006D                     	ds	1
  6839     006E                     adcConversionDoneHandler@new_channel:
  6840     006E                     	ds	1
  6841                           
  6842                           	psect	bssBANK2
  6843     0143                     __pbssBANK2:
  6844     0143                     _eusartTxBuffer:
  6845     0143                     	ds	8
  6846     014B                     _integraal:
  6847     014B                     	ds	4
  6848     014F                     _nout:
  6849     014F                     	ds	2
  6850     0151                     _prec:
  6851     0151                     	ds	2
  6852     0153                     _hoogte_bal:
  6853     0153                     	ds	2
  6854     0155                     _ADC_potentiometer:
  6855     0155                     	ds	2
  6856     0157                     _EUSART_RxCompleteInterruptHandler:
  6857     0157                     	ds	2
  6858     0159                     _EUSART_TxCompleteInterruptHandler:
  6859     0159                     	ds	2
  6860     015B                     _eusartRxLastError:
  6861     015B                     	ds	2
  6862                           
  6863                           	psect	dataBANK2
  6864     015D                     __pdataBANK2:
  6865     015D                     _ki:
  6866     015D                     	ds	4
  6867     0161                     _kp:
  6868     0161                     	ds	4
  6869     0165                     _setpoint:
  6870     0165                     	ds	2
  6871                           
  6872                           	psect	bssBANK3
  6873     01A0                     __pbssBANK3:
  6874     01A0                     _eusartRxStatusBuffer:
  6875     01A0                     	ds	16
  6876     01B0                     _eusartRxBuffer:
  6877     01B0                     	ds	8
  6878     01B8                     _dbuf:
  6879     01B8                     	ds	32
  6880     01D8                     _line:
  6881     01D8                     	ds	20
  6882                           
  6883                           	psect	inittext
  6884     1A68                     init_ram:
  6885     1A68  00FE               	movwf	btemp
  6886     1A69                     initloop:
  6887     1A69  0012               	moviw fsr0++
  6888     1A6A  001E               	movwi fsr1++
  6889     1A6B  0BFE               	decfsz	btemp,f
  6890     1A6C  2A69               	goto	initloop
  6891     1A6D  3400               	retlw	0
  6892                           
  6893                           	psect	clrtext
  6894     1A62                     clear_ram0:	
  6895                           ;	Called with FSR0 containing the base address, and
  6896                           ;	WREG with the size to clear
  6897                           
  6898     1A62  0064               	clrwdt	;clear the watchdog before getting into this loop
  6899     1A63                     clrloop0:
  6900     1A63  0180               	clrf	0	;clear RAM location pointed to by FSR
  6901     1A64  3101               	addfsr 0,1
  6902     1A65  0B89               	decfsz	9,f	;Have we reached the end of clearing yet?
  6903     1A66  2A63               	goto	clrloop0	;have we reached the end yet?
  6904     1A67  3400               	retlw	0	;all done for this memory range, return
  6905                           
  6906                           	psect	cstackBANK2
  6907     0120                     __pcstackBANK2:
  6908     0120                     ?_setKp:
  6909     0120                     ?_setKi:	
  6910                           ; 1 bytes @ 0x0
  6911                           
  6912     0120                     ?_printFloat:	
  6913                           ; 1 bytes @ 0x0
  6914                           
  6915     0120                     sprintf@ap:	
  6916                           ; 1 bytes @ 0x0
  6917                           
  6918     0120                     printFloat@number:	
  6919                           ; 1 bytes @ 0x0
  6920                           
  6921     0120                     setKp@new_kp:	
  6922                           ; 4 bytes @ 0x0
  6923                           
  6924     0120                     setKi@new_ki:	
  6925                           ; 4 bytes @ 0x0
  6926                           
  6927     0120                     getLedNumber@result:	
  6928                           ; 4 bytes @ 0x0
  6929                           
  6930                           
  6931                           ; 4 bytes @ 0x0
  6932     0120                     	ds	1
  6933     0121                     sprintf@f:
  6934                           
  6935                           ; 11 bytes @ 0x1
  6936     0121                     	ds	3
  6937     0124                     uartHandler@str:
  6938     0124                     printFloat@fractional_part:	
  6939                           ; 1 bytes @ 0x4
  6940                           
  6941     0124                     ??_position_led_strip:	
  6942                           ; 2 bytes @ 0x4
  6943                           
  6944                           
  6945                           ; 1 bytes @ 0x4
  6946     0124                     	ds	2
  6947     0126                     printFloat@integer_part:
  6948                           
  6949                           ; 1 bytes @ 0x6
  6950     0126                     	ds	1
  6951     0127                     position_led_strip@target:
  6952                           
  6953                           ; 2 bytes @ 0x7
  6954     0127                     	ds	2
  6955     0129                     position_led_strip@led:
  6956                           
  6957                           ; 1 bytes @ 0x9
  6958     0129                     	ds	1
  6959     012A                     position_led_strip@led_on:
  6960                           
  6961                           ; 2 bytes @ 0xA
  6962     012A                     	ds	2
  6963     012C                     ??_main:
  6964                           
  6965                           ; 1 bytes @ 0xC
  6966     012C                     	ds	2
  6967     012E                     main@str:
  6968                           
  6969                           ; 20 bytes @ 0xE
  6970     012E                     	ds	20
  6971     0142                     main@counter:
  6972                           
  6973                           ; 1 bytes @ 0x22
  6974     0142                     	ds	1
  6975                           
  6976                           	psect	cstackBANK1
  6977     00A0                     __pcstackBANK1:
  6978     00A0                     ?_ADC_SetInterruptHandler:
  6979     00A0                     ?_SPI1_ByteExchange:	
  6980                           ; 1 bytes @ 0x0
  6981                           
  6982     00A0                     ?_INT_SetInterruptHandler:	
  6983                           ; 1 bytes @ 0x0
  6984                           
  6985     00A0                     ?_EUSART_Write:	
  6986                           ; 1 bytes @ 0x0
  6987                           
  6988     00A0                     ?_EUSART_FramingErrorCallbackRegister:	
  6989                           ; 1 bytes @ 0x0
  6990                           
  6991     00A0                     ?_EUSART_OverrunErrorCallbackRegister:	
  6992                           ; 1 bytes @ 0x0
  6993                           
  6994     00A0                     ?_PWM_buzzer_LoadDutyValue:	
  6995                           ; 1 bytes @ 0x0
  6996                           
  6997     00A0                     ?_TMR4_PeriodMatchCallbackRegister:	
  6998                           ; 1 bytes @ 0x0
  6999                           
  7000     00A0                     ?_TMR6_PeriodMatchCallbackRegister:	
  7001                           ; 1 bytes @ 0x0
  7002                           
  7003     00A0                     ?_getPomphoogte:	
  7004                           ; 1 bytes @ 0x0
  7005                           
  7006     00A0                     ?_getSetpoint:	
  7007                           ; 2 bytes @ 0x0
  7008                           
  7009     00A0                     ?_getDutycycle:	
  7010                           ; 2 bytes @ 0x0
  7011                           
  7012     00A0                     ?__Umul8_16:	
  7013                           ; 2 bytes @ 0x0
  7014                           
  7015     00A0                     ?_strlen:	
  7016                           ; 2 bytes @ 0x0
  7017                           
  7018     00A0                     ?_getHoogtesensor:	
  7019                           ; 2 bytes @ 0x0
  7020                           
  7021     00A0                     ?___wmul:	
  7022                           ; 2 bytes @ 0x0
  7023                           
  7024     00A0                     ?___awdiv:	
  7025                           ; 2 bytes @ 0x0
  7026                           
  7027     00A0                     ?___awmod:	
  7028                           ; 2 bytes @ 0x0
  7029                           
  7030     00A0                     ?___lwdiv:	
  7031                           ; 2 bytes @ 0x0
  7032                           
  7033     00A0                     ?___lwmod:	
  7034                           ; 2 bytes @ 0x0
  7035                           
  7036     00A0                     ?_getKp:	
  7037                           ; 2 bytes @ 0x0
  7038                           
  7039     00A0                     ?_getKi:	
  7040                           ; 4 bytes @ 0x0
  7041                           
  7042     00A0                     ?___fldiv:	
  7043                           ; 4 bytes @ 0x0
  7044                           
  7045     00A0                     ?___xxtofl:	
  7046                           ; 4 bytes @ 0x0
  7047                           
  7048     00A0                     SPI1_ByteExchange@byteData:	
  7049                           ; 4 bytes @ 0x0
  7050                           
  7051     00A0                     EUSART_Read@tempRxTail:	
  7052                           ; 1 bytes @ 0x0
  7053                           
  7054     00A0                     EUSART_Write@txData:	
  7055                           ; 1 bytes @ 0x0
  7056                           
  7057     00A0                     __Umul8_16@multiplicand:	
  7058                           ; 1 bytes @ 0x0
  7059                           
  7060     00A0                     strlen@s:	
  7061                           ; 1 bytes @ 0x0
  7062                           
  7063     00A0                     ADC_SetInterruptHandler@InterruptHandler:	
  7064                           ; 1 bytes @ 0x0
  7065                           
  7066     00A0                     PWM_buzzer_LoadDutyValue@dutyValue:	
  7067                           ; 2 bytes @ 0x0
  7068                           
  7069     00A0                     INT_SetInterruptHandler@InterruptHandler:	
  7070                           ; 2 bytes @ 0x0
  7071                           
  7072     00A0                     TMR4_PeriodMatchCallbackRegister@CallbackHandler:	
  7073                           ; 2 bytes @ 0x0
  7074                           
  7075     00A0                     TMR6_PeriodMatchCallbackRegister@CallbackHandler:	
  7076                           ; 2 bytes @ 0x0
  7077                           
  7078     00A0                     EUSART_FramingErrorCallbackRegister@callbackHandler:	
  7079                           ; 2 bytes @ 0x0
  7080                           
  7081     00A0                     EUSART_OverrunErrorCallbackRegister@callbackHandler:	
  7082                           ; 2 bytes @ 0x0
  7083                           
  7084     00A0                     ___wmul@multiplier:	
  7085                           ; 2 bytes @ 0x0
  7086                           
  7087     00A0                     ___awdiv@divisor:	
  7088                           ; 2 bytes @ 0x0
  7089                           
  7090     00A0                     ___awmod@divisor:	
  7091                           ; 2 bytes @ 0x0
  7092                           
  7093     00A0                     ___lwdiv@divisor:	
  7094                           ; 2 bytes @ 0x0
  7095                           
  7096     00A0                     ___lwmod@divisor:	
  7097                           ; 2 bytes @ 0x0
  7098                           
  7099     00A0                     ___fldiv@a:	
  7100                           ; 2 bytes @ 0x0
  7101                           
  7102     00A0                     ___xxtofl@val:	
  7103                           ; 4 bytes @ 0x0
  7104                           
  7105     00A0                     ??_SPI1_Initialize:	
  7106                           ; 4 bytes @ 0x0
  7107                           
  7108     00A0                     ??_TMR2_Initialize:	
  7109                           ; 1 bytes @ 0x0
  7110                           
  7111     00A0                     ??_TMR4_Initialize:	
  7112                           ; 1 bytes @ 0x0
  7113                           
  7114     00A0                     ??_TMR6_Initialize:	
  7115                           ; 1 bytes @ 0x0
  7116                           
  7117     00A0                     ??_TMR6_DefaultPeriodMatchCallback:	
  7118                           ; 1 bytes @ 0x0
  7119                           
  7120     00A0                     ??_EUSART_Read:	
  7121                           ; 1 bytes @ 0x0
  7122                           
  7123     00A0                     ??_EUSART_IsRxReady:	
  7124                           ; 1 bytes @ 0x0
  7125                           
  7126     00A0                     ??_EUSART_IsTxReady:	
  7127                           ; 1 bytes @ 0x0
  7128                           
  7129     00A0                     ??_ADC_SelectChannel:	
  7130                           ; 1 bytes @ 0x0
  7131                           
  7132     00A0                     ??_pwm_fan_Initialize:	
  7133                           ; 1 bytes @ 0x0
  7134                           
  7135     00A0                     ??_PWM_buzzer_Initialize:	
  7136                           ; 1 bytes @ 0x0
  7137                           
  7138     00A0                     ??_CLOCK_Initialize:	
  7139                           ; 1 bytes @ 0x0
  7140                           
  7141     00A0                     ??_PIN_MANAGER_Initialize:	
  7142                           ; 1 bytes @ 0x0
  7143                           
  7144                           
  7145                           ; 1 bytes @ 0x0
  7146     00A0                     	ds	1
  7147     00A1                     ?_sendLedstripFrame:
  7148     00A1                     ADC_SelectChannel@channel:	
  7149                           ; 1 bytes @ 0x1
  7150                           
  7151     00A1                     EUSART_Read@readValue:	
  7152                           ; 1 bytes @ 0x1
  7153                           
  7154     00A1                     EUSART_Write@tempTxHead:	
  7155                           ; 1 bytes @ 0x1
  7156                           
  7157     00A1                     sendLedstripFrame@green:	
  7158                           ; 1 bytes @ 0x1
  7159                           
  7160     00A1                     ??_SPI1_ByteExchange:	
  7161                           ; 1 bytes @ 0x1
  7162                           
  7163     00A1                     ??_EUSART_Write:	
  7164                           ; 1 bytes @ 0x1
  7165                           
  7166     00A1                     ??_sendLedstripStartFrame:	
  7167                           ; 1 bytes @ 0x1
  7168                           
  7169     00A1                     ??_sendLedstripEndFrame:	
  7170                           ; 1 bytes @ 0x1
  7171                           
  7172                           
  7173                           ; 1 bytes @ 0x1
  7174     00A1                     	ds	1
  7175     00A2                     putch@txData:
  7176     00A2                     sendLedstripFrame@blue:	
  7177                           ; 1 bytes @ 0x2
  7178                           
  7179     00A2                     strlen@a:	
  7180                           ; 1 bytes @ 0x2
  7181                           
  7182     00A2                     ___wmul@multiplicand:	
  7183                           ; 1 bytes @ 0x2
  7184                           
  7185     00A2                     ___awdiv@dividend:	
  7186                           ; 2 bytes @ 0x2
  7187                           
  7188     00A2                     ___awmod@dividend:	
  7189                           ; 2 bytes @ 0x2
  7190                           
  7191     00A2                     ___lwdiv@dividend:	
  7192                           ; 2 bytes @ 0x2
  7193                           
  7194     00A2                     ___lwmod@dividend:	
  7195                           ; 2 bytes @ 0x2
  7196                           
  7197     00A2                     ??_ADC_SetInterruptHandler:	
  7198                           ; 2 bytes @ 0x2
  7199                           
  7200     00A2                     ??_INT_SetInterruptHandler:	
  7201                           ; 1 bytes @ 0x2
  7202                           
  7203     00A2                     ??_EUSART_Initialize:	
  7204                           ; 1 bytes @ 0x2
  7205                           
  7206     00A2                     ??_EUSART_FramingErrorCallbackRegister:	
  7207                           ; 1 bytes @ 0x2
  7208                           
  7209     00A2                     ??_EUSART_OverrunErrorCallbackRegister:	
  7210                           ; 1 bytes @ 0x2
  7211                           
  7212     00A2                     ??_initAdcMultiplexer:	
  7213                           ; 1 bytes @ 0x2
  7214                           
  7215     00A2                     ??_getPomphoogte:	
  7216                           ; 1 bytes @ 0x2
  7217                           
  7218     00A2                     ??_getSetpoint:	
  7219                           ; 1 bytes @ 0x2
  7220                           
  7221     00A2                     ??_getDutycycle:	
  7222                           ; 1 bytes @ 0x2
  7223                           
  7224     00A2                     ??__Umul8_16:	
  7225                           ; 1 bytes @ 0x2
  7226                           
  7227     00A2                     ??_strlen:	
  7228                           ; 1 bytes @ 0x2
  7229                           
  7230     00A2                     ??_ADC_Initialize:	
  7231                           ; 1 bytes @ 0x2
  7232                           
  7233     00A2                     ??_PWM_buzzer_LoadDutyValue:	
  7234                           ; 1 bytes @ 0x2
  7235                           
  7236     00A2                     ??_INTERRUPT_Initialize:	
  7237                           ; 1 bytes @ 0x2
  7238                           
  7239     00A2                     ??_SYSTEM_Initialize:	
  7240                           ; 1 bytes @ 0x2
  7241                           
  7242     00A2                     ??_TMR4_PeriodMatchCallbackRegister:	
  7243                           ; 1 bytes @ 0x2
  7244                           
  7245     00A2                     ??_TMR6_PeriodMatchCallbackRegister:	
  7246                           ; 1 bytes @ 0x2
  7247                           
  7248     00A2                     ??_putch:	
  7249                           ; 1 bytes @ 0x2
  7250                           
  7251     00A2                     ??_getHoogtesensor:	
  7252                           ; 1 bytes @ 0x2
  7253                           
  7254                           
  7255                           ; 1 bytes @ 0x2
  7256     00A2                     	ds	1
  7257     00A3                     ?_fputc:
  7258     00A3                     sendLedstripFrame@intensity:	
  7259                           ; 2 bytes @ 0x3
  7260                           
  7261     00A3                     fputc@c:	
  7262                           ; 1 bytes @ 0x3
  7263                           
  7264                           
  7265                           ; 2 bytes @ 0x3
  7266     00A3                     	ds	1
  7267     00A4                     sendLedstripFrame@red:
  7268     00A4                     ___awdiv@counter:	
  7269                           ; 1 bytes @ 0x4
  7270                           
  7271     00A4                     ___awmod@counter:	
  7272                           ; 1 bytes @ 0x4
  7273                           
  7274     00A4                     ___lwmod@counter:	
  7275                           ; 1 bytes @ 0x4
  7276                           
  7277     00A4                     ___wmul@product:	
  7278                           ; 1 bytes @ 0x4
  7279                           
  7280     00A4                     ___lwdiv@quotient:	
  7281                           ; 2 bytes @ 0x4
  7282                           
  7283     00A4                     __Umul8_16@product:	
  7284                           ; 2 bytes @ 0x4
  7285                           
  7286     00A4                     ___fldiv@b:	
  7287                           ; 2 bytes @ 0x4
  7288                           
  7289     00A4                     ??_getKp:	
  7290                           ; 4 bytes @ 0x4
  7291                           
  7292     00A4                     ??_getKi:	
  7293                           ; 1 bytes @ 0x4
  7294                           
  7295     00A4                     ??_sendLedstripFrame:	
  7296                           ; 1 bytes @ 0x4
  7297                           
  7298     00A4                     ??___wmul:	
  7299                           ; 1 bytes @ 0x4
  7300                           
  7301     00A4                     ??___awdiv:	
  7302                           ; 1 bytes @ 0x4
  7303                           
  7304     00A4                     ??___awmod:	
  7305                           ; 1 bytes @ 0x4
  7306                           
  7307     00A4                     ??___lwdiv:	
  7308                           ; 1 bytes @ 0x4
  7309                           
  7310     00A4                     ??___lwmod:	
  7311                           ; 1 bytes @ 0x4
  7312                           
  7313     00A4                     ??___xxtofl:	
  7314                           ; 1 bytes @ 0x4
  7315                           
  7316                           
  7317                           ; 1 bytes @ 0x4
  7318     00A4                     	ds	1
  7319     00A5                     ___awdiv@sign:
  7320     00A5                     ___awmod@sign:	
  7321                           ; 1 bytes @ 0x5
  7322                           
  7323     00A5                     fputc@fp:	
  7324                           ; 1 bytes @ 0x5
  7325                           
  7326                           
  7327                           ; 2 bytes @ 0x5
  7328     00A5                     	ds	1
  7329     00A6                     ?_SPI1_Open:
  7330     00A6                     ?_atoi:	
  7331                           ; 1 bytes @ 0x6
  7332                           
  7333     00A6                     ?_abs:	
  7334                           ; 2 bytes @ 0x6
  7335                           
  7336     00A6                     ?_read_prec_or_width:	
  7337                           ; 2 bytes @ 0x6
  7338                           
  7339     00A6                     SPI1_Open@spiConfigIndex:	
  7340                           ; 2 bytes @ 0x6
  7341                           
  7342     00A6                     ___lwdiv@counter:	
  7343                           ; 1 bytes @ 0x6
  7344                           
  7345     00A6                     atoi@s:	
  7346                           ; 1 bytes @ 0x6
  7347                           
  7348     00A6                     read_prec_or_width@fmt:	
  7349                           ; 1 bytes @ 0x6
  7350                           
  7351     00A6                     ___awdiv@quotient:	
  7352                           ; 1 bytes @ 0x6
  7353                           
  7354     00A6                     __Umul8_16@word_mpld:	
  7355                           ; 2 bytes @ 0x6
  7356                           
  7357     00A6                     abs@a:	
  7358                           ; 2 bytes @ 0x6
  7359                           
  7360                           
  7361                           ; 2 bytes @ 0x6
  7362     00A6                     	ds	1
  7363     00A7                     read_prec_or_width@ap:
  7364     00A7                     ??_SPI1_Open:	
  7365                           ; 2 bytes @ 0x7
  7366                           
  7367     00A7                     ??_fputc:	
  7368                           ; 1 bytes @ 0x7
  7369                           
  7370                           
  7371                           ; 1 bytes @ 0x7
  7372     00A7                     	ds	1
  7373     00A8                     __Umul8_16@multiplier:
  7374     00A8                     ___xxtofl@sign:	
  7375                           ; 1 bytes @ 0x8
  7376                           
  7377     00A8                     ??_atoi:	
  7378                           ; 1 bytes @ 0x8
  7379                           
  7380     00A8                     ??_abs:	
  7381                           ; 1 bytes @ 0x8
  7382                           
  7383     00A8                     ??___fldiv:	
  7384                           ; 1 bytes @ 0x8
  7385                           
  7386                           
  7387                           ; 1 bytes @ 0x8
  7388     00A8                     	ds	1
  7389     00A9                     ___xxtofl@exp:
  7390     00A9                     ??_initLedstrip:	
  7391                           ; 1 bytes @ 0x9
  7392                           
  7393     00A9                     ??_read_prec_or_width:	
  7394                           ; 1 bytes @ 0x9
  7395                           
  7396                           
  7397                           ; 1 bytes @ 0x9
  7398     00A9                     	ds	1
  7399     00AA                     atoi@neg:
  7400     00AA                     ___xxtofl@arg:	
  7401                           ; 1 bytes @ 0xA
  7402                           
  7403                           
  7404                           ; 4 bytes @ 0xA
  7405     00AA                     	ds	1
  7406     00AB                     atoi@n:
  7407                           
  7408                           ; 2 bytes @ 0xB
  7409     00AB                     	ds	1
  7410     00AC                     ?_fputs:
  7411     00AC                     read_prec_or_width@c:	
  7412                           ; 2 bytes @ 0xC
  7413                           
  7414     00AC                     fputs@s:	
  7415                           ; 1 bytes @ 0xC
  7416                           
  7417                           
  7418                           ; 1 bytes @ 0xC
  7419     00AC                     	ds	1
  7420     00AD                     ?_setSetpoint:
  7421     00AD                     setSetpoint@new_setpoint:	
  7422                           ; 1 bytes @ 0xD
  7423                           
  7424     00AD                     read_prec_or_width@n:	
  7425                           ; 2 bytes @ 0xD
  7426                           
  7427     00AD                     fputs@fp:	
  7428                           ; 2 bytes @ 0xD
  7429                           
  7430     00AD                     ___fldiv@rem:	
  7431                           ; 2 bytes @ 0xD
  7432                           
  7433                           
  7434                           ; 4 bytes @ 0xD
  7435     00AD                     	ds	1
  7436     00AE                     ?___fladd:
  7437     00AE                     ___fladd@b:	
  7438                           ; 4 bytes @ 0xE
  7439                           
  7440                           
  7441                           ; 4 bytes @ 0xE
  7442     00AE                     	ds	1
  7443     00AF                     ??_setSetpoint:
  7444     00AF                     ??_fputs:	
  7445                           ; 1 bytes @ 0xF
  7446                           
  7447                           
  7448                           ; 1 bytes @ 0xF
  7449     00AF                     	ds	2
  7450     00B1                     ___fldiv@sign:
  7451     00B1                     fputs@c:	
  7452                           ; 1 bytes @ 0x11
  7453                           
  7454                           
  7455                           ; 1 bytes @ 0x11
  7456     00B1                     	ds	1
  7457     00B2                     ___fldiv@new_exp:
  7458     00B2                     fputs@i:	
  7459                           ; 2 bytes @ 0x12
  7460                           
  7461     00B2                     ___fladd@a:	
  7462                           ; 2 bytes @ 0x12
  7463                           
  7464                           
  7465                           ; 4 bytes @ 0x12
  7466     00B2                     	ds	2
  7467     00B4                     ?_pad:
  7468     00B4                     pad@fp:	
  7469                           ; 2 bytes @ 0x14
  7470                           
  7471     00B4                     ___fldiv@grs:	
  7472                           ; 2 bytes @ 0x14
  7473                           
  7474                           
  7475                           ; 4 bytes @ 0x14
  7476     00B4                     	ds	2
  7477     00B6                     pad@buf:
  7478     00B6                     ??___fladd:	
  7479                           ; 1 bytes @ 0x16
  7480                           
  7481                           
  7482                           ; 1 bytes @ 0x16
  7483     00B6                     	ds	1
  7484     00B7                     pad@p:
  7485                           
  7486                           ; 2 bytes @ 0x17
  7487     00B7                     	ds	1
  7488     00B8                     ___fldiv@bexp:
  7489                           
  7490                           ; 1 bytes @ 0x18
  7491     00B8                     	ds	1
  7492     00B9                     ___fldiv@aexp:
  7493     00B9                     ??_pad:	
  7494                           ; 1 bytes @ 0x19
  7495                           
  7496                           
  7497                           ; 1 bytes @ 0x19
  7498     00B9                     	ds	1
  7499     00BA                     pad@i:
  7500                           
  7501                           ; 2 bytes @ 0x1A
  7502     00BA                     	ds	2
  7503     00BC                     ?_dtoa:
  7504     00BC                     ?_utoa:	
  7505                           ; 2 bytes @ 0x1C
  7506                           
  7507     00BC                     dtoa@fp:	
  7508                           ; 2 bytes @ 0x1C
  7509                           
  7510     00BC                     utoa@fp:	
  7511                           ; 2 bytes @ 0x1C
  7512                           
  7513                           
  7514                           ; 2 bytes @ 0x1C
  7515     00BC                     	ds	2
  7516     00BE                     ___fladd@signs:
  7517     00BE                     dtoa@d:	
  7518                           ; 1 bytes @ 0x1E
  7519                           
  7520     00BE                     utoa@d:	
  7521                           ; 2 bytes @ 0x1E
  7522                           
  7523                           
  7524                           ; 2 bytes @ 0x1E
  7525     00BE                     	ds	1
  7526     00BF                     ___fladd@aexp:
  7527                           
  7528                           ; 1 bytes @ 0x1F
  7529     00BF                     	ds	1
  7530     00C0                     ___fladd@bexp:
  7531     00C0                     ??_dtoa:	
  7532                           ; 1 bytes @ 0x20
  7533                           
  7534     00C0                     ??_utoa:	
  7535                           ; 1 bytes @ 0x20
  7536                           
  7537                           
  7538                           ; 1 bytes @ 0x20
  7539     00C0                     	ds	1
  7540     00C1                     ___fladd@grs:
  7541     00C1                     utoa@p:	
  7542                           ; 1 bytes @ 0x21
  7543                           
  7544     00C1                     _dtoa$2167:	
  7545                           ; 1 bytes @ 0x21
  7546                           
  7547                           
  7548                           ; 2 bytes @ 0x21
  7549     00C1                     	ds	1
  7550     00C2                     ?___flsub:
  7551     00C2                     utoa@w:	
  7552                           ; 4 bytes @ 0x22
  7553                           
  7554     00C2                     ___flsub@a:	
  7555                           ; 2 bytes @ 0x22
  7556                           
  7557                           
  7558                           ; 4 bytes @ 0x22
  7559     00C2                     	ds	1
  7560     00C3                     dtoa@p:
  7561                           
  7562                           ; 1 bytes @ 0x23
  7563     00C3                     	ds	1
  7564     00C4                     dtoa@w:
  7565     00C4                     utoa@i:	
  7566                           ; 2 bytes @ 0x24
  7567                           
  7568                           
  7569                           ; 2 bytes @ 0x24
  7570     00C4                     	ds	2
  7571     00C6                     dtoa@s:
  7572     00C6                     ___flsub@b:	
  7573                           ; 1 bytes @ 0x26
  7574                           
  7575                           
  7576                           ; 4 bytes @ 0x26
  7577     00C6                     	ds	1
  7578     00C7                     dtoa@i:
  7579                           
  7580                           ; 2 bytes @ 0x27
  7581     00C7                     	ds	2
  7582     00C9                     ?_vfpfcnvrt:
  7583     00C9                     vfpfcnvrt@fp:	
  7584                           ; 2 bytes @ 0x29
  7585                           
  7586                           
  7587                           ; 2 bytes @ 0x29
  7588     00C9                     	ds	1
  7589     00CA                     ?___flmul:
  7590     00CA                     ___flmul@b:	
  7591                           ; 4 bytes @ 0x2A
  7592                           
  7593     00CA                     ??___flsub:	
  7594                           ; 4 bytes @ 0x2A
  7595                           
  7596                           
  7597                           ; 1 bytes @ 0x2A
  7598     00CA                     	ds	1
  7599     00CB                     vfpfcnvrt@fmt:
  7600                           
  7601                           ; 1 bytes @ 0x2B
  7602     00CB                     	ds	1
  7603     00CC                     vfpfcnvrt@ap:
  7604                           
  7605                           ; 2 bytes @ 0x2C
  7606     00CC                     	ds	2
  7607     00CE                     ___flmul@a:
  7608     00CE                     ??_vfpfcnvrt:	
  7609                           ; 4 bytes @ 0x2E
  7610                           
  7611                           
  7612                           ; 1 bytes @ 0x2E
  7613     00CE                     	ds	4
  7614     00D2                     vfpfcnvrt@done:
  7615     00D2                     ??___flmul:	
  7616                           ; 1 bytes @ 0x32
  7617                           
  7618                           
  7619                           ; 1 bytes @ 0x32
  7620     00D2                     	ds	1
  7621     00D3                     vfpfcnvrt@convarg:
  7622                           
  7623                           ; 4 bytes @ 0x33
  7624     00D3                     	ds	4
  7625     00D7                     ___flmul@sign:
  7626     00D7                     vfpfcnvrt@cp:	
  7627                           ; 1 bytes @ 0x37
  7628                           
  7629                           
  7630                           ; 2 bytes @ 0x37
  7631     00D7                     	ds	1
  7632     00D8                     ___flmul@grs:
  7633                           
  7634                           ; 4 bytes @ 0x38
  7635     00D8                     	ds	1
  7636     00D9                     ?_vfprintf:
  7637     00D9                     vfprintf@fp:	
  7638                           ; 2 bytes @ 0x39
  7639                           
  7640                           
  7641                           ; 2 bytes @ 0x39
  7642     00D9                     	ds	2
  7643     00DB                     vfprintf@fmt:
  7644                           
  7645                           ; 2 bytes @ 0x3B
  7646     00DB                     	ds	1
  7647     00DC                     ___flmul@aexp:
  7648                           
  7649                           ; 1 bytes @ 0x3C
  7650     00DC                     	ds	1
  7651     00DD                     ___flmul@bexp:
  7652     00DD                     vfprintf@ap:	
  7653                           ; 1 bytes @ 0x3D
  7654                           
  7655                           
  7656                           ; 2 bytes @ 0x3D
  7657     00DD                     	ds	1
  7658     00DE                     ___flmul@prod:
  7659                           
  7660                           ; 4 bytes @ 0x3E
  7661     00DE                     	ds	1
  7662     00DF                     ??_vfprintf:
  7663                           
  7664                           ; 1 bytes @ 0x3F
  7665     00DF                     	ds	1
  7666     00E0                     vfprintf@cfmt:
  7667                           
  7668                           ; 2 bytes @ 0x40
  7669     00E0                     	ds	2
  7670     00E2                     ?_sprintf:
  7671     00E2                     ?_printf:	
  7672                           ; 2 bytes @ 0x42
  7673                           
  7674     00E2                     sprintf@s:	
  7675                           ; 2 bytes @ 0x42
  7676                           
  7677     00E2                     ___flmul@temp:	
  7678                           ; 1 bytes @ 0x42
  7679                           
  7680     00E2                     printf@fmt:	
  7681                           ; 2 bytes @ 0x42
  7682                           
  7683                           
  7684                           ; 2 bytes @ 0x42
  7685     00E2                     	ds	1
  7686     00E3                     sprintf@fmt:
  7687                           
  7688                           ; 2 bytes @ 0x43
  7689     00E3                     	ds	1
  7690     00E4                     ?_str2float:
  7691     00E4                     ?___fltol:	
  7692                           ; 4 bytes @ 0x44
  7693                           
  7694     00E4                     str2float@str:	
  7695                           ; 4 bytes @ 0x44
  7696                           
  7697     00E4                     ___fltol@f1:	
  7698                           ; 1 bytes @ 0x44
  7699                           
  7700                           
  7701                           ; 4 bytes @ 0x44
  7702     00E4                     	ds	3
  7703     00E7                     ??_sprintf:
  7704                           
  7705                           ; 1 bytes @ 0x47
  7706     00E7                     	ds	1
  7707     00E8                     str2float@decimal_separator:
  7708     00E8                     printf@ap:	
  7709                           ; 1 bytes @ 0x48
  7710                           
  7711     00E8                     ??_printf:	
  7712                           ; 1 bytes @ 0x48
  7713                           
  7714     00E8                     ??_str2float:	
  7715                           ; 1 bytes @ 0x48
  7716                           
  7717     00E8                     ??___fltol:	
  7718                           ; 1 bytes @ 0x48
  7719                           
  7720                           
  7721                           ; 1 bytes @ 0x48
  7722     00E8                     	ds	1
  7723     00E9                     ?_printOut:
  7724     00E9                     ?_readLine:	
  7725                           ; 1 bytes @ 0x49
  7726                           
  7727     00E9                     str2float@multiplier:	
  7728                           ; 1 bytes @ 0x49
  7729                           
  7730     00E9                     printOut@str:	
  7731                           ; 1 bytes @ 0x49
  7732                           
  7733                           
  7734                           ; 1 bytes @ 0x49
  7735     00E9                     	ds	1
  7736     00EA                     str2float@i:
  7737     00EA                     ??_printOut:	
  7738                           ; 1 bytes @ 0x4A
  7739                           
  7740                           
  7741                           ; 1 bytes @ 0x4A
  7742     00EA                     	ds	1
  7743     00EB                     str2float@number:
  7744     00EB                     ??_readLine:	
  7745                           ; 4 bytes @ 0x4B
  7746                           
  7747                           
  7748                           ; 1 bytes @ 0x4B
  7749     00EB                     	ds	1
  7750     00EC                     ___fltol@sign1:
  7751                           
  7752                           ; 1 bytes @ 0x4C
  7753     00EC                     	ds	1
  7754     00ED                     ___fltol@exp1:
  7755                           
  7756                           ; 1 bytes @ 0x4D
  7757     00ED                     	ds	1
  7758     00EE                     ?_getLedNumber:
  7759     00EE                     getLedNumber@height:	
  7760                           ; 2 bytes @ 0x4E
  7761                           
  7762     00EE                     ??_printFloat:	
  7763                           ; 2 bytes @ 0x4E
  7764                           
  7765                           
  7766                           ; 1 bytes @ 0x4E
  7767     00EE                     	ds	1
  7768     00EF                     str2float@digit:
  7769                           
  7770                           ; 1 bytes @ 0x4F
  7771     00EF                     	ds	1
  7772     00F0                     ??_uartHandler:
  7773     00F0                     ??_printLogs:	
  7774                           ; 1 bytes @ 0x50
  7775                           
  7776     00F0                     ??_setKp:	
  7777                           ; 1 bytes @ 0x50
  7778                           
  7779     00F0                     ??_setKi:	
  7780                           ; 1 bytes @ 0x50
  7781                           
  7782     00F0                     ??_TMR6_Tasks:	
  7783                           ; 1 bytes @ 0x50
  7784                           
  7785     00F0                     ??_getLedNumber:	
  7786                           ; 1 bytes @ 0x50
  7787                           
  7788     00F0                     ??_updateLedstripAnimation:	
  7789                           ; 1 bytes @ 0x50
  7790                           
  7791                           
  7792                           	psect	cstackCOMMON
  7793     0070                     __pcstackCOMMON:	
  7794                           ; 1 bytes @ 0x50
  7795                           
  7796     0070                     ?_ADC_DefaultInterruptHandler:
  7797     0070                     ?_SPI1_Initialize:	
  7798                           ; 1 bytes @ 0x0
  7799                           
  7800     0070                     ?_TMR4_ISR:	
  7801                           ; 1 bytes @ 0x0
  7802                           
  7803     0070                     ?_TMR2_ISR:	
  7804                           ; 1 bytes @ 0x0
  7805                           
  7806     0070                     ?_TMR2_Initialize:	
  7807                           ; 1 bytes @ 0x0
  7808                           
  7809     0070                     ?_TMR4_Initialize:	
  7810                           ; 1 bytes @ 0x0
  7811                           
  7812     0070                     ?_TMR6_Initialize:	
  7813                           ; 1 bytes @ 0x0
  7814                           
  7815     0070                     ?_EUSART_Initialize:	
  7816                           ; 1 bytes @ 0x0
  7817                           
  7818     0070                     ?_TMR2_DefaultPeriodMatchCallback:	
  7819                           ; 1 bytes @ 0x0
  7820                           
  7821     0070                     ?_TMR4_DefaultPeriodMatchCallback:	
  7822                           ; 1 bytes @ 0x0
  7823                           
  7824     0070                     ?_TMR6_DefaultPeriodMatchCallback:	
  7825                           ; 1 bytes @ 0x0
  7826                           
  7827     0070                     ?_EUSART_Read:	
  7828                           ; 1 bytes @ 0x0
  7829                           
  7830     0070                     ?_EUSART_IsRxReady:	
  7831                           ; 1 bytes @ 0x0
  7832                           
  7833     0070                     ?_EUSART_IsTxReady:	
  7834                           ; 1 bytes @ 0x0
  7835                           
  7836     0070                     ?_EUSART_ReceiveISR:	
  7837                           ; 1 bytes @ 0x0
  7838                           
  7839     0070                     ?_EUSART_TransmitISR:	
  7840                           ; 1 bytes @ 0x0
  7841                           
  7842     0070                     ?_EUSART_DefaultFramingErrorCallback:	
  7843                           ; 1 bytes @ 0x0
  7844                           
  7845     0070                     ?_EUSART_DefaultOverrunErrorCallback:	
  7846                           ; 1 bytes @ 0x0
  7847                           
  7848     0070                     ?_initAdcMultiplexer:	
  7849                           ; 1 bytes @ 0x0
  7850                           
  7851     0070                     ?_controller:	
  7852                           ; 1 bytes @ 0x0
  7853                           
  7854     0070                     ?_initLedstrip:	
  7855                           ; 1 bytes @ 0x0
  7856                           
  7857     0070                     ?_uartHandler:	
  7858                           ; 1 bytes @ 0x0
  7859                           
  7860     0070                     ?_printLogs:	
  7861                           ; 1 bytes @ 0x0
  7862                           
  7863     0070                     ?_ADC_Initialize:	
  7864                           ; 1 bytes @ 0x0
  7865                           
  7866     0070                     ?_ADC_SelectChannel:	
  7867                           ; 1 bytes @ 0x0
  7868                           
  7869     0070                     ?_ADC_ISR:	
  7870                           ; 1 bytes @ 0x0
  7871                           
  7872     0070                     ?_pwm_fan_Initialize:	
  7873                           ; 1 bytes @ 0x0
  7874                           
  7875     0070                     ?_pwm_fan_LoadDutyValue:	
  7876                           ; 1 bytes @ 0x0
  7877                           
  7878     0070                     ?_PWM_buzzer_Initialize:	
  7879                           ; 1 bytes @ 0x0
  7880                           
  7881     0070                     ?_INTERRUPT_Initialize:	
  7882                           ; 1 bytes @ 0x0
  7883                           
  7884     0070                     ?_INTERRUPT_InterruptManager:	
  7885                           ; 1 bytes @ 0x0
  7886                           
  7887     0070                     ?_CLOCK_Initialize:	
  7888                           ; 1 bytes @ 0x0
  7889                           
  7890     0070                     ?_PIN_MANAGER_Initialize:	
  7891                           ; 1 bytes @ 0x0
  7892                           
  7893     0070                     ?_SYSTEM_Initialize:	
  7894                           ; 1 bytes @ 0x0
  7895                           
  7896     0070                     ?_TMR6_Tasks:	
  7897                           ; 1 bytes @ 0x0
  7898                           
  7899     0070                     ?_putch:	
  7900                           ; 1 bytes @ 0x0
  7901                           
  7902     0070                     ?_adcConversionDoneHandler:	
  7903                           ; 1 bytes @ 0x0
  7904                           
  7905     0070                     ?_sendLedstripStartFrame:	
  7906                           ; 1 bytes @ 0x0
  7907                           
  7908     0070                     ?_sendLedstripEndFrame:	
  7909                           ; 1 bytes @ 0x0
  7910                           
  7911     0070                     ?_position_led_strip:	
  7912                           ; 1 bytes @ 0x0
  7913                           
  7914     0070                     ?_updateLedstripAnimation:	
  7915                           ; 1 bytes @ 0x0
  7916                           
  7917     0070                     ?i1_ADC_SelectChannel:	
  7918                           ; 1 bytes @ 0x0
  7919                           
  7920     0070                     ?_ADC_GetConversionResult:	
  7921                           ; 1 bytes @ 0x0
  7922                           
  7923     0070                     ?_main:	
  7924                           ; 2 bytes @ 0x0
  7925                           
  7926     0070                     ?i1_getHoogtesensor:	
  7927                           ; 2 bytes @ 0x0
  7928                           
  7929     0070                     ?i1__Umul8_16:	
  7930                           ; 2 bytes @ 0x0
  7931                           
  7932     0070                     ?i1___xxtofl:	
  7933                           ; 2 bytes @ 0x0
  7934                           
  7935     0070                     EUSART_ReceiveISR@regValue:	
  7936                           ; 4 bytes @ 0x0
  7937                           
  7938     0070                     EUSART_TransmitISR@tempTxTail:	
  7939                           ; 1 bytes @ 0x0
  7940                           
  7941     0070                     i1__Umul8_16@multiplicand:	
  7942                           ; 1 bytes @ 0x0
  7943                           
  7944     0070                     pwm_fan_LoadDutyValue@dutyValue:	
  7945                           ; 1 bytes @ 0x0
  7946                           
  7947     0070                     i1___xxtofl@val:	
  7948                           ; 2 bytes @ 0x0
  7949                           
  7950     0070                     ??_ADC_DefaultInterruptHandler:	
  7951                           ; 4 bytes @ 0x0
  7952                           
  7953     0070                     ??_TMR2_ISR:	
  7954                           ; 1 bytes @ 0x0
  7955                           
  7956     0070                     ??_TMR2_DefaultPeriodMatchCallback:	
  7957                           ; 1 bytes @ 0x0
  7958                           
  7959     0070                     ??_TMR4_DefaultPeriodMatchCallback:	
  7960                           ; 1 bytes @ 0x0
  7961                           
  7962     0070                     ??_EUSART_ReceiveISR:	
  7963                           ; 1 bytes @ 0x0
  7964                           
  7965     0070                     ??_EUSART_TransmitISR:	
  7966                           ; 1 bytes @ 0x0
  7967                           
  7968     0070                     ??_EUSART_DefaultFramingErrorCallback:	
  7969                           ; 1 bytes @ 0x0
  7970                           
  7971     0070                     ??_EUSART_DefaultOverrunErrorCallback:	
  7972                           ; 1 bytes @ 0x0
  7973                           
  7974     0070                     ??i1_ADC_SelectChannel:	
  7975                           ; 1 bytes @ 0x0
  7976                           
  7977                           
  7978                           ; 1 bytes @ 0x0
  7979     0070                     	ds	1
  7980     0071                     EUSART_ReceiveISR@tempRxHead:
  7981     0071                     i1ADC_SelectChannel@channel:	
  7982                           ; 1 bytes @ 0x1
  7983                           
  7984                           
  7985                           ; 1 bytes @ 0x1
  7986     0071                     	ds	1
  7987     0072                     ??_ADC_GetConversionResult:
  7988     0072                     ??_pwm_fan_LoadDutyValue:	
  7989                           ; 1 bytes @ 0x2
  7990                           
  7991     0072                     ??_adcConversionDoneHandler:	
  7992                           ; 1 bytes @ 0x2
  7993                           
  7994     0072                     ??i1_getHoogtesensor:	
  7995                           ; 1 bytes @ 0x2
  7996                           
  7997     0072                     ??i1__Umul8_16:	
  7998                           ; 1 bytes @ 0x2
  7999                           
  8000                           
  8001                           ; 1 bytes @ 0x2
  8002     0072                     	ds	2
  8003     0074                     i1__Umul8_16@product:
  8004     0074                     ??_ADC_ISR:	
  8005                           ; 2 bytes @ 0x4
  8006                           
  8007     0074                     ??i1___xxtofl:	
  8008                           ; 1 bytes @ 0x4
  8009                           
  8010                           
  8011                           ; 1 bytes @ 0x4
  8012     0074                     	ds	2
  8013     0076                     i1__Umul8_16@word_mpld:
  8014                           
  8015                           ; 2 bytes @ 0x6
  8016     0076                     	ds	2
  8017     0078                     i1__Umul8_16@multiplier:
  8018     0078                     i1___xxtofl@sign:	
  8019                           ; 1 bytes @ 0x8
  8020                           
  8021                           
  8022                           ; 1 bytes @ 0x8
  8023     0078                     	ds	1
  8024     0079                     i1___xxtofl@exp:
  8025                           
  8026                           ; 1 bytes @ 0x9
  8027     0079                     	ds	1
  8028     007A                     i1___xxtofl@arg:
  8029                           
  8030                           ; 4 bytes @ 0xA
  8031     007A                     	ds	4
  8032     007E                     ??_TMR4_ISR:
  8033     007E                     ??_INTERRUPT_InterruptManager:	
  8034                           ; 1 bytes @ 0xE
  8035                           
  8036                           
  8037                           	psect	cstackBANK0
  8038     0020                     __pcstackBANK0:	
  8039                           ; 1 bytes @ 0xE
  8040                           
  8041     0020                     ?i1___flmul:
  8042     0020                     i1___flmul@b:	
  8043                           ; 4 bytes @ 0x0
  8044                           
  8045                           
  8046                           ; 4 bytes @ 0x0
  8047     0020                     	ds	4
  8048     0024                     i1___flmul@a:
  8049                           
  8050                           ; 4 bytes @ 0x4
  8051     0024                     	ds	4
  8052     0028                     ??i1___flmul:
  8053                           
  8054                           ; 1 bytes @ 0x8
  8055     0028                     	ds	5
  8056     002D                     i1___flmul@sign:
  8057                           
  8058                           ; 1 bytes @ 0xD
  8059     002D                     	ds	1
  8060     002E                     i1___flmul@grs:
  8061                           
  8062                           ; 4 bytes @ 0xE
  8063     002E                     	ds	4
  8064     0032                     i1___flmul@aexp:
  8065                           
  8066                           ; 1 bytes @ 0x12
  8067     0032                     	ds	1
  8068     0033                     i1___flmul@bexp:
  8069                           
  8070                           ; 1 bytes @ 0x13
  8071     0033                     	ds	1
  8072     0034                     i1___flmul@prod:
  8073                           
  8074                           ; 4 bytes @ 0x14
  8075     0034                     	ds	4
  8076     0038                     i1___flmul@temp:
  8077                           
  8078                           ; 2 bytes @ 0x18
  8079     0038                     	ds	2
  8080     003A                     ?i1___fltol:
  8081     003A                     ?i1___fladd:	
  8082                           ; 4 bytes @ 0x1A
  8083                           
  8084     003A                     i1___fltol@f1:	
  8085                           ; 4 bytes @ 0x1A
  8086                           
  8087     003A                     i1___fladd@b:	
  8088                           ; 4 bytes @ 0x1A
  8089                           
  8090                           
  8091                           ; 4 bytes @ 0x1A
  8092     003A                     	ds	4
  8093     003E                     i1___fladd@a:
  8094     003E                     ??i1___fltol:	
  8095                           ; 4 bytes @ 0x1E
  8096                           
  8097                           
  8098                           ; 1 bytes @ 0x1E
  8099     003E                     	ds	4
  8100     0042                     i1___fltol@sign1:
  8101     0042                     ??i1___fladd:	
  8102                           ; 1 bytes @ 0x22
  8103                           
  8104                           
  8105                           ; 1 bytes @ 0x22
  8106     0042                     	ds	1
  8107     0043                     i1___fltol@exp1:
  8108                           
  8109                           ; 1 bytes @ 0x23
  8110     0043                     	ds	7
  8111     004A                     i1___fladd@signs:
  8112                           
  8113                           ; 1 bytes @ 0x2A
  8114     004A                     	ds	1
  8115     004B                     i1___fladd@aexp:
  8116                           
  8117                           ; 1 bytes @ 0x2B
  8118     004B                     	ds	1
  8119     004C                     i1___fladd@bexp:
  8120                           
  8121                           ; 1 bytes @ 0x2C
  8122     004C                     	ds	1
  8123     004D                     i1___fladd@grs:
  8124                           
  8125                           ; 1 bytes @ 0x2D
  8126     004D                     	ds	1
  8127     004E                     ??_controller:
  8128                           
  8129                           ; 1 bytes @ 0x2E
  8130     004E                     	ds	1
  8131     004F                     controller@P:
  8132                           
  8133                           ; 2 bytes @ 0x2F
  8134     004F                     	ds	2
  8135     0051                     controller@I:
  8136                           
  8137                           ; 2 bytes @ 0x31
  8138     0051                     	ds	2
  8139     0053                     controller@error:
  8140                           
  8141                           ; 2 bytes @ 0x33
  8142     0053                     	ds	2
  8143                           
  8144                           	psect	maintext
  8145     156B                     __pmaintext:	
  8146 ;;
  8147 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
  8148 ;;
  8149 ;; *************** function _main *****************
  8150 ;; Defined at:
  8151 ;;		line 52 in file "main.c"
  8152 ;; Parameters:    Size  Location     Type
  8153 ;;		None
  8154 ;; Auto vars:     Size  Location     Type
  8155 ;;  str            20   14[BANK2 ] unsigned char [20]
  8156 ;;  counter         1   34[BANK2 ] unsigned char 
  8157 ;; Return value:  Size  Location     Type
  8158 ;;                  2  818[None  ] int 
  8159 ;; Registers used:
  8160 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  8161 ;; Tracked objects:
  8162 ;;		On entry : B1F/0
  8163 ;;		On exit  : 0/0
  8164 ;;		Unchanged: 0/0
  8165 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8166 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8167 ;;      Locals:         0       0       0      21       0       0       0       0       0       0       0       0       
      +0       0
  8168 ;;      Temps:          0       0       0       2       0       0       0       0       0       0       0       0       
      +0       0
  8169 ;;      Totals:         0       0       0      23       0       0       0       0       0       0       0       0       
      +0       0
  8170 ;;Total ram usage:       23 bytes
  8171 ;; Hardware stack levels required when called: 16
  8172 ;; This function calls:
  8173 ;;		_PWM_buzzer_LoadDutyValue
  8174 ;;		_SYSTEM_Initialize
  8175 ;;		_TMR4_PeriodMatchCallbackRegister
  8176 ;;		_TMR6_Tasks
  8177 ;;		___wmul
  8178 ;;		_getPomphoogte
  8179 ;;		_initAdcMultiplexer
  8180 ;;		_initLedstrip
  8181 ;;		_printLogs
  8182 ;;		_printOut
  8183 ;;		_setSetpoint
  8184 ;;		_sprintf
  8185 ;;		_uartHandler
  8186 ;; This function is called by:
  8187 ;;		Startup code after reset
  8188 ;; This function uses a non-reentrant model
  8189 ;;
  8190                           
  8191     156B                     _main:	
  8192                           ;psect for function _main
  8193                           
  8194     156B                     l6348:	
  8195                           ;incstack = 0
  8196                           ; Regs used in _main: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  8197                           
  8198                           
  8199                           ;main.c: 54:     SYSTEM_Initialize();
  8200     156B  319D  255C  3195   	fcall	_SYSTEM_Initialize
  8201     156E                     l6350:
  8202                           
  8203                           ;main.c: 60:     (INTCONbits.GIE = 1);
  8204     156E  178B               	bsf	11,7	;volatile
  8205     156F                     l6352:
  8206                           
  8207                           ;main.c: 66:     (INTCONbits.PEIE = 1);
  8208     156F  170B               	bsf	11,6	;volatile
  8209                           
  8210                           ;main.c: 71:     initAdcMultiplexer();
  8211     1570  319B  234B  3195   	fcall	_initAdcMultiplexer
  8212                           
  8213                           ;main.c: 72:     TMR4_PeriodMatchCallbackRegister(controller);
  8214     1573  30BD               	movlw	low _controller
  8215     1574  0021               	movlb	1	; select bank1
  8216     1575  00A0               	movwf	TMR4_PeriodMatchCallbackRegister@CallbackHandler^(0+128)
  8217     1576  3008               	movlw	high _controller
  8218     1577  00A1               	movwf	(TMR4_PeriodMatchCallbackRegister@CallbackHandler^(0+128)+1)
  8219     1578  319A  2289  3195   	fcall	_TMR4_PeriodMatchCallbackRegister
  8220     157B                     l6354:
  8221                           
  8222                           ;main.c: 73:     initLedstrip();
  8223     157B  319B  2358  3195   	fcall	_initLedstrip
  8224     157E                     l6356:
  8225                           
  8226                           ;main.c: 75:     uint8_t counter = 0;
  8227     157E  0022               	movlb	2	; select bank2
  8228     157F  01C2               	clrf	main@counter^(0+256)
  8229     1580                     l6358:
  8230                           
  8231                           ;main.c: 78:     {;main.c: 79:         uartHandler();
  8232     1580  3188  200F  3195   	fcall	_uartHandler
  8233     1583                     l6360:
  8234                           
  8235                           ;main.c: 81:         if (buzzing == 0){
  8236     1583  0020               	movlb	0	; select bank0
  8237     1584  0866               	movf	_buzzing,w
  8238     1585  1D03               	btfss	3,2
  8239     1586  2D88               	goto	u7731
  8240     1587  2D89               	goto	u7730
  8241     1588                     u7731:
  8242     1588  2DB4               	goto	l6374
  8243     1589                     u7730:
  8244     1589                     l6362:
  8245                           
  8246                           ;main.c: 83:            if (getPomphoogte() >= 450) {
  8247     1589  319A  22B6  3195   	fcall	_getPomphoogte
  8248     158C  3001               	movlw	1
  8249     158D  0021               	movlb	1	; select bank1
  8250     158E  0221               	subwf	(?_getPomphoogte+1)^(0+128),w
  8251     158F  30C2               	movlw	194
  8252     1590  1903               	skipnz
  8253     1591  0220               	subwf	?_getPomphoogte^(0+128),w
  8254     1592  1C03               	skipc
  8255     1593  2D95               	goto	u7741
  8256     1594  2D96               	goto	u7740
  8257     1595                     u7741:
  8258     1595  2DAC               	goto	l6372
  8259     1596                     u7740:
  8260     1596                     l6364:
  8261                           
  8262                           ;main.c: 84:             PWM_buzzer_LoadDutyValue(50);
  8263     1596  3032               	movlw	50
  8264     1597  00A0               	movwf	PWM_buzzer_LoadDutyValue@dutyValue^(0+128)
  8265     1598  3000               	movlw	0
  8266     1599  00A1               	movwf	(PWM_buzzer_LoadDutyValue@dutyValue^(0+128)+1)
  8267     159A  319C  2494  3195   	fcall	_PWM_buzzer_LoadDutyValue
  8268     159D                     l6366:
  8269                           
  8270                           ;main.c: 85:             buzzing = 1;
  8271     159D  3001               	movlw	1
  8272     159E  0020               	movlb	0	; select bank0
  8273     159F  00E6               	movwf	_buzzing
  8274     15A0                     l6368:
  8275                           
  8276                           ;main.c: 86:             counter += 1;
  8277     15A0  3001               	movlw	1
  8278     15A1  0022               	movlb	2	; select bank2
  8279     15A2  07C2               	addwf	main@counter^(0+256),f
  8280     15A3                     l6370:
  8281                           
  8282                           ;main.c: 87:             _delay((unsigned long)((20)*(32000000U/4000.0)));
  8283     15A3  30D0               	movlw	208
  8284     15A4  0022               	movlb	2	; select bank2
  8285     15A5  00AC               	movwf	??_main^(0+256)
  8286     15A6  30C9               	movlw	201
  8287     15A7                     u7787:
  8288     15A7  0B89               	decfsz	9,f
  8289     15A8  2DA7               	goto	u7787
  8290     15A9  0BAC               	decfsz	??_main^(0+256),f
  8291     15AA  2DA7               	goto	u7787
  8292     15AB  3200               	nop2
  8293     15AC                     l6372:
  8294                           
  8295                           ;main.c: 90:            PWM_buzzer_LoadDutyValue(0);
  8296     15AC  3000               	movlw	0
  8297     15AD  0021               	movlb	1	; select bank1
  8298     15AE  00A0               	movwf	PWM_buzzer_LoadDutyValue@dutyValue^(0+128)
  8299     15AF  00A1               	movwf	(PWM_buzzer_LoadDutyValue@dutyValue+1)^(0+128)
  8300     15B0  319C  2494  3195   	fcall	_PWM_buzzer_LoadDutyValue
  8301                           
  8302                           ;main.c: 91:         } else {
  8303     15B3  2DC3               	goto	l6378
  8304     15B4                     l6374:
  8305                           
  8306                           ;main.c: 92:             if (getPomphoogte() <= 350) {
  8307     15B4  319A  22B6  3195   	fcall	_getPomphoogte
  8308     15B7  3001               	movlw	1
  8309     15B8  0021               	movlb	1	; select bank1
  8310     15B9  0221               	subwf	(?_getPomphoogte+1)^(0+128),w
  8311     15BA  305F               	movlw	95
  8312     15BB  1903               	skipnz
  8313     15BC  0220               	subwf	?_getPomphoogte^(0+128),w
  8314     15BD  1803               	skipnc
  8315     15BE  2DC0               	goto	u7751
  8316     15BF  2DC1               	goto	u7750
  8317     15C0                     u7751:
  8318     15C0  2DC3               	goto	l6378
  8319     15C1                     u7750:
  8320     15C1                     l6376:
  8321                           
  8322                           ;main.c: 93:                 buzzing = 0;
  8323     15C1  0020               	movlb	0	; select bank0
  8324     15C2  01E6               	clrf	_buzzing
  8325     15C3                     l6378:
  8326                           
  8327                           ;main.c: 97:         _delay((unsigned long)((1)*(32000000U/4000.0)));
  8328     15C3  300B               	movlw	11
  8329     15C4  0022               	movlb	2	; select bank2
  8330     15C5  00AC               	movwf	??_main^(0+256)
  8331     15C6  3062               	movlw	98
  8332     15C7                     u7797:
  8333     15C7  0B89               	decfsz	9,f
  8334     15C8  2DC7               	goto	u7797
  8335     15C9  0BAC               	decfsz	??_main^(0+256),f
  8336     15CA  2DC7               	goto	u7797
  8337     15CB  0000               	nop
  8338     15CC                     l6380:
  8339                           
  8340                           ;main.c: 100:         printLogs();
  8341     15CC  3194  24E0  3195   	fcall	_printLogs
  8342     15CF                     l6382:
  8343                           
  8344                           ;main.c: 102:         setSetpoint(45 + counter * 50);
  8345     15CF  0022               	movlb	2	; select bank2
  8346     15D0  0842               	movf	main@counter^(0+256),w
  8347     15D1  00AC               	movwf	??_main^(0+256)
  8348     15D2  01AD               	clrf	(??_main^(0+256)+1)
  8349     15D3  082C               	movf	??_main^(0+256),w
  8350     15D4  0021               	movlb	1	; select bank1
  8351     15D5  00A0               	movwf	___wmul@multiplier^(0+128)
  8352     15D6  0022               	movlb	2	; select bank2
  8353     15D7  082D               	movf	(??_main+1)^(0+256),w
  8354     15D8  0021               	movlb	1	; select bank1
  8355     15D9  00A1               	movwf	(___wmul@multiplier+1)^(0+128)
  8356     15DA  3032               	movlw	50
  8357     15DB  00A2               	movwf	___wmul@multiplicand^(0+128)
  8358     15DC  3000               	movlw	0
  8359     15DD  00A3               	movwf	(___wmul@multiplicand^(0+128)+1)
  8360     15DE  319C  24FC  3195   	fcall	___wmul
  8361     15E1  0021               	movlb	1	; select bank1
  8362     15E2  0820               	movf	?___wmul^(0+128),w
  8363     15E3  3E2D               	addlw	45
  8364     15E4  00AD               	movwf	setSetpoint@new_setpoint^(0+128)
  8365     15E5  3000               	movlw	0
  8366     15E6  3D21               	addwfc	(?___wmul+1)^(0+128),w
  8367     15E7  00AE               	movwf	(setSetpoint@new_setpoint+1)^(0+128)
  8368     15E8  3190  2000  3195   	fcall	_setSetpoint
  8369     15EB                     l6384:
  8370                           
  8371                           ;main.c: 103:         char str[20];;main.c: 104:         sprintf(str, "counter: %u\n\r",
      +                           counter);
  8372     15EB  302E               	movlw	(low (main@str| (0+256)))& (0+255)
  8373     15EC  0021               	movlb	1	; select bank1
  8374     15ED  00E2               	movwf	sprintf@s^(0+128)
  8375     15EE  30BD               	movlw	low (STR_1| (0+32768))
  8376     15EF  00E3               	movwf	sprintf@fmt^(0+128)
  8377     15F0  3098               	movlw	high (STR_1| (0+32768))
  8378     15F1  00E4               	movwf	(sprintf@fmt^(0+128)+1)
  8379     15F2  0022               	movlb	2	; select bank2
  8380     15F3  0842               	movf	main@counter^(0+256),w
  8381     15F4  00AC               	movwf	??_main^(0+256)
  8382     15F5  01AD               	clrf	(??_main^(0+256)+1)
  8383     15F6  082C               	movf	??_main^(0+256),w
  8384     15F7  0021               	movlb	1	; select bank1
  8385     15F8  00E5               	movwf	(?_sprintf^(0+128)+3)
  8386     15F9  0022               	movlb	2	; select bank2
  8387     15FA  082D               	movf	(??_main+1)^(0+256),w
  8388     15FB  0021               	movlb	1	; select bank1
  8389     15FC  00E6               	movwf	((?_sprintf+1)^(0+128)+3)
  8390     15FD  319D  25E9  3195   	fcall	_sprintf
  8391     1600                     l6386:
  8392                           
  8393                           ;main.c: 105:         printOut(str);
  8394     1600  302E               	movlw	(low (main@str| (0+256)))& (0+255)
  8395     1601  0021               	movlb	1	; select bank1
  8396     1602  00E9               	movwf	printOut@str^(0+128)
  8397     1603  319A  22C8  3195   	fcall	_printOut
  8398     1606                     l6388:
  8399                           
  8400                           ;main.c: 107:         TMR6_Tasks();
  8401     1606  319C  242A  3195   	fcall	_TMR6_Tasks
  8402     1609  2D80               	goto	l6358
  8403     160A  3180  2858         	ljmp	start
  8404     160C                     __end_of_main:
  8405                           
  8406                           	psect	text1
  8407     080F                     __ptext1:	
  8408 ;; *************** function _uartHandler *****************
  8409 ;; Defined at:
  8410 ;;		line 95 in file "UART.c"
  8411 ;; Parameters:    Size  Location     Type
  8412 ;;		None
  8413 ;; Auto vars:     Size  Location     Type
  8414 ;;  str             1    4[BANK2 ] PTR unsigned char 
  8415 ;;		 -> line(20), 
  8416 ;; Return value:  Size  Location     Type
  8417 ;;                  1    wreg      void 
  8418 ;; Registers used:
  8419 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  8420 ;; Tracked objects:
  8421 ;;		On entry : 0/0
  8422 ;;		On exit  : 0/0
  8423 ;;		Unchanged: 0/0
  8424 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8425 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8426 ;;      Locals:         0       0       0       1       0       0       0       0       0       0       0       0       
      +0       0
  8427 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8428 ;;      Totals:         0       0       0       1       0       0       0       0       0       0       0       0       
      +0       0
  8429 ;;Total ram usage:        1 bytes
  8430 ;; Hardware stack levels used: 1
  8431 ;; Hardware stack levels required when called: 15
  8432 ;; This function calls:
  8433 ;;		_atoi
  8434 ;;		_printf
  8435 ;;		_readLine
  8436 ;;		_setKi
  8437 ;;		_setKp
  8438 ;;		_setSetpoint
  8439 ;;		_str2float
  8440 ;; This function is called by:
  8441 ;;		_main
  8442 ;; This function uses a non-reentrant model
  8443 ;;
  8444                           
  8445     080F                     _uartHandler:	
  8446                           ;psect for function _uartHandler
  8447                           
  8448     080F                     l6254:	
  8449                           ;incstack = 0
  8450                           ; Regs used in _uartHandler: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  8451                           
  8452                           
  8453                           ;UART.c: 96:     char *str = readLine();
  8454     080F  3190  204F  3188   	fcall	_readLine
  8455     0812  0022               	movlb	2	; select bank2
  8456     0813  00A4               	movwf	uartHandler@str^(0+256)
  8457                           
  8458                           ;UART.c: 97:     switch (*str) {
  8459     0814  289B               	goto	l6274
  8460     0815                     l6256:
  8461                           
  8462                           ;UART.c: 103:             setSetpoint((uint16_t) atoi(str + 1));
  8463     0815  0824               	movf	uartHandler@str^(0+256),w
  8464     0816  3E01               	addlw	1
  8465     0817  0021               	movlb	1	; select bank1
  8466     0818  00A6               	movwf	atoi@s^(0+128)
  8467     0819  3193  23E1  3188   	fcall	_atoi
  8468     081C  0021               	movlb	1	; select bank1
  8469     081D  0827               	movf	(?_atoi+1)^(0+128),w
  8470     081E  00AE               	movwf	(setSetpoint@new_setpoint+1)^(0+128)
  8471     081F  0826               	movf	?_atoi^(0+128),w
  8472     0820  00AD               	movwf	setSetpoint@new_setpoint^(0+128)
  8473     0821  3190  2000  3188   	fcall	_setSetpoint
  8474     0824                     l6258:
  8475                           
  8476                           ;UART.c: 104:             printf("changed setpoint to %u\r\n", (uint16_t) atoi(str + 1))
      +                          ;
  8477     0824  304C               	movlw	low (STR_11| (0+32768))
  8478     0825  0021               	movlb	1	; select bank1
  8479     0826  00E2               	movwf	printf@fmt^(0+128)
  8480     0827  3098               	movlw	high (STR_11| (0+32768))
  8481     0828  00E3               	movwf	(printf@fmt^(0+128)+1)
  8482     0829  0022               	movlb	2	; select bank2
  8483     082A  0824               	movf	uartHandler@str^(0+256),w
  8484     082B  3E01               	addlw	1
  8485     082C  0021               	movlb	1	; select bank1
  8486     082D  00A6               	movwf	atoi@s^(0+128)
  8487     082E  3193  23E1  3188   	fcall	_atoi
  8488     0831  0021               	movlb	1	; select bank1
  8489     0832  0827               	movf	(?_atoi+1)^(0+128),w
  8490     0833  00E5               	movwf	((?_printf+1)^(0+128)+2)
  8491     0834  0826               	movf	?_atoi^(0+128),w
  8492     0835  00E4               	movwf	(?_printf^(0+128)+2)
  8493     0836  319C  2418  3188   	fcall	_printf
  8494                           
  8495                           ;UART.c: 105:             break;
  8496     0839  28BC               	goto	l946
  8497     083A                     l6260:
  8498                           
  8499                           ;UART.c: 109:             setKp(str2float(str + 1));
  8500     083A  0824               	movf	uartHandler@str^(0+256),w
  8501     083B  3E01               	addlw	1
  8502     083C  0021               	movlb	1	; select bank1
  8503     083D  00E4               	movwf	str2float@str^(0+128)
  8504     083E  3197  2755  3188   	fcall	_str2float
  8505     0841  0021               	movlb	1	; select bank1
  8506     0842  0867               	movf	(?_str2float+3)^(0+128),w
  8507     0843  0022               	movlb	2	; select bank2
  8508     0844  00A3               	movwf	(setKp@new_kp+3)^(0+256)
  8509     0845  0021               	movlb	1	; select bank1
  8510     0846  0866               	movf	(?_str2float+2)^(0+128),w
  8511     0847  0022               	movlb	2	; select bank2
  8512     0848  00A2               	movwf	(setKp@new_kp+2)^(0+256)
  8513     0849  0021               	movlb	1	; select bank1
  8514     084A  0865               	movf	(?_str2float+1)^(0+128),w
  8515     084B  0022               	movlb	2	; select bank2
  8516     084C  00A1               	movwf	(setKp@new_kp+1)^(0+256)
  8517     084D  0021               	movlb	1	; select bank1
  8518     084E  0864               	movf	?_str2float^(0+128),w
  8519     084F  0022               	movlb	2	; select bank2
  8520     0850  00A0               	movwf	setKp@new_kp^(0+256)
  8521     0851  319A  22EE  3188   	fcall	_setKp
  8522     0854                     l6262:
  8523                           
  8524                           ;UART.c: 110:             printf("changed kp\r\n");
  8525     0854  30D8               	movlw	low (STR_12| (0+32768))
  8526     0855  0021               	movlb	1	; select bank1
  8527     0856  00E2               	movwf	printf@fmt^(0+128)
  8528     0857  3098               	movlw	high (STR_12| (0+32768))
  8529     0858  00E3               	movwf	(printf@fmt^(0+128)+1)
  8530     0859  319C  2418  3188   	fcall	_printf
  8531                           
  8532                           ;UART.c: 111:             break;
  8533     085C  28BC               	goto	l946
  8534     085D                     l6264:
  8535                           
  8536                           ;UART.c: 114:             setKi(str2float(str + 1));
  8537     085D  0824               	movf	uartHandler@str^(0+256),w
  8538     085E  3E01               	addlw	1
  8539     085F  0021               	movlb	1	; select bank1
  8540     0860  00E4               	movwf	str2float@str^(0+128)
  8541     0861  3197  2755  3188   	fcall	_str2float
  8542     0864  0021               	movlb	1	; select bank1
  8543     0865  0867               	movf	(?_str2float+3)^(0+128),w
  8544     0866  0022               	movlb	2	; select bank2
  8545     0867  00A3               	movwf	(setKi@new_ki+3)^(0+256)
  8546     0868  0021               	movlb	1	; select bank1
  8547     0869  0866               	movf	(?_str2float+2)^(0+128),w
  8548     086A  0022               	movlb	2	; select bank2
  8549     086B  00A2               	movwf	(setKi@new_ki+2)^(0+256)
  8550     086C  0021               	movlb	1	; select bank1
  8551     086D  0865               	movf	(?_str2float+1)^(0+128),w
  8552     086E  0022               	movlb	2	; select bank2
  8553     086F  00A1               	movwf	(setKi@new_ki+1)^(0+256)
  8554     0870  0021               	movlb	1	; select bank1
  8555     0871  0864               	movf	?_str2float^(0+128),w
  8556     0872  0022               	movlb	2	; select bank2
  8557     0873  00A0               	movwf	setKi@new_ki^(0+256)
  8558     0874  319A  22E4  3188   	fcall	_setKi
  8559     0877                     l6266:
  8560                           
  8561                           ;UART.c: 115:             printf("changed ki\r\n");
  8562     0877  30CB               	movlw	low (STR_13| (0+32768))
  8563     0878  0021               	movlb	1	; select bank1
  8564     0879  00E2               	movwf	printf@fmt^(0+128)
  8565     087A  3098               	movlw	high (STR_13| (0+32768))
  8566     087B  00E3               	movwf	(printf@fmt^(0+128)+1)
  8567     087C  319C  2418  3188   	fcall	_printf
  8568                           
  8569                           ;UART.c: 116:             break;
  8570     087F  28BC               	goto	l946
  8571     0880                     l6268:
  8572                           
  8573                           ;UART.c: 119:             mustPrintLogs = !mustPrintLogs;
  8574     0880  0020               	movlb	0	; select bank0
  8575     0881  086D               	movf	_mustPrintLogs,w
  8576     0882  1903               	btfsc	3,2
  8577     0883  2885               	goto	u7551
  8578     0884  2887               	goto	u7550
  8579     0885                     u7551:
  8580     0885  3001               	movlw	1
  8581     0886  2888               	goto	u7560
  8582     0887                     u7550:
  8583     0887  3000               	movlw	0
  8584     0888                     u7560:
  8585     0888  00ED               	movwf	_mustPrintLogs
  8586     0889                     l6270:
  8587                           
  8588                           ;UART.c: 120:             printf("logs toggled\r\n");
  8589     0889  309F               	movlw	low (STR_14| (0+32768))
  8590     088A  0021               	movlb	1	; select bank1
  8591     088B  00E2               	movwf	printf@fmt^(0+128)
  8592     088C  3098               	movlw	high (STR_14| (0+32768))
  8593     088D  00E3               	movwf	(printf@fmt^(0+128)+1)
  8594     088E  319C  2418  3188   	fcall	_printf
  8595                           
  8596                           ;UART.c: 121:             break;
  8597     0891  28BC               	goto	l946
  8598     0892                     l6272:
  8599                           
  8600                           ;UART.c: 125:             printf("Unkown command\r\n");
  8601     0892  307D               	movlw	low (STR_15| (0+32768))
  8602     0893  0021               	movlb	1	; select bank1
  8603     0894  00E2               	movwf	printf@fmt^(0+128)
  8604     0895  3098               	movlw	high (STR_15| (0+32768))
  8605     0896  00E3               	movwf	(printf@fmt^(0+128)+1)
  8606     0897  319C  2418  3188   	fcall	_printf
  8607                           
  8608                           ;UART.c: 126:     };
  8609     089A  28BC               	goto	l946
  8610     089B                     l6274:
  8611     089B  0824               	movf	uartHandler@str^(0+256),w
  8612     089C  0086               	movwf	6
  8613     089D  3001               	movlw	1	; select bank2/3
  8614     089E  0087               	movwf	7
  8615     089F  0801               	movf	1,w
  8616                           
  8617                           ; Switch size 1, requested type "simple"
  8618                           ; Number of cases is 9, Range of values is 0 to 115
  8619                           ; switch strategies available:
  8620                           ; Name         Instructions Cycles
  8621                           ; simple_byte           28    15 (average)
  8622                           ; direct_byte          238     6 (fixed)
  8623                           ; jumptable            260     6 (fixed)
  8624                           ;	Chosen strategy is simple_byte
  8625     08A0  3A00               	xorlw	0	; case 0
  8626     08A1  1903               	skipnz
  8627     08A2  28BC               	goto	l946
  8628     08A3  3A49               	xorlw	73	; case 73
  8629     08A4  1903               	skipnz
  8630     08A5  285D               	goto	l6264
  8631     08A6  3A05               	xorlw	5	; case 76
  8632     08A7  1903               	skipnz
  8633     08A8  2880               	goto	l6268
  8634     08A9  3A1C               	xorlw	28	; case 80
  8635     08AA  1903               	skipnz
  8636     08AB  283A               	goto	l6260
  8637     08AC  3A03               	xorlw	3	; case 83
  8638     08AD  1903               	skipnz
  8639     08AE  2815               	goto	l6256
  8640     08AF  3A3A               	xorlw	58	; case 105
  8641     08B0  1903               	skipnz
  8642     08B1  285D               	goto	l6264
  8643     08B2  3A05               	xorlw	5	; case 108
  8644     08B3  1903               	skipnz
  8645     08B4  2880               	goto	l6268
  8646     08B5  3A1C               	xorlw	28	; case 112
  8647     08B6  1903               	skipnz
  8648     08B7  283A               	goto	l6260
  8649     08B8  3A03               	xorlw	3	; case 115
  8650     08B9  1903               	skipnz
  8651     08BA  2815               	goto	l6256
  8652     08BB  2892               	goto	l6272
  8653     08BC                     l946:
  8654     08BC  0008               	return
  8655     08BD                     __end_of_uartHandler:
  8656                           
  8657                           	psect	text2
  8658     1755                     __ptext2:	
  8659 ;; *************** function _str2float *****************
  8660 ;; Defined at:
  8661 ;;		line 24 in file "UART.c"
  8662 ;; Parameters:    Size  Location     Type
  8663 ;;  str             1   68[BANK1 ] PTR unsigned char 
  8664 ;;		 -> line(20), 
  8665 ;; Auto vars:     Size  Location     Type
  8666 ;;  i               1   74[BANK1 ] unsigned char 
  8667 ;;  digit           1   79[BANK1 ] unsigned char 
  8668 ;;  number          4   75[BANK1 ] float 
  8669 ;;  multiplier      1   73[BANK1 ] unsigned char 
  8670 ;;  decimal_sepa    1   72[BANK1 ] _Bool 
  8671 ;; Return value:  Size  Location     Type
  8672 ;;                  4   68[BANK1 ] float 
  8673 ;; Registers used:
  8674 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  8675 ;; Tracked objects:
  8676 ;;		On entry : 0/0
  8677 ;;		On exit  : 0/0
  8678 ;;		Unchanged: 0/0
  8679 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8680 ;;      Params:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0
  8681 ;;      Locals:         0       0       8       0       0       0       0       0       0       0       0       0       
      +0       0
  8682 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8683 ;;      Totals:         0       0      12       0       0       0       0       0       0       0       0       0       
      +0       0
  8684 ;;Total ram usage:       12 bytes
  8685 ;; Hardware stack levels used: 1
  8686 ;; Hardware stack levels required when called: 7
  8687 ;; This function calls:
  8688 ;;		___fladd
  8689 ;;		___fldiv
  8690 ;;		___flmul
  8691 ;;		___xxtofl
  8692 ;; This function is called by:
  8693 ;;		_uartHandler
  8694 ;; This function uses a non-reentrant model
  8695 ;;
  8696                           
  8697     1755                     _str2float:	
  8698                           ;psect for function _str2float
  8699                           
  8700     1755                     l6000:	
  8701                           ;incstack = 0
  8702                           ; Regs used in _str2float: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  8703                           
  8704                           
  8705                           ;UART.c: 25:     float number = 0;
  8706     1755  3000               	movlw	0
  8707     1756  0021               	movlb	1	; select bank1
  8708     1757  00EE               	movwf	(str2float@number+3)^(0+128)
  8709     1758  3000               	movlw	0
  8710     1759  00ED               	movwf	(str2float@number+2)^(0+128)
  8711     175A  3000               	movlw	0
  8712     175B  00EC               	movwf	(str2float@number+1)^(0+128)
  8713     175C  3000               	movlw	0
  8714     175D  00EB               	movwf	str2float@number^(0+128)
  8715     175E                     l6002:
  8716                           
  8717                           ;UART.c: 26:     _Bool decimal_separator = 0;
  8718     175E  01E8               	clrf	str2float@decimal_separator^(0+128)
  8719     175F                     l6004:
  8720                           
  8721                           ;UART.c: 29:         char digit = *str++;
  8722     175F  0864               	movf	str2float@str^(0+128),w
  8723     1760  0086               	movwf	6
  8724     1761  3001               	movlw	1	; select bank2/3
  8725     1762  0087               	movwf	7
  8726     1763  0801               	movf	1,w
  8727     1764  00EF               	movwf	str2float@digit^(0+128)
  8728     1765                     l6006:
  8729     1765  3001               	movlw	1
  8730     1766  07E4               	addwf	str2float@str^(0+128),f
  8731     1767                     l6008:
  8732                           
  8733                           ;UART.c: 30:         if ('0' <= digit && digit <= '9') {
  8734     1767  3030               	movlw	48
  8735     1768  026F               	subwf	str2float@digit^(0+128),w
  8736     1769  1C03               	skipc
  8737     176A  2F6C               	goto	u7231
  8738     176B  2F6D               	goto	u7230
  8739     176C                     u7231:
  8740     176C  2FBC               	goto	l6016
  8741     176D                     u7230:
  8742     176D                     l6010:
  8743     176D  303A               	movlw	58
  8744     176E  026F               	subwf	str2float@digit^(0+128),w
  8745     176F  1803               	skipnc
  8746     1770  2F72               	goto	u7241
  8747     1771  2F73               	goto	u7240
  8748     1772                     u7241:
  8749     1772  2FBC               	goto	l6016
  8750     1773                     u7240:
  8751     1773                     l6012:
  8752                           
  8753                           ;UART.c: 31:             number *= 10;
  8754     1773  3041               	movlw	65
  8755     1774  00CD               	movwf	(___flmul@b+3)^(0+128)
  8756     1775  3020               	movlw	32
  8757     1776  00CC               	movwf	(___flmul@b+2)^(0+128)
  8758     1777  3000               	movlw	0
  8759     1778  00CB               	movwf	(___flmul@b+1)^(0+128)
  8760     1779  3000               	movlw	0
  8761     177A  00CA               	movwf	___flmul@b^(0+128)
  8762     177B  086E               	movf	(str2float@number+3)^(0+128),w
  8763     177C  00D1               	movwf	(___flmul@a+3)^(0+128)
  8764     177D  086D               	movf	(str2float@number+2)^(0+128),w
  8765     177E  00D0               	movwf	(___flmul@a+2)^(0+128)
  8766     177F  086C               	movf	(str2float@number+1)^(0+128),w
  8767     1780  00CF               	movwf	(___flmul@a+1)^(0+128)
  8768     1781  086B               	movf	str2float@number^(0+128),w
  8769     1782  00CE               	movwf	___flmul@a^(0+128)
  8770     1783  3180  208A  3197   	fcall	___flmul
  8771     1786  0021               	movlb	1	; select bank1
  8772     1787  084D               	movf	(?___flmul+3)^(0+128),w
  8773     1788  00EE               	movwf	(str2float@number+3)^(0+128)
  8774     1789  084C               	movf	(?___flmul+2)^(0+128),w
  8775     178A  00ED               	movwf	(str2float@number+2)^(0+128)
  8776     178B  084B               	movf	(?___flmul+1)^(0+128),w
  8777     178C  00EC               	movwf	(str2float@number+1)^(0+128)
  8778     178D  084A               	movf	?___flmul^(0+128),w
  8779     178E  00EB               	movwf	str2float@number^(0+128)
  8780                           
  8781                           ;UART.c: 32:             number += digit - '0';
  8782     178F  086F               	movf	str2float@digit^(0+128),w
  8783     1790  3ED0               	addlw	208
  8784     1791  00A0               	movwf	___xxtofl@val^(0+128)
  8785     1792  30FF               	movlw	255
  8786     1793  1803               	skipnc
  8787     1794  3000               	movlw	0
  8788     1795  00A1               	movwf	(___xxtofl@val^(0+128)+1)
  8789     1796  01A2               	clrf	(___xxtofl@val+2)^(0+128)
  8790     1797  01A3               	clrf	(___xxtofl@val+3)^(0+128)
  8791     1798  3000               	movlw	0
  8792     1799  3196  26B0  3197   	fcall	___xxtofl
  8793     179C  0021               	movlb	1	; select bank1
  8794     179D  0823               	movf	(?___xxtofl+3)^(0+128),w
  8795     179E  00B1               	movwf	(___fladd@b+3)^(0+128)
  8796     179F  0822               	movf	(?___xxtofl+2)^(0+128),w
  8797     17A0  00B0               	movwf	(___fladd@b+2)^(0+128)
  8798     17A1  0821               	movf	(?___xxtofl+1)^(0+128),w
  8799     17A2  00AF               	movwf	(___fladd@b+1)^(0+128)
  8800     17A3  0820               	movf	?___xxtofl^(0+128),w
  8801     17A4  00AE               	movwf	___fladd@b^(0+128)
  8802     17A5  086E               	movf	(str2float@number+3)^(0+128),w
  8803     17A6  00B5               	movwf	(___fladd@a+3)^(0+128)
  8804     17A7  086D               	movf	(str2float@number+2)^(0+128),w
  8805     17A8  00B4               	movwf	(___fladd@a+2)^(0+128)
  8806     17A9  086C               	movf	(str2float@number+1)^(0+128),w
  8807     17AA  00B3               	movwf	(___fladd@a+1)^(0+128)
  8808     17AB  086B               	movf	str2float@number^(0+128),w
  8809     17AC  00B2               	movwf	___fladd@a^(0+128)
  8810     17AD  3185  2500  3197   	fcall	___fladd
  8811     17B0  0021               	movlb	1	; select bank1
  8812     17B1  0831               	movf	(?___fladd+3)^(0+128),w
  8813     17B2  00EE               	movwf	(str2float@number+3)^(0+128)
  8814     17B3  0830               	movf	(?___fladd+2)^(0+128),w
  8815     17B4  00ED               	movwf	(str2float@number+2)^(0+128)
  8816     17B5  082F               	movf	(?___fladd+1)^(0+128),w
  8817     17B6  00EC               	movwf	(str2float@number+1)^(0+128)
  8818     17B7  082E               	movf	?___fladd^(0+128),w
  8819     17B8  00EB               	movwf	str2float@number^(0+128)
  8820     17B9                     l6014:
  8821                           
  8822                           ;UART.c: 33:             multiplier++;
  8823     17B9  3001               	movlw	1
  8824     17BA  07E9               	addwf	str2float@multiplier^(0+128),f
  8825                           
  8826                           ;UART.c: 34:         } else if (digit == ',' || digit == '.') {
  8827     17BB  2F5F               	goto	l6004
  8828     17BC                     l6016:
  8829     17BC  302C               	movlw	44
  8830     17BD  066F               	xorwf	str2float@digit^(0+128),w
  8831     17BE  1903               	btfsc	3,2
  8832     17BF  2FC1               	goto	u7251
  8833     17C0  2FC2               	goto	u7250
  8834     17C1                     u7251:
  8835     17C1  2FC8               	goto	l901
  8836     17C2                     u7250:
  8837     17C2                     l6018:
  8838     17C2  302E               	movlw	46
  8839     17C3  066F               	xorwf	str2float@digit^(0+128),w
  8840     17C4  1D03               	btfss	3,2
  8841     17C5  2FC7               	goto	u7261
  8842     17C6  2FC8               	goto	u7260
  8843     17C7                     u7261:
  8844     17C7  2FCC               	goto	l6022
  8845     17C8                     u7260:
  8846     17C8                     l901:
  8847                           
  8848                           ;UART.c: 35:             decimal_separator = 1;
  8849     17C8  3001               	movlw	1
  8850     17C9  00E8               	movwf	str2float@decimal_separator^(0+128)
  8851     17CA                     l6020:
  8852                           
  8853                           ;UART.c: 36:             multiplier = 0;
  8854     17CA  01E9               	clrf	str2float@multiplier^(0+128)
  8855                           
  8856                           ;UART.c: 37:         } else {
  8857     17CB  2F5F               	goto	l6004
  8858     17CC                     l6022:
  8859                           
  8860                           ;UART.c: 42:     for (uint8_t i = 0; decimal_separator && i < multiplier; i++) {
  8861     17CC  01EA               	clrf	str2float@i^(0+128)
  8862     17CD  2FEC               	goto	l6028
  8863     17CE                     l6024:
  8864                           
  8865                           ;UART.c: 43:         number /= 10;
  8866     17CE  3041               	movlw	65
  8867     17CF  00A3               	movwf	(___fldiv@a+3)^(0+128)
  8868     17D0  3020               	movlw	32
  8869     17D1  00A2               	movwf	(___fldiv@a+2)^(0+128)
  8870     17D2  3000               	movlw	0
  8871     17D3  00A1               	movwf	(___fldiv@a+1)^(0+128)
  8872     17D4  3000               	movlw	0
  8873     17D5  00A0               	movwf	___fldiv@a^(0+128)
  8874     17D6  086E               	movf	(str2float@number+3)^(0+128),w
  8875     17D7  00A7               	movwf	(___fldiv@b+3)^(0+128)
  8876     17D8  086D               	movf	(str2float@number+2)^(0+128),w
  8877     17D9  00A6               	movwf	(___fldiv@b+2)^(0+128)
  8878     17DA  086C               	movf	(str2float@number+1)^(0+128),w
  8879     17DB  00A5               	movwf	(___fldiv@b+1)^(0+128)
  8880     17DC  086B               	movf	str2float@number^(0+128),w
  8881     17DD  00A4               	movwf	___fldiv@b^(0+128)
  8882     17DE  318C  2450  3197   	fcall	___fldiv
  8883     17E1  0021               	movlb	1	; select bank1
  8884     17E2  0823               	movf	(?___fldiv+3)^(0+128),w
  8885     17E3  00EE               	movwf	(str2float@number+3)^(0+128)
  8886     17E4  0822               	movf	(?___fldiv+2)^(0+128),w
  8887     17E5  00ED               	movwf	(str2float@number+2)^(0+128)
  8888     17E6  0821               	movf	(?___fldiv+1)^(0+128),w
  8889     17E7  00EC               	movwf	(str2float@number+1)^(0+128)
  8890     17E8  0820               	movf	?___fldiv^(0+128),w
  8891     17E9  00EB               	movwf	str2float@number^(0+128)
  8892     17EA                     l6026:
  8893                           
  8894                           ;UART.c: 44:     }
  8895     17EA  3001               	movlw	1
  8896     17EB  07EA               	addwf	str2float@i^(0+128),f
  8897     17EC                     l6028:
  8898     17EC  0868               	movf	str2float@decimal_separator^(0+128),w
  8899     17ED  1903               	btfsc	3,2
  8900     17EE  2FF0               	goto	u7271
  8901     17EF  2FF1               	goto	u7270
  8902     17F0                     u7271:
  8903     17F0  2FF7               	goto	l6032
  8904     17F1                     u7270:
  8905     17F1                     l6030:
  8906     17F1  0869               	movf	str2float@multiplier^(0+128),w
  8907     17F2  026A               	subwf	str2float@i^(0+128),w
  8908     17F3  1C03               	skipc
  8909     17F4  2FF6               	goto	u7281
  8910     17F5  2FF7               	goto	u7280
  8911     17F6                     u7281:
  8912     17F6  2FCE               	goto	l6024
  8913     17F7                     u7280:
  8914     17F7                     l6032:
  8915                           
  8916                           ;UART.c: 45:     return number;
  8917     17F7  086E               	movf	(str2float@number+3)^(0+128),w
  8918     17F8  00E7               	movwf	(?_str2float+3)^(0+128)
  8919     17F9  086D               	movf	(str2float@number+2)^(0+128),w
  8920     17FA  00E6               	movwf	(?_str2float+2)^(0+128)
  8921     17FB  086C               	movf	(str2float@number+1)^(0+128),w
  8922     17FC  00E5               	movwf	(?_str2float+1)^(0+128)
  8923     17FD  086B               	movf	str2float@number^(0+128),w
  8924     17FE  00E4               	movwf	?_str2float^(0+128)
  8925     17FF                     l910:
  8926     17FF  0008               	return
  8927     1800                     __end_of_str2float:
  8928                           
  8929                           	psect	text3
  8930     0C50                     __ptext3:	
  8931 ;; *************** function ___fldiv *****************
  8932 ;; Defined at:
  8933 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\sprcdiv.c"
  8934 ;; Parameters:    Size  Location     Type
  8935 ;;  a               4    0[BANK1 ] float 
  8936 ;;  b               4    4[BANK1 ] float 
  8937 ;; Auto vars:     Size  Location     Type
  8938 ;;  grs             4   20[BANK1 ] unsigned long 
  8939 ;;  rem             4   13[BANK1 ] unsigned long 
  8940 ;;  new_exp         2   18[BANK1 ] short 
  8941 ;;  aexp            1   25[BANK1 ] unsigned char 
  8942 ;;  bexp            1   24[BANK1 ] unsigned char 
  8943 ;;  sign            1   17[BANK1 ] unsigned char 
  8944 ;; Return value:  Size  Location     Type
  8945 ;;                  4    0[BANK1 ] unsigned char 
  8946 ;; Registers used:
  8947 ;;		wreg, status,2, status,0
  8948 ;; Tracked objects:
  8949 ;;		On entry : 0/0
  8950 ;;		On exit  : 0/0
  8951 ;;		Unchanged: 0/0
  8952 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8953 ;;      Params:         0       0       8       0       0       0       0       0       0       0       0       0       
      +0       0
  8954 ;;      Locals:         0       0      13       0       0       0       0       0       0       0       0       0       
      +0       0
  8955 ;;      Temps:          0       0       5       0       0       0       0       0       0       0       0       0       
      +0       0
  8956 ;;      Totals:         0       0      26       0       0       0       0       0       0       0       0       0       
      +0       0
  8957 ;;Total ram usage:       26 bytes
  8958 ;; Hardware stack levels used: 1
  8959 ;; Hardware stack levels required when called: 5
  8960 ;; This function calls:
  8961 ;;		Nothing
  8962 ;; This function is called by:
  8963 ;;		_str2float
  8964 ;; This function uses a non-reentrant model
  8965 ;;
  8966                           
  8967     0C50                     ___fldiv:	
  8968                           ;psect for function ___fldiv
  8969                           
  8970     0C50                     l5244:	
  8971                           ;incstack = 0
  8972                           ; Regs used in ___fldiv: [wreg+status,2+status,0]
  8973                           
  8974     0C50  0021               	movlb	1	; select bank1
  8975     0C51  0827               	movf	(___fldiv@b^(0+128)+3),w
  8976     0C52  3980               	andlw	128
  8977     0C53  00B1               	movwf	___fldiv@sign^(0+128)
  8978     0C54                     l5246:
  8979     0C54  3527               	lslf	(___fldiv@b^(0+128)+3),w
  8980     0C55  00B8               	movwf	___fldiv@bexp^(0+128)
  8981     0C56                     l5248:
  8982     0C56  1FA6               	btfss	(___fldiv@b^(0+128)+2),7
  8983     0C57  2C59               	goto	u5951
  8984     0C58  2C5A               	goto	u5950
  8985     0C59                     u5951:
  8986     0C59  2C5B               	goto	l5252
  8987     0C5A                     u5950:
  8988     0C5A                     l5250:
  8989     0C5A  1438               	bsf	___fldiv@bexp^(0+128),0
  8990     0C5B                     l5252:
  8991     0C5B  0838               	movf	___fldiv@bexp^(0+128),w
  8992     0C5C  1903               	btfsc	3,2
  8993     0C5D  2C5F               	goto	u5961
  8994     0C5E  2C60               	goto	u5960
  8995     0C5F                     u5961:
  8996     0C5F  2C70               	goto	l5262
  8997     0C60                     u5960:
  8998     0C60                     l5254:
  8999     0C60  0A38               	incf	___fldiv@bexp^(0+128),w
  9000     0C61  1D03               	btfss	3,2
  9001     0C62  2C64               	goto	u5971
  9002     0C63  2C65               	goto	u5970
  9003     0C64                     u5971:
  9004     0C64  2C6D               	goto	l5258
  9005     0C65                     u5970:
  9006     0C65                     l5256:
  9007     0C65  3000               	movlw	0
  9008     0C66  00A7               	movwf	(___fldiv@b+3)^(0+128)
  9009     0C67  3000               	movlw	0
  9010     0C68  00A6               	movwf	(___fldiv@b+2)^(0+128)
  9011     0C69  3000               	movlw	0
  9012     0C6A  00A5               	movwf	(___fldiv@b+1)^(0+128)
  9013     0C6B  3000               	movlw	0
  9014     0C6C  00A4               	movwf	___fldiv@b^(0+128)
  9015     0C6D                     l5258:
  9016     0C6D  17A6               	bsf	(___fldiv@b^(0+128)+2),7
  9017     0C6E                     l5260:
  9018     0C6E  01A7               	clrf	(___fldiv@b^(0+128)+3)
  9019     0C6F  2C78               	goto	l5264
  9020     0C70                     l5262:
  9021     0C70  3000               	movlw	0
  9022     0C71  00A7               	movwf	(___fldiv@b+3)^(0+128)
  9023     0C72  3000               	movlw	0
  9024     0C73  00A6               	movwf	(___fldiv@b+2)^(0+128)
  9025     0C74  3000               	movlw	0
  9026     0C75  00A5               	movwf	(___fldiv@b+1)^(0+128)
  9027     0C76  3000               	movlw	0
  9028     0C77  00A4               	movwf	___fldiv@b^(0+128)
  9029     0C78                     l5264:
  9030     0C78  0823               	movf	(___fldiv@a^(0+128)+3),w
  9031     0C79  3980               	andlw	128
  9032     0C7A  06B1               	xorwf	___fldiv@sign^(0+128),f
  9033     0C7B                     l5266:
  9034     0C7B  3523               	lslf	(___fldiv@a^(0+128)+3),w
  9035     0C7C  00B9               	movwf	___fldiv@aexp^(0+128)
  9036     0C7D                     l5268:
  9037     0C7D  1FA2               	btfss	(___fldiv@a^(0+128)+2),7
  9038     0C7E  2C80               	goto	u5981
  9039     0C7F  2C81               	goto	u5980
  9040     0C80                     u5981:
  9041     0C80  2C82               	goto	l5272
  9042     0C81                     u5980:
  9043     0C81                     l5270:
  9044     0C81  1439               	bsf	___fldiv@aexp^(0+128),0
  9045     0C82                     l5272:
  9046     0C82  0839               	movf	___fldiv@aexp^(0+128),w
  9047     0C83  1903               	btfsc	3,2
  9048     0C84  2C86               	goto	u5991
  9049     0C85  2C87               	goto	u5990
  9050     0C86                     u5991:
  9051     0C86  2C97               	goto	l5282
  9052     0C87                     u5990:
  9053     0C87                     l5274:
  9054     0C87  0A39               	incf	___fldiv@aexp^(0+128),w
  9055     0C88  1D03               	btfss	3,2
  9056     0C89  2C8B               	goto	u6001
  9057     0C8A  2C8C               	goto	u6000
  9058     0C8B                     u6001:
  9059     0C8B  2C94               	goto	l5278
  9060     0C8C                     u6000:
  9061     0C8C                     l5276:
  9062     0C8C  3000               	movlw	0
  9063     0C8D  00A3               	movwf	(___fldiv@a+3)^(0+128)
  9064     0C8E  3000               	movlw	0
  9065     0C8F  00A2               	movwf	(___fldiv@a+2)^(0+128)
  9066     0C90  3000               	movlw	0
  9067     0C91  00A1               	movwf	(___fldiv@a+1)^(0+128)
  9068     0C92  3000               	movlw	0
  9069     0C93  00A0               	movwf	___fldiv@a^(0+128)
  9070     0C94                     l5278:
  9071     0C94  17A2               	bsf	(___fldiv@a^(0+128)+2),7
  9072     0C95                     l5280:
  9073     0C95  01A3               	clrf	(___fldiv@a^(0+128)+3)
  9074     0C96  2C9F               	goto	l1564
  9075     0C97                     l5282:
  9076     0C97  3000               	movlw	0
  9077     0C98  00A3               	movwf	(___fldiv@a+3)^(0+128)
  9078     0C99  3000               	movlw	0
  9079     0C9A  00A2               	movwf	(___fldiv@a+2)^(0+128)
  9080     0C9B  3000               	movlw	0
  9081     0C9C  00A1               	movwf	(___fldiv@a+1)^(0+128)
  9082     0C9D  3000               	movlw	0
  9083     0C9E  00A0               	movwf	___fldiv@a^(0+128)
  9084     0C9F                     l1564:
  9085     0C9F  0823               	movf	(___fldiv@a+3)^(0+128),w
  9086     0CA0  0422               	iorwf	(___fldiv@a+2)^(0+128),w
  9087     0CA1  0421               	iorwf	(___fldiv@a+1)^(0+128),w
  9088     0CA2  0420               	iorwf	___fldiv@a^(0+128),w
  9089     0CA3  1D03               	skipz
  9090     0CA4  2CA6               	goto	u6011
  9091     0CA5  2CA7               	goto	u6010
  9092     0CA6                     u6011:
  9093     0CA6  2CBE               	goto	l5292
  9094     0CA7                     u6010:
  9095     0CA7                     l5284:
  9096     0CA7  3000               	movlw	0
  9097     0CA8  00A7               	movwf	(___fldiv@b+3)^(0+128)
  9098     0CA9  3000               	movlw	0
  9099     0CAA  00A6               	movwf	(___fldiv@b+2)^(0+128)
  9100     0CAB  3000               	movlw	0
  9101     0CAC  00A5               	movwf	(___fldiv@b+1)^(0+128)
  9102     0CAD  3000               	movlw	0
  9103     0CAE  00A4               	movwf	___fldiv@b^(0+128)
  9104     0CAF  3080               	movlw	128
  9105     0CB0  04A6               	iorwf	(___fldiv@b^(0+128)+2),f
  9106     0CB1  307F               	movlw	127
  9107     0CB2  04A7               	iorwf	((___fldiv@b+1)^(0+128)+2),f
  9108     0CB3                     l5286:
  9109     0CB3  0831               	movf	___fldiv@sign^(0+128),w
  9110     0CB4  04A7               	iorwf	(___fldiv@b^(0+128)+3),f
  9111     0CB5                     l5288:
  9112     0CB5  0827               	movf	(___fldiv@b+3)^(0+128),w
  9113     0CB6  00A3               	movwf	(?___fldiv+3)^(0+128)
  9114     0CB7  0826               	movf	(___fldiv@b+2)^(0+128),w
  9115     0CB8  00A2               	movwf	(?___fldiv+2)^(0+128)
  9116     0CB9  0825               	movf	(___fldiv@b+1)^(0+128),w
  9117     0CBA  00A1               	movwf	(?___fldiv+1)^(0+128)
  9118     0CBB  0824               	movf	___fldiv@b^(0+128),w
  9119     0CBC  00A0               	movwf	?___fldiv^(0+128)
  9120     0CBD  2DF3               	goto	l1566
  9121     0CBE                     l5292:
  9122     0CBE  0838               	movf	___fldiv@bexp^(0+128),w
  9123     0CBF  1D03               	btfss	3,2
  9124     0CC0  2CC2               	goto	u6021
  9125     0CC1  2CC3               	goto	u6020
  9126     0CC2                     u6021:
  9127     0CC2  2CCC               	goto	l5298
  9128     0CC3                     u6020:
  9129     0CC3                     l5294:
  9130     0CC3  3000               	movlw	0
  9131     0CC4  00A3               	movwf	(?___fldiv+3)^(0+128)
  9132     0CC5  3000               	movlw	0
  9133     0CC6  00A2               	movwf	(?___fldiv+2)^(0+128)
  9134     0CC7  3000               	movlw	0
  9135     0CC8  00A1               	movwf	(?___fldiv+1)^(0+128)
  9136     0CC9  3000               	movlw	0
  9137     0CCA  00A0               	movwf	?___fldiv^(0+128)
  9138     0CCB  2DF3               	goto	l1566
  9139     0CCC                     l5298:
  9140     0CCC  0838               	movf	___fldiv@bexp^(0+128),w
  9141     0CCD  00A8               	movwf	??___fldiv^(0+128)
  9142     0CCE  01A9               	clrf	(??___fldiv^(0+128)+1)
  9143     0CCF  0829               	movf	(??___fldiv+1)^(0+128),w
  9144     0CD0  00AB               	movwf	((??___fldiv+2)^(0+128)+1)
  9145     0CD1  0839               	movf	___fldiv@aexp^(0+128),w
  9146     0CD2  0228               	subwf	??___fldiv^(0+128),w
  9147     0CD3  00AA               	movwf	(??___fldiv+2)^(0+128)
  9148     0CD4  1C03               	skipc
  9149     0CD5  03AB               	decf	((??___fldiv+2)^(0+128)+1),f
  9150     0CD6  082A               	movf	(??___fldiv+2)^(0+128),w
  9151     0CD7  3E7F               	addlw	127
  9152     0CD8  00B2               	movwf	___fldiv@new_exp^(0+128)
  9153     0CD9  3000               	movlw	0
  9154     0CDA  3D2B               	addwfc	(??___fldiv+3)^(0+128),w
  9155     0CDB  00B3               	movwf	(___fldiv@new_exp+1)^(0+128)
  9156     0CDC                     l5300:
  9157     0CDC  0827               	movf	(___fldiv@b+3)^(0+128),w
  9158     0CDD  00B0               	movwf	(___fldiv@rem+3)^(0+128)
  9159     0CDE  0826               	movf	(___fldiv@b+2)^(0+128),w
  9160     0CDF  00AF               	movwf	(___fldiv@rem+2)^(0+128)
  9161     0CE0  0825               	movf	(___fldiv@b+1)^(0+128),w
  9162     0CE1  00AE               	movwf	(___fldiv@rem+1)^(0+128)
  9163     0CE2  0824               	movf	___fldiv@b^(0+128),w
  9164     0CE3  00AD               	movwf	___fldiv@rem^(0+128)
  9165     0CE4                     l5302:
  9166     0CE4  3000               	movlw	0
  9167     0CE5  00A7               	movwf	(___fldiv@b+3)^(0+128)
  9168     0CE6  3000               	movlw	0
  9169     0CE7  00A6               	movwf	(___fldiv@b+2)^(0+128)
  9170     0CE8  3000               	movlw	0
  9171     0CE9  00A5               	movwf	(___fldiv@b+1)^(0+128)
  9172     0CEA  3000               	movlw	0
  9173     0CEB  00A4               	movwf	___fldiv@b^(0+128)
  9174     0CEC                     l5304:
  9175     0CEC  3000               	movlw	0
  9176     0CED  00B7               	movwf	(___fldiv@grs+3)^(0+128)
  9177     0CEE  3000               	movlw	0
  9178     0CEF  00B6               	movwf	(___fldiv@grs+2)^(0+128)
  9179     0CF0  3000               	movlw	0
  9180     0CF1  00B5               	movwf	(___fldiv@grs+1)^(0+128)
  9181     0CF2  3000               	movlw	0
  9182     0CF3  00B4               	movwf	___fldiv@grs^(0+128)
  9183     0CF4                     l5306:
  9184     0CF4  01B9               	clrf	___fldiv@aexp^(0+128)
  9185     0CF5  2D32               	goto	l5326
  9186     0CF6                     l5308:
  9187     0CF6  0839               	movf	___fldiv@aexp^(0+128),w
  9188     0CF7  1903               	btfsc	3,2
  9189     0CF8  2CFA               	goto	u6031
  9190     0CF9  2CFB               	goto	u6030
  9191     0CFA                     u6031:
  9192     0CFA  2D15               	goto	l5318
  9193     0CFB                     u6030:
  9194     0CFB                     l5310:
  9195     0CFB  3001               	movlw	1
  9196     0CFC                     u6045:
  9197     0CFC  35AD               	lslf	___fldiv@rem^(0+128),f
  9198     0CFD  0DAE               	rlf	(___fldiv@rem+1)^(0+128),f
  9199     0CFE  0DAF               	rlf	(___fldiv@rem+2)^(0+128),f
  9200     0CFF  0DB0               	rlf	(___fldiv@rem+3)^(0+128),f
  9201     0D00  0B89               	decfsz	9,f
  9202     0D01  2CFC               	goto	u6045
  9203     0D02  3001               	movlw	1
  9204     0D03                     u6055:
  9205     0D03  35A4               	lslf	___fldiv@b^(0+128),f
  9206     0D04  0DA5               	rlf	(___fldiv@b+1)^(0+128),f
  9207     0D05  0DA6               	rlf	(___fldiv@b+2)^(0+128),f
  9208     0D06  0DA7               	rlf	(___fldiv@b+3)^(0+128),f
  9209     0D07  0B89               	decfsz	9,f
  9210     0D08  2D03               	goto	u6055
  9211     0D09                     l5312:
  9212     0D09  1FB7               	btfss	(___fldiv@grs+3)^(0+128),7
  9213     0D0A  2D0C               	goto	u6061
  9214     0D0B  2D0D               	goto	u6060
  9215     0D0C                     u6061:
  9216     0D0C  2D0E               	goto	l5316
  9217     0D0D                     u6060:
  9218     0D0D                     l5314:
  9219     0D0D  1424               	bsf	___fldiv@b^(0+128),0
  9220     0D0E                     l5316:
  9221     0D0E  3001               	movlw	1
  9222     0D0F                     u6075:
  9223     0D0F  35B4               	lslf	___fldiv@grs^(0+128),f
  9224     0D10  0DB5               	rlf	(___fldiv@grs+1)^(0+128),f
  9225     0D11  0DB6               	rlf	(___fldiv@grs+2)^(0+128),f
  9226     0D12  0DB7               	rlf	(___fldiv@grs+3)^(0+128),f
  9227     0D13  0B89               	decfsz	9,f
  9228     0D14  2D0F               	goto	u6075
  9229     0D15                     l5318:
  9230     0D15  0823               	movf	(___fldiv@a+3)^(0+128),w
  9231     0D16  0230               	subwf	(___fldiv@rem+3)^(0+128),w
  9232     0D17  1D03               	skipz
  9233     0D18  2D23               	goto	u6085
  9234     0D19  0822               	movf	(___fldiv@a+2)^(0+128),w
  9235     0D1A  022F               	subwf	(___fldiv@rem+2)^(0+128),w
  9236     0D1B  1D03               	skipz
  9237     0D1C  2D23               	goto	u6085
  9238     0D1D  0821               	movf	(___fldiv@a+1)^(0+128),w
  9239     0D1E  022E               	subwf	(___fldiv@rem+1)^(0+128),w
  9240     0D1F  1D03               	skipz
  9241     0D20  2D23               	goto	u6085
  9242     0D21  0820               	movf	___fldiv@a^(0+128),w
  9243     0D22  022D               	subwf	___fldiv@rem^(0+128),w
  9244     0D23                     u6085:
  9245     0D23  1C03               	skipc
  9246     0D24  2D26               	goto	u6081
  9247     0D25  2D27               	goto	u6080
  9248     0D26                     u6081:
  9249     0D26  2D30               	goto	l5324
  9250     0D27                     u6080:
  9251     0D27                     l5320:
  9252     0D27  1737               	bsf	(___fldiv@grs^(0+128)+3),6
  9253     0D28                     l5322:
  9254     0D28  0820               	movf	___fldiv@a^(0+128),w
  9255     0D29  02AD               	subwf	___fldiv@rem^(0+128),f
  9256     0D2A  0821               	movf	(___fldiv@a+1)^(0+128),w
  9257     0D2B  3BAE               	subwfb	(___fldiv@rem+1)^(0+128),f
  9258     0D2C  0822               	movf	(___fldiv@a+2)^(0+128),w
  9259     0D2D  3BAF               	subwfb	(___fldiv@rem+2)^(0+128),f
  9260     0D2E  0823               	movf	(___fldiv@a+3)^(0+128),w
  9261     0D2F  3BB0               	subwfb	(___fldiv@rem+3)^(0+128),f
  9262     0D30                     l5324:
  9263     0D30  3001               	movlw	1
  9264     0D31  07B9               	addwf	___fldiv@aexp^(0+128),f
  9265     0D32                     l5326:
  9266     0D32  301A               	movlw	26
  9267     0D33  0239               	subwf	___fldiv@aexp^(0+128),w
  9268     0D34  1C03               	skipc
  9269     0D35  2D37               	goto	u6091
  9270     0D36  2D38               	goto	u6090
  9271     0D37                     u6091:
  9272     0D37  2CF6               	goto	l5308
  9273     0D38                     u6090:
  9274     0D38                     l5328:
  9275     0D38  0830               	movf	(___fldiv@rem+3)^(0+128),w
  9276     0D39  042F               	iorwf	(___fldiv@rem+2)^(0+128),w
  9277     0D3A  042E               	iorwf	(___fldiv@rem+1)^(0+128),w
  9278     0D3B  042D               	iorwf	___fldiv@rem^(0+128),w
  9279     0D3C  1903               	skipnz
  9280     0D3D  2D3F               	goto	u6101
  9281     0D3E  2D40               	goto	u6100
  9282     0D3F                     u6101:
  9283     0D3F  2D59               	goto	l5342
  9284     0D40                     u6100:
  9285     0D40                     l5330:
  9286     0D40  1434               	bsf	___fldiv@grs^(0+128),0
  9287     0D41  2D59               	goto	l5342
  9288     0D42                     l5332:
  9289     0D42  3001               	movlw	1
  9290     0D43                     u6115:
  9291     0D43  35A4               	lslf	___fldiv@b^(0+128),f
  9292     0D44  0DA5               	rlf	(___fldiv@b+1)^(0+128),f
  9293     0D45  0DA6               	rlf	(___fldiv@b+2)^(0+128),f
  9294     0D46  0DA7               	rlf	(___fldiv@b+3)^(0+128),f
  9295     0D47  0B89               	decfsz	9,f
  9296     0D48  2D43               	goto	u6115
  9297     0D49                     l5334:
  9298     0D49  1FB7               	btfss	(___fldiv@grs+3)^(0+128),7
  9299     0D4A  2D4C               	goto	u6121
  9300     0D4B  2D4D               	goto	u6120
  9301     0D4C                     u6121:
  9302     0D4C  2D4E               	goto	l5338
  9303     0D4D                     u6120:
  9304     0D4D                     l5336:
  9305     0D4D  1424               	bsf	___fldiv@b^(0+128),0
  9306     0D4E                     l5338:
  9307     0D4E  3001               	movlw	1
  9308     0D4F                     u6135:
  9309     0D4F  35B4               	lslf	___fldiv@grs^(0+128),f
  9310     0D50  0DB5               	rlf	(___fldiv@grs+1)^(0+128),f
  9311     0D51  0DB6               	rlf	(___fldiv@grs+2)^(0+128),f
  9312     0D52  0DB7               	rlf	(___fldiv@grs+3)^(0+128),f
  9313     0D53  0B89               	decfsz	9,f
  9314     0D54  2D4F               	goto	u6135
  9315     0D55                     l5340:
  9316     0D55  30FF               	movlw	255
  9317     0D56  07B2               	addwf	___fldiv@new_exp^(0+128),f
  9318     0D57  30FF               	movlw	255
  9319     0D58  3DB3               	addwfc	(___fldiv@new_exp+1)^(0+128),f
  9320     0D59                     l5342:
  9321     0D59  1FA6               	btfss	(___fldiv@b+2)^(0+128),7
  9322     0D5A  2D5C               	goto	u6141
  9323     0D5B  2D5D               	goto	u6140
  9324     0D5C                     u6141:
  9325     0D5C  2D42               	goto	l5332
  9326     0D5D                     u6140:
  9327     0D5D                     l5344:
  9328     0D5D  01B9               	clrf	___fldiv@aexp^(0+128)
  9329     0D5E                     l5346:
  9330     0D5E  1FB7               	btfss	(___fldiv@grs+3)^(0+128),7
  9331     0D5F  2D61               	goto	u6151
  9332     0D60  2D62               	goto	u6150
  9333     0D61                     u6151:
  9334     0D61  2D7E               	goto	l5354
  9335     0D62                     u6150:
  9336     0D62                     l5348:
  9337     0D62  30FF               	movlw	255
  9338     0D63  0534               	andwf	___fldiv@grs^(0+128),w
  9339     0D64  00A8               	movwf	??___fldiv^(0+128)
  9340     0D65  30FF               	movlw	255
  9341     0D66  0535               	andwf	(___fldiv@grs+1)^(0+128),w
  9342     0D67  00A9               	movwf	(??___fldiv^(0+128)+1)
  9343     0D68  30FF               	movlw	255
  9344     0D69  0536               	andwf	(___fldiv@grs+2)^(0+128),w
  9345     0D6A  00AA               	movwf	(??___fldiv^(0+128)+2)
  9346     0D6B  307F               	movlw	127
  9347     0D6C  0537               	andwf	(___fldiv@grs+3)^(0+128),w
  9348     0D6D  00AB               	movwf	(??___fldiv^(0+128)+3)
  9349     0D6E  082B               	movf	(??___fldiv+3)^(0+128),w
  9350     0D6F  042A               	iorwf	(??___fldiv+2)^(0+128),w
  9351     0D70  0429               	iorwf	(??___fldiv+1)^(0+128),w
  9352     0D71  0428               	iorwf	??___fldiv^(0+128),w
  9353     0D72  1903               	skipnz
  9354     0D73  2D75               	goto	u6161
  9355     0D74  2D76               	goto	u6160
  9356     0D75                     u6161:
  9357     0D75  2D79               	goto	l1580
  9358     0D76                     u6160:
  9359     0D76                     l5350:
  9360     0D76  3001               	movlw	1
  9361     0D77  00B9               	movwf	___fldiv@aexp^(0+128)
  9362     0D78  2D7E               	goto	l5354
  9363     0D79                     l1580:
  9364     0D79  1C24               	btfss	___fldiv@b^(0+128),0
  9365     0D7A  2D7C               	goto	u6171
  9366     0D7B  2D7D               	goto	u6170
  9367     0D7C                     u6171:
  9368     0D7C  2D7E               	goto	l5354
  9369     0D7D                     u6170:
  9370     0D7D  2D76               	goto	l5350
  9371     0D7E                     l5354:
  9372     0D7E  0839               	movf	___fldiv@aexp^(0+128),w
  9373     0D7F  1903               	btfsc	3,2
  9374     0D80  2D82               	goto	u6181
  9375     0D81  2D83               	goto	u6180
  9376     0D82                     u6181:
  9377     0D82  2DA9               	goto	l5364
  9378     0D83                     u6180:
  9379     0D83                     l5356:
  9380     0D83  3001               	movlw	1
  9381     0D84  07A4               	addwf	___fldiv@b^(0+128),f
  9382     0D85  3000               	movlw	0
  9383     0D86  3DA5               	addwfc	(___fldiv@b+1)^(0+128),f
  9384     0D87  3DA6               	addwfc	(___fldiv@b+2)^(0+128),f
  9385     0D88  3DA7               	addwfc	(___fldiv@b+3)^(0+128),f
  9386     0D89                     l5358:
  9387     0D89  1C27               	btfss	(___fldiv@b+3)^(0+128),0
  9388     0D8A  2D8C               	goto	u6191
  9389     0D8B  2D8D               	goto	u6190
  9390     0D8C                     u6191:
  9391     0D8C  2DA9               	goto	l5364
  9392     0D8D                     u6190:
  9393     0D8D                     l5360:
  9394     0D8D  0824               	movf	___fldiv@b^(0+128),w
  9395     0D8E  00A8               	movwf	??___fldiv^(0+128)
  9396     0D8F  0825               	movf	(___fldiv@b+1)^(0+128),w
  9397     0D90  00A9               	movwf	(??___fldiv^(0+128)+1)
  9398     0D91  0826               	movf	(___fldiv@b+2)^(0+128),w
  9399     0D92  00AA               	movwf	(??___fldiv^(0+128)+2)
  9400     0D93  0827               	movf	(___fldiv@b+3)^(0+128),w
  9401     0D94  00AB               	movwf	(??___fldiv^(0+128)+3)
  9402     0D95  3001               	movlw	1
  9403     0D96  00AC               	movwf	(??___fldiv+4)^(0+128)
  9404     0D97                     u6205:
  9405     0D97  37AB               	asrf	(??___fldiv^(0+128)+3),f
  9406     0D98  0CAA               	rrf	(??___fldiv^(0+128)+2),f
  9407     0D99  0CA9               	rrf	(??___fldiv^(0+128)+1),f
  9408     0D9A  0CA8               	rrf	??___fldiv^(0+128),f
  9409     0D9B                     u6200:
  9410     0D9B  0BAC               	decfsz	(??___fldiv+4)^(0+128),f
  9411     0D9C  2D97               	goto	u6205
  9412     0D9D  082B               	movf	(??___fldiv+3)^(0+128),w
  9413     0D9E  00A7               	movwf	(___fldiv@b+3)^(0+128)
  9414     0D9F  082A               	movf	(??___fldiv+2)^(0+128),w
  9415     0DA0  00A6               	movwf	(___fldiv@b+2)^(0+128)
  9416     0DA1  0829               	movf	(??___fldiv+1)^(0+128),w
  9417     0DA2  00A5               	movwf	(___fldiv@b+1)^(0+128)
  9418     0DA3  0828               	movf	??___fldiv^(0+128),w
  9419     0DA4  00A4               	movwf	___fldiv@b^(0+128)
  9420     0DA5                     l5362:
  9421     0DA5  3001               	movlw	1
  9422     0DA6  07B2               	addwf	___fldiv@new_exp^(0+128),f
  9423     0DA7  3000               	movlw	0
  9424     0DA8  3DB3               	addwfc	(___fldiv@new_exp+1)^(0+128),f
  9425     0DA9                     l5364:
  9426     0DA9  0833               	movf	(___fldiv@new_exp+1)^(0+128),w
  9427     0DAA  3A80               	xorlw	128
  9428     0DAB  00A8               	movwf	??___fldiv^(0+128)
  9429     0DAC  3080               	movlw	128
  9430     0DAD  0228               	subwf	??___fldiv^(0+128),w
  9431     0DAE  1D03               	skipz
  9432     0DAF  2DB2               	goto	u6215
  9433     0DB0  30FF               	movlw	255
  9434     0DB1  0232               	subwf	___fldiv@new_exp^(0+128),w
  9435     0DB2                     u6215:
  9436     0DB2  1C03               	skipc
  9437     0DB3  2DB5               	goto	u6211
  9438     0DB4  2DB6               	goto	u6210
  9439     0DB5                     u6211:
  9440     0DB5  2DC3               	goto	l1585
  9441     0DB6                     u6210:
  9442     0DB6                     l5366:
  9443     0DB6  30FF               	movlw	255
  9444     0DB7  0021               	movlb	1	; select bank1
  9445     0DB8  00B2               	movwf	___fldiv@new_exp^(0+128)
  9446     0DB9  3000               	movlw	0
  9447     0DBA  00B3               	movwf	(___fldiv@new_exp^(0+128)+1)
  9448     0DBB  3000               	movlw	0
  9449     0DBC  00A7               	movwf	(___fldiv@b+3)^(0+128)
  9450     0DBD  3000               	movlw	0
  9451     0DBE  00A6               	movwf	(___fldiv@b+2)^(0+128)
  9452     0DBF  3000               	movlw	0
  9453     0DC0  00A5               	movwf	(___fldiv@b+1)^(0+128)
  9454     0DC1  3000               	movlw	0
  9455     0DC2  00A4               	movwf	___fldiv@b^(0+128)
  9456     0DC3                     l1585:
  9457     0DC3  0021               	movlb	1	; select bank1
  9458     0DC4  0833               	movf	(___fldiv@new_exp+1)^(0+128),w
  9459     0DC5  3A80               	xorlw	128
  9460     0DC6  00A8               	movwf	??___fldiv^(0+128)
  9461     0DC7  3080               	movlw	128
  9462     0DC8  0228               	subwf	??___fldiv^(0+128),w
  9463     0DC9  1D03               	skipz
  9464     0DCA  2DCD               	goto	u6225
  9465     0DCB  3001               	movlw	1
  9466     0DCC  0232               	subwf	___fldiv@new_exp^(0+128),w
  9467     0DCD                     u6225:
  9468     0DCD  1803               	skipnc
  9469     0DCE  2DD0               	goto	u6221
  9470     0DCF  2DD1               	goto	u6220
  9471     0DD0                     u6221:
  9472     0DD0  2DDD               	goto	l1586
  9473     0DD1                     u6220:
  9474     0DD1                     l5368:
  9475     0DD1  0021               	movlb	1	; select bank1
  9476     0DD2  01B2               	clrf	___fldiv@new_exp^(0+128)
  9477     0DD3  01B3               	clrf	(___fldiv@new_exp+1)^(0+128)
  9478     0DD4                     l5370:
  9479     0DD4  3000               	movlw	0
  9480     0DD5  00A7               	movwf	(___fldiv@b+3)^(0+128)
  9481     0DD6  3000               	movlw	0
  9482     0DD7  00A6               	movwf	(___fldiv@b+2)^(0+128)
  9483     0DD8  3000               	movlw	0
  9484     0DD9  00A5               	movwf	(___fldiv@b+1)^(0+128)
  9485     0DDA  3000               	movlw	0
  9486     0DDB  00A4               	movwf	___fldiv@b^(0+128)
  9487     0DDC                     l5372:
  9488     0DDC  01B1               	clrf	___fldiv@sign^(0+128)
  9489     0DDD                     l1586:
  9490     0DDD  0021               	movlb	1	; select bank1
  9491     0DDE  0832               	movf	___fldiv@new_exp^(0+128),w
  9492     0DDF  00B8               	movwf	___fldiv@bexp^(0+128)
  9493     0DE0                     l5374:
  9494     0DE0  1C38               	btfss	___fldiv@bexp^(0+128),0
  9495     0DE1  2DE3               	goto	u6231
  9496     0DE2  2DE4               	goto	u6230
  9497     0DE3                     u6231:
  9498     0DE3  2DE6               	goto	l5378
  9499     0DE4                     u6230:
  9500     0DE4                     l5376:
  9501     0DE4  17A6               	bsf	(___fldiv@b^(0+128)+2),7
  9502     0DE5  2DE8               	goto	l1588
  9503     0DE6                     l5378:
  9504     0DE6  307F               	movlw	127
  9505     0DE7  05A6               	andwf	(___fldiv@b^(0+128)+2),f
  9506     0DE8                     l1588:
  9507     0DE8  0838               	movf	___fldiv@bexp^(0+128),w
  9508     0DE9  00A8               	movwf	??___fldiv^(0+128)
  9509     0DEA  3001               	movlw	1
  9510     0DEB                     u6245:
  9511     0DEB  36A8               	lsrf	??___fldiv^(0+128),f
  9512     0DEC  0B89               	decfsz	9,f
  9513     0DED  2DEB               	goto	u6245
  9514     0DEE  0828               	movf	??___fldiv^(0+128),w
  9515     0DEF  00A7               	movwf	(___fldiv@b^(0+128)+3)
  9516     0DF0  0831               	movf	___fldiv@sign^(0+128),w
  9517     0DF1  04A7               	iorwf	(___fldiv@b^(0+128)+3),f
  9518     0DF2  2CB5               	goto	l5288
  9519     0DF3                     l1566:
  9520     0DF3  0008               	return
  9521     0DF4                     __end_of___fldiv:
  9522                           
  9523                           	psect	text4
  9524     1000                     __ptext4:	
  9525 ;; *************** function _setSetpoint *****************
  9526 ;; Defined at:
  9527 ;;		line 45 in file "controller.c"
  9528 ;; Parameters:    Size  Location     Type
  9529 ;;  new_setpoint    2   13[BANK1 ] unsigned short 
  9530 ;; Auto vars:     Size  Location     Type
  9531 ;;		None
  9532 ;; Return value:  Size  Location     Type
  9533 ;;                  1    wreg      void 
  9534 ;; Registers used:
  9535 ;;		wreg
  9536 ;; Tracked objects:
  9537 ;;		On entry : 0/0
  9538 ;;		On exit  : 0/0
  9539 ;;		Unchanged: 0/0
  9540 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9541 ;;      Params:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0
  9542 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9543 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9544 ;;      Totals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0
  9545 ;;Total ram usage:        2 bytes
  9546 ;; Hardware stack levels used: 1
  9547 ;; Hardware stack levels required when called: 5
  9548 ;; This function calls:
  9549 ;;		Nothing
  9550 ;; This function is called by:
  9551 ;;		_main
  9552 ;;		_uartHandler
  9553 ;; This function uses a non-reentrant model
  9554 ;;
  9555                           
  9556     1000                     _setSetpoint:	
  9557                           ;psect for function _setSetpoint
  9558                           
  9559     1000                     l5970:	
  9560                           ;incstack = 0
  9561                           ; Regs used in _setSetpoint: [wreg]
  9562                           
  9563     1000  0021               	movlb	1	; select bank1
  9564     1001  082E               	movf	(setSetpoint@new_setpoint+1)^(0+128),w
  9565     1002  0022               	movlb	2	; select bank2
  9566     1003  00E6               	movwf	(_setpoint+1)^(0+256)
  9567     1004  0021               	movlb	1	; select bank1
  9568     1005  082D               	movf	setSetpoint@new_setpoint^(0+128),w
  9569     1006  0022               	movlb	2	; select bank2
  9570     1007  00E5               	movwf	_setpoint^(0+256)
  9571     1008                     l985:
  9572     1008  0008               	return
  9573     1009                     __end_of_setSetpoint:
  9574                           
  9575                           	psect	text5
  9576     1AEE                     __ptext5:	
  9577 ;; *************** function _setKp *****************
  9578 ;; Defined at:
  9579 ;;		line 47 in file "controller.c"
  9580 ;; Parameters:    Size  Location     Type
  9581 ;;  new_kp          4    0[BANK2 ] float 
  9582 ;; Auto vars:     Size  Location     Type
  9583 ;;		None
  9584 ;; Return value:  Size  Location     Type
  9585 ;;                  1    wreg      void 
  9586 ;; Registers used:
  9587 ;;		wreg
  9588 ;; Tracked objects:
  9589 ;;		On entry : 0/0
  9590 ;;		On exit  : 0/0
  9591 ;;		Unchanged: 0/0
  9592 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9593 ;;      Params:         0       0       0       4       0       0       0       0       0       0       0       0       
      +0       0
  9594 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9595 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9596 ;;      Totals:         0       0       0       4       0       0       0       0       0       0       0       0       
      +0       0
  9597 ;;Total ram usage:        4 bytes
  9598 ;; Hardware stack levels used: 1
  9599 ;; Hardware stack levels required when called: 5
  9600 ;; This function calls:
  9601 ;;		Nothing
  9602 ;; This function is called by:
  9603 ;;		_uartHandler
  9604 ;; This function uses a non-reentrant model
  9605 ;;
  9606                           
  9607     1AEE                     _setKp:	
  9608                           ;psect for function _setKp
  9609                           
  9610     1AEE                     l6120:	
  9611                           ;incstack = 0
  9612                           ; Regs used in _setKp: [wreg]
  9613                           
  9614     1AEE  0022               	movlb	2	; select bank2
  9615     1AEF  0823               	movf	(setKp@new_kp+3)^(0+256),w
  9616     1AF0  00E4               	movwf	(_kp+3)^(0+256)
  9617     1AF1  0822               	movf	(setKp@new_kp+2)^(0+256),w
  9618     1AF2  00E3               	movwf	(_kp+2)^(0+256)
  9619     1AF3  0821               	movf	(setKp@new_kp+1)^(0+256),w
  9620     1AF4  00E2               	movwf	(_kp+1)^(0+256)
  9621     1AF5  0820               	movf	setKp@new_kp^(0+256),w
  9622     1AF6  00E1               	movwf	_kp^(0+256)
  9623     1AF7                     l991:
  9624     1AF7  0008               	return
  9625     1AF8                     __end_of_setKp:
  9626                           
  9627                           	psect	text6
  9628     1AE4                     __ptext6:	
  9629 ;; *************** function _setKi *****************
  9630 ;; Defined at:
  9631 ;;		line 48 in file "controller.c"
  9632 ;; Parameters:    Size  Location     Type
  9633 ;;  new_ki          4    0[BANK2 ] float 
  9634 ;; Auto vars:     Size  Location     Type
  9635 ;;		None
  9636 ;; Return value:  Size  Location     Type
  9637 ;;                  1    wreg      void 
  9638 ;; Registers used:
  9639 ;;		wreg
  9640 ;; Tracked objects:
  9641 ;;		On entry : 0/0
  9642 ;;		On exit  : 0/0
  9643 ;;		Unchanged: 0/0
  9644 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9645 ;;      Params:         0       0       0       4       0       0       0       0       0       0       0       0       
      +0       0
  9646 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9647 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9648 ;;      Totals:         0       0       0       4       0       0       0       0       0       0       0       0       
      +0       0
  9649 ;;Total ram usage:        4 bytes
  9650 ;; Hardware stack levels used: 1
  9651 ;; Hardware stack levels required when called: 5
  9652 ;; This function calls:
  9653 ;;		Nothing
  9654 ;; This function is called by:
  9655 ;;		_uartHandler
  9656 ;; This function uses a non-reentrant model
  9657 ;;
  9658                           
  9659     1AE4                     _setKi:	
  9660                           ;psect for function _setKi
  9661                           
  9662     1AE4                     l6122:	
  9663                           ;incstack = 0
  9664                           ; Regs used in _setKi: [wreg]
  9665                           
  9666     1AE4  0022               	movlb	2	; select bank2
  9667     1AE5  0823               	movf	(setKi@new_ki+3)^(0+256),w
  9668     1AE6  00E0               	movwf	(_ki+3)^(0+256)
  9669     1AE7  0822               	movf	(setKi@new_ki+2)^(0+256),w
  9670     1AE8  00DF               	movwf	(_ki+2)^(0+256)
  9671     1AE9  0821               	movf	(setKi@new_ki+1)^(0+256),w
  9672     1AEA  00DE               	movwf	(_ki+1)^(0+256)
  9673     1AEB  0820               	movf	setKi@new_ki^(0+256),w
  9674     1AEC  00DD               	movwf	_ki^(0+256)
  9675     1AED                     l994:
  9676     1AED  0008               	return
  9677     1AEE                     __end_of_setKi:
  9678                           
  9679                           	psect	text7
  9680     104F                     __ptext7:	
  9681 ;; *************** function _readLine *****************
  9682 ;; Defined at:
  9683 ;;		line 49 in file "UART.c"
  9684 ;; Parameters:    Size  Location     Type
  9685 ;;		None
  9686 ;; Auto vars:     Size  Location     Type
  9687 ;;		None
  9688 ;; Return value:  Size  Location     Type
  9689 ;;                  1   73[BANK1 ] PTR unsigned char 
  9690 ;; Registers used:
  9691 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  9692 ;; Tracked objects:
  9693 ;;		On entry : 0/0
  9694 ;;		On exit  : 0/0
  9695 ;;		Unchanged: 0/0
  9696 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9697 ;;      Params:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0
  9698 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9699 ;;      Temps:          0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0
  9700 ;;      Totals:         0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0
  9701 ;;Total ram usage:        3 bytes
  9702 ;; Hardware stack levels used: 1
  9703 ;; Hardware stack levels required when called: 14
  9704 ;; This function calls:
  9705 ;;		_EUSART_IsRxReady
  9706 ;;		_EUSART_Read
  9707 ;;		_printf
  9708 ;; This function is called by:
  9709 ;;		_uartHandler
  9710 ;; This function uses a non-reentrant model
  9711 ;;
  9712                           
  9713     104F                     _readLine:	
  9714                           ;psect for function _readLine
  9715                           
  9716     104F                     l915:	
  9717                           ;incstack = 0
  9718                           ; Regs used in _readLine: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  9719                           ;UART.c: 50:     static uint8_t index = 0;;UART.c: 51:     while (1) {
  9720                           
  9721     104F                     l6036:
  9722                           
  9723                           ;UART.c: 52:         if (!EUSART_IsRxReady()) {
  9724     104F  319A  22D1  3190   	fcall	_EUSART_IsRxReady
  9725     1052  3A00               	xorlw	0
  9726     1053  1D03               	skipz
  9727     1054  2856               	goto	u7291
  9728     1055  2857               	goto	u7290
  9729     1056                     u7291:
  9730     1056  2861               	goto	l6044
  9731     1057                     u7290:
  9732     1057                     l6038:
  9733                           
  9734                           ;UART.c: 53:             line[index] = 0;
  9735     1057  0020               	movlb	0	; select bank0
  9736     1058  0865               	movf	readLine@index,w
  9737     1059  3ED8               	addlw	(low (_line| (0+256)))& (0+255)
  9738     105A  0086               	movwf	6
  9739     105B  3001               	movlw	1	; select bank3/4
  9740     105C  0087               	movwf	7
  9741     105D  0181               	clrf	1
  9742     105E                     l6040:
  9743                           
  9744                           ;UART.c: 54:             return line + index;
  9745     105E  0865               	movf	readLine@index,w
  9746     105F  3ED8               	addlw	(low (_line| (0+256)))& (0+255)
  9747     1060  28A7               	goto	l917
  9748     1061                     l6044:
  9749                           
  9750                           ;UART.c: 56:         if (index >= 20 - 1) {
  9751     1061  3013               	movlw	19
  9752     1062  0020               	movlb	0	; select bank0
  9753     1063  0265               	subwf	readLine@index,w
  9754     1064  1C03               	skipc
  9755     1065  2867               	goto	u7301
  9756     1066  2868               	goto	u7300
  9757     1067                     u7301:
  9758     1067  2882               	goto	l6062
  9759     1068                     u7300:
  9760     1068  286C               	goto	l6050
  9761     1069                     l6048:
  9762                           
  9763                           ;UART.c: 58:                 EUSART_Read();
  9764     1069  319D  253C  3190   	fcall	_EUSART_Read
  9765     106C                     l6050:
  9766                           
  9767                           ;UART.c: 57:             while (EUSART_IsRxReady()) {
  9768     106C  319A  22D1  3190   	fcall	_EUSART_IsRxReady
  9769     106F  3A00               	xorlw	0
  9770     1070  1D03               	skipz
  9771     1071  2873               	goto	u7311
  9772     1072  2874               	goto	u7310
  9773     1073                     u7311:
  9774     1073  2869               	goto	l6048
  9775     1074                     u7310:
  9776     1074                     l6052:
  9777                           
  9778                           ;UART.c: 60:             printf("input buffer overflow\r\n");
  9779     1074  3065               	movlw	low (STR_3| (0+32768))
  9780     1075  0021               	movlb	1	; select bank1
  9781     1076  00E2               	movwf	printf@fmt^(0+128)
  9782     1077  3098               	movlw	high (STR_3| (0+32768))
  9783     1078  00E3               	movwf	(printf@fmt^(0+128)+1)
  9784     1079  319C  2418  3190   	fcall	_printf
  9785     107C                     l6054:
  9786                           
  9787                           ;UART.c: 61:             index = 0;
  9788     107C  0020               	movlb	0	; select bank0
  9789     107D  01E5               	clrf	readLine@index
  9790     107E                     l6056:
  9791                           
  9792                           ;UART.c: 62:             line[index] = 0;
  9793     107E  0023               	movlb	3	; select bank3
  9794     107F  01D8               	clrf	_line^(0+384)
  9795     1080                     l6058:
  9796                           
  9797                           ;UART.c: 63:             return line;
  9798     1080  30D8               	movlw	(low (_line| (0+256)))& (0+255)
  9799     1081  28A7               	goto	l917
  9800     1082                     l6062:
  9801                           
  9802                           ;UART.c: 66:         line[index] = EUSART_Read();
  9803     1082  319D  253C  3190   	fcall	_EUSART_Read
  9804     1085  0021               	movlb	1	; select bank1
  9805     1086  00EB               	movwf	??_readLine^(0+128)
  9806     1087  0020               	movlb	0	; select bank0
  9807     1088  0865               	movf	readLine@index,w
  9808     1089  3ED8               	addlw	(low (_line| (0+256)))& (0+255)
  9809     108A  0086               	movwf	6
  9810     108B  3001               	movlw	1	; select bank3/4
  9811     108C  0087               	movwf	7
  9812     108D  0021               	movlb	1	; select bank1
  9813     108E  086B               	movf	??_readLine^(0+128),w
  9814     108F  0081               	movwf	1
  9815     1090                     l6064:
  9816                           
  9817                           ;UART.c: 67:         if (line[index] == '\n') {
  9818     1090  0020               	movlb	0	; select bank0
  9819     1091  0865               	movf	readLine@index,w
  9820     1092  3ED8               	addlw	(low (_line| (0+256)))& (0+255)
  9821     1093  0086               	movwf	6
  9822     1094  3001               	movlw	1	; select bank3/4
  9823     1095  0087               	movwf	7
  9824     1096  300A               	movlw	10
  9825     1097  0601               	xorwf	1,w
  9826     1098  1D03               	btfss	3,2
  9827     1099  289B               	goto	u7321
  9828     109A  289C               	goto	u7320
  9829     109B                     u7321:
  9830     109B  28A4               	goto	l6074
  9831     109C                     u7320:
  9832     109C                     l6066:
  9833                           
  9834                           ;UART.c: 68:             line[index + 1] = 0;
  9835     109C  0865               	movf	readLine@index,w
  9836     109D  3ED9               	addlw	(low ((_line| (0+256)+1)))& (0+255)
  9837     109E  0086               	movwf	6
  9838     109F  3001               	movlw	1	; select bank3/4
  9839     10A0  0087               	movwf	7
  9840     10A1  0181               	clrf	1
  9841     10A2                     l6068:
  9842                           
  9843                           ;UART.c: 69:             index = 0;
  9844     10A2  01E5               	clrf	readLine@index
  9845     10A3  2880               	goto	l6058
  9846     10A4                     l6074:
  9847                           
  9848                           ;UART.c: 72:         index++;
  9849     10A4  3001               	movlw	1
  9850     10A5  07E5               	addwf	readLine@index,f
  9851     10A6  284F               	goto	l915
  9852     10A7                     l917:
  9853     10A7  0008               	return
  9854     10A8                     __end_of_readLine:
  9855                           
  9856                           	psect	text8
  9857     1D3C                     __ptext8:	
  9858 ;; *************** function _EUSART_Read *****************
  9859 ;; Defined at:
  9860 ;;		line 288 in file "mcc_generated_files/uart/src/eusart.c"
  9861 ;; Parameters:    Size  Location     Type
  9862 ;;		None
  9863 ;; Auto vars:     Size  Location     Type
  9864 ;;  readValue       1    1[BANK1 ] unsigned char 
  9865 ;;  tempRxTail      1    0[BANK1 ] unsigned char 
  9866 ;; Return value:  Size  Location     Type
  9867 ;;                  1    wreg      unsigned char 
  9868 ;; Registers used:
  9869 ;;		wreg, fsr1l, fsr1h, status,2, status,0
  9870 ;; Tracked objects:
  9871 ;;		On entry : 0/0
  9872 ;;		On exit  : 0/0
  9873 ;;		Unchanged: 0/0
  9874 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9875 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9876 ;;      Locals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0
  9877 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9878 ;;      Totals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0
  9879 ;;Total ram usage:        2 bytes
  9880 ;; Hardware stack levels used: 1
  9881 ;; Hardware stack levels required when called: 5
  9882 ;; This function calls:
  9883 ;;		Nothing
  9884 ;; This function is called by:
  9885 ;;		_readLine
  9886 ;;		_getch
  9887 ;; This function uses a non-reentrant model
  9888 ;;
  9889                           
  9890     1D3C                     _EUSART_Read:	
  9891                           ;psect for function _EUSART_Read
  9892                           
  9893     1D3C                     l5142:	
  9894                           ;incstack = 0
  9895                           ; Regs used in _EUSART_Read: [wreg+fsr1l+fsr1h+status,2+status,0]
  9896                           
  9897     1D3C                     l5144:
  9898                           
  9899                           ;mcc_generated_files/uart/src/eusart.c: 291:     uint8_t tempRxTail;;mcc_generated_files
      +                          /uart/src/eusart.c: 293:     readValue = eusartRxBuffer[eusartRxTail];
  9900     1D3C  0020               	movlb	0	; select bank0
  9901     1D3D  0868               	movf	_eusartRxTail,w
  9902     1D3E  3EB0               	addlw	(low (_eusartRxBuffer| (0+256)))& (0+255)
  9903     1D3F  0086               	movwf	6
  9904     1D40  3001               	movlw	1	; select bank3/4
  9905     1D41  0087               	movwf	7
  9906     1D42  0801               	movf	1,w
  9907     1D43  0021               	movlb	1	; select bank1
  9908     1D44  00A1               	movwf	EUSART_Read@readValue^(0+128)
  9909     1D45                     l5146:
  9910                           
  9911                           ;mcc_generated_files/uart/src/eusart.c: 295:     tempRxTail = (eusartRxTail + 1U) & ((8U
      +                          ) - 1U);
  9912     1D45  0020               	movlb	0	; select bank0
  9913     1D46  0868               	movf	_eusartRxTail,w	;volatile
  9914     1D47  3E01               	addlw	1
  9915     1D48  3907               	andlw	7
  9916     1D49  0021               	movlb	1	; select bank1
  9917     1D4A  00A0               	movwf	EUSART_Read@tempRxTail^(0+128)
  9918     1D4B                     l5148:
  9919                           
  9920                           ;mcc_generated_files/uart/src/eusart.c: 297:     eusartRxTail = tempRxTail;
  9921     1D4B  0820               	movf	EUSART_Read@tempRxTail^(0+128),w
  9922     1D4C  0020               	movlb	0	; select bank0
  9923     1D4D  00E8               	movwf	_eusartRxTail	;volatile
  9924     1D4E                     l5150:
  9925                           
  9926                           ;mcc_generated_files/uart/src/eusart.c: 299:     PIE1bits.RCIE = 0;
  9927     1D4E  0021               	movlb	1	; select bank1
  9928     1D4F  1291               	bcf	17,5	;volatile
  9929     1D50                     l5152:
  9930                           
  9931                           ;mcc_generated_files/uart/src/eusart.c: 300:     if(0U != eusartRxCount)
  9932     1D50  0020               	movlb	0	; select bank0
  9933     1D51  0867               	movf	_eusartRxCount,w	;volatile
  9934     1D52  1903               	btfsc	3,2
  9935     1D53  2D55               	goto	u5821
  9936     1D54  2D56               	goto	u5820
  9937     1D55                     u5821:
  9938     1D55  2D58               	goto	l5156
  9939     1D56                     u5820:
  9940     1D56                     l5154:
  9941                           
  9942                           ;mcc_generated_files/uart/src/eusart.c: 301:     {;mcc_generated_files/uart/src/eusart.c
      +                          : 302:         eusartRxCount--;
  9943     1D56  3001               	movlw	1
  9944     1D57  02E7               	subwf	_eusartRxCount,f	;volatile
  9945     1D58                     l5156:
  9946                           
  9947                           ;mcc_generated_files/uart/src/eusart.c: 304:     PIE1bits.RCIE = 1;
  9948     1D58  0021               	movlb	1	; select bank1
  9949     1D59  1691               	bsf	17,5	;volatile
  9950     1D5A                     l5158:
  9951                           
  9952                           ;mcc_generated_files/uart/src/eusart.c: 305:     return readValue;
  9953     1D5A  0821               	movf	EUSART_Read@readValue^(0+128),w
  9954     1D5B                     l725:
  9955     1D5B  0008               	return
  9956     1D5C                     __end_of_EUSART_Read:
  9957                           
  9958                           	psect	text9
  9959     1AD1                     __ptext9:	
  9960 ;; *************** function _EUSART_IsRxReady *****************
  9961 ;; Defined at:
  9962 ;;		line 267 in file "mcc_generated_files/uart/src/eusart.c"
  9963 ;; Parameters:    Size  Location     Type
  9964 ;;		None
  9965 ;; Auto vars:     Size  Location     Type
  9966 ;;		None
  9967 ;; Return value:  Size  Location     Type
  9968 ;;                  1    wreg      _Bool 
  9969 ;; Registers used:
  9970 ;;		wreg, status,2, status,0
  9971 ;; Tracked objects:
  9972 ;;		On entry : 0/0
  9973 ;;		On exit  : 0/0
  9974 ;;		Unchanged: 0/0
  9975 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9976 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9977 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9978 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9979 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9980 ;;Total ram usage:        0 bytes
  9981 ;; Hardware stack levels used: 1
  9982 ;; Hardware stack levels required when called: 5
  9983 ;; This function calls:
  9984 ;;		Nothing
  9985 ;; This function is called by:
  9986 ;;		_readLine
  9987 ;;		_getch
  9988 ;; This function uses a non-reentrant model
  9989 ;;
  9990                           
  9991     1AD1                     _EUSART_IsRxReady:	
  9992                           ;psect for function _EUSART_IsRxReady
  9993                           
  9994     1AD1                     l5138:	
  9995                           ;incstack = 0
  9996                           ; Regs used in _EUSART_IsRxReady: [wreg+status,2+status,0]
  9997                           
  9998                           
  9999                           ;mcc_generated_files/uart/src/eusart.c: 269:     return (eusartRxCount ? 1 : 0);
 10000     1AD1  0020               	movlb	0	; select bank0
 10001     1AD2  0867               	movf	_eusartRxCount,w	;volatile
 10002     1AD3  1D03               	btfss	3,2
 10003     1AD4  2AD6               	goto	u5801
 10004     1AD5  2AD8               	goto	u5800
 10005     1AD6                     u5801:
 10006     1AD6  3001               	movlw	1
 10007     1AD7  2AD9               	goto	u5810
 10008     1AD8                     u5800:
 10009     1AD8  3000               	movlw	0
 10010     1AD9                     u5810:
 10011     1AD9                     l712:
 10012     1AD9  0008               	return
 10013     1ADA                     __end_of_EUSART_IsRxReady:
 10014                           
 10015                           	psect	text10
 10016     13E1                     __ptext10:	
 10017 ;; *************** function _atoi *****************
 10018 ;; Defined at:
 10019 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\atoi.c"
 10020 ;; Parameters:    Size  Location     Type
 10021 ;;  s               1    6[BANK1 ] PTR const unsigned char 
 10022 ;;		 -> line(20), 
 10023 ;; Auto vars:     Size  Location     Type
 10024 ;;  n               2   11[BANK1 ] int 
 10025 ;;  neg             1   10[BANK1 ] _Bool 
 10026 ;; Return value:  Size  Location     Type
 10027 ;;                  2    6[BANK1 ] int 
 10028 ;; Registers used:
 10029 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 10030 ;; Tracked objects:
 10031 ;;		On entry : 0/0
 10032 ;;		On exit  : 0/0
 10033 ;;		Unchanged: 0/0
 10034 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10035 ;;      Params:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0
 10036 ;;      Locals:         0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0
 10037 ;;      Temps:          0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0
 10038 ;;      Totals:         0       0       7       0       0       0       0       0       0       0       0       0       
      +0       0
 10039 ;;Total ram usage:        7 bytes
 10040 ;; Hardware stack levels used: 1
 10041 ;; Hardware stack levels required when called: 6
 10042 ;; This function calls:
 10043 ;;		___wmul
 10044 ;; This function is called by:
 10045 ;;		_uartHandler
 10046 ;; This function uses a non-reentrant model
 10047 ;;
 10048                           
 10049     13E1                     _atoi:	
 10050                           ;psect for function _atoi
 10051                           
 10052     13E1                     l6088:	
 10053                           ;incstack = 0
 10054                           ; Regs used in _atoi: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
 10055                           
 10056     13E1  0021               	movlb	1	; select bank1
 10057     13E2  01AB               	clrf	atoi@n^(0+128)
 10058     13E3  01AC               	clrf	(atoi@n+1)^(0+128)
 10059     13E4  01AA               	clrf	atoi@neg^(0+128)
 10060     13E5  2BE8               	goto	l6092
 10061     13E6                     l6090:
 10062     13E6  3001               	movlw	1
 10063     13E7  07A6               	addwf	atoi@s^(0+128),f
 10064     13E8                     l6092:
 10065     13E8  0826               	movf	atoi@s^(0+128),w
 10066     13E9  0086               	movwf	6
 10067     13EA  3001               	movlw	1	; select bank2/3
 10068     13EB  0087               	movwf	7
 10069     13EC  3020               	movlw	32
 10070     13ED  0601               	xorwf	1,w
 10071     13EE  1903               	btfsc	3,2
 10072     13EF  2BF1               	goto	u7331
 10073     13F0  2BF2               	goto	u7330
 10074     13F1                     u7331:
 10075     13F1  2BE6               	goto	l6090
 10076     13F2                     u7330:
 10077     13F2                     l6094:
 10078     13F2  0826               	movf	atoi@s^(0+128),w
 10079     13F3  0086               	movwf	6
 10080     13F4  3001               	movlw	1	; select bank2/3
 10081     13F5  0087               	movwf	7
 10082     13F6  30F7               	movlw	247
 10083     13F7  0701               	addwf	1,w
 10084     13F8  00A8               	movwf	??_atoi^(0+128)
 10085     13F9  3005               	movlw	5
 10086     13FA  0228               	subwf	??_atoi^(0+128),w
 10087     13FB  1C03               	skipc
 10088     13FC  2BFE               	goto	u7341
 10089     13FD  2BFF               	goto	u7340
 10090     13FE                     u7341:
 10091     13FE  2BE6               	goto	l6090
 10092     13FF                     u7340:
 10093     13FF                     l6096:
 10094     13FF  0826               	movf	atoi@s^(0+128),w
 10095     1400  0086               	movwf	6
 10096     1401  3001               	movlw	1	; select bank2/3
 10097     1402  0087               	movwf	7
 10098     1403  302D               	movlw	45
 10099     1404  0601               	xorwf	1,w
 10100     1405  1D03               	btfss	3,2
 10101     1406  2C08               	goto	u7351
 10102     1407  2C09               	goto	u7350
 10103     1408                     u7351:
 10104     1408  2C0E               	goto	l6102
 10105     1409                     u7350:
 10106     1409                     l6098:
 10107     1409  3001               	movlw	1
 10108     140A  00AA               	movwf	atoi@neg^(0+128)
 10109     140B                     l6100:
 10110     140B  3001               	movlw	1
 10111     140C  07A6               	addwf	atoi@s^(0+128),f
 10112     140D  2C37               	goto	l6110
 10113     140E                     l6102:
 10114     140E  0826               	movf	atoi@s^(0+128),w
 10115     140F  0086               	movwf	6
 10116     1410  3001               	movlw	1	; select bank2/3
 10117     1411  0087               	movwf	7
 10118     1412  302B               	movlw	43
 10119     1413  0601               	xorwf	1,w
 10120     1414  1D03               	btfss	3,2
 10121     1415  2C17               	goto	u7361
 10122     1416  2C18               	goto	u7360
 10123     1417                     u7361:
 10124     1417  2C37               	goto	l6110
 10125     1418                     u7360:
 10126     1418  2C0B               	goto	l6100
 10127     1419                     l6106:
 10128     1419  0826               	movf	atoi@s^(0+128),w
 10129     141A  0086               	movwf	6
 10130     141B  3001               	movlw	1	; select bank2/3
 10131     141C  0087               	movwf	7
 10132     141D  082C               	movf	(atoi@n+1)^(0+128),w
 10133     141E  00A1               	movwf	(___wmul@multiplier+1)^(0+128)
 10134     141F  082B               	movf	atoi@n^(0+128),w
 10135     1420  00A0               	movwf	___wmul@multiplier^(0+128)
 10136     1421  300A               	movlw	10
 10137     1422  00A2               	movwf	___wmul@multiplicand^(0+128)
 10138     1423  3000               	movlw	0
 10139     1424  00A3               	movwf	(___wmul@multiplicand^(0+128)+1)
 10140     1425  319C  24FC  3193   	fcall	___wmul
 10141     1428  0021               	movlb	1	; select bank1
 10142     1429  0821               	movf	(?___wmul+1)^(0+128),w
 10143     142A  00A9               	movwf	(??_atoi^(0+128)+1)
 10144     142B  0801               	movf	1,w
 10145     142C  0220               	subwf	?___wmul^(0+128),w
 10146     142D  00A8               	movwf	??_atoi^(0+128)
 10147     142E  1C03               	skipc
 10148     142F  03A9               	decf	(??_atoi^(0+128)+1),f
 10149     1430  0828               	movf	??_atoi^(0+128),w
 10150     1431  3E30               	addlw	48
 10151     1432  00AB               	movwf	atoi@n^(0+128)
 10152     1433  3000               	movlw	0
 10153     1434  3D29               	addwfc	(??_atoi+1)^(0+128),w
 10154     1435  00AC               	movwf	(atoi@n+1)^(0+128)
 10155     1436  2C0B               	goto	l6100
 10156     1437                     l6110:
 10157     1437  0826               	movf	atoi@s^(0+128),w
 10158     1438  0086               	movwf	6
 10159     1439  3001               	movlw	1	; select bank2/3
 10160     143A  0087               	movwf	7
 10161     143B  30D0               	movlw	208
 10162     143C  0701               	addwf	1,w
 10163     143D  00A8               	movwf	??_atoi^(0+128)
 10164     143E  300A               	movlw	10
 10165     143F  0228               	subwf	??_atoi^(0+128),w
 10166     1440  1C03               	skipc
 10167     1441  2C43               	goto	u7371
 10168     1442  2C44               	goto	u7370
 10169     1443                     u7371:
 10170     1443  2C19               	goto	l6106
 10171     1444                     u7370:
 10172     1444                     l6112:
 10173     1444  082A               	movf	atoi@neg^(0+128),w
 10174     1445  1D03               	btfss	3,2
 10175     1446  2C48               	goto	u7381
 10176     1447  2C49               	goto	u7380
 10177     1448                     u7381:
 10178     1448  2C55               	goto	l6116
 10179     1449                     u7380:
 10180     1449                     l6114:
 10181     1449  092B               	comf	atoi@n^(0+128),w
 10182     144A  00A8               	movwf	??_atoi^(0+128)
 10183     144B  092C               	comf	(atoi@n+1)^(0+128),w
 10184     144C  00A9               	movwf	(??_atoi^(0+128)+1)
 10185     144D  0AA8               	incf	??_atoi^(0+128),f
 10186     144E  1903               	skipnz
 10187     144F  0AA9               	incf	(??_atoi^(0+128)+1),f
 10188     1450  0828               	movf	??_atoi^(0+128),w
 10189     1451  00A6               	movwf	?_atoi^(0+128)
 10190     1452  0829               	movf	(??_atoi+1)^(0+128),w
 10191     1453  00A7               	movwf	(?_atoi+1)^(0+128)
 10192     1454  2C59               	goto	l1679
 10193     1455                     l6116:
 10194     1455  082C               	movf	(atoi@n+1)^(0+128),w
 10195     1456  00A7               	movwf	(?_atoi+1)^(0+128)
 10196     1457  082B               	movf	atoi@n^(0+128),w
 10197     1458  00A6               	movwf	?_atoi^(0+128)
 10198     1459                     l1679:
 10199     1459  0008               	return
 10200     145A                     __end_of_atoi:
 10201                           
 10202                           	psect	text11
 10203     1DE9                     __ptext11:	
 10204 ;; *************** function _sprintf *****************
 10205 ;; Defined at:
 10206 ;;		line 9 in file "C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\nf_sprintf.c"
 10207 ;; Parameters:    Size  Location     Type
 10208 ;;  s               1   66[BANK1 ] PTR unsigned char 
 10209 ;;		 -> main@str(20), 
 10210 ;;  fmt             2   67[BANK1 ] PTR const unsigned char 
 10211 ;;		 -> STR_1(14), 
 10212 ;; Auto vars:     Size  Location     Type
 10213 ;;  f              11    1[BANK2 ] struct _IO_FILE
 10214 ;;  ret             2    0        int 
 10215 ;;  ap              1    0[BANK2 ] PTR void [1]
 10216 ;;		 -> ?_printf(2), ?_sprintf(2), 
 10217 ;; Return value:  Size  Location     Type
 10218 ;;                  2   66[BANK1 ] int 
 10219 ;; Registers used:
 10220 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 10221 ;; Tracked objects:
 10222 ;;		On entry : 0/0
 10223 ;;		On exit  : 0/0
 10224 ;;		Unchanged: 0/0
 10225 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10226 ;;      Params:         0       0       5       0       0       0       0       0       0       0       0       0       
      +0       0
 10227 ;;      Locals:         0       0       0      12       0       0       0       0       0       0       0       0       
      +0       0
 10228 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10229 ;;      Totals:         0       0       5      12       0       0       0       0       0       0       0       0       
      +0       0
 10230 ;;Total ram usage:       17 bytes
 10231 ;; Hardware stack levels used: 1
 10232 ;; Hardware stack levels required when called: 13
 10233 ;; This function calls:
 10234 ;;		_vfprintf
 10235 ;; This function is called by:
 10236 ;;		_main
 10237 ;; This function uses a non-reentrant model
 10238 ;;
 10239                           
 10240     1DE9                     _sprintf:	
 10241                           ;psect for function _sprintf
 10242                           
 10243     1DE9                     l6280:	
 10244                           ;incstack = 0
 10245                           ; Regs used in _sprintf: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 10246                           
 10247     1DE9  30E5               	movlw	(low ((?_sprintf| 0+3)))& (0+255)
 10248     1DEA  0022               	movlb	2	; select bank2
 10249     1DEB  00A0               	movwf	sprintf@ap^(0+256)
 10250     1DEC  0021               	movlb	1	; select bank1
 10251     1DED  0862               	movf	sprintf@s^(0+128),w
 10252     1DEE  0022               	movlb	2	; select bank2
 10253     1DEF  00A1               	movwf	sprintf@f^(0+256)
 10254     1DF0  3001               	movlw	1
 10255     1DF1  00A2               	movwf	(sprintf@f+1)^(0+256)
 10256     1DF2                     l6282:
 10257     1DF2  01A3               	clrf	(sprintf@f^(0+256)+2)
 10258     1DF3  01A4               	clrf	((sprintf@f+1)^(0+256)+2)
 10259     1DF4                     l6284:
 10260     1DF4  01AA               	clrf	(sprintf@f^(0+256)+9)
 10261     1DF5  01AB               	clrf	((sprintf@f+1)^(0+256)+9)
 10262     1DF6                     l6286:
 10263     1DF6  3021               	movlw	low sprintf@f
 10264     1DF7  0021               	movlb	1	; select bank1
 10265     1DF8  00D9               	movwf	vfprintf@fp^(0+128)
 10266     1DF9  3001               	movlw	high sprintf@f
 10267     1DFA  00DA               	movwf	(vfprintf@fp^(0+128)+1)
 10268     1DFB  0864               	movf	(sprintf@fmt+1)^(0+128),w
 10269     1DFC  00DC               	movwf	(vfprintf@fmt+1)^(0+128)
 10270     1DFD  0863               	movf	sprintf@fmt^(0+128),w
 10271     1DFE  00DB               	movwf	vfprintf@fmt^(0+128)
 10272     1DFF  3020               	movlw	low sprintf@ap
 10273     1E00  00DD               	movwf	vfprintf@ap^(0+128)
 10274     1E01  3001               	movlw	high sprintf@ap
 10275     1E02  00DE               	movwf	(vfprintf@ap+1)^(0+128)
 10276     1E03  319E  2637  319D   	fcall	_vfprintf
 10277     1E06                     l6288:
 10278     1E06  0021               	movlb	1	; select bank1
 10279     1E07  0862               	movf	sprintf@s^(0+128),w
 10280     1E08  0022               	movlb	2	; select bank2
 10281     1E09  0723               	addwf	(sprintf@f^(0+256)+2),w
 10282     1E0A  0086               	movwf	6
 10283     1E0B  3001               	movlw	1	; select bank2/3
 10284     1E0C  0087               	movwf	7
 10285     1E0D  0181               	clrf	1
 10286     1E0E                     l1686:
 10287     1E0E  0008               	return
 10288     1E0F                     __end_of_sprintf:
 10289                           
 10290                           	psect	text12
 10291     1AC8                     __ptext12:	
 10292 ;; *************** function _printOut *****************
 10293 ;; Defined at:
 10294 ;;		line 91 in file "UART.c"
 10295 ;; Parameters:    Size  Location     Type
 10296 ;;  str             1   73[BANK1 ] PTR unsigned char 
 10297 ;;		 -> main@str(20), 
 10298 ;; Auto vars:     Size  Location     Type
 10299 ;;		None
 10300 ;; Return value:  Size  Location     Type
 10301 ;;                  1    wreg      void 
 10302 ;; Registers used:
 10303 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 10304 ;; Tracked objects:
 10305 ;;		On entry : 0/0
 10306 ;;		On exit  : 0/0
 10307 ;;		Unchanged: 0/0
 10308 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10309 ;;      Params:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0
 10310 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10311 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10312 ;;      Totals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0
 10313 ;;Total ram usage:        1 bytes
 10314 ;; Hardware stack levels used: 1
 10315 ;; Hardware stack levels required when called: 14
 10316 ;; This function calls:
 10317 ;;		_printf
 10318 ;; This function is called by:
 10319 ;;		_main
 10320 ;; This function uses a non-reentrant model
 10321 ;;
 10322                           
 10323     1AC8                     _printOut:	
 10324                           ;psect for function _printOut
 10325                           
 10326     1AC8                     l6292:	
 10327                           ;incstack = 0
 10328                           ; Regs used in _printOut: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 10329                           
 10330                           
 10331                           ;UART.c: 92:     printf(str);
 10332     1AC8  0021               	movlb	1	; select bank1
 10333     1AC9  0869               	movf	printOut@str^(0+128),w
 10334     1ACA  00E2               	movwf	printf@fmt^(0+128)
 10335     1ACB  3001               	movlw	1
 10336     1ACC  00E3               	movwf	(printf@fmt+1)^(0+128)
 10337     1ACD  319C  2418  319A   	fcall	_printf
 10338     1AD0                     l931:
 10339     1AD0  0008               	return
 10340     1AD1                     __end_of_printOut:
 10341                           
 10342                           	psect	text13
 10343     14E0                     __ptext13:	
 10344 ;; *************** function _printLogs *****************
 10345 ;; Defined at:
 10346 ;;		line 76 in file "UART.c"
 10347 ;; Parameters:    Size  Location     Type
 10348 ;;		None
 10349 ;; Auto vars:     Size  Location     Type
 10350 ;;		None
 10351 ;; Return value:  Size  Location     Type
 10352 ;;                  1    wreg      void 
 10353 ;; Registers used:
 10354 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 10355 ;; Tracked objects:
 10356 ;;		On entry : 0/0
 10357 ;;		On exit  : 0/0
 10358 ;;		Unchanged: 0/0
 10359 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10360 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10361 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10362 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10363 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10364 ;;Total ram usage:        0 bytes
 10365 ;; Hardware stack levels used: 1
 10366 ;; Hardware stack levels required when called: 15
 10367 ;; This function calls:
 10368 ;;		_getDutycycle
 10369 ;;		_getHoogtesensor
 10370 ;;		_getKi
 10371 ;;		_getKp
 10372 ;;		_getPomphoogte
 10373 ;;		_getSetpoint
 10374 ;;		_printFloat
 10375 ;;		_printf
 10376 ;; This function is called by:
 10377 ;;		_main
 10378 ;; This function uses a non-reentrant model
 10379 ;;
 10380                           
 10381     14E0                     _printLogs:	
 10382                           ;psect for function _printLogs
 10383                           
 10384     14E0                     l6276:	
 10385                           ;incstack = 0
 10386                           ; Regs used in _printLogs: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 10387                           
 10388                           
 10389                           ;UART.c: 78:     if (mustPrintLogs) {
 10390     14E0  0020               	movlb	0	; select bank0
 10391     14E1  086D               	movf	_mustPrintLogs,w
 10392     14E2  1903               	btfsc	3,2
 10393     14E3  2CE5               	goto	u7571
 10394     14E4  2CE6               	goto	u7570
 10395     14E5                     u7571:
 10396     14E5  2D6A               	goto	l928
 10397     14E6                     u7570:
 10398     14E6                     l6278:
 10399                           
 10400                           ;UART.c: 79:         printf("hoogte: %u", getHoogtesensor());
 10401     14E6  30E5               	movlw	low (STR_4| (0+32768))
 10402     14E7  0021               	movlb	1	; select bank1
 10403     14E8  00E2               	movwf	printf@fmt^(0+128)
 10404     14E9  3098               	movlw	high (STR_4| (0+32768))
 10405     14EA  00E3               	movwf	(printf@fmt^(0+128)+1)
 10406     14EB  319A  2292  3194   	fcall	_getHoogtesensor
 10407     14EE  0021               	movlb	1	; select bank1
 10408     14EF  0821               	movf	(?_getHoogtesensor+1)^(0+128),w
 10409     14F0  00E5               	movwf	((?_printf+1)^(0+128)+2)
 10410     14F1  0820               	movf	?_getHoogtesensor^(0+128),w
 10411     14F2  00E4               	movwf	(?_printf^(0+128)+2)
 10412     14F3  319C  2418  3194   	fcall	_printf
 10413                           
 10414                           ;UART.c: 80:         printf(", setpoint: %u", getSetpoint());
 10415     14F6  30AE               	movlw	low (STR_5| (0+32768))
 10416     14F7  0021               	movlb	1	; select bank1
 10417     14F8  00E2               	movwf	printf@fmt^(0+128)
 10418     14F9  3098               	movlw	high (STR_5| (0+32768))
 10419     14FA  00E3               	movwf	(printf@fmt^(0+128)+1)
 10420     14FB  319A  229B  3194   	fcall	_getSetpoint
 10421     14FE  0021               	movlb	1	; select bank1
 10422     14FF  0821               	movf	(?_getSetpoint+1)^(0+128),w
 10423     1500  00E5               	movwf	((?_printf+1)^(0+128)+2)
 10424     1501  0820               	movf	?_getSetpoint^(0+128),w
 10425     1502  00E4               	movwf	(?_printf^(0+128)+2)
 10426     1503  319C  2418  3194   	fcall	_printf
 10427                           
 10428                           ;UART.c: 81:         printf(", duty cycle: %u", getDutycycle());
 10429     1506  308E               	movlw	low (STR_6| (0+32768))
 10430     1507  0021               	movlb	1	; select bank1
 10431     1508  00E2               	movwf	printf@fmt^(0+128)
 10432     1509  3098               	movlw	high (STR_6| (0+32768))
 10433     150A  00E3               	movwf	(printf@fmt^(0+128)+1)
 10434     150B  319A  22AD  3194   	fcall	_getDutycycle
 10435     150E  0021               	movlb	1	; select bank1
 10436     150F  0821               	movf	(?_getDutycycle+1)^(0+128),w
 10437     1510  00E5               	movwf	((?_printf+1)^(0+128)+2)
 10438     1511  0820               	movf	?_getDutycycle^(0+128),w
 10439     1512  00E4               	movwf	(?_printf^(0+128)+2)
 10440     1513  319C  2418  3194   	fcall	_printf
 10441                           
 10442                           ;UART.c: 84:         printf(", kp: "); printFloat(getKp());
 10443     1516  3014               	movlw	low (STR_7| (0+32768))
 10444     1517  0021               	movlb	1	; select bank1
 10445     1518  00E2               	movwf	printf@fmt^(0+128)
 10446     1519  3099               	movlw	high (STR_7| (0+32768))
 10447     151A  00E3               	movwf	(printf@fmt^(0+128)+1)
 10448     151B  319C  2418  3194   	fcall	_printf
 10449     151E  319B  23E4  3194   	fcall	_getKp
 10450     1521  0021               	movlb	1	; select bank1
 10451     1522  0823               	movf	(?_getKp+3)^(0+128),w
 10452     1523  0022               	movlb	2	; select bank2
 10453     1524  00A3               	movwf	(printFloat@number+3)^(0+256)
 10454     1525  0021               	movlb	1	; select bank1
 10455     1526  0822               	movf	(?_getKp+2)^(0+128),w
 10456     1527  0022               	movlb	2	; select bank2
 10457     1528  00A2               	movwf	(printFloat@number+2)^(0+256)
 10458     1529  0021               	movlb	1	; select bank1
 10459     152A  0821               	movf	(?_getKp+1)^(0+128),w
 10460     152B  0022               	movlb	2	; select bank2
 10461     152C  00A1               	movwf	(printFloat@number+1)^(0+256)
 10462     152D  0021               	movlb	1	; select bank1
 10463     152E  0820               	movf	?_getKp^(0+128),w
 10464     152F  0022               	movlb	2	; select bank2
 10465     1530  00A0               	movwf	printFloat@number^(0+256)
 10466     1531  3194  245A  3194   	fcall	_printFloat
 10467                           
 10468                           ;UART.c: 85:         printf(", ki: "); printFloat(getKi());
 10469     1534  300D               	movlw	low (STR_8| (0+32768))
 10470     1535  0021               	movlb	1	; select bank1
 10471     1536  00E2               	movwf	printf@fmt^(0+128)
 10472     1537  3099               	movlw	high (STR_8| (0+32768))
 10473     1538  00E3               	movwf	(printf@fmt^(0+128)+1)
 10474     1539  319C  2418  3194   	fcall	_printf
 10475     153C  319B  23D3  3194   	fcall	_getKi
 10476     153F  0021               	movlb	1	; select bank1
 10477     1540  0823               	movf	(?_getKi+3)^(0+128),w
 10478     1541  0022               	movlb	2	; select bank2
 10479     1542  00A3               	movwf	(printFloat@number+3)^(0+256)
 10480     1543  0021               	movlb	1	; select bank1
 10481     1544  0822               	movf	(?_getKi+2)^(0+128),w
 10482     1545  0022               	movlb	2	; select bank2
 10483     1546  00A2               	movwf	(printFloat@number+2)^(0+256)
 10484     1547  0021               	movlb	1	; select bank1
 10485     1548  0821               	movf	(?_getKi+1)^(0+128),w
 10486     1549  0022               	movlb	2	; select bank2
 10487     154A  00A1               	movwf	(printFloat@number+1)^(0+256)
 10488     154B  0021               	movlb	1	; select bank1
 10489     154C  0820               	movf	?_getKi^(0+128),w
 10490     154D  0022               	movlb	2	; select bank2
 10491     154E  00A0               	movwf	printFloat@number^(0+256)
 10492     154F  3194  245A  3194   	fcall	_printFloat
 10493                           
 10494                           ;UART.c: 86:         printf(", pomp: %u", getPomphoogte());
 10495     1552  30F0               	movlw	low (STR_9| (0+32768))
 10496     1553  0021               	movlb	1	; select bank1
 10497     1554  00E2               	movwf	printf@fmt^(0+128)
 10498     1555  3098               	movlw	high (STR_9| (0+32768))
 10499     1556  00E3               	movwf	(printf@fmt^(0+128)+1)
 10500     1557  319A  22B6  3194   	fcall	_getPomphoogte
 10501     155A  0021               	movlb	1	; select bank1
 10502     155B  0821               	movf	(?_getPomphoogte+1)^(0+128),w
 10503     155C  00E5               	movwf	((?_printf+1)^(0+128)+2)
 10504     155D  0820               	movf	?_getPomphoogte^(0+128),w
 10505     155E  00E4               	movwf	(?_printf^(0+128)+2)
 10506     155F  319C  2418  3194   	fcall	_printf
 10507                           
 10508                           ;UART.c: 87:         printf("\r\n");
 10509     1562  30AB               	movlw	low ((STR_14+12)| (0+32768))
 10510     1563  0021               	movlb	1	; select bank1
 10511     1564  00E2               	movwf	printf@fmt^(0+128)
 10512     1565  3098               	movlw	high ((STR_14+12)| (0+32768))
 10513     1566  00E3               	movwf	(printf@fmt^(0+128)+1)
 10514     1567  319C  2418  3194   	fcall	_printf
 10515     156A                     l928:
 10516     156A  0008               	return
 10517     156B                     __end_of_printLogs:
 10518                           
 10519                           	psect	text14
 10520     145A                     __ptext14:	
 10521 ;; *************** function _printFloat *****************
 10522 ;; Defined at:
 10523 ;;		line 13 in file "UART.c"
 10524 ;; Parameters:    Size  Location     Type
 10525 ;;  number          4    0[BANK2 ] float 
 10526 ;; Auto vars:     Size  Location     Type
 10527 ;;  fractional_p    2    4[BANK2 ] unsigned short 
 10528 ;;  integer_part    1    6[BANK2 ] char 
 10529 ;; Return value:  Size  Location     Type
 10530 ;;                  1    wreg      void 
 10531 ;; Registers used:
 10532 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 10533 ;; Tracked objects:
 10534 ;;		On entry : 0/0
 10535 ;;		On exit  : 0/0
 10536 ;;		Unchanged: 0/0
 10537 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10538 ;;      Params:         0       0       0       4       0       0       0       0       0       0       0       0       
      +0       0
 10539 ;;      Locals:         0       0       0       3       0       0       0       0       0       0       0       0       
      +0       0
 10540 ;;      Temps:          0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0
 10541 ;;      Totals:         0       0       2       7       0       0       0       0       0       0       0       0       
      +0       0
 10542 ;;Total ram usage:        9 bytes
 10543 ;; Hardware stack levels used: 1
 10544 ;; Hardware stack levels required when called: 14
 10545 ;; This function calls:
 10546 ;;		___flmul
 10547 ;;		___flsub
 10548 ;;		___fltol
 10549 ;;		___xxtofl
 10550 ;;		_printf
 10551 ;; This function is called by:
 10552 ;;		_printLogs
 10553 ;; This function uses a non-reentrant model
 10554 ;;
 10555                           
 10556     145A                     _printFloat:	
 10557                           ;psect for function _printFloat
 10558                           
 10559     145A                     l5996:	
 10560                           ;incstack = 0
 10561                           ; Regs used in _printFloat: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 10562                           
 10563                           
 10564                           ;UART.c: 14:     int8_t integer_part = (int8_t) number;
 10565     145A  0022               	movlb	2	; select bank2
 10566     145B  0823               	movf	(printFloat@number+3)^(0+256),w
 10567     145C  0021               	movlb	1	; select bank1
 10568     145D  00E7               	movwf	(___fltol@f1+3)^(0+128)
 10569     145E  0022               	movlb	2	; select bank2
 10570     145F  0822               	movf	(printFloat@number+2)^(0+256),w
 10571     1460  0021               	movlb	1	; select bank1
 10572     1461  00E6               	movwf	(___fltol@f1+2)^(0+128)
 10573     1462  0022               	movlb	2	; select bank2
 10574     1463  0821               	movf	(printFloat@number+1)^(0+256),w
 10575     1464  0021               	movlb	1	; select bank1
 10576     1465  00E5               	movwf	(___fltol@f1+1)^(0+128)
 10577     1466  0022               	movlb	2	; select bank2
 10578     1467  0820               	movf	printFloat@number^(0+256),w
 10579     1468  0021               	movlb	1	; select bank1
 10580     1469  00E4               	movwf	___fltol@f1^(0+128)
 10581     146A  3192  2289  3194   	fcall	___fltol
 10582     146D  0021               	movlb	1	; select bank1
 10583     146E  0864               	movf	?___fltol^(0+128),w
 10584     146F  0022               	movlb	2	; select bank2
 10585     1470  00A6               	movwf	printFloat@integer_part^(0+256)
 10586                           
 10587                           ;UART.c: 15:     uint16_t fractional_part = (uint16_t) ((number - integer_part) * 1000);
 10588     1471  0823               	movf	(printFloat@number+3)^(0+256),w
 10589     1472  0021               	movlb	1	; select bank1
 10590     1473  00C9               	movwf	(___flsub@b+3)^(0+128)
 10591     1474  0022               	movlb	2	; select bank2
 10592     1475  0822               	movf	(printFloat@number+2)^(0+256),w
 10593     1476  0021               	movlb	1	; select bank1
 10594     1477  00C8               	movwf	(___flsub@b+2)^(0+128)
 10595     1478  0022               	movlb	2	; select bank2
 10596     1479  0821               	movf	(printFloat@number+1)^(0+256),w
 10597     147A  0021               	movlb	1	; select bank1
 10598     147B  00C7               	movwf	(___flsub@b+1)^(0+128)
 10599     147C  0022               	movlb	2	; select bank2
 10600     147D  0820               	movf	printFloat@number^(0+256),w
 10601     147E  0021               	movlb	1	; select bank1
 10602     147F  00C6               	movwf	___flsub@b^(0+128)
 10603     1480  0022               	movlb	2	; select bank2
 10604     1481  0826               	movf	printFloat@integer_part^(0+256),w
 10605     1482  0021               	movlb	1	; select bank1
 10606     1483  00EE               	movwf	??_printFloat^(0+128)
 10607     1484  01EF               	clrf	(??_printFloat^(0+128)+1)
 10608     1485  1BEE               	btfsc	??_printFloat^(0+128),7
 10609     1486  03EF               	decf	(??_printFloat^(0+128)+1),f
 10610     1487  086E               	movf	??_printFloat^(0+128),w
 10611     1488  00A0               	movwf	___xxtofl@val^(0+128)
 10612     1489  086F               	movf	(??_printFloat+1)^(0+128),w
 10613     148A  00A1               	movwf	(___xxtofl@val+1)^(0+128)
 10614     148B  0D89               	rlf	9,f
 10615     148C  3B89               	subwfb	9,f
 10616     148D  0989               	comf	9,f
 10617     148E  00A2               	movwf	(___xxtofl@val+2)^(0+128)
 10618     148F  00A3               	movwf	(___xxtofl@val+3)^(0+128)
 10619     1490  3001               	movlw	1
 10620     1491  3196  26B0  3194   	fcall	___xxtofl
 10621     1494  0021               	movlb	1	; select bank1
 10622     1495  0823               	movf	(?___xxtofl+3)^(0+128),w
 10623     1496  00C5               	movwf	(___flsub@a+3)^(0+128)
 10624     1497  0822               	movf	(?___xxtofl+2)^(0+128),w
 10625     1498  00C4               	movwf	(___flsub@a+2)^(0+128)
 10626     1499  0821               	movf	(?___xxtofl+1)^(0+128),w
 10627     149A  00C3               	movwf	(___flsub@a+1)^(0+128)
 10628     149B  0820               	movf	?___xxtofl^(0+128),w
 10629     149C  00C2               	movwf	___flsub@a^(0+128)
 10630     149D  319D  251C  3194   	fcall	___flsub
 10631     14A0  0021               	movlb	1	; select bank1
 10632     14A1  0845               	movf	(?___flsub+3)^(0+128),w
 10633     14A2  00D1               	movwf	(___flmul@a+3)^(0+128)
 10634     14A3  0844               	movf	(?___flsub+2)^(0+128),w
 10635     14A4  00D0               	movwf	(___flmul@a+2)^(0+128)
 10636     14A5  0843               	movf	(?___flsub+1)^(0+128),w
 10637     14A6  00CF               	movwf	(___flmul@a+1)^(0+128)
 10638     14A7  0842               	movf	?___flsub^(0+128),w
 10639     14A8  00CE               	movwf	___flmul@a^(0+128)
 10640     14A9  3044               	movlw	68
 10641     14AA  00CD               	movwf	(___flmul@b+3)^(0+128)
 10642     14AB  307A               	movlw	122
 10643     14AC  00CC               	movwf	(___flmul@b+2)^(0+128)
 10644     14AD  3000               	movlw	0
 10645     14AE  00CB               	movwf	(___flmul@b+1)^(0+128)
 10646     14AF  3000               	movlw	0
 10647     14B0  00CA               	movwf	___flmul@b^(0+128)
 10648     14B1  3180  208A  3194   	fcall	___flmul
 10649     14B4  0021               	movlb	1	; select bank1
 10650     14B5  084D               	movf	(?___flmul+3)^(0+128),w
 10651     14B6  00E7               	movwf	(___fltol@f1+3)^(0+128)
 10652     14B7  084C               	movf	(?___flmul+2)^(0+128),w
 10653     14B8  00E6               	movwf	(___fltol@f1+2)^(0+128)
 10654     14B9  084B               	movf	(?___flmul+1)^(0+128),w
 10655     14BA  00E5               	movwf	(___fltol@f1+1)^(0+128)
 10656     14BB  084A               	movf	?___flmul^(0+128),w
 10657     14BC  00E4               	movwf	___fltol@f1^(0+128)
 10658     14BD  3192  2289  3194   	fcall	___fltol
 10659     14C0  0021               	movlb	1	; select bank1
 10660     14C1  0865               	movf	(?___fltol+1)^(0+128),w
 10661     14C2  0022               	movlb	2	; select bank2
 10662     14C3  00A5               	movwf	(printFloat@fractional_part+1)^(0+256)
 10663     14C4  0021               	movlb	1	; select bank1
 10664     14C5  0864               	movf	?___fltol^(0+128),w
 10665     14C6  0022               	movlb	2	; select bank2
 10666     14C7  00A4               	movwf	printFloat@fractional_part^(0+256)
 10667     14C8                     l5998:
 10668                           
 10669                           ;UART.c: 16:     printf("%i.%03u", integer_part, fractional_part);
 10670     14C8  3005               	movlw	low (STR_2| (0+32768))
 10671     14C9  0021               	movlb	1	; select bank1
 10672     14CA  00E2               	movwf	printf@fmt^(0+128)
 10673     14CB  3099               	movlw	high (STR_2| (0+32768))
 10674     14CC  00E3               	movwf	(printf@fmt^(0+128)+1)
 10675     14CD  0022               	movlb	2	; select bank2
 10676     14CE  0826               	movf	printFloat@integer_part^(0+256),w
 10677     14CF  0021               	movlb	1	; select bank1
 10678     14D0  00E4               	movwf	(?_printf^(0+128)+2)
 10679     14D1  01E5               	clrf	((?_printf+1)^(0+128)+2)
 10680     14D2  1BE4               	btfsc	(?_printf^(0+128)+2),7
 10681     14D3  03E5               	decf	((?_printf+1)^(0+128)+2),f
 10682     14D4  0022               	movlb	2	; select bank2
 10683     14D5  0825               	movf	(printFloat@fractional_part+1)^(0+256),w
 10684     14D6  0021               	movlb	1	; select bank1
 10685     14D7  00E7               	movwf	((?_printf+1)^(0+128)+4)
 10686     14D8  0022               	movlb	2	; select bank2
 10687     14D9  0824               	movf	printFloat@fractional_part^(0+256),w
 10688     14DA  0021               	movlb	1	; select bank1
 10689     14DB  00E6               	movwf	(?_printf^(0+128)+4)
 10690     14DC  319C  2418  3194   	fcall	_printf
 10691     14DF                     l893:
 10692     14DF  0008               	return
 10693     14E0                     __end_of_printFloat:
 10694                           
 10695                           	psect	text15
 10696     1C18                     __ptext15:	
 10697 ;; *************** function _printf *****************
 10698 ;; Defined at:
 10699 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\printf.c"
 10700 ;; Parameters:    Size  Location     Type
 10701 ;;  fmt             2   66[BANK1 ] PTR const unsigned char 
 10702 ;;		 -> STR_15(17), STR_14(15), STR_13(13), STR_12(13), 
 10703 ;;		 -> STR_11(25), STR_10(3), STR_9(11), STR_8(7), 
 10704 ;;		 -> STR_7(7), STR_6(17), STR_5(15), STR_4(11), 
 10705 ;;		 -> STR_3(24), STR_2(8), main@str(20), 
 10706 ;; Auto vars:     Size  Location     Type
 10707 ;;  ret             2    0        int 
 10708 ;;  ap              1   72[BANK1 ] PTR void [1]
 10709 ;;		 -> ?_printf(2), ?_sprintf(2), 
 10710 ;; Return value:  Size  Location     Type
 10711 ;;                  2   66[BANK1 ] int 
 10712 ;; Registers used:
 10713 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 10714 ;; Tracked objects:
 10715 ;;		On entry : 0/0
 10716 ;;		On exit  : 0/0
 10717 ;;		Unchanged: 0/0
 10718 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10719 ;;      Params:         0       0       6       0       0       0       0       0       0       0       0       0       
      +0       0
 10720 ;;      Locals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0
 10721 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10722 ;;      Totals:         0       0       7       0       0       0       0       0       0       0       0       0       
      +0       0
 10723 ;;Total ram usage:        7 bytes
 10724 ;; Hardware stack levels used: 1
 10725 ;; Hardware stack levels required when called: 13
 10726 ;; This function calls:
 10727 ;;		_vfprintf
 10728 ;; This function is called by:
 10729 ;;		_printFloat
 10730 ;;		_readLine
 10731 ;;		_printLogs
 10732 ;;		_printOut
 10733 ;;		_uartHandler
 10734 ;; This function uses a non-reentrant model
 10735 ;;
 10736                           
 10737     1C18                     _printf:	
 10738                           ;psect for function _printf
 10739                           
 10740     1C18                     l5162:	
 10741                           ;incstack = 0
 10742                           ; Regs used in _printf: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 10743                           
 10744     1C18  30E4               	movlw	(low ((?_printf| 0+2)))& (0+255)
 10745     1C19  0021               	movlb	1	; select bank1
 10746     1C1A  00E8               	movwf	printf@ap^(0+128)
 10747     1C1B                     l5164:
 10748     1C1B  3000               	movlw	0
 10749     1C1C  00D9               	movwf	vfprintf@fp^(0+128)
 10750     1C1D  00DA               	movwf	(vfprintf@fp+1)^(0+128)
 10751     1C1E  0863               	movf	(printf@fmt+1)^(0+128),w
 10752     1C1F  00DC               	movwf	(vfprintf@fmt+1)^(0+128)
 10753     1C20  0862               	movf	printf@fmt^(0+128),w
 10754     1C21  00DB               	movwf	vfprintf@fmt^(0+128)
 10755     1C22  30E8               	movlw	low printf@ap
 10756     1C23  00DD               	movwf	vfprintf@ap^(0+128)
 10757     1C24  3000               	movlw	high printf@ap
 10758     1C25  00DE               	movwf	(vfprintf@ap+1)^(0+128)
 10759     1C26  319E  2637  319C   	fcall	_vfprintf
 10760     1C29                     l1812:
 10761     1C29  0008               	return
 10762     1C2A                     __end_of_printf:
 10763                           
 10764                           	psect	text16
 10765     1E37                     __ptext16:	
 10766 ;; *************** function _vfprintf *****************
 10767 ;; Defined at:
 10768 ;;		line 1817 in file "C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c"
 10769 ;; Parameters:    Size  Location     Type
 10770 ;;  fp              2   57[BANK1 ] PTR struct _IO_FILE
 10771 ;;		 -> sprintf@f(11), NULL(0), 
 10772 ;;  fmt             2   59[BANK1 ] PTR const unsigned char 
 10773 ;;		 -> STR_15(17), STR_14(15), STR_13(13), STR_12(13), 
 10774 ;;		 -> STR_11(25), STR_10(3), STR_9(11), STR_8(7), 
 10775 ;;		 -> STR_7(7), STR_6(17), STR_5(15), STR_4(11), 
 10776 ;;		 -> STR_3(24), STR_2(8), STR_1(14), main@str(20), 
 10777 ;;  ap              2   61[BANK1 ] PTR PTR void 
 10778 ;;		 -> printf@ap(1), sprintf@ap(1), 
 10779 ;; Auto vars:     Size  Location     Type
 10780 ;;  cfmt            2   64[BANK1 ] PTR unsigned char 
 10781 ;;		 -> STR_15(17), STR_14(15), STR_13(13), STR_12(13), 
 10782 ;;		 -> STR_11(25), STR_10(3), STR_9(11), STR_8(7), 
 10783 ;;		 -> STR_7(7), STR_6(17), STR_5(15), STR_4(11), 
 10784 ;;		 -> STR_3(24), STR_2(8), STR_1(14), main@str(20), 
 10785 ;; Return value:  Size  Location     Type
 10786 ;;                  2   57[BANK1 ] int 
 10787 ;; Registers used:
 10788 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 10789 ;; Tracked objects:
 10790 ;;		On entry : 0/0
 10791 ;;		On exit  : 0/0
 10792 ;;		Unchanged: 0/0
 10793 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10794 ;;      Params:         0       0       6       0       0       0       0       0       0       0       0       0       
      +0       0
 10795 ;;      Locals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0
 10796 ;;      Temps:          0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0
 10797 ;;      Totals:         0       0       9       0       0       0       0       0       0       0       0       0       
      +0       0
 10798 ;;Total ram usage:        9 bytes
 10799 ;; Hardware stack levels used: 1
 10800 ;; Hardware stack levels required when called: 12
 10801 ;; This function calls:
 10802 ;;		_vfpfcnvrt
 10803 ;; This function is called by:
 10804 ;;		_sprintf
 10805 ;;		_printf
 10806 ;; This function uses a non-reentrant model
 10807 ;;
 10808                           
 10809     1E37                     _vfprintf:	
 10810                           ;psect for function _vfprintf
 10811                           
 10812     1E37                     l5094:	
 10813                           ;incstack = 0
 10814                           ; Regs used in _vfprintf: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 10815                           
 10816                           
 10817                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1817: int vfprint
      +                          f(FILE *fp, const char *fmt, va_list ap);C:\Program Files\Microchip\xc8\v3.00\pic\source
      +                          s\c99\common\doprnt.c: 1818: {;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\comm
      +                          on\doprnt.c: 1820:     char *cfmt;;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\
      +                          common\doprnt.c: 1822:     cfmt = (char *)fmt;
 10818     1E37  0021               	movlb	1	; select bank1
 10819     1E38  085C               	movf	(vfprintf@fmt+1)^(0+128),w
 10820     1E39  00E1               	movwf	(vfprintf@cfmt+1)^(0+128)
 10821     1E3A  085B               	movf	vfprintf@fmt^(0+128),w
 10822     1E3B  00E0               	movwf	vfprintf@cfmt^(0+128)
 10823     1E3C                     l5096:
 10824                           
 10825                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1824:     nout = 
      +                          0;
 10826     1E3C  0022               	movlb	2	; select bank2
 10827     1E3D  01CF               	clrf	_nout^(0+256)
 10828     1E3E  01D0               	clrf	(_nout+1)^(0+256)
 10829                           
 10830                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1826:     while (
      +                          *cfmt) {
 10831     1E3F  2E55               	goto	l5100
 10832     1E40                     l5098:
 10833                           
 10834                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1828:         nou
      +                          t +=
 10835     1E40  085A               	movf	(vfprintf@fp+1)^(0+128),w
 10836     1E41  00CA               	movwf	(vfpfcnvrt@fp+1)^(0+128)
 10837     1E42  0859               	movf	vfprintf@fp^(0+128),w
 10838     1E43  00C9               	movwf	vfpfcnvrt@fp^(0+128)
 10839     1E44  30E0               	movlw	(low (vfprintf@cfmt| 0))& (0+255)
 10840     1E45  00CB               	movwf	vfpfcnvrt@fmt^(0+128)
 10841     1E46  085E               	movf	(vfprintf@ap+1)^(0+128),w
 10842     1E47  00CD               	movwf	(vfpfcnvrt@ap+1)^(0+128)
 10843     1E48  085D               	movf	vfprintf@ap^(0+128),w
 10844     1E49  00CC               	movwf	vfpfcnvrt@ap^(0+128)
 10845     1E4A  318A  22DC  319E   	fcall	_vfpfcnvrt
 10846     1E4D  0021               	movlb	1	; select bank1
 10847     1E4E  0849               	movf	?_vfpfcnvrt^(0+128),w
 10848     1E4F  0022               	movlb	2	; select bank2
 10849     1E50  07CF               	addwf	_nout^(0+256),f
 10850     1E51  0021               	movlb	1	; select bank1
 10851     1E52  084A               	movf	(?_vfpfcnvrt+1)^(0+128),w
 10852     1E53  0022               	movlb	2	; select bank2
 10853     1E54  3DD0               	addwfc	(_nout+1)^(0+256),f
 10854     1E55                     l5100:
 10855                           
 10856                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1826:     while (
      +                          *cfmt) {
 10857     1E55  0021               	movlb	1	; select bank1
 10858     1E56  0860               	movf	vfprintf@cfmt^(0+128),w
 10859     1E57  0084               	movwf	4
 10860     1E58  0861               	movf	(vfprintf@cfmt+1)^(0+128),w
 10861     1E59  0085               	movwf	5
 10862     1E5A  0012               	moviw fsr0++
 10863     1E5B  1D03               	btfss	3,2
 10864     1E5C  2E5E               	goto	u5731
 10865     1E5D  2E5F               	goto	u5730
 10866     1E5E                     u5731:
 10867     1E5E  2E40               	goto	l5098
 10868     1E5F                     u5730:
 10869     1E5F                     l5102:
 10870                           
 10871                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1835:  return 0;
 10872     1E5F  01D9               	clrf	?_vfprintf^(0+128)
 10873     1E60  01DA               	clrf	(?_vfprintf+1)^(0+128)
 10874     1E61                     l1778:
 10875     1E61  0008               	return
 10876     1E62                     __end_of_vfprintf:
 10877                           
 10878                           	psect	text17
 10879     0ADC                     __ptext17:	
 10880 ;; *************** function _vfpfcnvrt *****************
 10881 ;; Defined at:
 10882 ;;		line 1177 in file "C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c"
 10883 ;; Parameters:    Size  Location     Type
 10884 ;;  fp              2   41[BANK1 ] PTR struct _IO_FILE
 10885 ;;		 -> sprintf@f(11), NULL(0), 
 10886 ;;  fmt             1   43[BANK1 ] PTR PTR unsigned char 
 10887 ;;		 -> vfprintf@cfmt(2), 
 10888 ;;  ap              2   44[BANK1 ] PTR PTR void 
 10889 ;;		 -> printf@ap(1), sprintf@ap(1), 
 10890 ;; Auto vars:     Size  Location     Type
 10891 ;;  convarg         4   51[BANK1 ] struct .
 10892 ;;  cp              2   55[BANK1 ] PTR unsigned char 
 10893 ;;		 -> STR_15(17), STR_14(15), STR_13(13), STR_12(13), 
 10894 ;;		 -> STR_11(25), STR_10(3), STR_9(11), STR_8(7), 
 10895 ;;		 -> STR_7(7), STR_6(17), STR_5(15), STR_4(11), 
 10896 ;;		 -> STR_3(24), STR_2(8), STR_1(14), main@str(20), 
 10897 ;;  done            1   50[BANK1 ] _Bool 
 10898 ;;  c               1    0        unsigned char 
 10899 ;; Return value:  Size  Location     Type
 10900 ;;                  2   41[BANK1 ] int 
 10901 ;; Registers used:
 10902 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 10903 ;; Tracked objects:
 10904 ;;		On entry : 0/0
 10905 ;;		On exit  : 0/0
 10906 ;;		Unchanged: 0/0
 10907 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10908 ;;      Params:         0       0       5       0       0       0       0       0       0       0       0       0       
      +0       0
 10909 ;;      Locals:         0       0       7       0       0       0       0       0       0       0       0       0       
      +0       0
 10910 ;;      Temps:          0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0
 10911 ;;      Totals:         0       0      16       0       0       0       0       0       0       0       0       0       
      +0       0
 10912 ;;Total ram usage:       16 bytes
 10913 ;; Hardware stack levels used: 1
 10914 ;; Hardware stack levels required when called: 11
 10915 ;; This function calls:
 10916 ;;		_dtoa
 10917 ;;		_fputc
 10918 ;;		_read_prec_or_width
 10919 ;;		_utoa
 10920 ;; This function is called by:
 10921 ;;		_vfprintf
 10922 ;; This function uses a non-reentrant model
 10923 ;;
 10924                           
 10925     0ADC                     _vfpfcnvrt:	
 10926                           ;psect for function _vfpfcnvrt
 10927                           
 10928     0ADC                     l4988:	
 10929                           ;incstack = 0
 10930                           ; Regs used in _vfpfcnvrt: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 10931                           
 10932                           
 10933                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1177: vfpfcnvrt(F
      +                          ILE *fp, char *fmt[], va_list ap);C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\c
      +                          ommon\doprnt.c: 1178: {;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\dopr
      +                          nt.c: 1179:     char c, *cp;;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common
      +                          \doprnt.c: 1180:     _Bool done;;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\co
      +                          mmon\doprnt.c: 1188:  } convarg;;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\co
      +                          mmon\doprnt.c: 1201:     if ((*fmt)[0] == '%') {
 10934     0ADC  0021               	movlb	1	; select bank1
 10935     0ADD  084B               	movf	vfpfcnvrt@fmt^(0+128),w
 10936     0ADE  0086               	movwf	6
 10937     0ADF  0187               	clrf	7
 10938     0AE0  3F40               	moviw [0]fsr1
 10939     0AE1  00CE               	movwf	??_vfpfcnvrt^(0+128)
 10940     0AE2  3F41               	moviw [1]fsr1
 10941     0AE3  00CF               	movwf	(??_vfpfcnvrt^(0+128)+1)
 10942     0AE4  084E               	movf	??_vfpfcnvrt^(0+128),w
 10943     0AE5  0084               	movwf	4
 10944     0AE6  084F               	movf	(??_vfpfcnvrt+1)^(0+128),w
 10945     0AE7  0085               	movwf	5
 10946     0AE8  0012               	moviw fsr0++
 10947     0AE9  3A25               	xorlw	37
 10948     0AEA  1D03               	btfss	3,2
 10949     0AEB  2AED               	goto	u5651
 10950     0AEC  2AEE               	goto	u5650
 10951     0AED                     u5651:
 10952     0AED  2C2C               	goto	l5068
 10953     0AEE                     u5650:
 10954     0AEE                     l4990:
 10955                           
 10956                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1202:         ++*
      +                          fmt;
 10957     0AEE  084B               	movf	vfpfcnvrt@fmt^(0+128),w
 10958     0AEF  0086               	movwf	6
 10959     0AF0  0187               	clrf	7
 10960     0AF1  3001               	movlw	1
 10961     0AF2  0781               	addwf	1,f
 10962     0AF3  3141               	addfsr 1,1
 10963     0AF4  1803               	skipnc
 10964     0AF5  0A81               	incf	1,f
 10965     0AF6                     l4992:
 10966                           
 10967                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1204:         fla
      +                          gs = width = 0;
 10968     0AF6  0020               	movlb	0	; select bank0
 10969     0AF7  01D5               	clrf	_width
 10970     0AF8  01D6               	clrf	_width+1
 10971     0AF9  3000               	movlw	0
 10972     0AFA  00E3               	movwf	_flags
 10973     0AFB                     l4994:
 10974                           
 10975                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1205:         pre
      +                          c = -1;
 10976     0AFB  30FF               	movlw	255
 10977     0AFC  0022               	movlb	2	; select bank2
 10978     0AFD  00D1               	movwf	_prec^(0+256)
 10979     0AFE  30FF               	movlw	255
 10980     0AFF  00D2               	movwf	(_prec^(0+256)+1)
 10981     0B00                     l4996:
 10982                           
 10983                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1209:         don
      +                          e = 0;
 10984     0B00  0021               	movlb	1	; select bank1
 10985     0B01  01D2               	clrf	vfpfcnvrt@done^(0+128)
 10986                           
 10987                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1210:         whi
      +                          le (!done) {
 10988     0B02  2B22               	goto	l5004
 10989     0B03                     l1756:	
 10990                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1219:            
      +                               case '0' :
 10991                           
 10992                           
 10993                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1220:            
      +                                   flags |= (1 << 1);
 10994     0B03  0020               	movlb	0	; select bank0
 10995     0B04  14E3               	bsf	_flags,1
 10996     0B05                     l4998:
 10997                           
 10998                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1221:            
      +                                   ++*fmt;
 10999     0B05  0021               	movlb	1	; select bank1
 11000     0B06  084B               	movf	vfpfcnvrt@fmt^(0+128),w
 11001     0B07  0086               	movwf	6
 11002     0B08  0187               	clrf	7
 11003     0B09  3001               	movlw	1
 11004     0B0A  0781               	addwf	1,f
 11005     0B0B  3141               	addfsr 1,1
 11006     0B0C  1803               	skipnc
 11007     0B0D  0A81               	incf	1,f
 11008                           
 11009                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1222:            
      +                                   break;
 11010     0B0E  2B22               	goto	l5004
 11011     0B0F                     l1758:	
 11012                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1242:            
      +                               default:
 11013                           
 11014                           
 11015                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1243:            
      +                                   done = 1;
 11016     0B0F  3001               	movlw	1
 11017     0B10  00D2               	movwf	vfpfcnvrt@done^(0+128)
 11018                           
 11019                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1244:            
      +                                   break;
 11020     0B11  2B22               	goto	l5004
 11021     0B12                     l5002:
 11022     0B12  084B               	movf	vfpfcnvrt@fmt^(0+128),w
 11023     0B13  0086               	movwf	6
 11024     0B14  0187               	clrf	7
 11025     0B15  3F40               	moviw [0]fsr1
 11026     0B16  00CE               	movwf	??_vfpfcnvrt^(0+128)
 11027     0B17  3F41               	moviw [1]fsr1
 11028     0B18  00CF               	movwf	(??_vfpfcnvrt^(0+128)+1)
 11029     0B19  084E               	movf	??_vfpfcnvrt^(0+128),w
 11030     0B1A  0084               	movwf	4
 11031     0B1B  084F               	movf	(??_vfpfcnvrt+1)^(0+128),w
 11032     0B1C  0085               	movwf	5
 11033     0B1D  0800               	movf	0,w	;code access
 11034                           
 11035                           ; Switch size 1, requested type "simple"
 11036                           ; Number of cases is 1, Range of values is 48 to 48
 11037                           ; switch strategies available:
 11038                           ; Name         Instructions Cycles
 11039                           ; simple_byte            4     3 (average)
 11040                           ; direct_byte           11     9 (fixed)
 11041                           ; jumptable            263     9 (fixed)
 11042                           ;	Chosen strategy is simple_byte
 11043     0B1E  3A30               	xorlw	48	; case 48
 11044     0B1F  1903               	skipnz
 11045     0B20  2B03               	goto	l1756
 11046     0B21  2B0F               	goto	l1758
 11047     0B22                     l5004:
 11048                           
 11049                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1210:         whi
      +                          le (!done) {
 11050     0B22  0852               	movf	vfpfcnvrt@done^(0+128),w
 11051     0B23  1903               	btfsc	3,2
 11052     0B24  2B26               	goto	u5661
 11053     0B25  2B27               	goto	u5660
 11054     0B26                     u5661:
 11055     0B26  2B12               	goto	l5002
 11056     0B27                     u5660:
 11057     0B27                     l5006:
 11058                           
 11059                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1256:   width = r
      +                          ead_prec_or_width(fmt, ap);
 11060     0B27  084B               	movf	vfpfcnvrt@fmt^(0+128),w
 11061     0B28  00A6               	movwf	read_prec_or_width@fmt^(0+128)
 11062     0B29  084D               	movf	(vfpfcnvrt@ap+1)^(0+128),w
 11063     0B2A  00A8               	movwf	(read_prec_or_width@ap+1)^(0+128)
 11064     0B2B  084C               	movf	vfpfcnvrt@ap^(0+128),w
 11065     0B2C  00A7               	movwf	read_prec_or_width@ap^(0+128)
 11066     0B2D  3191  215F  318A   	fcall	_read_prec_or_width
 11067     0B30  0021               	movlb	1	; select bank1
 11068     0B31  0827               	movf	(?_read_prec_or_width+1)^(0+128),w
 11069     0B32  0020               	movlb	0	; select bank0
 11070     0B33  00D6               	movwf	_width+1
 11071     0B34  0021               	movlb	1	; select bank1
 11072     0B35  0826               	movf	?_read_prec_or_width^(0+128),w
 11073     0B36  0020               	movlb	0	; select bank0
 11074     0B37  00D5               	movwf	_width
 11075     0B38                     l5008:
 11076                           
 11077                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1257:   if (width
      +                           < 0) {
 11078     0B38  1FD6               	btfss	_width+1,7
 11079     0B39  2B3B               	goto	u5671
 11080     0B3A  2B3C               	goto	u5670
 11081     0B3B                     u5671:
 11082     0B3B  2B42               	goto	l5014
 11083     0B3C                     u5670:
 11084     0B3C                     l5010:
 11085                           
 11086                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1258:    flags |=
      +                           (1 << 0);
 11087     0B3C  1463               	bsf	_flags,0
 11088     0B3D                     l5012:
 11089                           
 11090                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1259:    width = 
      +                          -width;
 11091     0B3D  09D5               	comf	_width,f
 11092     0B3E  09D6               	comf	_width+1,f
 11093     0B3F  0AD5               	incf	_width,f
 11094     0B40  1903               	skipnz
 11095     0B41  0AD6               	incf	_width+1,f
 11096     0B42                     l5014:
 11097                           
 11098                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1291:   cp = *fmt
      +                          ;
 11099     0B42  0021               	movlb	1	; select bank1
 11100     0B43  084B               	movf	vfpfcnvrt@fmt^(0+128),w
 11101     0B44  0086               	movwf	6
 11102     0B45  0187               	clrf	7
 11103     0B46  3F40               	moviw [0]fsr1
 11104     0B47  00D7               	movwf	vfpfcnvrt@cp^(0+128)
 11105     0B48  3F41               	moviw [1]fsr1
 11106     0B49  00D8               	movwf	(vfpfcnvrt@cp+1)^(0+128)
 11107     0B4A                     l5016:
 11108                           
 11109                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1361:   if (*cp =
      +                          = 'd' || *cp == 'i') {
 11110     0B4A  0857               	movf	vfpfcnvrt@cp^(0+128),w
 11111     0B4B  0084               	movwf	4
 11112     0B4C  0858               	movf	(vfpfcnvrt@cp+1)^(0+128),w
 11113     0B4D  0085               	movwf	5
 11114     0B4E  0012               	moviw fsr0++
 11115     0B4F  3A64               	xorlw	100
 11116     0B50  1903               	btfsc	3,2
 11117     0B51  2B53               	goto	u5681
 11118     0B52  2B54               	goto	u5680
 11119     0B53                     u5681:
 11120     0B53  2B5E               	goto	l5020
 11121     0B54                     u5680:
 11122     0B54                     l5018:
 11123     0B54  0857               	movf	vfpfcnvrt@cp^(0+128),w
 11124     0B55  0084               	movwf	4
 11125     0B56  0858               	movf	(vfpfcnvrt@cp+1)^(0+128),w
 11126     0B57  0085               	movwf	5
 11127     0B58  0012               	moviw fsr0++
 11128     0B59  3A69               	xorlw	105
 11129     0B5A  1D03               	btfss	3,2
 11130     0B5B  2B5D               	goto	u5691
 11131     0B5C  2B5E               	goto	u5690
 11132     0B5D                     u5691:
 11133     0B5D  2B89               	goto	l5028
 11134     0B5E                     u5690:
 11135     0B5E                     l5020:
 11136                           
 11137                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1404:    convarg.
      +                          sint = (vfpf_sint_t)(int)(*(int *)__va_arg(*(int **)ap, (int)0));
 11138     0B5E  084C               	movf	vfpfcnvrt@ap^(0+128),w
 11139     0B5F  0086               	movwf	6
 11140     0B60  084D               	movf	(vfpfcnvrt@ap+1)^(0+128),w
 11141     0B61  0087               	movwf	7
 11142     0B62  0801               	movf	1,w
 11143     0B63  0084               	movwf	4
 11144     0B64  0185               	clrf	5
 11145     0B65  3002               	movlw	2
 11146     0B66  0781               	addwf	1,f
 11147     0B67  3F00               	moviw [0]fsr0
 11148     0B68  00D3               	movwf	vfpfcnvrt@convarg^(0+128)
 11149     0B69  3F01               	moviw [1]fsr0
 11150     0B6A  00D4               	movwf	(vfpfcnvrt@convarg+1)^(0+128)
 11151     0B6B                     l5022:
 11152                           
 11153                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1406:    *fmt = c
      +                          p+1;
 11154     0B6B  0857               	movf	vfpfcnvrt@cp^(0+128),w
 11155     0B6C  3E01               	addlw	1
 11156     0B6D  00CE               	movwf	??_vfpfcnvrt^(0+128)
 11157     0B6E  3000               	movlw	0
 11158     0B6F  3D58               	addwfc	(vfpfcnvrt@cp+1)^(0+128),w
 11159     0B70  00CF               	movwf	(??_vfpfcnvrt+1)^(0+128)
 11160     0B71  084B               	movf	vfpfcnvrt@fmt^(0+128),w
 11161     0B72  0086               	movwf	6
 11162     0B73  0187               	clrf	7
 11163     0B74  084E               	movf	??_vfpfcnvrt^(0+128),w
 11164     0B75  3FC0               	movwi [0]fsr1
 11165     0B76  084F               	movf	(??_vfpfcnvrt+1)^(0+128),w
 11166     0B77  3FC1               	movwi [1]fsr1
 11167     0B78                     l5024:
 11168                           
 11169                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1432:    return (
      +                          int) dtoa(fp, convarg.sint);
 11170     0B78  084A               	movf	(vfpfcnvrt@fp+1)^(0+128),w
 11171     0B79  00BD               	movwf	(dtoa@fp+1)^(0+128)
 11172     0B7A  0849               	movf	vfpfcnvrt@fp^(0+128),w
 11173     0B7B  00BC               	movwf	dtoa@fp^(0+128)
 11174     0B7C  0854               	movf	(vfpfcnvrt@convarg+1)^(0+128),w
 11175     0B7D  00BF               	movwf	(dtoa@d+1)^(0+128)
 11176     0B7E  0853               	movf	vfpfcnvrt@convarg^(0+128),w
 11177     0B7F  00BE               	movwf	dtoa@d^(0+128)
 11178     0B80  3187  270C  318A   	fcall	_dtoa
 11179     0B83  0021               	movlb	1	; select bank1
 11180     0B84  083D               	movf	(?_dtoa+1)^(0+128),w
 11181     0B85  00CA               	movwf	(?_vfpfcnvrt+1)^(0+128)
 11182     0B86  083C               	movf	?_dtoa^(0+128),w
 11183     0B87  00C9               	movwf	?_vfpfcnvrt^(0+128)
 11184     0B88  2C4F               	goto	l1764
 11185     0B89                     l5028:
 11186     0B89  0857               	movf	vfpfcnvrt@cp^(0+128),w
 11187     0B8A  0084               	movwf	4
 11188     0B8B  0858               	movf	(vfpfcnvrt@cp+1)^(0+128),w
 11189     0B8C  0085               	movwf	5
 11190     0B8D  0012               	moviw fsr0++
 11191     0B8E  3A75               	xorlw	117
 11192     0B8F  1D03               	btfss	3,2
 11193     0B90  2B92               	goto	u5701
 11194     0B91  2B93               	goto	u5700
 11195     0B92                     u5701:
 11196     0B92  2BC8               	goto	l5042
 11197     0B93                     u5700:
 11198     0B93                     l5030:
 11199                           
 11200                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1452:     ) {;C:\
      +                          Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1495:    convarg.uint
      +                           = (vfpf_uint_t)(unsigned int)(*(unsigned int *)__va_arg(*(unsigned int **)ap, (unsigned
      +                           int)0));
 11201     0B93  084C               	movf	vfpfcnvrt@ap^(0+128),w
 11202     0B94  0086               	movwf	6
 11203     0B95  084D               	movf	(vfpfcnvrt@ap+1)^(0+128),w
 11204     0B96  0087               	movwf	7
 11205     0B97  0801               	movf	1,w
 11206     0B98  0084               	movwf	4
 11207     0B99  0185               	clrf	5
 11208     0B9A  3002               	movlw	2
 11209     0B9B  0781               	addwf	1,f
 11210     0B9C  3F00               	moviw [0]fsr0
 11211     0B9D  00D3               	movwf	vfpfcnvrt@convarg^(0+128)
 11212     0B9E  3F01               	moviw [1]fsr0
 11213     0B9F  00D4               	movwf	(vfpfcnvrt@convarg+1)^(0+128)
 11214     0BA0                     l5032:
 11215                           
 11216                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1497:    *fmt = c
      +                          p+1;
 11217     0BA0  0857               	movf	vfpfcnvrt@cp^(0+128),w
 11218     0BA1  3E01               	addlw	1
 11219     0BA2  00CE               	movwf	??_vfpfcnvrt^(0+128)
 11220     0BA3  3000               	movlw	0
 11221     0BA4  3D58               	addwfc	(vfpfcnvrt@cp+1)^(0+128),w
 11222     0BA5  00CF               	movwf	(??_vfpfcnvrt+1)^(0+128)
 11223     0BA6  084B               	movf	vfpfcnvrt@fmt^(0+128),w
 11224     0BA7  0086               	movwf	6
 11225     0BA8  0187               	clrf	7
 11226     0BA9  084E               	movf	??_vfpfcnvrt^(0+128),w
 11227     0BAA  3FC0               	movwi [0]fsr1
 11228     0BAB  084F               	movf	(??_vfpfcnvrt+1)^(0+128),w
 11229     0BAC  3FC1               	movwi [1]fsr1
 11230                           
 11231                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1498:    switch (
      +                          *cp) {
 11232     0BAD  2BBF               	goto	l5040
 11233     0BAE                     l5034:
 11234                           
 11235                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1542:      return
      +                           (int) utoa(fp, convarg.uint);
 11236     0BAE  084A               	movf	(vfpfcnvrt@fp+1)^(0+128),w
 11237     0BAF  00BD               	movwf	(utoa@fp+1)^(0+128)
 11238     0BB0  0849               	movf	vfpfcnvrt@fp^(0+128),w
 11239     0BB1  00BC               	movwf	utoa@fp^(0+128)
 11240     0BB2  0854               	movf	(vfpfcnvrt@convarg+1)^(0+128),w
 11241     0BB3  00BF               	movwf	(utoa@d+1)^(0+128)
 11242     0BB4  0853               	movf	vfpfcnvrt@convarg^(0+128),w
 11243     0BB5  00BE               	movwf	utoa@d^(0+128)
 11244     0BB6  3193  2368  318A   	fcall	_utoa
 11245     0BB9  0021               	movlb	1	; select bank1
 11246     0BBA  083D               	movf	(?_utoa+1)^(0+128),w
 11247     0BBB  00CA               	movwf	(?_vfpfcnvrt+1)^(0+128)
 11248     0BBC  083C               	movf	?_utoa^(0+128),w
 11249     0BBD  00C9               	movwf	?_vfpfcnvrt^(0+128)
 11250     0BBE  2C4F               	goto	l1764
 11251     0BBF                     l5040:
 11252     0BBF  0857               	movf	vfpfcnvrt@cp^(0+128),w
 11253     0BC0  0084               	movwf	4
 11254     0BC1  0858               	movf	(vfpfcnvrt@cp+1)^(0+128),w
 11255     0BC2  0085               	movwf	5
 11256     0BC3  0800               	movf	0,w	;code access
 11257                           
 11258                           ; Switch size 1, requested type "simple"
 11259                           ; Number of cases is 1, Range of values is 117 to 117
 11260                           ; switch strategies available:
 11261                           ; Name         Instructions Cycles
 11262                           ; simple_byte            4     3 (average)
 11263                           ; direct_byte           11     9 (fixed)
 11264                           ; jumptable            263     9 (fixed)
 11265                           ;	Chosen strategy is simple_byte
 11266     0BC4  3A75               	xorlw	117	; case 117
 11267     0BC5  1903               	skipnz
 11268     0BC6  2BAE               	goto	l5034
 11269     0BC7  2BC8               	goto	l5042
 11270     0BC8                     l5042:
 11271                           
 11272                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1595:   if (*cp =
      +                          = 'n') {
 11273     0BC8  0857               	movf	vfpfcnvrt@cp^(0+128),w
 11274     0BC9  0084               	movwf	4
 11275     0BCA  0858               	movf	(vfpfcnvrt@cp+1)^(0+128),w
 11276     0BCB  0085               	movwf	5
 11277     0BCC  0012               	moviw fsr0++
 11278     0BCD  3A6E               	xorlw	110
 11279     0BCE  1D03               	btfss	3,2
 11280     0BCF  2BD1               	goto	u5711
 11281     0BD0  2BD2               	goto	u5710
 11282     0BD1                     u5711:
 11283     0BD1  2BF9               	goto	l5052
 11284     0BD2                     u5710:
 11285     0BD2                     l5044:
 11286                           
 11287                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1638:    *(*(int*
      +                           *)__va_arg(*(int* **)ap, (int*)0)) = (int) nout;
 11288     0BD2  084C               	movf	vfpfcnvrt@ap^(0+128),w
 11289     0BD3  0086               	movwf	6
 11290     0BD4  084D               	movf	(vfpfcnvrt@ap+1)^(0+128),w
 11291     0BD5  0087               	movwf	7
 11292     0BD6  0801               	movf	1,w
 11293     0BD7  0084               	movwf	4
 11294     0BD8  0185               	clrf	5
 11295     0BD9  3002               	movlw	2
 11296     0BDA  0781               	addwf	1,f
 11297     0BDB  3F00               	moviw [0]fsr0
 11298     0BDC  00CE               	movwf	??_vfpfcnvrt^(0+128)
 11299     0BDD  3F01               	moviw [1]fsr0
 11300     0BDE  00CF               	movwf	(??_vfpfcnvrt^(0+128)+1)
 11301     0BDF  084E               	movf	??_vfpfcnvrt^(0+128),w
 11302     0BE0  0086               	movwf	6
 11303     0BE1  084F               	movf	(??_vfpfcnvrt+1)^(0+128),w
 11304     0BE2  0087               	movwf	7
 11305     0BE3  0022               	movlb	2	; select bank2
 11306     0BE4  084F               	movf	_nout^(0+256),w
 11307     0BE5  3FC0               	movwi [0]fsr1
 11308     0BE6  0850               	movf	(_nout+1)^(0+256),w
 11309     0BE7  3FC1               	movwi [1]fsr1
 11310     0BE8                     l5046:
 11311                           
 11312                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1640:    *fmt = c
      +                          p+1;
 11313     0BE8  0021               	movlb	1	; select bank1
 11314     0BE9  0857               	movf	vfpfcnvrt@cp^(0+128),w
 11315     0BEA  3E01               	addlw	1
 11316     0BEB  00CE               	movwf	??_vfpfcnvrt^(0+128)
 11317     0BEC  3000               	movlw	0
 11318     0BED  3D58               	addwfc	(vfpfcnvrt@cp+1)^(0+128),w
 11319     0BEE  00CF               	movwf	(??_vfpfcnvrt+1)^(0+128)
 11320     0BEF  084B               	movf	vfpfcnvrt@fmt^(0+128),w
 11321     0BF0  0086               	movwf	6
 11322     0BF1  0187               	clrf	7
 11323     0BF2  084E               	movf	??_vfpfcnvrt^(0+128),w
 11324     0BF3  3FC0               	movwi [0]fsr1
 11325     0BF4  084F               	movf	(??_vfpfcnvrt+1)^(0+128),w
 11326     0BF5  3FC1               	movwi [1]fsr1
 11327     0BF6                     l5048:
 11328                           
 11329                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1641:    return (
      +                          int) 0;
 11330     0BF6  01C9               	clrf	?_vfpfcnvrt^(0+128)
 11331     0BF7  01CA               	clrf	(?_vfpfcnvrt+1)^(0+128)
 11332     0BF8  2C4F               	goto	l1764
 11333     0BF9                     l5052:
 11334                           
 11335                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1798:         if 
      +                          ((*fmt)[0] == '%') {
 11336     0BF9  084B               	movf	vfpfcnvrt@fmt^(0+128),w
 11337     0BFA  0086               	movwf	6
 11338     0BFB  0187               	clrf	7
 11339     0BFC  3F40               	moviw [0]fsr1
 11340     0BFD  00CE               	movwf	??_vfpfcnvrt^(0+128)
 11341     0BFE  3F41               	moviw [1]fsr1
 11342     0BFF  00CF               	movwf	(??_vfpfcnvrt^(0+128)+1)
 11343     0C00  084E               	movf	??_vfpfcnvrt^(0+128),w
 11344     0C01  0084               	movwf	4
 11345     0C02  084F               	movf	(??_vfpfcnvrt+1)^(0+128),w
 11346     0C03  0085               	movwf	5
 11347     0C04  0012               	moviw fsr0++
 11348     0C05  3A25               	xorlw	37
 11349     0C06  1D03               	btfss	3,2
 11350     0C07  2C09               	goto	u5721
 11351     0C08  2C0A               	goto	u5720
 11352     0C09                     u5721:
 11353     0C09  2C23               	goto	l5062
 11354     0C0A                     u5720:
 11355     0C0A                     l5054:
 11356                           
 11357                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1799:            
      +                           ++*fmt;
 11358     0C0A  084B               	movf	vfpfcnvrt@fmt^(0+128),w
 11359     0C0B  0086               	movwf	6
 11360     0C0C  0187               	clrf	7
 11361     0C0D  3001               	movlw	1
 11362     0C0E  0781               	addwf	1,f
 11363     0C0F  3141               	addfsr 1,1
 11364     0C10  1803               	skipnc
 11365     0C11  0A81               	incf	1,f
 11366     0C12                     l5056:
 11367                           
 11368                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1800:            
      +                           fputc((int)'%', fp);
 11369     0C12  3025               	movlw	37
 11370     0C13  00A3               	movwf	fputc@c^(0+128)
 11371     0C14  3000               	movlw	0
 11372     0C15  00A4               	movwf	(fputc@c^(0+128)+1)
 11373     0C16  084A               	movf	(vfpfcnvrt@fp+1)^(0+128),w
 11374     0C17  00A6               	movwf	(fputc@fp+1)^(0+128)
 11375     0C18  0849               	movf	vfpfcnvrt@fp^(0+128),w
 11376     0C19  00A5               	movwf	fputc@fp^(0+128)
 11377     0C1A  3191  21BC  318A   	fcall	_fputc
 11378     0C1D                     l5058:
 11379                           
 11380                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1801:            
      +                           return (int) 1;
 11381     0C1D  3001               	movlw	1
 11382     0C1E  0021               	movlb	1	; select bank1
 11383     0C1F  00C9               	movwf	?_vfpfcnvrt^(0+128)
 11384     0C20  3000               	movlw	0
 11385     0C21  00CA               	movwf	(?_vfpfcnvrt^(0+128)+1)
 11386     0C22  2C4F               	goto	l1764
 11387     0C23                     l5062:
 11388                           
 11389                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1806:         ++*
      +                          fmt;
 11390     0C23  084B               	movf	vfpfcnvrt@fmt^(0+128),w
 11391     0C24  0086               	movwf	6
 11392     0C25  0187               	clrf	7
 11393     0C26  3001               	movlw	1
 11394     0C27  0781               	addwf	1,f
 11395     0C28  3141               	addfsr 1,1
 11396     0C29  1803               	skipnc
 11397     0C2A  0A81               	incf	1,f
 11398     0C2B  2BF6               	goto	l5048
 11399     0C2C                     l5068:
 11400                           
 11401                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1811:     fputc((
      +                          int)(*fmt)[0], fp);
 11402     0C2C  084B               	movf	vfpfcnvrt@fmt^(0+128),w
 11403     0C2D  0086               	movwf	6
 11404     0C2E  0187               	clrf	7
 11405     0C2F  3F40               	moviw [0]fsr1
 11406     0C30  00CE               	movwf	??_vfpfcnvrt^(0+128)
 11407     0C31  3F41               	moviw [1]fsr1
 11408     0C32  00CF               	movwf	(??_vfpfcnvrt^(0+128)+1)
 11409     0C33  084E               	movf	??_vfpfcnvrt^(0+128),w
 11410     0C34  0084               	movwf	4
 11411     0C35  084F               	movf	(??_vfpfcnvrt+1)^(0+128),w
 11412     0C36  0085               	movwf	5
 11413     0C37  0800               	movf	0,w	;code access
 11414     0C38  00D0               	movwf	(??_vfpfcnvrt+2)^(0+128)
 11415     0C39  01D1               	clrf	((??_vfpfcnvrt+2)^(0+128)+1)
 11416     0C3A  0850               	movf	(??_vfpfcnvrt+2)^(0+128),w
 11417     0C3B  00A3               	movwf	fputc@c^(0+128)
 11418     0C3C  0851               	movf	(??_vfpfcnvrt+3)^(0+128),w
 11419     0C3D  00A4               	movwf	(fputc@c+1)^(0+128)
 11420     0C3E  084A               	movf	(vfpfcnvrt@fp+1)^(0+128),w
 11421     0C3F  00A6               	movwf	(fputc@fp+1)^(0+128)
 11422     0C40  0849               	movf	vfpfcnvrt@fp^(0+128),w
 11423     0C41  00A5               	movwf	fputc@fp^(0+128)
 11424     0C42  3191  21BC  318A   	fcall	_fputc
 11425     0C45                     l5070:
 11426                           
 11427                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1812:     ++*fmt;
 11428     0C45  0021               	movlb	1	; select bank1
 11429     0C46  084B               	movf	vfpfcnvrt@fmt^(0+128),w
 11430     0C47  0086               	movwf	6
 11431     0C48  0187               	clrf	7
 11432     0C49  3001               	movlw	1
 11433     0C4A  0781               	addwf	1,f
 11434     0C4B  3141               	addfsr 1,1
 11435     0C4C  1803               	skipnc
 11436     0C4D  0A81               	incf	1,f
 11437     0C4E  2C1D               	goto	l5058
 11438     0C4F                     l1764:
 11439     0C4F  0008               	return
 11440     0C50                     __end_of_vfpfcnvrt:
 11441                           
 11442                           	psect	text18
 11443     1368                     __ptext18:	
 11444 ;; *************** function _utoa *****************
 11445 ;; Defined at:
 11446 ;;		line 1001 in file "C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c"
 11447 ;; Parameters:    Size  Location     Type
 11448 ;;  fp              2   28[BANK1 ] PTR struct _IO_FILE
 11449 ;;		 -> sprintf@f(11), NULL(0), 
 11450 ;;  d               2   30[BANK1 ] unsigned int 
 11451 ;; Auto vars:     Size  Location     Type
 11452 ;;  i               2   36[BANK1 ] int 
 11453 ;;  w               2   34[BANK1 ] int 
 11454 ;;  p               1   33[BANK1 ] _Bool 
 11455 ;; Return value:  Size  Location     Type
 11456 ;;                  2   28[BANK1 ] int 
 11457 ;; Registers used:
 11458 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 11459 ;; Tracked objects:
 11460 ;;		On entry : 0/0
 11461 ;;		On exit  : 0/0
 11462 ;;		Unchanged: 0/0
 11463 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 11464 ;;      Params:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0
 11465 ;;      Locals:         0       0       5       0       0       0       0       0       0       0       0       0       
      +0       0
 11466 ;;      Temps:          0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0
 11467 ;;      Totals:         0       0      10       0       0       0       0       0       0       0       0       0       
      +0       0
 11468 ;;Total ram usage:       10 bytes
 11469 ;; Hardware stack levels used: 1
 11470 ;; Hardware stack levels required when called: 10
 11471 ;; This function calls:
 11472 ;;		___lwdiv
 11473 ;;		___lwmod
 11474 ;;		_pad
 11475 ;; This function is called by:
 11476 ;;		_vfpfcnvrt
 11477 ;; This function uses a non-reentrant model
 11478 ;;
 11479                           
 11480     1368                     _utoa:	
 11481                           ;psect for function _utoa
 11482                           
 11483     1368                     l4522:	
 11484                           ;incstack = 0
 11485                           ; Regs used in _utoa: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 11486                           
 11487                           
 11488                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1001: static int 
      +                          utoa(FILE *fp, vfpf_uint_t d);C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\commo
      +                          n\doprnt.c: 1002: {;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c
      +                          : 1003:     int i, w;;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt
      +                          .c: 1007:  _Bool p = 1;
 11489     1368  3001               	movlw	1
 11490     1369  0021               	movlb	1	; select bank1
 11491     136A  00C1               	movwf	utoa@p^(0+128)
 11492     136B                     l4524:
 11493                           
 11494                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1019:     w = wid
      +                          th;
 11495     136B  0020               	movlb	0	; select bank0
 11496     136C  0856               	movf	_width+1,w
 11497     136D  0021               	movlb	1	; select bank1
 11498     136E  00C3               	movwf	(utoa@w+1)^(0+128)
 11499     136F  0020               	movlb	0	; select bank0
 11500     1370  0855               	movf	_width,w
 11501     1371  0021               	movlb	1	; select bank1
 11502     1372  00C2               	movwf	utoa@w^(0+128)
 11503                           
 11504                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1022:     i = siz
      +                          eof(dbuf) - 1;
 11505     1373  301F               	movlw	31
 11506     1374  00C4               	movwf	utoa@i^(0+128)
 11507     1375  3000               	movlw	0
 11508     1376  00C5               	movwf	(utoa@i^(0+128)+1)
 11509     1377                     l4526:
 11510                           
 11511                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1023:     dbuf[i]
      +                           = '\0';
 11512     1377  0023               	movlb	3	; select bank3
 11513     1378  01D7               	clrf	(_dbuf^(0+384)+31)
 11514                           
 11515                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1024:     while (
      +                          i && (d != 0
 11516     1379  2BA8               	goto	l4538
 11517     137A                     l4528:
 11518                           
 11519                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1033:     )) {;C:
      +                          \Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1034:         --i;
 11520     137A  30FF               	movlw	255
 11521     137B  0021               	movlb	1	; select bank1
 11522     137C  07C4               	addwf	utoa@i^(0+128),f
 11523     137D  30FF               	movlw	255
 11524     137E  3DC5               	addwfc	(utoa@i+1)^(0+128),f
 11525     137F                     l4530:
 11526                           
 11527                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1035:         dbu
      +                          f[i] = '0' + (d % 10);
 11528     137F  0844               	movf	utoa@i^(0+128),w
 11529     1380  3EB8               	addlw	(low (_dbuf| (0+256)))& (0+255)
 11530     1381  0086               	movwf	6
 11531     1382  3001               	movlw	1	; select bank3/4
 11532     1383  0087               	movwf	7
 11533     1384  300A               	movlw	10
 11534     1385  00A0               	movwf	___lwmod@divisor^(0+128)
 11535     1386  3000               	movlw	0
 11536     1387  00A1               	movwf	(___lwmod@divisor^(0+128)+1)
 11537     1388  083F               	movf	(utoa@d+1)^(0+128),w
 11538     1389  00A3               	movwf	(___lwmod@dividend+1)^(0+128)
 11539     138A  083E               	movf	utoa@d^(0+128),w
 11540     138B  00A2               	movwf	___lwmod@dividend^(0+128)
 11541     138C  319E  2662  3193   	fcall	___lwmod
 11542     138F  0021               	movlb	1	; select bank1
 11543     1390  0820               	movf	?___lwmod^(0+128),w
 11544     1391  3E30               	addlw	48
 11545     1392  0081               	movwf	1
 11546     1393                     l4532:
 11547                           
 11548                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1039:   p = 0;
 11549     1393  01C1               	clrf	utoa@p^(0+128)
 11550     1394                     l4534:
 11551                           
 11552                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1041:         --w
      +                          ;
 11553     1394  30FF               	movlw	255
 11554     1395  07C2               	addwf	utoa@w^(0+128),f
 11555     1396  30FF               	movlw	255
 11556     1397  3DC3               	addwfc	(utoa@w+1)^(0+128),f
 11557     1398                     l4536:
 11558                           
 11559                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1042:         d =
      +                           d / 10;
 11560     1398  300A               	movlw	10
 11561     1399  00A0               	movwf	___lwdiv@divisor^(0+128)
 11562     139A  3000               	movlw	0
 11563     139B  00A1               	movwf	(___lwdiv@divisor^(0+128)+1)
 11564     139C  083F               	movf	(utoa@d+1)^(0+128),w
 11565     139D  00A3               	movwf	(___lwdiv@dividend+1)^(0+128)
 11566     139E  083E               	movf	utoa@d^(0+128),w
 11567     139F  00A2               	movwf	___lwdiv@dividend^(0+128)
 11568     13A0  3187  27C5  3193   	fcall	___lwdiv
 11569     13A3  0021               	movlb	1	; select bank1
 11570     13A4  0821               	movf	(?___lwdiv+1)^(0+128),w
 11571     13A5  00BF               	movwf	(utoa@d+1)^(0+128)
 11572     13A6  0820               	movf	?___lwdiv^(0+128),w
 11573     13A7  00BE               	movwf	utoa@d^(0+128)
 11574     13A8                     l4538:
 11575                           
 11576                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1024:     while (
      +                          i && (d != 0
 11577     13A8  0021               	movlb	1	; select bank1
 11578     13A9  0844               	movf	utoa@i^(0+128),w
 11579     13AA  0445               	iorwf	(utoa@i+1)^(0+128),w
 11580     13AB  1903               	btfsc	3,2
 11581     13AC  2BAE               	goto	u4601
 11582     13AD  2BAF               	goto	u4600
 11583     13AE                     u4601:
 11584     13AE  2BCC               	goto	l4548
 11585     13AF                     u4600:
 11586     13AF                     l4540:
 11587     13AF  083E               	movf	utoa@d^(0+128),w
 11588     13B0  043F               	iorwf	(utoa@d+1)^(0+128),w
 11589     13B1  1D03               	btfss	3,2
 11590     13B2  2BB4               	goto	u4611
 11591     13B3  2BB5               	goto	u4610
 11592     13B4                     u4611:
 11593     13B4  2B7A               	goto	l4528
 11594     13B5                     u4610:
 11595     13B5                     l4542:
 11596     13B5  0841               	movf	utoa@p^(0+128),w
 11597     13B6  1D03               	btfss	3,2
 11598     13B7  2BB9               	goto	u4621
 11599     13B8  2BBA               	goto	u4620
 11600     13B9                     u4621:
 11601     13B9  2B7A               	goto	l4528
 11602     13BA                     u4620:
 11603     13BA                     l4544:
 11604     13BA  0843               	movf	(utoa@w+1)^(0+128),w
 11605     13BB  3A80               	xorlw	128
 11606     13BC  00C0               	movwf	??_utoa^(0+128)
 11607     13BD  3080               	movlw	128
 11608     13BE  0240               	subwf	??_utoa^(0+128),w
 11609     13BF  1D03               	skipz
 11610     13C0  2BC3               	goto	u4635
 11611     13C1  3001               	movlw	1
 11612     13C2  0242               	subwf	utoa@w^(0+128),w
 11613     13C3                     u4635:
 11614     13C3  1C03               	skipc
 11615     13C4  2BC6               	goto	u4631
 11616     13C5  2BC7               	goto	u4630
 11617     13C6                     u4631:
 11618     13C6  2BCC               	goto	l4548
 11619     13C7                     u4630:
 11620     13C7                     l4546:
 11621     13C7  0020               	movlb	0	; select bank0
 11622     13C8  18E3               	btfsc	_flags,1
 11623     13C9  2BCB               	goto	u4641
 11624     13CA  2BCC               	goto	u4640
 11625     13CB                     u4641:
 11626     13CB  2B7A               	goto	l4528
 11627     13CC                     u4640:
 11628     13CC                     l4548:
 11629                           
 11630                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1046:     return 
      +                          (int) pad(fp, &dbuf[i], w);
 11631     13CC  0021               	movlb	1	; select bank1
 11632     13CD  083D               	movf	(utoa@fp+1)^(0+128),w
 11633     13CE  00B5               	movwf	(pad@fp+1)^(0+128)
 11634     13CF  083C               	movf	utoa@fp^(0+128),w
 11635     13D0  00B4               	movwf	pad@fp^(0+128)
 11636     13D1  0844               	movf	utoa@i^(0+128),w
 11637     13D2  3EB8               	addlw	(low (_dbuf| (0+256)))& (0+255)
 11638     13D3  00B6               	movwf	pad@buf^(0+128)
 11639     13D4  0843               	movf	(utoa@w+1)^(0+128),w
 11640     13D5  00B8               	movwf	(pad@p+1)^(0+128)
 11641     13D6  0842               	movf	utoa@w^(0+128),w
 11642     13D7  00B7               	movwf	pad@p^(0+128)
 11643     13D8  319F  27AB  3193   	fcall	_pad
 11644     13DB  0021               	movlb	1	; select bank1
 11645     13DC  0835               	movf	(?_pad+1)^(0+128),w
 11646     13DD  00BD               	movwf	(?_utoa+1)^(0+128)
 11647     13DE  0834               	movf	?_pad^(0+128),w
 11648     13DF  00BC               	movwf	?_utoa^(0+128)
 11649     13E0                     l1741:
 11650     13E0  0008               	return
 11651     13E1                     __end_of_utoa:
 11652                           
 11653                           	psect	text19
 11654     1E62                     __ptext19:	
 11655 ;; *************** function ___lwmod *****************
 11656 ;; Defined at:
 11657 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\lwmod.c"
 11658 ;; Parameters:    Size  Location     Type
 11659 ;;  divisor         2    0[BANK1 ] unsigned int 
 11660 ;;  dividend        2    2[BANK1 ] unsigned int 
 11661 ;; Auto vars:     Size  Location     Type
 11662 ;;  counter         1    4[BANK1 ] unsigned char 
 11663 ;; Return value:  Size  Location     Type
 11664 ;;                  2    0[BANK1 ] unsigned int 
 11665 ;; Registers used:
 11666 ;;		wreg, status,2, status,0
 11667 ;; Tracked objects:
 11668 ;;		On entry : 0/0
 11669 ;;		On exit  : 0/0
 11670 ;;		Unchanged: 0/0
 11671 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 11672 ;;      Params:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0
 11673 ;;      Locals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0
 11674 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11675 ;;      Totals:         0       0       5       0       0       0       0       0       0       0       0       0       
      +0       0
 11676 ;;Total ram usage:        5 bytes
 11677 ;; Hardware stack levels used: 1
 11678 ;; Hardware stack levels required when called: 5
 11679 ;; This function calls:
 11680 ;;		Nothing
 11681 ;; This function is called by:
 11682 ;;		_utoa
 11683 ;; This function uses a non-reentrant model
 11684 ;;
 11685                           
 11686     1E62                     ___lwmod:	
 11687                           ;psect for function ___lwmod
 11688                           
 11689     1E62                     l4412:	
 11690                           ;incstack = 0
 11691                           ; Regs used in ___lwmod: [wreg+status,2+status,0]
 11692                           
 11693     1E62  0021               	movlb	1	; select bank1
 11694     1E63  0820               	movf	___lwmod@divisor^(0+128),w
 11695     1E64  0421               	iorwf	(___lwmod@divisor+1)^(0+128),w
 11696     1E65  1903               	btfsc	3,2
 11697     1E66  2E68               	goto	u4361
 11698     1E67  2E69               	goto	u4360
 11699     1E68                     u4361:
 11700     1E68  2E90               	goto	l4430
 11701     1E69                     u4360:
 11702     1E69                     l4414:
 11703     1E69  3001               	movlw	1
 11704     1E6A  00A4               	movwf	___lwmod@counter^(0+128)
 11705     1E6B  2E73               	goto	l4420
 11706     1E6C                     l4416:
 11707     1E6C  3001               	movlw	1
 11708     1E6D                     u4375:
 11709     1E6D  35A0               	lslf	___lwmod@divisor^(0+128),f
 11710     1E6E  0DA1               	rlf	(___lwmod@divisor+1)^(0+128),f
 11711     1E6F  0B89               	decfsz	9,f
 11712     1E70  2E6D               	goto	u4375
 11713     1E71                     l4418:
 11714     1E71  3001               	movlw	1
 11715     1E72  07A4               	addwf	___lwmod@counter^(0+128),f
 11716     1E73                     l4420:
 11717     1E73  1FA1               	btfss	(___lwmod@divisor+1)^(0+128),7
 11718     1E74  2E76               	goto	u4381
 11719     1E75  2E77               	goto	u4380
 11720     1E76                     u4381:
 11721     1E76  2E6C               	goto	l4416
 11722     1E77                     u4380:
 11723     1E77                     l4422:
 11724     1E77  0821               	movf	(___lwmod@divisor+1)^(0+128),w
 11725     1E78  0223               	subwf	(___lwmod@dividend+1)^(0+128),w
 11726     1E79  1D03               	skipz
 11727     1E7A  2E7D               	goto	u4395
 11728     1E7B  0820               	movf	___lwmod@divisor^(0+128),w
 11729     1E7C  0222               	subwf	___lwmod@dividend^(0+128),w
 11730     1E7D                     u4395:
 11731     1E7D  1C03               	skipc
 11732     1E7E  2E80               	goto	u4391
 11733     1E7F  2E81               	goto	u4390
 11734     1E80                     u4391:
 11735     1E80  2E85               	goto	l4426
 11736     1E81                     u4390:
 11737     1E81                     l4424:
 11738     1E81  0820               	movf	___lwmod@divisor^(0+128),w
 11739     1E82  02A2               	subwf	___lwmod@dividend^(0+128),f
 11740     1E83  0821               	movf	(___lwmod@divisor+1)^(0+128),w
 11741     1E84  3BA3               	subwfb	(___lwmod@dividend+1)^(0+128),f
 11742     1E85                     l4426:
 11743     1E85  3001               	movlw	1
 11744     1E86                     u4405:
 11745     1E86  36A1               	lsrf	(___lwmod@divisor+1)^(0+128),f
 11746     1E87  0CA0               	rrf	___lwmod@divisor^(0+128),f
 11747     1E88  0B89               	decfsz	9,f
 11748     1E89  2E86               	goto	u4405
 11749     1E8A                     l4428:
 11750     1E8A  3001               	movlw	1
 11751     1E8B  02A4               	subwf	___lwmod@counter^(0+128),f
 11752     1E8C  1D03               	btfss	3,2
 11753     1E8D  2E8F               	goto	u4411
 11754     1E8E  2E90               	goto	u4410
 11755     1E8F                     u4411:
 11756     1E8F  2E77               	goto	l4422
 11757     1E90                     u4410:
 11758     1E90                     l4430:
 11759     1E90  0823               	movf	(___lwmod@dividend+1)^(0+128),w
 11760     1E91  00A1               	movwf	(?___lwmod+1)^(0+128)
 11761     1E92  0822               	movf	___lwmod@dividend^(0+128),w
 11762     1E93  00A0               	movwf	?___lwmod^(0+128)
 11763     1E94                     l1497:
 11764     1E94  0008               	return
 11765     1E95                     __end_of___lwmod:
 11766                           
 11767                           	psect	text20
 11768     07C5                     __ptext20:	
 11769 ;; *************** function ___lwdiv *****************
 11770 ;; Defined at:
 11771 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\lwdiv.c"
 11772 ;; Parameters:    Size  Location     Type
 11773 ;;  divisor         2    0[BANK1 ] unsigned int 
 11774 ;;  dividend        2    2[BANK1 ] unsigned int 
 11775 ;; Auto vars:     Size  Location     Type
 11776 ;;  quotient        2    4[BANK1 ] unsigned int 
 11777 ;;  counter         1    6[BANK1 ] unsigned char 
 11778 ;; Return value:  Size  Location     Type
 11779 ;;                  2    0[BANK1 ] unsigned int 
 11780 ;; Registers used:
 11781 ;;		wreg, status,2, status,0
 11782 ;; Tracked objects:
 11783 ;;		On entry : 0/0
 11784 ;;		On exit  : 0/0
 11785 ;;		Unchanged: 0/0
 11786 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 11787 ;;      Params:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0
 11788 ;;      Locals:         0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0
 11789 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11790 ;;      Totals:         0       0       7       0       0       0       0       0       0       0       0       0       
      +0       0
 11791 ;;Total ram usage:        7 bytes
 11792 ;; Hardware stack levels used: 1
 11793 ;; Hardware stack levels required when called: 5
 11794 ;; This function calls:
 11795 ;;		Nothing
 11796 ;; This function is called by:
 11797 ;;		_utoa
 11798 ;;		_dutycycle_led_strip
 11799 ;; This function uses a non-reentrant model
 11800 ;;
 11801                           
 11802     07C5                     ___lwdiv:	
 11803                           ;psect for function ___lwdiv
 11804                           
 11805     07C5                     l4386:	
 11806                           ;incstack = 0
 11807                           ; Regs used in ___lwdiv: [wreg+status,2+status,0]
 11808                           
 11809     07C5  0021               	movlb	1	; select bank1
 11810     07C6  01A4               	clrf	___lwdiv@quotient^(0+128)
 11811     07C7  01A5               	clrf	(___lwdiv@quotient+1)^(0+128)
 11812     07C8                     l4388:
 11813     07C8  0820               	movf	___lwdiv@divisor^(0+128),w
 11814     07C9  0421               	iorwf	(___lwdiv@divisor+1)^(0+128),w
 11815     07CA  1903               	btfsc	3,2
 11816     07CB  2FCD               	goto	u4291
 11817     07CC  2FCE               	goto	u4290
 11818     07CD                     u4291:
 11819     07CD  2FFB               	goto	l4408
 11820     07CE                     u4290:
 11821     07CE                     l4390:
 11822     07CE  3001               	movlw	1
 11823     07CF  00A6               	movwf	___lwdiv@counter^(0+128)
 11824     07D0  2FD8               	goto	l4396
 11825     07D1                     l4392:
 11826     07D1  3001               	movlw	1
 11827     07D2                     u4305:
 11828     07D2  35A0               	lslf	___lwdiv@divisor^(0+128),f
 11829     07D3  0DA1               	rlf	(___lwdiv@divisor+1)^(0+128),f
 11830     07D4  0B89               	decfsz	9,f
 11831     07D5  2FD2               	goto	u4305
 11832     07D6                     l4394:
 11833     07D6  3001               	movlw	1
 11834     07D7  07A6               	addwf	___lwdiv@counter^(0+128),f
 11835     07D8                     l4396:
 11836     07D8  1FA1               	btfss	(___lwdiv@divisor+1)^(0+128),7
 11837     07D9  2FDB               	goto	u4311
 11838     07DA  2FDC               	goto	u4310
 11839     07DB                     u4311:
 11840     07DB  2FD1               	goto	l4392
 11841     07DC                     u4310:
 11842     07DC                     l4398:
 11843     07DC  3001               	movlw	1
 11844     07DD                     u4325:
 11845     07DD  35A4               	lslf	___lwdiv@quotient^(0+128),f
 11846     07DE  0DA5               	rlf	(___lwdiv@quotient+1)^(0+128),f
 11847     07DF  0B89               	decfsz	9,f
 11848     07E0  2FDD               	goto	u4325
 11849     07E1  0821               	movf	(___lwdiv@divisor+1)^(0+128),w
 11850     07E2  0223               	subwf	(___lwdiv@dividend+1)^(0+128),w
 11851     07E3  1D03               	skipz
 11852     07E4  2FE7               	goto	u4335
 11853     07E5  0820               	movf	___lwdiv@divisor^(0+128),w
 11854     07E6  0222               	subwf	___lwdiv@dividend^(0+128),w
 11855     07E7                     u4335:
 11856     07E7  1C03               	skipc
 11857     07E8  2FEA               	goto	u4331
 11858     07E9  2FEB               	goto	u4330
 11859     07EA                     u4331:
 11860     07EA  2FF0               	goto	l4404
 11861     07EB                     u4330:
 11862     07EB                     l4400:
 11863     07EB  0820               	movf	___lwdiv@divisor^(0+128),w
 11864     07EC  02A2               	subwf	___lwdiv@dividend^(0+128),f
 11865     07ED  0821               	movf	(___lwdiv@divisor+1)^(0+128),w
 11866     07EE  3BA3               	subwfb	(___lwdiv@dividend+1)^(0+128),f
 11867     07EF                     l4402:
 11868     07EF  1424               	bsf	___lwdiv@quotient^(0+128),0
 11869     07F0                     l4404:
 11870     07F0  3001               	movlw	1
 11871     07F1                     u4345:
 11872     07F1  36A1               	lsrf	(___lwdiv@divisor+1)^(0+128),f
 11873     07F2  0CA0               	rrf	___lwdiv@divisor^(0+128),f
 11874     07F3  0B89               	decfsz	9,f
 11875     07F4  2FF1               	goto	u4345
 11876     07F5                     l4406:
 11877     07F5  3001               	movlw	1
 11878     07F6  02A6               	subwf	___lwdiv@counter^(0+128),f
 11879     07F7  1D03               	btfss	3,2
 11880     07F8  2FFA               	goto	u4351
 11881     07F9  2FFB               	goto	u4350
 11882     07FA                     u4351:
 11883     07FA  2FDC               	goto	l4398
 11884     07FB                     u4350:
 11885     07FB                     l4408:
 11886     07FB  0825               	movf	(___lwdiv@quotient+1)^(0+128),w
 11887     07FC  00A1               	movwf	(?___lwdiv+1)^(0+128)
 11888     07FD  0824               	movf	___lwdiv@quotient^(0+128),w
 11889     07FE  00A0               	movwf	?___lwdiv^(0+128)
 11890     07FF                     l1487:
 11891     07FF  0008               	return
 11892     0800                     __end_of___lwdiv:
 11893                           
 11894                           	psect	text21
 11895     115F                     __ptext21:	
 11896 ;; *************** function _read_prec_or_width *****************
 11897 ;; Defined at:
 11898 ;;		line 1158 in file "C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c"
 11899 ;; Parameters:    Size  Location     Type
 11900 ;;  fmt             1    6[BANK1 ] PTR PTR const unsigned c
 11901 ;;		 -> vfprintf@cfmt(2), 
 11902 ;;  ap              2    7[BANK1 ] PTR PTR void [1]
 11903 ;;		 -> printf@ap(1), sprintf@ap(1), 
 11904 ;; Auto vars:     Size  Location     Type
 11905 ;;  c               1   12[BANK1 ] unsigned char 
 11906 ;;  n               2   13[BANK1 ] int 
 11907 ;; Return value:  Size  Location     Type
 11908 ;;                  2    6[BANK1 ] int 
 11909 ;; Registers used:
 11910 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 11911 ;; Tracked objects:
 11912 ;;		On entry : 0/0
 11913 ;;		On exit  : 0/0
 11914 ;;		Unchanged: 0/0
 11915 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 11916 ;;      Params:         0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0
 11917 ;;      Locals:         0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0
 11918 ;;      Temps:          0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0
 11919 ;;      Totals:         0       0       9       0       0       0       0       0       0       0       0       0       
      +0       0
 11920 ;;Total ram usage:        9 bytes
 11921 ;; Hardware stack levels used: 1
 11922 ;; Hardware stack levels required when called: 6
 11923 ;; This function calls:
 11924 ;;		___wmul
 11925 ;; This function is called by:
 11926 ;;		_vfpfcnvrt
 11927 ;; This function uses a non-reentrant model
 11928 ;;
 11929                           
 11930     115F                     _read_prec_or_width:	
 11931                           ;psect for function _read_prec_or_width
 11932                           
 11933     115F                     l4552:	
 11934                           ;incstack = 0
 11935                           ; Regs used in _read_prec_or_width: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 11936                           
 11937                           
 11938                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1159:     int n =
      +                           0;
 11939     115F  0021               	movlb	1	; select bank1
 11940     1160  01AD               	clrf	read_prec_or_width@n^(0+128)
 11941     1161  01AE               	clrf	(read_prec_or_width@n+1)^(0+128)
 11942     1162                     l4554:
 11943                           
 11944                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1160:     if ((*f
      +                          mt)[0] == '*') {
 11945     1162  0826               	movf	read_prec_or_width@fmt^(0+128),w
 11946     1163  0086               	movwf	6
 11947     1164  0187               	clrf	7
 11948     1165  3F40               	moviw [0]fsr1
 11949     1166  00A9               	movwf	??_read_prec_or_width^(0+128)
 11950     1167  3F41               	moviw [1]fsr1
 11951     1168  00AA               	movwf	(??_read_prec_or_width^(0+128)+1)
 11952     1169  0829               	movf	??_read_prec_or_width^(0+128),w
 11953     116A  0084               	movwf	4
 11954     116B  082A               	movf	(??_read_prec_or_width+1)^(0+128),w
 11955     116C  0085               	movwf	5
 11956     116D  0012               	moviw fsr0++
 11957     116E  3A2A               	xorlw	42
 11958     116F  1D03               	btfss	3,2
 11959     1170  2972               	goto	u4651
 11960     1171  2973               	goto	u4650
 11961     1172                     u4651:
 11962     1172  29A3               	goto	l4564
 11963     1173                     u4650:
 11964     1173                     l4556:
 11965                           
 11966                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1161:         ++*
      +                          fmt;
 11967     1173  0826               	movf	read_prec_or_width@fmt^(0+128),w
 11968     1174  0086               	movwf	6
 11969     1175  0187               	clrf	7
 11970     1176  3001               	movlw	1
 11971     1177  0781               	addwf	1,f
 11972     1178  3141               	addfsr 1,1
 11973     1179  1803               	skipnc
 11974     117A  0A81               	incf	1,f
 11975     117B                     l4558:
 11976                           
 11977                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1162:         n =
      +                           (*(int *)__va_arg(*(int **)*ap, (int)0));
 11978     117B  0827               	movf	read_prec_or_width@ap^(0+128),w
 11979     117C  0086               	movwf	6
 11980     117D  0828               	movf	(read_prec_or_width@ap+1)^(0+128),w
 11981     117E  0087               	movwf	7
 11982     117F  0801               	movf	1,w
 11983     1180  0084               	movwf	4
 11984     1181  0185               	clrf	5
 11985     1182  3002               	movlw	2
 11986     1183  0781               	addwf	1,f
 11987     1184  3F00               	moviw [0]fsr0
 11988     1185  00AD               	movwf	read_prec_or_width@n^(0+128)
 11989     1186  3F01               	moviw [1]fsr0
 11990     1187  00AE               	movwf	(read_prec_or_width@n+1)^(0+128)
 11991                           
 11992                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1163:     } else 
      +                          {
 11993     1188  29B7               	goto	l4566
 11994     1189                     l4560:
 11995                           
 11996                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1166:            
      +                           n = n * 10 + c;
 11997     1189  082E               	movf	(read_prec_or_width@n+1)^(0+128),w
 11998     118A  00A1               	movwf	(___wmul@multiplier+1)^(0+128)
 11999     118B  082D               	movf	read_prec_or_width@n^(0+128),w
 12000     118C  00A0               	movwf	___wmul@multiplier^(0+128)
 12001     118D  300A               	movlw	10
 12002     118E  00A2               	movwf	___wmul@multiplicand^(0+128)
 12003     118F  3000               	movlw	0
 12004     1190  00A3               	movwf	(___wmul@multiplicand^(0+128)+1)
 12005     1191  319C  24FC  3191   	fcall	___wmul
 12006     1194  0021               	movlb	1	; select bank1
 12007     1195  082C               	movf	read_prec_or_width@c^(0+128),w
 12008     1196  0720               	addwf	?___wmul^(0+128),w
 12009     1197  00AD               	movwf	read_prec_or_width@n^(0+128)
 12010     1198  3000               	movlw	0
 12011     1199  3D21               	addwfc	(?___wmul+1)^(0+128),w
 12012     119A  00AE               	movwf	(read_prec_or_width@n+1)^(0+128)
 12013     119B                     l4562:
 12014                           
 12015                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1167:            
      +                           ++*fmt;
 12016     119B  0826               	movf	read_prec_or_width@fmt^(0+128),w
 12017     119C  0086               	movwf	6
 12018     119D  0187               	clrf	7
 12019     119E  3001               	movlw	1
 12020     119F  0781               	addwf	1,f
 12021     11A0  3141               	addfsr 1,1
 12022     11A1  1803               	skipnc
 12023     11A2  0A81               	incf	1,f
 12024     11A3                     l4564:
 12025                           
 12026                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1165:         whi
      +                          le ((c = ((unsigned)(*fmt)[0]) - '0') < 10) {
 12027     11A3  0826               	movf	read_prec_or_width@fmt^(0+128),w
 12028     11A4  0086               	movwf	6
 12029     11A5  0187               	clrf	7
 12030     11A6  3F40               	moviw [0]fsr1
 12031     11A7  00A9               	movwf	??_read_prec_or_width^(0+128)
 12032     11A8  3F41               	moviw [1]fsr1
 12033     11A9  00AA               	movwf	(??_read_prec_or_width^(0+128)+1)
 12034     11AA  0829               	movf	??_read_prec_or_width^(0+128),w
 12035     11AB  0084               	movwf	4
 12036     11AC  082A               	movf	(??_read_prec_or_width+1)^(0+128),w
 12037     11AD  0085               	movwf	5
 12038     11AE  0800               	movf	0,w	;code access
 12039     11AF  3ED0               	addlw	208
 12040     11B0  00AC               	movwf	read_prec_or_width@c^(0+128)
 12041     11B1  300A               	movlw	10
 12042     11B2  022C               	subwf	read_prec_or_width@c^(0+128),w
 12043     11B3  1C03               	skipc
 12044     11B4  29B6               	goto	u4661
 12045     11B5  29B7               	goto	u4660
 12046     11B6                     u4661:
 12047     11B6  2989               	goto	l4560
 12048     11B7                     u4660:
 12049     11B7                     l4566:
 12050                           
 12051                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1170:     return 
      +                          n;
 12052     11B7  082E               	movf	(read_prec_or_width@n+1)^(0+128),w
 12053     11B8  00A7               	movwf	(?_read_prec_or_width+1)^(0+128)
 12054     11B9  082D               	movf	read_prec_or_width@n^(0+128),w
 12055     11BA  00A6               	movwf	?_read_prec_or_width^(0+128)
 12056     11BB                     l1749:
 12057     11BB  0008               	return
 12058     11BC                     __end_of_read_prec_or_width:
 12059                           
 12060                           	psect	text22
 12061     070C                     __ptext22:	
 12062 ;; *************** function _dtoa *****************
 12063 ;; Defined at:
 12064 ;;		line 513 in file "C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c"
 12065 ;; Parameters:    Size  Location     Type
 12066 ;;  fp              2   28[BANK1 ] PTR struct _IO_FILE
 12067 ;;		 -> sprintf@f(11), NULL(0), 
 12068 ;;  d               2   30[BANK1 ] int 
 12069 ;; Auto vars:     Size  Location     Type
 12070 ;;  i               2   39[BANK1 ] int 
 12071 ;;  w               2   36[BANK1 ] int 
 12072 ;;  s               1   38[BANK1 ] unsigned char 
 12073 ;;  p               1   35[BANK1 ] _Bool 
 12074 ;; Return value:  Size  Location     Type
 12075 ;;                  2   28[BANK1 ] int 
 12076 ;; Registers used:
 12077 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 12078 ;; Tracked objects:
 12079 ;;		On entry : 0/0
 12080 ;;		On exit  : 0/0
 12081 ;;		Unchanged: 0/0
 12082 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 12083 ;;      Params:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0
 12084 ;;      Locals:         0       0       8       0       0       0       0       0       0       0       0       0       
      +0       0
 12085 ;;      Temps:          0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0
 12086 ;;      Totals:         0       0      13       0       0       0       0       0       0       0       0       0       
      +0       0
 12087 ;;Total ram usage:       13 bytes
 12088 ;; Hardware stack levels used: 1
 12089 ;; Hardware stack levels required when called: 10
 12090 ;; This function calls:
 12091 ;;		___awdiv
 12092 ;;		___awmod
 12093 ;;		_abs
 12094 ;;		_pad
 12095 ;; This function is called by:
 12096 ;;		_vfpfcnvrt
 12097 ;; This function uses a non-reentrant model
 12098 ;;
 12099                           
 12100     070C                     _dtoa:	
 12101                           ;psect for function _dtoa
 12102                           
 12103     070C                     l4476:	
 12104                           ;incstack = 0
 12105                           ; Regs used in _dtoa: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 12106                           
 12107                           
 12108                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 513: static int d
      +                          toa(FILE *fp, vfpf_sint_t d);C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common
      +                          \doprnt.c: 514: {;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 
      +                          515:  char s;;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 516:
      +                               int i, w;;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 520
      +                          :  _Bool p = 1;
 12109     070C  3001               	movlw	1
 12110     070D  0021               	movlb	1	; select bank1
 12111     070E  00C3               	movwf	dtoa@p^(0+128)
 12112     070F                     l4478:
 12113                           
 12114                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 524:     s = d < 
      +                          0 ? 1 : 0;
 12115     070F  1BBF               	btfsc	(dtoa@d+1)^(0+128),7
 12116     0710  2F12               	goto	u4501
 12117     0711  2F14               	goto	u4500
 12118     0712                     u4501:
 12119     0712  3001               	movlw	1
 12120     0713  2F15               	goto	u4510
 12121     0714                     u4500:
 12122     0714  3000               	movlw	0
 12123     0715                     u4510:
 12124     0715  00C6               	movwf	dtoa@s^(0+128)
 12125                           
 12126                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 535:     w = widt
      +                          h;
 12127     0716  0020               	movlb	0	; select bank0
 12128     0717  0856               	movf	_width+1,w
 12129     0718  0021               	movlb	1	; select bank1
 12130     0719  00C5               	movwf	(dtoa@w+1)^(0+128)
 12131     071A  0020               	movlb	0	; select bank0
 12132     071B  0855               	movf	_width,w
 12133     071C  0021               	movlb	1	; select bank1
 12134     071D  00C4               	movwf	dtoa@w^(0+128)
 12135     071E                     l4480:
 12136                           
 12137                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 536:     if (s
 12138     071E  0846               	movf	dtoa@s^(0+128),w
 12139     071F  1903               	btfsc	3,2
 12140     0720  2F22               	goto	u4521
 12141     0721  2F23               	goto	u4520
 12142     0722                     u4521:
 12143     0722  2F37               	goto	l1718
 12144     0723                     u4520:
 12145     0723                     l4482:
 12146                           
 12147                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 540:     ) {;C:\P
      +                          rogram Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 541:         --w;
 12148     0723  30FF               	movlw	255
 12149     0724  07C4               	addwf	dtoa@w^(0+128),f
 12150     0725  30FF               	movlw	255
 12151     0726  3DC5               	addwfc	(dtoa@w+1)^(0+128),f
 12152     0727                     l4484:
 12153                           
 12154                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 542:   s = s ? '-
      +                          ' : '+';
 12155     0727  0846               	movf	dtoa@s^(0+128),w
 12156     0728  1D03               	btfss	3,2
 12157     0729  2F2B               	goto	u4531
 12158     072A  2F2C               	goto	u4530
 12159     072B                     u4531:
 12160     072B  2F31               	goto	l4488
 12161     072C                     u4530:
 12162     072C                     l4486:
 12163     072C  302B               	movlw	43
 12164     072D  00C1               	movwf	_dtoa$2167^(0+128)
 12165     072E  3000               	movlw	0
 12166     072F  00C2               	movwf	(_dtoa$2167^(0+128)+1)
 12167     0730  2F35               	goto	l1722
 12168     0731                     l4488:
 12169     0731  302D               	movlw	45
 12170     0732  00C1               	movwf	_dtoa$2167^(0+128)
 12171     0733  3000               	movlw	0
 12172     0734  00C2               	movwf	(_dtoa$2167^(0+128)+1)
 12173     0735                     l1722:
 12174     0735  0841               	movf	_dtoa$2167^(0+128),w
 12175     0736  00C6               	movwf	dtoa@s^(0+128)
 12176     0737                     l1718:	
 12177                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 543:     }
 12178                           
 12179                           
 12180                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 552:     i = size
      +                          of(dbuf) - 1;
 12181     0737  301F               	movlw	31
 12182     0738  00C7               	movwf	dtoa@i^(0+128)
 12183     0739  3000               	movlw	0
 12184     073A  00C8               	movwf	(dtoa@i^(0+128)+1)
 12185     073B                     l4490:
 12186                           
 12187                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 553:     dbuf[i] 
      +                          = '\0';
 12188     073B  0023               	movlb	3	; select bank3
 12189     073C  01D7               	clrf	(_dbuf^(0+384)+31)
 12190                           
 12191                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 554:     while (!
      +                          (i < 1) && (d != 0
 12192     073D  2F74               	goto	l4502
 12193     073E                     l4492:
 12194                           
 12195                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 563:     )) {;C:\
      +                          Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 564:         --i;
 12196     073E  30FF               	movlw	255
 12197     073F  0021               	movlb	1	; select bank1
 12198     0740  07C7               	addwf	dtoa@i^(0+128),f
 12199     0741  30FF               	movlw	255
 12200     0742  3DC8               	addwfc	(dtoa@i+1)^(0+128),f
 12201     0743                     l4494:
 12202                           
 12203                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 565:         dbuf
      +                          [i] = (char)((int)'0' + abs(d % 10));
 12204     0743  0847               	movf	dtoa@i^(0+128),w
 12205     0744  3EB8               	addlw	(low (_dbuf| (0+256)))& (0+255)
 12206     0745  0086               	movwf	6
 12207     0746  3001               	movlw	1	; select bank3/4
 12208     0747  0087               	movwf	7
 12209     0748  300A               	movlw	10
 12210     0749  00A0               	movwf	___awmod@divisor^(0+128)
 12211     074A  3000               	movlw	0
 12212     074B  00A1               	movwf	(___awmod@divisor^(0+128)+1)
 12213     074C  083F               	movf	(dtoa@d+1)^(0+128),w
 12214     074D  00A3               	movwf	(___awmod@dividend+1)^(0+128)
 12215     074E  083E               	movf	dtoa@d^(0+128),w
 12216     074F  00A2               	movwf	___awmod@dividend^(0+128)
 12217     0750  319F  2759  3187   	fcall	___awmod
 12218     0753  0021               	movlb	1	; select bank1
 12219     0754  0821               	movf	(?___awmod+1)^(0+128),w
 12220     0755  00A7               	movwf	(abs@a+1)^(0+128)
 12221     0756  0820               	movf	?___awmod^(0+128),w
 12222     0757  00A6               	movwf	abs@a^(0+128)
 12223     0758  319C  2406  3187   	fcall	_abs
 12224     075B  0021               	movlb	1	; select bank1
 12225     075C  0826               	movf	?_abs^(0+128),w
 12226     075D  3E30               	addlw	48
 12227     075E  0081               	movwf	1
 12228     075F                     l4496:
 12229                           
 12230                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 569:   p = 0;
 12231     075F  01C3               	clrf	dtoa@p^(0+128)
 12232     0760                     l4498:
 12233                           
 12234                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 571:         --w;
 12235     0760  30FF               	movlw	255
 12236     0761  07C4               	addwf	dtoa@w^(0+128),f
 12237     0762  30FF               	movlw	255
 12238     0763  3DC5               	addwfc	(dtoa@w+1)^(0+128),f
 12239     0764                     l4500:
 12240                           
 12241                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 572:         d = 
      +                          d / 10;
 12242     0764  300A               	movlw	10
 12243     0765  00A0               	movwf	___awdiv@divisor^(0+128)
 12244     0766  3000               	movlw	0
 12245     0767  00A1               	movwf	(___awdiv@divisor^(0+128)+1)
 12246     0768  083F               	movf	(dtoa@d+1)^(0+128),w
 12247     0769  00A3               	movwf	(___awdiv@dividend+1)^(0+128)
 12248     076A  083E               	movf	dtoa@d^(0+128),w
 12249     076B  00A2               	movwf	___awdiv@dividend^(0+128)
 12250     076C  3191  2103  3187   	fcall	___awdiv
 12251     076F  0021               	movlb	1	; select bank1
 12252     0770  0821               	movf	(?___awdiv+1)^(0+128),w
 12253     0771  00BF               	movwf	(dtoa@d+1)^(0+128)
 12254     0772  0820               	movf	?___awdiv^(0+128),w
 12255     0773  00BE               	movwf	dtoa@d^(0+128)
 12256     0774                     l4502:
 12257                           
 12258                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 554:     while (!
      +                          (i < 1) && (d != 0
 12259     0774  0021               	movlb	1	; select bank1
 12260     0775  0848               	movf	(dtoa@i+1)^(0+128),w
 12261     0776  3A80               	xorlw	128
 12262     0777  00C0               	movwf	??_dtoa^(0+128)
 12263     0778  3080               	movlw	128
 12264     0779  0240               	subwf	??_dtoa^(0+128),w
 12265     077A  1D03               	skipz
 12266     077B  2F7E               	goto	u4545
 12267     077C  3001               	movlw	1
 12268     077D  0247               	subwf	dtoa@i^(0+128),w
 12269     077E                     u4545:
 12270     077E  1C03               	skipc
 12271     077F  2F81               	goto	u4541
 12272     0780  2F82               	goto	u4540
 12273     0781                     u4541:
 12274     0781  2FA0               	goto	l4512
 12275     0782                     u4540:
 12276     0782                     l4504:
 12277     0782  0021               	movlb	1	; select bank1
 12278     0783  083E               	movf	dtoa@d^(0+128),w
 12279     0784  043F               	iorwf	(dtoa@d+1)^(0+128),w
 12280     0785  1D03               	btfss	3,2
 12281     0786  2F88               	goto	u4551
 12282     0787  2F89               	goto	u4550
 12283     0788                     u4551:
 12284     0788  2F3E               	goto	l4492
 12285     0789                     u4550:
 12286     0789                     l4506:
 12287     0789  0843               	movf	dtoa@p^(0+128),w
 12288     078A  1D03               	btfss	3,2
 12289     078B  2F8D               	goto	u4561
 12290     078C  2F8E               	goto	u4560
 12291     078D                     u4561:
 12292     078D  2F3E               	goto	l4492
 12293     078E                     u4560:
 12294     078E                     l4508:
 12295     078E  0845               	movf	(dtoa@w+1)^(0+128),w
 12296     078F  3A80               	xorlw	128
 12297     0790  00C0               	movwf	??_dtoa^(0+128)
 12298     0791  3080               	movlw	128
 12299     0792  0240               	subwf	??_dtoa^(0+128),w
 12300     0793  1D03               	skipz
 12301     0794  2F97               	goto	u4575
 12302     0795  3001               	movlw	1
 12303     0796  0244               	subwf	dtoa@w^(0+128),w
 12304     0797                     u4575:
 12305     0797  1C03               	skipc
 12306     0798  2F9A               	goto	u4571
 12307     0799  2F9B               	goto	u4570
 12308     079A                     u4571:
 12309     079A  2FA0               	goto	l4512
 12310     079B                     u4570:
 12311     079B                     l4510:
 12312     079B  0020               	movlb	0	; select bank0
 12313     079C  18E3               	btfsc	_flags,1
 12314     079D  2F9F               	goto	u4581
 12315     079E  2FA0               	goto	u4580
 12316     079F                     u4581:
 12317     079F  2F3E               	goto	l4492
 12318     07A0                     u4580:
 12319     07A0                     l4512:
 12320                           
 12321                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 576:     if (s !=
      +                           0) {
 12322     07A0  0021               	movlb	1	; select bank1
 12323     07A1  0846               	movf	dtoa@s^(0+128),w
 12324     07A2  1903               	btfsc	3,2
 12325     07A3  2FA5               	goto	u4591
 12326     07A4  2FA6               	goto	u4590
 12327     07A5                     u4591:
 12328     07A5  2FB1               	goto	l4518
 12329     07A6                     u4590:
 12330     07A6                     l4514:
 12331                           
 12332                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 577:         --i;
 12333     07A6  30FF               	movlw	255
 12334     07A7  07C7               	addwf	dtoa@i^(0+128),f
 12335     07A8  30FF               	movlw	255
 12336     07A9  3DC8               	addwfc	(dtoa@i+1)^(0+128),f
 12337     07AA                     l4516:
 12338                           
 12339                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 578:         dbuf
      +                          [i] = s;
 12340     07AA  0847               	movf	dtoa@i^(0+128),w
 12341     07AB  3EB8               	addlw	(low (_dbuf| (0+256)))& (0+255)
 12342     07AC  0086               	movwf	6
 12343     07AD  3001               	movlw	1	; select bank3/4
 12344     07AE  0087               	movwf	7
 12345     07AF  0846               	movf	dtoa@s^(0+128),w
 12346     07B0  0081               	movwf	1
 12347     07B1                     l4518:
 12348                           
 12349                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 582:     return (
      +                          int) pad(fp, &dbuf[i], w);
 12350     07B1  083D               	movf	(dtoa@fp+1)^(0+128),w
 12351     07B2  00B5               	movwf	(pad@fp+1)^(0+128)
 12352     07B3  083C               	movf	dtoa@fp^(0+128),w
 12353     07B4  00B4               	movwf	pad@fp^(0+128)
 12354     07B5  0847               	movf	dtoa@i^(0+128),w
 12355     07B6  3EB8               	addlw	(low (_dbuf| (0+256)))& (0+255)
 12356     07B7  00B6               	movwf	pad@buf^(0+128)
 12357     07B8  0845               	movf	(dtoa@w+1)^(0+128),w
 12358     07B9  00B8               	movwf	(pad@p+1)^(0+128)
 12359     07BA  0844               	movf	dtoa@w^(0+128),w
 12360     07BB  00B7               	movwf	pad@p^(0+128)
 12361     07BC  319F  27AB  3187   	fcall	_pad
 12362     07BF  0021               	movlb	1	; select bank1
 12363     07C0  0835               	movf	(?_pad+1)^(0+128),w
 12364     07C1  00BD               	movwf	(?_dtoa+1)^(0+128)
 12365     07C2  0834               	movf	?_pad^(0+128),w
 12366     07C3  00BC               	movwf	?_dtoa^(0+128)
 12367     07C4                     l1731:
 12368     07C4  0008               	return
 12369     07C5                     __end_of_dtoa:
 12370                           
 12371                           	psect	text23
 12372     1FAB                     __ptext23:	
 12373 ;; *************** function _pad *****************
 12374 ;; Defined at:
 12375 ;;		line 193 in file "C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c"
 12376 ;; Parameters:    Size  Location     Type
 12377 ;;  fp              2   20[BANK1 ] PTR struct _IO_FILE
 12378 ;;		 -> sprintf@f(11), NULL(0), 
 12379 ;;  buf             1   22[BANK1 ] PTR unsigned char 
 12380 ;;		 -> dbuf(32), 
 12381 ;;  p               2   23[BANK1 ] int 
 12382 ;; Auto vars:     Size  Location     Type
 12383 ;;  i               2   26[BANK1 ] int 
 12384 ;; Return value:  Size  Location     Type
 12385 ;;                  2   20[BANK1 ] int 
 12386 ;; Registers used:
 12387 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 12388 ;; Tracked objects:
 12389 ;;		On entry : 0/0
 12390 ;;		On exit  : 0/0
 12391 ;;		Unchanged: 0/0
 12392 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 12393 ;;      Params:         0       0       5       0       0       0       0       0       0       0       0       0       
      +0       0
 12394 ;;      Locals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0
 12395 ;;      Temps:          0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0
 12396 ;;      Totals:         0       0       8       0       0       0       0       0       0       0       0       0       
      +0       0
 12397 ;;Total ram usage:        8 bytes
 12398 ;; Hardware stack levels used: 1
 12399 ;; Hardware stack levels required when called: 9
 12400 ;; This function calls:
 12401 ;;		_fputc
 12402 ;;		_fputs
 12403 ;;		_strlen
 12404 ;; This function is called by:
 12405 ;;		_dtoa
 12406 ;;		_utoa
 12407 ;; This function uses a non-reentrant model
 12408 ;;
 12409                           
 12410     1FAB                     _pad:	
 12411                           ;psect for function _pad
 12412                           
 12413     1FAB                     l4434:	
 12414                           ;incstack = 0
 12415                           ; Regs used in _pad: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 12416                           
 12417                           
 12418                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 193: static int p
      +                          ad(FILE *fp, char *buf, int p);C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\comm
      +                          on\doprnt.c: 194: {;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c
      +                          : 195:     int i;;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 
      +                          199:     if (flags & (1 << 0)) {
 12419     1FAB  0020               	movlb	0	; select bank0
 12420     1FAC  1C63               	btfss	_flags,0
 12421     1FAD  2FAF               	goto	u4421
 12422     1FAE  2FB0               	goto	u4420
 12423     1FAF                     u4421:
 12424     1FAF  2FBA               	goto	l4438
 12425     1FB0                     u4420:
 12426     1FB0                     l4436:
 12427                           
 12428                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 200:         fput
      +                          s((const char *)buf, fp);
 12429     1FB0  0021               	movlb	1	; select bank1
 12430     1FB1  0836               	movf	pad@buf^(0+128),w
 12431     1FB2  00AC               	movwf	fputs@s^(0+128)
 12432     1FB3  0835               	movf	(pad@fp+1)^(0+128),w
 12433     1FB4  00AE               	movwf	(fputs@fp+1)^(0+128)
 12434     1FB5  0834               	movf	pad@fp^(0+128),w
 12435     1FB6  00AD               	movwf	fputs@fp^(0+128)
 12436     1FB7  319D  25C5  319F   	fcall	_fputs
 12437     1FBA                     l4438:
 12438                           
 12439                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 205:  if (p < 0) 
      +                          {
 12440     1FBA  0021               	movlb	1	; select bank1
 12441     1FBB  1FB8               	btfss	(pad@p+1)^(0+128),7
 12442     1FBC  2FBE               	goto	u4431
 12443     1FBD  2FBF               	goto	u4430
 12444     1FBE                     u4431:
 12445     1FBE  2FC1               	goto	l1710
 12446     1FBF                     u4430:
 12447     1FBF                     l4440:
 12448                           
 12449                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 206:   p = 0;
 12450     1FBF  01B7               	clrf	pad@p^(0+128)
 12451     1FC0  01B8               	clrf	(pad@p+1)^(0+128)
 12452     1FC1                     l1710:	
 12453                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 207:  }
 12454                           
 12455                           
 12456                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 208:     i = 0;
 12457     1FC1  01BA               	clrf	pad@i^(0+128)
 12458     1FC2  01BB               	clrf	(pad@i+1)^(0+128)
 12459                           
 12460                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 209:     while (i
      +                           < p) {
 12461     1FC3  2FD5               	goto	l4446
 12462     1FC4                     l4442:
 12463                           
 12464                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 210:         fput
      +                          c(' ', fp);
 12465     1FC4  3020               	movlw	32
 12466     1FC5  0021               	movlb	1	; select bank1
 12467     1FC6  00A3               	movwf	fputc@c^(0+128)
 12468     1FC7  3000               	movlw	0
 12469     1FC8  00A4               	movwf	(fputc@c^(0+128)+1)
 12470     1FC9  0835               	movf	(pad@fp+1)^(0+128),w
 12471     1FCA  00A6               	movwf	(fputc@fp+1)^(0+128)
 12472     1FCB  0834               	movf	pad@fp^(0+128),w
 12473     1FCC  00A5               	movwf	fputc@fp^(0+128)
 12474     1FCD  3191  21BC  319F   	fcall	_fputc
 12475     1FD0                     l4444:
 12476                           
 12477                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 211:         ++i;
 12478     1FD0  3001               	movlw	1
 12479     1FD1  0021               	movlb	1	; select bank1
 12480     1FD2  07BA               	addwf	pad@i^(0+128),f
 12481     1FD3  3000               	movlw	0
 12482     1FD4  3DBB               	addwfc	(pad@i+1)^(0+128),f
 12483     1FD5                     l4446:
 12484                           
 12485                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 209:     while (i
      +                           < p) {
 12486     1FD5  083B               	movf	(pad@i+1)^(0+128),w
 12487     1FD6  3A80               	xorlw	128
 12488     1FD7  00B9               	movwf	??_pad^(0+128)
 12489     1FD8  0838               	movf	(pad@p+1)^(0+128),w
 12490     1FD9  3A80               	xorlw	128
 12491     1FDA  0239               	subwf	??_pad^(0+128),w
 12492     1FDB  1D03               	skipz
 12493     1FDC  2FDF               	goto	u4445
 12494     1FDD  0837               	movf	pad@p^(0+128),w
 12495     1FDE  023A               	subwf	pad@i^(0+128),w
 12496     1FDF                     u4445:
 12497     1FDF  1C03               	skipc
 12498     1FE0  2FE2               	goto	u4441
 12499     1FE1  2FE3               	goto	u4440
 12500     1FE2                     u4441:
 12501     1FE2  2FC4               	goto	l4442
 12502     1FE3                     u4440:
 12503     1FE3                     l1713:
 12504                           
 12505                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 216:     if (!(fl
      +                          ags & (1 << 0))) {
 12506     1FE3  0020               	movlb	0	; select bank0
 12507     1FE4  1863               	btfsc	_flags,0
 12508     1FE5  2FE7               	goto	u4451
 12509     1FE6  2FE8               	goto	u4450
 12510     1FE7                     u4451:
 12511     1FE7  2FF2               	goto	l4450
 12512     1FE8                     u4450:
 12513     1FE8                     l4448:
 12514                           
 12515                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 218:         fput
      +                          s((const char *)buf, fp);
 12516     1FE8  0021               	movlb	1	; select bank1
 12517     1FE9  0836               	movf	pad@buf^(0+128),w
 12518     1FEA  00AC               	movwf	fputs@s^(0+128)
 12519     1FEB  0835               	movf	(pad@fp+1)^(0+128),w
 12520     1FEC  00AE               	movwf	(fputs@fp+1)^(0+128)
 12521     1FED  0834               	movf	pad@fp^(0+128),w
 12522     1FEE  00AD               	movwf	fputs@fp^(0+128)
 12523     1FEF  319D  25C5  319F   	fcall	_fputs
 12524     1FF2                     l4450:
 12525                           
 12526                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 224:     return (
      +                          int)(strlen(buf) + (size_t)p);
 12527     1FF2  0021               	movlb	1	; select bank1
 12528     1FF3  0836               	movf	pad@buf^(0+128),w
 12529     1FF4  00A0               	movwf	strlen@s^(0+128)
 12530     1FF5  319C  247E  319F   	fcall	_strlen
 12531     1FF8  0021               	movlb	1	; select bank1
 12532     1FF9  0837               	movf	pad@p^(0+128),w
 12533     1FFA  0720               	addwf	?_strlen^(0+128),w
 12534     1FFB  00B4               	movwf	?_pad^(0+128)
 12535     1FFC  0838               	movf	(pad@p+1)^(0+128),w
 12536     1FFD  3D21               	addwfc	(?_strlen+1)^(0+128),w
 12537     1FFE  00B5               	movwf	(?_pad+1)^(0+128)
 12538     1FFF                     l1715:
 12539     1FFF  0008               	return
 12540     2000                     __end_of_pad:
 12541                           
 12542                           	psect	text24
 12543     1C7E                     __ptext24:	
 12544 ;; *************** function _strlen *****************
 12545 ;; Defined at:
 12546 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\strlen.c"
 12547 ;; Parameters:    Size  Location     Type
 12548 ;;  s               1    0[BANK1 ] PTR const unsigned char 
 12549 ;;		 -> dbuf(32), 
 12550 ;; Auto vars:     Size  Location     Type
 12551 ;;  a               1    2[BANK1 ] PTR const unsigned char 
 12552 ;;		 -> dbuf(32), 
 12553 ;; Return value:  Size  Location     Type
 12554 ;;                  2    0[BANK1 ] unsigned int 
 12555 ;; Registers used:
 12556 ;;		wreg, fsr1l, fsr1h, status,2, status,0
 12557 ;; Tracked objects:
 12558 ;;		On entry : 0/0
 12559 ;;		On exit  : 0/0
 12560 ;;		Unchanged: 0/0
 12561 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 12562 ;;      Params:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0
 12563 ;;      Locals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0
 12564 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12565 ;;      Totals:         0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0
 12566 ;;Total ram usage:        3 bytes
 12567 ;; Hardware stack levels used: 1
 12568 ;; Hardware stack levels required when called: 5
 12569 ;; This function calls:
 12570 ;;		Nothing
 12571 ;; This function is called by:
 12572 ;;		_pad
 12573 ;; This function uses a non-reentrant model
 12574 ;;
 12575                           
 12576     1C7E                     _strlen:	
 12577                           ;psect for function _strlen
 12578                           
 12579     1C7E                     l4280:	
 12580                           ;incstack = 0
 12581                           ; Regs used in _strlen: [wreg+fsr1l+fsr1h+status,2+status,0]
 12582                           
 12583     1C7E  0021               	movlb	1	; select bank1
 12584     1C7F  0820               	movf	strlen@s^(0+128),w
 12585     1C80  00A2               	movwf	strlen@a^(0+128)
 12586     1C81  2C84               	goto	l4284
 12587     1C82                     l4282:
 12588     1C82  3001               	movlw	1
 12589     1C83  07A0               	addwf	strlen@s^(0+128),f
 12590     1C84                     l4284:
 12591     1C84  0820               	movf	strlen@s^(0+128),w
 12592     1C85  0086               	movwf	6
 12593     1C86  3001               	movlw	1	; select bank2/3
 12594     1C87  0087               	movwf	7
 12595     1C88  0801               	movf	1,w
 12596     1C89  1D03               	btfss	3,2
 12597     1C8A  2C8C               	goto	u4051
 12598     1C8B  2C8D               	goto	u4050
 12599     1C8C                     u4051:
 12600     1C8C  2C82               	goto	l4282
 12601     1C8D                     u4050:
 12602     1C8D                     l4286:
 12603     1C8D  0822               	movf	strlen@a^(0+128),w
 12604     1C8E  0220               	subwf	strlen@s^(0+128),w
 12605     1C8F  00A0               	movwf	?_strlen^(0+128)
 12606     1C90  01A1               	clrf	(?_strlen+1)^(0+128)
 12607     1C91  1BA0               	btfsc	?_strlen^(0+128),7
 12608     1C92  03A1               	decf	(?_strlen+1)^(0+128),f
 12609     1C93                     l1818:
 12610     1C93  0008               	return
 12611     1C94                     __end_of_strlen:
 12612                           
 12613                           	psect	text25
 12614     1DC5                     __ptext25:	
 12615 ;; *************** function _fputs *****************
 12616 ;; Defined at:
 12617 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\nf_fputs.c"
 12618 ;; Parameters:    Size  Location     Type
 12619 ;;  s               1   12[BANK1 ] PTR const unsigned char 
 12620 ;;		 -> dbuf(32), 
 12621 ;;  fp              2   13[BANK1 ] PTR struct _IO_FILE
 12622 ;;		 -> sprintf@f(11), NULL(0), 
 12623 ;; Auto vars:     Size  Location     Type
 12624 ;;  i               2   18[BANK1 ] int 
 12625 ;;  c               1   17[BANK1 ] unsigned char 
 12626 ;; Return value:  Size  Location     Type
 12627 ;;                  2   12[BANK1 ] int 
 12628 ;; Registers used:
 12629 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 12630 ;; Tracked objects:
 12631 ;;		On entry : 0/0
 12632 ;;		On exit  : 0/0
 12633 ;;		Unchanged: 0/0
 12634 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 12635 ;;      Params:         0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0
 12636 ;;      Locals:         0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0
 12637 ;;      Temps:          0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0
 12638 ;;      Totals:         0       0       8       0       0       0       0       0       0       0       0       0       
      +0       0
 12639 ;;Total ram usage:        8 bytes
 12640 ;; Hardware stack levels used: 1
 12641 ;; Hardware stack levels required when called: 8
 12642 ;; This function calls:
 12643 ;;		_fputc
 12644 ;; This function is called by:
 12645 ;;		_pad
 12646 ;; This function uses a non-reentrant model
 12647 ;;
 12648                           
 12649     1DC5                     _fputs:	
 12650                           ;psect for function _fputs
 12651                           
 12652     1DC5                     l4272:	
 12653                           ;incstack = 0
 12654                           ; Regs used in _fputs: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 12655                           
 12656     1DC5  0021               	movlb	1	; select bank1
 12657     1DC6  01B2               	clrf	fputs@i^(0+128)
 12658     1DC7  01B3               	clrf	(fputs@i+1)^(0+128)
 12659     1DC8  2DDC               	goto	l4278
 12660     1DC9                     l4274:
 12661     1DC9  0831               	movf	fputs@c^(0+128),w
 12662     1DCA  00AF               	movwf	??_fputs^(0+128)
 12663     1DCB  01B0               	clrf	(??_fputs^(0+128)+1)
 12664     1DCC  082F               	movf	??_fputs^(0+128),w
 12665     1DCD  00A3               	movwf	fputc@c^(0+128)
 12666     1DCE  0830               	movf	(??_fputs+1)^(0+128),w
 12667     1DCF  00A4               	movwf	(fputc@c+1)^(0+128)
 12668     1DD0  082E               	movf	(fputs@fp+1)^(0+128),w
 12669     1DD1  00A6               	movwf	(fputc@fp+1)^(0+128)
 12670     1DD2  082D               	movf	fputs@fp^(0+128),w
 12671     1DD3  00A5               	movwf	fputc@fp^(0+128)
 12672     1DD4  3191  21BC  319D   	fcall	_fputc
 12673     1DD7                     l4276:
 12674     1DD7  3001               	movlw	1
 12675     1DD8  0021               	movlb	1	; select bank1
 12676     1DD9  07B2               	addwf	fputs@i^(0+128),f
 12677     1DDA  3000               	movlw	0
 12678     1DDB  3DB3               	addwfc	(fputs@i+1)^(0+128),f
 12679     1DDC                     l4278:
 12680     1DDC  082C               	movf	fputs@s^(0+128),w
 12681     1DDD  0732               	addwf	fputs@i^(0+128),w
 12682     1DDE  0086               	movwf	6
 12683     1DDF  3001               	movlw	1	; select bank2/3
 12684     1DE0  0087               	movwf	7
 12685     1DE1  0801               	movf	1,w
 12686     1DE2  00B1               	movwf	fputs@c^(0+128)
 12687     1DE3  0831               	movf	fputs@c^(0+128),w
 12688     1DE4  1D03               	btfss	3,2
 12689     1DE5  2DE7               	goto	u4041
 12690     1DE6  2DE8               	goto	u4040
 12691     1DE7                     u4041:
 12692     1DE7  2DC9               	goto	l4274
 12693     1DE8                     u4040:
 12694     1DE8                     l1805:
 12695     1DE8  0008               	return
 12696     1DE9                     __end_of_fputs:
 12697                           
 12698                           	psect	text26
 12699     11BC                     __ptext26:	
 12700 ;; *************** function _fputc *****************
 12701 ;; Defined at:
 12702 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\nf_fputc.c"
 12703 ;; Parameters:    Size  Location     Type
 12704 ;;  c               2    3[BANK1 ] int 
 12705 ;;  fp              2    5[BANK1 ] PTR struct _IO_FILE
 12706 ;;		 -> sprintf@f(11), NULL(0), 
 12707 ;; Auto vars:     Size  Location     Type
 12708 ;;		None
 12709 ;; Return value:  Size  Location     Type
 12710 ;;                  2    3[BANK1 ] int 
 12711 ;; Registers used:
 12712 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 12713 ;; Tracked objects:
 12714 ;;		On entry : 0/0
 12715 ;;		On exit  : 0/0
 12716 ;;		Unchanged: 0/0
 12717 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 12718 ;;      Params:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0
 12719 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12720 ;;      Temps:          0       0       5       0       0       0       0       0       0       0       0       0       
      +0       0
 12721 ;;      Totals:         0       0       9       0       0       0       0       0       0       0       0       0       
      +0       0
 12722 ;;Total ram usage:        9 bytes
 12723 ;; Hardware stack levels used: 1
 12724 ;; Hardware stack levels required when called: 7
 12725 ;; This function calls:
 12726 ;;		_putch
 12727 ;; This function is called by:
 12728 ;;		_pad
 12729 ;;		_vfpfcnvrt
 12730 ;;		_fputs
 12731 ;; This function uses a non-reentrant model
 12732 ;;
 12733                           
 12734     11BC                     _fputc:	
 12735                           ;psect for function _fputc
 12736                           
 12737     11BC                     l4256:	
 12738                           ;incstack = 0
 12739                           ; Regs used in _fputc: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 12740                           
 12741     11BC  0021               	movlb	1	; select bank1
 12742     11BD  0825               	movf	fputc@fp^(0+128),w
 12743     11BE  0426               	iorwf	(fputc@fp+1)^(0+128),w
 12744     11BF  1903               	btfsc	3,2
 12745     11C0  29C2               	goto	u4001
 12746     11C1  29C3               	goto	u4000
 12747     11C2                     u4001:
 12748     11C2  29C9               	goto	l4260
 12749     11C3                     u4000:
 12750     11C3                     l4258:
 12751     11C3  0825               	movf	fputc@fp^(0+128),w
 12752     11C4  0426               	iorwf	(fputc@fp+1)^(0+128),w
 12753     11C5  1D03               	btfss	3,2
 12754     11C6  29C8               	goto	u4011
 12755     11C7  29C9               	goto	u4010
 12756     11C8                     u4011:
 12757     11C8  29CE               	goto	l4262
 12758     11C9                     u4010:
 12759     11C9                     l4260:
 12760     11C9  0823               	movf	fputc@c^(0+128),w
 12761     11CA  319B  23F5  3191   	fcall	_putch
 12762     11CD  2A19               	goto	l1797
 12763     11CE                     l4262:
 12764     11CE  0825               	movf	fputc@fp^(0+128),w
 12765     11CF  0086               	movwf	6
 12766     11D0  0826               	movf	(fputc@fp+1)^(0+128),w
 12767     11D1  0087               	movwf	7
 12768     11D2  3149               	addfsr 1,9
 12769     11D3  0016               	moviw fsr1++
 12770     11D4  0401               	iorwf	1,w
 12771     11D5  1903               	btfsc	3,2
 12772     11D6  29D8               	goto	u4021
 12773     11D7  29D9               	goto	u4020
 12774     11D8                     u4021:
 12775     11D8  29F9               	goto	l4266
 12776     11D9                     u4020:
 12777     11D9                     l4264:
 12778     11D9  0825               	movf	fputc@fp^(0+128),w
 12779     11DA  0086               	movwf	6
 12780     11DB  0826               	movf	(fputc@fp+1)^(0+128),w
 12781     11DC  0087               	movwf	7
 12782     11DD  3149               	addfsr 1,9
 12783     11DE  3F40               	moviw [0]fsr1
 12784     11DF  00A7               	movwf	??_fputc^(0+128)
 12785     11E0  3F41               	moviw [1]fsr1
 12786     11E1  00A8               	movwf	(??_fputc^(0+128)+1)
 12787     11E2  0825               	movf	fputc@fp^(0+128),w
 12788     11E3  0086               	movwf	6
 12789     11E4  0826               	movf	(fputc@fp+1)^(0+128),w
 12790     11E5  0087               	movwf	7
 12791     11E6  3142               	addfsr 1,2
 12792     11E7  3F40               	moviw [0]fsr1
 12793     11E8  00A9               	movwf	(??_fputc+2)^(0+128)
 12794     11E9  3F41               	moviw [1]fsr1
 12795     11EA  00AA               	movwf	((??_fputc+2)^(0+128)+1)
 12796     11EB  082A               	movf	(??_fputc+3)^(0+128),w
 12797     11EC  3A80               	xorlw	128
 12798     11ED  00AB               	movwf	(??_fputc+4)^(0+128)
 12799     11EE  0828               	movf	(??_fputc+1)^(0+128),w
 12800     11EF  3A80               	xorlw	128
 12801     11F0  022B               	subwf	(??_fputc+4)^(0+128),w
 12802     11F1  1D03               	skipz
 12803     11F2  29F5               	goto	u4035
 12804     11F3  0827               	movf	??_fputc^(0+128),w
 12805     11F4  0229               	subwf	(??_fputc+2)^(0+128),w
 12806     11F5                     u4035:
 12807     11F5  1803               	skipnc
 12808     11F6  29F8               	goto	u4031
 12809     11F7  29F9               	goto	u4030
 12810     11F8                     u4031:
 12811     11F8  2A19               	goto	l1797
 12812     11F9                     u4030:
 12813     11F9                     l4266:
 12814     11F9  0021               	movlb	1	; select bank1
 12815     11FA  0825               	movf	fputc@fp^(0+128),w
 12816     11FB  0086               	movwf	6
 12817     11FC  0826               	movf	(fputc@fp+1)^(0+128),w
 12818     11FD  0087               	movwf	7
 12819     11FE  3142               	addfsr 1,2
 12820     11FF  0825               	movf	fputc@fp^(0+128),w
 12821     1200  0084               	movwf	4
 12822     1201  0826               	movf	(fputc@fp+1)^(0+128),w
 12823     1202  0085               	movwf	5
 12824     1203  3F00               	moviw [0]fsr0
 12825     1204  00A7               	movwf	??_fputc^(0+128)
 12826     1205  3F01               	moviw [1]fsr0
 12827     1206  00A8               	movwf	(??_fputc^(0+128)+1)
 12828     1207  3F40               	moviw [0]fsr1
 12829     1208  0727               	addwf	??_fputc^(0+128),w
 12830     1209  0084               	movwf	4
 12831     120A  3F41               	moviw [1]fsr1
 12832     120B  3D28               	addwfc	(??_fputc+1)^(0+128),w
 12833     120C  0085               	movwf	5
 12834     120D  0823               	movf	fputc@c^(0+128),w
 12835     120E  0080               	movwf	0
 12836     120F                     l4268:
 12837     120F  0825               	movf	fputc@fp^(0+128),w
 12838     1210  0086               	movwf	6
 12839     1211  0826               	movf	(fputc@fp+1)^(0+128),w
 12840     1212  0087               	movwf	7
 12841     1213  3142               	addfsr 1,2
 12842     1214  3001               	movlw	1
 12843     1215  0781               	addwf	1,f
 12844     1216  3141               	addfsr 1,1
 12845     1217  1803               	skipnc
 12846     1218  0A81               	incf	1,f
 12847     1219                     l1797:
 12848     1219  0008               	return
 12849     121A                     __end_of_fputc:
 12850                           
 12851                           	psect	text27
 12852     1BF5                     __ptext27:	
 12853 ;; *************** function _putch *****************
 12854 ;; Defined at:
 12855 ;;		line 409 in file "mcc_generated_files/uart/src/eusart.c"
 12856 ;; Parameters:    Size  Location     Type
 12857 ;;  txData          1    wreg     unsigned char 
 12858 ;; Auto vars:     Size  Location     Type
 12859 ;;  txData          1    2[BANK1 ] unsigned char 
 12860 ;; Return value:  Size  Location     Type
 12861 ;;                  1    wreg      void 
 12862 ;; Registers used:
 12863 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 12864 ;; Tracked objects:
 12865 ;;		On entry : 0/0
 12866 ;;		On exit  : 0/0
 12867 ;;		Unchanged: 0/0
 12868 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 12869 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12870 ;;      Locals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0
 12871 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12872 ;;      Totals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0
 12873 ;;Total ram usage:        1 bytes
 12874 ;; Hardware stack levels used: 1
 12875 ;; Hardware stack levels required when called: 6
 12876 ;; This function calls:
 12877 ;;		_EUSART_IsTxReady
 12878 ;;		_EUSART_Write
 12879 ;; This function is called by:
 12880 ;;		_fputc
 12881 ;; This function uses a non-reentrant model
 12882 ;;
 12883                           
 12884     1BF5                     _putch:	
 12885                           ;psect for function _putch
 12886                           
 12887                           
 12888                           ;incstack = 0
 12889                           ; Regs used in _putch: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
 12890                           ;putch@txData stored from wreg
 12891     1BF5  0021               	movlb	1	; select bank1
 12892     1BF6  00A2               	movwf	putch@txData^(0+128)
 12893     1BF7                     l4248:
 12894     1BF7                     l4250:	
 12895                           ;mcc_generated_files/uart/src/eusart.c: 409: void putch(char txData);mcc_generated_files
      +                          /uart/src/eusart.c: 410: {;mcc_generated_files/uart/src/eusart.c: 411:     while(!(EUSAR
      +                          T_IsTxReady()))
 12896                           
 12897                           
 12898                           ;mcc_generated_files/uart/src/eusart.c: 411:     while(!(EUSART_IsTxReady()))
 12899     1BF7  319A  22BF  319B   	fcall	_EUSART_IsTxReady
 12900     1BFA  3A00               	xorlw	0
 12901     1BFB  1903               	skipnz
 12902     1BFC  2BFE               	goto	u3991
 12903     1BFD  2BFF               	goto	u3990
 12904     1BFE                     u3991:
 12905     1BFE  2BF7               	goto	l4250
 12906     1BFF                     u3990:
 12907     1BFF                     l4252:
 12908                           
 12909                           ;mcc_generated_files/uart/src/eusart.c: 415:     return EUSART_Write(txData);;	Return va
      +                          lue of _putch is never used
 12910     1BFF  0021               	movlb	1	; select bank1
 12911     1C00  0822               	movf	putch@txData^(0+128),w
 12912     1C01  00A0               	movwf	EUSART_Write@txData^(0+128)
 12913     1C02  319E  260F  319B   	fcall	_EUSART_Write
 12914     1C05                     l760:
 12915     1C05  0008               	return
 12916     1C06                     __end_of_putch:
 12917                           
 12918                           	psect	text28
 12919     1E0F                     __ptext28:	
 12920 ;; *************** function _EUSART_Write *****************
 12921 ;; Defined at:
 12922 ;;		line 353 in file "mcc_generated_files/uart/src/eusart.c"
 12923 ;; Parameters:    Size  Location     Type
 12924 ;;  txData          1    0[BANK1 ] unsigned char 
 12925 ;; Auto vars:     Size  Location     Type
 12926 ;;  tempTxHead      1    1[BANK1 ] unsigned char 
 12927 ;; Return value:  Size  Location     Type
 12928 ;;                  1    wreg      void 
 12929 ;; Registers used:
 12930 ;;		wreg, fsr1l, fsr1h, status,2, status,0
 12931 ;; Tracked objects:
 12932 ;;		On entry : 0/0
 12933 ;;		On exit  : 0/0
 12934 ;;		Unchanged: 0/0
 12935 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 12936 ;;      Params:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0
 12937 ;;      Locals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0
 12938 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12939 ;;      Totals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0
 12940 ;;Total ram usage:        2 bytes
 12941 ;; Hardware stack levels used: 1
 12942 ;; Hardware stack levels required when called: 5
 12943 ;; This function calls:
 12944 ;;		Nothing
 12945 ;; This function is called by:
 12946 ;;		_putch
 12947 ;; This function uses a non-reentrant model
 12948 ;;
 12949                           
 12950     1E0F                     _EUSART_Write:	
 12951                           ;psect for function _EUSART_Write
 12952                           
 12953     1E0F                     l4232:	
 12954                           ;incstack = 0
 12955                           ; Regs used in _EUSART_Write: [wreg+fsr1l+fsr1h+status,2+status,0]
 12956                           
 12957                           
 12958                           ;mcc_generated_files/uart/src/eusart.c: 353: void EUSART_Write(uint8_t txData);mcc_gener
      +                          ated_files/uart/src/eusart.c: 354: {;mcc_generated_files/uart/src/eusart.c: 355:     uin
      +                          t8_t tempTxHead;;mcc_generated_files/uart/src/eusart.c: 357:     if(0 == PIE1bits.TXIE)
 12959     1E0F  0021               	movlb	1	; select bank1
 12960     1E10  1A11               	btfsc	17,4	;volatile
 12961     1E11  2E13               	goto	u3971
 12962     1E12  2E14               	goto	u3970
 12963     1E13                     u3971:
 12964     1E13  2E18               	goto	l4236
 12965     1E14                     u3970:
 12966     1E14                     l4234:
 12967                           
 12968                           ;mcc_generated_files/uart/src/eusart.c: 358:     {;mcc_generated_files/uart/src/eusart.c
      +                          : 359:         TX1REG = txData;
 12969     1E14  0820               	movf	EUSART_Write@txData^(0+128),w
 12970     1E15  0023               	movlb	3	; select bank3
 12971     1E16  009A               	movwf	26	;volatile
 12972                           
 12973                           ;mcc_generated_files/uart/src/eusart.c: 360:     }
 12974     1E17  2E34               	goto	l739
 12975     1E18                     l4236:
 12976     1E18  0020               	movlb	0	; select bank0
 12977     1E19  086A               	movf	_eusartTxBufferRemaining,w	;volatile
 12978     1E1A  1903               	btfsc	3,2
 12979     1E1B  2E1D               	goto	u3981
 12980     1E1C  2E1E               	goto	u3980
 12981     1E1D                     u3981:
 12982     1E1D  2E34               	goto	l739
 12983     1E1E                     u3980:
 12984     1E1E                     l4238:
 12985                           
 12986                           ;mcc_generated_files/uart/src/eusart.c: 362:     {;mcc_generated_files/uart/src/eusart.c
      +                          : 363:        eusartTxBuffer[eusartTxHead] = txData;
 12987     1E1E  086C               	movf	_eusartTxHead,w
 12988     1E1F  3E43               	addlw	(low (_eusartTxBuffer| (0+256)))& (0+255)
 12989     1E20  0086               	movwf	6
 12990     1E21  3001               	movlw	1	; select bank2/3
 12991     1E22  0087               	movwf	7
 12992     1E23  0021               	movlb	1	; select bank1
 12993     1E24  0820               	movf	EUSART_Write@txData^(0+128),w
 12994     1E25  0081               	movwf	1
 12995     1E26                     l4240:
 12996                           
 12997                           ;mcc_generated_files/uart/src/eusart.c: 364:        tempTxHead = (eusartTxHead + 1U) & (
      +                          (8U) - 1U);
 12998     1E26  0020               	movlb	0	; select bank0
 12999     1E27  086C               	movf	_eusartTxHead,w	;volatile
 13000     1E28  3E01               	addlw	1
 13001     1E29  3907               	andlw	7
 13002     1E2A  0021               	movlb	1	; select bank1
 13003     1E2B  00A1               	movwf	EUSART_Write@tempTxHead^(0+128)
 13004     1E2C                     l4242:
 13005                           
 13006                           ;mcc_generated_files/uart/src/eusart.c: 366:        eusartTxHead = tempTxHead;
 13007     1E2C  0821               	movf	EUSART_Write@tempTxHead^(0+128),w
 13008     1E2D  0020               	movlb	0	; select bank0
 13009     1E2E  00EC               	movwf	_eusartTxHead	;volatile
 13010     1E2F                     l4244:
 13011                           
 13012                           ;mcc_generated_files/uart/src/eusart.c: 367:        PIE1bits.TXIE = 0;
 13013     1E2F  0021               	movlb	1	; select bank1
 13014     1E30  1211               	bcf	17,4	;volatile
 13015     1E31                     l4246:
 13016                           
 13017                           ;mcc_generated_files/uart/src/eusart.c: 368:        eusartTxBufferRemaining--;
 13018     1E31  3001               	movlw	1
 13019     1E32  0020               	movlb	0	; select bank0
 13020     1E33  02EA               	subwf	_eusartTxBufferRemaining,f	;volatile
 13021     1E34                     l739:	
 13022                           ;mcc_generated_files/uart/src/eusart.c: 369:     }
 13023                           
 13024                           
 13025                           ;mcc_generated_files/uart/src/eusart.c: 374:     PIE1bits.TXIE = 1;
 13026     1E34  0021               	movlb	1	; select bank1
 13027     1E35  1611               	bsf	17,4	;volatile
 13028     1E36                     l742:
 13029     1E36  0008               	return
 13030     1E37                     __end_of_EUSART_Write:
 13031                           
 13032                           	psect	text29
 13033     1ABF                     __ptext29:	
 13034 ;; *************** function _EUSART_IsTxReady *****************
 13035 ;; Defined at:
 13036 ;;		line 272 in file "mcc_generated_files/uart/src/eusart.c"
 13037 ;; Parameters:    Size  Location     Type
 13038 ;;		None
 13039 ;; Auto vars:     Size  Location     Type
 13040 ;;		None
 13041 ;; Return value:  Size  Location     Type
 13042 ;;                  1    wreg      _Bool 
 13043 ;; Registers used:
 13044 ;;		wreg, status,2, status,0
 13045 ;; Tracked objects:
 13046 ;;		On entry : 0/0
 13047 ;;		On exit  : 0/0
 13048 ;;		Unchanged: 0/0
 13049 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 13050 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13051 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13052 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13053 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13054 ;;Total ram usage:        0 bytes
 13055 ;; Hardware stack levels used: 1
 13056 ;; Hardware stack levels required when called: 5
 13057 ;; This function calls:
 13058 ;;		Nothing
 13059 ;; This function is called by:
 13060 ;;		_putch
 13061 ;; This function uses a non-reentrant model
 13062 ;;
 13063                           
 13064     1ABF                     _EUSART_IsTxReady:	
 13065                           ;psect for function _EUSART_IsTxReady
 13066                           
 13067     1ABF                     l4228:	
 13068                           ;incstack = 0
 13069                           ; Regs used in _EUSART_IsTxReady: [wreg+status,2+status,0]
 13070                           
 13071                           
 13072                           ;mcc_generated_files/uart/src/eusart.c: 274:     return (eusartTxBufferRemaining ? 1 : 0
      +                          );
 13073     1ABF  0020               	movlb	0	; select bank0
 13074     1AC0  086A               	movf	_eusartTxBufferRemaining,w	;volatile
 13075     1AC1  1D03               	btfss	3,2
 13076     1AC2  2AC4               	goto	u3951
 13077     1AC3  2AC6               	goto	u3950
 13078     1AC4                     u3951:
 13079     1AC4  3001               	movlw	1
 13080     1AC5  2AC7               	goto	u3960
 13081     1AC6                     u3950:
 13082     1AC6  3000               	movlw	0
 13083     1AC7                     u3960:
 13084     1AC7                     l715:
 13085     1AC7  0008               	return
 13086     1AC8                     __end_of_EUSART_IsTxReady:
 13087                           
 13088                           	psect	text30
 13089     1C06                     __ptext30:	
 13090 ;; *************** function _abs *****************
 13091 ;; Defined at:
 13092 ;;		line 1 in file "C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\abs.c"
 13093 ;; Parameters:    Size  Location     Type
 13094 ;;  a               2    6[BANK1 ] int 
 13095 ;; Auto vars:     Size  Location     Type
 13096 ;;		None
 13097 ;; Return value:  Size  Location     Type
 13098 ;;                  2    6[BANK1 ] int 
 13099 ;; Registers used:
 13100 ;;		wreg, status,2, status,0
 13101 ;; Tracked objects:
 13102 ;;		On entry : 0/0
 13103 ;;		On exit  : 0/0
 13104 ;;		Unchanged: 0/0
 13105 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 13106 ;;      Params:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0
 13107 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13108 ;;      Temps:          0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0
 13109 ;;      Totals:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0
 13110 ;;Total ram usage:        4 bytes
 13111 ;; Hardware stack levels used: 1
 13112 ;; Hardware stack levels required when called: 5
 13113 ;; This function calls:
 13114 ;;		Nothing
 13115 ;; This function is called by:
 13116 ;;		_dtoa
 13117 ;; This function uses a non-reentrant model
 13118 ;;
 13119                           
 13120     1C06                     _abs:	
 13121                           ;psect for function _abs
 13122                           
 13123     1C06                     l4454:	
 13124                           ;incstack = 0
 13125                           ; Regs used in _abs: [wreg+status,2+status,0]
 13126                           
 13127     1C06  0021               	movlb	1	; select bank1
 13128     1C07  1BA7               	btfsc	(abs@a+1)^(0+128),7
 13129     1C08  2C0A               	goto	u4461
 13130     1C09  2C0B               	goto	u4460
 13131     1C0A                     u4461:
 13132     1C0A  2C0C               	goto	l4458
 13133     1C0B                     u4460:
 13134     1C0B                     l4456:
 13135     1C0B  2C17               	goto	l1785
 13136     1C0C                     l4458:
 13137     1C0C  0926               	comf	abs@a^(0+128),w
 13138     1C0D  00A8               	movwf	??_abs^(0+128)
 13139     1C0E  0927               	comf	(abs@a+1)^(0+128),w
 13140     1C0F  00A9               	movwf	(??_abs^(0+128)+1)
 13141     1C10  0AA8               	incf	??_abs^(0+128),f
 13142     1C11  1903               	skipnz
 13143     1C12  0AA9               	incf	(??_abs^(0+128)+1),f
 13144     1C13  0828               	movf	??_abs^(0+128),w
 13145     1C14  00A6               	movwf	?_abs^(0+128)
 13146     1C15  0829               	movf	(??_abs+1)^(0+128),w
 13147     1C16  00A7               	movwf	(?_abs+1)^(0+128)
 13148     1C17                     l1785:
 13149     1C17  0008               	return
 13150     1C18                     __end_of_abs:
 13151                           
 13152                           	psect	text31
 13153     1F59                     __ptext31:	
 13154 ;; *************** function ___awmod *****************
 13155 ;; Defined at:
 13156 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\awmod.c"
 13157 ;; Parameters:    Size  Location     Type
 13158 ;;  divisor         2    0[BANK1 ] int 
 13159 ;;  dividend        2    2[BANK1 ] int 
 13160 ;; Auto vars:     Size  Location     Type
 13161 ;;  sign            1    5[BANK1 ] unsigned char 
 13162 ;;  counter         1    4[BANK1 ] unsigned char 
 13163 ;; Return value:  Size  Location     Type
 13164 ;;                  2    0[BANK1 ] int 
 13165 ;; Registers used:
 13166 ;;		wreg, status,2, status,0
 13167 ;; Tracked objects:
 13168 ;;		On entry : 0/0
 13169 ;;		On exit  : 0/0
 13170 ;;		Unchanged: 0/0
 13171 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 13172 ;;      Params:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0
 13173 ;;      Locals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0
 13174 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13175 ;;      Totals:         0       0       6       0       0       0       0       0       0       0       0       0       
      +0       0
 13176 ;;Total ram usage:        6 bytes
 13177 ;; Hardware stack levels used: 1
 13178 ;; Hardware stack levels required when called: 5
 13179 ;; This function calls:
 13180 ;;		Nothing
 13181 ;; This function is called by:
 13182 ;;		_dtoa
 13183 ;; This function uses a non-reentrant model
 13184 ;;
 13185                           
 13186     1F59                     ___awmod:	
 13187                           ;psect for function ___awmod
 13188                           
 13189     1F59                     l4348:	
 13190                           ;incstack = 0
 13191                           ; Regs used in ___awmod: [wreg+status,2+status,0]
 13192                           
 13193     1F59  0021               	movlb	1	; select bank1
 13194     1F5A  01A5               	clrf	___awmod@sign^(0+128)
 13195     1F5B                     l4350:
 13196     1F5B  1FA3               	btfss	(___awmod@dividend+1)^(0+128),7
 13197     1F5C  2F5E               	goto	u4201
 13198     1F5D  2F5F               	goto	u4200
 13199     1F5E                     u4201:
 13200     1F5E  2F66               	goto	l4356
 13201     1F5F                     u4200:
 13202     1F5F                     l4352:
 13203     1F5F  09A2               	comf	___awmod@dividend^(0+128),f
 13204     1F60  09A3               	comf	(___awmod@dividend+1)^(0+128),f
 13205     1F61  0AA2               	incf	___awmod@dividend^(0+128),f
 13206     1F62  1903               	skipnz
 13207     1F63  0AA3               	incf	(___awmod@dividend+1)^(0+128),f
 13208     1F64                     l4354:
 13209     1F64  3001               	movlw	1
 13210     1F65  00A5               	movwf	___awmod@sign^(0+128)
 13211     1F66                     l4356:
 13212     1F66  1FA1               	btfss	(___awmod@divisor+1)^(0+128),7
 13213     1F67  2F69               	goto	u4211
 13214     1F68  2F6A               	goto	u4210
 13215     1F69                     u4211:
 13216     1F69  2F6F               	goto	l4360
 13217     1F6A                     u4210:
 13218     1F6A                     l4358:
 13219     1F6A  09A0               	comf	___awmod@divisor^(0+128),f
 13220     1F6B  09A1               	comf	(___awmod@divisor+1)^(0+128),f
 13221     1F6C  0AA0               	incf	___awmod@divisor^(0+128),f
 13222     1F6D  1903               	skipnz
 13223     1F6E  0AA1               	incf	(___awmod@divisor+1)^(0+128),f
 13224     1F6F                     l4360:
 13225     1F6F  0820               	movf	___awmod@divisor^(0+128),w
 13226     1F70  0421               	iorwf	(___awmod@divisor+1)^(0+128),w
 13227     1F71  1903               	btfsc	3,2
 13228     1F72  2F74               	goto	u4221
 13229     1F73  2F75               	goto	u4220
 13230     1F74                     u4221:
 13231     1F74  2F9C               	goto	l4378
 13232     1F75                     u4220:
 13233     1F75                     l4362:
 13234     1F75  3001               	movlw	1
 13235     1F76  00A4               	movwf	___awmod@counter^(0+128)
 13236     1F77  2F7F               	goto	l4368
 13237     1F78                     l4364:
 13238     1F78  3001               	movlw	1
 13239     1F79                     u4235:
 13240     1F79  35A0               	lslf	___awmod@divisor^(0+128),f
 13241     1F7A  0DA1               	rlf	(___awmod@divisor+1)^(0+128),f
 13242     1F7B  0B89               	decfsz	9,f
 13243     1F7C  2F79               	goto	u4235
 13244     1F7D                     l4366:
 13245     1F7D  3001               	movlw	1
 13246     1F7E  07A4               	addwf	___awmod@counter^(0+128),f
 13247     1F7F                     l4368:
 13248     1F7F  1FA1               	btfss	(___awmod@divisor+1)^(0+128),7
 13249     1F80  2F82               	goto	u4241
 13250     1F81  2F83               	goto	u4240
 13251     1F82                     u4241:
 13252     1F82  2F78               	goto	l4364
 13253     1F83                     u4240:
 13254     1F83                     l4370:
 13255     1F83  0821               	movf	(___awmod@divisor+1)^(0+128),w
 13256     1F84  0223               	subwf	(___awmod@dividend+1)^(0+128),w
 13257     1F85  1D03               	skipz
 13258     1F86  2F89               	goto	u4255
 13259     1F87  0820               	movf	___awmod@divisor^(0+128),w
 13260     1F88  0222               	subwf	___awmod@dividend^(0+128),w
 13261     1F89                     u4255:
 13262     1F89  1C03               	skipc
 13263     1F8A  2F8C               	goto	u4251
 13264     1F8B  2F8D               	goto	u4250
 13265     1F8C                     u4251:
 13266     1F8C  2F91               	goto	l4374
 13267     1F8D                     u4250:
 13268     1F8D                     l4372:
 13269     1F8D  0820               	movf	___awmod@divisor^(0+128),w
 13270     1F8E  02A2               	subwf	___awmod@dividend^(0+128),f
 13271     1F8F  0821               	movf	(___awmod@divisor+1)^(0+128),w
 13272     1F90  3BA3               	subwfb	(___awmod@dividend+1)^(0+128),f
 13273     1F91                     l4374:
 13274     1F91  3001               	movlw	1
 13275     1F92                     u4265:
 13276     1F92  36A1               	lsrf	(___awmod@divisor+1)^(0+128),f
 13277     1F93  0CA0               	rrf	___awmod@divisor^(0+128),f
 13278     1F94  0B89               	decfsz	9,f
 13279     1F95  2F92               	goto	u4265
 13280     1F96                     l4376:
 13281     1F96  3001               	movlw	1
 13282     1F97  02A4               	subwf	___awmod@counter^(0+128),f
 13283     1F98  1D03               	btfss	3,2
 13284     1F99  2F9B               	goto	u4271
 13285     1F9A  2F9C               	goto	u4270
 13286     1F9B                     u4271:
 13287     1F9B  2F83               	goto	l4370
 13288     1F9C                     u4270:
 13289     1F9C                     l4378:
 13290     1F9C  0825               	movf	___awmod@sign^(0+128),w
 13291     1F9D  1903               	btfsc	3,2
 13292     1F9E  2FA0               	goto	u4281
 13293     1F9F  2FA1               	goto	u4280
 13294     1FA0                     u4281:
 13295     1FA0  2FA6               	goto	l4382
 13296     1FA1                     u4280:
 13297     1FA1                     l4380:
 13298     1FA1  09A2               	comf	___awmod@dividend^(0+128),f
 13299     1FA2  09A3               	comf	(___awmod@dividend+1)^(0+128),f
 13300     1FA3  0AA2               	incf	___awmod@dividend^(0+128),f
 13301     1FA4  1903               	skipnz
 13302     1FA5  0AA3               	incf	(___awmod@dividend+1)^(0+128),f
 13303     1FA6                     l4382:
 13304     1FA6  0823               	movf	(___awmod@dividend+1)^(0+128),w
 13305     1FA7  00A1               	movwf	(?___awmod+1)^(0+128)
 13306     1FA8  0822               	movf	___awmod@dividend^(0+128),w
 13307     1FA9  00A0               	movwf	?___awmod^(0+128)
 13308     1FAA                     l1373:
 13309     1FAA  0008               	return
 13310     1FAB                     __end_of___awmod:
 13311                           
 13312                           	psect	text32
 13313     1103                     __ptext32:	
 13314 ;; *************** function ___awdiv *****************
 13315 ;; Defined at:
 13316 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\awdiv.c"
 13317 ;; Parameters:    Size  Location     Type
 13318 ;;  divisor         2    0[BANK1 ] int 
 13319 ;;  dividend        2    2[BANK1 ] int 
 13320 ;; Auto vars:     Size  Location     Type
 13321 ;;  quotient        2    6[BANK1 ] int 
 13322 ;;  sign            1    5[BANK1 ] unsigned char 
 13323 ;;  counter         1    4[BANK1 ] unsigned char 
 13324 ;; Return value:  Size  Location     Type
 13325 ;;                  2    0[BANK1 ] int 
 13326 ;; Registers used:
 13327 ;;		wreg, status,2, status,0
 13328 ;; Tracked objects:
 13329 ;;		On entry : 0/0
 13330 ;;		On exit  : 0/0
 13331 ;;		Unchanged: 0/0
 13332 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 13333 ;;      Params:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0
 13334 ;;      Locals:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0
 13335 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13336 ;;      Totals:         0       0       8       0       0       0       0       0       0       0       0       0       
      +0       0
 13337 ;;Total ram usage:        8 bytes
 13338 ;; Hardware stack levels used: 1
 13339 ;; Hardware stack levels required when called: 5
 13340 ;; This function calls:
 13341 ;;		Nothing
 13342 ;; This function is called by:
 13343 ;;		_dtoa
 13344 ;; This function uses a non-reentrant model
 13345 ;;
 13346                           
 13347     1103                     ___awdiv:	
 13348                           ;psect for function ___awdiv
 13349                           
 13350     1103                     l4304:	
 13351                           ;incstack = 0
 13352                           ; Regs used in ___awdiv: [wreg+status,2+status,0]
 13353                           
 13354     1103  0021               	movlb	1	; select bank1
 13355     1104  01A5               	clrf	___awdiv@sign^(0+128)
 13356     1105                     l4306:
 13357     1105  1FA1               	btfss	(___awdiv@divisor+1)^(0+128),7
 13358     1106  2908               	goto	u4101
 13359     1107  2909               	goto	u4100
 13360     1108                     u4101:
 13361     1108  2910               	goto	l4312
 13362     1109                     u4100:
 13363     1109                     l4308:
 13364     1109  09A0               	comf	___awdiv@divisor^(0+128),f
 13365     110A  09A1               	comf	(___awdiv@divisor+1)^(0+128),f
 13366     110B  0AA0               	incf	___awdiv@divisor^(0+128),f
 13367     110C  1903               	skipnz
 13368     110D  0AA1               	incf	(___awdiv@divisor+1)^(0+128),f
 13369     110E                     l4310:
 13370     110E  3001               	movlw	1
 13371     110F  00A5               	movwf	___awdiv@sign^(0+128)
 13372     1110                     l4312:
 13373     1110  1FA3               	btfss	(___awdiv@dividend+1)^(0+128),7
 13374     1111  2913               	goto	u4111
 13375     1112  2914               	goto	u4110
 13376     1113                     u4111:
 13377     1113  291B               	goto	l4318
 13378     1114                     u4110:
 13379     1114                     l4314:
 13380     1114  09A2               	comf	___awdiv@dividend^(0+128),f
 13381     1115  09A3               	comf	(___awdiv@dividend+1)^(0+128),f
 13382     1116  0AA2               	incf	___awdiv@dividend^(0+128),f
 13383     1117  1903               	skipnz
 13384     1118  0AA3               	incf	(___awdiv@dividend+1)^(0+128),f
 13385     1119                     l4316:
 13386     1119  3001               	movlw	1
 13387     111A  06A5               	xorwf	___awdiv@sign^(0+128),f
 13388     111B                     l4318:
 13389     111B  01A6               	clrf	___awdiv@quotient^(0+128)
 13390     111C  01A7               	clrf	(___awdiv@quotient+1)^(0+128)
 13391     111D                     l4320:
 13392     111D  0820               	movf	___awdiv@divisor^(0+128),w
 13393     111E  0421               	iorwf	(___awdiv@divisor+1)^(0+128),w
 13394     111F  1903               	btfsc	3,2
 13395     1120  2922               	goto	u4121
 13396     1121  2923               	goto	u4120
 13397     1122                     u4121:
 13398     1122  2950               	goto	l4340
 13399     1123                     u4120:
 13400     1123                     l4322:
 13401     1123  3001               	movlw	1
 13402     1124  00A4               	movwf	___awdiv@counter^(0+128)
 13403     1125  292D               	goto	l4328
 13404     1126                     l4324:
 13405     1126  3001               	movlw	1
 13406     1127                     u4135:
 13407     1127  35A0               	lslf	___awdiv@divisor^(0+128),f
 13408     1128  0DA1               	rlf	(___awdiv@divisor+1)^(0+128),f
 13409     1129  0B89               	decfsz	9,f
 13410     112A  2927               	goto	u4135
 13411     112B                     l4326:
 13412     112B  3001               	movlw	1
 13413     112C  07A4               	addwf	___awdiv@counter^(0+128),f
 13414     112D                     l4328:
 13415     112D  1FA1               	btfss	(___awdiv@divisor+1)^(0+128),7
 13416     112E  2930               	goto	u4141
 13417     112F  2931               	goto	u4140
 13418     1130                     u4141:
 13419     1130  2926               	goto	l4324
 13420     1131                     u4140:
 13421     1131                     l4330:
 13422     1131  3001               	movlw	1
 13423     1132                     u4155:
 13424     1132  35A6               	lslf	___awdiv@quotient^(0+128),f
 13425     1133  0DA7               	rlf	(___awdiv@quotient+1)^(0+128),f
 13426     1134  0B89               	decfsz	9,f
 13427     1135  2932               	goto	u4155
 13428     1136  0821               	movf	(___awdiv@divisor+1)^(0+128),w
 13429     1137  0223               	subwf	(___awdiv@dividend+1)^(0+128),w
 13430     1138  1D03               	skipz
 13431     1139  293C               	goto	u4165
 13432     113A  0820               	movf	___awdiv@divisor^(0+128),w
 13433     113B  0222               	subwf	___awdiv@dividend^(0+128),w
 13434     113C                     u4165:
 13435     113C  1C03               	skipc
 13436     113D  293F               	goto	u4161
 13437     113E  2940               	goto	u4160
 13438     113F                     u4161:
 13439     113F  2945               	goto	l4336
 13440     1140                     u4160:
 13441     1140                     l4332:
 13442     1140  0820               	movf	___awdiv@divisor^(0+128),w
 13443     1141  02A2               	subwf	___awdiv@dividend^(0+128),f
 13444     1142  0821               	movf	(___awdiv@divisor+1)^(0+128),w
 13445     1143  3BA3               	subwfb	(___awdiv@dividend+1)^(0+128),f
 13446     1144                     l4334:
 13447     1144  1426               	bsf	___awdiv@quotient^(0+128),0
 13448     1145                     l4336:
 13449     1145  3001               	movlw	1
 13450     1146                     u4175:
 13451     1146  36A1               	lsrf	(___awdiv@divisor+1)^(0+128),f
 13452     1147  0CA0               	rrf	___awdiv@divisor^(0+128),f
 13453     1148  0B89               	decfsz	9,f
 13454     1149  2946               	goto	u4175
 13455     114A                     l4338:
 13456     114A  3001               	movlw	1
 13457     114B  02A4               	subwf	___awdiv@counter^(0+128),f
 13458     114C  1D03               	btfss	3,2
 13459     114D  294F               	goto	u4181
 13460     114E  2950               	goto	u4180
 13461     114F                     u4181:
 13462     114F  2931               	goto	l4330
 13463     1150                     u4180:
 13464     1150                     l4340:
 13465     1150  0825               	movf	___awdiv@sign^(0+128),w
 13466     1151  1903               	btfsc	3,2
 13467     1152  2954               	goto	u4191
 13468     1153  2955               	goto	u4190
 13469     1154                     u4191:
 13470     1154  295A               	goto	l4344
 13471     1155                     u4190:
 13472     1155                     l4342:
 13473     1155  09A6               	comf	___awdiv@quotient^(0+128),f
 13474     1156  09A7               	comf	(___awdiv@quotient+1)^(0+128),f
 13475     1157  0AA6               	incf	___awdiv@quotient^(0+128),f
 13476     1158  1903               	skipnz
 13477     1159  0AA7               	incf	(___awdiv@quotient+1)^(0+128),f
 13478     115A                     l4344:
 13479     115A  0827               	movf	(___awdiv@quotient+1)^(0+128),w
 13480     115B  00A1               	movwf	(?___awdiv+1)^(0+128)
 13481     115C  0826               	movf	___awdiv@quotient^(0+128),w
 13482     115D  00A0               	movwf	?___awdiv^(0+128)
 13483     115E                     l1360:
 13484     115E  0008               	return
 13485     115F                     __end_of___awdiv:
 13486                           
 13487                           	psect	text33
 13488     1D1C                     __ptext33:	
 13489 ;; *************** function ___flsub *****************
 13490 ;; Defined at:
 13491 ;;		line 242 in file "C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\sprcadd.c"
 13492 ;; Parameters:    Size  Location     Type
 13493 ;;  a               4   34[BANK1 ] int 
 13494 ;;  b               4   38[BANK1 ] int 
 13495 ;; Auto vars:     Size  Location     Type
 13496 ;;		None
 13497 ;; Return value:  Size  Location     Type
 13498 ;;                  4   34[BANK1 ] int 
 13499 ;; Registers used:
 13500 ;;		wreg, status,2, status,0, pclath, cstack
 13501 ;; Tracked objects:
 13502 ;;		On entry : 0/0
 13503 ;;		On exit  : 0/0
 13504 ;;		Unchanged: 0/0
 13505 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 13506 ;;      Params:         0       0       8       0       0       0       0       0       0       0       0       0       
      +0       0
 13507 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13508 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13509 ;;      Totals:         0       0       8       0       0       0       0       0       0       0       0       0       
      +0       0
 13510 ;;Total ram usage:        8 bytes
 13511 ;; Hardware stack levels used: 1
 13512 ;; Hardware stack levels required when called: 6
 13513 ;; This function calls:
 13514 ;;		___fladd
 13515 ;; This function is called by:
 13516 ;;		_printFloat
 13517 ;; This function uses a non-reentrant model
 13518 ;;
 13519                           
 13520     1D1C                     ___flsub:	
 13521                           ;psect for function ___flsub
 13522                           
 13523     1D1C                     l5238:	
 13524                           ;incstack = 0
 13525                           ; Regs used in ___flsub: [wreg+status,2+status,0+pclath+cstack]
 13526                           
 13527     1D1C  3080               	movlw	128
 13528     1D1D  0021               	movlb	1	; select bank1
 13529     1D1E  06C5               	xorwf	(___flsub@a+3)^(0+128),f
 13530     1D1F                     l5240:
 13531     1D1F  0849               	movf	(___flsub@b+3)^(0+128),w
 13532     1D20  00B1               	movwf	(___fladd@b+3)^(0+128)
 13533     1D21  0848               	movf	(___flsub@b+2)^(0+128),w
 13534     1D22  00B0               	movwf	(___fladd@b+2)^(0+128)
 13535     1D23  0847               	movf	(___flsub@b+1)^(0+128),w
 13536     1D24  00AF               	movwf	(___fladd@b+1)^(0+128)
 13537     1D25  0846               	movf	___flsub@b^(0+128),w
 13538     1D26  00AE               	movwf	___fladd@b^(0+128)
 13539     1D27  0845               	movf	(___flsub@a+3)^(0+128),w
 13540     1D28  00B5               	movwf	(___fladd@a+3)^(0+128)
 13541     1D29  0844               	movf	(___flsub@a+2)^(0+128),w
 13542     1D2A  00B4               	movwf	(___fladd@a+2)^(0+128)
 13543     1D2B  0843               	movf	(___flsub@a+1)^(0+128),w
 13544     1D2C  00B3               	movwf	(___fladd@a+1)^(0+128)
 13545     1D2D  0842               	movf	___flsub@a^(0+128),w
 13546     1D2E  00B2               	movwf	___fladd@a^(0+128)
 13547     1D2F  3185  2500  319D   	fcall	___fladd
 13548     1D32  0021               	movlb	1	; select bank1
 13549     1D33  0831               	movf	(?___fladd+3)^(0+128),w
 13550     1D34  00C5               	movwf	(?___flsub+3)^(0+128)
 13551     1D35  0830               	movf	(?___fladd+2)^(0+128),w
 13552     1D36  00C4               	movwf	(?___flsub+2)^(0+128)
 13553     1D37  082F               	movf	(?___fladd+1)^(0+128),w
 13554     1D38  00C3               	movwf	(?___flsub+1)^(0+128)
 13555     1D39  082E               	movf	?___fladd^(0+128),w
 13556     1D3A  00C2               	movwf	?___flsub^(0+128)
 13557     1D3B                     l1554:
 13558     1D3B  0008               	return
 13559     1D3C                     __end_of___flsub:
 13560                           
 13561                           	psect	text34
 13562     1AB6                     __ptext34:	
 13563 ;; *************** function _getPomphoogte *****************
 13564 ;; Defined at:
 13565 ;;		line 41 in file "adcMeasurements.c"
 13566 ;; Parameters:    Size  Location     Type
 13567 ;;		None
 13568 ;; Auto vars:     Size  Location     Type
 13569 ;;		None
 13570 ;; Return value:  Size  Location     Type
 13571 ;;                  2    0[BANK1 ] unsigned short 
 13572 ;; Registers used:
 13573 ;;		wreg
 13574 ;; Tracked objects:
 13575 ;;		On entry : 0/0
 13576 ;;		On exit  : 0/0
 13577 ;;		Unchanged: 0/0
 13578 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 13579 ;;      Params:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0
 13580 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13581 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13582 ;;      Totals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0
 13583 ;;Total ram usage:        2 bytes
 13584 ;; Hardware stack levels used: 1
 13585 ;; Hardware stack levels required when called: 5
 13586 ;; This function calls:
 13587 ;;		Nothing
 13588 ;; This function is called by:
 13589 ;;		_main
 13590 ;;		_printLogs
 13591 ;; This function uses a non-reentrant model
 13592 ;;
 13593                           
 13594     1AB6                     _getPomphoogte:	
 13595                           ;psect for function _getPomphoogte
 13596                           
 13597     1AB6                     l5966:	
 13598                           ;incstack = 0
 13599                           ; Regs used in _getPomphoogte: [wreg]
 13600                           
 13601                           
 13602                           ;adcMeasurements.c: 42:     return ADC_pomphoogte;
 13603     1AB6  0020               	movlb	0	; select bank0
 13604     1AB7  085A               	movf	_ADC_pomphoogte+1,w	;volatile
 13605     1AB8  0021               	movlb	1	; select bank1
 13606     1AB9  00A1               	movwf	(?_getPomphoogte+1)^(0+128)
 13607     1ABA  0020               	movlb	0	; select bank0
 13608     1ABB  0859               	movf	_ADC_pomphoogte,w	;volatile
 13609     1ABC  0021               	movlb	1	; select bank1
 13610     1ABD  00A0               	movwf	?_getPomphoogte^(0+128)
 13611     1ABE                     l860:
 13612     1ABE  0008               	return
 13613     1ABF                     __end_of_getPomphoogte:
 13614                           
 13615                           	psect	text35
 13616     1BE4                     __ptext35:	
 13617 ;; *************** function _getKp *****************
 13618 ;; Defined at:
 13619 ;;		line 41 in file "controller.c"
 13620 ;; Parameters:    Size  Location     Type
 13621 ;;		None
 13622 ;; Auto vars:     Size  Location     Type
 13623 ;;		None
 13624 ;; Return value:  Size  Location     Type
 13625 ;;                  4    0[BANK1 ] float 
 13626 ;; Registers used:
 13627 ;;		wreg
 13628 ;; Tracked objects:
 13629 ;;		On entry : 0/0
 13630 ;;		On exit  : 0/0
 13631 ;;		Unchanged: 0/0
 13632 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 13633 ;;      Params:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0
 13634 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13635 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13636 ;;      Totals:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0
 13637 ;;Total ram usage:        4 bytes
 13638 ;; Hardware stack levels used: 1
 13639 ;; Hardware stack levels required when called: 5
 13640 ;; This function calls:
 13641 ;;		Nothing
 13642 ;; This function is called by:
 13643 ;;		_printLogs
 13644 ;; This function uses a non-reentrant model
 13645 ;;
 13646                           
 13647     1BE4                     _getKp:	
 13648                           ;psect for function _getKp
 13649                           
 13650     1BE4                     l6080:	
 13651                           ;incstack = 0
 13652                           ; Regs used in _getKp: [wreg]
 13653                           
 13654     1BE4  0022               	movlb	2	; select bank2
 13655     1BE5  0864               	movf	(_kp+3)^(0+256),w
 13656     1BE6  0021               	movlb	1	; select bank1
 13657     1BE7  00A3               	movwf	(?_getKp+3)^(0+128)
 13658     1BE8  0022               	movlb	2	; select bank2
 13659     1BE9  0863               	movf	(_kp+2)^(0+256),w
 13660     1BEA  0021               	movlb	1	; select bank1
 13661     1BEB  00A2               	movwf	(?_getKp+2)^(0+128)
 13662     1BEC  0022               	movlb	2	; select bank2
 13663     1BED  0862               	movf	(_kp+1)^(0+256),w
 13664     1BEE  0021               	movlb	1	; select bank1
 13665     1BEF  00A1               	movwf	(?_getKp+1)^(0+128)
 13666     1BF0  0022               	movlb	2	; select bank2
 13667     1BF1  0861               	movf	_kp^(0+256),w
 13668     1BF2  0021               	movlb	1	; select bank1
 13669     1BF3  00A0               	movwf	?_getKp^(0+128)
 13670     1BF4                     l979:
 13671     1BF4  0008               	return
 13672     1BF5                     __end_of_getKp:
 13673                           
 13674                           	psect	text36
 13675     1BD3                     __ptext36:	
 13676 ;; *************** function _getKi *****************
 13677 ;; Defined at:
 13678 ;;		line 42 in file "controller.c"
 13679 ;; Parameters:    Size  Location     Type
 13680 ;;		None
 13681 ;; Auto vars:     Size  Location     Type
 13682 ;;		None
 13683 ;; Return value:  Size  Location     Type
 13684 ;;                  4    0[BANK1 ] float 
 13685 ;; Registers used:
 13686 ;;		wreg
 13687 ;; Tracked objects:
 13688 ;;		On entry : 0/0
 13689 ;;		On exit  : 0/0
 13690 ;;		Unchanged: 0/0
 13691 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 13692 ;;      Params:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0
 13693 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13694 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13695 ;;      Totals:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0
 13696 ;;Total ram usage:        4 bytes
 13697 ;; Hardware stack levels used: 1
 13698 ;; Hardware stack levels required when called: 5
 13699 ;; This function calls:
 13700 ;;		Nothing
 13701 ;; This function is called by:
 13702 ;;		_printLogs
 13703 ;; This function uses a non-reentrant model
 13704 ;;
 13705                           
 13706     1BD3                     _getKi:	
 13707                           ;psect for function _getKi
 13708                           
 13709     1BD3                     l6084:	
 13710                           ;incstack = 0
 13711                           ; Regs used in _getKi: [wreg]
 13712                           
 13713     1BD3  0022               	movlb	2	; select bank2
 13714     1BD4  0860               	movf	(_ki+3)^(0+256),w
 13715     1BD5  0021               	movlb	1	; select bank1
 13716     1BD6  00A3               	movwf	(?_getKi+3)^(0+128)
 13717     1BD7  0022               	movlb	2	; select bank2
 13718     1BD8  085F               	movf	(_ki+2)^(0+256),w
 13719     1BD9  0021               	movlb	1	; select bank1
 13720     1BDA  00A2               	movwf	(?_getKi+2)^(0+128)
 13721     1BDB  0022               	movlb	2	; select bank2
 13722     1BDC  085E               	movf	(_ki+1)^(0+256),w
 13723     1BDD  0021               	movlb	1	; select bank1
 13724     1BDE  00A1               	movwf	(?_getKi+1)^(0+128)
 13725     1BDF  0022               	movlb	2	; select bank2
 13726     1BE0  085D               	movf	_ki^(0+256),w
 13727     1BE1  0021               	movlb	1	; select bank1
 13728     1BE2  00A0               	movwf	?_getKi^(0+128)
 13729     1BE3                     l982:
 13730     1BE3  0008               	return
 13731     1BE4                     __end_of_getKi:
 13732                           
 13733                           	psect	text37
 13734     1AAD                     __ptext37:	
 13735 ;; *************** function _getDutycycle *****************
 13736 ;; Defined at:
 13737 ;;		line 40 in file "controller.c"
 13738 ;; Parameters:    Size  Location     Type
 13739 ;;		None
 13740 ;; Auto vars:     Size  Location     Type
 13741 ;;		None
 13742 ;; Return value:  Size  Location     Type
 13743 ;;                  2    0[BANK1 ] unsigned short 
 13744 ;; Registers used:
 13745 ;;		wreg
 13746 ;; Tracked objects:
 13747 ;;		On entry : 0/0
 13748 ;;		On exit  : 0/0
 13749 ;;		Unchanged: 0/0
 13750 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 13751 ;;      Params:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0
 13752 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13753 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13754 ;;      Totals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0
 13755 ;;Total ram usage:        2 bytes
 13756 ;; Hardware stack levels used: 1
 13757 ;; Hardware stack levels required when called: 5
 13758 ;; This function calls:
 13759 ;;		Nothing
 13760 ;; This function is called by:
 13761 ;;		_printLogs
 13762 ;;		_dutycycle_led_strip
 13763 ;; This function uses a non-reentrant model
 13764 ;;
 13765                           
 13766     1AAD                     _getDutycycle:	
 13767                           ;psect for function _getDutycycle
 13768                           
 13769     1AAD                     l6076:	
 13770                           ;incstack = 0
 13771                           ; Regs used in _getDutycycle: [wreg]
 13772                           
 13773     1AAD  0020               	movlb	0	; select bank0
 13774     1AAE  0858               	movf	_dutycycle+1,w
 13775     1AAF  0021               	movlb	1	; select bank1
 13776     1AB0  00A1               	movwf	(?_getDutycycle+1)^(0+128)
 13777     1AB1  0020               	movlb	0	; select bank0
 13778     1AB2  0857               	movf	_dutycycle,w
 13779     1AB3  0021               	movlb	1	; select bank1
 13780     1AB4  00A0               	movwf	?_getDutycycle^(0+128)
 13781     1AB5                     l976:
 13782     1AB5  0008               	return
 13783     1AB6                     __end_of_getDutycycle:
 13784                           
 13785                           	psect	text38
 13786     1B58                     __ptext38:	
 13787 ;; *************** function _initLedstrip *****************
 13788 ;; Defined at:
 13789 ;;		line 116 in file "ledstrip.c"
 13790 ;; Parameters:    Size  Location     Type
 13791 ;;		None
 13792 ;; Auto vars:     Size  Location     Type
 13793 ;;		None
 13794 ;; Return value:  Size  Location     Type
 13795 ;;                  1    wreg      void 
 13796 ;; Registers used:
 13797 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
 13798 ;; Tracked objects:
 13799 ;;		On entry : 0/0
 13800 ;;		On exit  : 0/0
 13801 ;;		Unchanged: 0/0
 13802 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 13803 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13804 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13805 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13806 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13807 ;;Total ram usage:        0 bytes
 13808 ;; Hardware stack levels used: 1
 13809 ;; Hardware stack levels required when called: 7
 13810 ;; This function calls:
 13811 ;;		_SPI1_Open
 13812 ;;		_TMR6_PeriodMatchCallbackRegister
 13813 ;; This function is called by:
 13814 ;;		_main
 13815 ;; This function uses a non-reentrant model
 13816 ;;
 13817                           
 13818     1B58                     _initLedstrip:	
 13819                           ;psect for function _initLedstrip
 13820                           
 13821     1B58                     l6250:	
 13822                           ;incstack = 0
 13823                           ; Regs used in _initLedstrip: [wreg-fsr0h+status,2+status,0+pclath+cstack]
 13824                           
 13825                           
 13826                           ;ledstrip.c: 117:     SPI1_Open(HOST_CONFIG);
 13827     1B58  0021               	movlb	1	; select bank1
 13828     1B59  01A6               	clrf	SPI1_Open@spiConfigIndex^(0+128)
 13829     1B5A  3192  22F8  319B   	fcall	_SPI1_Open
 13830     1B5D                     l6252:
 13831                           
 13832                           ;ledstrip.c: 118:     TMR6_PeriodMatchCallbackRegister(updateLedstripAnimation);
 13833     1B5D  3052               	movlw	low _updateLedstripAnimation
 13834     1B5E  0021               	movlb	1	; select bank1
 13835     1B5F  00A0               	movwf	TMR6_PeriodMatchCallbackRegister@CallbackHandler^(0+128)
 13836     1B60  301A               	movlw	high _updateLedstripAnimation
 13837     1B61  00A1               	movwf	(TMR6_PeriodMatchCallbackRegister@CallbackHandler^(0+128)+1)
 13838     1B62  319A  22A4  319B   	fcall	_TMR6_PeriodMatchCallbackRegister
 13839     1B65                     l1055:
 13840     1B65  0008               	return
 13841     1B66                     __end_of_initLedstrip:
 13842                           
 13843                           	psect	text39
 13844     1AA4                     __ptext39:	
 13845 ;; *************** function _TMR6_PeriodMatchCallbackRegister *****************
 13846 ;; Defined at:
 13847 ;;		line 104 in file "mcc_generated_files/timer/src/tmr6.c"
 13848 ;; Parameters:    Size  Location     Type
 13849 ;;  CallbackHand    2    0[BANK1 ] PTR FTN()void 
 13850 ;;		 -> updateLedstripAnimation(1), 
 13851 ;; Auto vars:     Size  Location     Type
 13852 ;;		None
 13853 ;; Return value:  Size  Location     Type
 13854 ;;                  1    wreg      void 
 13855 ;; Registers used:
 13856 ;;		wreg
 13857 ;; Tracked objects:
 13858 ;;		On entry : 0/0
 13859 ;;		On exit  : 0/0
 13860 ;;		Unchanged: 0/0
 13861 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 13862 ;;      Params:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0
 13863 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13864 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13865 ;;      Totals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0
 13866 ;;Total ram usage:        2 bytes
 13867 ;; Hardware stack levels used: 1
 13868 ;; Hardware stack levels required when called: 5
 13869 ;; This function calls:
 13870 ;;		Nothing
 13871 ;; This function is called by:
 13872 ;;		_initLedstrip
 13873 ;; This function uses a non-reentrant model
 13874 ;;
 13875                           
 13876     1AA4                     _TMR6_PeriodMatchCallbackRegister:	
 13877                           ;psect for function _TMR6_PeriodMatchCallbackRegister
 13878                           
 13879     1AA4                     l5962:	
 13880                           ;incstack = 0
 13881                           ; Regs used in _TMR6_PeriodMatchCallbackRegister: [wreg]
 13882                           
 13883                           
 13884                           ;mcc_generated_files/timer/src/tmr6.c: 104: void TMR6_PeriodMatchCallbackRegister(void (
      +                          * CallbackHandler)(void));mcc_generated_files/timer/src/tmr6.c: 105: {;mcc_generated_fil
      +                          es/timer/src/tmr6.c: 106:    TMR6_PeriodMatchCallback = CallbackHandler;
 13885     1AA4  0021               	movlb	1	; select bank1
 13886     1AA5  0821               	movf	(TMR6_PeriodMatchCallbackRegister@CallbackHandler+1)^(0+128),w
 13887     1AA6  0022               	movlb	2	; select bank2
 13888     1AA7  00E8               	movwf	(_TMR6_PeriodMatchCallback+1)^(0+256)
 13889     1AA8  0021               	movlb	1	; select bank1
 13890     1AA9  0820               	movf	TMR6_PeriodMatchCallbackRegister@CallbackHandler^(0+128),w
 13891     1AAA  0022               	movlb	2	; select bank2
 13892     1AAB  00E7               	movwf	_TMR6_PeriodMatchCallback^(0+256)
 13893     1AAC                     l543:
 13894     1AAC  0008               	return
 13895     1AAD                     __end_of_TMR6_PeriodMatchCallbackRegister:
 13896                           
 13897                           	psect	text40
 13898     12F8                     __ptext40:	
 13899 ;; *************** function _SPI1_Open *****************
 13900 ;; Defined at:
 13901 ;;		line 81 in file "mcc_generated_files/spi/src/mssp1.c"
 13902 ;; Parameters:    Size  Location     Type
 13903 ;;  spiConfigInd    1    6[BANK1 ] unsigned char 
 13904 ;; Auto vars:     Size  Location     Type
 13905 ;;  returnValue     1    0        _Bool 
 13906 ;; Return value:  Size  Location     Type
 13907 ;;                  1    wreg      _Bool 
 13908 ;; Registers used:
 13909 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
 13910 ;; Tracked objects:
 13911 ;;		On entry : 0/0
 13912 ;;		On exit  : 0/0
 13913 ;;		Unchanged: 0/0
 13914 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 13915 ;;      Params:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0
 13916 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13917 ;;      Temps:          0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0
 13918 ;;      Totals:         0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0
 13919 ;;Total ram usage:        3 bytes
 13920 ;; Hardware stack levels used: 1
 13921 ;; Hardware stack levels required when called: 6
 13922 ;; This function calls:
 13923 ;;		___wmul
 13924 ;; This function is called by:
 13925 ;;		_initLedstrip
 13926 ;; This function uses a non-reentrant model
 13927 ;;
 13928                           
 13929     12F8                     _SPI1_Open:	
 13930                           ;psect for function _SPI1_Open
 13931                           
 13932     12F8                     l5830:	
 13933                           ;incstack = 0
 13934                           ; Regs used in _SPI1_Open: [wreg-fsr0h+status,2+status,0+pclath+cstack]
 13935                           
 13936     12F8                     l5832:
 13937                           
 13938                           ;mcc_generated_files/spi/src/mssp1.c: 84:     if (SSP1CON1bits.SSPEN == 0)
 13939     12F8  0024               	movlb	4	; select bank4
 13940     12F9  1A95               	btfsc	21,5	;volatile
 13941     12FA  2AFC               	goto	u7221
 13942     12FB  2AFD               	goto	u7220
 13943     12FC                     u7221:
 13944     12FC  2B67               	goto	l5840
 13945     12FD                     u7220:
 13946     12FD                     l5834:
 13947                           
 13948                           ;mcc_generated_files/spi/src/mssp1.c: 85:     {;mcc_generated_files/spi/src/mssp1.c: 86:
      +                                   SSP1STAT = spi1_configuration[spiConfigIndex].stat;
 13949     12FD  0021               	movlb	1	; select bank1
 13950     12FE  0826               	movf	SPI1_Open@spiConfigIndex^(0+128),w
 13951     12FF  00A7               	movwf	??_SPI1_Open^(0+128)
 13952     1300  01A8               	clrf	(??_SPI1_Open^(0+128)+1)
 13953     1301  0827               	movf	??_SPI1_Open^(0+128),w
 13954     1302  00A0               	movwf	___wmul@multiplier^(0+128)
 13955     1303  0828               	movf	(??_SPI1_Open+1)^(0+128),w
 13956     1304  00A1               	movwf	(___wmul@multiplier+1)^(0+128)
 13957     1305  3005               	movlw	5
 13958     1306  00A2               	movwf	___wmul@multiplicand^(0+128)
 13959     1307  3000               	movlw	0
 13960     1308  00A3               	movwf	(___wmul@multiplicand^(0+128)+1)
 13961     1309  319C  24FC  3192   	fcall	___wmul
 13962     130C  30FB               	movlw	low _spi1_configuration
 13963     130D  0021               	movlb	1	; select bank1
 13964     130E  0720               	addwf	?___wmul^(0+128),w
 13965     130F  0084               	movwf	4
 13966     1310  3018               	movlw	high _spi1_configuration
 13967     1311  3D21               	addwfc	(?___wmul+1)^(0+128),w
 13968     1312  3880               	iorlw	128
 13969     1313  0085               	movwf	5
 13970     1314  0800               	movf	0,w	;code access
 13971     1315  0024               	movlb	4	; select bank4
 13972     1316  0094               	movwf	20	;volatile
 13973                           
 13974                           ;mcc_generated_files/spi/src/mssp1.c: 87:         SSP1CON1 = spi1_configuration[spiConfi
      +                          gIndex].con1;
 13975     1317  0021               	movlb	1	; select bank1
 13976     1318  0826               	movf	SPI1_Open@spiConfigIndex^(0+128),w
 13977     1319  00A7               	movwf	??_SPI1_Open^(0+128)
 13978     131A  01A8               	clrf	(??_SPI1_Open^(0+128)+1)
 13979     131B  0827               	movf	??_SPI1_Open^(0+128),w
 13980     131C  00A0               	movwf	___wmul@multiplier^(0+128)
 13981     131D  0828               	movf	(??_SPI1_Open+1)^(0+128),w
 13982     131E  00A1               	movwf	(___wmul@multiplier+1)^(0+128)
 13983     131F  3005               	movlw	5
 13984     1320  00A2               	movwf	___wmul@multiplicand^(0+128)
 13985     1321  3000               	movlw	0
 13986     1322  00A3               	movwf	(___wmul@multiplicand^(0+128)+1)
 13987     1323  319C  24FC  3192   	fcall	___wmul
 13988     1326  30FC               	movlw	low (_spi1_configuration+1)
 13989     1327  0021               	movlb	1	; select bank1
 13990     1328  0720               	addwf	?___wmul^(0+128),w
 13991     1329  0084               	movwf	4
 13992     132A  3018               	movlw	high (_spi1_configuration+1)
 13993     132B  3D21               	addwfc	(?___wmul+1)^(0+128),w
 13994     132C  3880               	iorlw	128
 13995     132D  0085               	movwf	5
 13996     132E  0800               	movf	0,w	;code access
 13997     132F  0024               	movlb	4	; select bank4
 13998     1330  0095               	movwf	21	;volatile
 13999                           
 14000                           ;mcc_generated_files/spi/src/mssp1.c: 88:         SSP1CON3 = spi1_configuration[spiConfi
      +                          gIndex].con3;
 14001     1331  0021               	movlb	1	; select bank1
 14002     1332  0826               	movf	SPI1_Open@spiConfigIndex^(0+128),w
 14003     1333  00A7               	movwf	??_SPI1_Open^(0+128)
 14004     1334  01A8               	clrf	(??_SPI1_Open^(0+128)+1)
 14005     1335  0827               	movf	??_SPI1_Open^(0+128),w
 14006     1336  00A0               	movwf	___wmul@multiplier^(0+128)
 14007     1337  0828               	movf	(??_SPI1_Open+1)^(0+128),w
 14008     1338  00A1               	movwf	(___wmul@multiplier+1)^(0+128)
 14009     1339  3005               	movlw	5
 14010     133A  00A2               	movwf	___wmul@multiplicand^(0+128)
 14011     133B  3000               	movlw	0
 14012     133C  00A3               	movwf	(___wmul@multiplicand^(0+128)+1)
 14013     133D  319C  24FC  3192   	fcall	___wmul
 14014     1340  30FD               	movlw	low (_spi1_configuration+2)
 14015     1341  0021               	movlb	1	; select bank1
 14016     1342  0720               	addwf	?___wmul^(0+128),w
 14017     1343  0084               	movwf	4
 14018     1344  3018               	movlw	high (_spi1_configuration+2)
 14019     1345  3D21               	addwfc	(?___wmul+1)^(0+128),w
 14020     1346  3880               	iorlw	128
 14021     1347  0085               	movwf	5
 14022     1348  0800               	movf	0,w	;code access
 14023     1349  0024               	movlb	4	; select bank4
 14024     134A  0097               	movwf	23	;volatile
 14025                           
 14026                           ;mcc_generated_files/spi/src/mssp1.c: 89:         SSP1ADD = spi1_configuration[spiConfig
      +                          Index].baud;
 14027     134B  0021               	movlb	1	; select bank1
 14028     134C  0826               	movf	SPI1_Open@spiConfigIndex^(0+128),w
 14029     134D  00A7               	movwf	??_SPI1_Open^(0+128)
 14030     134E  01A8               	clrf	(??_SPI1_Open^(0+128)+1)
 14031     134F  0827               	movf	??_SPI1_Open^(0+128),w
 14032     1350  00A0               	movwf	___wmul@multiplier^(0+128)
 14033     1351  0828               	movf	(??_SPI1_Open+1)^(0+128),w
 14034     1352  00A1               	movwf	(___wmul@multiplier+1)^(0+128)
 14035     1353  3005               	movlw	5
 14036     1354  00A2               	movwf	___wmul@multiplicand^(0+128)
 14037     1355  3000               	movlw	0
 14038     1356  00A3               	movwf	(___wmul@multiplicand^(0+128)+1)
 14039     1357  319C  24FC  3192   	fcall	___wmul
 14040     135A  30FE               	movlw	low (_spi1_configuration+3)
 14041     135B  0021               	movlb	1	; select bank1
 14042     135C  0720               	addwf	?___wmul^(0+128),w
 14043     135D  0084               	movwf	4
 14044     135E  3018               	movlw	high (_spi1_configuration+3)
 14045     135F  3D21               	addwfc	(?___wmul+1)^(0+128),w
 14046     1360  3880               	iorlw	128
 14047     1361  0085               	movwf	5
 14048     1362  0800               	movf	0,w	;code access
 14049     1363  0024               	movlb	4	; select bank4
 14050     1364  0092               	movwf	18	;volatile
 14051     1365                     l5836:
 14052                           
 14053                           ;mcc_generated_files/spi/src/mssp1.c: 91:         SSP1CON1bits.SSPEN = 1;
 14054     1365  1695               	bsf	21,5	;volatile
 14055     1366                     l5838:
 14056                           
 14057                           ;mcc_generated_files/spi/src/mssp1.c: 94:     }
 14058     1366  2B67               	goto	l141
 14059     1367                     l5840:
 14060     1367                     l141:
 14061     1367  0008               	return
 14062     1368                     __end_of_SPI1_Open:
 14063                           
 14064                           	psect	text41
 14065     1CFC                     __ptext41:	
 14066 ;; *************** function ___wmul *****************
 14067 ;; Defined at:
 14068 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\Umul16.c"
 14069 ;; Parameters:    Size  Location     Type
 14070 ;;  multiplier      2    0[BANK1 ] unsigned int 
 14071 ;;  multiplicand    2    2[BANK1 ] unsigned int 
 14072 ;; Auto vars:     Size  Location     Type
 14073 ;;  product         2    4[BANK1 ] unsigned int 
 14074 ;; Return value:  Size  Location     Type
 14075 ;;                  2    0[BANK1 ] unsigned int 
 14076 ;; Registers used:
 14077 ;;		wreg, status,2, status,0
 14078 ;; Tracked objects:
 14079 ;;		On entry : 0/0
 14080 ;;		On exit  : 0/0
 14081 ;;		Unchanged: 0/0
 14082 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 14083 ;;      Params:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0
 14084 ;;      Locals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0
 14085 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14086 ;;      Totals:         0       0       6       0       0       0       0       0       0       0       0       0       
      +0       0
 14087 ;;Total ram usage:        6 bytes
 14088 ;; Hardware stack levels used: 1
 14089 ;; Hardware stack levels required when called: 5
 14090 ;; This function calls:
 14091 ;;		Nothing
 14092 ;; This function is called by:
 14093 ;;		_SPI1_Open
 14094 ;;		_main
 14095 ;;		_atoi
 14096 ;;		_read_prec_or_width
 14097 ;;		_dutycycle_led_strip
 14098 ;; This function uses a non-reentrant model
 14099 ;;
 14100                           
 14101     1CFC                     ___wmul:	
 14102                           ;psect for function ___wmul
 14103                           
 14104     1CFC                     l4290:	
 14105                           ;incstack = 0
 14106                           ; Regs used in ___wmul: [wreg+status,2+status,0]
 14107                           
 14108     1CFC  0021               	movlb	1	; select bank1
 14109     1CFD  01A4               	clrf	___wmul@product^(0+128)
 14110     1CFE  01A5               	clrf	(___wmul@product+1)^(0+128)
 14111     1CFF                     l4292:
 14112     1CFF  1C20               	btfss	___wmul@multiplier^(0+128),0
 14113     1D00  2D02               	goto	u4061
 14114     1D01  2D03               	goto	u4060
 14115     1D02                     u4061:
 14116     1D02  2D07               	goto	l1207
 14117     1D03                     u4060:
 14118     1D03                     l4294:
 14119     1D03  0822               	movf	___wmul@multiplicand^(0+128),w
 14120     1D04  07A4               	addwf	___wmul@product^(0+128),f
 14121     1D05  0823               	movf	(___wmul@multiplicand+1)^(0+128),w
 14122     1D06  3DA5               	addwfc	(___wmul@product+1)^(0+128),f
 14123     1D07                     l1207:
 14124     1D07  3001               	movlw	1
 14125     1D08                     u4075:
 14126     1D08  35A2               	lslf	___wmul@multiplicand^(0+128),f
 14127     1D09  0DA3               	rlf	(___wmul@multiplicand+1)^(0+128),f
 14128     1D0A  0B89               	decfsz	9,f
 14129     1D0B  2D08               	goto	u4075
 14130     1D0C                     l4296:
 14131     1D0C  3001               	movlw	1
 14132     1D0D                     u4085:
 14133     1D0D  36A1               	lsrf	(___wmul@multiplier+1)^(0+128),f
 14134     1D0E  0CA0               	rrf	___wmul@multiplier^(0+128),f
 14135     1D0F  0B89               	decfsz	9,f
 14136     1D10  2D0D               	goto	u4085
 14137     1D11                     l4298:
 14138     1D11  0820               	movf	___wmul@multiplier^(0+128),w
 14139     1D12  0421               	iorwf	(___wmul@multiplier+1)^(0+128),w
 14140     1D13  1D03               	btfss	3,2
 14141     1D14  2D16               	goto	u4091
 14142     1D15  2D17               	goto	u4090
 14143     1D16                     u4091:
 14144     1D16  2CFF               	goto	l4292
 14145     1D17                     u4090:
 14146     1D17                     l4300:
 14147     1D17  0825               	movf	(___wmul@product+1)^(0+128),w
 14148     1D18  00A1               	movwf	(?___wmul+1)^(0+128)
 14149     1D19  0824               	movf	___wmul@product^(0+128),w
 14150     1D1A  00A0               	movwf	?___wmul^(0+128)
 14151     1D1B                     l1209:
 14152     1D1B  0008               	return
 14153     1D1C                     __end_of___wmul:
 14154                           
 14155                           	psect	text42
 14156     1B4B                     __ptext42:	
 14157 ;; *************** function _initAdcMultiplexer *****************
 14158 ;; Defined at:
 14159 ;;		line 28 in file "adcMeasurements.c"
 14160 ;; Parameters:    Size  Location     Type
 14161 ;;		None
 14162 ;; Auto vars:     Size  Location     Type
 14163 ;;		None
 14164 ;; Return value:  Size  Location     Type
 14165 ;;                  1    wreg      void 
 14166 ;; Registers used:
 14167 ;;		wreg, status,2, status,0, pclath, cstack
 14168 ;; Tracked objects:
 14169 ;;		On entry : 0/0
 14170 ;;		On exit  : 0/0
 14171 ;;		Unchanged: 0/0
 14172 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 14173 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14174 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14175 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14176 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14177 ;;Total ram usage:        0 bytes
 14178 ;; Hardware stack levels used: 1
 14179 ;; Hardware stack levels required when called: 6
 14180 ;; This function calls:
 14181 ;;		_ADC_SelectChannel
 14182 ;;		_ADC_SetInterruptHandler
 14183 ;; This function is called by:
 14184 ;;		_main
 14185 ;; This function uses a non-reentrant model
 14186 ;;
 14187                           
 14188     1B4B                     _initAdcMultiplexer:	
 14189                           ;psect for function _initAdcMultiplexer
 14190                           
 14191     1B4B                     l6248:	
 14192                           ;incstack = 0
 14193                           ; Regs used in _initAdcMultiplexer: [wreg+status,2+status,0+pclath+cstack]
 14194                           
 14195                           
 14196                           ;adcMeasurements.c: 29:     ADC_SelectChannel(potentiometer);
 14197     1B4B  3010               	movlw	16
 14198     1B4C  319B  2332  319B   	fcall	_ADC_SelectChannel
 14199                           
 14200                           ;adcMeasurements.c: 30:     ADC_SetInterruptHandler(adcConversionDoneHandler);
 14201     1B4F  30CB               	movlw	low _adcConversionDoneHandler
 14202     1B50  0021               	movlb	1	; select bank1
 14203     1B51  00A0               	movwf	ADC_SetInterruptHandler@InterruptHandler^(0+128)
 14204     1B52  301E               	movlw	high _adcConversionDoneHandler
 14205     1B53  00A1               	movwf	(ADC_SetInterruptHandler@InterruptHandler^(0+128)+1)
 14206     1B54  319A  226E  319B   	fcall	_ADC_SetInterruptHandler
 14207     1B57                     l851:
 14208     1B57  0008               	return
 14209     1B58                     __end_of_initAdcMultiplexer:
 14210                           
 14211                           	psect	text43
 14212     1B32                     __ptext43:	
 14213 ;; *************** function _ADC_SelectChannel *****************
 14214 ;; Defined at:
 14215 ;;		line 82 in file "mcc_generated_files/adc/src/adc.c"
 14216 ;; Parameters:    Size  Location     Type
 14217 ;;  channel         1    wreg     enum E6663
 14218 ;; Auto vars:     Size  Location     Type
 14219 ;;  channel         1    1[BANK1 ] enum E6663
 14220 ;; Return value:  Size  Location     Type
 14221 ;;                  1    wreg      void 
 14222 ;; Registers used:
 14223 ;;		wreg, status,2, status,0
 14224 ;; Tracked objects:
 14225 ;;		On entry : 0/0
 14226 ;;		On exit  : 0/0
 14227 ;;		Unchanged: 0/0
 14228 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 14229 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14230 ;;      Locals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0
 14231 ;;      Temps:          0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0
 14232 ;;      Totals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0
 14233 ;;Total ram usage:        2 bytes
 14234 ;; Hardware stack levels used: 1
 14235 ;; Hardware stack levels required when called: 5
 14236 ;; This function calls:
 14237 ;;		Nothing
 14238 ;; This function is called by:
 14239 ;;		_initAdcMultiplexer
 14240 ;; This function uses a non-reentrant model
 14241 ;;
 14242                           
 14243     1B32                     _ADC_SelectChannel:	
 14244                           ;psect for function _ADC_SelectChannel
 14245                           
 14246                           
 14247                           ;incstack = 0
 14248                           ; Regs used in _ADC_SelectChannel: [wreg+status,2+status,0]
 14249                           ;ADC_SelectChannel@channel stored from wreg
 14250     1B32  0021               	movlb	1	; select bank1
 14251     1B33  00A1               	movwf	ADC_SelectChannel@channel^(0+128)
 14252     1B34                     l5816:
 14253                           
 14254                           ;mcc_generated_files/adc/src/adc.c: 82: void ADC_SelectChannel(adc_channel_t channel);mc
      +                          c_generated_files/adc/src/adc.c: 83: {;mcc_generated_files/adc/src/adc.c: 85:     ADCON0
      +                          bits.CHS = channel;
 14255     1B34  0821               	movf	ADC_SelectChannel@channel^(0+128),w
 14256     1B35  00A0               	movwf	??_ADC_SelectChannel^(0+128)
 14257     1B36  0DA0               	rlf	??_ADC_SelectChannel^(0+128),f
 14258     1B37  0DA0               	rlf	??_ADC_SelectChannel^(0+128),f
 14259     1B38  081D               	movf	29,w	;volatile
 14260     1B39  0620               	xorwf	??_ADC_SelectChannel^(0+128),w
 14261     1B3A  3903               	andlw	-253
 14262     1B3B  0620               	xorwf	??_ADC_SelectChannel^(0+128),w
 14263     1B3C  009D               	movwf	29	;volatile
 14264     1B3D                     l30:
 14265     1B3D  0008               	return
 14266     1B3E                     __end_of_ADC_SelectChannel:
 14267                           
 14268                           	psect	text44
 14269     1C2A                     __ptext44:	
 14270 ;; *************** function _TMR6_Tasks *****************
 14271 ;; Defined at:
 14272 ;;		line 124 in file "mcc_generated_files/timer/src/tmr6.c"
 14273 ;; Parameters:    Size  Location     Type
 14274 ;;		None
 14275 ;; Auto vars:     Size  Location     Type
 14276 ;;		None
 14277 ;; Return value:  Size  Location     Type
 14278 ;;                  1    wreg      void 
 14279 ;; Registers used:
 14280 ;;		wreg, status,2, status,0, pclath, cstack
 14281 ;; Tracked objects:
 14282 ;;		On entry : 0/0
 14283 ;;		On exit  : 0/0
 14284 ;;		Unchanged: 0/0
 14285 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 14286 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14287 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14288 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14289 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14290 ;;Total ram usage:        0 bytes
 14291 ;; Hardware stack levels used: 1
 14292 ;; Hardware stack levels required when called: 10
 14293 ;; This function calls:
 14294 ;;		NULL
 14295 ;;		_TMR6_DefaultPeriodMatchCallback
 14296 ;;		_updateLedstripAnimation
 14297 ;; This function is called by:
 14298 ;;		_main
 14299 ;; This function uses a non-reentrant model
 14300 ;;
 14301                           
 14302     1C2A                     _TMR6_Tasks:	
 14303                           ;psect for function _TMR6_Tasks
 14304                           
 14305     1C2A                     l6194:	
 14306                           ;incstack = 0
 14307                           ; Regs used in _TMR6_Tasks: [wreg+status,2+status,0+pclath+cstack]
 14308                           
 14309                           
 14310                           ;mcc_generated_files/timer/src/tmr6.c: 126:     if(1U == PIR2bits.TMR6IF)
 14311     1C2A  0020               	movlb	0	; select bank0
 14312     1C2B  1F92               	btfss	18,7	;volatile
 14313     1C2C  2C2E               	goto	u7471
 14314     1C2D  2C2F               	goto	u7470
 14315     1C2E                     u7471:
 14316     1C2E  2C3D               	goto	l557
 14317     1C2F                     u7470:
 14318     1C2F                     l6196:
 14319                           
 14320                           ;mcc_generated_files/timer/src/tmr6.c: 127:     {;mcc_generated_files/timer/src/tmr6.c: 
      +                          128:         if(((void*)0) != TMR6_PeriodMatchCallback)
 14321     1C2F  0022               	movlb	2	; select bank2
 14322     1C30  0867               	movf	_TMR6_PeriodMatchCallback^(0+256),w
 14323     1C31  0468               	iorwf	(_TMR6_PeriodMatchCallback+1)^(0+256),w
 14324     1C32  1903               	btfsc	3,2
 14325     1C33  2C35               	goto	u7481
 14326     1C34  2C36               	goto	u7480
 14327     1C35                     u7481:
 14328     1C35  2C3B               	goto	l6200
 14329     1C36                     u7480:
 14330     1C36                     l6198:
 14331                           
 14332                           ;mcc_generated_files/timer/src/tmr6.c: 129:         {;mcc_generated_files/timer/src/tmr6
      +                          .c: 130:             TMR6_PeriodMatchCallback();
 14333     1C36  0868               	movf	(_TMR6_PeriodMatchCallback+1)^(0+256),w
 14334     1C37  008A               	movwf	10
 14335     1C38  0867               	movf	_TMR6_PeriodMatchCallback^(0+256),w
 14336     1C39  000A               	callw
 14337     1C3A  319C               	pagesel	$
 14338     1C3B                     l6200:
 14339                           
 14340                           ;mcc_generated_files/timer/src/tmr6.c: 132:         PIR2bits.TMR6IF = 0;
 14341     1C3B  0020               	movlb	0	; select bank0
 14342     1C3C  1392               	bcf	18,7	;volatile
 14343     1C3D                     l557:
 14344     1C3D  0008               	return
 14345     1C3E                     __end_of_TMR6_Tasks:
 14346                           
 14347                           	psect	text45
 14348     1A4D                     __ptext45:	
 14349 ;; *************** function _TMR6_DefaultPeriodMatchCallback *****************
 14350 ;; Defined at:
 14351 ;;		line 109 in file "mcc_generated_files/timer/src/tmr6.c"
 14352 ;; Parameters:    Size  Location     Type
 14353 ;;		None
 14354 ;; Auto vars:     Size  Location     Type
 14355 ;;		None
 14356 ;; Return value:  Size  Location     Type
 14357 ;;                  1    wreg      void 
 14358 ;; Registers used:
 14359 ;;		None
 14360 ;; Tracked objects:
 14361 ;;		On entry : 0/0
 14362 ;;		On exit  : 0/0
 14363 ;;		Unchanged: 0/0
 14364 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 14365 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14366 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14367 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14368 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14369 ;;Total ram usage:        0 bytes
 14370 ;; Hardware stack levels used: 1
 14371 ;; Hardware stack levels required when called: 5
 14372 ;; This function calls:
 14373 ;;		Nothing
 14374 ;; This function is called by:
 14375 ;;		_TMR6_Initialize
 14376 ;;		_TMR6_Tasks
 14377 ;; This function uses a non-reentrant model
 14378 ;;
 14379                           
 14380     1A4D                     _TMR6_DefaultPeriodMatchCallback:	
 14381                           ;psect for function _TMR6_DefaultPeriodMatchCallback
 14382                           
 14383     1A4D                     l546:	
 14384                           ;incstack = 0
 14385                           ; Regs used in _TMR6_DefaultPeriodMatchCallback: []
 14386                           
 14387     1A4D  0008               	return
 14388     1A4E                     __end_of_TMR6_DefaultPeriodMatchCallback:
 14389                           
 14390                           	psect	text46
 14391     1A52                     __ptext46:	
 14392 ;; *************** function _updateLedstripAnimation *****************
 14393 ;; Defined at:
 14394 ;;		line 112 in file "ledstrip.c"
 14395 ;; Parameters:    Size  Location     Type
 14396 ;;		None
 14397 ;; Auto vars:     Size  Location     Type
 14398 ;;		None
 14399 ;; Return value:  Size  Location     Type
 14400 ;;                  1    wreg      void 
 14401 ;; Registers used:
 14402 ;;		wreg, status,2, status,0, pclath, cstack
 14403 ;; Tracked objects:
 14404 ;;		On entry : 0/0
 14405 ;;		On exit  : 0/0
 14406 ;;		Unchanged: 0/0
 14407 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 14408 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14409 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14410 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14411 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14412 ;;Total ram usage:        0 bytes
 14413 ;; Hardware stack levels used: 1
 14414 ;; Hardware stack levels required when called: 9
 14415 ;; This function calls:
 14416 ;;		_position_led_strip
 14417 ;; This function is called by:
 14418 ;;		_initLedstrip
 14419 ;;		_TMR6_Tasks
 14420 ;; This function uses a non-reentrant model
 14421 ;;
 14422                           
 14423     1A52                     _updateLedstripAnimation:	
 14424                           ;psect for function _updateLedstripAnimation
 14425                           
 14426     1A52                     l6152:	
 14427                           ;incstack = 0
 14428                           ; Regs used in _updateLedstripAnimation: [wreg+status,2+status,0+pclath+cstack]
 14429                           
 14430                           
 14431                           ;ledstrip.c: 113:     position_led_strip();
 14432     1A52  3189  21C5  319A   	fcall	_position_led_strip
 14433     1A55                     l1052:
 14434     1A55  0008               	return
 14435     1A56                     __end_of_updateLedstripAnimation:
 14436                           
 14437                           	psect	text47
 14438     09C5                     __ptext47:	
 14439 ;; *************** function _position_led_strip *****************
 14440 ;; Defined at:
 14441 ;;		line 60 in file "ledstrip.c"
 14442 ;; Parameters:    Size  Location     Type
 14443 ;;		None
 14444 ;; Auto vars:     Size  Location     Type
 14445 ;;  led             1    9[BANK2 ] unsigned char 
 14446 ;;  led_on          2   10[BANK2 ] int 
 14447 ;;  target          2    7[BANK2 ] int 
 14448 ;; Return value:  Size  Location     Type
 14449 ;;                  1    wreg      void 
 14450 ;; Registers used:
 14451 ;;		wreg, status,2, status,0, pclath, cstack
 14452 ;; Tracked objects:
 14453 ;;		On entry : 0/0
 14454 ;;		On exit  : 0/0
 14455 ;;		Unchanged: 0/0
 14456 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 14457 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14458 ;;      Locals:         0       0       0       5       0       0       0       0       0       0       0       0       
      +0       0
 14459 ;;      Temps:          0       0       0       3       0       0       0       0       0       0       0       0       
      +0       0
 14460 ;;      Totals:         0       0       0       8       0       0       0       0       0       0       0       0       
      +0       0
 14461 ;;Total ram usage:        8 bytes
 14462 ;; Hardware stack levels used: 1
 14463 ;; Hardware stack levels required when called: 8
 14464 ;; This function calls:
 14465 ;;		_getHoogtesensor
 14466 ;;		_getLedNumber
 14467 ;;		_getSetpoint
 14468 ;;		_sendLedstripEndFrame
 14469 ;;		_sendLedstripFrame
 14470 ;;		_sendLedstripStartFrame
 14471 ;; This function is called by:
 14472 ;;		_updateLedstripAnimation
 14473 ;; This function uses a non-reentrant model
 14474 ;;
 14475                           
 14476     09C5                     _position_led_strip:	
 14477                           ;psect for function _position_led_strip
 14478                           
 14479     09C5                     l5168:	
 14480                           ;incstack = 0
 14481                           ; Regs used in _position_led_strip: [wreg+status,2+status,0+pclath+cstack]
 14482                           
 14483                           
 14484                           ;ledstrip.c: 61:     int led_on = getLedNumber(getHoogtesensor());
 14485     09C5  319A  2292  3189   	fcall	_getHoogtesensor
 14486     09C8  0021               	movlb	1	; select bank1
 14487     09C9  0821               	movf	(?_getHoogtesensor+1)^(0+128),w
 14488     09CA  00EF               	movwf	(getLedNumber@height+1)^(0+128)
 14489     09CB  0820               	movf	?_getHoogtesensor^(0+128),w
 14490     09CC  00EE               	movwf	getLedNumber@height^(0+128)
 14491     09CD  3190  20A8  3189   	fcall	_getLedNumber
 14492     09D0  0021               	movlb	1	; select bank1
 14493     09D1  086F               	movf	(?_getLedNumber+1)^(0+128),w
 14494     09D2  0022               	movlb	2	; select bank2
 14495     09D3  00AB               	movwf	(position_led_strip@led_on+1)^(0+256)
 14496     09D4  0021               	movlb	1	; select bank1
 14497     09D5  086E               	movf	?_getLedNumber^(0+128),w
 14498     09D6  0022               	movlb	2	; select bank2
 14499     09D7  00AA               	movwf	position_led_strip@led_on^(0+256)
 14500     09D8                     l5170:
 14501                           
 14502                           ;ledstrip.c: 62:     if (led_on < 0) {
 14503     09D8  1FAB               	btfss	(position_led_strip@led_on+1)^(0+256),7
 14504     09D9  29DB               	goto	u5831
 14505     09DA  29DC               	goto	u5830
 14506     09DB                     u5831:
 14507     09DB  29DF               	goto	l5174
 14508     09DC                     u5830:
 14509     09DC                     l5172:
 14510                           
 14511                           ;ledstrip.c: 63:         led_on = 0;
 14512     09DC  01AA               	clrf	position_led_strip@led_on^(0+256)
 14513     09DD  01AB               	clrf	(position_led_strip@led_on+1)^(0+256)
 14514                           
 14515                           ;ledstrip.c: 64:     } else if (led_on > 59) {
 14516     09DE  29F1               	goto	l5178
 14517     09DF                     l5174:
 14518     09DF  082B               	movf	(position_led_strip@led_on+1)^(0+256),w
 14519     09E0  3A80               	xorlw	128
 14520     09E1  00A4               	movwf	??_position_led_strip^(0+256)
 14521     09E2  3080               	movlw	128
 14522     09E3  0224               	subwf	??_position_led_strip^(0+256),w
 14523     09E4  1D03               	skipz
 14524     09E5  29E8               	goto	u5845
 14525     09E6  303C               	movlw	60
 14526     09E7  022A               	subwf	position_led_strip@led_on^(0+256),w
 14527     09E8                     u5845:
 14528     09E8  1C03               	skipc
 14529     09E9  29EB               	goto	u5841
 14530     09EA  29EC               	goto	u5840
 14531     09EB                     u5841:
 14532     09EB  29F1               	goto	l5178
 14533     09EC                     u5840:
 14534     09EC                     l5176:
 14535                           
 14536                           ;ledstrip.c: 65:         led_on = 59;
 14537     09EC  303B               	movlw	59
 14538     09ED  0022               	movlb	2	; select bank2
 14539     09EE  00AA               	movwf	position_led_strip@led_on^(0+256)
 14540     09EF  3000               	movlw	0
 14541     09F0  00AB               	movwf	(position_led_strip@led_on^(0+256)+1)
 14542     09F1                     l5178:
 14543                           
 14544                           ;ledstrip.c: 68:     int target = getLedNumber(getSetpoint());
 14545     09F1  319A  229B  3189   	fcall	_getSetpoint
 14546     09F4  0021               	movlb	1	; select bank1
 14547     09F5  0821               	movf	(?_getSetpoint+1)^(0+128),w
 14548     09F6  00EF               	movwf	(getLedNumber@height+1)^(0+128)
 14549     09F7  0820               	movf	?_getSetpoint^(0+128),w
 14550     09F8  00EE               	movwf	getLedNumber@height^(0+128)
 14551     09F9  3190  20A8  3189   	fcall	_getLedNumber
 14552     09FC  0021               	movlb	1	; select bank1
 14553     09FD  086F               	movf	(?_getLedNumber+1)^(0+128),w
 14554     09FE  0022               	movlb	2	; select bank2
 14555     09FF  00A8               	movwf	(position_led_strip@target+1)^(0+256)
 14556     0A00  0021               	movlb	1	; select bank1
 14557     0A01  086E               	movf	?_getLedNumber^(0+128),w
 14558     0A02  0022               	movlb	2	; select bank2
 14559     0A03  00A7               	movwf	position_led_strip@target^(0+256)
 14560     0A04                     l5180:
 14561                           
 14562                           ;ledstrip.c: 69:     if (target < 0) {
 14563     0A04  1FA8               	btfss	(position_led_strip@target+1)^(0+256),7
 14564     0A05  2A07               	goto	u5851
 14565     0A06  2A08               	goto	u5850
 14566     0A07                     u5851:
 14567     0A07  2A0A               	goto	l5184
 14568     0A08                     u5850:
 14569     0A08                     l5182:
 14570                           
 14571                           ;ledstrip.c: 70:         target = 0;
 14572     0A08  01A7               	clrf	position_led_strip@target^(0+256)
 14573     0A09  01A8               	clrf	(position_led_strip@target+1)^(0+256)
 14574     0A0A                     l5184:
 14575                           
 14576                           ;ledstrip.c: 74:     sendLedstripStartFrame();
 14577     0A0A  319C  2453  3189   	fcall	_sendLedstripStartFrame
 14578     0A0D                     l5186:
 14579                           
 14580                           ;ledstrip.c: 75:     for (uint8_t led = 0; led < 59; led++) {
 14581     0A0D  0022               	movlb	2	; select bank2
 14582     0A0E  01A9               	clrf	position_led_strip@led^(0+256)
 14583     0A0F                     l5192:
 14584                           
 14585                           ;ledstrip.c: 78:         if (led_on == target) {
 14586     0A0F  0828               	movf	(position_led_strip@target+1)^(0+256),w
 14587     0A10  062B               	xorwf	(position_led_strip@led_on+1)^(0+256),w
 14588     0A11  1D03               	skipz
 14589     0A12  2A15               	goto	u5865
 14590     0A13  0827               	movf	position_led_strip@target^(0+256),w
 14591     0A14  062A               	xorwf	position_led_strip@led_on^(0+256),w
 14592     0A15                     u5865:
 14593     0A15  1D03               	skipz
 14594     0A16  2A18               	goto	u5861
 14595     0A17  2A19               	goto	u5860
 14596     0A18                     u5861:
 14597     0A18  2A1C               	goto	l5196
 14598     0A19                     u5860:
 14599     0A19                     l5194:
 14600                           
 14601                           ;ledstrip.c: 79:             is_on_target = 1;
 14602     0A19  3001               	movlw	1
 14603     0A1A  0020               	movlb	0	; select bank0
 14604     0A1B  00E4               	movwf	_is_on_target
 14605     0A1C                     l5196:
 14606                           
 14607                           ;ledstrip.c: 81:         if (is_on_target){
 14608     0A1C  0020               	movlb	0	; select bank0
 14609     0A1D  0864               	movf	_is_on_target,w
 14610     0A1E  1903               	btfsc	3,2
 14611     0A1F  2A21               	goto	u5871
 14612     0A20  2A22               	goto	u5870
 14613     0A21                     u5871:
 14614     0A21  2A94               	goto	l5216
 14615     0A22                     u5870:
 14616     0A22                     l5198:
 14617                           
 14618                           ;ledstrip.c: 82:             if (led_on >= target - 1 && led_on <= target + 1) {
 14619     0A22  0022               	movlb	2	; select bank2
 14620     0A23  0827               	movf	position_led_strip@target^(0+256),w
 14621     0A24  3EFF               	addlw	255
 14622     0A25  00A4               	movwf	??_position_led_strip^(0+256)
 14623     0A26  30FF               	movlw	255
 14624     0A27  3D28               	addwfc	(position_led_strip@target+1)^(0+256),w
 14625     0A28  00A5               	movwf	(??_position_led_strip+1)^(0+256)
 14626     0A29  082B               	movf	(position_led_strip@led_on+1)^(0+256),w
 14627     0A2A  3A80               	xorlw	128
 14628     0A2B  00A6               	movwf	(??_position_led_strip+2)^(0+256)
 14629     0A2C  0825               	movf	(??_position_led_strip+1)^(0+256),w
 14630     0A2D  3A80               	xorlw	128
 14631     0A2E  0226               	subwf	(??_position_led_strip+2)^(0+256),w
 14632     0A2F  1D03               	skipz
 14633     0A30  2A33               	goto	u5885
 14634     0A31  0824               	movf	??_position_led_strip^(0+256),w
 14635     0A32  022A               	subwf	position_led_strip@led_on^(0+256),w
 14636     0A33                     u5885:
 14637     0A33  1C03               	skipc
 14638     0A34  2A36               	goto	u5881
 14639     0A35  2A37               	goto	u5880
 14640     0A36                     u5881:
 14641     0A36  2A57               	goto	l5204
 14642     0A37                     u5880:
 14643     0A37                     l5200:
 14644     0A37  0022               	movlb	2	; select bank2
 14645     0A38  0827               	movf	position_led_strip@target^(0+256),w
 14646     0A39  3E01               	addlw	1
 14647     0A3A  00A4               	movwf	??_position_led_strip^(0+256)
 14648     0A3B  3000               	movlw	0
 14649     0A3C  3D28               	addwfc	(position_led_strip@target+1)^(0+256),w
 14650     0A3D  00A5               	movwf	(??_position_led_strip+1)^(0+256)
 14651     0A3E  0825               	movf	(??_position_led_strip+1)^(0+256),w
 14652     0A3F  3A80               	xorlw	128
 14653     0A40  00A6               	movwf	(??_position_led_strip+2)^(0+256)
 14654     0A41  082B               	movf	(position_led_strip@led_on+1)^(0+256),w
 14655     0A42  3A80               	xorlw	128
 14656     0A43  0226               	subwf	(??_position_led_strip+2)^(0+256),w
 14657     0A44  1D03               	skipz
 14658     0A45  2A48               	goto	u5895
 14659     0A46  082A               	movf	position_led_strip@led_on^(0+256),w
 14660     0A47  0224               	subwf	??_position_led_strip^(0+256),w
 14661     0A48                     u5895:
 14662     0A48  1C03               	skipc
 14663     0A49  2A4B               	goto	u5891
 14664     0A4A  2A4C               	goto	u5890
 14665     0A4B                     u5891:
 14666     0A4B  2A57               	goto	l5204
 14667     0A4C                     u5890:
 14668     0A4C                     l5202:
 14669                           
 14670                           ;ledstrip.c: 83:                 sendLedstripFrame(0x00, 0xFF, 0x00, 0x05);
 14671     0A4C  30FF               	movlw	255
 14672     0A4D  0021               	movlb	1	; select bank1
 14673     0A4E  00A1               	movwf	sendLedstripFrame@green^(0+128)
 14674     0A4F  01A2               	clrf	sendLedstripFrame@blue^(0+128)
 14675     0A50  3005               	movlw	5
 14676     0A51  00A3               	movwf	sendLedstripFrame@intensity^(0+128)
 14677     0A52  3000               	movlw	0
 14678     0A53  319C  24C5  3189   	fcall	_sendLedstripFrame
 14679                           
 14680                           ;ledstrip.c: 84:             }
 14681     0A56  2ACF               	goto	l5232
 14682     0A57                     l5204:
 14683                           
 14684                           ;ledstrip.c: 86:                 if (led == led_on) {
 14685     0A57  0022               	movlb	2	; select bank2
 14686     0A58  0829               	movf	position_led_strip@led^(0+256),w
 14687     0A59  00A4               	movwf	??_position_led_strip^(0+256)
 14688     0A5A  01A5               	clrf	(??_position_led_strip^(0+256)+1)
 14689     0A5B  082B               	movf	(position_led_strip@led_on+1)^(0+256),w
 14690     0A5C  0625               	xorwf	(??_position_led_strip+1)^(0+256),w
 14691     0A5D  1D03               	skipz
 14692     0A5E  2A61               	goto	u5905
 14693     0A5F  082A               	movf	position_led_strip@led_on^(0+256),w
 14694     0A60  0624               	xorwf	??_position_led_strip^(0+256),w
 14695     0A61                     u5905:
 14696     0A61  1D03               	skipz
 14697     0A62  2A64               	goto	u5901
 14698     0A63  2A65               	goto	u5900
 14699     0A64                     u5901:
 14700     0A64  2A71               	goto	l5208
 14701     0A65                     u5900:
 14702     0A65                     l5206:
 14703                           
 14704                           ;ledstrip.c: 87:                     sendLedstripFrame(0x44, 0x44, 0x44, 0x05);
 14705     0A65  3044               	movlw	68
 14706     0A66  0021               	movlb	1	; select bank1
 14707     0A67  00A1               	movwf	sendLedstripFrame@green^(0+128)
 14708     0A68  3044               	movlw	68
 14709     0A69  00A2               	movwf	sendLedstripFrame@blue^(0+128)
 14710     0A6A  3005               	movlw	5
 14711     0A6B  00A3               	movwf	sendLedstripFrame@intensity^(0+128)
 14712     0A6C  3044               	movlw	68
 14713     0A6D  319C  24C5  3189   	fcall	_sendLedstripFrame
 14714                           
 14715                           ;ledstrip.c: 88:         } else if (led == target) {
 14716     0A70  2A91               	goto	l5214
 14717     0A71                     l5208:
 14718     0A71  0829               	movf	position_led_strip@led^(0+256),w
 14719     0A72  00A4               	movwf	??_position_led_strip^(0+256)
 14720     0A73  01A5               	clrf	(??_position_led_strip^(0+256)+1)
 14721     0A74  0828               	movf	(position_led_strip@target+1)^(0+256),w
 14722     0A75  0625               	xorwf	(??_position_led_strip+1)^(0+256),w
 14723     0A76  1D03               	skipz
 14724     0A77  2A7A               	goto	u5915
 14725     0A78  0827               	movf	position_led_strip@target^(0+256),w
 14726     0A79  0624               	xorwf	??_position_led_strip^(0+256),w
 14727     0A7A                     u5915:
 14728     0A7A  1D03               	skipz
 14729     0A7B  2A7D               	goto	u5911
 14730     0A7C  2A7E               	goto	u5910
 14731     0A7D                     u5911:
 14732     0A7D  2A88               	goto	l5212
 14733     0A7E                     u5910:
 14734     0A7E                     l5210:
 14735                           
 14736                           ;ledstrip.c: 89:                     sendLedstripFrame(0xFF, 0x00, 0x00, 0x05);
 14737     0A7E  0021               	movlb	1	; select bank1
 14738     0A7F  01A1               	clrf	sendLedstripFrame@green^(0+128)
 14739     0A80  01A2               	clrf	sendLedstripFrame@blue^(0+128)
 14740     0A81  3005               	movlw	5
 14741     0A82  00A3               	movwf	sendLedstripFrame@intensity^(0+128)
 14742     0A83  30FF               	movlw	255
 14743     0A84  319C  24C5  3189   	fcall	_sendLedstripFrame
 14744                           
 14745                           ;ledstrip.c: 90:         } else {
 14746     0A87  2A91               	goto	l5214
 14747     0A88                     l5212:
 14748                           
 14749                           ;ledstrip.c: 91:                     sendLedstripFrame(0x00, 0x00, 0x00, 0x05);
 14750     0A88  0021               	movlb	1	; select bank1
 14751     0A89  01A1               	clrf	sendLedstripFrame@green^(0+128)
 14752     0A8A  01A2               	clrf	sendLedstripFrame@blue^(0+128)
 14753     0A8B  3005               	movlw	5
 14754     0A8C  00A3               	movwf	sendLedstripFrame@intensity^(0+128)
 14755     0A8D  3000               	movlw	0
 14756     0A8E  319C  24C5  3189   	fcall	_sendLedstripFrame
 14757     0A91                     l5214:
 14758                           
 14759                           ;ledstrip.c: 93:                 is_on_target = 0;
 14760     0A91  0020               	movlb	0	; select bank0
 14761     0A92  01E4               	clrf	_is_on_target
 14762     0A93  2ACF               	goto	l5232
 14763     0A94                     l5216:
 14764     0A94  0022               	movlb	2	; select bank2
 14765     0A95  0829               	movf	position_led_strip@led^(0+256),w
 14766     0A96  00A4               	movwf	??_position_led_strip^(0+256)
 14767     0A97  01A5               	clrf	(??_position_led_strip^(0+256)+1)
 14768     0A98  082B               	movf	(position_led_strip@led_on+1)^(0+256),w
 14769     0A99  0625               	xorwf	(??_position_led_strip+1)^(0+256),w
 14770     0A9A  1D03               	skipz
 14771     0A9B  2A9E               	goto	u5925
 14772     0A9C  082A               	movf	position_led_strip@led_on^(0+256),w
 14773     0A9D  0624               	xorwf	??_position_led_strip^(0+256),w
 14774     0A9E                     u5925:
 14775     0A9E  1D03               	skipz
 14776     0A9F  2AA1               	goto	u5921
 14777     0AA0  2AA2               	goto	u5920
 14778     0AA1                     u5921:
 14779     0AA1  2AAE               	goto	l5222
 14780     0AA2                     u5920:
 14781     0AA2                     l5218:
 14782                           
 14783                           ;ledstrip.c: 97:             sendLedstripFrame(0x44, 0x44, 0x44, 0x05);
 14784     0AA2  3044               	movlw	68
 14785     0AA3  0021               	movlb	1	; select bank1
 14786     0AA4  00A1               	movwf	sendLedstripFrame@green^(0+128)
 14787     0AA5  3044               	movlw	68
 14788     0AA6  00A2               	movwf	sendLedstripFrame@blue^(0+128)
 14789     0AA7  3005               	movlw	5
 14790     0AA8  00A3               	movwf	sendLedstripFrame@intensity^(0+128)
 14791     0AA9  3044               	movlw	68
 14792     0AAA  319C  24C5  3189   	fcall	_sendLedstripFrame
 14793     0AAD  2A91               	goto	l5214
 14794     0AAE                     l5222:
 14795     0AAE  0829               	movf	position_led_strip@led^(0+256),w
 14796     0AAF  00A4               	movwf	??_position_led_strip^(0+256)
 14797     0AB0  01A5               	clrf	(??_position_led_strip^(0+256)+1)
 14798     0AB1  0828               	movf	(position_led_strip@target+1)^(0+256),w
 14799     0AB2  0625               	xorwf	(??_position_led_strip+1)^(0+256),w
 14800     0AB3  1D03               	skipz
 14801     0AB4  2AB7               	goto	u5935
 14802     0AB5  0827               	movf	position_led_strip@target^(0+256),w
 14803     0AB6  0624               	xorwf	??_position_led_strip^(0+256),w
 14804     0AB7                     u5935:
 14805     0AB7  1D03               	skipz
 14806     0AB8  2ABA               	goto	u5931
 14807     0AB9  2ABB               	goto	u5930
 14808     0ABA                     u5931:
 14809     0ABA  2AC5               	goto	l5228
 14810     0ABB                     u5930:
 14811     0ABB                     l5224:
 14812                           
 14813                           ;ledstrip.c: 100:             sendLedstripFrame(0xFF, 0x00, 0x00, 0x05);
 14814     0ABB  0021               	movlb	1	; select bank1
 14815     0ABC  01A1               	clrf	sendLedstripFrame@green^(0+128)
 14816     0ABD  01A2               	clrf	sendLedstripFrame@blue^(0+128)
 14817     0ABE  3005               	movlw	5
 14818     0ABF  00A3               	movwf	sendLedstripFrame@intensity^(0+128)
 14819     0AC0  30FF               	movlw	255
 14820     0AC1  319C  24C5  3189   	fcall	_sendLedstripFrame
 14821     0AC4  2A91               	goto	l5214
 14822     0AC5                     l5228:
 14823                           
 14824                           ;ledstrip.c: 103:             sendLedstripFrame(0x00, 0x00, 0x00, 0x05);
 14825     0AC5  0021               	movlb	1	; select bank1
 14826     0AC6  01A1               	clrf	sendLedstripFrame@green^(0+128)
 14827     0AC7  01A2               	clrf	sendLedstripFrame@blue^(0+128)
 14828     0AC8  3005               	movlw	5
 14829     0AC9  00A3               	movwf	sendLedstripFrame@intensity^(0+128)
 14830     0ACA  3000               	movlw	0
 14831     0ACB  319C  24C5  3189   	fcall	_sendLedstripFrame
 14832     0ACE  2A91               	goto	l5214
 14833     0ACF                     l5232:
 14834                           
 14835                           ;ledstrip.c: 106:     }
 14836     0ACF  3001               	movlw	1
 14837     0AD0  0022               	movlb	2	; select bank2
 14838     0AD1  07A9               	addwf	position_led_strip@led^(0+256),f
 14839     0AD2                     l5234:
 14840     0AD2  303B               	movlw	59
 14841     0AD3  0229               	subwf	position_led_strip@led^(0+256),w
 14842     0AD4  1C03               	skipc
 14843     0AD5  2AD7               	goto	u5941
 14844     0AD6  2AD8               	goto	u5940
 14845     0AD7                     u5941:
 14846     0AD7  2A0F               	goto	l5192
 14847     0AD8                     u5940:
 14848     0AD8                     l5236:
 14849                           
 14850                           ;ledstrip.c: 108:     sendLedstripEndFrame();
 14851     0AD8  319C  24AC  3189   	fcall	_sendLedstripEndFrame
 14852     0ADB                     l1049:
 14853     0ADB  0008               	return
 14854     0ADC                     __end_of_position_led_strip:
 14855                           
 14856                           	psect	text48
 14857     1C53                     __ptext48:	
 14858 ;; *************** function _sendLedstripStartFrame *****************
 14859 ;; Defined at:
 14860 ;;		line 6 in file "ledstrip.c"
 14861 ;; Parameters:    Size  Location     Type
 14862 ;;		None
 14863 ;; Auto vars:     Size  Location     Type
 14864 ;;		None
 14865 ;; Return value:  Size  Location     Type
 14866 ;;                  1    wreg      void 
 14867 ;; Registers used:
 14868 ;;		wreg, status,2, status,0, pclath, cstack
 14869 ;; Tracked objects:
 14870 ;;		On entry : 0/0
 14871 ;;		On exit  : 0/0
 14872 ;;		Unchanged: 0/0
 14873 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 14874 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14875 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14876 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14877 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14878 ;;Total ram usage:        0 bytes
 14879 ;; Hardware stack levels used: 1
 14880 ;; Hardware stack levels required when called: 6
 14881 ;; This function calls:
 14882 ;;		_SPI1_ByteExchange
 14883 ;; This function is called by:
 14884 ;;		_position_led_strip
 14885 ;;		_dutycycle_led_strip
 14886 ;; This function uses a non-reentrant model
 14887 ;;
 14888                           
 14889     1C53                     _sendLedstripStartFrame:	
 14890                           ;psect for function _sendLedstripStartFrame
 14891                           
 14892     1C53                     l5084:	
 14893                           ;incstack = 0
 14894                           ; Regs used in _sendLedstripStartFrame: [wreg+status,2+status,0+pclath+cstack]
 14895                           
 14896                           
 14897                           ;ledstrip.c: 8:     SPI1_ByteExchange(0x00);
 14898     1C53  0021               	movlb	1	; select bank1
 14899     1C54  01A0               	clrf	SPI1_ByteExchange@byteData^(0+128)
 14900     1C55  319B  233E  319C   	fcall	_SPI1_ByteExchange
 14901                           
 14902                           ;ledstrip.c: 9:     SPI1_ByteExchange(0x00);
 14903     1C58  0021               	movlb	1	; select bank1
 14904     1C59  01A0               	clrf	SPI1_ByteExchange@byteData^(0+128)
 14905     1C5A  319B  233E  319C   	fcall	_SPI1_ByteExchange
 14906                           
 14907                           ;ledstrip.c: 10:     SPI1_ByteExchange(0x00);
 14908     1C5D  0021               	movlb	1	; select bank1
 14909     1C5E  01A0               	clrf	SPI1_ByteExchange@byteData^(0+128)
 14910     1C5F  319B  233E  319C   	fcall	_SPI1_ByteExchange
 14911                           
 14912                           ;ledstrip.c: 11:     SPI1_ByteExchange(0x00);
 14913     1C62  0021               	movlb	1	; select bank1
 14914     1C63  01A0               	clrf	SPI1_ByteExchange@byteData^(0+128)
 14915     1C64  319B  233E  319C   	fcall	_SPI1_ByteExchange
 14916     1C67                     l1009:
 14917     1C67  0008               	return
 14918     1C68                     __end_of_sendLedstripStartFrame:
 14919                           
 14920                           	psect	text49
 14921     1CC5                     __ptext49:	
 14922 ;; *************** function _sendLedstripFrame *****************
 14923 ;; Defined at:
 14924 ;;		line 22 in file "ledstrip.c"
 14925 ;; Parameters:    Size  Location     Type
 14926 ;;  red             1    wreg     unsigned char 
 14927 ;;  green           1    1[BANK1 ] unsigned char 
 14928 ;;  blue            1    2[BANK1 ] unsigned char 
 14929 ;;  intensity       1    3[BANK1 ] unsigned char 
 14930 ;; Auto vars:     Size  Location     Type
 14931 ;;  red             1    4[BANK1 ] unsigned char 
 14932 ;; Return value:  Size  Location     Type
 14933 ;;                  1    wreg      void 
 14934 ;; Registers used:
 14935 ;;		wreg, status,2, status,0, pclath, cstack
 14936 ;; Tracked objects:
 14937 ;;		On entry : 0/0
 14938 ;;		On exit  : 0/0
 14939 ;;		Unchanged: 0/0
 14940 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 14941 ;;      Params:         0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0
 14942 ;;      Locals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0
 14943 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14944 ;;      Totals:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0
 14945 ;;Total ram usage:        4 bytes
 14946 ;; Hardware stack levels used: 1
 14947 ;; Hardware stack levels required when called: 6
 14948 ;; This function calls:
 14949 ;;		_SPI1_ByteExchange
 14950 ;; This function is called by:
 14951 ;;		_position_led_strip
 14952 ;;		_dutycycle_led_strip
 14953 ;; This function uses a non-reentrant model
 14954 ;;
 14955                           
 14956     1CC5                     _sendLedstripFrame:	
 14957                           ;psect for function _sendLedstripFrame
 14958                           
 14959                           
 14960                           ;incstack = 0
 14961                           ; Regs used in _sendLedstripFrame: [wreg+status,2+status,0+pclath+cstack]
 14962                           ;sendLedstripFrame@red stored from wreg
 14963     1CC5  0021               	movlb	1	; select bank1
 14964     1CC6  00A4               	movwf	sendLedstripFrame@red^(0+128)
 14965     1CC7                     l5088:
 14966                           
 14967                           ;ledstrip.c: 23:     SPI1_ByteExchange(0xE0 | intensity);
 14968     1CC7  0823               	movf	sendLedstripFrame@intensity^(0+128),w
 14969     1CC8  38E0               	iorlw	224
 14970     1CC9  00A0               	movwf	SPI1_ByteExchange@byteData^(0+128)
 14971     1CCA  319B  233E  319C   	fcall	_SPI1_ByteExchange
 14972                           
 14973                           ;ledstrip.c: 25:     SPI1_ByteExchange(blue);
 14974     1CCD  0021               	movlb	1	; select bank1
 14975     1CCE  0822               	movf	sendLedstripFrame@blue^(0+128),w
 14976     1CCF  00A0               	movwf	SPI1_ByteExchange@byteData^(0+128)
 14977     1CD0  319B  233E  319C   	fcall	_SPI1_ByteExchange
 14978                           
 14979                           ;ledstrip.c: 26:     SPI1_ByteExchange(green);
 14980     1CD3  0021               	movlb	1	; select bank1
 14981     1CD4  0821               	movf	sendLedstripFrame@green^(0+128),w
 14982     1CD5  00A0               	movwf	SPI1_ByteExchange@byteData^(0+128)
 14983     1CD6  319B  233E  319C   	fcall	_SPI1_ByteExchange
 14984                           
 14985                           ;ledstrip.c: 27:     SPI1_ByteExchange(red);
 14986     1CD9  0021               	movlb	1	; select bank1
 14987     1CDA  0824               	movf	sendLedstripFrame@red^(0+128),w
 14988     1CDB  00A0               	movwf	SPI1_ByteExchange@byteData^(0+128)
 14989     1CDC  319B  233E  319C   	fcall	_SPI1_ByteExchange
 14990     1CDF                     l1015:
 14991     1CDF  0008               	return
 14992     1CE0                     __end_of_sendLedstripFrame:
 14993                           
 14994                           	psect	text50
 14995     1CAC                     __ptext50:	
 14996 ;; *************** function _sendLedstripEndFrame *****************
 14997 ;; Defined at:
 14998 ;;		line 14 in file "ledstrip.c"
 14999 ;; Parameters:    Size  Location     Type
 15000 ;;		None
 15001 ;; Auto vars:     Size  Location     Type
 15002 ;;		None
 15003 ;; Return value:  Size  Location     Type
 15004 ;;                  1    wreg      void 
 15005 ;; Registers used:
 15006 ;;		wreg, status,2, status,0, pclath, cstack
 15007 ;; Tracked objects:
 15008 ;;		On entry : 0/0
 15009 ;;		On exit  : 0/0
 15010 ;;		Unchanged: 0/0
 15011 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 15012 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15013 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15014 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15015 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15016 ;;Total ram usage:        0 bytes
 15017 ;; Hardware stack levels used: 1
 15018 ;; Hardware stack levels required when called: 6
 15019 ;; This function calls:
 15020 ;;		_SPI1_ByteExchange
 15021 ;; This function is called by:
 15022 ;;		_position_led_strip
 15023 ;;		_dutycycle_led_strip
 15024 ;; This function uses a non-reentrant model
 15025 ;;
 15026                           
 15027     1CAC                     _sendLedstripEndFrame:	
 15028                           ;psect for function _sendLedstripEndFrame
 15029                           
 15030     1CAC                     l5086:	
 15031                           ;incstack = 0
 15032                           ; Regs used in _sendLedstripEndFrame: [wreg+status,2+status,0+pclath+cstack]
 15033                           
 15034                           
 15035                           ;ledstrip.c: 16:     SPI1_ByteExchange(0xFF);
 15036     1CAC  30FF               	movlw	255
 15037     1CAD  0021               	movlb	1	; select bank1
 15038     1CAE  00A0               	movwf	SPI1_ByteExchange@byteData^(0+128)
 15039     1CAF  319B  233E  319C   	fcall	_SPI1_ByteExchange
 15040                           
 15041                           ;ledstrip.c: 17:     SPI1_ByteExchange(0xFF);
 15042     1CB2  30FF               	movlw	255
 15043     1CB3  0021               	movlb	1	; select bank1
 15044     1CB4  00A0               	movwf	SPI1_ByteExchange@byteData^(0+128)
 15045     1CB5  319B  233E  319C   	fcall	_SPI1_ByteExchange
 15046                           
 15047                           ;ledstrip.c: 18:     SPI1_ByteExchange(0xFF);
 15048     1CB8  30FF               	movlw	255
 15049     1CB9  0021               	movlb	1	; select bank1
 15050     1CBA  00A0               	movwf	SPI1_ByteExchange@byteData^(0+128)
 15051     1CBB  319B  233E  319C   	fcall	_SPI1_ByteExchange
 15052                           
 15053                           ;ledstrip.c: 19:     SPI1_ByteExchange(0xFF);
 15054     1CBE  30FF               	movlw	255
 15055     1CBF  0021               	movlb	1	; select bank1
 15056     1CC0  00A0               	movwf	SPI1_ByteExchange@byteData^(0+128)
 15057     1CC1  319B  233E  319C   	fcall	_SPI1_ByteExchange
 15058     1CC4                     l1012:
 15059     1CC4  0008               	return
 15060     1CC5                     __end_of_sendLedstripEndFrame:
 15061                           
 15062                           	psect	text51
 15063     1B3E                     __ptext51:	
 15064 ;; *************** function _SPI1_ByteExchange *****************
 15065 ;; Defined at:
 15066 ;;		line 160 in file "mcc_generated_files/spi/src/mssp1.c"
 15067 ;; Parameters:    Size  Location     Type
 15068 ;;  byteData        1    0[BANK1 ] unsigned char 
 15069 ;; Auto vars:     Size  Location     Type
 15070 ;;		None
 15071 ;; Return value:  Size  Location     Type
 15072 ;;                  1    wreg      unsigned char 
 15073 ;; Registers used:
 15074 ;;		wreg
 15075 ;; Tracked objects:
 15076 ;;		On entry : 0/0
 15077 ;;		On exit  : 0/0
 15078 ;;		Unchanged: 0/0
 15079 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 15080 ;;      Params:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0
 15081 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15082 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15083 ;;      Totals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0
 15084 ;;Total ram usage:        1 bytes
 15085 ;; Hardware stack levels used: 1
 15086 ;; Hardware stack levels required when called: 5
 15087 ;; This function calls:
 15088 ;;		Nothing
 15089 ;; This function is called by:
 15090 ;;		_sendLedstripStartFrame
 15091 ;;		_sendLedstripEndFrame
 15092 ;;		_sendLedstripFrame
 15093 ;; This function uses a non-reentrant model
 15094 ;;
 15095                           
 15096     1B3E                     _SPI1_ByteExchange:	
 15097                           ;psect for function _SPI1_ByteExchange
 15098                           
 15099     1B3E                     l4570:	
 15100                           ;incstack = 0
 15101                           ; Regs used in _SPI1_ByteExchange: [wreg]
 15102                           
 15103                           
 15104                           ;mcc_generated_files/spi/src/mssp1.c: 160: uint8_t SPI1_ByteExchange(uint8_t byteData);m
      +                          cc_generated_files/spi/src/mssp1.c: 161: {;mcc_generated_files/spi/src/mssp1.c: 162:    
      +                           SSP1BUF = byteData;
 15105     1B3E  0021               	movlb	1	; select bank1
 15106     1B3F  0820               	movf	SPI1_ByteExchange@byteData^(0+128),w
 15107     1B40  0024               	movlb	4	; select bank4
 15108     1B41  0091               	movwf	17	;volatile
 15109     1B42                     l174:	
 15110                           ;mcc_generated_files/spi/src/mssp1.c: 164:     {;mcc_generated_files/spi/src/mssp1.c: 16
      +                          6:     }
 15111                           
 15112                           
 15113                           ;mcc_generated_files/spi/src/mssp1.c: 163:     while (!PIR1bits.SSP1IF)
 15114     1B42  0020               	movlb	0	; select bank0
 15115     1B43  1D91               	btfss	17,3	;volatile
 15116     1B44  2B46               	goto	u4671
 15117     1B45  2B47               	goto	u4670
 15118     1B46                     u4671:
 15119     1B46  2B42               	goto	l174
 15120     1B47                     u4670:
 15121     1B47                     l176:
 15122                           
 15123                           ;mcc_generated_files/spi/src/mssp1.c: 167:     PIR1bits.SSP1IF = 0;
 15124     1B47  1191               	bcf	17,3	;volatile
 15125     1B48                     l4572:
 15126                           
 15127                           ;mcc_generated_files/spi/src/mssp1.c: 168:     return SSP1BUF;;	Return value of _SPI1_By
      +                          teExchange is never used
 15128     1B48  0024               	movlb	4	; select bank4
 15129     1B49  0811               	movf	17,w	;volatile
 15130     1B4A                     l177:
 15131     1B4A  0008               	return
 15132     1B4B                     __end_of_SPI1_ByteExchange:
 15133                           
 15134                           	psect	text52
 15135     1A9B                     __ptext52:	
 15136 ;; *************** function _getSetpoint *****************
 15137 ;; Defined at:
 15138 ;;		line 39 in file "controller.c"
 15139 ;; Parameters:    Size  Location     Type
 15140 ;;		None
 15141 ;; Auto vars:     Size  Location     Type
 15142 ;;		None
 15143 ;; Return value:  Size  Location     Type
 15144 ;;                  2    0[BANK1 ] unsigned short 
 15145 ;; Registers used:
 15146 ;;		wreg
 15147 ;; Tracked objects:
 15148 ;;		On entry : 0/0
 15149 ;;		On exit  : 0/0
 15150 ;;		Unchanged: 0/0
 15151 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 15152 ;;      Params:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0
 15153 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15154 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15155 ;;      Totals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0
 15156 ;;Total ram usage:        2 bytes
 15157 ;; Hardware stack levels used: 1
 15158 ;; Hardware stack levels required when called: 5
 15159 ;; This function calls:
 15160 ;;		Nothing
 15161 ;; This function is called by:
 15162 ;;		_printLogs
 15163 ;;		_position_led_strip
 15164 ;; This function uses a non-reentrant model
 15165 ;;
 15166                           
 15167     1A9B                     _getSetpoint:	
 15168                           ;psect for function _getSetpoint
 15169                           
 15170     1A9B                     l5080:	
 15171                           ;incstack = 0
 15172                           ; Regs used in _getSetpoint: [wreg]
 15173                           
 15174     1A9B  0022               	movlb	2	; select bank2
 15175     1A9C  0866               	movf	(_setpoint+1)^(0+256),w
 15176     1A9D  0021               	movlb	1	; select bank1
 15177     1A9E  00A1               	movwf	(?_getSetpoint+1)^(0+128)
 15178     1A9F  0022               	movlb	2	; select bank2
 15179     1AA0  0865               	movf	_setpoint^(0+256),w
 15180     1AA1  0021               	movlb	1	; select bank1
 15181     1AA2  00A0               	movwf	?_getSetpoint^(0+128)
 15182     1AA3                     l973:
 15183     1AA3  0008               	return
 15184     1AA4                     __end_of_getSetpoint:
 15185                           
 15186                           	psect	text53
 15187     10A8                     __ptext53:	
 15188 ;; *************** function _getLedNumber *****************
 15189 ;; Defined at:
 15190 ;;		line 33 in file "ledstrip.c"
 15191 ;; Parameters:    Size  Location     Type
 15192 ;;  height          2   78[BANK1 ] unsigned short 
 15193 ;; Auto vars:     Size  Location     Type
 15194 ;;  result          4    0[BANK2 ] float 
 15195 ;; Return value:  Size  Location     Type
 15196 ;;                  2   78[BANK1 ] int 
 15197 ;; Registers used:
 15198 ;;		wreg, status,2, status,0, pclath, cstack
 15199 ;; Tracked objects:
 15200 ;;		On entry : 0/0
 15201 ;;		On exit  : 0/0
 15202 ;;		Unchanged: 0/0
 15203 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 15204 ;;      Params:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0
 15205 ;;      Locals:         0       0       0       4       0       0       0       0       0       0       0       0       
      +0       0
 15206 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15207 ;;      Totals:         0       0       2       4       0       0       0       0       0       0       0       0       
      +0       0
 15208 ;;Total ram usage:        6 bytes
 15209 ;; Hardware stack levels used: 1
 15210 ;; Hardware stack levels required when called: 7
 15211 ;; This function calls:
 15212 ;;		___fladd
 15213 ;;		___flmul
 15214 ;;		___fltol
 15215 ;;		___xxtofl
 15216 ;; This function is called by:
 15217 ;;		_position_led_strip
 15218 ;; This function uses a non-reentrant model
 15219 ;;
 15220                           
 15221     10A8                     _getLedNumber:	
 15222                           ;psect for function _getLedNumber
 15223                           
 15224     10A8                     l5090:	
 15225                           ;incstack = 0
 15226                           ; Regs used in _getLedNumber: [wreg+status,2+status,0+pclath+cstack]
 15227                           
 15228                           
 15229                           ;ledstrip.c: 34:     float result = (0.068104825 * height - 5.4876957494);
 15230     10A8  30C0               	movlw	192
 15231     10A9  0021               	movlb	1	; select bank1
 15232     10AA  00B1               	movwf	(___fladd@b+3)^(0+128)
 15233     10AB  30AF               	movlw	175
 15234     10AC  00B0               	movwf	(___fladd@b+2)^(0+128)
 15235     10AD  309B               	movlw	155
 15236     10AE  00AF               	movwf	(___fladd@b+1)^(0+128)
 15237     10AF  3034               	movlw	52
 15238     10B0  00AE               	movwf	___fladd@b^(0+128)
 15239     10B1  303D               	movlw	61
 15240     10B2  00CD               	movwf	(___flmul@b+3)^(0+128)
 15241     10B3  308B               	movlw	139
 15242     10B4  00CC               	movwf	(___flmul@b+2)^(0+128)
 15243     10B5  307A               	movlw	122
 15244     10B6  00CB               	movwf	(___flmul@b+1)^(0+128)
 15245     10B7  308B               	movlw	139
 15246     10B8  00CA               	movwf	___flmul@b^(0+128)
 15247     10B9  086E               	movf	getLedNumber@height^(0+128),w
 15248     10BA  00A0               	movwf	___xxtofl@val^(0+128)
 15249     10BB  086F               	movf	(getLedNumber@height+1)^(0+128),w
 15250     10BC  00A1               	movwf	(___xxtofl@val^(0+128)+1)
 15251     10BD  01A2               	clrf	(___xxtofl@val^(0+128)+2)
 15252     10BE  01A3               	clrf	(___xxtofl@val^(0+128)+3)
 15253     10BF  3000               	movlw	0
 15254     10C0  3196  26B0  3190   	fcall	___xxtofl
 15255     10C3  0021               	movlb	1	; select bank1
 15256     10C4  0823               	movf	(?___xxtofl+3)^(0+128),w
 15257     10C5  00D1               	movwf	(___flmul@a+3)^(0+128)
 15258     10C6  0822               	movf	(?___xxtofl+2)^(0+128),w
 15259     10C7  00D0               	movwf	(___flmul@a+2)^(0+128)
 15260     10C8  0821               	movf	(?___xxtofl+1)^(0+128),w
 15261     10C9  00CF               	movwf	(___flmul@a+1)^(0+128)
 15262     10CA  0820               	movf	?___xxtofl^(0+128),w
 15263     10CB  00CE               	movwf	___flmul@a^(0+128)
 15264     10CC  3180  208A  3190   	fcall	___flmul
 15265     10CF  0021               	movlb	1	; select bank1
 15266     10D0  084D               	movf	(?___flmul+3)^(0+128),w
 15267     10D1  00B5               	movwf	(___fladd@a+3)^(0+128)
 15268     10D2  084C               	movf	(?___flmul+2)^(0+128),w
 15269     10D3  00B4               	movwf	(___fladd@a+2)^(0+128)
 15270     10D4  084B               	movf	(?___flmul+1)^(0+128),w
 15271     10D5  00B3               	movwf	(___fladd@a+1)^(0+128)
 15272     10D6  084A               	movf	?___flmul^(0+128),w
 15273     10D7  00B2               	movwf	___fladd@a^(0+128)
 15274     10D8  3185  2500  3190   	fcall	___fladd
 15275     10DB  0021               	movlb	1	; select bank1
 15276     10DC  0831               	movf	(?___fladd+3)^(0+128),w
 15277     10DD  0022               	movlb	2	; select bank2
 15278     10DE  00A3               	movwf	(getLedNumber@result+3)^(0+256)
 15279     10DF  0021               	movlb	1	; select bank1
 15280     10E0  0830               	movf	(?___fladd+2)^(0+128),w
 15281     10E1  0022               	movlb	2	; select bank2
 15282     10E2  00A2               	movwf	(getLedNumber@result+2)^(0+256)
 15283     10E3  0021               	movlb	1	; select bank1
 15284     10E4  082F               	movf	(?___fladd+1)^(0+128),w
 15285     10E5  0022               	movlb	2	; select bank2
 15286     10E6  00A1               	movwf	(getLedNumber@result+1)^(0+256)
 15287     10E7  0021               	movlb	1	; select bank1
 15288     10E8  082E               	movf	?___fladd^(0+128),w
 15289     10E9  0022               	movlb	2	; select bank2
 15290     10EA  00A0               	movwf	getLedNumber@result^(0+256)
 15291                           
 15292                           ;ledstrip.c: 35:     return result;
 15293     10EB  0823               	movf	(getLedNumber@result+3)^(0+256),w
 15294     10EC  0021               	movlb	1	; select bank1
 15295     10ED  00E7               	movwf	(___fltol@f1+3)^(0+128)
 15296     10EE  0022               	movlb	2	; select bank2
 15297     10EF  0822               	movf	(getLedNumber@result+2)^(0+256),w
 15298     10F0  0021               	movlb	1	; select bank1
 15299     10F1  00E6               	movwf	(___fltol@f1+2)^(0+128)
 15300     10F2  0022               	movlb	2	; select bank2
 15301     10F3  0821               	movf	(getLedNumber@result+1)^(0+256),w
 15302     10F4  0021               	movlb	1	; select bank1
 15303     10F5  00E5               	movwf	(___fltol@f1+1)^(0+128)
 15304     10F6  0022               	movlb	2	; select bank2
 15305     10F7  0820               	movf	getLedNumber@result^(0+256),w
 15306     10F8  0021               	movlb	1	; select bank1
 15307     10F9  00E4               	movwf	___fltol@f1^(0+128)
 15308     10FA  3192  2289  3190   	fcall	___fltol
 15309     10FD  0021               	movlb	1	; select bank1
 15310     10FE  0865               	movf	(?___fltol+1)^(0+128),w
 15311     10FF  00EF               	movwf	(?_getLedNumber+1)^(0+128)
 15312     1100  0864               	movf	?___fltol^(0+128),w
 15313     1101  00EE               	movwf	?_getLedNumber^(0+128)
 15314     1102                     l1018:
 15315     1102  0008               	return
 15316     1103                     __end_of_getLedNumber:
 15317                           
 15318                           	psect	text54
 15319     16B0                     __ptext54:	
 15320 ;; *************** function ___xxtofl *****************
 15321 ;; Defined at:
 15322 ;;		line 10 in file "C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\xxtofl.c"
 15323 ;; Parameters:    Size  Location     Type
 15324 ;;  sign            1    wreg     unsigned char 
 15325 ;;  val             4    0[BANK1 ] long 
 15326 ;; Auto vars:     Size  Location     Type
 15327 ;;  sign            1    8[BANK1 ] unsigned char 
 15328 ;;  arg             4   10[BANK1 ] unsigned long 
 15329 ;;  exp             1    9[BANK1 ] unsigned char 
 15330 ;; Return value:  Size  Location     Type
 15331 ;;                  4    0[BANK1 ] unsigned char 
 15332 ;; Registers used:
 15333 ;;		wreg, status,2, status,0
 15334 ;; Tracked objects:
 15335 ;;		On entry : 0/0
 15336 ;;		On exit  : 0/0
 15337 ;;		Unchanged: 0/0
 15338 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 15339 ;;      Params:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0
 15340 ;;      Locals:         0       0       6       0       0       0       0       0       0       0       0       0       
      +0       0
 15341 ;;      Temps:          0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0
 15342 ;;      Totals:         0       0      14       0       0       0       0       0       0       0       0       0       
      +0       0
 15343 ;;Total ram usage:       14 bytes
 15344 ;; Hardware stack levels used: 1
 15345 ;; Hardware stack levels required when called: 5
 15346 ;; This function calls:
 15347 ;;		Nothing
 15348 ;; This function is called by:
 15349 ;;		_printFloat
 15350 ;;		_str2float
 15351 ;;		_getLedNumber
 15352 ;; This function uses a non-reentrant model
 15353 ;;
 15354                           
 15355     16B0                     ___xxtofl:	
 15356                           ;psect for function ___xxtofl
 15357                           
 15358                           
 15359                           ;incstack = 0
 15360                           ; Regs used in ___xxtofl: [wreg+status,2+status,0]
 15361                           ;___xxtofl@sign stored from wreg
 15362     16B0  0021               	movlb	1	; select bank1
 15363     16B1  00A8               	movwf	___xxtofl@sign^(0+128)
 15364     16B2                     l4948:
 15365     16B2  0828               	movf	___xxtofl@sign^(0+128),w
 15366     16B3  1903               	btfsc	3,2
 15367     16B4  2EB6               	goto	u5511
 15368     16B5  2EB7               	goto	u5510
 15369     16B6                     u5511:
 15370     16B6  2ECB               	goto	l4954
 15371     16B7                     u5510:
 15372     16B7                     l4950:
 15373     16B7  1FA3               	btfss	(___xxtofl@val+3)^(0+128),7
 15374     16B8  2EBA               	goto	u5521
 15375     16B9  2EBB               	goto	u5520
 15376     16BA                     u5521:
 15377     16BA  2ECB               	goto	l4954
 15378     16BB                     u5520:
 15379     16BB                     l4952:
 15380     16BB  0920               	comf	___xxtofl@val^(0+128),w
 15381     16BC  00AA               	movwf	___xxtofl@arg^(0+128)
 15382     16BD  0921               	comf	(___xxtofl@val^(0+128)+1),w
 15383     16BE  00AB               	movwf	(___xxtofl@arg+1)^(0+128)
 15384     16BF  0922               	comf	(___xxtofl@val^(0+128)+2),w
 15385     16C0  00AC               	movwf	(___xxtofl@arg+2)^(0+128)
 15386     16C1  0923               	comf	(___xxtofl@val^(0+128)+3),w
 15387     16C2  00AD               	movwf	(___xxtofl@arg+3)^(0+128)
 15388     16C3  0AAA               	incf	___xxtofl@arg^(0+128),f
 15389     16C4  1903               	skipnz
 15390     16C5  0AAB               	incf	(___xxtofl@arg+1)^(0+128),f
 15391     16C6  1903               	skipnz
 15392     16C7  0AAC               	incf	(___xxtofl@arg+2)^(0+128),f
 15393     16C8  1903               	skipnz
 15394     16C9  0AAD               	incf	(___xxtofl@arg+3)^(0+128),f
 15395     16CA  2ED3               	goto	l1648
 15396     16CB                     l4954:
 15397     16CB  0823               	movf	(___xxtofl@val+3)^(0+128),w
 15398     16CC  00AD               	movwf	(___xxtofl@arg+3)^(0+128)
 15399     16CD  0822               	movf	(___xxtofl@val+2)^(0+128),w
 15400     16CE  00AC               	movwf	(___xxtofl@arg+2)^(0+128)
 15401     16CF  0821               	movf	(___xxtofl@val+1)^(0+128),w
 15402     16D0  00AB               	movwf	(___xxtofl@arg+1)^(0+128)
 15403     16D1  0820               	movf	___xxtofl@val^(0+128),w
 15404     16D2  00AA               	movwf	___xxtofl@arg^(0+128)
 15405     16D3                     l1648:
 15406     16D3  0823               	movf	(___xxtofl@val+3)^(0+128),w
 15407     16D4  0422               	iorwf	(___xxtofl@val+2)^(0+128),w
 15408     16D5  0421               	iorwf	(___xxtofl@val+1)^(0+128),w
 15409     16D6  0420               	iorwf	___xxtofl@val^(0+128),w
 15410     16D7  1D03               	skipz
 15411     16D8  2EDA               	goto	u5531
 15412     16D9  2EDB               	goto	u5530
 15413     16DA                     u5531:
 15414     16DA  2EE4               	goto	l1649
 15415     16DB                     u5530:
 15416     16DB                     l4956:
 15417     16DB  3000               	movlw	0
 15418     16DC  00A3               	movwf	(?___xxtofl+3)^(0+128)
 15419     16DD  3000               	movlw	0
 15420     16DE  00A2               	movwf	(?___xxtofl+2)^(0+128)
 15421     16DF  3000               	movlw	0
 15422     16E0  00A1               	movwf	(?___xxtofl+1)^(0+128)
 15423     16E1  3000               	movlw	0
 15424     16E2  00A0               	movwf	?___xxtofl^(0+128)
 15425     16E3  2F54               	goto	l1650
 15426     16E4                     l1649:
 15427     16E4  3096               	movlw	150
 15428     16E5  00A9               	movwf	___xxtofl@exp^(0+128)
 15429     16E6  2EF0               	goto	l4962
 15430     16E7                     l4960:
 15431     16E7  3001               	movlw	1
 15432     16E8  07A9               	addwf	___xxtofl@exp^(0+128),f
 15433     16E9  3001               	movlw	1
 15434     16EA                     u5545:
 15435     16EA  36AD               	lsrf	(___xxtofl@arg+3)^(0+128),f
 15436     16EB  0CAC               	rrf	(___xxtofl@arg+2)^(0+128),f
 15437     16EC  0CAB               	rrf	(___xxtofl@arg+1)^(0+128),f
 15438     16ED  0CAA               	rrf	___xxtofl@arg^(0+128),f
 15439     16EE  0B89               	decfsz	9,f
 15440     16EF  2EEA               	goto	u5545
 15441     16F0                     l4962:
 15442     16F0  30FE               	movlw	254
 15443     16F1  052D               	andwf	(___xxtofl@arg+3)^(0+128),w
 15444     16F2  1D03               	btfss	3,2
 15445     16F3  2EF5               	goto	u5551
 15446     16F4  2EF6               	goto	u5550
 15447     16F5                     u5551:
 15448     16F5  2EE7               	goto	l4960
 15449     16F6                     u5550:
 15450     16F6  2F06               	goto	l4966
 15451     16F7                     l4964:
 15452     16F7  3001               	movlw	1
 15453     16F8  07A9               	addwf	___xxtofl@exp^(0+128),f
 15454     16F9  3001               	movlw	1
 15455     16FA  07AA               	addwf	___xxtofl@arg^(0+128),f
 15456     16FB  3000               	movlw	0
 15457     16FC  3DAB               	addwfc	(___xxtofl@arg+1)^(0+128),f
 15458     16FD  3DAC               	addwfc	(___xxtofl@arg+2)^(0+128),f
 15459     16FE  3DAD               	addwfc	(___xxtofl@arg+3)^(0+128),f
 15460     16FF  3001               	movlw	1
 15461     1700                     u5565:
 15462     1700  36AD               	lsrf	(___xxtofl@arg+3)^(0+128),f
 15463     1701  0CAC               	rrf	(___xxtofl@arg+2)^(0+128),f
 15464     1702  0CAB               	rrf	(___xxtofl@arg+1)^(0+128),f
 15465     1703  0CAA               	rrf	___xxtofl@arg^(0+128),f
 15466     1704  0B89               	decfsz	9,f
 15467     1705  2F00               	goto	u5565
 15468     1706                     l4966:
 15469     1706  30FF               	movlw	255
 15470     1707  052D               	andwf	(___xxtofl@arg+3)^(0+128),w
 15471     1708  1D03               	btfss	3,2
 15472     1709  2F0B               	goto	u5571
 15473     170A  2F0C               	goto	u5570
 15474     170B                     u5571:
 15475     170B  2EF7               	goto	l4964
 15476     170C                     u5570:
 15477     170C  2F16               	goto	l4970
 15478     170D                     l4968:
 15479     170D  3001               	movlw	1
 15480     170E  02A9               	subwf	___xxtofl@exp^(0+128),f
 15481     170F  3001               	movlw	1
 15482     1710                     u5585:
 15483     1710  35AA               	lslf	___xxtofl@arg^(0+128),f
 15484     1711  0DAB               	rlf	(___xxtofl@arg+1)^(0+128),f
 15485     1712  0DAC               	rlf	(___xxtofl@arg+2)^(0+128),f
 15486     1713  0DAD               	rlf	(___xxtofl@arg+3)^(0+128),f
 15487     1714  0B89               	decfsz	9,f
 15488     1715  2F10               	goto	u5585
 15489     1716                     l4970:
 15490     1716  1BAC               	btfsc	(___xxtofl@arg+2)^(0+128),7
 15491     1717  2F19               	goto	u5591
 15492     1718  2F1A               	goto	u5590
 15493     1719                     u5591:
 15494     1719  2F20               	goto	l1661
 15495     171A                     u5590:
 15496     171A                     l4972:
 15497     171A  3002               	movlw	2
 15498     171B  0229               	subwf	___xxtofl@exp^(0+128),w
 15499     171C  1803               	skipnc
 15500     171D  2F1F               	goto	u5601
 15501     171E  2F20               	goto	u5600
 15502     171F                     u5601:
 15503     171F  2F0D               	goto	l4968
 15504     1720                     u5600:
 15505     1720                     l1661:
 15506     1720  1829               	btfsc	___xxtofl@exp^(0+128),0
 15507     1721  2F23               	goto	u5611
 15508     1722  2F24               	goto	u5610
 15509     1723                     u5611:
 15510     1723  2F2C               	goto	l1662
 15511     1724                     u5610:
 15512     1724                     l4974:
 15513     1724  30FF               	movlw	255
 15514     1725  05AA               	andwf	___xxtofl@arg^(0+128),f
 15515     1726  30FF               	movlw	255
 15516     1727  05AB               	andwf	(___xxtofl@arg+1)^(0+128),f
 15517     1728  307F               	movlw	127
 15518     1729  05AC               	andwf	(___xxtofl@arg+2)^(0+128),f
 15519     172A  30FF               	movlw	255
 15520     172B  05AD               	andwf	(___xxtofl@arg+3)^(0+128),f
 15521     172C                     l1662:
 15522     172C  1003               	clrc
 15523     172D  0CA9               	rrf	___xxtofl@exp^(0+128),f
 15524     172E                     l4976:
 15525     172E  0829               	movf	___xxtofl@exp^(0+128),w
 15526     172F  00A4               	movwf	??___xxtofl^(0+128)
 15527     1730  01A5               	clrf	(??___xxtofl^(0+128)+1)
 15528     1731  01A6               	clrf	(??___xxtofl^(0+128)+2)
 15529     1732  01A7               	clrf	(??___xxtofl^(0+128)+3)
 15530     1733  3018               	movlw	24
 15531     1734                     u5625:
 15532     1734  35A4               	lslf	??___xxtofl^(0+128),f
 15533     1735  0DA5               	rlf	(??___xxtofl^(0+128)+1),f
 15534     1736  0DA6               	rlf	(??___xxtofl^(0+128)+2),f
 15535     1737  0DA7               	rlf	(??___xxtofl^(0+128)+3),f
 15536     1738                     u5620:
 15537     1738  0B89               	decfsz	9,f
 15538     1739  2F34               	goto	u5625
 15539     173A  0824               	movf	??___xxtofl^(0+128),w
 15540     173B  04AA               	iorwf	___xxtofl@arg^(0+128),f
 15541     173C  0825               	movf	(??___xxtofl+1)^(0+128),w
 15542     173D  04AB               	iorwf	(___xxtofl@arg+1)^(0+128),f
 15543     173E  0826               	movf	(??___xxtofl+2)^(0+128),w
 15544     173F  04AC               	iorwf	(___xxtofl@arg+2)^(0+128),f
 15545     1740  0827               	movf	(??___xxtofl+3)^(0+128),w
 15546     1741  04AD               	iorwf	(___xxtofl@arg+3)^(0+128),f
 15547     1742                     l4978:
 15548     1742  0828               	movf	___xxtofl@sign^(0+128),w
 15549     1743  1903               	btfsc	3,2
 15550     1744  2F46               	goto	u5631
 15551     1745  2F47               	goto	u5630
 15552     1746                     u5631:
 15553     1746  2F4C               	goto	l4984
 15554     1747                     u5630:
 15555     1747                     l4980:
 15556     1747  1FA3               	btfss	(___xxtofl@val+3)^(0+128),7
 15557     1748  2F4A               	goto	u5641
 15558     1749  2F4B               	goto	u5640
 15559     174A                     u5641:
 15560     174A  2F4C               	goto	l4984
 15561     174B                     u5640:
 15562     174B                     l4982:
 15563     174B  17AD               	bsf	(___xxtofl@arg^(0+128)+3),7
 15564     174C                     l4984:
 15565     174C  082D               	movf	(___xxtofl@arg+3)^(0+128),w
 15566     174D  00A3               	movwf	(?___xxtofl+3)^(0+128)
 15567     174E  082C               	movf	(___xxtofl@arg+2)^(0+128),w
 15568     174F  00A2               	movwf	(?___xxtofl+2)^(0+128)
 15569     1750  082B               	movf	(___xxtofl@arg+1)^(0+128),w
 15570     1751  00A1               	movwf	(?___xxtofl+1)^(0+128)
 15571     1752  082A               	movf	___xxtofl@arg^(0+128),w
 15572     1753  00A0               	movwf	?___xxtofl^(0+128)
 15573     1754                     l1650:
 15574     1754  0008               	return
 15575     1755                     __end_of___xxtofl:
 15576                           
 15577                           	psect	text55
 15578     1289                     __ptext55:	
 15579 ;; *************** function ___fltol *****************
 15580 ;; Defined at:
 15581 ;;		line 43 in file "C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\fltol.c"
 15582 ;; Parameters:    Size  Location     Type
 15583 ;;  f1              4   68[BANK1 ] unsigned char 
 15584 ;; Auto vars:     Size  Location     Type
 15585 ;;  exp1            1   77[BANK1 ] unsigned char 
 15586 ;;  sign1           1   76[BANK1 ] unsigned char 
 15587 ;; Return value:  Size  Location     Type
 15588 ;;                  4   68[BANK1 ] long 
 15589 ;; Registers used:
 15590 ;;		wreg, status,2, status,0
 15591 ;; Tracked objects:
 15592 ;;		On entry : 0/0
 15593 ;;		On exit  : 0/0
 15594 ;;		Unchanged: 0/0
 15595 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 15596 ;;      Params:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0
 15597 ;;      Locals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0
 15598 ;;      Temps:          0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0
 15599 ;;      Totals:         0       0      10       0       0       0       0       0       0       0       0       0       
      +0       0
 15600 ;;Total ram usage:       10 bytes
 15601 ;; Hardware stack levels used: 1
 15602 ;; Hardware stack levels required when called: 5
 15603 ;; This function calls:
 15604 ;;		Nothing
 15605 ;; This function is called by:
 15606 ;;		_printFloat
 15607 ;;		_getLedNumber
 15608 ;; This function uses a non-reentrant model
 15609 ;;
 15610                           
 15611     1289                     ___fltol:	
 15612                           ;psect for function ___fltol
 15613                           
 15614     1289                     l4576:	
 15615                           ;incstack = 0
 15616                           ; Regs used in ___fltol: [wreg+status,2+status,0]
 15617                           
 15618     1289  1003               	clrc
 15619     128A  0021               	movlb	1	; select bank1
 15620     128B  0D66               	rlf	(___fltol@f1+2)^(0+128),w
 15621     128C  0D67               	rlf	(___fltol@f1+3)^(0+128),w
 15622     128D  00ED               	movwf	___fltol@exp1^(0+128)
 15623     128E  086D               	movf	___fltol@exp1^(0+128),w
 15624     128F  1D03               	btfss	3,2
 15625     1290  2A92               	goto	u4681
 15626     1291  2A93               	goto	u4680
 15627     1292                     u4681:
 15628     1292  2A9C               	goto	l4582
 15629     1293                     u4680:
 15630     1293                     l4578:
 15631     1293  3000               	movlw	0
 15632     1294  00E7               	movwf	(?___fltol+3)^(0+128)
 15633     1295  3000               	movlw	0
 15634     1296  00E6               	movwf	(?___fltol+2)^(0+128)
 15635     1297  3000               	movlw	0
 15636     1298  00E5               	movwf	(?___fltol+1)^(0+128)
 15637     1299  3000               	movlw	0
 15638     129A  00E4               	movwf	?___fltol^(0+128)
 15639     129B  2AF7               	goto	l1401
 15640     129C                     l4582:
 15641     129C  0864               	movf	___fltol@f1^(0+128),w
 15642     129D  00E8               	movwf	??___fltol^(0+128)
 15643     129E  0865               	movf	(___fltol@f1+1)^(0+128),w
 15644     129F  00E9               	movwf	(??___fltol^(0+128)+1)
 15645     12A0  0866               	movf	(___fltol@f1+2)^(0+128),w
 15646     12A1  00EA               	movwf	(??___fltol^(0+128)+2)
 15647     12A2  0867               	movf	(___fltol@f1+3)^(0+128),w
 15648     12A3  00EB               	movwf	(??___fltol^(0+128)+3)
 15649     12A4  301F               	movlw	31
 15650     12A5                     u4695:
 15651     12A5  36EB               	lsrf	(??___fltol^(0+128)+3),f
 15652     12A6  0CEA               	rrf	(??___fltol^(0+128)+2),f
 15653     12A7  0CE9               	rrf	(??___fltol^(0+128)+1),f
 15654     12A8  0CE8               	rrf	??___fltol^(0+128),f
 15655     12A9                     u4690:
 15656     12A9  0B89               	decfsz	9,f
 15657     12AA  2AA5               	goto	u4695
 15658     12AB  0868               	movf	??___fltol^(0+128),w
 15659     12AC  00EC               	movwf	___fltol@sign1^(0+128)
 15660     12AD                     l4584:
 15661     12AD  17E6               	bsf	(___fltol@f1^(0+128)+2),7
 15662     12AE                     l4586:
 15663     12AE  30FF               	movlw	255
 15664     12AF  05E4               	andwf	___fltol@f1^(0+128),f
 15665     12B0  30FF               	movlw	255
 15666     12B1  05E5               	andwf	(___fltol@f1+1)^(0+128),f
 15667     12B2  30FF               	movlw	255
 15668     12B3  05E6               	andwf	(___fltol@f1+2)^(0+128),f
 15669     12B4  3000               	movlw	0
 15670     12B5  05E7               	andwf	(___fltol@f1+3)^(0+128),f
 15671     12B6                     l4588:
 15672     12B6  3096               	movlw	150
 15673     12B7  02ED               	subwf	___fltol@exp1^(0+128),f
 15674     12B8                     l4590:
 15675     12B8  1FED               	btfss	___fltol@exp1^(0+128),7
 15676     12B9  2ABB               	goto	u4701
 15677     12BA  2ABC               	goto	u4700
 15678     12BB                     u4701:
 15679     12BB  2AD2               	goto	l4600
 15680     12BC                     u4700:
 15681     12BC                     l4592:
 15682     12BC  086D               	movf	___fltol@exp1^(0+128),w
 15683     12BD  3A80               	xorlw	128
 15684     12BE  3E97               	addlw	151
 15685     12BF  1803               	skipnc
 15686     12C0  2AC2               	goto	u4711
 15687     12C1  2AC3               	goto	u4710
 15688     12C2                     u4711:
 15689     12C2  2AC4               	goto	l4598
 15690     12C3                     u4710:
 15691     12C3  2A93               	goto	l4578
 15692     12C4                     l4598:
 15693     12C4  3001               	movlw	1
 15694     12C5                     u4725:
 15695     12C5  36E7               	lsrf	(___fltol@f1+3)^(0+128),f
 15696     12C6  0CE6               	rrf	(___fltol@f1+2)^(0+128),f
 15697     12C7  0CE5               	rrf	(___fltol@f1+1)^(0+128),f
 15698     12C8  0CE4               	rrf	___fltol@f1^(0+128),f
 15699     12C9  0B89               	decfsz	9,f
 15700     12CA  2AC5               	goto	u4725
 15701     12CB  3001               	movlw	1
 15702     12CC  07ED               	addwf	___fltol@exp1^(0+128),f
 15703     12CD  1D03               	btfss	3,2
 15704     12CE  2AD0               	goto	u4731
 15705     12CF  2AD1               	goto	u4730
 15706     12D0                     u4731:
 15707     12D0  2AC4               	goto	l4598
 15708     12D1                     u4730:
 15709     12D1  2AE7               	goto	l4608
 15710     12D2                     l4600:
 15711     12D2  3020               	movlw	32
 15712     12D3  026D               	subwf	___fltol@exp1^(0+128),w
 15713     12D4  1C03               	skipc
 15714     12D5  2AD7               	goto	u4741
 15715     12D6  2AD8               	goto	u4740
 15716     12D7                     u4741:
 15717     12D7  2AE2               	goto	l1408
 15718     12D8                     u4740:
 15719     12D8  2A93               	goto	l4578
 15720     12D9                     l4606:
 15721     12D9  3001               	movlw	1
 15722     12DA                     u4755:
 15723     12DA  35E4               	lslf	___fltol@f1^(0+128),f
 15724     12DB  0DE5               	rlf	(___fltol@f1+1)^(0+128),f
 15725     12DC  0DE6               	rlf	(___fltol@f1+2)^(0+128),f
 15726     12DD  0DE7               	rlf	(___fltol@f1+3)^(0+128),f
 15727     12DE  0B89               	decfsz	9,f
 15728     12DF  2ADA               	goto	u4755
 15729     12E0  3001               	movlw	1
 15730     12E1  02ED               	subwf	___fltol@exp1^(0+128),f
 15731     12E2                     l1408:
 15732     12E2  086D               	movf	___fltol@exp1^(0+128),w
 15733     12E3  1D03               	btfss	3,2
 15734     12E4  2AE6               	goto	u4761
 15735     12E5  2AE7               	goto	u4760
 15736     12E6                     u4761:
 15737     12E6  2AD9               	goto	l4606
 15738     12E7                     u4760:
 15739     12E7                     l4608:
 15740     12E7  086C               	movf	___fltol@sign1^(0+128),w
 15741     12E8  1903               	btfsc	3,2
 15742     12E9  2AEB               	goto	u4771
 15743     12EA  2AEC               	goto	u4770
 15744     12EB                     u4771:
 15745     12EB  2AF7               	goto	l1411
 15746     12EC                     u4770:
 15747     12EC                     l4610:
 15748     12EC  09E4               	comf	___fltol@f1^(0+128),f
 15749     12ED  09E5               	comf	(___fltol@f1+1)^(0+128),f
 15750     12EE  09E6               	comf	(___fltol@f1+2)^(0+128),f
 15751     12EF  09E7               	comf	(___fltol@f1+3)^(0+128),f
 15752     12F0  0AE4               	incf	___fltol@f1^(0+128),f
 15753     12F1  1903               	skipnz
 15754     12F2  0AE5               	incf	(___fltol@f1+1)^(0+128),f
 15755     12F3  1903               	skipnz
 15756     12F4  0AE6               	incf	(___fltol@f1+2)^(0+128),f
 15757     12F5  1903               	skipnz
 15758     12F6  0AE7               	incf	(___fltol@f1+3)^(0+128),f
 15759     12F7                     l1411:
 15760     12F7                     l1401:
 15761     12F7  0008               	return
 15762     12F8                     __end_of___fltol:
 15763                           
 15764                           	psect	text56
 15765     008A                     __ptext56:	
 15766 ;; *************** function ___flmul *****************
 15767 ;; Defined at:
 15768 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\sprcmul.c"
 15769 ;; Parameters:    Size  Location     Type
 15770 ;;  b               4   42[BANK1 ] long 
 15771 ;;  a               4   46[BANK1 ] long 
 15772 ;; Auto vars:     Size  Location     Type
 15773 ;;  prod            4   62[BANK1 ] struct .
 15774 ;;  grs             4   56[BANK1 ] unsigned long 
 15775 ;;  temp            2   66[BANK1 ] struct .
 15776 ;;  bexp            1   61[BANK1 ] unsigned char 
 15777 ;;  aexp            1   60[BANK1 ] unsigned char 
 15778 ;;  sign            1   55[BANK1 ] unsigned char 
 15779 ;; Return value:  Size  Location     Type
 15780 ;;                  4   42[BANK1 ] unsigned char 
 15781 ;; Registers used:
 15782 ;;		wreg, status,2, status,0, pclath, cstack
 15783 ;; Tracked objects:
 15784 ;;		On entry : 0/0
 15785 ;;		On exit  : 0/0
 15786 ;;		Unchanged: 0/0
 15787 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 15788 ;;      Params:         0       0       8       0       0       0       0       0       0       0       0       0       
      +0       0
 15789 ;;      Locals:         0       0      13       0       0       0       0       0       0       0       0       0       
      +0       0
 15790 ;;      Temps:          0       0       5       0       0       0       0       0       0       0       0       0       
      +0       0
 15791 ;;      Totals:         0       0      26       0       0       0       0       0       0       0       0       0       
      +0       0
 15792 ;;Total ram usage:       26 bytes
 15793 ;; Hardware stack levels used: 1
 15794 ;; Hardware stack levels required when called: 6
 15795 ;; This function calls:
 15796 ;;		__Umul8_16
 15797 ;; This function is called by:
 15798 ;;		_printFloat
 15799 ;;		_str2float
 15800 ;;		_getLedNumber
 15801 ;; This function uses a non-reentrant model
 15802 ;;
 15803                           
 15804     008A                     ___flmul:	
 15805                           ;psect for function ___flmul
 15806                           
 15807     008A                     l4808:	
 15808                           ;incstack = 0
 15809                           ; Regs used in ___flmul: [wreg+status,2+status,0+pclath+cstack]
 15810                           
 15811     008A  0021               	movlb	1	; select bank1
 15812     008B  084D               	movf	(___flmul@b^(0+128)+3),w
 15813     008C  3980               	andlw	128
 15814     008D  00D7               	movwf	___flmul@sign^(0+128)
 15815     008E                     l4810:
 15816     008E  354D               	lslf	(___flmul@b^(0+128)+3),w
 15817     008F  00DD               	movwf	___flmul@bexp^(0+128)
 15818     0090                     l4812:
 15819     0090  1FCC               	btfss	(___flmul@b^(0+128)+2),7
 15820     0091  2893               	goto	u5241
 15821     0092  2894               	goto	u5240
 15822     0093                     u5241:
 15823     0093  2895               	goto	l4816
 15824     0094                     u5240:
 15825     0094                     l4814:
 15826     0094  145D               	bsf	___flmul@bexp^(0+128),0
 15827     0095                     l4816:
 15828     0095  085D               	movf	___flmul@bexp^(0+128),w
 15829     0096  1903               	btfsc	3,2
 15830     0097  2899               	goto	u5251
 15831     0098  289A               	goto	u5250
 15832     0099                     u5251:
 15833     0099  28A9               	goto	l4824
 15834     009A                     u5250:
 15835     009A                     l4818:
 15836     009A  0A5D               	incf	___flmul@bexp^(0+128),w
 15837     009B  1D03               	btfss	3,2
 15838     009C  289E               	goto	u5261
 15839     009D  289F               	goto	u5260
 15840     009E                     u5261:
 15841     009E  28A7               	goto	l4822
 15842     009F                     u5260:
 15843     009F                     l4820:
 15844     009F  3000               	movlw	0
 15845     00A0  00CD               	movwf	(___flmul@b+3)^(0+128)
 15846     00A1  3000               	movlw	0
 15847     00A2  00CC               	movwf	(___flmul@b+2)^(0+128)
 15848     00A3  3000               	movlw	0
 15849     00A4  00CB               	movwf	(___flmul@b+1)^(0+128)
 15850     00A5  3000               	movlw	0
 15851     00A6  00CA               	movwf	___flmul@b^(0+128)
 15852     00A7                     l4822:
 15853     00A7  17CC               	bsf	(___flmul@b^(0+128)+2),7
 15854     00A8  28B1               	goto	l4826
 15855     00A9                     l4824:
 15856     00A9  3000               	movlw	0
 15857     00AA  00CD               	movwf	(___flmul@b+3)^(0+128)
 15858     00AB  3000               	movlw	0
 15859     00AC  00CC               	movwf	(___flmul@b+2)^(0+128)
 15860     00AD  3000               	movlw	0
 15861     00AE  00CB               	movwf	(___flmul@b+1)^(0+128)
 15862     00AF  3000               	movlw	0
 15863     00B0  00CA               	movwf	___flmul@b^(0+128)
 15864     00B1                     l4826:
 15865     00B1  0851               	movf	(___flmul@a^(0+128)+3),w
 15866     00B2  3980               	andlw	128
 15867     00B3  06D7               	xorwf	___flmul@sign^(0+128),f
 15868     00B4                     l4828:
 15869     00B4  3551               	lslf	(___flmul@a^(0+128)+3),w
 15870     00B5  00DC               	movwf	___flmul@aexp^(0+128)
 15871     00B6                     l4830:
 15872     00B6  1FD0               	btfss	(___flmul@a^(0+128)+2),7
 15873     00B7  28B9               	goto	u5271
 15874     00B8  28BA               	goto	u5270
 15875     00B9                     u5271:
 15876     00B9  28BB               	goto	l4834
 15877     00BA                     u5270:
 15878     00BA                     l4832:
 15879     00BA  145C               	bsf	___flmul@aexp^(0+128),0
 15880     00BB                     l4834:
 15881     00BB  085C               	movf	___flmul@aexp^(0+128),w
 15882     00BC  1903               	btfsc	3,2
 15883     00BD  28BF               	goto	u5281
 15884     00BE  28C0               	goto	u5280
 15885     00BF                     u5281:
 15886     00BF  28CF               	goto	l4842
 15887     00C0                     u5280:
 15888     00C0                     l4836:
 15889     00C0  0A5C               	incf	___flmul@aexp^(0+128),w
 15890     00C1  1D03               	btfss	3,2
 15891     00C2  28C4               	goto	u5291
 15892     00C3  28C5               	goto	u5290
 15893     00C4                     u5291:
 15894     00C4  28CD               	goto	l4840
 15895     00C5                     u5290:
 15896     00C5                     l4838:
 15897     00C5  3000               	movlw	0
 15898     00C6  00D1               	movwf	(___flmul@a+3)^(0+128)
 15899     00C7  3000               	movlw	0
 15900     00C8  00D0               	movwf	(___flmul@a+2)^(0+128)
 15901     00C9  3000               	movlw	0
 15902     00CA  00CF               	movwf	(___flmul@a+1)^(0+128)
 15903     00CB  3000               	movlw	0
 15904     00CC  00CE               	movwf	___flmul@a^(0+128)
 15905     00CD                     l4840:
 15906     00CD  17D0               	bsf	(___flmul@a^(0+128)+2),7
 15907     00CE  28D7               	goto	l4844
 15908     00CF                     l4842:
 15909     00CF  3000               	movlw	0
 15910     00D0  00D1               	movwf	(___flmul@a+3)^(0+128)
 15911     00D1  3000               	movlw	0
 15912     00D2  00D0               	movwf	(___flmul@a+2)^(0+128)
 15913     00D3  3000               	movlw	0
 15914     00D4  00CF               	movwf	(___flmul@a+1)^(0+128)
 15915     00D5  3000               	movlw	0
 15916     00D6  00CE               	movwf	___flmul@a^(0+128)
 15917     00D7                     l4844:
 15918     00D7  085C               	movf	___flmul@aexp^(0+128),w
 15919     00D8  1903               	btfsc	3,2
 15920     00D9  28DB               	goto	u5301
 15921     00DA  28DC               	goto	u5300
 15922     00DB                     u5301:
 15923     00DB  28E1               	goto	l4848
 15924     00DC                     u5300:
 15925     00DC                     l4846:
 15926     00DC  085D               	movf	___flmul@bexp^(0+128),w
 15927     00DD  1D03               	btfss	3,2
 15928     00DE  28E0               	goto	u5311
 15929     00DF  28E1               	goto	u5310
 15930     00E0                     u5311:
 15931     00E0  28EA               	goto	l4852
 15932     00E1                     u5310:
 15933     00E1                     l4848:
 15934     00E1  3000               	movlw	0
 15935     00E2  00CD               	movwf	(?___flmul+3)^(0+128)
 15936     00E3  3000               	movlw	0
 15937     00E4  00CC               	movwf	(?___flmul+2)^(0+128)
 15938     00E5  3000               	movlw	0
 15939     00E6  00CB               	movwf	(?___flmul+1)^(0+128)
 15940     00E7  3000               	movlw	0
 15941     00E8  00CA               	movwf	?___flmul^(0+128)
 15942     00E9  2AC4               	goto	l1604
 15943     00EA                     l4852:
 15944     00EA  084A               	movf	___flmul@b^(0+128),w
 15945     00EB  00A0               	movwf	__Umul8_16@multiplicand^(0+128)
 15946     00EC  0850               	movf	(___flmul@a^(0+128)+2),w
 15947     00ED  319D  25A1  3180   	fcall	__Umul8_16
 15948     00F0  0021               	movlb	1	; select bank1
 15949     00F1  0821               	movf	(?__Umul8_16+1)^(0+128),w
 15950     00F2  00E3               	movwf	(___flmul@temp+1)^(0+128)
 15951     00F3  0820               	movf	?__Umul8_16^(0+128),w
 15952     00F4  00E2               	movwf	___flmul@temp^(0+128)
 15953     00F5                     l4854:
 15954     00F5  0862               	movf	___flmul@temp^(0+128),w
 15955     00F6  00D2               	movwf	??___flmul^(0+128)
 15956     00F7  01D3               	clrf	(??___flmul^(0+128)+1)
 15957     00F8  01D4               	clrf	(??___flmul^(0+128)+2)
 15958     00F9  01D5               	clrf	(??___flmul^(0+128)+3)
 15959     00FA  0855               	movf	(??___flmul+3)^(0+128),w
 15960     00FB  00DB               	movwf	(___flmul@grs+3)^(0+128)
 15961     00FC  0854               	movf	(??___flmul+2)^(0+128),w
 15962     00FD  00DA               	movwf	(___flmul@grs+2)^(0+128)
 15963     00FE  0853               	movf	(??___flmul+1)^(0+128),w
 15964     00FF  00D9               	movwf	(___flmul@grs+1)^(0+128)
 15965     0100  0852               	movf	??___flmul^(0+128),w
 15966     0101  00D8               	movwf	___flmul@grs^(0+128)
 15967     0102                     l4856:
 15968     0102  0863               	movf	(___flmul@temp^(0+128)+1),w
 15969     0103  00D2               	movwf	??___flmul^(0+128)
 15970     0104  01D3               	clrf	(??___flmul^(0+128)+1)
 15971     0105  01D4               	clrf	(??___flmul^(0+128)+2)
 15972     0106  01D5               	clrf	(??___flmul^(0+128)+3)
 15973     0107  0855               	movf	(??___flmul+3)^(0+128),w
 15974     0108  00E1               	movwf	(___flmul@prod+3)^(0+128)
 15975     0109  0854               	movf	(??___flmul+2)^(0+128),w
 15976     010A  00E0               	movwf	(___flmul@prod+2)^(0+128)
 15977     010B  0853               	movf	(??___flmul+1)^(0+128),w
 15978     010C  00DF               	movwf	(___flmul@prod+1)^(0+128)
 15979     010D  0852               	movf	??___flmul^(0+128),w
 15980     010E  00DE               	movwf	___flmul@prod^(0+128)
 15981     010F  084B               	movf	(___flmul@b^(0+128)+1),w
 15982     0110  00A0               	movwf	__Umul8_16@multiplicand^(0+128)
 15983     0111  084F               	movf	(___flmul@a^(0+128)+1),w
 15984     0112  319D  25A1  3180   	fcall	__Umul8_16
 15985     0115  0021               	movlb	1	; select bank1
 15986     0116  0821               	movf	(?__Umul8_16+1)^(0+128),w
 15987     0117  00E3               	movwf	(___flmul@temp+1)^(0+128)
 15988     0118  0820               	movf	?__Umul8_16^(0+128),w
 15989     0119  00E2               	movwf	___flmul@temp^(0+128)
 15990     011A                     l4858:
 15991     011A  0862               	movf	___flmul@temp^(0+128),w
 15992     011B  00D2               	movwf	??___flmul^(0+128)
 15993     011C  01D3               	clrf	(??___flmul^(0+128)+1)
 15994     011D  01D4               	clrf	(??___flmul^(0+128)+2)
 15995     011E  01D5               	clrf	(??___flmul^(0+128)+3)
 15996     011F  0852               	movf	??___flmul^(0+128),w
 15997     0120  07D8               	addwf	___flmul@grs^(0+128),f
 15998     0121  0853               	movf	(??___flmul+1)^(0+128),w
 15999     0122  3DD9               	addwfc	(___flmul@grs+1)^(0+128),f
 16000     0123  0854               	movf	(??___flmul+2)^(0+128),w
 16001     0124  3DDA               	addwfc	(___flmul@grs+2)^(0+128),f
 16002     0125  0855               	movf	(??___flmul+3)^(0+128),w
 16003     0126  3DDB               	addwfc	(___flmul@grs+3)^(0+128),f
 16004     0127                     l4860:
 16005     0127  0863               	movf	(___flmul@temp^(0+128)+1),w
 16006     0128  00D2               	movwf	??___flmul^(0+128)
 16007     0129  01D3               	clrf	(??___flmul^(0+128)+1)
 16008     012A  01D4               	clrf	(??___flmul^(0+128)+2)
 16009     012B  01D5               	clrf	(??___flmul^(0+128)+3)
 16010     012C  0852               	movf	??___flmul^(0+128),w
 16011     012D  07DE               	addwf	___flmul@prod^(0+128),f
 16012     012E  0853               	movf	(??___flmul+1)^(0+128),w
 16013     012F  3DDF               	addwfc	(___flmul@prod+1)^(0+128),f
 16014     0130  0854               	movf	(??___flmul+2)^(0+128),w
 16015     0131  3DE0               	addwfc	(___flmul@prod+2)^(0+128),f
 16016     0132  0855               	movf	(??___flmul+3)^(0+128),w
 16017     0133  3DE1               	addwfc	(___flmul@prod+3)^(0+128),f
 16018     0134  084C               	movf	(___flmul@b^(0+128)+2),w
 16019     0135  00A0               	movwf	__Umul8_16@multiplicand^(0+128)
 16020     0136  084E               	movf	___flmul@a^(0+128),w
 16021     0137  319D  25A1  3180   	fcall	__Umul8_16
 16022     013A  0021               	movlb	1	; select bank1
 16023     013B  0821               	movf	(?__Umul8_16+1)^(0+128),w
 16024     013C  00E3               	movwf	(___flmul@temp+1)^(0+128)
 16025     013D  0820               	movf	?__Umul8_16^(0+128),w
 16026     013E  00E2               	movwf	___flmul@temp^(0+128)
 16027     013F                     l4862:
 16028     013F  0862               	movf	___flmul@temp^(0+128),w
 16029     0140  00D2               	movwf	??___flmul^(0+128)
 16030     0141  01D3               	clrf	(??___flmul^(0+128)+1)
 16031     0142  01D4               	clrf	(??___flmul^(0+128)+2)
 16032     0143  01D5               	clrf	(??___flmul^(0+128)+3)
 16033     0144  0852               	movf	??___flmul^(0+128),w
 16034     0145  07D8               	addwf	___flmul@grs^(0+128),f
 16035     0146  0853               	movf	(??___flmul+1)^(0+128),w
 16036     0147  3DD9               	addwfc	(___flmul@grs+1)^(0+128),f
 16037     0148  0854               	movf	(??___flmul+2)^(0+128),w
 16038     0149  3DDA               	addwfc	(___flmul@grs+2)^(0+128),f
 16039     014A  0855               	movf	(??___flmul+3)^(0+128),w
 16040     014B  3DDB               	addwfc	(___flmul@grs+3)^(0+128),f
 16041     014C                     l4864:
 16042     014C  0863               	movf	(___flmul@temp^(0+128)+1),w
 16043     014D  00D2               	movwf	??___flmul^(0+128)
 16044     014E  01D3               	clrf	(??___flmul^(0+128)+1)
 16045     014F  01D4               	clrf	(??___flmul^(0+128)+2)
 16046     0150  01D5               	clrf	(??___flmul^(0+128)+3)
 16047     0151  0852               	movf	??___flmul^(0+128),w
 16048     0152  07DE               	addwf	___flmul@prod^(0+128),f
 16049     0153  0853               	movf	(??___flmul+1)^(0+128),w
 16050     0154  3DDF               	addwfc	(___flmul@prod+1)^(0+128),f
 16051     0155  0854               	movf	(??___flmul+2)^(0+128),w
 16052     0156  3DE0               	addwfc	(___flmul@prod+2)^(0+128),f
 16053     0157  0855               	movf	(??___flmul+3)^(0+128),w
 16054     0158  3DE1               	addwfc	(___flmul@prod+3)^(0+128),f
 16055     0159                     l4866:
 16056     0159  3008               	movlw	8
 16057     015A                     u5325:
 16058     015A  35D8               	lslf	___flmul@grs^(0+128),f
 16059     015B  0DD9               	rlf	(___flmul@grs+1)^(0+128),f
 16060     015C  0DDA               	rlf	(___flmul@grs+2)^(0+128),f
 16061     015D  0DDB               	rlf	(___flmul@grs+3)^(0+128),f
 16062     015E  0B89               	decfsz	9,f
 16063     015F  295A               	goto	u5325
 16064     0160                     l4868:
 16065     0160  084B               	movf	(___flmul@b^(0+128)+1),w
 16066     0161  00A0               	movwf	__Umul8_16@multiplicand^(0+128)
 16067     0162  084E               	movf	___flmul@a^(0+128),w
 16068     0163  319D  25A1  3180   	fcall	__Umul8_16
 16069     0166  0021               	movlb	1	; select bank1
 16070     0167  0821               	movf	(?__Umul8_16+1)^(0+128),w
 16071     0168  00E3               	movwf	(___flmul@temp+1)^(0+128)
 16072     0169  0820               	movf	?__Umul8_16^(0+128),w
 16073     016A  00E2               	movwf	___flmul@temp^(0+128)
 16074     016B                     l4870:
 16075     016B  0862               	movf	___flmul@temp^(0+128),w
 16076     016C  07D8               	addwf	___flmul@grs^(0+128),f
 16077     016D  0863               	movf	(___flmul@temp+1)^(0+128),w
 16078     016E  3DD9               	addwfc	(___flmul@grs+1)^(0+128),f
 16079     016F  3000               	movlw	0
 16080     0170  3DDA               	addwfc	(___flmul@grs+2)^(0+128),f
 16081     0171  3DDB               	addwfc	(___flmul@grs+3)^(0+128),f
 16082     0172                     l4872:
 16083     0172  084A               	movf	___flmul@b^(0+128),w
 16084     0173  00A0               	movwf	__Umul8_16@multiplicand^(0+128)
 16085     0174  084F               	movf	(___flmul@a^(0+128)+1),w
 16086     0175  319D  25A1  3180   	fcall	__Umul8_16
 16087     0178  0021               	movlb	1	; select bank1
 16088     0179  0821               	movf	(?__Umul8_16+1)^(0+128),w
 16089     017A  00E3               	movwf	(___flmul@temp+1)^(0+128)
 16090     017B  0820               	movf	?__Umul8_16^(0+128),w
 16091     017C  00E2               	movwf	___flmul@temp^(0+128)
 16092     017D                     l4874:
 16093     017D  0862               	movf	___flmul@temp^(0+128),w
 16094     017E  07D8               	addwf	___flmul@grs^(0+128),f
 16095     017F  0863               	movf	(___flmul@temp+1)^(0+128),w
 16096     0180  3DD9               	addwfc	(___flmul@grs+1)^(0+128),f
 16097     0181  3000               	movlw	0
 16098     0182  3DDA               	addwfc	(___flmul@grs+2)^(0+128),f
 16099     0183  3DDB               	addwfc	(___flmul@grs+3)^(0+128),f
 16100     0184                     l4876:
 16101     0184  3008               	movlw	8
 16102     0185                     u5335:
 16103     0185  35D8               	lslf	___flmul@grs^(0+128),f
 16104     0186  0DD9               	rlf	(___flmul@grs+1)^(0+128),f
 16105     0187  0DDA               	rlf	(___flmul@grs+2)^(0+128),f
 16106     0188  0DDB               	rlf	(___flmul@grs+3)^(0+128),f
 16107     0189  0B89               	decfsz	9,f
 16108     018A  2985               	goto	u5335
 16109     018B  084A               	movf	___flmul@b^(0+128),w
 16110     018C  00A0               	movwf	__Umul8_16@multiplicand^(0+128)
 16111     018D  084E               	movf	___flmul@a^(0+128),w
 16112     018E  319D  25A1  3180   	fcall	__Umul8_16
 16113     0191  0021               	movlb	1	; select bank1
 16114     0192  0821               	movf	(?__Umul8_16+1)^(0+128),w
 16115     0193  00E3               	movwf	(___flmul@temp+1)^(0+128)
 16116     0194  0820               	movf	?__Umul8_16^(0+128),w
 16117     0195  00E2               	movwf	___flmul@temp^(0+128)
 16118     0196                     l4878:
 16119     0196  0862               	movf	___flmul@temp^(0+128),w
 16120     0197  07D8               	addwf	___flmul@grs^(0+128),f
 16121     0198  0863               	movf	(___flmul@temp+1)^(0+128),w
 16122     0199  3DD9               	addwfc	(___flmul@grs+1)^(0+128),f
 16123     019A  3000               	movlw	0
 16124     019B  3DDA               	addwfc	(___flmul@grs+2)^(0+128),f
 16125     019C  3DDB               	addwfc	(___flmul@grs+3)^(0+128),f
 16126     019D                     l4880:
 16127     019D  084B               	movf	(___flmul@b^(0+128)+1),w
 16128     019E  00A0               	movwf	__Umul8_16@multiplicand^(0+128)
 16129     019F  0850               	movf	(___flmul@a^(0+128)+2),w
 16130     01A0  319D  25A1  3180   	fcall	__Umul8_16
 16131     01A3  0021               	movlb	1	; select bank1
 16132     01A4  0821               	movf	(?__Umul8_16+1)^(0+128),w
 16133     01A5  00E3               	movwf	(___flmul@temp+1)^(0+128)
 16134     01A6  0820               	movf	?__Umul8_16^(0+128),w
 16135     01A7  00E2               	movwf	___flmul@temp^(0+128)
 16136     01A8  0862               	movf	___flmul@temp^(0+128),w
 16137     01A9  07DE               	addwf	___flmul@prod^(0+128),f
 16138     01AA  0863               	movf	(___flmul@temp+1)^(0+128),w
 16139     01AB  3DDF               	addwfc	(___flmul@prod+1)^(0+128),f
 16140     01AC  3000               	movlw	0
 16141     01AD  3DE0               	addwfc	(___flmul@prod+2)^(0+128),f
 16142     01AE  3DE1               	addwfc	(___flmul@prod+3)^(0+128),f
 16143     01AF                     l4882:
 16144     01AF  084C               	movf	(___flmul@b^(0+128)+2),w
 16145     01B0  00A0               	movwf	__Umul8_16@multiplicand^(0+128)
 16146     01B1  084F               	movf	(___flmul@a^(0+128)+1),w
 16147     01B2  319D  25A1  3180   	fcall	__Umul8_16
 16148     01B5  0021               	movlb	1	; select bank1
 16149     01B6  0821               	movf	(?__Umul8_16+1)^(0+128),w
 16150     01B7  00E3               	movwf	(___flmul@temp+1)^(0+128)
 16151     01B8  0820               	movf	?__Umul8_16^(0+128),w
 16152     01B9  00E2               	movwf	___flmul@temp^(0+128)
 16153     01BA                     l4884:
 16154     01BA  0862               	movf	___flmul@temp^(0+128),w
 16155     01BB  07DE               	addwf	___flmul@prod^(0+128),f
 16156     01BC  0863               	movf	(___flmul@temp+1)^(0+128),w
 16157     01BD  3DDF               	addwfc	(___flmul@prod+1)^(0+128),f
 16158     01BE  3000               	movlw	0
 16159     01BF  3DE0               	addwfc	(___flmul@prod+2)^(0+128),f
 16160     01C0  3DE1               	addwfc	(___flmul@prod+3)^(0+128),f
 16161     01C1  084C               	movf	(___flmul@b^(0+128)+2),w
 16162     01C2  00A0               	movwf	__Umul8_16@multiplicand^(0+128)
 16163     01C3  0850               	movf	(___flmul@a^(0+128)+2),w
 16164     01C4  319D  25A1  3180   	fcall	__Umul8_16
 16165     01C7  0021               	movlb	1	; select bank1
 16166     01C8  0821               	movf	(?__Umul8_16+1)^(0+128),w
 16167     01C9  00E3               	movwf	(___flmul@temp+1)^(0+128)
 16168     01CA  0820               	movf	?__Umul8_16^(0+128),w
 16169     01CB  00E2               	movwf	___flmul@temp^(0+128)
 16170     01CC                     l4886:
 16171     01CC  0862               	movf	___flmul@temp^(0+128),w
 16172     01CD  00D2               	movwf	??___flmul^(0+128)
 16173     01CE  0863               	movf	(___flmul@temp+1)^(0+128),w
 16174     01CF  00D3               	movwf	(??___flmul^(0+128)+1)
 16175     01D0  01D4               	clrf	(??___flmul^(0+128)+2)
 16176     01D1  01D5               	clrf	(??___flmul^(0+128)+3)
 16177     01D2  3008               	movlw	8
 16178     01D3                     u5345:
 16179     01D3  35D2               	lslf	??___flmul^(0+128),f
 16180     01D4  0DD3               	rlf	(??___flmul^(0+128)+1),f
 16181     01D5  0DD4               	rlf	(??___flmul^(0+128)+2),f
 16182     01D6  0DD5               	rlf	(??___flmul^(0+128)+3),f
 16183     01D7                     u5340:
 16184     01D7  0B89               	decfsz	9,f
 16185     01D8  29D3               	goto	u5345
 16186     01D9  0852               	movf	??___flmul^(0+128),w
 16187     01DA  07DE               	addwf	___flmul@prod^(0+128),f
 16188     01DB  0853               	movf	(??___flmul+1)^(0+128),w
 16189     01DC  3DDF               	addwfc	(___flmul@prod+1)^(0+128),f
 16190     01DD  0854               	movf	(??___flmul+2)^(0+128),w
 16191     01DE  3DE0               	addwfc	(___flmul@prod+2)^(0+128),f
 16192     01DF  0855               	movf	(??___flmul+3)^(0+128),w
 16193     01E0  3DE1               	addwfc	(___flmul@prod+3)^(0+128),f
 16194     01E1                     l4888:
 16195     01E1  0858               	movf	___flmul@grs^(0+128),w
 16196     01E2  00D2               	movwf	??___flmul^(0+128)
 16197     01E3  0859               	movf	(___flmul@grs+1)^(0+128),w
 16198     01E4  00D3               	movwf	(??___flmul^(0+128)+1)
 16199     01E5  085A               	movf	(___flmul@grs+2)^(0+128),w
 16200     01E6  00D4               	movwf	(??___flmul^(0+128)+2)
 16201     01E7  085B               	movf	(___flmul@grs+3)^(0+128),w
 16202     01E8  00D5               	movwf	(??___flmul^(0+128)+3)
 16203     01E9  3018               	movlw	24
 16204     01EA                     u5355:
 16205     01EA  36D5               	lsrf	(??___flmul^(0+128)+3),f
 16206     01EB  0CD4               	rrf	(??___flmul^(0+128)+2),f
 16207     01EC  0CD3               	rrf	(??___flmul^(0+128)+1),f
 16208     01ED  0CD2               	rrf	??___flmul^(0+128),f
 16209     01EE                     u5350:
 16210     01EE  0B89               	decfsz	9,f
 16211     01EF  29EA               	goto	u5355
 16212     01F0  0852               	movf	??___flmul^(0+128),w
 16213     01F1  07DE               	addwf	___flmul@prod^(0+128),f
 16214     01F2  0853               	movf	(??___flmul+1)^(0+128),w
 16215     01F3  3DDF               	addwfc	(___flmul@prod+1)^(0+128),f
 16216     01F4  0854               	movf	(??___flmul+2)^(0+128),w
 16217     01F5  3DE0               	addwfc	(___flmul@prod+2)^(0+128),f
 16218     01F6  0855               	movf	(??___flmul+3)^(0+128),w
 16219     01F7  3DE1               	addwfc	(___flmul@prod+3)^(0+128),f
 16220     01F8                     l4890:
 16221     01F8  3008               	movlw	8
 16222     01F9                     u5365:
 16223     01F9  35D8               	lslf	___flmul@grs^(0+128),f
 16224     01FA  0DD9               	rlf	(___flmul@grs+1)^(0+128),f
 16225     01FB  0DDA               	rlf	(___flmul@grs+2)^(0+128),f
 16226     01FC  0DDB               	rlf	(___flmul@grs+3)^(0+128),f
 16227     01FD  0B89               	decfsz	9,f
 16228     01FE  29F9               	goto	u5365
 16229     01FF                     l4892:
 16230     01FF  085D               	movf	___flmul@bexp^(0+128),w
 16231     0200  075C               	addwf	___flmul@aexp^(0+128),w
 16232     0201  00D2               	movwf	??___flmul^(0+128)
 16233     0202  01D3               	clrf	(??___flmul^(0+128)+1)
 16234     0203  0DD3               	rlf	(??___flmul+1)^(0+128),f
 16235     0204  0852               	movf	??___flmul^(0+128),w
 16236     0205  3E82               	addlw	130
 16237     0206  00E2               	movwf	___flmul@temp^(0+128)
 16238     0207  30FF               	movlw	255
 16239     0208  3D53               	addwfc	(??___flmul+1)^(0+128),w
 16240     0209  00E3               	movwf	(___flmul@temp+1)^(0+128)
 16241     020A  2A22               	goto	l4904
 16242     020B                     l4894:
 16243     020B  3001               	movlw	1
 16244     020C                     u5375:
 16245     020C  35DE               	lslf	___flmul@prod^(0+128),f
 16246     020D  0DDF               	rlf	(___flmul@prod+1)^(0+128),f
 16247     020E  0DE0               	rlf	(___flmul@prod+2)^(0+128),f
 16248     020F  0DE1               	rlf	(___flmul@prod+3)^(0+128),f
 16249     0210  0B89               	decfsz	9,f
 16250     0211  2A0C               	goto	u5375
 16251     0212                     l4896:
 16252     0212  1FDB               	btfss	(___flmul@grs+3)^(0+128),7
 16253     0213  2A15               	goto	u5381
 16254     0214  2A16               	goto	u5380
 16255     0215                     u5381:
 16256     0215  2A17               	goto	l4900
 16257     0216                     u5380:
 16258     0216                     l4898:
 16259     0216  145E               	bsf	___flmul@prod^(0+128),0
 16260     0217                     l4900:
 16261     0217  3001               	movlw	1
 16262     0218                     u5395:
 16263     0218  35D8               	lslf	___flmul@grs^(0+128),f
 16264     0219  0DD9               	rlf	(___flmul@grs+1)^(0+128),f
 16265     021A  0DDA               	rlf	(___flmul@grs+2)^(0+128),f
 16266     021B  0DDB               	rlf	(___flmul@grs+3)^(0+128),f
 16267     021C  0B89               	decfsz	9,f
 16268     021D  2A18               	goto	u5395
 16269     021E                     l4902:
 16270     021E  30FF               	movlw	255
 16271     021F  07E2               	addwf	___flmul@temp^(0+128),f
 16272     0220  30FF               	movlw	255
 16273     0221  3DE3               	addwfc	(___flmul@temp+1)^(0+128),f
 16274     0222                     l4904:
 16275     0222  1FE0               	btfss	(___flmul@prod+2)^(0+128),7
 16276     0223  2A25               	goto	u5401
 16277     0224  2A26               	goto	u5400
 16278     0225                     u5401:
 16279     0225  2A0B               	goto	l4894
 16280     0226                     u5400:
 16281     0226                     l4906:
 16282     0226  01DC               	clrf	___flmul@aexp^(0+128)
 16283     0227                     l4908:
 16284     0227  1FDB               	btfss	(___flmul@grs+3)^(0+128),7
 16285     0228  2A2A               	goto	u5411
 16286     0229  2A2B               	goto	u5410
 16287     022A                     u5411:
 16288     022A  2A47               	goto	l4916
 16289     022B                     u5410:
 16290     022B                     l4910:
 16291     022B  30FF               	movlw	255
 16292     022C  0558               	andwf	___flmul@grs^(0+128),w
 16293     022D  00D2               	movwf	??___flmul^(0+128)
 16294     022E  30FF               	movlw	255
 16295     022F  0559               	andwf	(___flmul@grs+1)^(0+128),w
 16296     0230  00D3               	movwf	(??___flmul^(0+128)+1)
 16297     0231  30FF               	movlw	255
 16298     0232  055A               	andwf	(___flmul@grs+2)^(0+128),w
 16299     0233  00D4               	movwf	(??___flmul^(0+128)+2)
 16300     0234  307F               	movlw	127
 16301     0235  055B               	andwf	(___flmul@grs+3)^(0+128),w
 16302     0236  00D5               	movwf	(??___flmul^(0+128)+3)
 16303     0237  0855               	movf	(??___flmul+3)^(0+128),w
 16304     0238  0454               	iorwf	(??___flmul+2)^(0+128),w
 16305     0239  0453               	iorwf	(??___flmul+1)^(0+128),w
 16306     023A  0452               	iorwf	??___flmul^(0+128),w
 16307     023B  1903               	skipnz
 16308     023C  2A3E               	goto	u5421
 16309     023D  2A3F               	goto	u5420
 16310     023E                     u5421:
 16311     023E  2A42               	goto	l1610
 16312     023F                     u5420:
 16313     023F                     l4912:
 16314     023F  3001               	movlw	1
 16315     0240  00DC               	movwf	___flmul@aexp^(0+128)
 16316     0241  2A47               	goto	l4916
 16317     0242                     l1610:
 16318     0242  1C5E               	btfss	___flmul@prod^(0+128),0
 16319     0243  2A45               	goto	u5431
 16320     0244  2A46               	goto	u5430
 16321     0245                     u5431:
 16322     0245  2A47               	goto	l4916
 16323     0246                     u5430:
 16324     0246  2A3F               	goto	l4912
 16325     0247                     l4916:
 16326     0247  085C               	movf	___flmul@aexp^(0+128),w
 16327     0248  1903               	btfsc	3,2
 16328     0249  2A4B               	goto	u5441
 16329     024A  2A4C               	goto	u5440
 16330     024B                     u5441:
 16331     024B  2A72               	goto	l4926
 16332     024C                     u5440:
 16333     024C                     l4918:
 16334     024C  3001               	movlw	1
 16335     024D  07DE               	addwf	___flmul@prod^(0+128),f
 16336     024E  3000               	movlw	0
 16337     024F  3DDF               	addwfc	(___flmul@prod+1)^(0+128),f
 16338     0250  3DE0               	addwfc	(___flmul@prod+2)^(0+128),f
 16339     0251  3DE1               	addwfc	(___flmul@prod+3)^(0+128),f
 16340     0252                     l4920:
 16341     0252  1C61               	btfss	(___flmul@prod+3)^(0+128),0
 16342     0253  2A55               	goto	u5451
 16343     0254  2A56               	goto	u5450
 16344     0255                     u5451:
 16345     0255  2A72               	goto	l4926
 16346     0256                     u5450:
 16347     0256                     l4922:
 16348     0256  085E               	movf	___flmul@prod^(0+128),w
 16349     0257  00D2               	movwf	??___flmul^(0+128)
 16350     0258  085F               	movf	(___flmul@prod+1)^(0+128),w
 16351     0259  00D3               	movwf	(??___flmul^(0+128)+1)
 16352     025A  0860               	movf	(___flmul@prod+2)^(0+128),w
 16353     025B  00D4               	movwf	(??___flmul^(0+128)+2)
 16354     025C  0861               	movf	(___flmul@prod+3)^(0+128),w
 16355     025D  00D5               	movwf	(??___flmul^(0+128)+3)
 16356     025E  3001               	movlw	1
 16357     025F  00D6               	movwf	(??___flmul+4)^(0+128)
 16358     0260                     u5465:
 16359     0260  37D5               	asrf	(??___flmul^(0+128)+3),f
 16360     0261  0CD4               	rrf	(??___flmul^(0+128)+2),f
 16361     0262  0CD3               	rrf	(??___flmul^(0+128)+1),f
 16362     0263  0CD2               	rrf	??___flmul^(0+128),f
 16363     0264                     u5460:
 16364     0264  0BD6               	decfsz	(??___flmul+4)^(0+128),f
 16365     0265  2A60               	goto	u5465
 16366     0266  0855               	movf	(??___flmul+3)^(0+128),w
 16367     0267  00E1               	movwf	(___flmul@prod+3)^(0+128)
 16368     0268  0854               	movf	(??___flmul+2)^(0+128),w
 16369     0269  00E0               	movwf	(___flmul@prod+2)^(0+128)
 16370     026A  0853               	movf	(??___flmul+1)^(0+128),w
 16371     026B  00DF               	movwf	(___flmul@prod+1)^(0+128)
 16372     026C  0852               	movf	??___flmul^(0+128),w
 16373     026D  00DE               	movwf	___flmul@prod^(0+128)
 16374     026E                     l4924:
 16375     026E  3001               	movlw	1
 16376     026F  07E2               	addwf	___flmul@temp^(0+128),f
 16377     0270  3000               	movlw	0
 16378     0271  3DE3               	addwfc	(___flmul@temp+1)^(0+128),f
 16379     0272                     l4926:
 16380     0272  0863               	movf	(___flmul@temp+1)^(0+128),w
 16381     0273  3A80               	xorlw	128
 16382     0274  00D2               	movwf	??___flmul^(0+128)
 16383     0275  3080               	movlw	128
 16384     0276  0252               	subwf	??___flmul^(0+128),w
 16385     0277  1D03               	skipz
 16386     0278  2A7B               	goto	u5475
 16387     0279  30FF               	movlw	255
 16388     027A  0262               	subwf	___flmul@temp^(0+128),w
 16389     027B                     u5475:
 16390     027B  1C03               	skipc
 16391     027C  2A7E               	goto	u5471
 16392     027D  2A7F               	goto	u5470
 16393     027E                     u5471:
 16394     027E  2A89               	goto	l4930
 16395     027F                     u5470:
 16396     027F                     l4928:
 16397     027F  307F               	movlw	127
 16398     0280  0021               	movlb	1	; select bank1
 16399     0281  00E1               	movwf	(___flmul@prod+3)^(0+128)
 16400     0282  3080               	movlw	128
 16401     0283  00E0               	movwf	(___flmul@prod+2)^(0+128)
 16402     0284  3000               	movlw	0
 16403     0285  00DF               	movwf	(___flmul@prod+1)^(0+128)
 16404     0286  3000               	movlw	0
 16405     0287  00DE               	movwf	___flmul@prod^(0+128)
 16406     0288  2ABA               	goto	l1616
 16407     0289                     l4930:
 16408     0289  0021               	movlb	1	; select bank1
 16409     028A  0863               	movf	(___flmul@temp+1)^(0+128),w
 16410     028B  3A80               	xorlw	128
 16411     028C  00D2               	movwf	??___flmul^(0+128)
 16412     028D  3080               	movlw	128
 16413     028E  0252               	subwf	??___flmul^(0+128),w
 16414     028F  1D03               	skipz
 16415     0290  2A93               	goto	u5485
 16416     0291  3001               	movlw	1
 16417     0292  0262               	subwf	___flmul@temp^(0+128),w
 16418     0293                     u5485:
 16419     0293  1803               	skipnc
 16420     0294  2A96               	goto	u5481
 16421     0295  2A97               	goto	u5480
 16422     0296                     u5481:
 16423     0296  2AA2               	goto	l4936
 16424     0297                     u5480:
 16425     0297                     l4932:
 16426     0297  3000               	movlw	0
 16427     0298  0021               	movlb	1	; select bank1
 16428     0299  00E1               	movwf	(___flmul@prod+3)^(0+128)
 16429     029A  3000               	movlw	0
 16430     029B  00E0               	movwf	(___flmul@prod+2)^(0+128)
 16431     029C  3000               	movlw	0
 16432     029D  00DF               	movwf	(___flmul@prod+1)^(0+128)
 16433     029E  3000               	movlw	0
 16434     029F  00DE               	movwf	___flmul@prod^(0+128)
 16435     02A0                     l4934:
 16436     02A0  01D7               	clrf	___flmul@sign^(0+128)
 16437     02A1  2ABA               	goto	l1616
 16438     02A2                     l4936:
 16439     02A2  0021               	movlb	1	; select bank1
 16440     02A3  0862               	movf	___flmul@temp^(0+128),w
 16441     02A4  00DD               	movwf	___flmul@bexp^(0+128)
 16442     02A5  30FF               	movlw	255
 16443     02A6  05DE               	andwf	___flmul@prod^(0+128),f
 16444     02A7  30FF               	movlw	255
 16445     02A8  05DF               	andwf	(___flmul@prod+1)^(0+128),f
 16446     02A9  307F               	movlw	127
 16447     02AA  05E0               	andwf	(___flmul@prod+2)^(0+128),f
 16448     02AB  3000               	movlw	0
 16449     02AC  05E1               	andwf	(___flmul@prod+3)^(0+128),f
 16450     02AD                     l4938:
 16451     02AD  1C5D               	btfss	___flmul@bexp^(0+128),0
 16452     02AE  2AB0               	goto	u5491
 16453     02AF  2AB1               	goto	u5490
 16454     02B0                     u5491:
 16455     02B0  2AB2               	goto	l4942
 16456     02B1                     u5490:
 16457     02B1                     l4940:
 16458     02B1  17E0               	bsf	(___flmul@prod^(0+128)+2),7
 16459     02B2                     l4942:
 16460     02B2  085D               	movf	___flmul@bexp^(0+128),w
 16461     02B3  00D2               	movwf	??___flmul^(0+128)
 16462     02B4  3001               	movlw	1
 16463     02B5                     u5505:
 16464     02B5  36D2               	lsrf	??___flmul^(0+128),f
 16465     02B6  0B89               	decfsz	9,f
 16466     02B7  2AB5               	goto	u5505
 16467     02B8  0852               	movf	??___flmul^(0+128),w
 16468     02B9  00E1               	movwf	(___flmul@prod^(0+128)+3)
 16469     02BA                     l1616:
 16470     02BA  0857               	movf	___flmul@sign^(0+128),w
 16471     02BB  04E1               	iorwf	(___flmul@prod^(0+128)+3),f
 16472     02BC                     l4944:
 16473     02BC  0861               	movf	(___flmul@prod+3)^(0+128),w
 16474     02BD  00CD               	movwf	(?___flmul+3)^(0+128)
 16475     02BE  0860               	movf	(___flmul@prod+2)^(0+128),w
 16476     02BF  00CC               	movwf	(?___flmul+2)^(0+128)
 16477     02C0  085F               	movf	(___flmul@prod+1)^(0+128),w
 16478     02C1  00CB               	movwf	(?___flmul+1)^(0+128)
 16479     02C2  085E               	movf	___flmul@prod^(0+128),w
 16480     02C3  00CA               	movwf	?___flmul^(0+128)
 16481     02C4                     l1604:
 16482     02C4  0008               	return
 16483     02C5                     __end_of___flmul:
 16484                           
 16485                           	psect	text57
 16486     1DA1                     __ptext57:	
 16487 ;; *************** function __Umul8_16 *****************
 16488 ;; Defined at:
 16489 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\Umul8_16.c"
 16490 ;; Parameters:    Size  Location     Type
 16491 ;;  multiplier      1    wreg     unsigned char 
 16492 ;;  multiplicand    1    0[BANK1 ] unsigned char 
 16493 ;; Auto vars:     Size  Location     Type
 16494 ;;  multiplier      1    8[BANK1 ] unsigned char 
 16495 ;;  word_mpld       2    6[BANK1 ] unsigned short 
 16496 ;;  product         2    4[BANK1 ] unsigned short 
 16497 ;; Return value:  Size  Location     Type
 16498 ;;                  2    0[BANK1 ] unsigned int 
 16499 ;; Registers used:
 16500 ;;		wreg, status,2, status,0
 16501 ;; Tracked objects:
 16502 ;;		On entry : 0/0
 16503 ;;		On exit  : 0/0
 16504 ;;		Unchanged: 0/0
 16505 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 16506 ;;      Params:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0
 16507 ;;      Locals:         0       0       5       0       0       0       0       0       0       0       0       0       
      +0       0
 16508 ;;      Temps:          0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0
 16509 ;;      Totals:         0       0       9       0       0       0       0       0       0       0       0       0       
      +0       0
 16510 ;;Total ram usage:        9 bytes
 16511 ;; Hardware stack levels used: 1
 16512 ;; Hardware stack levels required when called: 5
 16513 ;; This function calls:
 16514 ;;		Nothing
 16515 ;; This function is called by:
 16516 ;;		___flmul
 16517 ;; This function uses a non-reentrant model
 16518 ;;
 16519                           
 16520     1DA1                     __Umul8_16:	
 16521                           ;psect for function __Umul8_16
 16522                           
 16523                           
 16524                           ;incstack = 0
 16525                           ; Regs used in __Umul8_16: [wreg+status,2+status,0]
 16526                           ;__Umul8_16@multiplier stored from wreg
 16527     1DA1  0021               	movlb	1	; select bank1
 16528     1DA2  00A8               	movwf	__Umul8_16@multiplier^(0+128)
 16529     1DA3                     l4462:
 16530     1DA3  01A4               	clrf	__Umul8_16@product^(0+128)
 16531     1DA4  01A5               	clrf	(__Umul8_16@product+1)^(0+128)
 16532     1DA5                     l4464:
 16533     1DA5  0820               	movf	__Umul8_16@multiplicand^(0+128),w
 16534     1DA6  00A2               	movwf	??__Umul8_16^(0+128)
 16535     1DA7  01A3               	clrf	(??__Umul8_16^(0+128)+1)
 16536     1DA8  0822               	movf	??__Umul8_16^(0+128),w
 16537     1DA9  00A6               	movwf	__Umul8_16@word_mpld^(0+128)
 16538     1DAA  0823               	movf	(??__Umul8_16+1)^(0+128),w
 16539     1DAB  00A7               	movwf	(__Umul8_16@word_mpld+1)^(0+128)
 16540     1DAC                     l4466:
 16541     1DAC  1C28               	btfss	__Umul8_16@multiplier^(0+128),0
 16542     1DAD  2DAF               	goto	u4471
 16543     1DAE  2DB0               	goto	u4470
 16544     1DAF                     u4471:
 16545     1DAF  2DB4               	goto	l1623
 16546     1DB0                     u4470:
 16547     1DB0                     l4468:
 16548     1DB0  0826               	movf	__Umul8_16@word_mpld^(0+128),w
 16549     1DB1  07A4               	addwf	__Umul8_16@product^(0+128),f
 16550     1DB2  0827               	movf	(__Umul8_16@word_mpld+1)^(0+128),w
 16551     1DB3  3DA5               	addwfc	(__Umul8_16@product+1)^(0+128),f
 16552     1DB4                     l1623:
 16553     1DB4  3001               	movlw	1
 16554     1DB5                     u4485:
 16555     1DB5  35A6               	lslf	__Umul8_16@word_mpld^(0+128),f
 16556     1DB6  0DA7               	rlf	(__Umul8_16@word_mpld+1)^(0+128),f
 16557     1DB7  0B89               	decfsz	9,f
 16558     1DB8  2DB5               	goto	u4485
 16559     1DB9  1003               	clrc
 16560     1DBA  0CA8               	rrf	__Umul8_16@multiplier^(0+128),f
 16561     1DBB                     l4470:
 16562     1DBB  0828               	movf	__Umul8_16@multiplier^(0+128),w
 16563     1DBC  1D03               	btfss	3,2
 16564     1DBD  2DBF               	goto	u4491
 16565     1DBE  2DC0               	goto	u4490
 16566     1DBF                     u4491:
 16567     1DBF  2DAC               	goto	l4466
 16568     1DC0                     u4490:
 16569     1DC0                     l4472:
 16570     1DC0  0825               	movf	(__Umul8_16@product+1)^(0+128),w
 16571     1DC1  00A1               	movwf	(?__Umul8_16+1)^(0+128)
 16572     1DC2  0824               	movf	__Umul8_16@product^(0+128),w
 16573     1DC3  00A0               	movwf	?__Umul8_16^(0+128)
 16574     1DC4                     l1625:
 16575     1DC4  0008               	return
 16576     1DC5                     __end_of__Umul8_16:
 16577                           
 16578                           	psect	text58
 16579     0500                     __ptext58:	
 16580 ;; *************** function ___fladd *****************
 16581 ;; Defined at:
 16582 ;;		line 10 in file "C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\sprcadd.c"
 16583 ;; Parameters:    Size  Location     Type
 16584 ;;  b               4   14[BANK1 ] unsigned int 
 16585 ;;  a               4   18[BANK1 ] unsigned int 
 16586 ;; Auto vars:     Size  Location     Type
 16587 ;;  grs             1   33[BANK1 ] unsigned char 
 16588 ;;  bexp            1   32[BANK1 ] unsigned char 
 16589 ;;  aexp            1   31[BANK1 ] unsigned char 
 16590 ;;  signs           1   30[BANK1 ] unsigned char 
 16591 ;; Return value:  Size  Location     Type
 16592 ;;                  4   14[BANK1 ] unsigned char 
 16593 ;; Registers used:
 16594 ;;		wreg, status,2, status,0
 16595 ;; Tracked objects:
 16596 ;;		On entry : 0/0
 16597 ;;		On exit  : 0/0
 16598 ;;		Unchanged: 0/0
 16599 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 16600 ;;      Params:         0       0       8       0       0       0       0       0       0       0       0       0       
      +0       0
 16601 ;;      Locals:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0
 16602 ;;      Temps:          0       0       8       0       0       0       0       0       0       0       0       0       
      +0       0
 16603 ;;      Totals:         0       0      20       0       0       0       0       0       0       0       0       0       
      +0       0
 16604 ;;Total ram usage:       20 bytes
 16605 ;; Hardware stack levels used: 1
 16606 ;; Hardware stack levels required when called: 5
 16607 ;; This function calls:
 16608 ;;		Nothing
 16609 ;; This function is called by:
 16610 ;;		_str2float
 16611 ;;		_getLedNumber
 16612 ;;		___flsub
 16613 ;; This function uses a non-reentrant model
 16614 ;;
 16615                           
 16616     0500                     ___fladd:	
 16617                           ;psect for function ___fladd
 16618                           
 16619     0500                     l4612:	
 16620                           ;incstack = 0
 16621                           ; Regs used in ___fladd: [wreg+status,2+status,0]
 16622                           
 16623     0500  0021               	movlb	1	; select bank1
 16624     0501  0831               	movf	(___fladd@b^(0+128)+3),w
 16625     0502  3980               	andlw	128
 16626     0503  00BE               	movwf	___fladd@signs^(0+128)
 16627     0504                     l4614:
 16628     0504  3531               	lslf	(___fladd@b^(0+128)+3),w
 16629     0505  00C0               	movwf	___fladd@bexp^(0+128)
 16630     0506                     l4616:
 16631     0506  1FB0               	btfss	(___fladd@b^(0+128)+2),7
 16632     0507  2D09               	goto	u4781
 16633     0508  2D0A               	goto	u4780
 16634     0509                     u4781:
 16635     0509  2D0B               	goto	l4620
 16636     050A                     u4780:
 16637     050A                     l4618:
 16638     050A  1440               	bsf	___fladd@bexp^(0+128),0
 16639     050B                     l4620:
 16640     050B  0840               	movf	___fladd@bexp^(0+128),w
 16641     050C  1903               	btfsc	3,2
 16642     050D  2D0F               	goto	u4791
 16643     050E  2D10               	goto	u4790
 16644     050F                     u4791:
 16645     050F  2D20               	goto	l4630
 16646     0510                     u4790:
 16647     0510                     l4622:
 16648     0510  0A40               	incf	___fladd@bexp^(0+128),w
 16649     0511  1D03               	btfss	3,2
 16650     0512  2D14               	goto	u4801
 16651     0513  2D15               	goto	u4800
 16652     0514                     u4801:
 16653     0514  2D1D               	goto	l4626
 16654     0515                     u4800:
 16655     0515                     l4624:
 16656     0515  3000               	movlw	0
 16657     0516  00B1               	movwf	(___fladd@b+3)^(0+128)
 16658     0517  3000               	movlw	0
 16659     0518  00B0               	movwf	(___fladd@b+2)^(0+128)
 16660     0519  3000               	movlw	0
 16661     051A  00AF               	movwf	(___fladd@b+1)^(0+128)
 16662     051B  3000               	movlw	0
 16663     051C  00AE               	movwf	___fladd@b^(0+128)
 16664     051D                     l4626:
 16665     051D  17B0               	bsf	(___fladd@b^(0+128)+2),7
 16666     051E                     l4628:
 16667     051E  01B1               	clrf	(___fladd@b^(0+128)+3)
 16668     051F  2D28               	goto	l4632
 16669     0520                     l4630:
 16670     0520  3000               	movlw	0
 16671     0521  00B1               	movwf	(___fladd@b+3)^(0+128)
 16672     0522  3000               	movlw	0
 16673     0523  00B0               	movwf	(___fladd@b+2)^(0+128)
 16674     0524  3000               	movlw	0
 16675     0525  00AF               	movwf	(___fladd@b+1)^(0+128)
 16676     0526  3000               	movlw	0
 16677     0527  00AE               	movwf	___fladd@b^(0+128)
 16678     0528                     l4632:
 16679     0528  0835               	movf	(___fladd@a^(0+128)+3),w
 16680     0529  3980               	andlw	128
 16681     052A  00BF               	movwf	___fladd@aexp^(0+128)
 16682     052B                     l4634:
 16683     052B  083F               	movf	___fladd@aexp^(0+128),w
 16684     052C  063E               	xorwf	___fladd@signs^(0+128),w
 16685     052D  1903               	skipnz
 16686     052E  2D30               	goto	u4811
 16687     052F  2D31               	goto	u4810
 16688     0530                     u4811:
 16689     0530  2D32               	goto	l4638
 16690     0531                     u4810:
 16691     0531                     l4636:
 16692     0531  173E               	bsf	___fladd@signs^(0+128),6
 16693     0532                     l4638:
 16694     0532  3535               	lslf	(___fladd@a^(0+128)+3),w
 16695     0533  00BF               	movwf	___fladd@aexp^(0+128)
 16696     0534                     l4640:
 16697     0534  1FB4               	btfss	(___fladd@a^(0+128)+2),7
 16698     0535  2D37               	goto	u4821
 16699     0536  2D38               	goto	u4820
 16700     0537                     u4821:
 16701     0537  2D39               	goto	l4644
 16702     0538                     u4820:
 16703     0538                     l4642:
 16704     0538  143F               	bsf	___fladd@aexp^(0+128),0
 16705     0539                     l4644:
 16706     0539  083F               	movf	___fladd@aexp^(0+128),w
 16707     053A  1903               	btfsc	3,2
 16708     053B  2D3D               	goto	u4831
 16709     053C  2D3E               	goto	u4830
 16710     053D                     u4831:
 16711     053D  2D4E               	goto	l4654
 16712     053E                     u4830:
 16713     053E                     l4646:
 16714     053E  0A3F               	incf	___fladd@aexp^(0+128),w
 16715     053F  1D03               	btfss	3,2
 16716     0540  2D42               	goto	u4841
 16717     0541  2D43               	goto	u4840
 16718     0542                     u4841:
 16719     0542  2D4B               	goto	l4650
 16720     0543                     u4840:
 16721     0543                     l4648:
 16722     0543  3000               	movlw	0
 16723     0544  00B5               	movwf	(___fladd@a+3)^(0+128)
 16724     0545  3000               	movlw	0
 16725     0546  00B4               	movwf	(___fladd@a+2)^(0+128)
 16726     0547  3000               	movlw	0
 16727     0548  00B3               	movwf	(___fladd@a+1)^(0+128)
 16728     0549  3000               	movlw	0
 16729     054A  00B2               	movwf	___fladd@a^(0+128)
 16730     054B                     l4650:
 16731     054B  17B4               	bsf	(___fladd@a^(0+128)+2),7
 16732     054C                     l4652:
 16733     054C  01B5               	clrf	(___fladd@a^(0+128)+3)
 16734     054D  2D56               	goto	l1508
 16735     054E                     l4654:
 16736     054E  3000               	movlw	0
 16737     054F  00B5               	movwf	(___fladd@a+3)^(0+128)
 16738     0550  3000               	movlw	0
 16739     0551  00B4               	movwf	(___fladd@a+2)^(0+128)
 16740     0552  3000               	movlw	0
 16741     0553  00B3               	movwf	(___fladd@a+1)^(0+128)
 16742     0554  3000               	movlw	0
 16743     0555  00B2               	movwf	___fladd@a^(0+128)
 16744     0556                     l1508:
 16745     0556  0840               	movf	___fladd@bexp^(0+128),w
 16746     0557  023F               	subwf	___fladd@aexp^(0+128),w
 16747     0558  1803               	skipnc
 16748     0559  2D5B               	goto	u4851
 16749     055A  2D5C               	goto	u4850
 16750     055B                     u4851:
 16751     055B  2D80               	goto	l4690
 16752     055C                     u4850:
 16753     055C                     l4656:
 16754     055C  1F3E               	btfss	___fladd@signs^(0+128),6
 16755     055D  2D5F               	goto	u4861
 16756     055E  2D60               	goto	u4860
 16757     055F                     u4861:
 16758     055F  2D62               	goto	l4660
 16759     0560                     u4860:
 16760     0560                     l4658:
 16761     0560  3080               	movlw	128
 16762     0561  06BE               	xorwf	___fladd@signs^(0+128),f
 16763     0562                     l4660:
 16764     0562  0840               	movf	___fladd@bexp^(0+128),w
 16765     0563  00C1               	movwf	___fladd@grs^(0+128)
 16766     0564                     l4662:
 16767     0564  083F               	movf	___fladd@aexp^(0+128),w
 16768     0565  00C0               	movwf	___fladd@bexp^(0+128)
 16769     0566                     l4664:
 16770     0566  0841               	movf	___fladd@grs^(0+128),w
 16771     0567  00BF               	movwf	___fladd@aexp^(0+128)
 16772     0568                     l4666:
 16773     0568  082E               	movf	___fladd@b^(0+128),w
 16774     0569  00C1               	movwf	___fladd@grs^(0+128)
 16775     056A                     l4668:
 16776     056A  0832               	movf	___fladd@a^(0+128),w
 16777     056B  00AE               	movwf	___fladd@b^(0+128)
 16778     056C                     l4670:
 16779     056C  0841               	movf	___fladd@grs^(0+128),w
 16780     056D  00B2               	movwf	___fladd@a^(0+128)
 16781     056E                     l4672:
 16782     056E  082F               	movf	(___fladd@b^(0+128)+1),w
 16783     056F  00C1               	movwf	___fladd@grs^(0+128)
 16784     0570                     l4674:
 16785     0570  0833               	movf	(___fladd@a^(0+128)+1),w
 16786     0571  00AF               	movwf	(___fladd@b^(0+128)+1)
 16787     0572                     l4676:
 16788     0572  0841               	movf	___fladd@grs^(0+128),w
 16789     0573  00B3               	movwf	(___fladd@a^(0+128)+1)
 16790     0574                     l4678:
 16791     0574  0830               	movf	(___fladd@b^(0+128)+2),w
 16792     0575  00C1               	movwf	___fladd@grs^(0+128)
 16793     0576                     l4680:
 16794     0576  0834               	movf	(___fladd@a^(0+128)+2),w
 16795     0577  00B0               	movwf	(___fladd@b^(0+128)+2)
 16796     0578                     l4682:
 16797     0578  0841               	movf	___fladd@grs^(0+128),w
 16798     0579  00B4               	movwf	(___fladd@a^(0+128)+2)
 16799     057A                     l4684:
 16800     057A  0831               	movf	(___fladd@b^(0+128)+3),w
 16801     057B  00C1               	movwf	___fladd@grs^(0+128)
 16802     057C                     l4686:
 16803     057C  0835               	movf	(___fladd@a^(0+128)+3),w
 16804     057D  00B1               	movwf	(___fladd@b^(0+128)+3)
 16805     057E                     l4688:
 16806     057E  0841               	movf	___fladd@grs^(0+128),w
 16807     057F  00B5               	movwf	(___fladd@a^(0+128)+3)
 16808     0580                     l4690:
 16809     0580  01C1               	clrf	___fladd@grs^(0+128)
 16810     0581                     l4692:
 16811     0581  083F               	movf	___fladd@aexp^(0+128),w
 16812     0582  00B6               	movwf	??___fladd^(0+128)
 16813     0583  01B7               	clrf	(??___fladd^(0+128)+1)
 16814     0584  0837               	movf	(??___fladd+1)^(0+128),w
 16815     0585  00B9               	movwf	((??___fladd+2)^(0+128)+1)
 16816     0586  0840               	movf	___fladd@bexp^(0+128),w
 16817     0587  0236               	subwf	??___fladd^(0+128),w
 16818     0588  00B8               	movwf	(??___fladd+2)^(0+128)
 16819     0589  1C03               	skipc
 16820     058A  03B9               	decf	((??___fladd+2)^(0+128)+1),f
 16821     058B  0839               	movf	(??___fladd+3)^(0+128),w
 16822     058C  3A80               	xorlw	128
 16823     058D  00BA               	movwf	(??___fladd+4)^(0+128)
 16824     058E  3080               	movlw	128
 16825     058F  023A               	subwf	(??___fladd+4)^(0+128),w
 16826     0590  1D03               	skipz
 16827     0591  2D94               	goto	u4875
 16828     0592  301A               	movlw	26
 16829     0593  0238               	subwf	(??___fladd+2)^(0+128),w
 16830     0594                     u4875:
 16831     0594  1C03               	skipc
 16832     0595  2D97               	goto	u4871
 16833     0596  2D98               	goto	u4870
 16834     0597                     u4871:
 16835     0597  2DCE               	goto	l4708
 16836     0598                     u4870:
 16837     0598                     l4694:
 16838     0598  0021               	movlb	1	; select bank1
 16839     0599  0831               	movf	(___fladd@b+3)^(0+128),w
 16840     059A  0430               	iorwf	(___fladd@b+2)^(0+128),w
 16841     059B  042F               	iorwf	(___fladd@b+1)^(0+128),w
 16842     059C  042E               	iorwf	___fladd@b^(0+128),w
 16843     059D  1D03               	skipz
 16844     059E  2DA0               	goto	u4881
 16845     059F  2DA2               	goto	u4880
 16846     05A0                     u4881:
 16847     05A0  3001               	movlw	1
 16848     05A1  2DA3               	goto	u4890
 16849     05A2                     u4880:
 16850     05A2  3000               	movlw	0
 16851     05A3                     u4890:
 16852     05A3  00C1               	movwf	___fladd@grs^(0+128)
 16853     05A4  3000               	movlw	0
 16854     05A5  00B1               	movwf	(___fladd@b+3)^(0+128)
 16855     05A6  3000               	movlw	0
 16856     05A7  00B0               	movwf	(___fladd@b+2)^(0+128)
 16857     05A8  3000               	movlw	0
 16858     05A9  00AF               	movwf	(___fladd@b+1)^(0+128)
 16859     05AA  3000               	movlw	0
 16860     05AB  00AE               	movwf	___fladd@b^(0+128)
 16861     05AC  083F               	movf	___fladd@aexp^(0+128),w
 16862     05AD  00C0               	movwf	___fladd@bexp^(0+128)
 16863     05AE  2DD5               	goto	l1512
 16864     05AF                     l1514:
 16865     05AF  1C41               	btfss	___fladd@grs^(0+128),0
 16866     05B0  2DB2               	goto	u4901
 16867     05B1  2DB3               	goto	u4900
 16868     05B2                     u4901:
 16869     05B2  2DBD               	goto	l4698
 16870     05B3                     u4900:
 16871     05B3                     l4696:
 16872     05B3  0841               	movf	___fladd@grs^(0+128),w
 16873     05B4  00B6               	movwf	??___fladd^(0+128)
 16874     05B5  3001               	movlw	1
 16875     05B6                     u4915:
 16876     05B6  36B6               	lsrf	??___fladd^(0+128),f
 16877     05B7  0B89               	decfsz	9,f
 16878     05B8  2DB6               	goto	u4915
 16879     05B9  0836               	movf	??___fladd^(0+128),w
 16880     05BA  3801               	iorlw	1
 16881     05BB  00C1               	movwf	___fladd@grs^(0+128)
 16882     05BC  2DBF               	goto	l4700
 16883     05BD                     l4698:
 16884     05BD  1003               	clrc
 16885     05BE  0CC1               	rrf	___fladd@grs^(0+128),f
 16886     05BF                     l4700:
 16887     05BF  1C2E               	btfss	___fladd@b^(0+128),0
 16888     05C0  2DC2               	goto	u4921
 16889     05C1  2DC3               	goto	u4920
 16890     05C2                     u4921:
 16891     05C2  2DC4               	goto	l4704
 16892     05C3                     u4920:
 16893     05C3                     l4702:
 16894     05C3  17C1               	bsf	___fladd@grs^(0+128),7
 16895     05C4                     l4704:
 16896     05C4  3001               	movlw	1
 16897     05C5  00B6               	movwf	??___fladd^(0+128)
 16898     05C6                     u4935:
 16899     05C6  37B1               	asrf	(___fladd@b+3)^(0+128),f
 16900     05C7  0CB0               	rrf	(___fladd@b+2)^(0+128),f
 16901     05C8  0CAF               	rrf	(___fladd@b+1)^(0+128),f
 16902     05C9  0CAE               	rrf	___fladd@b^(0+128),f
 16903     05CA  0BB6               	decfsz	(??___fladd^(0+128))& (0+127),f
 16904     05CB  2DC6               	goto	u4935
 16905     05CC                     l4706:
 16906     05CC  3001               	movlw	1
 16907     05CD  07C0               	addwf	___fladd@bexp^(0+128),f
 16908     05CE                     l4708:
 16909     05CE  0021               	movlb	1	; select bank1
 16910     05CF  083F               	movf	___fladd@aexp^(0+128),w
 16911     05D0  0240               	subwf	___fladd@bexp^(0+128),w
 16912     05D1  1C03               	skipc
 16913     05D2  2DD4               	goto	u4941
 16914     05D3  2DD5               	goto	u4940
 16915     05D4                     u4941:
 16916     05D4  2DAF               	goto	l1514
 16917     05D5                     u4940:
 16918     05D5                     l1512:
 16919     05D5  1B3E               	btfsc	___fladd@signs^(0+128),6
 16920     05D6  2DD8               	goto	u4951
 16921     05D7  2DD9               	goto	u4950
 16922     05D8                     u4951:
 16923     05D8  2E13               	goto	l4734
 16924     05D9                     u4950:
 16925     05D9                     l4710:
 16926     05D9  0840               	movf	___fladd@bexp^(0+128),w
 16927     05DA  1D03               	btfss	3,2
 16928     05DB  2DDD               	goto	u4961
 16929     05DC  2DDE               	goto	u4960
 16930     05DD                     u4961:
 16931     05DD  2DE7               	goto	l4716
 16932     05DE                     u4960:
 16933     05DE                     l4712:
 16934     05DE  3000               	movlw	0
 16935     05DF  00B1               	movwf	(?___fladd+3)^(0+128)
 16936     05E0  3000               	movlw	0
 16937     05E1  00B0               	movwf	(?___fladd+2)^(0+128)
 16938     05E2  3000               	movlw	0
 16939     05E3  00AF               	movwf	(?___fladd+1)^(0+128)
 16940     05E4  3000               	movlw	0
 16941     05E5  00AE               	movwf	?___fladd^(0+128)
 16942     05E6  2F0B               	goto	l1521
 16943     05E7                     l4716:
 16944     05E7  0832               	movf	___fladd@a^(0+128),w
 16945     05E8  07AE               	addwf	___fladd@b^(0+128),f
 16946     05E9  0833               	movf	(___fladd@a+1)^(0+128),w
 16947     05EA  3DAF               	addwfc	(___fladd@b+1)^(0+128),f
 16948     05EB  0834               	movf	(___fladd@a+2)^(0+128),w
 16949     05EC  3DB0               	addwfc	(___fladd@b+2)^(0+128),f
 16950     05ED  0835               	movf	(___fladd@a+3)^(0+128),w
 16951     05EE  3DB1               	addwfc	(___fladd@b+3)^(0+128),f
 16952     05EF                     l4718:
 16953     05EF  1C31               	btfss	(___fladd@b+3)^(0+128),0
 16954     05F0  2DF2               	goto	u4971
 16955     05F1  2DF3               	goto	u4970
 16956     05F2                     u4971:
 16957     05F2  2E9D               	goto	l4770
 16958     05F3                     u4970:
 16959     05F3                     l4720:
 16960     05F3  1C41               	btfss	___fladd@grs^(0+128),0
 16961     05F4  2DF6               	goto	u4981
 16962     05F5  2DF7               	goto	u4980
 16963     05F6                     u4981:
 16964     05F6  2E01               	goto	l4724
 16965     05F7                     u4980:
 16966     05F7                     l4722:
 16967     05F7  0841               	movf	___fladd@grs^(0+128),w
 16968     05F8  00B6               	movwf	??___fladd^(0+128)
 16969     05F9  3001               	movlw	1
 16970     05FA                     u4995:
 16971     05FA  36B6               	lsrf	??___fladd^(0+128),f
 16972     05FB  0B89               	decfsz	9,f
 16973     05FC  2DFA               	goto	u4995
 16974     05FD  0836               	movf	??___fladd^(0+128),w
 16975     05FE  3801               	iorlw	1
 16976     05FF  00C1               	movwf	___fladd@grs^(0+128)
 16977     0600  2E03               	goto	l4726
 16978     0601                     l4724:
 16979     0601  1003               	clrc
 16980     0602  0CC1               	rrf	___fladd@grs^(0+128),f
 16981     0603                     l4726:
 16982     0603  1C2E               	btfss	___fladd@b^(0+128),0
 16983     0604  2E06               	goto	u5001
 16984     0605  2E07               	goto	u5000
 16985     0606                     u5001:
 16986     0606  2E08               	goto	l4730
 16987     0607                     u5000:
 16988     0607                     l4728:
 16989     0607  17C1               	bsf	___fladd@grs^(0+128),7
 16990     0608                     l4730:
 16991     0608  3001               	movlw	1
 16992     0609  00B6               	movwf	??___fladd^(0+128)
 16993     060A                     u5015:
 16994     060A  37B1               	asrf	(___fladd@b+3)^(0+128),f
 16995     060B  0CB0               	rrf	(___fladd@b+2)^(0+128),f
 16996     060C  0CAF               	rrf	(___fladd@b+1)^(0+128),f
 16997     060D  0CAE               	rrf	___fladd@b^(0+128),f
 16998     060E  0BB6               	decfsz	(??___fladd^(0+128))& (0+127),f
 16999     060F  2E0A               	goto	u5015
 17000     0610                     l4732:
 17001     0610  3001               	movlw	1
 17002     0611  07C0               	addwf	___fladd@bexp^(0+128),f
 17003     0612  2E9D               	goto	l4770
 17004     0613                     l4734:
 17005     0613  0831               	movf	(___fladd@b+3)^(0+128),w
 17006     0614  3A80               	xorlw	128
 17007     0615  00B6               	movwf	??___fladd^(0+128)
 17008     0616  0835               	movf	(___fladd@a+3)^(0+128),w
 17009     0617  3A80               	xorlw	128
 17010     0618  0236               	subwf	??___fladd^(0+128),w
 17011     0619  1D03               	skipz
 17012     061A  2E25               	goto	u5023
 17013     061B  0834               	movf	(___fladd@a+2)^(0+128),w
 17014     061C  0230               	subwf	(___fladd@b+2)^(0+128),w
 17015     061D  1D03               	skipz
 17016     061E  2E25               	goto	u5023
 17017     061F  0833               	movf	(___fladd@a+1)^(0+128),w
 17018     0620  022F               	subwf	(___fladd@b+1)^(0+128),w
 17019     0621  1D03               	skipz
 17020     0622  2E25               	goto	u5023
 17021     0623  0832               	movf	___fladd@a^(0+128),w
 17022     0624  022E               	subwf	___fladd@b^(0+128),w
 17023     0625                     u5023:
 17024     0625  1803               	skipnc
 17025     0626  2E28               	goto	u5021
 17026     0627  2E29               	goto	u5020
 17027     0628                     u5021:
 17028     0628  2E5E               	goto	l4746
 17029     0629                     u5020:
 17030     0629                     l4736:
 17031     0629  30FF               	movlw	255
 17032     062A  00B6               	movwf	??___fladd^(0+128)
 17033     062B  30FF               	movlw	255
 17034     062C  00B7               	movwf	(??___fladd^(0+128)+1)
 17035     062D  30FF               	movlw	255
 17036     062E  00B8               	movwf	(??___fladd^(0+128)+2)
 17037     062F  30FF               	movlw	255
 17038     0630  00B9               	movwf	(??___fladd^(0+128)+3)
 17039     0631  082E               	movf	___fladd@b^(0+128),w
 17040     0632  0232               	subwf	___fladd@a^(0+128),w
 17041     0633  00BA               	movwf	(??___fladd+4)^(0+128)
 17042     0634  082F               	movf	(___fladd@b+1)^(0+128),w
 17043     0635  3B33               	subwfb	(___fladd@a+1)^(0+128),w
 17044     0636  00BB               	movwf	((??___fladd+4)^(0+128)+1)
 17045     0637  0830               	movf	(___fladd@b+2)^(0+128),w
 17046     0638  3B34               	subwfb	(___fladd@a+2)^(0+128),w
 17047     0639  00BC               	movwf	((??___fladd+4)^(0+128)+2)
 17048     063A  0831               	movf	(___fladd@b+3)^(0+128),w
 17049     063B  3B35               	subwfb	(___fladd@a+3)^(0+128),w
 17050     063C  00BD               	movwf	((??___fladd+4)^(0+128)+3)
 17051     063D  083A               	movf	(??___fladd+4)^(0+128),w
 17052     063E  07B6               	addwf	??___fladd^(0+128),f
 17053     063F  083B               	movf	(??___fladd+5)^(0+128),w
 17054     0640  3DB7               	addwfc	(??___fladd^(0+128)+1),f
 17055     0641  083C               	movf	(??___fladd+6)^(0+128),w
 17056     0642  3DB8               	addwfc	(??___fladd^(0+128)+2),f
 17057     0643  083D               	movf	(??___fladd+7)^(0+128),w
 17058     0644  3DB9               	addwfc	(??___fladd^(0+128)+3),f
 17059     0645  0839               	movf	(??___fladd+3)^(0+128),w
 17060     0646  00B1               	movwf	(___fladd@b+3)^(0+128)
 17061     0647  0838               	movf	(??___fladd+2)^(0+128),w
 17062     0648  00B0               	movwf	(___fladd@b+2)^(0+128)
 17063     0649  0837               	movf	(??___fladd+1)^(0+128),w
 17064     064A  00AF               	movwf	(___fladd@b+1)^(0+128)
 17065     064B  0836               	movf	??___fladd^(0+128),w
 17066     064C  00AE               	movwf	___fladd@b^(0+128)
 17067     064D                     l4738:
 17068     064D  3080               	movlw	128
 17069     064E  06BE               	xorwf	___fladd@signs^(0+128),f
 17070     064F                     l4740:
 17071     064F  0341               	decf	___fladd@grs^(0+128),w
 17072     0650  3AFF               	xorlw	255
 17073     0651  00C1               	movwf	___fladd@grs^(0+128)
 17074     0652                     l4742:
 17075     0652  0841               	movf	___fladd@grs^(0+128),w
 17076     0653  1D03               	btfss	3,2
 17077     0654  2E56               	goto	u5031
 17078     0655  2E57               	goto	u5030
 17079     0656                     u5031:
 17080     0656  2E66               	goto	l1529
 17081     0657                     u5030:
 17082     0657                     l4744:
 17083     0657  3001               	movlw	1
 17084     0658  07AE               	addwf	___fladd@b^(0+128),f
 17085     0659  3000               	movlw	0
 17086     065A  3DAF               	addwfc	(___fladd@b+1)^(0+128),f
 17087     065B  3DB0               	addwfc	(___fladd@b+2)^(0+128),f
 17088     065C  3DB1               	addwfc	(___fladd@b+3)^(0+128),f
 17089     065D  2E66               	goto	l1529
 17090     065E                     l4746:
 17091     065E  0832               	movf	___fladd@a^(0+128),w
 17092     065F  02AE               	subwf	___fladd@b^(0+128),f
 17093     0660  0833               	movf	(___fladd@a+1)^(0+128),w
 17094     0661  3BAF               	subwfb	(___fladd@b+1)^(0+128),f
 17095     0662  0834               	movf	(___fladd@a+2)^(0+128),w
 17096     0663  3BB0               	subwfb	(___fladd@b+2)^(0+128),f
 17097     0664  0835               	movf	(___fladd@a+3)^(0+128),w
 17098     0665  3BB1               	subwfb	(___fladd@b+3)^(0+128),f
 17099     0666                     l1529:
 17100     0666  0831               	movf	(___fladd@b+3)^(0+128),w
 17101     0667  0430               	iorwf	(___fladd@b+2)^(0+128),w
 17102     0668  042F               	iorwf	(___fladd@b+1)^(0+128),w
 17103     0669  042E               	iorwf	___fladd@b^(0+128),w
 17104     066A  1D03               	skipz
 17105     066B  2E6D               	goto	u5041
 17106     066C  2E6E               	goto	u5040
 17107     066D                     u5041:
 17108     066D  2E99               	goto	l4768
 17109     066E                     u5040:
 17110     066E                     l4748:
 17111     066E  0841               	movf	___fladd@grs^(0+128),w
 17112     066F  1D03               	btfss	3,2
 17113     0670  2E72               	goto	u5051
 17114     0671  2E73               	goto	u5050
 17115     0672                     u5051:
 17116     0672  2E99               	goto	l4768
 17117     0673                     u5050:
 17118     0673                     l4750:
 17119     0673  3000               	movlw	0
 17120     0674  00B1               	movwf	(?___fladd+3)^(0+128)
 17121     0675  3000               	movlw	0
 17122     0676  00B0               	movwf	(?___fladd+2)^(0+128)
 17123     0677  3000               	movlw	0
 17124     0678  00AF               	movwf	(?___fladd+1)^(0+128)
 17125     0679  3000               	movlw	0
 17126     067A  00AE               	movwf	?___fladd^(0+128)
 17127     067B  2F0B               	goto	l1521
 17128     067C                     l4754:
 17129     067C  3001               	movlw	1
 17130     067D                     u5065:
 17131     067D  35AE               	lslf	___fladd@b^(0+128),f
 17132     067E  0DAF               	rlf	(___fladd@b+1)^(0+128),f
 17133     067F  0DB0               	rlf	(___fladd@b+2)^(0+128),f
 17134     0680  0DB1               	rlf	(___fladd@b+3)^(0+128),f
 17135     0681  0B89               	decfsz	9,f
 17136     0682  2E7D               	goto	u5065
 17137     0683                     l4756:
 17138     0683  1FC1               	btfss	___fladd@grs^(0+128),7
 17139     0684  2E86               	goto	u5071
 17140     0685  2E87               	goto	u5070
 17141     0686                     u5071:
 17142     0686  2E88               	goto	l1533
 17143     0687                     u5070:
 17144     0687                     l4758:
 17145     0687  142E               	bsf	___fladd@b^(0+128),0
 17146     0688                     l1533:
 17147     0688  1C41               	btfss	___fladd@grs^(0+128),0
 17148     0689  2E8B               	goto	u5081
 17149     068A  2E8C               	goto	u5080
 17150     068B                     u5081:
 17151     068B  2E90               	goto	l4762
 17152     068C                     u5080:
 17153     068C                     l4760:
 17154     068C  1403               	setc
 17155     068D  0D41               	rlf	___fladd@grs^(0+128),w
 17156     068E  00C1               	movwf	___fladd@grs^(0+128)
 17157     068F  2E92               	goto	l4764
 17158     0690                     l4762:
 17159     0690  1003               	clrc
 17160     0691  0DC1               	rlf	___fladd@grs^(0+128),f
 17161     0692                     l4764:
 17162     0692  0840               	movf	___fladd@bexp^(0+128),w
 17163     0693  1903               	btfsc	3,2
 17164     0694  2E96               	goto	u5091
 17165     0695  2E97               	goto	u5090
 17166     0696                     u5091:
 17167     0696  2E99               	goto	l4768
 17168     0697                     u5090:
 17169     0697                     l4766:
 17170     0697  3001               	movlw	1
 17171     0698  02C0               	subwf	___fladd@bexp^(0+128),f
 17172     0699                     l4768:
 17173     0699  1FB0               	btfss	(___fladd@b+2)^(0+128),7
 17174     069A  2E9C               	goto	u5101
 17175     069B  2E9D               	goto	u5100
 17176     069C                     u5101:
 17177     069C  2E7C               	goto	l4754
 17178     069D                     u5100:
 17179     069D                     l4770:
 17180     069D  01BF               	clrf	___fladd@aexp^(0+128)
 17181     069E                     l4772:
 17182     069E  1FC1               	btfss	___fladd@grs^(0+128),7
 17183     069F  2EA1               	goto	u5111
 17184     06A0  2EA2               	goto	u5110
 17185     06A1                     u5111:
 17186     06A1  2EB0               	goto	l4780
 17187     06A2                     u5110:
 17188     06A2                     l4774:
 17189     06A2  0841               	movf	___fladd@grs^(0+128),w
 17190     06A3  397F               	andlw	127
 17191     06A4  1903               	btfsc	3,2
 17192     06A5  2EA7               	goto	u5121
 17193     06A6  2EA8               	goto	u5120
 17194     06A7                     u5121:
 17195     06A7  2EAB               	goto	l1539
 17196     06A8                     u5120:
 17197     06A8                     l4776:
 17198     06A8  3001               	movlw	1
 17199     06A9  00BF               	movwf	___fladd@aexp^(0+128)
 17200     06AA  2EB0               	goto	l4780
 17201     06AB                     l1539:
 17202     06AB  1C2E               	btfss	___fladd@b^(0+128),0
 17203     06AC  2EAE               	goto	u5131
 17204     06AD  2EAF               	goto	u5130
 17205     06AE                     u5131:
 17206     06AE  2EB0               	goto	l4780
 17207     06AF                     u5130:
 17208     06AF  2EA8               	goto	l4776
 17209     06B0                     l4780:
 17210     06B0  083F               	movf	___fladd@aexp^(0+128),w
 17211     06B1  1903               	btfsc	3,2
 17212     06B2  2EB4               	goto	u5141
 17213     06B3  2EB5               	goto	u5140
 17214     06B4                     u5141:
 17215     06B4  2EDE               	goto	l1542
 17216     06B5                     u5140:
 17217     06B5                     l4782:
 17218     06B5  3001               	movlw	1
 17219     06B6  07AE               	addwf	___fladd@b^(0+128),f
 17220     06B7  3000               	movlw	0
 17221     06B8  3DAF               	addwfc	(___fladd@b+1)^(0+128),f
 17222     06B9  3DB0               	addwfc	(___fladd@b+2)^(0+128),f
 17223     06BA  3DB1               	addwfc	(___fladd@b+3)^(0+128),f
 17224     06BB                     l4784:
 17225     06BB  1C31               	btfss	(___fladd@b+3)^(0+128),0
 17226     06BC  2EBE               	goto	u5151
 17227     06BD  2EBF               	goto	u5150
 17228     06BE                     u5151:
 17229     06BE  2EDE               	goto	l1542
 17230     06BF                     u5150:
 17231     06BF                     l4786:
 17232     06BF  082E               	movf	___fladd@b^(0+128),w
 17233     06C0  00B6               	movwf	??___fladd^(0+128)
 17234     06C1  082F               	movf	(___fladd@b+1)^(0+128),w
 17235     06C2  00B7               	movwf	(??___fladd^(0+128)+1)
 17236     06C3  0830               	movf	(___fladd@b+2)^(0+128),w
 17237     06C4  00B8               	movwf	(??___fladd^(0+128)+2)
 17238     06C5  0831               	movf	(___fladd@b+3)^(0+128),w
 17239     06C6  00B9               	movwf	(??___fladd^(0+128)+3)
 17240     06C7  3001               	movlw	1
 17241     06C8  00BA               	movwf	(??___fladd+4)^(0+128)
 17242     06C9                     u5165:
 17243     06C9  37B9               	asrf	(??___fladd^(0+128)+3),f
 17244     06CA  0CB8               	rrf	(??___fladd^(0+128)+2),f
 17245     06CB  0CB7               	rrf	(??___fladd^(0+128)+1),f
 17246     06CC  0CB6               	rrf	??___fladd^(0+128),f
 17247     06CD                     u5160:
 17248     06CD  0BBA               	decfsz	(??___fladd+4)^(0+128),f
 17249     06CE  2EC9               	goto	u5165
 17250     06CF  0839               	movf	(??___fladd+3)^(0+128),w
 17251     06D0  00B1               	movwf	(___fladd@b+3)^(0+128)
 17252     06D1  0838               	movf	(??___fladd+2)^(0+128),w
 17253     06D2  00B0               	movwf	(___fladd@b+2)^(0+128)
 17254     06D3  0837               	movf	(??___fladd+1)^(0+128),w
 17255     06D4  00AF               	movwf	(___fladd@b+1)^(0+128)
 17256     06D5  0836               	movf	??___fladd^(0+128),w
 17257     06D6  00AE               	movwf	___fladd@b^(0+128)
 17258     06D7  0A40               	incf	___fladd@bexp^(0+128),w
 17259     06D8  1903               	btfsc	3,2
 17260     06D9  2EDB               	goto	u5171
 17261     06DA  2EDC               	goto	u5170
 17262     06DB                     u5171:
 17263     06DB  2EDE               	goto	l1542
 17264     06DC                     u5170:
 17265     06DC                     l4788:
 17266     06DC  3001               	movlw	1
 17267     06DD  07C0               	addwf	___fladd@bexp^(0+128),f
 17268     06DE                     l1542:
 17269     06DE  0A40               	incf	___fladd@bexp^(0+128),w
 17270     06DF  1903               	btfsc	3,2
 17271     06E0  2EE2               	goto	u5181
 17272     06E1  2EE3               	goto	u5180
 17273     06E2                     u5181:
 17274     06E2  2EE8               	goto	l4792
 17275     06E3                     u5180:
 17276     06E3                     l4790:
 17277     06E3  0840               	movf	___fladd@bexp^(0+128),w
 17278     06E4  1D03               	btfss	3,2
 17279     06E5  2EE7               	goto	u5191
 17280     06E6  2EE8               	goto	u5190
 17281     06E7                     u5191:
 17282     06E7  2EF6               	goto	l4798
 17283     06E8                     u5190:
 17284     06E8                     l4792:
 17285     06E8  3000               	movlw	0
 17286     06E9  00B1               	movwf	(___fladd@b+3)^(0+128)
 17287     06EA  3000               	movlw	0
 17288     06EB  00B0               	movwf	(___fladd@b+2)^(0+128)
 17289     06EC  3000               	movlw	0
 17290     06ED  00AF               	movwf	(___fladd@b+1)^(0+128)
 17291     06EE  3000               	movlw	0
 17292     06EF  00AE               	movwf	___fladd@b^(0+128)
 17293     06F0                     l4794:
 17294     06F0  0840               	movf	___fladd@bexp^(0+128),w
 17295     06F1  1D03               	btfss	3,2
 17296     06F2  2EF4               	goto	u5201
 17297     06F3  2EF5               	goto	u5200
 17298     06F4                     u5201:
 17299     06F4  2EF6               	goto	l4798
 17300     06F5                     u5200:
 17301     06F5                     l4796:
 17302     06F5  01BE               	clrf	___fladd@signs^(0+128)
 17303     06F6                     l4798:
 17304     06F6  1C40               	btfss	___fladd@bexp^(0+128),0
 17305     06F7  2EF9               	goto	u5211
 17306     06F8  2EFA               	goto	u5210
 17307     06F9                     u5211:
 17308     06F9  2EFC               	goto	l4802
 17309     06FA                     u5210:
 17310     06FA                     l4800:
 17311     06FA  17B0               	bsf	(___fladd@b^(0+128)+2),7
 17312     06FB  2EFE               	goto	l1550
 17313     06FC                     l4802:
 17314     06FC  307F               	movlw	127
 17315     06FD  05B0               	andwf	(___fladd@b^(0+128)+2),f
 17316     06FE                     l1550:
 17317     06FE  0840               	movf	___fladd@bexp^(0+128),w
 17318     06FF  00B6               	movwf	??___fladd^(0+128)
 17319     0700  3001               	movlw	1
 17320     0701                     u5225:
 17321     0701  36B6               	lsrf	??___fladd^(0+128),f
 17322     0702  0B89               	decfsz	9,f
 17323     0703  2F01               	goto	u5225
 17324     0704  0836               	movf	??___fladd^(0+128),w
 17325     0705  00B1               	movwf	(___fladd@b^(0+128)+3)
 17326     0706                     l4804:
 17327     0706  1FBE               	btfss	___fladd@signs^(0+128),7
 17328     0707  2F09               	goto	u5231
 17329     0708  2F0A               	goto	u5230
 17330     0709                     u5231:
 17331     0709  2F0B               	goto	l1551
 17332     070A                     u5230:
 17333     070A                     l4806:
 17334     070A  17B1               	bsf	(___fladd@b^(0+128)+3),7
 17335     070B                     l1551:
 17336     070B                     l1521:
 17337     070B  0008               	return
 17338     070C                     __end_of___fladd:
 17339                           
 17340                           	psect	text59
 17341     1A92                     __ptext59:	
 17342 ;; *************** function _getHoogtesensor *****************
 17343 ;; Defined at:
 17344 ;;		line 37 in file "adcMeasurements.c"
 17345 ;; Parameters:    Size  Location     Type
 17346 ;;		None
 17347 ;; Auto vars:     Size  Location     Type
 17348 ;;		None
 17349 ;; Return value:  Size  Location     Type
 17350 ;;                  2    0[BANK1 ] unsigned short 
 17351 ;; Registers used:
 17352 ;;		wreg
 17353 ;; Tracked objects:
 17354 ;;		On entry : 0/0
 17355 ;;		On exit  : 0/0
 17356 ;;		Unchanged: 0/0
 17357 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 17358 ;;      Params:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0
 17359 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17360 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17361 ;;      Totals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0
 17362 ;;Total ram usage:        2 bytes
 17363 ;; Hardware stack levels used: 1
 17364 ;; Hardware stack levels required when called: 5
 17365 ;; This function calls:
 17366 ;;		Nothing
 17367 ;; This function is called by:
 17368 ;;		_printLogs
 17369 ;;		_position_led_strip
 17370 ;; This function uses a non-reentrant model
 17371 ;;
 17372                           
 17373     1A92                     _getHoogtesensor:	
 17374                           ;psect for function _getHoogtesensor
 17375                           
 17376     1A92                     l5076:	
 17377                           ;incstack = 0
 17378                           ; Regs used in _getHoogtesensor: [wreg]
 17379                           
 17380                           
 17381                           ;adcMeasurements.c: 38:     return ADC_hoogtesensor;
 17382     1A92  0020               	movlb	0	; select bank0
 17383     1A93  085C               	movf	_ADC_hoogtesensor+1,w	;volatile
 17384     1A94  0021               	movlb	1	; select bank1
 17385     1A95  00A1               	movwf	(?_getHoogtesensor+1)^(0+128)
 17386     1A96  0020               	movlb	0	; select bank0
 17387     1A97  085B               	movf	_ADC_hoogtesensor,w	;volatile
 17388     1A98  0021               	movlb	1	; select bank1
 17389     1A99  00A0               	movwf	?_getHoogtesensor^(0+128)
 17390     1A9A                     l857:
 17391     1A9A  0008               	return
 17392     1A9B                     __end_of_getHoogtesensor:
 17393                           
 17394                           	psect	text60
 17395     1A89                     __ptext60:	
 17396 ;; *************** function _TMR4_PeriodMatchCallbackRegister *****************
 17397 ;; Defined at:
 17398 ;;		line 124 in file "mcc_generated_files/timer/src/tmr4.c"
 17399 ;; Parameters:    Size  Location     Type
 17400 ;;  CallbackHand    2    0[BANK1 ] PTR FTN()void 
 17401 ;;		 -> controller(1), 
 17402 ;; Auto vars:     Size  Location     Type
 17403 ;;		None
 17404 ;; Return value:  Size  Location     Type
 17405 ;;                  1    wreg      void 
 17406 ;; Registers used:
 17407 ;;		wreg
 17408 ;; Tracked objects:
 17409 ;;		On entry : 0/0
 17410 ;;		On exit  : 0/0
 17411 ;;		Unchanged: 0/0
 17412 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 17413 ;;      Params:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0
 17414 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17415 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17416 ;;      Totals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0
 17417 ;;Total ram usage:        2 bytes
 17418 ;; Hardware stack levels used: 1
 17419 ;; Hardware stack levels required when called: 5
 17420 ;; This function calls:
 17421 ;;		Nothing
 17422 ;; This function is called by:
 17423 ;;		_main
 17424 ;; This function uses a non-reentrant model
 17425 ;;
 17426                           
 17427     1A89                     _TMR4_PeriodMatchCallbackRegister:	
 17428                           ;psect for function _TMR4_PeriodMatchCallbackRegister
 17429                           
 17430     1A89                     l6192:	
 17431                           ;incstack = 0
 17432                           ; Regs used in _TMR4_PeriodMatchCallbackRegister: [wreg]
 17433                           
 17434                           
 17435                           ;mcc_generated_files/timer/src/tmr4.c: 124: void TMR4_PeriodMatchCallbackRegister(void (
      +                          * CallbackHandler)(void));mcc_generated_files/timer/src/tmr4.c: 125: {;mcc_generated_fil
      +                          es/timer/src/tmr4.c: 126:    TMR4_PeriodMatchCallback = CallbackHandler;
 17436     1A89  0021               	movlb	1	; select bank1
 17437     1A8A  0821               	movf	(TMR4_PeriodMatchCallbackRegister@CallbackHandler+1)^(0+128),w
 17438     1A8B  0022               	movlb	2	; select bank2
 17439     1A8C  00EA               	movwf	(_TMR4_PeriodMatchCallback+1)^(0+256)
 17440     1A8D  0021               	movlb	1	; select bank1
 17441     1A8E  0820               	movf	TMR4_PeriodMatchCallbackRegister@CallbackHandler^(0+128),w
 17442     1A8F  0022               	movlb	2	; select bank2
 17443     1A90  00E9               	movwf	_TMR4_PeriodMatchCallback^(0+256)
 17444     1A91                     l494:
 17445     1A91  0008               	return
 17446     1A92                     __end_of_TMR4_PeriodMatchCallbackRegister:
 17447                           
 17448                           	psect	text61
 17449     1D5C                     __ptext61:	
 17450 ;; *************** function _SYSTEM_Initialize *****************
 17451 ;; Defined at:
 17452 ;;		line 39 in file "mcc_generated_files/system/src/system.c"
 17453 ;; Parameters:    Size  Location     Type
 17454 ;;		None
 17455 ;; Auto vars:     Size  Location     Type
 17456 ;;		None
 17457 ;; Return value:  Size  Location     Type
 17458 ;;                  1    wreg      void 
 17459 ;; Registers used:
 17460 ;;		wreg, status,2, status,0, pclath, cstack
 17461 ;; Tracked objects:
 17462 ;;		On entry : 0/0
 17463 ;;		On exit  : 0/0
 17464 ;;		Unchanged: 0/0
 17465 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 17466 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17467 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17468 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17469 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17470 ;;Total ram usage:        0 bytes
 17471 ;; Hardware stack levels used: 1
 17472 ;; Hardware stack levels required when called: 7
 17473 ;; This function calls:
 17474 ;;		_ADC_Initialize
 17475 ;;		_CLOCK_Initialize
 17476 ;;		_EUSART_Initialize
 17477 ;;		_INTERRUPT_Initialize
 17478 ;;		_PIN_MANAGER_Initialize
 17479 ;;		_PWM_buzzer_Initialize
 17480 ;;		_SPI1_Initialize
 17481 ;;		_TMR2_Initialize
 17482 ;;		_TMR4_Initialize
 17483 ;;		_TMR6_Initialize
 17484 ;;		_pwm_fan_Initialize
 17485 ;; This function is called by:
 17486 ;;		_main
 17487 ;; This function uses a non-reentrant model
 17488 ;;
 17489                           
 17490     1D5C                     _SYSTEM_Initialize:	
 17491                           ;psect for function _SYSTEM_Initialize
 17492                           
 17493     1D5C                     l6174:	
 17494                           ;incstack = 0
 17495                           ; Regs used in _SYSTEM_Initialize: [wreg+status,2+status,0+pclath+cstack]
 17496                           
 17497                           
 17498                           ;mcc_generated_files/system/src/system.c: 41:     CLOCK_Initialize();
 17499     1D5C  319A  2277  319D   	fcall	_CLOCK_Initialize
 17500                           
 17501                           ;mcc_generated_files/system/src/system.c: 42:     PIN_MANAGER_Initialize();
 17502     1D5F  3190  2009  319D   	fcall	_PIN_MANAGER_Initialize
 17503     1D62                     l6176:
 17504                           
 17505                           ;mcc_generated_files/system/src/system.c: 43:     TMR2_Initialize();
 17506     1D62  319B  23B1  319D   	fcall	_TMR2_Initialize
 17507     1D65                     l6178:
 17508                           
 17509                           ;mcc_generated_files/system/src/system.c: 44:     TMR4_Initialize();
 17510     1D65  319B  23C2  319D   	fcall	_TMR4_Initialize
 17511     1D68                     l6180:
 17512                           
 17513                           ;mcc_generated_files/system/src/system.c: 45:     TMR6_Initialize();
 17514     1D68  3188  2000  319D   	fcall	_TMR6_Initialize
 17515     1D6B                     l6182:
 17516                           
 17517                           ;mcc_generated_files/system/src/system.c: 46:     ADC_Initialize();
 17518     1D6B  319C  2468  319D   	fcall	_ADC_Initialize
 17519     1D6E                     l6184:
 17520                           
 17521                           ;mcc_generated_files/system/src/system.c: 47:     EUSART_Initialize();
 17522     1D6E  319E  2695  319D   	fcall	_EUSART_Initialize
 17523     1D71                     l6186:
 17524                           
 17525                           ;mcc_generated_files/system/src/system.c: 48:     PWM_buzzer_Initialize();
 17526     1D71  319B  231A  319D   	fcall	_PWM_buzzer_Initialize
 17527     1D74                     l6188:
 17528                           
 17529                           ;mcc_generated_files/system/src/system.c: 49:     pwm_fan_Initialize();
 17530     1D74  319B  2326  319D   	fcall	_pwm_fan_Initialize
 17531     1D77                     l6190:
 17532                           
 17533                           ;mcc_generated_files/system/src/system.c: 50:     SPI1_Initialize();
 17534     1D77  319A  22DA  319D   	fcall	_SPI1_Initialize
 17535                           
 17536                           ;mcc_generated_files/system/src/system.c: 51:     INTERRUPT_Initialize();
 17537     1D7A  319B  230E  319D   	fcall	_INTERRUPT_Initialize
 17538     1D7D                     l379:
 17539     1D7D  0008               	return
 17540     1D7E                     __end_of_SYSTEM_Initialize:
 17541                           
 17542                           	psect	text62
 17543     1B26                     __ptext62:	
 17544 ;; *************** function _pwm_fan_Initialize *****************
 17545 ;; Defined at:
 17546 ;;		line 45 in file "mcc_generated_files/pwm/src/pwm5.c"
 17547 ;; Parameters:    Size  Location     Type
 17548 ;;		None
 17549 ;; Auto vars:     Size  Location     Type
 17550 ;;		None
 17551 ;; Return value:  Size  Location     Type
 17552 ;;                  1    wreg      void 
 17553 ;; Registers used:
 17554 ;;		wreg, status,2, status,0
 17555 ;; Tracked objects:
 17556 ;;		On entry : 0/0
 17557 ;;		On exit  : 0/0
 17558 ;;		Unchanged: 0/0
 17559 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 17560 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17561 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17562 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17563 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17564 ;;Total ram usage:        0 bytes
 17565 ;; Hardware stack levels used: 1
 17566 ;; Hardware stack levels required when called: 5
 17567 ;; This function calls:
 17568 ;;		Nothing
 17569 ;; This function is called by:
 17570 ;;		_SYSTEM_Initialize
 17571 ;; This function uses a non-reentrant model
 17572 ;;
 17573                           
 17574     1B26                     _pwm_fan_Initialize:	
 17575                           ;psect for function _pwm_fan_Initialize
 17576                           
 17577     1B26                     l5818:	
 17578                           ;incstack = 0
 17579                           ; Regs used in _pwm_fan_Initialize: [wreg+status,2+status,0]
 17580                           
 17581                           
 17582                           ;mcc_generated_files/pwm/src/pwm5.c: 50:     PWM5CON = 0x80;
 17583     1B26  3080               	movlw	128
 17584     1B27  002C               	movlb	12	; select bank12
 17585     1B28  0099               	movwf	25	;volatile
 17586                           
 17587                           ;mcc_generated_files/pwm/src/pwm5.c: 54:     PWM5DCH = 0x7C;
 17588     1B29  307C               	movlw	124
 17589     1B2A  0098               	movwf	24	;volatile
 17590                           
 17591                           ;mcc_generated_files/pwm/src/pwm5.c: 57:     PWM5DCL = 0xC0;
 17592     1B2B  30C0               	movlw	192
 17593     1B2C  0097               	movwf	23	;volatile
 17594     1B2D                     l5820:
 17595                           
 17596                           ;mcc_generated_files/pwm/src/pwm5.c: 61:     PWMTMRSbits.P5TSEL = 0x1;
 17597     1B2D  081F               	movf	31,w	;volatile
 17598     1B2E  39FC               	andlw	-4
 17599     1B2F  3801               	iorlw	1
 17600     1B30  009F               	movwf	31	;volatile
 17601     1B31                     l69:
 17602     1B31  0008               	return
 17603     1B32                     __end_of_pwm_fan_Initialize:
 17604                           
 17605                           	psect	text63
 17606     0800                     __ptext63:	
 17607 ;; *************** function _TMR6_Initialize *****************
 17608 ;; Defined at:
 17609 ;;		line 45 in file "mcc_generated_files/timer/src/tmr6.c"
 17610 ;; Parameters:    Size  Location     Type
 17611 ;;		None
 17612 ;; Auto vars:     Size  Location     Type
 17613 ;;		None
 17614 ;; Return value:  Size  Location     Type
 17615 ;;                  1    wreg      void 
 17616 ;; Registers used:
 17617 ;;		wreg, status,2
 17618 ;; Tracked objects:
 17619 ;;		On entry : 0/0
 17620 ;;		On exit  : 0/0
 17621 ;;		Unchanged: 0/0
 17622 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 17623 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17624 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17625 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17626 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17627 ;;Total ram usage:        0 bytes
 17628 ;; Hardware stack levels used: 1
 17629 ;; Hardware stack levels required when called: 5
 17630 ;; This function calls:
 17631 ;;		Nothing
 17632 ;; This function is called by:
 17633 ;;		_SYSTEM_Initialize
 17634 ;; This function uses a non-reentrant model
 17635 ;;
 17636                           
 17637     0800                     _TMR6_Initialize:	
 17638                           ;psect for function _TMR6_Initialize
 17639                           
 17640     0800                     l5916:	
 17641                           ;incstack = 0
 17642                           ; Regs used in _TMR6_Initialize: [wreg+status,2]
 17643                           
 17644                           
 17645                           ;mcc_generated_files/timer/src/tmr6.c: 48:     PR6 = 0xE;
 17646     0800  300E               	movlw	14
 17647     0801  0028               	movlb	8	; select bank8
 17648     0802  009D               	movwf	29	;volatile
 17649     0803                     l5918:
 17650                           
 17651                           ;mcc_generated_files/timer/src/tmr6.c: 49:     TMR6 = 0x0;
 17652     0803  019C               	clrf	28	;volatile
 17653     0804                     l5920:
 17654                           
 17655                           ;mcc_generated_files/timer/src/tmr6.c: 50:     TMR6_PeriodMatchCallback = TMR6_DefaultPe
      +                          riodMatchCallback;
 17656     0804  304D               	movlw	low _TMR6_DefaultPeriodMatchCallback
 17657     0805  0022               	movlb	2	; select bank2
 17658     0806  00E7               	movwf	_TMR6_PeriodMatchCallback^(0+256)
 17659     0807  301A               	movlw	high _TMR6_DefaultPeriodMatchCallback
 17660     0808  00E8               	movwf	(_TMR6_PeriodMatchCallback^(0+256)+1)
 17661     0809                     l5922:
 17662                           
 17663                           ;mcc_generated_files/timer/src/tmr6.c: 52:     PIR2bits.TMR6IF = 0;
 17664     0809  0020               	movlb	0	; select bank0
 17665     080A  1392               	bcf	18,7	;volatile
 17666     080B                     l5924:
 17667                           
 17668                           ;mcc_generated_files/timer/src/tmr6.c: 53:     T6CON = (1 << 0x0)
 17669     080B  301D               	movlw	29
 17670     080C  0028               	movlb	8	; select bank8
 17671     080D  009E               	movwf	30	;volatile
 17672     080E                     l516:
 17673     080E  0008               	return
 17674     080F                     __end_of_TMR6_Initialize:
 17675                           
 17676                           	psect	text64
 17677     1BC2                     __ptext64:	
 17678 ;; *************** function _TMR4_Initialize *****************
 17679 ;; Defined at:
 17680 ;;		line 45 in file "mcc_generated_files/timer/src/tmr4.c"
 17681 ;; Parameters:    Size  Location     Type
 17682 ;;		None
 17683 ;; Auto vars:     Size  Location     Type
 17684 ;;		None
 17685 ;; Return value:  Size  Location     Type
 17686 ;;                  1    wreg      void 
 17687 ;; Registers used:
 17688 ;;		wreg, status,2
 17689 ;; Tracked objects:
 17690 ;;		On entry : 0/0
 17691 ;;		On exit  : 0/0
 17692 ;;		Unchanged: 0/0
 17693 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 17694 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17695 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17696 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17697 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17698 ;;Total ram usage:        0 bytes
 17699 ;; Hardware stack levels used: 1
 17700 ;; Hardware stack levels required when called: 5
 17701 ;; This function calls:
 17702 ;;		Nothing
 17703 ;; This function is called by:
 17704 ;;		_SYSTEM_Initialize
 17705 ;; This function uses a non-reentrant model
 17706 ;;
 17707                           
 17708     1BC2                     _TMR4_Initialize:	
 17709                           ;psect for function _TMR4_Initialize
 17710                           
 17711     1BC2                     l5904:	
 17712                           ;incstack = 0
 17713                           ; Regs used in _TMR4_Initialize: [wreg+status,2]
 17714                           
 17715                           
 17716                           ;mcc_generated_files/timer/src/tmr4.c: 48:     PR4 = 0xFF;
 17717     1BC2  30FF               	movlw	255
 17718     1BC3  0028               	movlb	8	; select bank8
 17719     1BC4  0096               	movwf	22	;volatile
 17720     1BC5                     l5906:
 17721                           
 17722                           ;mcc_generated_files/timer/src/tmr4.c: 49:     TMR4 = 0x0;
 17723     1BC5  0195               	clrf	21	;volatile
 17724     1BC6                     l5908:
 17725                           
 17726                           ;mcc_generated_files/timer/src/tmr4.c: 50:     TMR4_PeriodMatchCallback = TMR4_DefaultPe
      +                          riodMatchCallback;
 17727     1BC6  304C               	movlw	low _TMR4_DefaultPeriodMatchCallback
 17728     1BC7  0022               	movlb	2	; select bank2
 17729     1BC8  00E9               	movwf	_TMR4_PeriodMatchCallback^(0+256)
 17730     1BC9  301A               	movlw	high _TMR4_DefaultPeriodMatchCallback
 17731     1BCA  00EA               	movwf	(_TMR4_PeriodMatchCallback^(0+256)+1)
 17732     1BCB                     l5910:
 17733                           
 17734                           ;mcc_generated_files/timer/src/tmr4.c: 52:     PIR2bits.TMR4IF = 0;
 17735     1BCB  0020               	movlb	0	; select bank0
 17736     1BCC  1092               	bcf	18,1	;volatile
 17737     1BCD                     l5912:
 17738                           
 17739                           ;mcc_generated_files/timer/src/tmr4.c: 53:     PIE2bits.TMR4IE = 1;
 17740     1BCD  0021               	movlb	1	; select bank1
 17741     1BCE  1492               	bsf	18,1	;volatile
 17742     1BCF                     l5914:
 17743                           
 17744                           ;mcc_generated_files/timer/src/tmr4.c: 54:     T4CON = (1 << 0x0)
 17745     1BCF  3075               	movlw	117
 17746     1BD0  0028               	movlb	8	; select bank8
 17747     1BD1  0097               	movwf	23	;volatile
 17748     1BD2                     l457:
 17749     1BD2  0008               	return
 17750     1BD3                     __end_of_TMR4_Initialize:
 17751                           
 17752                           	psect	text65
 17753     1BB1                     __ptext65:	
 17754 ;; *************** function _TMR2_Initialize *****************
 17755 ;; Defined at:
 17756 ;;		line 45 in file "mcc_generated_files/timer/src/tmr2.c"
 17757 ;; Parameters:    Size  Location     Type
 17758 ;;		None
 17759 ;; Auto vars:     Size  Location     Type
 17760 ;;		None
 17761 ;; Return value:  Size  Location     Type
 17762 ;;                  1    wreg      void 
 17763 ;; Registers used:
 17764 ;;		wreg, status,2
 17765 ;; Tracked objects:
 17766 ;;		On entry : 0/0
 17767 ;;		On exit  : 0/0
 17768 ;;		Unchanged: 0/0
 17769 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 17770 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17771 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17772 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17773 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17774 ;;Total ram usage:        0 bytes
 17775 ;; Hardware stack levels used: 1
 17776 ;; Hardware stack levels required when called: 5
 17777 ;; This function calls:
 17778 ;;		Nothing
 17779 ;; This function is called by:
 17780 ;;		_SYSTEM_Initialize
 17781 ;; This function uses a non-reentrant model
 17782 ;;
 17783                           
 17784     1BB1                     _TMR2_Initialize:	
 17785                           ;psect for function _TMR2_Initialize
 17786                           
 17787     1BB1                     l5892:	
 17788                           ;incstack = 0
 17789                           ; Regs used in _TMR2_Initialize: [wreg+status,2]
 17790                           
 17791                           
 17792                           ;mcc_generated_files/timer/src/tmr2.c: 48:     PR2 = 0xF9;
 17793     1BB1  30F9               	movlw	249
 17794     1BB2  0020               	movlb	0	; select bank0
 17795     1BB3  009E               	movwf	30	;volatile
 17796     1BB4                     l5894:
 17797                           
 17798                           ;mcc_generated_files/timer/src/tmr2.c: 49:     TMR2 = 0x0;
 17799     1BB4  019D               	clrf	29	;volatile
 17800     1BB5                     l5896:
 17801                           
 17802                           ;mcc_generated_files/timer/src/tmr2.c: 50:     TMR2_PeriodMatchCallback = TMR2_DefaultPe
      +                          riodMatchCallback;
 17803     1BB5  304B               	movlw	low _TMR2_DefaultPeriodMatchCallback
 17804     1BB6  0022               	movlb	2	; select bank2
 17805     1BB7  00EB               	movwf	_TMR2_PeriodMatchCallback^(0+256)
 17806     1BB8  301A               	movlw	high _TMR2_DefaultPeriodMatchCallback
 17807     1BB9  00EC               	movwf	(_TMR2_PeriodMatchCallback^(0+256)+1)
 17808     1BBA                     l5898:
 17809                           
 17810                           ;mcc_generated_files/timer/src/tmr2.c: 52:     PIR1bits.TMR2IF = 0;
 17811     1BBA  0020               	movlb	0	; select bank0
 17812     1BBB  1091               	bcf	17,1	;volatile
 17813     1BBC                     l5900:
 17814                           
 17815                           ;mcc_generated_files/timer/src/tmr2.c: 53:     PIE1bits.TMR2IE = 1;
 17816     1BBC  0021               	movlb	1	; select bank1
 17817     1BBD  1491               	bsf	17,1	;volatile
 17818     1BBE                     l5902:
 17819                           
 17820                           ;mcc_generated_files/timer/src/tmr2.c: 54:     T2CON = (2 << 0x0)
 17821     1BBE  301E               	movlw	30
 17822     1BBF  0020               	movlb	0	; select bank0
 17823     1BC0  009F               	movwf	31	;volatile
 17824     1BC1                     l398:
 17825     1BC1  0008               	return
 17826     1BC2                     __end_of_TMR2_Initialize:
 17827                           
 17828                           	psect	text66
 17829     1ADA                     __ptext66:	
 17830 ;; *************** function _SPI1_Initialize *****************
 17831 ;; Defined at:
 17832 ;;		line 60 in file "mcc_generated_files/spi/src/mssp1.c"
 17833 ;; Parameters:    Size  Location     Type
 17834 ;;		None
 17835 ;; Auto vars:     Size  Location     Type
 17836 ;;		None
 17837 ;; Return value:  Size  Location     Type
 17838 ;;                  1    wreg      void 
 17839 ;; Registers used:
 17840 ;;		status,2
 17841 ;; Tracked objects:
 17842 ;;		On entry : 0/0
 17843 ;;		On exit  : 0/0
 17844 ;;		Unchanged: 0/0
 17845 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 17846 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17847 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17848 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17849 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17850 ;;Total ram usage:        0 bytes
 17851 ;; Hardware stack levels used: 1
 17852 ;; Hardware stack levels required when called: 5
 17853 ;; This function calls:
 17854 ;;		Nothing
 17855 ;; This function is called by:
 17856 ;;		_SYSTEM_Initialize
 17857 ;; This function uses a non-reentrant model
 17858 ;;
 17859                           
 17860     1ADA                     _SPI1_Initialize:	
 17861                           ;psect for function _SPI1_Initialize
 17862                           
 17863     1ADA                     l5826:	
 17864                           ;incstack = 0
 17865                           ; Regs used in _SPI1_Initialize: [status,2]
 17866                           
 17867                           
 17868                           ;mcc_generated_files/spi/src/mssp1.c: 63:     PIE1bits.SSP1IE = 0;
 17869     1ADA  0021               	movlb	1	; select bank1
 17870     1ADB  1191               	bcf	17,3	;volatile
 17871                           
 17872                           ;mcc_generated_files/spi/src/mssp1.c: 64:     PIR1bits.SSP1IF = 0;
 17873     1ADC  0020               	movlb	0	; select bank0
 17874     1ADD  1191               	bcf	17,3	;volatile
 17875     1ADE                     l5828:
 17876                           
 17877                           ;mcc_generated_files/spi/src/mssp1.c: 66:     SSP1STAT = 0x00;
 17878     1ADE  0024               	movlb	4	; select bank4
 17879     1ADF  0194               	clrf	20	;volatile
 17880                           
 17881                           ;mcc_generated_files/spi/src/mssp1.c: 67:     SSP1CON1 = 0x00;
 17882     1AE0  0195               	clrf	21	;volatile
 17883                           
 17884                           ;mcc_generated_files/spi/src/mssp1.c: 68:     SSP1CON3 = 0x00;
 17885     1AE1  0197               	clrf	23	;volatile
 17886                           
 17887                           ;mcc_generated_files/spi/src/mssp1.c: 69:     SSP1ADD = 0x00;
 17888     1AE2  0192               	clrf	18	;volatile
 17889     1AE3                     l133:
 17890     1AE3  0008               	return
 17891     1AE4                     __end_of_SPI1_Initialize:
 17892                           
 17893                           	psect	text67
 17894     1B1A                     __ptext67:	
 17895 ;; *************** function _PWM_buzzer_Initialize *****************
 17896 ;; Defined at:
 17897 ;;		line 45 in file "mcc_generated_files/pwm/src/pwm6.c"
 17898 ;; Parameters:    Size  Location     Type
 17899 ;;		None
 17900 ;; Auto vars:     Size  Location     Type
 17901 ;;		None
 17902 ;; Return value:  Size  Location     Type
 17903 ;;                  1    wreg      void 
 17904 ;; Registers used:
 17905 ;;		wreg, status,2, status,0
 17906 ;; Tracked objects:
 17907 ;;		On entry : 0/0
 17908 ;;		On exit  : 0/0
 17909 ;;		Unchanged: 0/0
 17910 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 17911 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17912 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17913 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17914 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17915 ;;Total ram usage:        0 bytes
 17916 ;; Hardware stack levels used: 1
 17917 ;; Hardware stack levels required when called: 5
 17918 ;; This function calls:
 17919 ;;		Nothing
 17920 ;; This function is called by:
 17921 ;;		_SYSTEM_Initialize
 17922 ;; This function uses a non-reentrant model
 17923 ;;
 17924                           
 17925     1B1A                     _PWM_buzzer_Initialize:	
 17926                           ;psect for function _PWM_buzzer_Initialize
 17927                           
 17928     1B1A                     l5822:	
 17929                           ;incstack = 0
 17930                           ; Regs used in _PWM_buzzer_Initialize: [wreg+status,2+status,0]
 17931                           
 17932                           
 17933                           ;mcc_generated_files/pwm/src/pwm6.c: 50:     PWM6CON = 0x80;
 17934     1B1A  3080               	movlw	128
 17935     1B1B  002C               	movlb	12	; select bank12
 17936     1B1C  009C               	movwf	28	;volatile
 17937                           
 17938                           ;mcc_generated_files/pwm/src/pwm6.c: 53:     PWM6DCH = 0x7C;
 17939     1B1D  307C               	movlw	124
 17940     1B1E  009B               	movwf	27	;volatile
 17941                           
 17942                           ;mcc_generated_files/pwm/src/pwm6.c: 56:     PWM6DCL = 0xC0;
 17943     1B1F  30C0               	movlw	192
 17944     1B20  009A               	movwf	26	;volatile
 17945     1B21                     l5824:
 17946                           
 17947                           ;mcc_generated_files/pwm/src/pwm6.c: 60:     PWMTMRSbits.P6TSEL = 0x1;
 17948     1B21  081F               	movf	31,w	;volatile
 17949     1B22  39F3               	andlw	-13
 17950     1B23  3804               	iorlw	4
 17951     1B24  009F               	movwf	31	;volatile
 17952     1B25                     l83:
 17953     1B25  0008               	return
 17954     1B26                     __end_of_PWM_buzzer_Initialize:
 17955                           
 17956                           	psect	text68
 17957     1009                     __ptext68:	
 17958 ;; *************** function _PIN_MANAGER_Initialize *****************
 17959 ;; Defined at:
 17960 ;;		line 38 in file "mcc_generated_files/system/src/pins.c"
 17961 ;; Parameters:    Size  Location     Type
 17962 ;;		None
 17963 ;; Auto vars:     Size  Location     Type
 17964 ;;		None
 17965 ;; Return value:  Size  Location     Type
 17966 ;;                  1    wreg      void 
 17967 ;; Registers used:
 17968 ;;		status,2
 17969 ;; Tracked objects:
 17970 ;;		On entry : 0/0
 17971 ;;		On exit  : 0/0
 17972 ;;		Unchanged: 0/0
 17973 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 17974 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17975 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17976 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17977 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17978 ;;Total ram usage:        0 bytes
 17979 ;; Hardware stack levels used: 1
 17980 ;; Hardware stack levels required when called: 5
 17981 ;; This function calls:
 17982 ;;		Nothing
 17983 ;; This function is called by:
 17984 ;;		_SYSTEM_Initialize
 17985 ;; This function uses a non-reentrant model
 17986 ;;
 17987                           
 17988     1009                     _PIN_MANAGER_Initialize:	
 17989                           ;psect for function _PIN_MANAGER_Initialize
 17990                           
 17991     1009                     l5852:	
 17992                           ;incstack = 0
 17993                           ; Regs used in _PIN_MANAGER_Initialize: [status,2]
 17994                           
 17995                           
 17996                           ;mcc_generated_files/system/src/pins.c: 43:     LATA = 0x0;
 17997     1009  0022               	movlb	2	; select bank2
 17998     100A  018C               	clrf	12	;volatile
 17999                           
 18000                           ;mcc_generated_files/system/src/pins.c: 44:     LATB = 0x0;
 18001     100B  018D               	clrf	13	;volatile
 18002                           
 18003                           ;mcc_generated_files/system/src/pins.c: 45:     LATC = 0x0;
 18004     100C  018E               	clrf	14	;volatile
 18005     100D                     l5854:
 18006                           
 18007                           ;mcc_generated_files/system/src/pins.c: 50:     TRISA = 0x19;
 18008     100D  3019               	movlw	25
 18009     100E  0021               	movlb	1	; select bank1
 18010     100F  008C               	movwf	12	;volatile
 18011     1010                     l5856:
 18012                           
 18013                           ;mcc_generated_files/system/src/pins.c: 51:     TRISB = 0x20;
 18014     1010  3020               	movlw	32
 18015     1011  008D               	movwf	13	;volatile
 18016     1012                     l5858:
 18017                           
 18018                           ;mcc_generated_files/system/src/pins.c: 52:     TRISC = 0x1F;
 18019     1012  301F               	movlw	31
 18020     1013  008E               	movwf	14	;volatile
 18021     1014                     l5860:
 18022                           
 18023                           ;mcc_generated_files/system/src/pins.c: 57:     ANSELA = 0x10;
 18024     1014  3010               	movlw	16
 18025     1015  0023               	movlb	3	; select bank3
 18026     1016  008C               	movwf	12	;volatile
 18027     1017                     l5862:
 18028                           
 18029                           ;mcc_generated_files/system/src/pins.c: 58:     ANSELB = 0x80;
 18030     1017  3080               	movlw	128
 18031     1018  008D               	movwf	13	;volatile
 18032     1019                     l5864:
 18033                           
 18034                           ;mcc_generated_files/system/src/pins.c: 59:     ANSELC = 0xBF;
 18035     1019  30BF               	movlw	191
 18036     101A  008E               	movwf	14	;volatile
 18037                           
 18038                           ;mcc_generated_files/system/src/pins.c: 64:     WPUA = 0x0;
 18039     101B  0024               	movlb	4	; select bank4
 18040     101C  018C               	clrf	12	;volatile
 18041                           
 18042                           ;mcc_generated_files/system/src/pins.c: 65:     WPUB = 0x0;
 18043     101D  018D               	clrf	13	;volatile
 18044                           
 18045                           ;mcc_generated_files/system/src/pins.c: 66:     WPUC = 0x0;
 18046     101E  018E               	clrf	14	;volatile
 18047                           
 18048                           ;mcc_generated_files/system/src/pins.c: 72:     ODCONA = 0x0;
 18049     101F  0025               	movlb	5	; select bank5
 18050     1020  018C               	clrf	12	;volatile
 18051                           
 18052                           ;mcc_generated_files/system/src/pins.c: 73:     ODCONB = 0x0;
 18053     1021  018D               	clrf	13	;volatile
 18054                           
 18055                           ;mcc_generated_files/system/src/pins.c: 74:     ODCONC = 0x0;
 18056     1022  018E               	clrf	14	;volatile
 18057     1023                     l5866:
 18058                           
 18059                           ;mcc_generated_files/system/src/pins.c: 78:     SLRCONA = 0x37;
 18060     1023  3037               	movlw	55
 18061     1024  0026               	movlb	6	; select bank6
 18062     1025  008C               	movwf	12	;volatile
 18063     1026                     l5868:
 18064                           
 18065                           ;mcc_generated_files/system/src/pins.c: 79:     SLRCONB = 0xF0;
 18066     1026  30F0               	movlw	240
 18067     1027  008D               	movwf	13	;volatile
 18068     1028                     l5870:
 18069                           
 18070                           ;mcc_generated_files/system/src/pins.c: 80:     SLRCONC = 0xFF;
 18071     1028  30FF               	movlw	255
 18072     1029  008E               	movwf	14	;volatile
 18073     102A                     l5872:
 18074                           
 18075                           ;mcc_generated_files/system/src/pins.c: 84:     INLVLA = 0x3F;
 18076     102A  303F               	movlw	63
 18077     102B  0027               	movlb	7	; select bank7
 18078     102C  008C               	movwf	12	;volatile
 18079     102D                     l5874:
 18080                           
 18081                           ;mcc_generated_files/system/src/pins.c: 85:     INLVLB = 0xF0;
 18082     102D  30F0               	movlw	240
 18083     102E  008D               	movwf	13	;volatile
 18084     102F                     l5876:
 18085                           
 18086                           ;mcc_generated_files/system/src/pins.c: 86:     INLVLC = 0xFF;
 18087     102F  30FF               	movlw	255
 18088     1030  008E               	movwf	14	;volatile
 18089                           
 18090                           ;mcc_generated_files/system/src/pins.c: 91:     SSP1DATPPS = 0x0;
 18091     1031  003C               	movlb	28	; select bank28
 18092     1032  01A1               	clrf	33	;volatile
 18093     1033                     l5878:
 18094                           
 18095                           ;mcc_generated_files/system/src/pins.c: 92:     RXPPS = 0xD;
 18096     1033  300D               	movlw	13
 18097     1034  00A4               	movwf	36	;volatile
 18098     1035                     l5880:
 18099                           
 18100                           ;mcc_generated_files/system/src/pins.c: 93:     RB4PPS = 25;
 18101     1035  3019               	movlw	25
 18102     1036  003D               	movlb	29	; select bank29
 18103     1037  009C               	movwf	28	;volatile
 18104     1038                     l5882:
 18105                           
 18106                           ;mcc_generated_files/system/src/pins.c: 94:     RC5PPS = 2;
 18107     1038  3002               	movlw	2
 18108     1039  00A5               	movwf	37	;volatile
 18109     103A                     l5884:
 18110                           
 18111                           ;mcc_generated_files/system/src/pins.c: 95:     RC7PPS = 3;
 18112     103A  3003               	movlw	3
 18113     103B  00A7               	movwf	39	;volatile
 18114     103C                     l5886:
 18115                           
 18116                           ;mcc_generated_files/system/src/pins.c: 96:     RB7PPS = 20;
 18117     103C  3014               	movlw	20
 18118     103D  009F               	movwf	31	;volatile
 18119     103E                     l5888:
 18120                           
 18121                           ;mcc_generated_files/system/src/pins.c: 97:     SSP1CLKPPS = 0xE;
 18122     103E  300E               	movlw	14
 18123     103F  003C               	movlb	28	; select bank28
 18124     1040  00A0               	movwf	32	;volatile
 18125     1041                     l5890:
 18126                           
 18127                           ;mcc_generated_files/system/src/pins.c: 98:     RB6PPS = 24;
 18128     1041  3018               	movlw	24
 18129     1042  003D               	movlb	29	; select bank29
 18130     1043  009E               	movwf	30	;volatile
 18131                           
 18132                           ;mcc_generated_files/system/src/pins.c: 107:     IOCAP = 0x0;
 18133     1044  0027               	movlb	7	; select bank7
 18134     1045  0191               	clrf	17	;volatile
 18135                           
 18136                           ;mcc_generated_files/system/src/pins.c: 108:     IOCAN = 0x0;
 18137     1046  0192               	clrf	18	;volatile
 18138                           
 18139                           ;mcc_generated_files/system/src/pins.c: 109:     IOCAF = 0x0;
 18140     1047  0193               	clrf	19	;volatile
 18141                           
 18142                           ;mcc_generated_files/system/src/pins.c: 110:     IOCBP = 0x0;
 18143     1048  0194               	clrf	20	;volatile
 18144                           
 18145                           ;mcc_generated_files/system/src/pins.c: 111:     IOCBN = 0x0;
 18146     1049  0195               	clrf	21	;volatile
 18147                           
 18148                           ;mcc_generated_files/system/src/pins.c: 112:     IOCBF = 0x0;
 18149     104A  0196               	clrf	22	;volatile
 18150                           
 18151                           ;mcc_generated_files/system/src/pins.c: 113:     IOCCP = 0x0;
 18152     104B  0197               	clrf	23	;volatile
 18153                           
 18154                           ;mcc_generated_files/system/src/pins.c: 114:     IOCCN = 0x0;
 18155     104C  0198               	clrf	24	;volatile
 18156                           
 18157                           ;mcc_generated_files/system/src/pins.c: 115:     IOCCF = 0x0;
 18158     104D  0199               	clrf	25	;volatile
 18159     104E                     l351:
 18160     104E  0008               	return
 18161     104F                     __end_of_PIN_MANAGER_Initialize:
 18162                           
 18163                           	psect	text69
 18164     1B0E                     __ptext69:	
 18165 ;; *************** function _INTERRUPT_Initialize *****************
 18166 ;; Defined at:
 18167 ;;		line 40 in file "mcc_generated_files/system/src/interrupt.c"
 18168 ;; Parameters:    Size  Location     Type
 18169 ;;		None
 18170 ;; Auto vars:     Size  Location     Type
 18171 ;;		None
 18172 ;; Return value:  Size  Location     Type
 18173 ;;                  1    wreg      void 
 18174 ;; Registers used:
 18175 ;;		wreg, status,2, status,0, pclath, cstack
 18176 ;; Tracked objects:
 18177 ;;		On entry : 0/0
 18178 ;;		On exit  : 0/0
 18179 ;;		Unchanged: 0/0
 18180 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 18181 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18182 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18183 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18184 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18185 ;;Total ram usage:        0 bytes
 18186 ;; Hardware stack levels used: 1
 18187 ;; Hardware stack levels required when called: 6
 18188 ;; This function calls:
 18189 ;;		_INT_SetInterruptHandler
 18190 ;; This function is called by:
 18191 ;;		_SYSTEM_Initialize
 18192 ;; This function uses a non-reentrant model
 18193 ;;
 18194                           
 18195     1B0E                     _INTERRUPT_Initialize:	
 18196                           ;psect for function _INTERRUPT_Initialize
 18197                           
 18198     1B0E                     l5844:	
 18199                           ;incstack = 0
 18200                           ; Regs used in _INTERRUPT_Initialize: [wreg+status,2+status,0+pclath+cstack]
 18201                           
 18202                           
 18203                           ;mcc_generated_files/system/src/interrupt.c: 44:     (PIR0bits.INTF = 0);
 18204     1B0E  0020               	movlb	0	; select bank0
 18205     1B0F  1010               	bcf	16,0	;volatile
 18206                           
 18207                           ;mcc_generated_files/system/src/interrupt.c: 45:     (INTCONbits.INTEDG = 1);
 18208     1B10  140B               	bsf	11,0	;volatile
 18209     1B11                     l5846:
 18210                           
 18211                           ;mcc_generated_files/system/src/interrupt.c: 47:     INT_SetInterruptHandler(INT_Default
      +                          InterruptHandler);
 18212     1B11  3000               	movlw	0
 18213     1B12  0021               	movlb	1	; select bank1
 18214     1B13  00A0               	movwf	INT_SetInterruptHandler@InterruptHandler^(0+128)
 18215     1B14  3000               	movlw	0
 18216     1B15  00A1               	movwf	(INT_SetInterruptHandler@InterruptHandler^(0+128)+1)
 18217     1B16  319A  2280  319B   	fcall	_INT_SetInterruptHandler
 18218     1B19                     l227:
 18219     1B19  0008               	return
 18220     1B1A                     __end_of_INTERRUPT_Initialize:
 18221                           
 18222                           	psect	text70
 18223     1A80                     __ptext70:	
 18224 ;; *************** function _INT_SetInterruptHandler *****************
 18225 ;; Defined at:
 18226 ;;		line 113 in file "mcc_generated_files/system/src/interrupt.c"
 18227 ;; Parameters:    Size  Location     Type
 18228 ;;  InterruptHan    2    0[BANK1 ] PTR FTN()void 
 18229 ;;		 -> INT_DefaultInterruptHandler(1), 
 18230 ;; Auto vars:     Size  Location     Type
 18231 ;;		None
 18232 ;; Return value:  Size  Location     Type
 18233 ;;                  1    wreg      void 
 18234 ;; Registers used:
 18235 ;;		wreg
 18236 ;; Tracked objects:
 18237 ;;		On entry : 0/0
 18238 ;;		On exit  : 0/0
 18239 ;;		Unchanged: 0/0
 18240 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 18241 ;;      Params:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0
 18242 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18243 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18244 ;;      Totals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0
 18245 ;;Total ram usage:        2 bytes
 18246 ;; Hardware stack levels used: 1
 18247 ;; Hardware stack levels required when called: 5
 18248 ;; This function calls:
 18249 ;;		Nothing
 18250 ;; This function is called by:
 18251 ;;		_INTERRUPT_Initialize
 18252 ;; This function uses a non-reentrant model
 18253 ;;
 18254                           
 18255     1A80                     _INT_SetInterruptHandler:	
 18256                           ;psect for function _INT_SetInterruptHandler
 18257                           
 18258     1A80                     l5128:	
 18259                           ;incstack = 0
 18260                           ; Regs used in _INT_SetInterruptHandler: [wreg]
 18261                           
 18262                           
 18263                           ;mcc_generated_files/system/src/interrupt.c: 114:     INT_InterruptHandler = InterruptHa
      +                          ndler;
 18264     1A80  0021               	movlb	1	; select bank1
 18265     1A81  0821               	movf	(INT_SetInterruptHandler@InterruptHandler+1)^(0+128),w
 18266     1A82  0020               	movlb	0	; select bank0
 18267     1A83  00E2               	movwf	_INT_InterruptHandler+1
 18268     1A84  0021               	movlb	1	; select bank1
 18269     1A85  0820               	movf	INT_SetInterruptHandler@InterruptHandler^(0+128),w
 18270     1A86  0020               	movlb	0	; select bank0
 18271     1A87  00E1               	movwf	_INT_InterruptHandler
 18272     1A88                     l254:
 18273     1A88  0008               	return
 18274     1A89                     __end_of_INT_SetInterruptHandler:
 18275                           
 18276                           	psect	text71
 18277     1E95                     __ptext71:	
 18278 ;; *************** function _EUSART_Initialize *****************
 18279 ;; Defined at:
 18280 ;;		line 131 in file "mcc_generated_files/uart/src/eusart.c"
 18281 ;; Parameters:    Size  Location     Type
 18282 ;;		None
 18283 ;; Auto vars:     Size  Location     Type
 18284 ;;		None
 18285 ;; Return value:  Size  Location     Type
 18286 ;;                  1    wreg      void 
 18287 ;; Registers used:
 18288 ;;		wreg, status,2, status,0, pclath, cstack
 18289 ;; Tracked objects:
 18290 ;;		On entry : 0/0
 18291 ;;		On exit  : 0/0
 18292 ;;		Unchanged: 0/0
 18293 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 18294 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18295 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18296 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18297 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18298 ;;Total ram usage:        0 bytes
 18299 ;; Hardware stack levels used: 1
 18300 ;; Hardware stack levels required when called: 6
 18301 ;; This function calls:
 18302 ;;		_EUSART_FramingErrorCallbackRegister
 18303 ;;		_EUSART_OverrunErrorCallbackRegister
 18304 ;; This function is called by:
 18305 ;;		_SYSTEM_Initialize
 18306 ;; This function uses a non-reentrant model
 18307 ;;
 18308                           
 18309     1E95                     _EUSART_Initialize:	
 18310                           ;psect for function _EUSART_Initialize
 18311                           
 18312     1E95                     l5926:	
 18313                           ;incstack = 0
 18314                           ; Regs used in _EUSART_Initialize: [wreg+status,2+status,0+pclath+cstack]
 18315                           
 18316                           
 18317                           ;mcc_generated_files/uart/src/eusart.c: 133:     PIE1bits.RCIE = 0;
 18318     1E95  0021               	movlb	1	; select bank1
 18319     1E96  1291               	bcf	17,5	;volatile
 18320     1E97                     l5928:
 18321                           
 18322                           ;mcc_generated_files/uart/src/eusart.c: 134:      EUSART_RxInterruptHandler = EUSART_Rec
      +                          eiveISR;
 18323     1E97  3007               	movlw	low _EUSART_ReceiveISR
 18324     1E98  0023               	movlb	3	; select bank3
 18325     1E99  00EC               	movwf	_EUSART_RxInterruptHandler^(0+384)
 18326     1E9A  301F               	movlw	high _EUSART_ReceiveISR
 18327     1E9B  00ED               	movwf	(_EUSART_RxInterruptHandler^(0+384)+1)
 18328     1E9C                     l5930:
 18329                           
 18330                           ;mcc_generated_files/uart/src/eusart.c: 136:     PIE1bits.TXIE = 0;
 18331     1E9C  0021               	movlb	1	; select bank1
 18332     1E9D  1211               	bcf	17,4	;volatile
 18333                           
 18334                           ;mcc_generated_files/uart/src/eusart.c: 137:     EUSART_TxInterruptHandler = EUSART_Tran
      +                          smitISR;
 18335     1E9E  30E0               	movlw	low _EUSART_TransmitISR
 18336     1E9F  0023               	movlb	3	; select bank3
 18337     1EA0  00EE               	movwf	_EUSART_TxInterruptHandler^(0+384)
 18338     1EA1  301C               	movlw	high _EUSART_TransmitISR
 18339     1EA2  00EF               	movwf	(_EUSART_TxInterruptHandler^(0+384)+1)
 18340     1EA3                     l5932:
 18341                           
 18342                           ;mcc_generated_files/uart/src/eusart.c: 142:     BAUD1CON = 0x48;
 18343     1EA3  3048               	movlw	72
 18344     1EA4  009F               	movwf	31	;volatile
 18345     1EA5                     l5934:
 18346                           
 18347                           ;mcc_generated_files/uart/src/eusart.c: 144:     RC1STA = 0x90;
 18348     1EA5  3090               	movlw	144
 18349     1EA6  009D               	movwf	29	;volatile
 18350     1EA7                     l5936:
 18351                           
 18352                           ;mcc_generated_files/uart/src/eusart.c: 146:     TX1STA = 0x26;
 18353     1EA7  3026               	movlw	38
 18354     1EA8  009E               	movwf	30	;volatile
 18355     1EA9                     l5938:
 18356                           
 18357                           ;mcc_generated_files/uart/src/eusart.c: 148:     SP1BRGL = 0x40;
 18358     1EA9  3040               	movlw	64
 18359     1EAA  009B               	movwf	27	;volatile
 18360     1EAB                     l5940:
 18361                           
 18362                           ;mcc_generated_files/uart/src/eusart.c: 150:     SP1BRGH = 0x3;
 18363     1EAB  3003               	movlw	3
 18364     1EAC  009C               	movwf	28	;volatile
 18365     1EAD                     l5942:
 18366                           
 18367                           ;mcc_generated_files/uart/src/eusart.c: 152:     EUSART_FramingErrorCallbackRegister(EUS
      +                          ART_DefaultFramingErrorCallback);
 18368     1EAD  304A               	movlw	low _EUSART_DefaultFramingErrorCallback
 18369     1EAE  0021               	movlb	1	; select bank1
 18370     1EAF  00A0               	movwf	EUSART_FramingErrorCallbackRegister@callbackHandler^(0+128)
 18371     1EB0  301A               	movlw	high _EUSART_DefaultFramingErrorCallback
 18372     1EB1  00A1               	movwf	(EUSART_FramingErrorCallbackRegister@callbackHandler^(0+128)+1)
 18373     1EB2  319B  2393  319E   	fcall	_EUSART_FramingErrorCallbackRegister
 18374     1EB5                     l5944:
 18375                           
 18376                           ;mcc_generated_files/uart/src/eusart.c: 153:     EUSART_OverrunErrorCallbackRegister(EUS
      +                          ART_DefaultOverrunErrorCallback);
 18377     1EB5  304E               	movlw	low _EUSART_DefaultOverrunErrorCallback
 18378     1EB6  0021               	movlb	1	; select bank1
 18379     1EB7  00A0               	movwf	EUSART_OverrunErrorCallbackRegister@callbackHandler^(0+128)
 18380     1EB8  301A               	movlw	high _EUSART_DefaultOverrunErrorCallback
 18381     1EB9  00A1               	movwf	(EUSART_OverrunErrorCallbackRegister@callbackHandler^(0+128)+1)
 18382     1EBA  319B  23A2  319E   	fcall	_EUSART_OverrunErrorCallbackRegister
 18383     1EBD                     l5946:
 18384                           
 18385                           ;mcc_generated_files/uart/src/eusart.c: 154:     eusartRxLastError.status = 0;
 18386     1EBD  0022               	movlb	2	; select bank2
 18387     1EBE  01DB               	clrf	_eusartRxLastError^(0+256)	;volatile
 18388     1EBF  01DC               	clrf	(_eusartRxLastError+1)^(0+256)	;volatile
 18389     1EC0                     l5948:
 18390                           
 18391                           ;mcc_generated_files/uart/src/eusart.c: 156:     eusartTxHead = 0;
 18392     1EC0  0020               	movlb	0	; select bank0
 18393     1EC1  01EC               	clrf	_eusartTxHead	;volatile
 18394     1EC2                     l5950:
 18395                           
 18396                           ;mcc_generated_files/uart/src/eusart.c: 157:     eusartTxTail = 0;
 18397     1EC2  01EB               	clrf	_eusartTxTail	;volatile
 18398     1EC3                     l5952:
 18399                           
 18400                           ;mcc_generated_files/uart/src/eusart.c: 158:     eusartTxBufferRemaining = sizeof(eusart
      +                          TxBuffer);
 18401     1EC3  3008               	movlw	8
 18402     1EC4  00EA               	movwf	_eusartTxBufferRemaining	;volatile
 18403     1EC5                     l5954:
 18404                           
 18405                           ;mcc_generated_files/uart/src/eusart.c: 160:     eusartRxHead = 0;
 18406     1EC5  01E9               	clrf	_eusartRxHead	;volatile
 18407     1EC6                     l5956:
 18408                           
 18409                           ;mcc_generated_files/uart/src/eusart.c: 161:     eusartRxTail = 0;
 18410     1EC6  01E8               	clrf	_eusartRxTail	;volatile
 18411     1EC7                     l5958:
 18412                           
 18413                           ;mcc_generated_files/uart/src/eusart.c: 162:     eusartRxCount = 0;
 18414     1EC7  01E7               	clrf	_eusartRxCount	;volatile
 18415     1EC8                     l5960:
 18416                           
 18417                           ;mcc_generated_files/uart/src/eusart.c: 164:     PIE1bits.RCIE = 1;
 18418     1EC8  0021               	movlb	1	; select bank1
 18419     1EC9  1691               	bsf	17,5	;volatile
 18420     1ECA                     l656:
 18421     1ECA  0008               	return
 18422     1ECB                     __end_of_EUSART_Initialize:
 18423                           
 18424                           	psect	text72
 18425     1BA2                     __ptext72:	
 18426 ;; *************** function _EUSART_OverrunErrorCallbackRegister *****************
 18427 ;; Defined at:
 18428 ;;		line 438 in file "mcc_generated_files/uart/src/eusart.c"
 18429 ;; Parameters:    Size  Location     Type
 18430 ;;  callbackHand    2    0[BANK1 ] PTR FTN()void 
 18431 ;;		 -> EUSART_DefaultOverrunErrorCallback(1), 
 18432 ;; Auto vars:     Size  Location     Type
 18433 ;;		None
 18434 ;; Return value:  Size  Location     Type
 18435 ;;                  1    wreg      void 
 18436 ;; Registers used:
 18437 ;;		wreg, status,2, status,0
 18438 ;; Tracked objects:
 18439 ;;		On entry : 0/0
 18440 ;;		On exit  : 0/0
 18441 ;;		Unchanged: 0/0
 18442 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 18443 ;;      Params:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0
 18444 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18445 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18446 ;;      Totals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0
 18447 ;;Total ram usage:        2 bytes
 18448 ;; Hardware stack levels used: 1
 18449 ;; Hardware stack levels required when called: 5
 18450 ;; This function calls:
 18451 ;;		Nothing
 18452 ;; This function is called by:
 18453 ;;		_EUSART_Initialize
 18454 ;; This function uses a non-reentrant model
 18455 ;;
 18456                           
 18457     1BA2                     _EUSART_OverrunErrorCallbackRegister:	
 18458                           ;psect for function _EUSART_OverrunErrorCallbackRegister
 18459                           
 18460     1BA2                     l5134:	
 18461                           ;incstack = 0
 18462                           ; Regs used in _EUSART_OverrunErrorCallbackRegister: [wreg+status,2+status,0]
 18463                           
 18464                           
 18465                           ;mcc_generated_files/uart/src/eusart.c: 438: void EUSART_OverrunErrorCallbackRegister(vo
      +                          id (* callbackHandler)(void));mcc_generated_files/uart/src/eusart.c: 439: {;mcc_generate
      +                          d_files/uart/src/eusart.c: 440:     if(((void*)0) != callbackHandler)
 18466     1BA2  0021               	movlb	1	; select bank1
 18467     1BA3  0820               	movf	EUSART_OverrunErrorCallbackRegister@callbackHandler^(0+128),w
 18468     1BA4  0421               	iorwf	(EUSART_OverrunErrorCallbackRegister@callbackHandler+1)^(0+128),w
 18469     1BA5  1903               	btfsc	3,2
 18470     1BA6  2BA8               	goto	u5791
 18471     1BA7  2BA9               	goto	u5790
 18472     1BA8                     u5791:
 18473     1BA8  2BB0               	goto	l774
 18474     1BA9                     u5790:
 18475     1BA9                     l5136:
 18476                           
 18477                           ;mcc_generated_files/uart/src/eusart.c: 441:     {;mcc_generated_files/uart/src/eusart.c
      +                          : 442:         EUSART_OverrunErrorHandler = callbackHandler;
 18478     1BA9  0821               	movf	(EUSART_OverrunErrorCallbackRegister@callbackHandler+1)^(0+128),w
 18479     1BAA  0020               	movlb	0	; select bank0
 18480     1BAB  00DE               	movwf	_EUSART_OverrunErrorHandler+1
 18481     1BAC  0021               	movlb	1	; select bank1
 18482     1BAD  0820               	movf	EUSART_OverrunErrorCallbackRegister@callbackHandler^(0+128),w
 18483     1BAE  0020               	movlb	0	; select bank0
 18484     1BAF  00DD               	movwf	_EUSART_OverrunErrorHandler
 18485     1BB0                     l774:
 18486     1BB0  0008               	return
 18487     1BB1                     __end_of_EUSART_OverrunErrorCallbackRegister:
 18488                           
 18489                           	psect	text73
 18490     1B93                     __ptext73:	
 18491 ;; *************** function _EUSART_FramingErrorCallbackRegister *****************
 18492 ;; Defined at:
 18493 ;;		line 430 in file "mcc_generated_files/uart/src/eusart.c"
 18494 ;; Parameters:    Size  Location     Type
 18495 ;;  callbackHand    2    0[BANK1 ] PTR FTN()void 
 18496 ;;		 -> EUSART_DefaultFramingErrorCallback(1), 
 18497 ;; Auto vars:     Size  Location     Type
 18498 ;;		None
 18499 ;; Return value:  Size  Location     Type
 18500 ;;                  1    wreg      void 
 18501 ;; Registers used:
 18502 ;;		wreg, status,2, status,0
 18503 ;; Tracked objects:
 18504 ;;		On entry : 0/0
 18505 ;;		On exit  : 0/0
 18506 ;;		Unchanged: 0/0
 18507 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 18508 ;;      Params:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0
 18509 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18510 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18511 ;;      Totals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0
 18512 ;;Total ram usage:        2 bytes
 18513 ;; Hardware stack levels used: 1
 18514 ;; Hardware stack levels required when called: 5
 18515 ;; This function calls:
 18516 ;;		Nothing
 18517 ;; This function is called by:
 18518 ;;		_EUSART_Initialize
 18519 ;; This function uses a non-reentrant model
 18520 ;;
 18521                           
 18522     1B93                     _EUSART_FramingErrorCallbackRegister:	
 18523                           ;psect for function _EUSART_FramingErrorCallbackRegister
 18524                           
 18525     1B93                     l5130:	
 18526                           ;incstack = 0
 18527                           ; Regs used in _EUSART_FramingErrorCallbackRegister: [wreg+status,2+status,0]
 18528                           
 18529                           
 18530                           ;mcc_generated_files/uart/src/eusart.c: 430: void EUSART_FramingErrorCallbackRegister(vo
      +                          id (* callbackHandler)(void));mcc_generated_files/uart/src/eusart.c: 431: {;mcc_generate
      +                          d_files/uart/src/eusart.c: 432:     if(((void*)0) != callbackHandler)
 18531     1B93  0021               	movlb	1	; select bank1
 18532     1B94  0820               	movf	EUSART_FramingErrorCallbackRegister@callbackHandler^(0+128),w
 18533     1B95  0421               	iorwf	(EUSART_FramingErrorCallbackRegister@callbackHandler+1)^(0+128),w
 18534     1B96  1903               	btfsc	3,2
 18535     1B97  2B99               	goto	u5781
 18536     1B98  2B9A               	goto	u5780
 18537     1B99                     u5781:
 18538     1B99  2BA1               	goto	l770
 18539     1B9A                     u5780:
 18540     1B9A                     l5132:
 18541                           
 18542                           ;mcc_generated_files/uart/src/eusart.c: 433:     {;mcc_generated_files/uart/src/eusart.c
      +                          : 434:         EUSART_FramingErrorHandler = callbackHandler;
 18543     1B9A  0821               	movf	(EUSART_FramingErrorCallbackRegister@callbackHandler+1)^(0+128),w
 18544     1B9B  0020               	movlb	0	; select bank0
 18545     1B9C  00E0               	movwf	_EUSART_FramingErrorHandler+1
 18546     1B9D  0021               	movlb	1	; select bank1
 18547     1B9E  0820               	movf	EUSART_FramingErrorCallbackRegister@callbackHandler^(0+128),w
 18548     1B9F  0020               	movlb	0	; select bank0
 18549     1BA0  00DF               	movwf	_EUSART_FramingErrorHandler
 18550     1BA1                     l770:
 18551     1BA1  0008               	return
 18552     1BA2                     __end_of_EUSART_FramingErrorCallbackRegister:
 18553                           
 18554                           	psect	text74
 18555     1A77                     __ptext74:	
 18556 ;; *************** function _CLOCK_Initialize *****************
 18557 ;; Defined at:
 18558 ;;		line 39 in file "mcc_generated_files/system/src/clock.c"
 18559 ;; Parameters:    Size  Location     Type
 18560 ;;		None
 18561 ;; Auto vars:     Size  Location     Type
 18562 ;;		None
 18563 ;; Return value:  Size  Location     Type
 18564 ;;                  1    wreg      void 
 18565 ;; Registers used:
 18566 ;;		status,2
 18567 ;; Tracked objects:
 18568 ;;		On entry : 0/0
 18569 ;;		On exit  : 0/0
 18570 ;;		Unchanged: 0/0
 18571 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 18572 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18573 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18574 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18575 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18576 ;;Total ram usage:        0 bytes
 18577 ;; Hardware stack levels used: 1
 18578 ;; Hardware stack levels required when called: 5
 18579 ;; This function calls:
 18580 ;;		Nothing
 18581 ;; This function is called by:
 18582 ;;		_SYSTEM_Initialize
 18583 ;; This function uses a non-reentrant model
 18584 ;;
 18585                           
 18586     1A77                     _CLOCK_Initialize:	
 18587                           ;psect for function _CLOCK_Initialize
 18588                           
 18589     1A77                     l5848:	
 18590                           ;incstack = 0
 18591                           ; Regs used in _CLOCK_Initialize: [status,2]
 18592                           
 18593                           
 18594                           ;mcc_generated_files/system/src/clock.c: 42:     OSCCON1 = (0 << 0x0)
 18595     1A77  0032               	movlb	18	; select bank18
 18596     1A78  0199               	clrf	25	;volatile
 18597                           
 18598                           ;mcc_generated_files/system/src/clock.c: 44:     OSCCON3 = (0 << 0x6)
 18599     1A79  019B               	clrf	27	;volatile
 18600                           
 18601                           ;mcc_generated_files/system/src/clock.c: 46:     OSCEN = (0 << 0x7)
 18602     1A7A  019D               	clrf	29	;volatile
 18603     1A7B                     l5850:
 18604                           
 18605                           ;mcc_generated_files/system/src/clock.c: 51:     OSCFRQ = (6 << 0x0);
 18606     1A7B  3006               	movlw	6
 18607     1A7C  009F               	movwf	31	;volatile
 18608                           
 18609                           ;mcc_generated_files/system/src/clock.c: 52:     OSCSTAT1 =
 18610     1A7D  019E               	clrf	30	;volatile
 18611     1A7E  019C               	clrf	28	;volatile
 18612     1A7F                     l272:
 18613     1A7F  0008               	return
 18614     1A80                     __end_of_CLOCK_Initialize:
 18615                           
 18616                           	psect	text75
 18617     1C68                     __ptext75:	
 18618 ;; *************** function _ADC_Initialize *****************
 18619 ;; Defined at:
 18620 ;;		line 55 in file "mcc_generated_files/adc/src/adc.c"
 18621 ;; Parameters:    Size  Location     Type
 18622 ;;		None
 18623 ;; Auto vars:     Size  Location     Type
 18624 ;;		None
 18625 ;; Return value:  Size  Location     Type
 18626 ;;                  1    wreg      void 
 18627 ;; Registers used:
 18628 ;;		wreg, status,2, status,0, pclath, cstack
 18629 ;; Tracked objects:
 18630 ;;		On entry : 0/0
 18631 ;;		On exit  : 0/0
 18632 ;;		Unchanged: 0/0
 18633 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 18634 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18635 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18636 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18637 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18638 ;;Total ram usage:        0 bytes
 18639 ;; Hardware stack levels used: 1
 18640 ;; Hardware stack levels required when called: 6
 18641 ;; This function calls:
 18642 ;;		_ADC_SetInterruptHandler
 18643 ;; This function is called by:
 18644 ;;		_SYSTEM_Initialize
 18645 ;; This function uses a non-reentrant model
 18646 ;;
 18647                           
 18648     1C68                     _ADC_Initialize:	
 18649                           ;psect for function _ADC_Initialize
 18650                           
 18651     1C68                     l5802:	
 18652                           ;incstack = 0
 18653                           ; Regs used in _ADC_Initialize: [wreg+status,2+status,0+pclath+cstack]
 18654                           
 18655                           
 18656                           ;mcc_generated_files/adc/src/adc.c: 58:     ADCON1 = 0xA0;
 18657     1C68  30A0               	movlw	160
 18658     1C69  0021               	movlb	1	; select bank1
 18659     1C6A  009E               	movwf	30	;volatile
 18660     1C6B                     l5804:
 18661                           
 18662                           ;mcc_generated_files/adc/src/adc.c: 61:     ADRESL = 0x0;
 18663     1C6B  019B               	clrf	27	;volatile
 18664                           
 18665                           ;mcc_generated_files/adc/src/adc.c: 64:     ADRESH = 0x0;
 18666     1C6C  019C               	clrf	28	;volatile
 18667     1C6D                     l5806:
 18668                           
 18669                           ;mcc_generated_files/adc/src/adc.c: 67:     ADACT = 0x5;
 18670     1C6D  3005               	movlw	5
 18671     1C6E  009F               	movwf	31	;volatile
 18672     1C6F                     l5808:
 18673                           
 18674                           ;mcc_generated_files/adc/src/adc.c: 70:     ADCON0 = 0x1;
 18675     1C6F  3001               	movlw	1
 18676     1C70  009D               	movwf	29	;volatile
 18677     1C71                     l5810:
 18678                           
 18679                           ;mcc_generated_files/adc/src/adc.c: 73:     PIR1bits.ADIF = 0;
 18680     1C71  0020               	movlb	0	; select bank0
 18681     1C72  1311               	bcf	17,6	;volatile
 18682     1C73                     l5812:
 18683                           
 18684                           ;mcc_generated_files/adc/src/adc.c: 76:     ADC_SetInterruptHandler(ADC_DefaultInterrupt
      +                          Handler);
 18685     1C73  3049               	movlw	low _ADC_DefaultInterruptHandler
 18686     1C74  0021               	movlb	1	; select bank1
 18687     1C75  00A0               	movwf	ADC_SetInterruptHandler@InterruptHandler^(0+128)
 18688     1C76  301A               	movlw	high _ADC_DefaultInterruptHandler
 18689     1C77  00A1               	movwf	(ADC_SetInterruptHandler@InterruptHandler^(0+128)+1)
 18690     1C78  319A  226E  319C   	fcall	_ADC_SetInterruptHandler
 18691     1C7B                     l5814:
 18692                           
 18693                           ;mcc_generated_files/adc/src/adc.c: 79:     PIE1bits.ADIE = 1;
 18694     1C7B  0021               	movlb	1	; select bank1
 18695     1C7C  1711               	bsf	17,6	;volatile
 18696     1C7D                     l27:
 18697     1C7D  0008               	return
 18698     1C7E                     __end_of_ADC_Initialize:
 18699                           
 18700                           	psect	text76
 18701     1A6E                     __ptext76:	
 18702 ;; *************** function _ADC_SetInterruptHandler *****************
 18703 ;; Defined at:
 18704 ;;		line 145 in file "mcc_generated_files/adc/src/adc.c"
 18705 ;; Parameters:    Size  Location     Type
 18706 ;;  InterruptHan    2    0[BANK1 ] PTR FTN()void 
 18707 ;;		 -> adcConversionDoneHandler(1), ADC_DefaultInterruptHandler(1), 
 18708 ;; Auto vars:     Size  Location     Type
 18709 ;;		None
 18710 ;; Return value:  Size  Location     Type
 18711 ;;                  1    wreg      void 
 18712 ;; Registers used:
 18713 ;;		wreg
 18714 ;; Tracked objects:
 18715 ;;		On entry : 0/0
 18716 ;;		On exit  : 0/0
 18717 ;;		Unchanged: 0/0
 18718 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 18719 ;;      Params:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0
 18720 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18721 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18722 ;;      Totals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0
 18723 ;;Total ram usage:        2 bytes
 18724 ;; Hardware stack levels used: 1
 18725 ;; Hardware stack levels required when called: 5
 18726 ;; This function calls:
 18727 ;;		Nothing
 18728 ;; This function is called by:
 18729 ;;		_ADC_Initialize
 18730 ;;		_initAdcMultiplexer
 18731 ;; This function uses a non-reentrant model
 18732 ;;
 18733                           
 18734     1A6E                     _ADC_SetInterruptHandler:	
 18735                           ;psect for function _ADC_SetInterruptHandler
 18736                           
 18737     1A6E                     l5120:	
 18738                           ;incstack = 0
 18739                           ; Regs used in _ADC_SetInterruptHandler: [wreg]
 18740                           
 18741                           
 18742                           ;mcc_generated_files/adc/src/adc.c: 145: void ADC_SetInterruptHandler(void (* InterruptH
      +                          andler)(void));mcc_generated_files/adc/src/adc.c: 146: {;mcc_generated_files/adc/src/adc
      +                          .c: 147:     ADC_InterruptHandler = InterruptHandler;
 18743     1A6E  0021               	movlb	1	; select bank1
 18744     1A6F  0821               	movf	(ADC_SetInterruptHandler@InterruptHandler+1)^(0+128),w
 18745     1A70  0022               	movlb	2	; select bank2
 18746     1A71  00EE               	movwf	(_ADC_InterruptHandler+1)^(0+256)
 18747     1A72  0021               	movlb	1	; select bank1
 18748     1A73  0820               	movf	ADC_SetInterruptHandler@InterruptHandler^(0+128),w
 18749     1A74  0022               	movlb	2	; select bank2
 18750     1A75  00ED               	movwf	_ADC_InterruptHandler^(0+256)
 18751     1A76                     l55:
 18752     1A76  0008               	return
 18753     1A77                     __end_of_ADC_SetInterruptHandler:
 18754                           
 18755                           	psect	text77
 18756     1C94                     __ptext77:	
 18757 ;; *************** function _PWM_buzzer_LoadDutyValue *****************
 18758 ;; Defined at:
 18759 ;;		line 63 in file "mcc_generated_files/pwm/src/pwm6.c"
 18760 ;; Parameters:    Size  Location     Type
 18761 ;;  dutyValue       2    0[BANK1 ] unsigned short 
 18762 ;; Auto vars:     Size  Location     Type
 18763 ;;		None
 18764 ;; Return value:  Size  Location     Type
 18765 ;;                  1    wreg      void 
 18766 ;; Registers used:
 18767 ;;		wreg, status,2, status,0
 18768 ;; Tracked objects:
 18769 ;;		On entry : 0/0
 18770 ;;		On exit  : 0/0
 18771 ;;		Unchanged: 0/0
 18772 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 18773 ;;      Params:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0
 18774 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18775 ;;      Temps:          0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0
 18776 ;;      Totals:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0
 18777 ;;Total ram usage:        4 bytes
 18778 ;; Hardware stack levels used: 1
 18779 ;; Hardware stack levels required when called: 5
 18780 ;; This function calls:
 18781 ;;		Nothing
 18782 ;; This function is called by:
 18783 ;;		_main
 18784 ;; This function uses a non-reentrant model
 18785 ;;
 18786                           
 18787     1C94                     _PWM_buzzer_LoadDutyValue:	
 18788                           ;psect for function _PWM_buzzer_LoadDutyValue
 18789                           
 18790     1C94                     l6160:	
 18791                           ;incstack = 0
 18792                           ; Regs used in _PWM_buzzer_LoadDutyValue: [wreg+status,2+status,0]
 18793                           
 18794                           
 18795                           ;mcc_generated_files/pwm/src/pwm6.c: 63:  void PWM_buzzer_LoadDutyValue(uint16_t dutyVal
      +                          ue);mcc_generated_files/pwm/src/pwm6.c: 64:  {;mcc_generated_files/pwm/src/pwm6.c: 66:  
      +                              PWM6DCH = (uint8_t) ((dutyValue & 0x03FCu) >> 2);
 18796     1C94  0021               	movlb	1	; select bank1
 18797     1C95  0821               	movf	(PWM_buzzer_LoadDutyValue@dutyValue+1)^(0+128),w
 18798     1C96  00A3               	movwf	(??_PWM_buzzer_LoadDutyValue^(0+128)+1)
 18799     1C97  0820               	movf	PWM_buzzer_LoadDutyValue@dutyValue^(0+128),w
 18800     1C98  00A2               	movwf	??_PWM_buzzer_LoadDutyValue^(0+128)
 18801     1C99  36A3               	lsrf	(??_PWM_buzzer_LoadDutyValue^(0+128)+1),f
 18802     1C9A  0CA2               	rrf	??_PWM_buzzer_LoadDutyValue^(0+128),f
 18803     1C9B  36A3               	lsrf	(??_PWM_buzzer_LoadDutyValue^(0+128)+1),f
 18804     1C9C  0CA2               	rrf	??_PWM_buzzer_LoadDutyValue^(0+128),f
 18805     1C9D  0822               	movf	??_PWM_buzzer_LoadDutyValue^(0+128),w
 18806     1C9E  002C               	movlb	12	; select bank12
 18807     1C9F  009B               	movwf	27	;volatile
 18808                           
 18809                           ;mcc_generated_files/pwm/src/pwm6.c: 69:      PWM6DCL = (uint8_t) ((dutyValue & 0x0003u)
      +                           << 6);
 18810     1CA0  0021               	movlb	1	; select bank1
 18811     1CA1  0820               	movf	PWM_buzzer_LoadDutyValue@dutyValue^(0+128),w
 18812     1CA2  3903               	andlw	3
 18813     1CA3  00A2               	movwf	??_PWM_buzzer_LoadDutyValue^(0+128)
 18814     1CA4  3006               	movlw	6
 18815     1CA5                     u7445:
 18816     1CA5  35A2               	lslf	??_PWM_buzzer_LoadDutyValue^(0+128),f
 18817     1CA6  0B89               	decfsz	9,f
 18818     1CA7  2CA5               	goto	u7445
 18819     1CA8  0822               	movf	??_PWM_buzzer_LoadDutyValue^(0+128),w
 18820     1CA9  002C               	movlb	12	; select bank12
 18821     1CAA  009A               	movwf	26	;volatile
 18822     1CAB                     l86:
 18823     1CAB  0008               	return
 18824     1CAC                     __end_of_PWM_buzzer_LoadDutyValue:
 18825                           
 18826                           	psect	intentry
 18827     0004                     __pintentry:	
 18828 ;; *************** function _INTERRUPT_InterruptManager *****************
 18829 ;; Defined at:
 18830 ;;		line 59 in file "mcc_generated_files/system/src/interrupt.c"
 18831 ;; Parameters:    Size  Location     Type
 18832 ;;		None
 18833 ;; Auto vars:     Size  Location     Type
 18834 ;;		None
 18835 ;; Return value:  Size  Location     Type
 18836 ;;                  1    wreg      void 
 18837 ;; Registers used:
 18838 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 18839 ;; Tracked objects:
 18840 ;;		On entry : 0/0
 18841 ;;		On exit  : 0/0
 18842 ;;		Unchanged: 0/0
 18843 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 18844 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18845 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18846 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18847 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18848 ;;Total ram usage:        0 bytes
 18849 ;; Hardware stack levels used: 1
 18850 ;; Hardware stack levels required when called: 4
 18851 ;; This function calls:
 18852 ;;		NULL
 18853 ;;		_ADC_ISR
 18854 ;;		_EUSART_ReceiveISR
 18855 ;;		_EUSART_TransmitISR
 18856 ;;		_TMR2_ISR
 18857 ;;		_TMR4_ISR
 18858 ;; This function is called by:
 18859 ;;		Interrupt level 1
 18860 ;; This function uses a non-reentrant model
 18861 ;;
 18862                           
 18863     0004                     _INTERRUPT_InterruptManager:
 18864                           
 18865                           ;incstack = 0
 18866     0004  147E               	bsf	int$flags,0	;set compiler interrupt flag (level 1)
 18867                           
 18868                           ; Regs used in _INTERRUPT_InterruptManager: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 18869     0005  3180               	pagesel	$
 18870     0006                     i1l6294:
 18871                           
 18872                           ;mcc_generated_files/system/src/interrupt.c: 62:     if(INTCONbits.PEIE == 1)
 18873     0006  1F0B               	btfss	11,6	;volatile
 18874     0007  2809               	goto	u758_21
 18875     0008  280A               	goto	u758_20
 18876     0009                     u758_21:
 18877     0009  2856               	goto	i1l244
 18878     000A                     u758_20:
 18879     000A                     i1l6296:
 18880                           
 18881                           ;mcc_generated_files/system/src/interrupt.c: 63:     {;mcc_generated_files/system/src/in
      +                          terrupt.c: 64:         if(PIE1bits.TXIE == 1 && PIR1bits.TXIF == 1)
 18882     000A  0021               	movlb	1	; select bank1
 18883     000B  1E11               	btfss	17,4	;volatile
 18884     000C  280E               	goto	u759_21
 18885     000D  280F               	goto	u759_20
 18886     000E                     u759_21:
 18887     000E  281B               	goto	i1l233
 18888     000F                     u759_20:
 18889     000F                     i1l6298:
 18890     000F  0020               	movlb	0	; select bank0
 18891     0010  1E11               	btfss	17,4	;volatile
 18892     0011  2813               	goto	u760_21
 18893     0012  2814               	goto	u760_20
 18894     0013                     u760_21:
 18895     0013  281B               	goto	i1l233
 18896     0014                     u760_20:
 18897     0014                     i1l6300:
 18898                           
 18899                           ;mcc_generated_files/system/src/interrupt.c: 65:         {;mcc_generated_files/system/sr
      +                          c/interrupt.c: 66:             EUSART_TxInterruptHandler();
 18900     0014  0023               	movlb	3	; select bank3
 18901     0015  086F               	movf	(_EUSART_TxInterruptHandler+1)^(0+384),w
 18902     0016  008A               	movwf	10
 18903     0017  086E               	movf	_EUSART_TxInterruptHandler^(0+384),w
 18904     0018  000A               	callw
 18905     0019  3180               	pagesel	$
 18906                           
 18907                           ;mcc_generated_files/system/src/interrupt.c: 67:         }
 18908     001A  2856               	goto	i1l244
 18909     001B                     i1l233:	
 18910                           ;mcc_generated_files/system/src/interrupt.c: 68:         else if(PIE1bits.RCIE == 1 && P
      +                          IR1bits.RCIF == 1)
 18911                           
 18912     001B  0021               	movlb	1	; select bank1
 18913     001C  1E91               	btfss	17,5	;volatile
 18914     001D  281F               	goto	u761_21
 18915     001E  2820               	goto	u761_20
 18916     001F                     u761_21:
 18917     001F  282C               	goto	i1l235
 18918     0020                     u761_20:
 18919     0020                     i1l6302:
 18920     0020  0020               	movlb	0	; select bank0
 18921     0021  1E91               	btfss	17,5	;volatile
 18922     0022  2824               	goto	u762_21
 18923     0023  2825               	goto	u762_20
 18924     0024                     u762_21:
 18925     0024  282C               	goto	i1l235
 18926     0025                     u762_20:
 18927     0025                     i1l6304:
 18928                           
 18929                           ;mcc_generated_files/system/src/interrupt.c: 69:         {;mcc_generated_files/system/sr
      +                          c/interrupt.c: 70:             EUSART_RxInterruptHandler();
 18930     0025  0023               	movlb	3	; select bank3
 18931     0026  086D               	movf	(_EUSART_RxInterruptHandler+1)^(0+384),w
 18932     0027  008A               	movwf	10
 18933     0028  086C               	movf	_EUSART_RxInterruptHandler^(0+384),w
 18934     0029  000A               	callw
 18935     002A  3180               	pagesel	$
 18936                           
 18937                           ;mcc_generated_files/system/src/interrupt.c: 71:         }
 18938     002B  2856               	goto	i1l244
 18939     002C                     i1l235:	
 18940                           ;mcc_generated_files/system/src/interrupt.c: 72:         else if(PIE2bits.TMR4IE == 1 &&
      +                           PIR2bits.TMR4IF == 1)
 18941                           
 18942     002C  0021               	movlb	1	; select bank1
 18943     002D  1C92               	btfss	18,1	;volatile
 18944     002E  2830               	goto	u763_21
 18945     002F  2831               	goto	u763_20
 18946     0030                     u763_21:
 18947     0030  283A               	goto	i1l237
 18948     0031                     u763_20:
 18949     0031                     i1l6306:
 18950     0031  0020               	movlb	0	; select bank0
 18951     0032  1C92               	btfss	18,1	;volatile
 18952     0033  2835               	goto	u764_21
 18953     0034  2836               	goto	u764_20
 18954     0035                     u764_21:
 18955     0035  283A               	goto	i1l237
 18956     0036                     u764_20:
 18957     0036                     i1l6308:
 18958                           
 18959                           ;mcc_generated_files/system/src/interrupt.c: 73:         {;mcc_generated_files/system/sr
      +                          c/interrupt.c: 74:             TMR4_ISR();
 18960     0036  319B  2384  3180   	fcall	_TMR4_ISR
 18961                           
 18962                           ;mcc_generated_files/system/src/interrupt.c: 75:         }
 18963     0039  2856               	goto	i1l244
 18964     003A                     i1l237:	
 18965                           ;mcc_generated_files/system/src/interrupt.c: 76:         else if(PIE1bits.TMR2IE == 1 &&
      +                           PIR1bits.TMR2IF == 1)
 18966                           
 18967     003A  0021               	movlb	1	; select bank1
 18968     003B  1C91               	btfss	17,1	;volatile
 18969     003C  283E               	goto	u765_21
 18970     003D  283F               	goto	u765_20
 18971     003E                     u765_21:
 18972     003E  2848               	goto	i1l239
 18973     003F                     u765_20:
 18974     003F                     i1l6310:
 18975     003F  0020               	movlb	0	; select bank0
 18976     0040  1C91               	btfss	17,1	;volatile
 18977     0041  2843               	goto	u766_21
 18978     0042  2844               	goto	u766_20
 18979     0043                     u766_21:
 18980     0043  2848               	goto	i1l239
 18981     0044                     u766_20:
 18982     0044                     i1l6312:
 18983                           
 18984                           ;mcc_generated_files/system/src/interrupt.c: 77:         {;mcc_generated_files/system/sr
      +                          c/interrupt.c: 78:             TMR2_ISR();
 18985     0044  319B  2375  3180   	fcall	_TMR2_ISR
 18986                           
 18987                           ;mcc_generated_files/system/src/interrupt.c: 79:         }
 18988     0047  2856               	goto	i1l244
 18989     0048                     i1l239:	
 18990                           ;mcc_generated_files/system/src/interrupt.c: 80:         else if(PIE1bits.ADIE == 1 && P
      +                          IR1bits.ADIF == 1)
 18991                           
 18992     0048  0021               	movlb	1	; select bank1
 18993     0049  1F11               	btfss	17,6	;volatile
 18994     004A  284C               	goto	u767_21
 18995     004B  284D               	goto	u767_20
 18996     004C                     u767_21:
 18997     004C  2856               	goto	i1l238
 18998     004D                     u767_20:
 18999     004D                     i1l6314:
 19000     004D  0020               	movlb	0	; select bank0
 19001     004E  1F11               	btfss	17,6	;volatile
 19002     004F  2851               	goto	u768_21
 19003     0050  2852               	goto	u768_20
 19004     0051                     u768_21:
 19005     0051  2856               	goto	i1l238
 19006     0052                     u768_20:
 19007     0052                     i1l6316:
 19008                           
 19009                           ;mcc_generated_files/system/src/interrupt.c: 81:         {;mcc_generated_files/system/sr
      +                          c/interrupt.c: 82:             ADC_ISR();
 19010     0052  319B  2366  3180   	fcall	_ADC_ISR
 19011                           
 19012                           ;mcc_generated_files/system/src/interrupt.c: 83:         }
 19013     0055  2856               	goto	i1l244
 19014     0056                     i1l238:
 19015     0056                     i1l244:
 19016     0056  107E               	bcf	int$flags,0	;clear compiler interrupt flag (level 1)
 19017     0057  0009               	retfie
 19018     0058                     __end_of_INTERRUPT_InterruptManager:
 19019                           
 19020                           	psect	text79
 19021     1B84                     __ptext79:	
 19022 ;; *************** function _TMR4_ISR *****************
 19023 ;; Defined at:
 19024 ;;		line 114 in file "mcc_generated_files/timer/src/tmr4.c"
 19025 ;; Parameters:    Size  Location     Type
 19026 ;;		None
 19027 ;; Auto vars:     Size  Location     Type
 19028 ;;		None
 19029 ;; Return value:  Size  Location     Type
 19030 ;;                  1    wreg      void 
 19031 ;; Registers used:
 19032 ;;		wreg, status,2, status,0, pclath, cstack
 19033 ;; Tracked objects:
 19034 ;;		On entry : 0/0
 19035 ;;		On exit  : 0/0
 19036 ;;		Unchanged: 0/0
 19037 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 19038 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 19039 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 19040 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 19041 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 19042 ;;Total ram usage:        0 bytes
 19043 ;; Hardware stack levels used: 1
 19044 ;; Hardware stack levels required when called: 3
 19045 ;; This function calls:
 19046 ;;		NULL
 19047 ;;		_TMR4_DefaultPeriodMatchCallback
 19048 ;;		_controller
 19049 ;; This function is called by:
 19050 ;;		_INTERRUPT_InterruptManager
 19051 ;; This function uses a non-reentrant model
 19052 ;;
 19053                           
 19054     1B84                     _TMR4_ISR:	
 19055                           ;psect for function _TMR4_ISR
 19056                           
 19057     1B84                     i1l6162:	
 19058                           ;incstack = 0
 19059                           ; Regs used in _TMR4_ISR: [wreg+status,2+status,0+pclath+cstack]
 19060                           
 19061                           
 19062                           ;mcc_generated_files/timer/src/tmr4.c: 117:     if(((void*)0) != TMR4_PeriodMatchCallbac
      +                          k)
 19063     1B84  0022               	movlb	2	; select bank2
 19064     1B85  0869               	movf	_TMR4_PeriodMatchCallback^(0+256),w
 19065     1B86  046A               	iorwf	(_TMR4_PeriodMatchCallback+1)^(0+256),w
 19066     1B87  1903               	btfsc	3,2
 19067     1B88  2B8A               	goto	u745_21
 19068     1B89  2B8B               	goto	u745_20
 19069     1B8A                     u745_21:
 19070     1B8A  2B90               	goto	i1l6166
 19071     1B8B                     u745_20:
 19072     1B8B                     i1l6164:
 19073                           
 19074                           ;mcc_generated_files/timer/src/tmr4.c: 118:     {;mcc_generated_files/timer/src/tmr4.c: 
      +                          119:         TMR4_PeriodMatchCallback();
 19075     1B8B  086A               	movf	(_TMR4_PeriodMatchCallback+1)^(0+256),w
 19076     1B8C  008A               	movwf	10
 19077     1B8D  0869               	movf	_TMR4_PeriodMatchCallback^(0+256),w
 19078     1B8E  000A               	callw
 19079     1B8F  319B               	pagesel	$
 19080     1B90                     i1l6166:
 19081                           
 19082                           ;mcc_generated_files/timer/src/tmr4.c: 121:     PIR2bits.TMR4IF = 0;
 19083     1B90  0020               	movlb	0	; select bank0
 19084     1B91  1092               	bcf	18,1	;volatile
 19085     1B92                     i1l491:
 19086     1B92  0008               	return
 19087     1B93                     __end_of_TMR4_ISR:
 19088                           
 19089                           	psect	text80
 19090     1A4C                     __ptext80:	
 19091 ;; *************** function _TMR4_DefaultPeriodMatchCallback *****************
 19092 ;; Defined at:
 19093 ;;		line 129 in file "mcc_generated_files/timer/src/tmr4.c"
 19094 ;; Parameters:    Size  Location     Type
 19095 ;;		None
 19096 ;; Auto vars:     Size  Location     Type
 19097 ;;		None
 19098 ;; Return value:  Size  Location     Type
 19099 ;;                  1    wreg      void 
 19100 ;; Registers used:
 19101 ;;		None
 19102 ;; Tracked objects:
 19103 ;;		On entry : 0/0
 19104 ;;		On exit  : 0/0
 19105 ;;		Unchanged: 0/0
 19106 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 19107 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 19108 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 19109 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 19110 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 19111 ;;Total ram usage:        0 bytes
 19112 ;; Hardware stack levels used: 1
 19113 ;; This function calls:
 19114 ;;		Nothing
 19115 ;; This function is called by:
 19116 ;;		_TMR4_Initialize
 19117 ;;		_TMR4_ISR
 19118 ;; This function uses a non-reentrant model
 19119 ;;
 19120                           
 19121     1A4C                     _TMR4_DefaultPeriodMatchCallback:	
 19122                           ;psect for function _TMR4_DefaultPeriodMatchCallback
 19123                           
 19124     1A4C                     i1l497:	
 19125                           ;incstack = 0
 19126                           ; Regs used in _TMR4_DefaultPeriodMatchCallback: []
 19127                           
 19128     1A4C  0008               	return
 19129     1A4D                     __end_of_TMR4_DefaultPeriodMatchCallback:
 19130                           
 19131                           	psect	text81
 19132     08BD                     __ptext81:	
 19133 ;; *************** function _controller *****************
 19134 ;; Defined at:
 19135 ;;		line 13 in file "controller.c"
 19136 ;; Parameters:    Size  Location     Type
 19137 ;;		None
 19138 ;; Auto vars:     Size  Location     Type
 19139 ;;  error           2   51[BANK0 ] short 
 19140 ;;  I               2   49[BANK0 ] short 
 19141 ;;  P               2   47[BANK0 ] short 
 19142 ;; Return value:  Size  Location     Type
 19143 ;;                  1    wreg      void 
 19144 ;; Registers used:
 19145 ;;		wreg, status,2, status,0, pclath, cstack
 19146 ;; Tracked objects:
 19147 ;;		On entry : 0/0
 19148 ;;		On exit  : 0/0
 19149 ;;		Unchanged: 0/0
 19150 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 19151 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 19152 ;;      Locals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
 19153 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 19154 ;;      Totals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0
 19155 ;;Total ram usage:        7 bytes
 19156 ;; Hardware stack levels used: 1
 19157 ;; Hardware stack levels required when called: 2
 19158 ;; This function calls:
 19159 ;;		_pwm_fan_LoadDutyValue
 19160 ;;		i1___fladd
 19161 ;;		i1___flmul
 19162 ;;		i1___fltol
 19163 ;;		i1___xxtofl
 19164 ;;		i1_getHoogtesensor
 19165 ;; This function is called by:
 19166 ;;		_main
 19167 ;;		_TMR4_ISR
 19168 ;; This function uses a non-reentrant model
 19169 ;;
 19170                           
 19171     08BD                     _controller:	
 19172                           ;psect for function _controller
 19173                           
 19174     08BD                     i1l6124:	
 19175                           ;incstack = 0
 19176                           ; Regs used in _controller: [wreg+status,2+status,0+pclath+cstack]
 19177                           
 19178                           
 19179                           ;controller.c: 14:     hoogte_bal = getHoogtesensor();
 19180     08BD  319A  225C  3188   	fcall	i1_getHoogtesensor
 19181     08C0  0871               	movf	?i1_getHoogtesensor+1,w
 19182     08C1  0022               	movlb	2	; select bank2
 19183     08C2  00D4               	movwf	(_hoogte_bal+1)^(0+256)
 19184     08C3  0870               	movf	?i1_getHoogtesensor,w
 19185     08C4  00D3               	movwf	_hoogte_bal^(0+256)
 19186     08C5                     i1l6126:
 19187                           
 19188                           ;controller.c: 18:     int16_t error = setpoint - hoogte_bal;
 19189     08C5  0853               	movf	_hoogte_bal^(0+256),w
 19190     08C6  0265               	subwf	_setpoint^(0+256),w
 19191     08C7  0020               	movlb	0	; select bank0
 19192     08C8  00D3               	movwf	controller@error
 19193     08C9  0022               	movlb	2	; select bank2
 19194     08CA  0854               	movf	(_hoogte_bal+1)^(0+256),w
 19195     08CB  3B66               	subwfb	(_setpoint+1)^(0+256),w
 19196     08CC  0020               	movlb	0	; select bank0
 19197     08CD  00D4               	movwf	controller@error+1
 19198     08CE                     i1l6128:
 19199                           
 19200                           ;controller.c: 20:     integraal += error * 0.0005;
 19201     08CE  0853               	movf	controller@error,w
 19202     08CF  00F0               	movwf	i1___xxtofl@val
 19203     08D0  0854               	movf	controller@error+1,w
 19204     08D1  00F1               	movwf	i1___xxtofl@val+1
 19205     08D2  0D89               	rlf	9,f
 19206     08D3  3B89               	subwfb	9,f
 19207     08D4  0989               	comf	9,f
 19208     08D5  00F2               	movwf	i1___xxtofl@val+2
 19209     08D6  00F3               	movwf	i1___xxtofl@val+3
 19210     08D7  3001               	movlw	1
 19211     08D8  3196  260C  3188   	fcall	i1___xxtofl
 19212     08DB  0873               	movf	?i1___xxtofl+3,w
 19213     08DC  0020               	movlb	0	; select bank0
 19214     08DD  00A7               	movwf	i1___flmul@a+3
 19215     08DE  0872               	movf	?i1___xxtofl+2,w
 19216     08DF  00A6               	movwf	i1___flmul@a+2
 19217     08E0  0871               	movf	?i1___xxtofl+1,w
 19218     08E1  00A5               	movwf	i1___flmul@a+1
 19219     08E2  0870               	movf	?i1___xxtofl,w
 19220     08E3  00A4               	movwf	i1___flmul@a
 19221     08E4  303A               	movlw	58
 19222     08E5  00A3               	movwf	i1___flmul@b+3
 19223     08E6  3003               	movlw	3
 19224     08E7  00A2               	movwf	i1___flmul@b+2
 19225     08E8  3012               	movlw	18
 19226     08E9  00A1               	movwf	i1___flmul@b+1
 19227     08EA  306F               	movlw	111
 19228     08EB  00A0               	movwf	i1___flmul@b
 19229     08EC  3182  22C5  3188   	fcall	i1___flmul
 19230     08EF  0020               	movlb	0	; select bank0
 19231     08F0  0823               	movf	?i1___flmul+3,w
 19232     08F1  00BD               	movwf	i1___fladd@b+3
 19233     08F2  0822               	movf	?i1___flmul+2,w
 19234     08F3  00BC               	movwf	i1___fladd@b+2
 19235     08F4  0821               	movf	?i1___flmul+1,w
 19236     08F5  00BB               	movwf	i1___fladd@b+1
 19237     08F6  0820               	movf	?i1___flmul,w
 19238     08F7  00BA               	movwf	i1___fladd@b
 19239     08F8  0022               	movlb	2	; select bank2
 19240     08F9  084E               	movf	(_integraal+3)^(0+256),w
 19241     08FA  0020               	movlb	0	; select bank0
 19242     08FB  00C1               	movwf	i1___fladd@a+3
 19243     08FC  0022               	movlb	2	; select bank2
 19244     08FD  084D               	movf	(_integraal+2)^(0+256),w
 19245     08FE  0020               	movlb	0	; select bank0
 19246     08FF  00C0               	movwf	i1___fladd@a+2
 19247     0900  0022               	movlb	2	; select bank2
 19248     0901  084C               	movf	(_integraal+1)^(0+256),w
 19249     0902  0020               	movlb	0	; select bank0
 19250     0903  00BF               	movwf	i1___fladd@a+1
 19251     0904  0022               	movlb	2	; select bank2
 19252     0905  084B               	movf	_integraal^(0+256),w
 19253     0906  0020               	movlb	0	; select bank0
 19254     0907  00BE               	movwf	i1___fladd@a
 19255     0908  318D  25F4  3188   	fcall	i1___fladd
 19256     090B  0020               	movlb	0	; select bank0
 19257     090C  083D               	movf	?i1___fladd+3,w
 19258     090D  0022               	movlb	2	; select bank2
 19259     090E  00CE               	movwf	(_integraal+3)^(0+256)
 19260     090F  0020               	movlb	0	; select bank0
 19261     0910  083C               	movf	?i1___fladd+2,w
 19262     0911  0022               	movlb	2	; select bank2
 19263     0912  00CD               	movwf	(_integraal+2)^(0+256)
 19264     0913  0020               	movlb	0	; select bank0
 19265     0914  083B               	movf	?i1___fladd+1,w
 19266     0915  0022               	movlb	2	; select bank2
 19267     0916  00CC               	movwf	(_integraal+1)^(0+256)
 19268     0917  0020               	movlb	0	; select bank0
 19269     0918  083A               	movf	?i1___fladd,w
 19270     0919  0022               	movlb	2	; select bank2
 19271     091A  00CB               	movwf	_integraal^(0+256)
 19272     091B                     i1l6130:
 19273                           
 19274                           ;controller.c: 22:     int16_t P = kp * error;
 19275     091B  0020               	movlb	0	; select bank0
 19276     091C  0853               	movf	controller@error,w
 19277     091D  00F0               	movwf	i1___xxtofl@val
 19278     091E  0854               	movf	controller@error+1,w
 19279     091F  00F1               	movwf	i1___xxtofl@val+1
 19280     0920  0D89               	rlf	9,f
 19281     0921  3B89               	subwfb	9,f
 19282     0922  0989               	comf	9,f
 19283     0923  00F2               	movwf	i1___xxtofl@val+2
 19284     0924  00F3               	movwf	i1___xxtofl@val+3
 19285     0925  3001               	movlw	1
 19286     0926  3196  260C  3188   	fcall	i1___xxtofl
 19287     0929  0873               	movf	?i1___xxtofl+3,w
 19288     092A  0020               	movlb	0	; select bank0
 19289     092B  00A7               	movwf	i1___flmul@a+3
 19290     092C  0872               	movf	?i1___xxtofl+2,w
 19291     092D  00A6               	movwf	i1___flmul@a+2
 19292     092E  0871               	movf	?i1___xxtofl+1,w
 19293     092F  00A5               	movwf	i1___flmul@a+1
 19294     0930  0870               	movf	?i1___xxtofl,w
 19295     0931  00A4               	movwf	i1___flmul@a
 19296     0932  0022               	movlb	2	; select bank2
 19297     0933  0864               	movf	(_kp+3)^(0+256),w
 19298     0934  0020               	movlb	0	; select bank0
 19299     0935  00A3               	movwf	i1___flmul@b+3
 19300     0936  0022               	movlb	2	; select bank2
 19301     0937  0863               	movf	(_kp+2)^(0+256),w
 19302     0938  0020               	movlb	0	; select bank0
 19303     0939  00A2               	movwf	i1___flmul@b+2
 19304     093A  0022               	movlb	2	; select bank2
 19305     093B  0862               	movf	(_kp+1)^(0+256),w
 19306     093C  0020               	movlb	0	; select bank0
 19307     093D  00A1               	movwf	i1___flmul@b+1
 19308     093E  0022               	movlb	2	; select bank2
 19309     093F  0861               	movf	_kp^(0+256),w
 19310     0940  0020               	movlb	0	; select bank0
 19311     0941  00A0               	movwf	i1___flmul@b
 19312     0942  3182  22C5  3188   	fcall	i1___flmul
 19313     0945  0020               	movlb	0	; select bank0
 19314     0946  0823               	movf	?i1___flmul+3,w
 19315     0947  00BD               	movwf	i1___fltol@f1+3
 19316     0948  0822               	movf	?i1___flmul+2,w
 19317     0949  00BC               	movwf	i1___fltol@f1+2
 19318     094A  0821               	movf	?i1___flmul+1,w
 19319     094B  00BB               	movwf	i1___fltol@f1+1
 19320     094C  0820               	movf	?i1___flmul,w
 19321     094D  00BA               	movwf	i1___fltol@f1
 19322     094E  3192  221A  3188   	fcall	i1___fltol
 19323     0951  0020               	movlb	0	; select bank0
 19324     0952  083B               	movf	?i1___fltol+1,w
 19325     0953  00D0               	movwf	controller@P+1
 19326     0954  083A               	movf	?i1___fltol,w
 19327     0955  00CF               	movwf	controller@P
 19328     0956                     i1l6132:
 19329                           
 19330                           ;controller.c: 23:     int16_t I = ki * integraal;
 19331     0956  0022               	movlb	2	; select bank2
 19332     0957  0860               	movf	(_ki+3)^(0+256),w
 19333     0958  0020               	movlb	0	; select bank0
 19334     0959  00A7               	movwf	i1___flmul@a+3
 19335     095A  0022               	movlb	2	; select bank2
 19336     095B  085F               	movf	(_ki+2)^(0+256),w
 19337     095C  0020               	movlb	0	; select bank0
 19338     095D  00A6               	movwf	i1___flmul@a+2
 19339     095E  0022               	movlb	2	; select bank2
 19340     095F  085E               	movf	(_ki+1)^(0+256),w
 19341     0960  0020               	movlb	0	; select bank0
 19342     0961  00A5               	movwf	i1___flmul@a+1
 19343     0962  0022               	movlb	2	; select bank2
 19344     0963  085D               	movf	_ki^(0+256),w
 19345     0964  0020               	movlb	0	; select bank0
 19346     0965  00A4               	movwf	i1___flmul@a
 19347     0966  0022               	movlb	2	; select bank2
 19348     0967  084E               	movf	(_integraal+3)^(0+256),w
 19349     0968  0020               	movlb	0	; select bank0
 19350     0969  00A3               	movwf	i1___flmul@b+3
 19351     096A  0022               	movlb	2	; select bank2
 19352     096B  084D               	movf	(_integraal+2)^(0+256),w
 19353     096C  0020               	movlb	0	; select bank0
 19354     096D  00A2               	movwf	i1___flmul@b+2
 19355     096E  0022               	movlb	2	; select bank2
 19356     096F  084C               	movf	(_integraal+1)^(0+256),w
 19357     0970  0020               	movlb	0	; select bank0
 19358     0971  00A1               	movwf	i1___flmul@b+1
 19359     0972  0022               	movlb	2	; select bank2
 19360     0973  084B               	movf	_integraal^(0+256),w
 19361     0974  0020               	movlb	0	; select bank0
 19362     0975  00A0               	movwf	i1___flmul@b
 19363     0976  3182  22C5  3188   	fcall	i1___flmul
 19364     0979  0020               	movlb	0	; select bank0
 19365     097A  0823               	movf	?i1___flmul+3,w
 19366     097B  00BD               	movwf	i1___fltol@f1+3
 19367     097C  0822               	movf	?i1___flmul+2,w
 19368     097D  00BC               	movwf	i1___fltol@f1+2
 19369     097E  0821               	movf	?i1___flmul+1,w
 19370     097F  00BB               	movwf	i1___fltol@f1+1
 19371     0980  0820               	movf	?i1___flmul,w
 19372     0981  00BA               	movwf	i1___fltol@f1
 19373     0982  3192  221A  3188   	fcall	i1___fltol
 19374     0985  0020               	movlb	0	; select bank0
 19375     0986  083B               	movf	?i1___fltol+1,w
 19376     0987  00D2               	movwf	controller@I+1
 19377     0988  083A               	movf	?i1___fltol,w
 19378     0989  00D1               	movwf	controller@I
 19379     098A                     i1l6134:
 19380                           
 19381                           ;controller.c: 25:     dutycycle = P + I;
 19382     098A  0851               	movf	controller@I,w
 19383     098B  074F               	addwf	controller@P,w
 19384     098C  00D7               	movwf	_dutycycle
 19385     098D  0852               	movf	controller@I+1,w
 19386     098E  3D50               	addwfc	controller@P+1,w
 19387     098F  00D8               	movwf	_dutycycle+1
 19388     0990                     i1l6136:
 19389                           
 19390                           ;controller.c: 27:     if (dutycycle > 1023 && error > 0) {
 19391     0990  3004               	movlw	4
 19392     0991  0258               	subwf	_dutycycle+1,w
 19393     0992  3000               	movlw	0
 19394     0993  1903               	skipnz
 19395     0994  0257               	subwf	_dutycycle,w
 19396     0995  1C03               	skipc
 19397     0996  2998               	goto	u739_21
 19398     0997  2999               	goto	u739_20
 19399     0998                     u739_21:
 19400     0998  29AC               	goto	i1l6142
 19401     0999                     u739_20:
 19402     0999                     i1l6138:
 19403     0999  0854               	movf	controller@error+1,w
 19404     099A  3A80               	xorlw	128
 19405     099B  00CE               	movwf	??_controller
 19406     099C  3080               	movlw	128
 19407     099D  024E               	subwf	??_controller,w
 19408     099E  1D03               	skipz
 19409     099F  29A2               	goto	u740_25
 19410     09A0  3001               	movlw	1
 19411     09A1  0253               	subwf	controller@error,w
 19412     09A2                     u740_25:
 19413     09A2  1C03               	skipc
 19414     09A3  29A5               	goto	u740_21
 19415     09A4  29A6               	goto	u740_20
 19416     09A5                     u740_21:
 19417     09A5  29AC               	goto	i1l6142
 19418     09A6                     u740_20:
 19419     09A6                     i1l6140:
 19420                           
 19421                           ;controller.c: 28:         dutycycle = 1023;
 19422     09A6  30FF               	movlw	255
 19423     09A7  0020               	movlb	0	; select bank0
 19424     09A8  00D7               	movwf	_dutycycle
 19425     09A9  3003               	movlw	3
 19426     09AA  00D8               	movwf	_dutycycle+1
 19427                           
 19428                           ;controller.c: 29:     } else if (dutycycle > 1023 && error < 0) {
 19429     09AB  29BD               	goto	i1l6150
 19430     09AC                     i1l6142:
 19431     09AC  3004               	movlw	4
 19432     09AD  0020               	movlb	0	; select bank0
 19433     09AE  0258               	subwf	_dutycycle+1,w
 19434     09AF  3000               	movlw	0
 19435     09B0  1903               	skipnz
 19436     09B1  0257               	subwf	_dutycycle,w
 19437     09B2  1C03               	skipc
 19438     09B3  29B5               	goto	u741_21
 19439     09B4  29B6               	goto	u741_20
 19440     09B5                     u741_21:
 19441     09B5  29BD               	goto	i1l968
 19442     09B6                     u741_20:
 19443     09B6                     i1l6144:
 19444     09B6  1FD4               	btfss	controller@error+1,7
 19445     09B7  29B9               	goto	u742_21
 19446     09B8  29BA               	goto	u742_20
 19447     09B9                     u742_21:
 19448     09B9  29BD               	goto	i1l968
 19449     09BA                     u742_20:
 19450     09BA                     i1l6146:
 19451                           
 19452                           ;controller.c: 30:         dutycycle = 0;
 19453     09BA  01D7               	clrf	_dutycycle
 19454     09BB  01D8               	clrf	_dutycycle+1
 19455                           
 19456                           ;controller.c: 31:     } else if (dutycycle < 0) {
 19457     09BC  29BD               	goto	i1l6150
 19458     09BD                     i1l968:
 19459     09BD                     i1l6150:
 19460                           
 19461                           ;controller.c: 35:     pwm_fan_LoadDutyValue(dutycycle);
 19462     09BD  0858               	movf	_dutycycle+1,w
 19463     09BE  00F1               	movwf	pwm_fan_LoadDutyValue@dutyValue+1
 19464     09BF  0857               	movf	_dutycycle,w
 19465     09C0  00F0               	movwf	pwm_fan_LoadDutyValue@dutyValue
 19466     09C1  319C  243E  3188   	fcall	_pwm_fan_LoadDutyValue
 19467     09C4                     i1l970:
 19468     09C4  0008               	return
 19469     09C5                     __end_of_controller:
 19470                           
 19471                           	psect	text82
 19472     1A5C                     __ptext82:	
 19473 ;; *************** function i1_getHoogtesensor *****************
 19474 ;; Defined at:
 19475 ;;		line 37 in file "adcMeasurements.c"
 19476 ;; Parameters:    Size  Location     Type
 19477 ;;		None
 19478 ;; Auto vars:     Size  Location     Type
 19479 ;;		None
 19480 ;; Return value:  Size  Location     Type
 19481 ;;                  2    0[COMMON] unsigned short 
 19482 ;; Registers used:
 19483 ;;		wreg
 19484 ;; Tracked objects:
 19485 ;;		On entry : 0/0
 19486 ;;		On exit  : 0/0
 19487 ;;		Unchanged: 0/0
 19488 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 19489 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 19490 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 19491 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 19492 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 19493 ;;Total ram usage:        2 bytes
 19494 ;; Hardware stack levels used: 1
 19495 ;; This function calls:
 19496 ;;		Nothing
 19497 ;; This function is called by:
 19498 ;;		_controller
 19499 ;; This function uses a non-reentrant model
 19500 ;;
 19501                           
 19502     1A5C                     i1_getHoogtesensor:	
 19503                           ;psect for function i1_getHoogtesensor
 19504                           
 19505     1A5C                     i1l5386:	
 19506                           ;incstack = 0
 19507                           ; Regs used in i1_getHoogtesensor: [wreg]
 19508                           
 19509                           
 19510                           ;adcMeasurements.c: 38:     return ADC_hoogtesensor;
 19511     1A5C  0020               	movlb	0	; select bank0
 19512     1A5D  085C               	movf	_ADC_hoogtesensor+1,w	;volatile
 19513     1A5E  00F1               	movwf	?i1_getHoogtesensor+1
 19514     1A5F  085B               	movf	_ADC_hoogtesensor,w	;volatile
 19515     1A60  00F0               	movwf	?i1_getHoogtesensor
 19516     1A61                     i1l857:
 19517     1A61  0008               	return
 19518     1A62                     __end_ofi1_getHoogtesensor:
 19519                           
 19520                           	psect	text83
 19521     160C                     __ptext83:	
 19522 ;; *************** function i1___xxtofl *****************
 19523 ;; Defined at:
 19524 ;;		line 10 in file "C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\xxtofl.c"
 19525 ;; Parameters:    Size  Location     Type
 19526 ;;  sign            1    wreg     unsigned char 
 19527 ;;  val             4    0[COMMON] long 
 19528 ;; Auto vars:     Size  Location     Type
 19529 ;;  sign            1    8[COMMON] unsigned char 
 19530 ;;  arg             4   10[COMMON] unsigned long 
 19531 ;;  exp             1    9[COMMON] unsigned char 
 19532 ;; Return value:  Size  Location     Type
 19533 ;;                  4    0[COMMON] unsigned char 
 19534 ;; Registers used:
 19535 ;;		wreg, status,2, status,0
 19536 ;; Tracked objects:
 19537 ;;		On entry : 0/0
 19538 ;;		On exit  : 0/0
 19539 ;;		Unchanged: 0/0
 19540 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 19541 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 19542 ;;      Locals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 19543 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 19544 ;;      Totals:        14       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 19545 ;;Total ram usage:       14 bytes
 19546 ;; Hardware stack levels used: 1
 19547 ;; This function calls:
 19548 ;;		Nothing
 19549 ;; This function is called by:
 19550 ;;		_controller
 19551 ;; This function uses a non-reentrant model
 19552 ;;
 19553                           
 19554     160C                     i1___xxtofl:	
 19555                           ;psect for function i1___xxtofl
 19556                           
 19557                           
 19558                           ;incstack = 0
 19559                           ; Regs used in i1___xxtofl: [wreg+status,2+status,0]
 19560                           ;i1___xxtofl@sign stored from wreg
 19561     160C  00F8               	movwf	i1___xxtofl@sign
 19562     160D                     i1l5762:
 19563     160D  0878               	movf	i1___xxtofl@sign,w
 19564     160E  1903               	btfsc	3,2
 19565     160F  2E11               	goto	u708_21
 19566     1610  2E12               	goto	u708_20
 19567     1611                     u708_21:
 19568     1611  2E26               	goto	i1l5768
 19569     1612                     u708_20:
 19570     1612                     i1l5764:
 19571     1612  1FF3               	btfss	i1___xxtofl@val+3,7
 19572     1613  2E15               	goto	u709_21
 19573     1614  2E16               	goto	u709_20
 19574     1615                     u709_21:
 19575     1615  2E26               	goto	i1l5768
 19576     1616                     u709_20:
 19577     1616                     i1l5766:
 19578     1616  0970               	comf	i1___xxtofl@val,w
 19579     1617  00FA               	movwf	i1___xxtofl@arg
 19580     1618  0971               	comf	i1___xxtofl@val+1,w
 19581     1619  00FB               	movwf	i1___xxtofl@arg+1
 19582     161A  0972               	comf	i1___xxtofl@val+2,w
 19583     161B  00FC               	movwf	i1___xxtofl@arg+2
 19584     161C  0973               	comf	i1___xxtofl@val+3,w
 19585     161D  00FD               	movwf	i1___xxtofl@arg+3
 19586     161E  0AFA               	incf	i1___xxtofl@arg,f
 19587     161F  1903               	skipnz
 19588     1620  0AFB               	incf	i1___xxtofl@arg+1,f
 19589     1621  1903               	skipnz
 19590     1622  0AFC               	incf	i1___xxtofl@arg+2,f
 19591     1623  1903               	skipnz
 19592     1624  0AFD               	incf	i1___xxtofl@arg+3,f
 19593     1625  2E2E               	goto	i1l1648
 19594     1626                     i1l5768:
 19595     1626  0873               	movf	i1___xxtofl@val+3,w
 19596     1627  00FD               	movwf	i1___xxtofl@arg+3
 19597     1628  0872               	movf	i1___xxtofl@val+2,w
 19598     1629  00FC               	movwf	i1___xxtofl@arg+2
 19599     162A  0871               	movf	i1___xxtofl@val+1,w
 19600     162B  00FB               	movwf	i1___xxtofl@arg+1
 19601     162C  0870               	movf	i1___xxtofl@val,w
 19602     162D  00FA               	movwf	i1___xxtofl@arg
 19603     162E                     i1l1648:
 19604     162E  0873               	movf	i1___xxtofl@val+3,w
 19605     162F  0472               	iorwf	i1___xxtofl@val+2,w
 19606     1630  0471               	iorwf	i1___xxtofl@val+1,w
 19607     1631  0470               	iorwf	i1___xxtofl@val,w
 19608     1632  1D03               	skipz
 19609     1633  2E35               	goto	u710_21
 19610     1634  2E36               	goto	u710_20
 19611     1635                     u710_21:
 19612     1635  2E3F               	goto	i1l1649
 19613     1636                     u710_20:
 19614     1636                     i1l5770:
 19615     1636  3000               	movlw	0
 19616     1637  00F3               	movwf	?i1___xxtofl+3
 19617     1638  3000               	movlw	0
 19618     1639  00F2               	movwf	?i1___xxtofl+2
 19619     163A  3000               	movlw	0
 19620     163B  00F1               	movwf	?i1___xxtofl+1
 19621     163C  3000               	movlw	0
 19622     163D  00F0               	movwf	?i1___xxtofl
 19623     163E  2EAF               	goto	i1l1650
 19624     163F                     i1l1649:
 19625     163F  3096               	movlw	150
 19626     1640  00F9               	movwf	i1___xxtofl@exp
 19627     1641  2E4B               	goto	i1l5776
 19628     1642                     i1l5774:
 19629     1642  3001               	movlw	1
 19630     1643  07F9               	addwf	i1___xxtofl@exp,f
 19631     1644  3001               	movlw	1
 19632     1645                     u711_25:
 19633     1645  36FD               	lsrf	i1___xxtofl@arg+3,f
 19634     1646  0CFC               	rrf	i1___xxtofl@arg+2,f
 19635     1647  0CFB               	rrf	i1___xxtofl@arg+1,f
 19636     1648  0CFA               	rrf	i1___xxtofl@arg,f
 19637     1649  0B89               	decfsz	9,f
 19638     164A  2E45               	goto	u711_25
 19639     164B                     i1l5776:
 19640     164B  30FE               	movlw	254
 19641     164C  057D               	andwf	i1___xxtofl@arg+3,w
 19642     164D  1D03               	btfss	3,2
 19643     164E  2E50               	goto	u712_21
 19644     164F  2E51               	goto	u712_20
 19645     1650                     u712_21:
 19646     1650  2E42               	goto	i1l5774
 19647     1651                     u712_20:
 19648     1651  2E61               	goto	i1l5780
 19649     1652                     i1l5778:
 19650     1652  3001               	movlw	1
 19651     1653  07F9               	addwf	i1___xxtofl@exp,f
 19652     1654  3001               	movlw	1
 19653     1655  07FA               	addwf	i1___xxtofl@arg,f
 19654     1656  3000               	movlw	0
 19655     1657  3DFB               	addwfc	i1___xxtofl@arg+1,f
 19656     1658  3DFC               	addwfc	i1___xxtofl@arg+2,f
 19657     1659  3DFD               	addwfc	i1___xxtofl@arg+3,f
 19658     165A  3001               	movlw	1
 19659     165B                     u713_25:
 19660     165B  36FD               	lsrf	i1___xxtofl@arg+3,f
 19661     165C  0CFC               	rrf	i1___xxtofl@arg+2,f
 19662     165D  0CFB               	rrf	i1___xxtofl@arg+1,f
 19663     165E  0CFA               	rrf	i1___xxtofl@arg,f
 19664     165F  0B89               	decfsz	9,f
 19665     1660  2E5B               	goto	u713_25
 19666     1661                     i1l5780:
 19667     1661  30FF               	movlw	255
 19668     1662  057D               	andwf	i1___xxtofl@arg+3,w
 19669     1663  1D03               	btfss	3,2
 19670     1664  2E66               	goto	u714_21
 19671     1665  2E67               	goto	u714_20
 19672     1666                     u714_21:
 19673     1666  2E52               	goto	i1l5778
 19674     1667                     u714_20:
 19675     1667  2E71               	goto	i1l5784
 19676     1668                     i1l5782:
 19677     1668  3001               	movlw	1
 19678     1669  02F9               	subwf	i1___xxtofl@exp,f
 19679     166A  3001               	movlw	1
 19680     166B                     u715_25:
 19681     166B  35FA               	lslf	i1___xxtofl@arg,f
 19682     166C  0DFB               	rlf	i1___xxtofl@arg+1,f
 19683     166D  0DFC               	rlf	i1___xxtofl@arg+2,f
 19684     166E  0DFD               	rlf	i1___xxtofl@arg+3,f
 19685     166F  0B89               	decfsz	9,f
 19686     1670  2E6B               	goto	u715_25
 19687     1671                     i1l5784:
 19688     1671  1BFC               	btfsc	i1___xxtofl@arg+2,7
 19689     1672  2E74               	goto	u716_21
 19690     1673  2E75               	goto	u716_20
 19691     1674                     u716_21:
 19692     1674  2E7B               	goto	i1l1661
 19693     1675                     u716_20:
 19694     1675                     i1l5786:
 19695     1675  3002               	movlw	2
 19696     1676  0279               	subwf	i1___xxtofl@exp,w
 19697     1677  1803               	skipnc
 19698     1678  2E7A               	goto	u717_21
 19699     1679  2E7B               	goto	u717_20
 19700     167A                     u717_21:
 19701     167A  2E68               	goto	i1l5782
 19702     167B                     u717_20:
 19703     167B                     i1l1661:
 19704     167B  1879               	btfsc	i1___xxtofl@exp,0
 19705     167C  2E7E               	goto	u718_21
 19706     167D  2E7F               	goto	u718_20
 19707     167E                     u718_21:
 19708     167E  2E87               	goto	i1l1662
 19709     167F                     u718_20:
 19710     167F                     i1l5788:
 19711     167F  30FF               	movlw	255
 19712     1680  05FA               	andwf	i1___xxtofl@arg,f
 19713     1681  30FF               	movlw	255
 19714     1682  05FB               	andwf	i1___xxtofl@arg+1,f
 19715     1683  307F               	movlw	127
 19716     1684  05FC               	andwf	i1___xxtofl@arg+2,f
 19717     1685  30FF               	movlw	255
 19718     1686  05FD               	andwf	i1___xxtofl@arg+3,f
 19719     1687                     i1l1662:
 19720     1687  1003               	clrc
 19721     1688  0CF9               	rrf	i1___xxtofl@exp,f
 19722     1689                     i1l5790:
 19723     1689  0879               	movf	i1___xxtofl@exp,w
 19724     168A  00F4               	movwf	??i1___xxtofl
 19725     168B  01F5               	clrf	??i1___xxtofl+1
 19726     168C  01F6               	clrf	??i1___xxtofl+2
 19727     168D  01F7               	clrf	??i1___xxtofl+3
 19728     168E  3018               	movlw	24
 19729     168F                     u719_25:
 19730     168F  35F4               	lslf	??i1___xxtofl,f
 19731     1690  0DF5               	rlf	??i1___xxtofl+1,f
 19732     1691  0DF6               	rlf	??i1___xxtofl+2,f
 19733     1692  0DF7               	rlf	??i1___xxtofl+3,f
 19734     1693                     u719_20:
 19735     1693  0B89               	decfsz	9,f
 19736     1694  2E8F               	goto	u719_25
 19737     1695  0874               	movf	??i1___xxtofl,w
 19738     1696  04FA               	iorwf	i1___xxtofl@arg,f
 19739     1697  0875               	movf	??i1___xxtofl+1,w
 19740     1698  04FB               	iorwf	i1___xxtofl@arg+1,f
 19741     1699  0876               	movf	??i1___xxtofl+2,w
 19742     169A  04FC               	iorwf	i1___xxtofl@arg+2,f
 19743     169B  0877               	movf	??i1___xxtofl+3,w
 19744     169C  04FD               	iorwf	i1___xxtofl@arg+3,f
 19745     169D                     i1l5792:
 19746     169D  0878               	movf	i1___xxtofl@sign,w
 19747     169E  1903               	btfsc	3,2
 19748     169F  2EA1               	goto	u720_21
 19749     16A0  2EA2               	goto	u720_20
 19750     16A1                     u720_21:
 19751     16A1  2EA7               	goto	i1l5798
 19752     16A2                     u720_20:
 19753     16A2                     i1l5794:
 19754     16A2  1FF3               	btfss	i1___xxtofl@val+3,7
 19755     16A3  2EA5               	goto	u721_21
 19756     16A4  2EA6               	goto	u721_20
 19757     16A5                     u721_21:
 19758     16A5  2EA7               	goto	i1l5798
 19759     16A6                     u721_20:
 19760     16A6                     i1l5796:
 19761     16A6  17FD               	bsf	i1___xxtofl@arg+3,7
 19762     16A7                     i1l5798:
 19763     16A7  087D               	movf	i1___xxtofl@arg+3,w
 19764     16A8  00F3               	movwf	?i1___xxtofl+3
 19765     16A9  087C               	movf	i1___xxtofl@arg+2,w
 19766     16AA  00F2               	movwf	?i1___xxtofl+2
 19767     16AB  087B               	movf	i1___xxtofl@arg+1,w
 19768     16AC  00F1               	movwf	?i1___xxtofl+1
 19769     16AD  087A               	movf	i1___xxtofl@arg,w
 19770     16AE  00F0               	movwf	?i1___xxtofl
 19771     16AF                     i1l1650:
 19772     16AF  0008               	return
 19773     16B0                     __end_ofi1___xxtofl:
 19774                           
 19775                           	psect	text84
 19776     121A                     __ptext84:	
 19777 ;; *************** function i1___fltol *****************
 19778 ;; Defined at:
 19779 ;;		line 43 in file "C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\fltol.c"
 19780 ;; Parameters:    Size  Location     Type
 19781 ;;  f1              4   26[BANK0 ] unsigned char 
 19782 ;; Auto vars:     Size  Location     Type
 19783 ;;  exp1            1   35[BANK0 ] unsigned char 
 19784 ;;  sign1           1   34[BANK0 ] unsigned char 
 19785 ;; Return value:  Size  Location     Type
 19786 ;;                  4   26[BANK0 ] long 
 19787 ;; Registers used:
 19788 ;;		wreg, status,2, status,0
 19789 ;; Tracked objects:
 19790 ;;		On entry : 0/0
 19791 ;;		On exit  : 0/0
 19792 ;;		Unchanged: 0/0
 19793 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 19794 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
 19795 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 19796 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
 19797 ;;      Totals:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0
 19798 ;;Total ram usage:       10 bytes
 19799 ;; Hardware stack levels used: 1
 19800 ;; This function calls:
 19801 ;;		Nothing
 19802 ;; This function is called by:
 19803 ;;		_controller
 19804 ;; This function uses a non-reentrant model
 19805 ;;
 19806                           
 19807     121A                     i1___fltol:	
 19808                           ;psect for function i1___fltol
 19809                           
 19810     121A                     i1l5390:	
 19811                           ;incstack = 0
 19812                           ; Regs used in i1___fltol: [wreg+status,2+status,0]
 19813                           
 19814     121A  1003               	clrc
 19815     121B  0020               	movlb	0	; select bank0
 19816     121C  0D3C               	rlf	i1___fltol@f1+2,w
 19817     121D  0D3D               	rlf	i1___fltol@f1+3,w
 19818     121E  00C3               	movwf	i1___fltol@exp1
 19819     121F  0843               	movf	i1___fltol@exp1,w
 19820     1220  1D03               	btfss	3,2
 19821     1221  2A23               	goto	u625_21
 19822     1222  2A24               	goto	u625_20
 19823     1223                     u625_21:
 19824     1223  2A2D               	goto	i1l5396
 19825     1224                     u625_20:
 19826     1224                     i1l5392:
 19827     1224  3000               	movlw	0
 19828     1225  00BD               	movwf	?i1___fltol+3
 19829     1226  3000               	movlw	0
 19830     1227  00BC               	movwf	?i1___fltol+2
 19831     1228  3000               	movlw	0
 19832     1229  00BB               	movwf	?i1___fltol+1
 19833     122A  3000               	movlw	0
 19834     122B  00BA               	movwf	?i1___fltol
 19835     122C  2A88               	goto	i1l1401
 19836     122D                     i1l5396:
 19837     122D  083A               	movf	i1___fltol@f1,w
 19838     122E  00BE               	movwf	??i1___fltol
 19839     122F  083B               	movf	i1___fltol@f1+1,w
 19840     1230  00BF               	movwf	??i1___fltol+1
 19841     1231  083C               	movf	i1___fltol@f1+2,w
 19842     1232  00C0               	movwf	??i1___fltol+2
 19843     1233  083D               	movf	i1___fltol@f1+3,w
 19844     1234  00C1               	movwf	??i1___fltol+3
 19845     1235  301F               	movlw	31
 19846     1236                     u626_25:
 19847     1236  36C1               	lsrf	??i1___fltol+3,f
 19848     1237  0CC0               	rrf	??i1___fltol+2,f
 19849     1238  0CBF               	rrf	??i1___fltol+1,f
 19850     1239  0CBE               	rrf	??i1___fltol,f
 19851     123A                     u626_20:
 19852     123A  0B89               	decfsz	9,f
 19853     123B  2A36               	goto	u626_25
 19854     123C  083E               	movf	??i1___fltol,w
 19855     123D  00C2               	movwf	i1___fltol@sign1
 19856     123E                     i1l5398:
 19857     123E  17BC               	bsf	i1___fltol@f1+2,7
 19858     123F                     i1l5400:
 19859     123F  30FF               	movlw	255
 19860     1240  05BA               	andwf	i1___fltol@f1,f
 19861     1241  30FF               	movlw	255
 19862     1242  05BB               	andwf	i1___fltol@f1+1,f
 19863     1243  30FF               	movlw	255
 19864     1244  05BC               	andwf	i1___fltol@f1+2,f
 19865     1245  3000               	movlw	0
 19866     1246  05BD               	andwf	i1___fltol@f1+3,f
 19867     1247                     i1l5402:
 19868     1247  3096               	movlw	150
 19869     1248  02C3               	subwf	i1___fltol@exp1,f
 19870     1249                     i1l5404:
 19871     1249  1FC3               	btfss	i1___fltol@exp1,7
 19872     124A  2A4C               	goto	u627_21
 19873     124B  2A4D               	goto	u627_20
 19874     124C                     u627_21:
 19875     124C  2A63               	goto	i1l5414
 19876     124D                     u627_20:
 19877     124D                     i1l5406:
 19878     124D  0843               	movf	i1___fltol@exp1,w
 19879     124E  3A80               	xorlw	128
 19880     124F  3E97               	addlw	151
 19881     1250  1803               	skipnc
 19882     1251  2A53               	goto	u628_21
 19883     1252  2A54               	goto	u628_20
 19884     1253                     u628_21:
 19885     1253  2A55               	goto	i1l5412
 19886     1254                     u628_20:
 19887     1254  2A24               	goto	i1l5392
 19888     1255                     i1l5412:
 19889     1255  3001               	movlw	1
 19890     1256                     u629_25:
 19891     1256  36BD               	lsrf	i1___fltol@f1+3,f
 19892     1257  0CBC               	rrf	i1___fltol@f1+2,f
 19893     1258  0CBB               	rrf	i1___fltol@f1+1,f
 19894     1259  0CBA               	rrf	i1___fltol@f1,f
 19895     125A  0B89               	decfsz	9,f
 19896     125B  2A56               	goto	u629_25
 19897     125C  3001               	movlw	1
 19898     125D  07C3               	addwf	i1___fltol@exp1,f
 19899     125E  1D03               	btfss	3,2
 19900     125F  2A61               	goto	u630_21
 19901     1260  2A62               	goto	u630_20
 19902     1261                     u630_21:
 19903     1261  2A55               	goto	i1l5412
 19904     1262                     u630_20:
 19905     1262  2A78               	goto	i1l5422
 19906     1263                     i1l5414:
 19907     1263  3020               	movlw	32
 19908     1264  0243               	subwf	i1___fltol@exp1,w
 19909     1265  1C03               	skipc
 19910     1266  2A68               	goto	u631_21
 19911     1267  2A69               	goto	u631_20
 19912     1268                     u631_21:
 19913     1268  2A73               	goto	i1l1408
 19914     1269                     u631_20:
 19915     1269  2A24               	goto	i1l5392
 19916     126A                     i1l5420:
 19917     126A  3001               	movlw	1
 19918     126B                     u632_25:
 19919     126B  35BA               	lslf	i1___fltol@f1,f
 19920     126C  0DBB               	rlf	i1___fltol@f1+1,f
 19921     126D  0DBC               	rlf	i1___fltol@f1+2,f
 19922     126E  0DBD               	rlf	i1___fltol@f1+3,f
 19923     126F  0B89               	decfsz	9,f
 19924     1270  2A6B               	goto	u632_25
 19925     1271  3001               	movlw	1
 19926     1272  02C3               	subwf	i1___fltol@exp1,f
 19927     1273                     i1l1408:
 19928     1273  0843               	movf	i1___fltol@exp1,w
 19929     1274  1D03               	btfss	3,2
 19930     1275  2A77               	goto	u633_21
 19931     1276  2A78               	goto	u633_20
 19932     1277                     u633_21:
 19933     1277  2A6A               	goto	i1l5420
 19934     1278                     u633_20:
 19935     1278                     i1l5422:
 19936     1278  0842               	movf	i1___fltol@sign1,w
 19937     1279  1903               	btfsc	3,2
 19938     127A  2A7C               	goto	u634_21
 19939     127B  2A7D               	goto	u634_20
 19940     127C                     u634_21:
 19941     127C  2A88               	goto	i1l1411
 19942     127D                     u634_20:
 19943     127D                     i1l5424:
 19944     127D  09BA               	comf	i1___fltol@f1,f
 19945     127E  09BB               	comf	i1___fltol@f1+1,f
 19946     127F  09BC               	comf	i1___fltol@f1+2,f
 19947     1280  09BD               	comf	i1___fltol@f1+3,f
 19948     1281  0ABA               	incf	i1___fltol@f1,f
 19949     1282  1903               	skipnz
 19950     1283  0ABB               	incf	i1___fltol@f1+1,f
 19951     1284  1903               	skipnz
 19952     1285  0ABC               	incf	i1___fltol@f1+2,f
 19953     1286  1903               	skipnz
 19954     1287  0ABD               	incf	i1___fltol@f1+3,f
 19955     1288                     i1l1411:
 19956     1288                     i1l1401:
 19957     1288  0008               	return
 19958     1289                     __end_ofi1___fltol:
 19959                           
 19960                           	psect	text85
 19961     02C5                     __ptext85:	
 19962 ;; *************** function i1___flmul *****************
 19963 ;; Defined at:
 19964 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\sprcmul.c"
 19965 ;; Parameters:    Size  Location     Type
 19966 ;;  b               4    0[BANK0 ] long 
 19967 ;;  a               4    4[BANK0 ] long 
 19968 ;; Auto vars:     Size  Location     Type
 19969 ;;  prod            4   20[BANK0 ] struct .
 19970 ;;  grs             4   14[BANK0 ] unsigned long 
 19971 ;;  temp            2   24[BANK0 ] struct .
 19972 ;;  bexp            1   19[BANK0 ] unsigned char 
 19973 ;;  aexp            1   18[BANK0 ] unsigned char 
 19974 ;;  sign            1   13[BANK0 ] unsigned char 
 19975 ;; Return value:  Size  Location     Type
 19976 ;;                  4    0[BANK0 ] unsigned char 
 19977 ;; Registers used:
 19978 ;;		wreg, status,2, status,0, pclath, cstack
 19979 ;; Tracked objects:
 19980 ;;		On entry : 0/0
 19981 ;;		On exit  : 0/0
 19982 ;;		Unchanged: 0/0
 19983 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 19984 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0
 19985 ;;      Locals:         0      13       0       0       0       0       0       0       0       0       0       0       
      +0       0
 19986 ;;      Temps:          0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0
 19987 ;;      Totals:         0      26       0       0       0       0       0       0       0       0       0       0       
      +0       0
 19988 ;;Total ram usage:       26 bytes
 19989 ;; Hardware stack levels used: 1
 19990 ;; Hardware stack levels required when called: 1
 19991 ;; This function calls:
 19992 ;;		i1__Umul8_16
 19993 ;; This function is called by:
 19994 ;;		_controller
 19995 ;; This function uses a non-reentrant model
 19996 ;;
 19997                           
 19998     02C5                     i1___flmul:	
 19999                           ;psect for function i1___flmul
 20000                           
 20001     02C5                     i1l5622:	
 20002                           ;incstack = 0
 20003                           ; Regs used in i1___flmul: [wreg+status,2+status,0+pclath+cstack]
 20004                           
 20005     02C5  0020               	movlb	0	; select bank0
 20006     02C6  0823               	movf	i1___flmul@b+3,w
 20007     02C7  3980               	andlw	128
 20008     02C8  00AD               	movwf	i1___flmul@sign
 20009     02C9                     i1l5624:
 20010     02C9  3523               	lslf	i1___flmul@b+3,w
 20011     02CA  00B3               	movwf	i1___flmul@bexp
 20012     02CB                     i1l5626:
 20013     02CB  1FA2               	btfss	i1___flmul@b+2,7
 20014     02CC  2ACE               	goto	u681_21
 20015     02CD  2ACF               	goto	u681_20
 20016     02CE                     u681_21:
 20017     02CE  2AD0               	goto	i1l5630
 20018     02CF                     u681_20:
 20019     02CF                     i1l5628:
 20020     02CF  1433               	bsf	i1___flmul@bexp,0
 20021     02D0                     i1l5630:
 20022     02D0  0833               	movf	i1___flmul@bexp,w
 20023     02D1  1903               	btfsc	3,2
 20024     02D2  2AD4               	goto	u682_21
 20025     02D3  2AD5               	goto	u682_20
 20026     02D4                     u682_21:
 20027     02D4  2AE4               	goto	i1l5638
 20028     02D5                     u682_20:
 20029     02D5                     i1l5632:
 20030     02D5  0A33               	incf	i1___flmul@bexp,w
 20031     02D6  1D03               	btfss	3,2
 20032     02D7  2AD9               	goto	u683_21
 20033     02D8  2ADA               	goto	u683_20
 20034     02D9                     u683_21:
 20035     02D9  2AE2               	goto	i1l5636
 20036     02DA                     u683_20:
 20037     02DA                     i1l5634:
 20038     02DA  3000               	movlw	0
 20039     02DB  00A3               	movwf	i1___flmul@b+3
 20040     02DC  3000               	movlw	0
 20041     02DD  00A2               	movwf	i1___flmul@b+2
 20042     02DE  3000               	movlw	0
 20043     02DF  00A1               	movwf	i1___flmul@b+1
 20044     02E0  3000               	movlw	0
 20045     02E1  00A0               	movwf	i1___flmul@b
 20046     02E2                     i1l5636:
 20047     02E2  17A2               	bsf	i1___flmul@b+2,7
 20048     02E3  2AEC               	goto	i1l5640
 20049     02E4                     i1l5638:
 20050     02E4  3000               	movlw	0
 20051     02E5  00A3               	movwf	i1___flmul@b+3
 20052     02E6  3000               	movlw	0
 20053     02E7  00A2               	movwf	i1___flmul@b+2
 20054     02E8  3000               	movlw	0
 20055     02E9  00A1               	movwf	i1___flmul@b+1
 20056     02EA  3000               	movlw	0
 20057     02EB  00A0               	movwf	i1___flmul@b
 20058     02EC                     i1l5640:
 20059     02EC  0827               	movf	i1___flmul@a+3,w
 20060     02ED  3980               	andlw	128
 20061     02EE  06AD               	xorwf	i1___flmul@sign,f
 20062     02EF                     i1l5642:
 20063     02EF  3527               	lslf	i1___flmul@a+3,w
 20064     02F0  00B2               	movwf	i1___flmul@aexp
 20065     02F1                     i1l5644:
 20066     02F1  1FA6               	btfss	i1___flmul@a+2,7
 20067     02F2  2AF4               	goto	u684_21
 20068     02F3  2AF5               	goto	u684_20
 20069     02F4                     u684_21:
 20070     02F4  2AF6               	goto	i1l5648
 20071     02F5                     u684_20:
 20072     02F5                     i1l5646:
 20073     02F5  1432               	bsf	i1___flmul@aexp,0
 20074     02F6                     i1l5648:
 20075     02F6  0832               	movf	i1___flmul@aexp,w
 20076     02F7  1903               	btfsc	3,2
 20077     02F8  2AFA               	goto	u685_21
 20078     02F9  2AFB               	goto	u685_20
 20079     02FA                     u685_21:
 20080     02FA  2B0A               	goto	i1l5656
 20081     02FB                     u685_20:
 20082     02FB                     i1l5650:
 20083     02FB  0A32               	incf	i1___flmul@aexp,w
 20084     02FC  1D03               	btfss	3,2
 20085     02FD  2AFF               	goto	u686_21
 20086     02FE  2B00               	goto	u686_20
 20087     02FF                     u686_21:
 20088     02FF  2B08               	goto	i1l5654
 20089     0300                     u686_20:
 20090     0300                     i1l5652:
 20091     0300  3000               	movlw	0
 20092     0301  00A7               	movwf	i1___flmul@a+3
 20093     0302  3000               	movlw	0
 20094     0303  00A6               	movwf	i1___flmul@a+2
 20095     0304  3000               	movlw	0
 20096     0305  00A5               	movwf	i1___flmul@a+1
 20097     0306  3000               	movlw	0
 20098     0307  00A4               	movwf	i1___flmul@a
 20099     0308                     i1l5654:
 20100     0308  17A6               	bsf	i1___flmul@a+2,7
 20101     0309  2B12               	goto	i1l5658
 20102     030A                     i1l5656:
 20103     030A  3000               	movlw	0
 20104     030B  00A7               	movwf	i1___flmul@a+3
 20105     030C  3000               	movlw	0
 20106     030D  00A6               	movwf	i1___flmul@a+2
 20107     030E  3000               	movlw	0
 20108     030F  00A5               	movwf	i1___flmul@a+1
 20109     0310  3000               	movlw	0
 20110     0311  00A4               	movwf	i1___flmul@a
 20111     0312                     i1l5658:
 20112     0312  0832               	movf	i1___flmul@aexp,w
 20113     0313  1903               	btfsc	3,2
 20114     0314  2B16               	goto	u687_21
 20115     0315  2B17               	goto	u687_20
 20116     0316                     u687_21:
 20117     0316  2B1C               	goto	i1l5662
 20118     0317                     u687_20:
 20119     0317                     i1l5660:
 20120     0317  0833               	movf	i1___flmul@bexp,w
 20121     0318  1D03               	btfss	3,2
 20122     0319  2B1B               	goto	u688_21
 20123     031A  2B1C               	goto	u688_20
 20124     031B                     u688_21:
 20125     031B  2B25               	goto	i1l5666
 20126     031C                     u688_20:
 20127     031C                     i1l5662:
 20128     031C  3000               	movlw	0
 20129     031D  00A3               	movwf	?i1___flmul+3
 20130     031E  3000               	movlw	0
 20131     031F  00A2               	movwf	?i1___flmul+2
 20132     0320  3000               	movlw	0
 20133     0321  00A1               	movwf	?i1___flmul+1
 20134     0322  3000               	movlw	0
 20135     0323  00A0               	movwf	?i1___flmul
 20136     0324  2CFF               	goto	i1l1604
 20137     0325                     i1l5666:
 20138     0325  0820               	movf	i1___flmul@b,w
 20139     0326  00F0               	movwf	i1__Umul8_16@multiplicand
 20140     0327  0826               	movf	i1___flmul@a+2,w
 20141     0328  319D  257E  3182   	fcall	i1__Umul8_16
 20142     032B  0871               	movf	?i1__Umul8_16+1,w
 20143     032C  0020               	movlb	0	; select bank0
 20144     032D  00B9               	movwf	i1___flmul@temp+1
 20145     032E  0870               	movf	?i1__Umul8_16,w
 20146     032F  00B8               	movwf	i1___flmul@temp
 20147     0330                     i1l5668:
 20148     0330  0838               	movf	i1___flmul@temp,w
 20149     0331  00A8               	movwf	??i1___flmul
 20150     0332  01A9               	clrf	??i1___flmul+1
 20151     0333  01AA               	clrf	??i1___flmul+2
 20152     0334  01AB               	clrf	??i1___flmul+3
 20153     0335  082B               	movf	??i1___flmul+3,w
 20154     0336  00B1               	movwf	i1___flmul@grs+3
 20155     0337  082A               	movf	??i1___flmul+2,w
 20156     0338  00B0               	movwf	i1___flmul@grs+2
 20157     0339  0829               	movf	??i1___flmul+1,w
 20158     033A  00AF               	movwf	i1___flmul@grs+1
 20159     033B  0828               	movf	??i1___flmul,w
 20160     033C  00AE               	movwf	i1___flmul@grs
 20161     033D                     i1l5670:
 20162     033D  0839               	movf	i1___flmul@temp+1,w
 20163     033E  00A8               	movwf	??i1___flmul
 20164     033F  01A9               	clrf	??i1___flmul+1
 20165     0340  01AA               	clrf	??i1___flmul+2
 20166     0341  01AB               	clrf	??i1___flmul+3
 20167     0342  082B               	movf	??i1___flmul+3,w
 20168     0343  00B7               	movwf	i1___flmul@prod+3
 20169     0344  082A               	movf	??i1___flmul+2,w
 20170     0345  00B6               	movwf	i1___flmul@prod+2
 20171     0346  0829               	movf	??i1___flmul+1,w
 20172     0347  00B5               	movwf	i1___flmul@prod+1
 20173     0348  0828               	movf	??i1___flmul,w
 20174     0349  00B4               	movwf	i1___flmul@prod
 20175     034A  0821               	movf	i1___flmul@b+1,w
 20176     034B  00F0               	movwf	i1__Umul8_16@multiplicand
 20177     034C  0825               	movf	i1___flmul@a+1,w
 20178     034D  319D  257E  3182   	fcall	i1__Umul8_16
 20179     0350  0871               	movf	?i1__Umul8_16+1,w
 20180     0351  0020               	movlb	0	; select bank0
 20181     0352  00B9               	movwf	i1___flmul@temp+1
 20182     0353  0870               	movf	?i1__Umul8_16,w
 20183     0354  00B8               	movwf	i1___flmul@temp
 20184     0355                     i1l5672:
 20185     0355  0838               	movf	i1___flmul@temp,w
 20186     0356  00A8               	movwf	??i1___flmul
 20187     0357  01A9               	clrf	??i1___flmul+1
 20188     0358  01AA               	clrf	??i1___flmul+2
 20189     0359  01AB               	clrf	??i1___flmul+3
 20190     035A  0828               	movf	??i1___flmul,w
 20191     035B  07AE               	addwf	i1___flmul@grs,f
 20192     035C  0829               	movf	??i1___flmul+1,w
 20193     035D  3DAF               	addwfc	i1___flmul@grs+1,f
 20194     035E  082A               	movf	??i1___flmul+2,w
 20195     035F  3DB0               	addwfc	i1___flmul@grs+2,f
 20196     0360  082B               	movf	??i1___flmul+3,w
 20197     0361  3DB1               	addwfc	i1___flmul@grs+3,f
 20198     0362                     i1l5674:
 20199     0362  0839               	movf	i1___flmul@temp+1,w
 20200     0363  00A8               	movwf	??i1___flmul
 20201     0364  01A9               	clrf	??i1___flmul+1
 20202     0365  01AA               	clrf	??i1___flmul+2
 20203     0366  01AB               	clrf	??i1___flmul+3
 20204     0367  0828               	movf	??i1___flmul,w
 20205     0368  07B4               	addwf	i1___flmul@prod,f
 20206     0369  0829               	movf	??i1___flmul+1,w
 20207     036A  3DB5               	addwfc	i1___flmul@prod+1,f
 20208     036B  082A               	movf	??i1___flmul+2,w
 20209     036C  3DB6               	addwfc	i1___flmul@prod+2,f
 20210     036D  082B               	movf	??i1___flmul+3,w
 20211     036E  3DB7               	addwfc	i1___flmul@prod+3,f
 20212     036F  0822               	movf	i1___flmul@b+2,w
 20213     0370  00F0               	movwf	i1__Umul8_16@multiplicand
 20214     0371  0824               	movf	i1___flmul@a,w
 20215     0372  319D  257E  3182   	fcall	i1__Umul8_16
 20216     0375  0871               	movf	?i1__Umul8_16+1,w
 20217     0376  0020               	movlb	0	; select bank0
 20218     0377  00B9               	movwf	i1___flmul@temp+1
 20219     0378  0870               	movf	?i1__Umul8_16,w
 20220     0379  00B8               	movwf	i1___flmul@temp
 20221     037A                     i1l5676:
 20222     037A  0838               	movf	i1___flmul@temp,w
 20223     037B  00A8               	movwf	??i1___flmul
 20224     037C  01A9               	clrf	??i1___flmul+1
 20225     037D  01AA               	clrf	??i1___flmul+2
 20226     037E  01AB               	clrf	??i1___flmul+3
 20227     037F  0828               	movf	??i1___flmul,w
 20228     0380  07AE               	addwf	i1___flmul@grs,f
 20229     0381  0829               	movf	??i1___flmul+1,w
 20230     0382  3DAF               	addwfc	i1___flmul@grs+1,f
 20231     0383  082A               	movf	??i1___flmul+2,w
 20232     0384  3DB0               	addwfc	i1___flmul@grs+2,f
 20233     0385  082B               	movf	??i1___flmul+3,w
 20234     0386  3DB1               	addwfc	i1___flmul@grs+3,f
 20235     0387                     i1l5678:
 20236     0387  0839               	movf	i1___flmul@temp+1,w
 20237     0388  00A8               	movwf	??i1___flmul
 20238     0389  01A9               	clrf	??i1___flmul+1
 20239     038A  01AA               	clrf	??i1___flmul+2
 20240     038B  01AB               	clrf	??i1___flmul+3
 20241     038C  0828               	movf	??i1___flmul,w
 20242     038D  07B4               	addwf	i1___flmul@prod,f
 20243     038E  0829               	movf	??i1___flmul+1,w
 20244     038F  3DB5               	addwfc	i1___flmul@prod+1,f
 20245     0390  082A               	movf	??i1___flmul+2,w
 20246     0391  3DB6               	addwfc	i1___flmul@prod+2,f
 20247     0392  082B               	movf	??i1___flmul+3,w
 20248     0393  3DB7               	addwfc	i1___flmul@prod+3,f
 20249     0394                     i1l5680:
 20250     0394  3008               	movlw	8
 20251     0395                     u689_25:
 20252     0395  35AE               	lslf	i1___flmul@grs,f
 20253     0396  0DAF               	rlf	i1___flmul@grs+1,f
 20254     0397  0DB0               	rlf	i1___flmul@grs+2,f
 20255     0398  0DB1               	rlf	i1___flmul@grs+3,f
 20256     0399  0B89               	decfsz	9,f
 20257     039A  2B95               	goto	u689_25
 20258     039B                     i1l5682:
 20259     039B  0821               	movf	i1___flmul@b+1,w
 20260     039C  00F0               	movwf	i1__Umul8_16@multiplicand
 20261     039D  0824               	movf	i1___flmul@a,w
 20262     039E  319D  257E  3182   	fcall	i1__Umul8_16
 20263     03A1  0871               	movf	?i1__Umul8_16+1,w
 20264     03A2  0020               	movlb	0	; select bank0
 20265     03A3  00B9               	movwf	i1___flmul@temp+1
 20266     03A4  0870               	movf	?i1__Umul8_16,w
 20267     03A5  00B8               	movwf	i1___flmul@temp
 20268     03A6                     i1l5684:
 20269     03A6  0838               	movf	i1___flmul@temp,w
 20270     03A7  07AE               	addwf	i1___flmul@grs,f
 20271     03A8  0839               	movf	i1___flmul@temp+1,w
 20272     03A9  3DAF               	addwfc	i1___flmul@grs+1,f
 20273     03AA  3000               	movlw	0
 20274     03AB  3DB0               	addwfc	i1___flmul@grs+2,f
 20275     03AC  3DB1               	addwfc	i1___flmul@grs+3,f
 20276     03AD                     i1l5686:
 20277     03AD  0820               	movf	i1___flmul@b,w
 20278     03AE  00F0               	movwf	i1__Umul8_16@multiplicand
 20279     03AF  0825               	movf	i1___flmul@a+1,w
 20280     03B0  319D  257E  3182   	fcall	i1__Umul8_16
 20281     03B3  0871               	movf	?i1__Umul8_16+1,w
 20282     03B4  0020               	movlb	0	; select bank0
 20283     03B5  00B9               	movwf	i1___flmul@temp+1
 20284     03B6  0870               	movf	?i1__Umul8_16,w
 20285     03B7  00B8               	movwf	i1___flmul@temp
 20286     03B8                     i1l5688:
 20287     03B8  0838               	movf	i1___flmul@temp,w
 20288     03B9  07AE               	addwf	i1___flmul@grs,f
 20289     03BA  0839               	movf	i1___flmul@temp+1,w
 20290     03BB  3DAF               	addwfc	i1___flmul@grs+1,f
 20291     03BC  3000               	movlw	0
 20292     03BD  3DB0               	addwfc	i1___flmul@grs+2,f
 20293     03BE  3DB1               	addwfc	i1___flmul@grs+3,f
 20294     03BF                     i1l5690:
 20295     03BF  3008               	movlw	8
 20296     03C0                     u690_25:
 20297     03C0  35AE               	lslf	i1___flmul@grs,f
 20298     03C1  0DAF               	rlf	i1___flmul@grs+1,f
 20299     03C2  0DB0               	rlf	i1___flmul@grs+2,f
 20300     03C3  0DB1               	rlf	i1___flmul@grs+3,f
 20301     03C4  0B89               	decfsz	9,f
 20302     03C5  2BC0               	goto	u690_25
 20303     03C6  0820               	movf	i1___flmul@b,w
 20304     03C7  00F0               	movwf	i1__Umul8_16@multiplicand
 20305     03C8  0824               	movf	i1___flmul@a,w
 20306     03C9  319D  257E  3182   	fcall	i1__Umul8_16
 20307     03CC  0871               	movf	?i1__Umul8_16+1,w
 20308     03CD  0020               	movlb	0	; select bank0
 20309     03CE  00B9               	movwf	i1___flmul@temp+1
 20310     03CF  0870               	movf	?i1__Umul8_16,w
 20311     03D0  00B8               	movwf	i1___flmul@temp
 20312     03D1                     i1l5692:
 20313     03D1  0838               	movf	i1___flmul@temp,w
 20314     03D2  07AE               	addwf	i1___flmul@grs,f
 20315     03D3  0839               	movf	i1___flmul@temp+1,w
 20316     03D4  3DAF               	addwfc	i1___flmul@grs+1,f
 20317     03D5  3000               	movlw	0
 20318     03D6  3DB0               	addwfc	i1___flmul@grs+2,f
 20319     03D7  3DB1               	addwfc	i1___flmul@grs+3,f
 20320     03D8                     i1l5694:
 20321     03D8  0821               	movf	i1___flmul@b+1,w
 20322     03D9  00F0               	movwf	i1__Umul8_16@multiplicand
 20323     03DA  0826               	movf	i1___flmul@a+2,w
 20324     03DB  319D  257E  3182   	fcall	i1__Umul8_16
 20325     03DE  0871               	movf	?i1__Umul8_16+1,w
 20326     03DF  0020               	movlb	0	; select bank0
 20327     03E0  00B9               	movwf	i1___flmul@temp+1
 20328     03E1  0870               	movf	?i1__Umul8_16,w
 20329     03E2  00B8               	movwf	i1___flmul@temp
 20330     03E3  0838               	movf	i1___flmul@temp,w
 20331     03E4  07B4               	addwf	i1___flmul@prod,f
 20332     03E5  0839               	movf	i1___flmul@temp+1,w
 20333     03E6  3DB5               	addwfc	i1___flmul@prod+1,f
 20334     03E7  3000               	movlw	0
 20335     03E8  3DB6               	addwfc	i1___flmul@prod+2,f
 20336     03E9  3DB7               	addwfc	i1___flmul@prod+3,f
 20337     03EA                     i1l5696:
 20338     03EA  0822               	movf	i1___flmul@b+2,w
 20339     03EB  00F0               	movwf	i1__Umul8_16@multiplicand
 20340     03EC  0825               	movf	i1___flmul@a+1,w
 20341     03ED  319D  257E  3182   	fcall	i1__Umul8_16
 20342     03F0  0871               	movf	?i1__Umul8_16+1,w
 20343     03F1  0020               	movlb	0	; select bank0
 20344     03F2  00B9               	movwf	i1___flmul@temp+1
 20345     03F3  0870               	movf	?i1__Umul8_16,w
 20346     03F4  00B8               	movwf	i1___flmul@temp
 20347     03F5                     i1l5698:
 20348     03F5  0838               	movf	i1___flmul@temp,w
 20349     03F6  07B4               	addwf	i1___flmul@prod,f
 20350     03F7  0839               	movf	i1___flmul@temp+1,w
 20351     03F8  3DB5               	addwfc	i1___flmul@prod+1,f
 20352     03F9  3000               	movlw	0
 20353     03FA  3DB6               	addwfc	i1___flmul@prod+2,f
 20354     03FB  3DB7               	addwfc	i1___flmul@prod+3,f
 20355     03FC  0822               	movf	i1___flmul@b+2,w
 20356     03FD  00F0               	movwf	i1__Umul8_16@multiplicand
 20357     03FE  0826               	movf	i1___flmul@a+2,w
 20358     03FF  319D  257E  3182   	fcall	i1__Umul8_16
 20359     0402  0871               	movf	?i1__Umul8_16+1,w
 20360     0403  0020               	movlb	0	; select bank0
 20361     0404  00B9               	movwf	i1___flmul@temp+1
 20362     0405  0870               	movf	?i1__Umul8_16,w
 20363     0406  00B8               	movwf	i1___flmul@temp
 20364     0407                     i1l5700:
 20365     0407  0838               	movf	i1___flmul@temp,w
 20366     0408  00A8               	movwf	??i1___flmul
 20367     0409  0839               	movf	i1___flmul@temp+1,w
 20368     040A  00A9               	movwf	??i1___flmul+1
 20369     040B  01AA               	clrf	??i1___flmul+2
 20370     040C  01AB               	clrf	??i1___flmul+3
 20371     040D  3008               	movlw	8
 20372     040E                     u691_25:
 20373     040E  35A8               	lslf	??i1___flmul,f
 20374     040F  0DA9               	rlf	??i1___flmul+1,f
 20375     0410  0DAA               	rlf	??i1___flmul+2,f
 20376     0411  0DAB               	rlf	??i1___flmul+3,f
 20377     0412                     u691_20:
 20378     0412  0B89               	decfsz	9,f
 20379     0413  2C0E               	goto	u691_25
 20380     0414  0828               	movf	??i1___flmul,w
 20381     0415  07B4               	addwf	i1___flmul@prod,f
 20382     0416  0829               	movf	??i1___flmul+1,w
 20383     0417  3DB5               	addwfc	i1___flmul@prod+1,f
 20384     0418  082A               	movf	??i1___flmul+2,w
 20385     0419  3DB6               	addwfc	i1___flmul@prod+2,f
 20386     041A  082B               	movf	??i1___flmul+3,w
 20387     041B  3DB7               	addwfc	i1___flmul@prod+3,f
 20388     041C                     i1l5702:
 20389     041C  082E               	movf	i1___flmul@grs,w
 20390     041D  00A8               	movwf	??i1___flmul
 20391     041E  082F               	movf	i1___flmul@grs+1,w
 20392     041F  00A9               	movwf	??i1___flmul+1
 20393     0420  0830               	movf	i1___flmul@grs+2,w
 20394     0421  00AA               	movwf	??i1___flmul+2
 20395     0422  0831               	movf	i1___flmul@grs+3,w
 20396     0423  00AB               	movwf	??i1___flmul+3
 20397     0424  3018               	movlw	24
 20398     0425                     u692_25:
 20399     0425  36AB               	lsrf	??i1___flmul+3,f
 20400     0426  0CAA               	rrf	??i1___flmul+2,f
 20401     0427  0CA9               	rrf	??i1___flmul+1,f
 20402     0428  0CA8               	rrf	??i1___flmul,f
 20403     0429                     u692_20:
 20404     0429  0B89               	decfsz	9,f
 20405     042A  2C25               	goto	u692_25
 20406     042B  0828               	movf	??i1___flmul,w
 20407     042C  07B4               	addwf	i1___flmul@prod,f
 20408     042D  0829               	movf	??i1___flmul+1,w
 20409     042E  3DB5               	addwfc	i1___flmul@prod+1,f
 20410     042F  082A               	movf	??i1___flmul+2,w
 20411     0430  3DB6               	addwfc	i1___flmul@prod+2,f
 20412     0431  082B               	movf	??i1___flmul+3,w
 20413     0432  3DB7               	addwfc	i1___flmul@prod+3,f
 20414     0433                     i1l5704:
 20415     0433  3008               	movlw	8
 20416     0434                     u693_25:
 20417     0434  35AE               	lslf	i1___flmul@grs,f
 20418     0435  0DAF               	rlf	i1___flmul@grs+1,f
 20419     0436  0DB0               	rlf	i1___flmul@grs+2,f
 20420     0437  0DB1               	rlf	i1___flmul@grs+3,f
 20421     0438  0B89               	decfsz	9,f
 20422     0439  2C34               	goto	u693_25
 20423     043A                     i1l5706:
 20424     043A  0833               	movf	i1___flmul@bexp,w
 20425     043B  0732               	addwf	i1___flmul@aexp,w
 20426     043C  00A8               	movwf	??i1___flmul
 20427     043D  01A9               	clrf	??i1___flmul+1
 20428     043E  0DA9               	rlf	??i1___flmul+1,f
 20429     043F  0828               	movf	??i1___flmul,w
 20430     0440  3E82               	addlw	130
 20431     0441  00B8               	movwf	i1___flmul@temp
 20432     0442  30FF               	movlw	255
 20433     0443  3D29               	addwfc	??i1___flmul+1,w
 20434     0444  00B9               	movwf	i1___flmul@temp+1
 20435     0445  2C5D               	goto	i1l5718
 20436     0446                     i1l5708:
 20437     0446  3001               	movlw	1
 20438     0447                     u694_25:
 20439     0447  35B4               	lslf	i1___flmul@prod,f
 20440     0448  0DB5               	rlf	i1___flmul@prod+1,f
 20441     0449  0DB6               	rlf	i1___flmul@prod+2,f
 20442     044A  0DB7               	rlf	i1___flmul@prod+3,f
 20443     044B  0B89               	decfsz	9,f
 20444     044C  2C47               	goto	u694_25
 20445     044D                     i1l5710:
 20446     044D  1FB1               	btfss	i1___flmul@grs+3,7
 20447     044E  2C50               	goto	u695_21
 20448     044F  2C51               	goto	u695_20
 20449     0450                     u695_21:
 20450     0450  2C52               	goto	i1l5714
 20451     0451                     u695_20:
 20452     0451                     i1l5712:
 20453     0451  1434               	bsf	i1___flmul@prod,0
 20454     0452                     i1l5714:
 20455     0452  3001               	movlw	1
 20456     0453                     u696_25:
 20457     0453  35AE               	lslf	i1___flmul@grs,f
 20458     0454  0DAF               	rlf	i1___flmul@grs+1,f
 20459     0455  0DB0               	rlf	i1___flmul@grs+2,f
 20460     0456  0DB1               	rlf	i1___flmul@grs+3,f
 20461     0457  0B89               	decfsz	9,f
 20462     0458  2C53               	goto	u696_25
 20463     0459                     i1l5716:
 20464     0459  30FF               	movlw	255
 20465     045A  07B8               	addwf	i1___flmul@temp,f
 20466     045B  30FF               	movlw	255
 20467     045C  3DB9               	addwfc	i1___flmul@temp+1,f
 20468     045D                     i1l5718:
 20469     045D  1FB6               	btfss	i1___flmul@prod+2,7
 20470     045E  2C60               	goto	u697_21
 20471     045F  2C61               	goto	u697_20
 20472     0460                     u697_21:
 20473     0460  2C46               	goto	i1l5708
 20474     0461                     u697_20:
 20475     0461                     i1l5720:
 20476     0461  01B2               	clrf	i1___flmul@aexp
 20477     0462                     i1l5722:
 20478     0462  1FB1               	btfss	i1___flmul@grs+3,7
 20479     0463  2C65               	goto	u698_21
 20480     0464  2C66               	goto	u698_20
 20481     0465                     u698_21:
 20482     0465  2C82               	goto	i1l5730
 20483     0466                     u698_20:
 20484     0466                     i1l5724:
 20485     0466  30FF               	movlw	255
 20486     0467  052E               	andwf	i1___flmul@grs,w
 20487     0468  00A8               	movwf	??i1___flmul
 20488     0469  30FF               	movlw	255
 20489     046A  052F               	andwf	i1___flmul@grs+1,w
 20490     046B  00A9               	movwf	??i1___flmul+1
 20491     046C  30FF               	movlw	255
 20492     046D  0530               	andwf	i1___flmul@grs+2,w
 20493     046E  00AA               	movwf	??i1___flmul+2
 20494     046F  307F               	movlw	127
 20495     0470  0531               	andwf	i1___flmul@grs+3,w
 20496     0471  00AB               	movwf	??i1___flmul+3
 20497     0472  082B               	movf	??i1___flmul+3,w
 20498     0473  042A               	iorwf	??i1___flmul+2,w
 20499     0474  0429               	iorwf	??i1___flmul+1,w
 20500     0475  0428               	iorwf	??i1___flmul,w
 20501     0476  1903               	skipnz
 20502     0477  2C79               	goto	u699_21
 20503     0478  2C7A               	goto	u699_20
 20504     0479                     u699_21:
 20505     0479  2C7D               	goto	i1l1610
 20506     047A                     u699_20:
 20507     047A                     i1l5726:
 20508     047A  3001               	movlw	1
 20509     047B  00B2               	movwf	i1___flmul@aexp
 20510     047C  2C82               	goto	i1l5730
 20511     047D                     i1l1610:
 20512     047D  1C34               	btfss	i1___flmul@prod,0
 20513     047E  2C80               	goto	u700_21
 20514     047F  2C81               	goto	u700_20
 20515     0480                     u700_21:
 20516     0480  2C82               	goto	i1l5730
 20517     0481                     u700_20:
 20518     0481  2C7A               	goto	i1l5726
 20519     0482                     i1l5730:
 20520     0482  0832               	movf	i1___flmul@aexp,w
 20521     0483  1903               	btfsc	3,2
 20522     0484  2C86               	goto	u701_21
 20523     0485  2C87               	goto	u701_20
 20524     0486                     u701_21:
 20525     0486  2CAD               	goto	i1l5740
 20526     0487                     u701_20:
 20527     0487                     i1l5732:
 20528     0487  3001               	movlw	1
 20529     0488  07B4               	addwf	i1___flmul@prod,f
 20530     0489  3000               	movlw	0
 20531     048A  3DB5               	addwfc	i1___flmul@prod+1,f
 20532     048B  3DB6               	addwfc	i1___flmul@prod+2,f
 20533     048C  3DB7               	addwfc	i1___flmul@prod+3,f
 20534     048D                     i1l5734:
 20535     048D  1C37               	btfss	i1___flmul@prod+3,0
 20536     048E  2C90               	goto	u702_21
 20537     048F  2C91               	goto	u702_20
 20538     0490                     u702_21:
 20539     0490  2CAD               	goto	i1l5740
 20540     0491                     u702_20:
 20541     0491                     i1l5736:
 20542     0491  0834               	movf	i1___flmul@prod,w
 20543     0492  00A8               	movwf	??i1___flmul
 20544     0493  0835               	movf	i1___flmul@prod+1,w
 20545     0494  00A9               	movwf	??i1___flmul+1
 20546     0495  0836               	movf	i1___flmul@prod+2,w
 20547     0496  00AA               	movwf	??i1___flmul+2
 20548     0497  0837               	movf	i1___flmul@prod+3,w
 20549     0498  00AB               	movwf	??i1___flmul+3
 20550     0499  3001               	movlw	1
 20551     049A  00AC               	movwf	??i1___flmul+4
 20552     049B                     u703_25:
 20553     049B  37AB               	asrf	??i1___flmul+3,f
 20554     049C  0CAA               	rrf	??i1___flmul+2,f
 20555     049D  0CA9               	rrf	??i1___flmul+1,f
 20556     049E  0CA8               	rrf	??i1___flmul,f
 20557     049F                     u703_20:
 20558     049F  0BAC               	decfsz	??i1___flmul+4,f
 20559     04A0  2C9B               	goto	u703_25
 20560     04A1  082B               	movf	??i1___flmul+3,w
 20561     04A2  00B7               	movwf	i1___flmul@prod+3
 20562     04A3  082A               	movf	??i1___flmul+2,w
 20563     04A4  00B6               	movwf	i1___flmul@prod+2
 20564     04A5  0829               	movf	??i1___flmul+1,w
 20565     04A6  00B5               	movwf	i1___flmul@prod+1
 20566     04A7  0828               	movf	??i1___flmul,w
 20567     04A8  00B4               	movwf	i1___flmul@prod
 20568     04A9                     i1l5738:
 20569     04A9  3001               	movlw	1
 20570     04AA  07B8               	addwf	i1___flmul@temp,f
 20571     04AB  3000               	movlw	0
 20572     04AC  3DB9               	addwfc	i1___flmul@temp+1,f
 20573     04AD                     i1l5740:
 20574     04AD  0839               	movf	i1___flmul@temp+1,w
 20575     04AE  3A80               	xorlw	128
 20576     04AF  00A8               	movwf	??i1___flmul
 20577     04B0  3080               	movlw	128
 20578     04B1  0228               	subwf	??i1___flmul,w
 20579     04B2  1D03               	skipz
 20580     04B3  2CB6               	goto	u704_25
 20581     04B4  30FF               	movlw	255
 20582     04B5  0238               	subwf	i1___flmul@temp,w
 20583     04B6                     u704_25:
 20584     04B6  1C03               	skipc
 20585     04B7  2CB9               	goto	u704_21
 20586     04B8  2CBA               	goto	u704_20
 20587     04B9                     u704_21:
 20588     04B9  2CC4               	goto	i1l5744
 20589     04BA                     u704_20:
 20590     04BA                     i1l5742:
 20591     04BA  307F               	movlw	127
 20592     04BB  0020               	movlb	0	; select bank0
 20593     04BC  00B7               	movwf	i1___flmul@prod+3
 20594     04BD  3080               	movlw	128
 20595     04BE  00B6               	movwf	i1___flmul@prod+2
 20596     04BF  3000               	movlw	0
 20597     04C0  00B5               	movwf	i1___flmul@prod+1
 20598     04C1  3000               	movlw	0
 20599     04C2  00B4               	movwf	i1___flmul@prod
 20600     04C3  2CF5               	goto	i1l1616
 20601     04C4                     i1l5744:
 20602     04C4  0020               	movlb	0	; select bank0
 20603     04C5  0839               	movf	i1___flmul@temp+1,w
 20604     04C6  3A80               	xorlw	128
 20605     04C7  00A8               	movwf	??i1___flmul
 20606     04C8  3080               	movlw	128
 20607     04C9  0228               	subwf	??i1___flmul,w
 20608     04CA  1D03               	skipz
 20609     04CB  2CCE               	goto	u705_25
 20610     04CC  3001               	movlw	1
 20611     04CD  0238               	subwf	i1___flmul@temp,w
 20612     04CE                     u705_25:
 20613     04CE  1803               	skipnc
 20614     04CF  2CD1               	goto	u705_21
 20615     04D0  2CD2               	goto	u705_20
 20616     04D1                     u705_21:
 20617     04D1  2CDD               	goto	i1l5750
 20618     04D2                     u705_20:
 20619     04D2                     i1l5746:
 20620     04D2  3000               	movlw	0
 20621     04D3  0020               	movlb	0	; select bank0
 20622     04D4  00B7               	movwf	i1___flmul@prod+3
 20623     04D5  3000               	movlw	0
 20624     04D6  00B6               	movwf	i1___flmul@prod+2
 20625     04D7  3000               	movlw	0
 20626     04D8  00B5               	movwf	i1___flmul@prod+1
 20627     04D9  3000               	movlw	0
 20628     04DA  00B4               	movwf	i1___flmul@prod
 20629     04DB                     i1l5748:
 20630     04DB  01AD               	clrf	i1___flmul@sign
 20631     04DC  2CF5               	goto	i1l1616
 20632     04DD                     i1l5750:
 20633     04DD  0020               	movlb	0	; select bank0
 20634     04DE  0838               	movf	i1___flmul@temp,w
 20635     04DF  00B3               	movwf	i1___flmul@bexp
 20636     04E0  30FF               	movlw	255
 20637     04E1  05B4               	andwf	i1___flmul@prod,f
 20638     04E2  30FF               	movlw	255
 20639     04E3  05B5               	andwf	i1___flmul@prod+1,f
 20640     04E4  307F               	movlw	127
 20641     04E5  05B6               	andwf	i1___flmul@prod+2,f
 20642     04E6  3000               	movlw	0
 20643     04E7  05B7               	andwf	i1___flmul@prod+3,f
 20644     04E8                     i1l5752:
 20645     04E8  1C33               	btfss	i1___flmul@bexp,0
 20646     04E9  2CEB               	goto	u706_21
 20647     04EA  2CEC               	goto	u706_20
 20648     04EB                     u706_21:
 20649     04EB  2CED               	goto	i1l5756
 20650     04EC                     u706_20:
 20651     04EC                     i1l5754:
 20652     04EC  17B6               	bsf	i1___flmul@prod+2,7
 20653     04ED                     i1l5756:
 20654     04ED  0833               	movf	i1___flmul@bexp,w
 20655     04EE  00A8               	movwf	??i1___flmul
 20656     04EF  3001               	movlw	1
 20657     04F0                     u707_25:
 20658     04F0  36A8               	lsrf	??i1___flmul,f
 20659     04F1  0B89               	decfsz	9,f
 20660     04F2  2CF0               	goto	u707_25
 20661     04F3  0828               	movf	??i1___flmul,w
 20662     04F4  00B7               	movwf	i1___flmul@prod+3
 20663     04F5                     i1l1616:
 20664     04F5  082D               	movf	i1___flmul@sign,w
 20665     04F6  04B7               	iorwf	i1___flmul@prod+3,f
 20666     04F7                     i1l5758:
 20667     04F7  0837               	movf	i1___flmul@prod+3,w
 20668     04F8  00A3               	movwf	?i1___flmul+3
 20669     04F9  0836               	movf	i1___flmul@prod+2,w
 20670     04FA  00A2               	movwf	?i1___flmul+2
 20671     04FB  0835               	movf	i1___flmul@prod+1,w
 20672     04FC  00A1               	movwf	?i1___flmul+1
 20673     04FD  0834               	movf	i1___flmul@prod,w
 20674     04FE  00A0               	movwf	?i1___flmul
 20675     04FF                     i1l1604:
 20676     04FF  0008               	return
 20677     0500                     __end_ofi1___flmul:
 20678                           
 20679                           	psect	text86
 20680     1D7E                     __ptext86:	
 20681 ;; *************** function i1__Umul8_16 *****************
 20682 ;; Defined at:
 20683 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\Umul8_16.c"
 20684 ;; Parameters:    Size  Location     Type
 20685 ;;  multiplier      1    wreg     unsigned char 
 20686 ;;  multiplicand    1    0[COMMON] unsigned char 
 20687 ;; Auto vars:     Size  Location     Type
 20688 ;;  multiplier      1    8[COMMON] unsigned char 
 20689 ;;  word_mpld       2    6[COMMON] unsigned short 
 20690 ;;  product         2    4[COMMON] unsigned short 
 20691 ;; Return value:  Size  Location     Type
 20692 ;;                  2    0[COMMON] unsigned int 
 20693 ;; Registers used:
 20694 ;;		wreg, status,2, status,0
 20695 ;; Tracked objects:
 20696 ;;		On entry : 0/0
 20697 ;;		On exit  : 0/0
 20698 ;;		Unchanged: 0/0
 20699 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 20700 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 20701 ;;      Locals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 20702 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 20703 ;;      Totals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 20704 ;;Total ram usage:        9 bytes
 20705 ;; Hardware stack levels used: 1
 20706 ;; This function calls:
 20707 ;;		Nothing
 20708 ;; This function is called by:
 20709 ;;		i1___flmul
 20710 ;; This function uses a non-reentrant model
 20711 ;;
 20712                           
 20713     1D7E                     i1__Umul8_16:	
 20714                           ;psect for function i1__Umul8_16
 20715                           
 20716                           
 20717                           ;incstack = 0
 20718                           ; Regs used in i1__Umul8_16: [wreg+status,2+status,0]
 20719                           ;i1__Umul8_16@multiplier stored from wreg
 20720     1D7E  00F8               	movwf	i1__Umul8_16@multiplier
 20721     1D7F                     i1l5106:
 20722     1D7F  01F4               	clrf	i1__Umul8_16@product
 20723     1D80  01F5               	clrf	i1__Umul8_16@product+1
 20724     1D81                     i1l5108:
 20725     1D81  0870               	movf	i1__Umul8_16@multiplicand,w
 20726     1D82  00F2               	movwf	??i1__Umul8_16
 20727     1D83  01F3               	clrf	??i1__Umul8_16+1
 20728     1D84  0872               	movf	??i1__Umul8_16,w
 20729     1D85  00F6               	movwf	i1__Umul8_16@word_mpld
 20730     1D86  0873               	movf	??i1__Umul8_16+1,w
 20731     1D87  00F7               	movwf	i1__Umul8_16@word_mpld+1
 20732     1D88                     i1l5110:
 20733     1D88  1C78               	btfss	i1__Umul8_16@multiplier,0
 20734     1D89  2D8B               	goto	u574_21
 20735     1D8A  2D8C               	goto	u574_20
 20736     1D8B                     u574_21:
 20737     1D8B  2D90               	goto	i1l1623
 20738     1D8C                     u574_20:
 20739     1D8C                     i1l5112:
 20740     1D8C  0876               	movf	i1__Umul8_16@word_mpld,w
 20741     1D8D  07F4               	addwf	i1__Umul8_16@product,f
 20742     1D8E  0877               	movf	i1__Umul8_16@word_mpld+1,w
 20743     1D8F  3DF5               	addwfc	i1__Umul8_16@product+1,f
 20744     1D90                     i1l1623:
 20745     1D90  3001               	movlw	1
 20746     1D91                     u575_25:
 20747     1D91  35F6               	lslf	i1__Umul8_16@word_mpld,f
 20748     1D92  0DF7               	rlf	i1__Umul8_16@word_mpld+1,f
 20749     1D93  0B89               	decfsz	9,f
 20750     1D94  2D91               	goto	u575_25
 20751     1D95  1003               	clrc
 20752     1D96  0CF8               	rrf	i1__Umul8_16@multiplier,f
 20753     1D97                     i1l5114:
 20754     1D97  0878               	movf	i1__Umul8_16@multiplier,w
 20755     1D98  1D03               	btfss	3,2
 20756     1D99  2D9B               	goto	u576_21
 20757     1D9A  2D9C               	goto	u576_20
 20758     1D9B                     u576_21:
 20759     1D9B  2D88               	goto	i1l5110
 20760     1D9C                     u576_20:
 20761     1D9C                     i1l5116:
 20762     1D9C  0875               	movf	i1__Umul8_16@product+1,w
 20763     1D9D  00F1               	movwf	?i1__Umul8_16+1
 20764     1D9E  0874               	movf	i1__Umul8_16@product,w
 20765     1D9F  00F0               	movwf	?i1__Umul8_16
 20766     1DA0                     i1l1625:
 20767     1DA0  0008               	return
 20768     1DA1                     __end_ofi1__Umul8_16:
 20769                           
 20770                           	psect	text87
 20771     0DF4                     __ptext87:	
 20772 ;; *************** function i1___fladd *****************
 20773 ;; Defined at:
 20774 ;;		line 10 in file "C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\sprcadd.c"
 20775 ;; Parameters:    Size  Location     Type
 20776 ;;  b               4   26[BANK0 ] unsigned int 
 20777 ;;  a               4   30[BANK0 ] unsigned int 
 20778 ;; Auto vars:     Size  Location     Type
 20779 ;;  grs             1   45[BANK0 ] unsigned char 
 20780 ;;  bexp            1   44[BANK0 ] unsigned char 
 20781 ;;  aexp            1   43[BANK0 ] unsigned char 
 20782 ;;  signs           1   42[BANK0 ] unsigned char 
 20783 ;; Return value:  Size  Location     Type
 20784 ;;                  4   26[BANK0 ] unsigned char 
 20785 ;; Registers used:
 20786 ;;		wreg, status,2, status,0
 20787 ;; Tracked objects:
 20788 ;;		On entry : 0/0
 20789 ;;		On exit  : 0/0
 20790 ;;		Unchanged: 0/0
 20791 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 20792 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0
 20793 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
 20794 ;;      Temps:          0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0
 20795 ;;      Totals:         0      20       0       0       0       0       0       0       0       0       0       0       
      +0       0
 20796 ;;Total ram usage:       20 bytes
 20797 ;; Hardware stack levels used: 1
 20798 ;; This function calls:
 20799 ;;		Nothing
 20800 ;; This function is called by:
 20801 ;;		_controller
 20802 ;; This function uses a non-reentrant model
 20803 ;;
 20804                           
 20805     0DF4                     i1___fladd:	
 20806                           ;psect for function i1___fladd
 20807                           
 20808     0DF4                     i1l5426:	
 20809                           ;incstack = 0
 20810                           ; Regs used in i1___fladd: [wreg+status,2+status,0]
 20811                           
 20812     0DF4  0020               	movlb	0	; select bank0
 20813     0DF5  083D               	movf	i1___fladd@b+3,w
 20814     0DF6  3980               	andlw	128
 20815     0DF7  00CA               	movwf	i1___fladd@signs
 20816     0DF8                     i1l5428:
 20817     0DF8  353D               	lslf	i1___fladd@b+3,w
 20818     0DF9  00CC               	movwf	i1___fladd@bexp
 20819     0DFA                     i1l5430:
 20820     0DFA  1FBC               	btfss	i1___fladd@b+2,7
 20821     0DFB  2DFD               	goto	u635_21
 20822     0DFC  2DFE               	goto	u635_20
 20823     0DFD                     u635_21:
 20824     0DFD  2DFF               	goto	i1l5434
 20825     0DFE                     u635_20:
 20826     0DFE                     i1l5432:
 20827     0DFE  144C               	bsf	i1___fladd@bexp,0
 20828     0DFF                     i1l5434:
 20829     0DFF  084C               	movf	i1___fladd@bexp,w
 20830     0E00  1903               	btfsc	3,2
 20831     0E01  2E03               	goto	u636_21
 20832     0E02  2E04               	goto	u636_20
 20833     0E03                     u636_21:
 20834     0E03  2E14               	goto	i1l5444
 20835     0E04                     u636_20:
 20836     0E04                     i1l5436:
 20837     0E04  0A4C               	incf	i1___fladd@bexp,w
 20838     0E05  1D03               	btfss	3,2
 20839     0E06  2E08               	goto	u637_21
 20840     0E07  2E09               	goto	u637_20
 20841     0E08                     u637_21:
 20842     0E08  2E11               	goto	i1l5440
 20843     0E09                     u637_20:
 20844     0E09                     i1l5438:
 20845     0E09  3000               	movlw	0
 20846     0E0A  00BD               	movwf	i1___fladd@b+3
 20847     0E0B  3000               	movlw	0
 20848     0E0C  00BC               	movwf	i1___fladd@b+2
 20849     0E0D  3000               	movlw	0
 20850     0E0E  00BB               	movwf	i1___fladd@b+1
 20851     0E0F  3000               	movlw	0
 20852     0E10  00BA               	movwf	i1___fladd@b
 20853     0E11                     i1l5440:
 20854     0E11  17BC               	bsf	i1___fladd@b+2,7
 20855     0E12                     i1l5442:
 20856     0E12  01BD               	clrf	i1___fladd@b+3
 20857     0E13  2E1C               	goto	i1l5446
 20858     0E14                     i1l5444:
 20859     0E14  3000               	movlw	0
 20860     0E15  00BD               	movwf	i1___fladd@b+3
 20861     0E16  3000               	movlw	0
 20862     0E17  00BC               	movwf	i1___fladd@b+2
 20863     0E18  3000               	movlw	0
 20864     0E19  00BB               	movwf	i1___fladd@b+1
 20865     0E1A  3000               	movlw	0
 20866     0E1B  00BA               	movwf	i1___fladd@b
 20867     0E1C                     i1l5446:
 20868     0E1C  0841               	movf	i1___fladd@a+3,w
 20869     0E1D  3980               	andlw	128
 20870     0E1E  00CB               	movwf	i1___fladd@aexp
 20871     0E1F                     i1l5448:
 20872     0E1F  084B               	movf	i1___fladd@aexp,w
 20873     0E20  064A               	xorwf	i1___fladd@signs,w
 20874     0E21  1903               	skipnz
 20875     0E22  2E24               	goto	u638_21
 20876     0E23  2E25               	goto	u638_20
 20877     0E24                     u638_21:
 20878     0E24  2E26               	goto	i1l5452
 20879     0E25                     u638_20:
 20880     0E25                     i1l5450:
 20881     0E25  174A               	bsf	i1___fladd@signs,6
 20882     0E26                     i1l5452:
 20883     0E26  3541               	lslf	i1___fladd@a+3,w
 20884     0E27  00CB               	movwf	i1___fladd@aexp
 20885     0E28                     i1l5454:
 20886     0E28  1FC0               	btfss	i1___fladd@a+2,7
 20887     0E29  2E2B               	goto	u639_21
 20888     0E2A  2E2C               	goto	u639_20
 20889     0E2B                     u639_21:
 20890     0E2B  2E2D               	goto	i1l5458
 20891     0E2C                     u639_20:
 20892     0E2C                     i1l5456:
 20893     0E2C  144B               	bsf	i1___fladd@aexp,0
 20894     0E2D                     i1l5458:
 20895     0E2D  084B               	movf	i1___fladd@aexp,w
 20896     0E2E  1903               	btfsc	3,2
 20897     0E2F  2E31               	goto	u640_21
 20898     0E30  2E32               	goto	u640_20
 20899     0E31                     u640_21:
 20900     0E31  2E42               	goto	i1l5468
 20901     0E32                     u640_20:
 20902     0E32                     i1l5460:
 20903     0E32  0A4B               	incf	i1___fladd@aexp,w
 20904     0E33  1D03               	btfss	3,2
 20905     0E34  2E36               	goto	u641_21
 20906     0E35  2E37               	goto	u641_20
 20907     0E36                     u641_21:
 20908     0E36  2E3F               	goto	i1l5464
 20909     0E37                     u641_20:
 20910     0E37                     i1l5462:
 20911     0E37  3000               	movlw	0
 20912     0E38  00C1               	movwf	i1___fladd@a+3
 20913     0E39  3000               	movlw	0
 20914     0E3A  00C0               	movwf	i1___fladd@a+2
 20915     0E3B  3000               	movlw	0
 20916     0E3C  00BF               	movwf	i1___fladd@a+1
 20917     0E3D  3000               	movlw	0
 20918     0E3E  00BE               	movwf	i1___fladd@a
 20919     0E3F                     i1l5464:
 20920     0E3F  17C0               	bsf	i1___fladd@a+2,7
 20921     0E40                     i1l5466:
 20922     0E40  01C1               	clrf	i1___fladd@a+3
 20923     0E41  2E4A               	goto	i1l1508
 20924     0E42                     i1l5468:
 20925     0E42  3000               	movlw	0
 20926     0E43  00C1               	movwf	i1___fladd@a+3
 20927     0E44  3000               	movlw	0
 20928     0E45  00C0               	movwf	i1___fladd@a+2
 20929     0E46  3000               	movlw	0
 20930     0E47  00BF               	movwf	i1___fladd@a+1
 20931     0E48  3000               	movlw	0
 20932     0E49  00BE               	movwf	i1___fladd@a
 20933     0E4A                     i1l1508:
 20934     0E4A  084C               	movf	i1___fladd@bexp,w
 20935     0E4B  024B               	subwf	i1___fladd@aexp,w
 20936     0E4C  1803               	skipnc
 20937     0E4D  2E4F               	goto	u642_21
 20938     0E4E  2E50               	goto	u642_20
 20939     0E4F                     u642_21:
 20940     0E4F  2E74               	goto	i1l5504
 20941     0E50                     u642_20:
 20942     0E50                     i1l5470:
 20943     0E50  1F4A               	btfss	i1___fladd@signs,6
 20944     0E51  2E53               	goto	u643_21
 20945     0E52  2E54               	goto	u643_20
 20946     0E53                     u643_21:
 20947     0E53  2E56               	goto	i1l5474
 20948     0E54                     u643_20:
 20949     0E54                     i1l5472:
 20950     0E54  3080               	movlw	128
 20951     0E55  06CA               	xorwf	i1___fladd@signs,f
 20952     0E56                     i1l5474:
 20953     0E56  084C               	movf	i1___fladd@bexp,w
 20954     0E57  00CD               	movwf	i1___fladd@grs
 20955     0E58                     i1l5476:
 20956     0E58  084B               	movf	i1___fladd@aexp,w
 20957     0E59  00CC               	movwf	i1___fladd@bexp
 20958     0E5A                     i1l5478:
 20959     0E5A  084D               	movf	i1___fladd@grs,w
 20960     0E5B  00CB               	movwf	i1___fladd@aexp
 20961     0E5C                     i1l5480:
 20962     0E5C  083A               	movf	i1___fladd@b,w
 20963     0E5D  00CD               	movwf	i1___fladd@grs
 20964     0E5E                     i1l5482:
 20965     0E5E  083E               	movf	i1___fladd@a,w
 20966     0E5F  00BA               	movwf	i1___fladd@b
 20967     0E60                     i1l5484:
 20968     0E60  084D               	movf	i1___fladd@grs,w
 20969     0E61  00BE               	movwf	i1___fladd@a
 20970     0E62                     i1l5486:
 20971     0E62  083B               	movf	i1___fladd@b+1,w
 20972     0E63  00CD               	movwf	i1___fladd@grs
 20973     0E64                     i1l5488:
 20974     0E64  083F               	movf	i1___fladd@a+1,w
 20975     0E65  00BB               	movwf	i1___fladd@b+1
 20976     0E66                     i1l5490:
 20977     0E66  084D               	movf	i1___fladd@grs,w
 20978     0E67  00BF               	movwf	i1___fladd@a+1
 20979     0E68                     i1l5492:
 20980     0E68  083C               	movf	i1___fladd@b+2,w
 20981     0E69  00CD               	movwf	i1___fladd@grs
 20982     0E6A                     i1l5494:
 20983     0E6A  0840               	movf	i1___fladd@a+2,w
 20984     0E6B  00BC               	movwf	i1___fladd@b+2
 20985     0E6C                     i1l5496:
 20986     0E6C  084D               	movf	i1___fladd@grs,w
 20987     0E6D  00C0               	movwf	i1___fladd@a+2
 20988     0E6E                     i1l5498:
 20989     0E6E  083D               	movf	i1___fladd@b+3,w
 20990     0E6F  00CD               	movwf	i1___fladd@grs
 20991     0E70                     i1l5500:
 20992     0E70  0841               	movf	i1___fladd@a+3,w
 20993     0E71  00BD               	movwf	i1___fladd@b+3
 20994     0E72                     i1l5502:
 20995     0E72  084D               	movf	i1___fladd@grs,w
 20996     0E73  00C1               	movwf	i1___fladd@a+3
 20997     0E74                     i1l5504:
 20998     0E74  01CD               	clrf	i1___fladd@grs
 20999     0E75                     i1l5506:
 21000     0E75  084B               	movf	i1___fladd@aexp,w
 21001     0E76  00C2               	movwf	??i1___fladd
 21002     0E77  01C3               	clrf	??i1___fladd+1
 21003     0E78  0843               	movf	??i1___fladd+1,w
 21004     0E79  00C5               	movwf	??i1___fladd+3
 21005     0E7A  084C               	movf	i1___fladd@bexp,w
 21006     0E7B  0242               	subwf	??i1___fladd,w
 21007     0E7C  00C4               	movwf	??i1___fladd+2
 21008     0E7D  1C03               	skipc
 21009     0E7E  03C5               	decf	??i1___fladd+3,f
 21010     0E7F  0845               	movf	??i1___fladd+3,w
 21011     0E80  3A80               	xorlw	128
 21012     0E81  00C6               	movwf	??i1___fladd+4
 21013     0E82  3080               	movlw	128
 21014     0E83  0246               	subwf	??i1___fladd+4,w
 21015     0E84  1D03               	skipz
 21016     0E85  2E88               	goto	u644_25
 21017     0E86  301A               	movlw	26
 21018     0E87  0244               	subwf	??i1___fladd+2,w
 21019     0E88                     u644_25:
 21020     0E88  1C03               	skipc
 21021     0E89  2E8B               	goto	u644_21
 21022     0E8A  2E8C               	goto	u644_20
 21023     0E8B                     u644_21:
 21024     0E8B  2EC2               	goto	i1l5522
 21025     0E8C                     u644_20:
 21026     0E8C                     i1l5508:
 21027     0E8C  0020               	movlb	0	; select bank0
 21028     0E8D  083D               	movf	i1___fladd@b+3,w
 21029     0E8E  043C               	iorwf	i1___fladd@b+2,w
 21030     0E8F  043B               	iorwf	i1___fladd@b+1,w
 21031     0E90  043A               	iorwf	i1___fladd@b,w
 21032     0E91  1D03               	skipz
 21033     0E92  2E94               	goto	u645_21
 21034     0E93  2E96               	goto	u645_20
 21035     0E94                     u645_21:
 21036     0E94  3001               	movlw	1
 21037     0E95  2E97               	goto	u646_20
 21038     0E96                     u645_20:
 21039     0E96  3000               	movlw	0
 21040     0E97                     u646_20:
 21041     0E97  00CD               	movwf	i1___fladd@grs
 21042     0E98  3000               	movlw	0
 21043     0E99  00BD               	movwf	i1___fladd@b+3
 21044     0E9A  3000               	movlw	0
 21045     0E9B  00BC               	movwf	i1___fladd@b+2
 21046     0E9C  3000               	movlw	0
 21047     0E9D  00BB               	movwf	i1___fladd@b+1
 21048     0E9E  3000               	movlw	0
 21049     0E9F  00BA               	movwf	i1___fladd@b
 21050     0EA0  084B               	movf	i1___fladd@aexp,w
 21051     0EA1  00CC               	movwf	i1___fladd@bexp
 21052     0EA2  2EC9               	goto	i1l1512
 21053     0EA3                     i1l1514:
 21054     0EA3  1C4D               	btfss	i1___fladd@grs,0
 21055     0EA4  2EA6               	goto	u647_21
 21056     0EA5  2EA7               	goto	u647_20
 21057     0EA6                     u647_21:
 21058     0EA6  2EB1               	goto	i1l5512
 21059     0EA7                     u647_20:
 21060     0EA7                     i1l5510:
 21061     0EA7  084D               	movf	i1___fladd@grs,w
 21062     0EA8  00C2               	movwf	??i1___fladd
 21063     0EA9  3001               	movlw	1
 21064     0EAA                     u648_25:
 21065     0EAA  36C2               	lsrf	??i1___fladd,f
 21066     0EAB  0B89               	decfsz	9,f
 21067     0EAC  2EAA               	goto	u648_25
 21068     0EAD  0842               	movf	??i1___fladd,w
 21069     0EAE  3801               	iorlw	1
 21070     0EAF  00CD               	movwf	i1___fladd@grs
 21071     0EB0  2EB3               	goto	i1l5514
 21072     0EB1                     i1l5512:
 21073     0EB1  1003               	clrc
 21074     0EB2  0CCD               	rrf	i1___fladd@grs,f
 21075     0EB3                     i1l5514:
 21076     0EB3  1C3A               	btfss	i1___fladd@b,0
 21077     0EB4  2EB6               	goto	u649_21
 21078     0EB5  2EB7               	goto	u649_20
 21079     0EB6                     u649_21:
 21080     0EB6  2EB8               	goto	i1l5518
 21081     0EB7                     u649_20:
 21082     0EB7                     i1l5516:
 21083     0EB7  17CD               	bsf	i1___fladd@grs,7
 21084     0EB8                     i1l5518:
 21085     0EB8  3001               	movlw	1
 21086     0EB9  00C2               	movwf	??i1___fladd
 21087     0EBA                     u650_25:
 21088     0EBA  37BD               	asrf	i1___fladd@b+3,f
 21089     0EBB  0CBC               	rrf	i1___fladd@b+2,f
 21090     0EBC  0CBB               	rrf	i1___fladd@b+1,f
 21091     0EBD  0CBA               	rrf	i1___fladd@b,f
 21092     0EBE  0BC2               	decfsz	??i1___fladd& (0+127),f
 21093     0EBF  2EBA               	goto	u650_25
 21094     0EC0                     i1l5520:
 21095     0EC0  3001               	movlw	1
 21096     0EC1  07CC               	addwf	i1___fladd@bexp,f
 21097     0EC2                     i1l5522:
 21098     0EC2  0020               	movlb	0	; select bank0
 21099     0EC3  084B               	movf	i1___fladd@aexp,w
 21100     0EC4  024C               	subwf	i1___fladd@bexp,w
 21101     0EC5  1C03               	skipc
 21102     0EC6  2EC8               	goto	u651_21
 21103     0EC7  2EC9               	goto	u651_20
 21104     0EC8                     u651_21:
 21105     0EC8  2EA3               	goto	i1l1514
 21106     0EC9                     u651_20:
 21107     0EC9                     i1l1512:
 21108     0EC9  1B4A               	btfsc	i1___fladd@signs,6
 21109     0ECA  2ECC               	goto	u652_21
 21110     0ECB  2ECD               	goto	u652_20
 21111     0ECC                     u652_21:
 21112     0ECC  2F07               	goto	i1l5548
 21113     0ECD                     u652_20:
 21114     0ECD                     i1l5524:
 21115     0ECD  084C               	movf	i1___fladd@bexp,w
 21116     0ECE  1D03               	btfss	3,2
 21117     0ECF  2ED1               	goto	u653_21
 21118     0ED0  2ED2               	goto	u653_20
 21119     0ED1                     u653_21:
 21120     0ED1  2EDB               	goto	i1l5530
 21121     0ED2                     u653_20:
 21122     0ED2                     i1l5526:
 21123     0ED2  3000               	movlw	0
 21124     0ED3  00BD               	movwf	?i1___fladd+3
 21125     0ED4  3000               	movlw	0
 21126     0ED5  00BC               	movwf	?i1___fladd+2
 21127     0ED6  3000               	movlw	0
 21128     0ED7  00BB               	movwf	?i1___fladd+1
 21129     0ED8  3000               	movlw	0
 21130     0ED9  00BA               	movwf	?i1___fladd
 21131     0EDA  2FFF               	goto	i1l1521
 21132     0EDB                     i1l5530:
 21133     0EDB  083E               	movf	i1___fladd@a,w
 21134     0EDC  07BA               	addwf	i1___fladd@b,f
 21135     0EDD  083F               	movf	i1___fladd@a+1,w
 21136     0EDE  3DBB               	addwfc	i1___fladd@b+1,f
 21137     0EDF  0840               	movf	i1___fladd@a+2,w
 21138     0EE0  3DBC               	addwfc	i1___fladd@b+2,f
 21139     0EE1  0841               	movf	i1___fladd@a+3,w
 21140     0EE2  3DBD               	addwfc	i1___fladd@b+3,f
 21141     0EE3                     i1l5532:
 21142     0EE3  1C3D               	btfss	i1___fladd@b+3,0
 21143     0EE4  2EE6               	goto	u654_21
 21144     0EE5  2EE7               	goto	u654_20
 21145     0EE6                     u654_21:
 21146     0EE6  2F91               	goto	i1l5584
 21147     0EE7                     u654_20:
 21148     0EE7                     i1l5534:
 21149     0EE7  1C4D               	btfss	i1___fladd@grs,0
 21150     0EE8  2EEA               	goto	u655_21
 21151     0EE9  2EEB               	goto	u655_20
 21152     0EEA                     u655_21:
 21153     0EEA  2EF5               	goto	i1l5538
 21154     0EEB                     u655_20:
 21155     0EEB                     i1l5536:
 21156     0EEB  084D               	movf	i1___fladd@grs,w
 21157     0EEC  00C2               	movwf	??i1___fladd
 21158     0EED  3001               	movlw	1
 21159     0EEE                     u656_25:
 21160     0EEE  36C2               	lsrf	??i1___fladd,f
 21161     0EEF  0B89               	decfsz	9,f
 21162     0EF0  2EEE               	goto	u656_25
 21163     0EF1  0842               	movf	??i1___fladd,w
 21164     0EF2  3801               	iorlw	1
 21165     0EF3  00CD               	movwf	i1___fladd@grs
 21166     0EF4  2EF7               	goto	i1l5540
 21167     0EF5                     i1l5538:
 21168     0EF5  1003               	clrc
 21169     0EF6  0CCD               	rrf	i1___fladd@grs,f
 21170     0EF7                     i1l5540:
 21171     0EF7  1C3A               	btfss	i1___fladd@b,0
 21172     0EF8  2EFA               	goto	u657_21
 21173     0EF9  2EFB               	goto	u657_20
 21174     0EFA                     u657_21:
 21175     0EFA  2EFC               	goto	i1l5544
 21176     0EFB                     u657_20:
 21177     0EFB                     i1l5542:
 21178     0EFB  17CD               	bsf	i1___fladd@grs,7
 21179     0EFC                     i1l5544:
 21180     0EFC  3001               	movlw	1
 21181     0EFD  00C2               	movwf	??i1___fladd
 21182     0EFE                     u658_25:
 21183     0EFE  37BD               	asrf	i1___fladd@b+3,f
 21184     0EFF  0CBC               	rrf	i1___fladd@b+2,f
 21185     0F00  0CBB               	rrf	i1___fladd@b+1,f
 21186     0F01  0CBA               	rrf	i1___fladd@b,f
 21187     0F02  0BC2               	decfsz	??i1___fladd& (0+127),f
 21188     0F03  2EFE               	goto	u658_25
 21189     0F04                     i1l5546:
 21190     0F04  3001               	movlw	1
 21191     0F05  07CC               	addwf	i1___fladd@bexp,f
 21192     0F06  2F91               	goto	i1l5584
 21193     0F07                     i1l5548:
 21194     0F07  083D               	movf	i1___fladd@b+3,w
 21195     0F08  3A80               	xorlw	128
 21196     0F09  00C2               	movwf	??i1___fladd
 21197     0F0A  0841               	movf	i1___fladd@a+3,w
 21198     0F0B  3A80               	xorlw	128
 21199     0F0C  0242               	subwf	??i1___fladd,w
 21200     0F0D  1D03               	skipz
 21201     0F0E  2F19               	goto	u659_23
 21202     0F0F  0840               	movf	i1___fladd@a+2,w
 21203     0F10  023C               	subwf	i1___fladd@b+2,w
 21204     0F11  1D03               	skipz
 21205     0F12  2F19               	goto	u659_23
 21206     0F13  083F               	movf	i1___fladd@a+1,w
 21207     0F14  023B               	subwf	i1___fladd@b+1,w
 21208     0F15  1D03               	skipz
 21209     0F16  2F19               	goto	u659_23
 21210     0F17  083E               	movf	i1___fladd@a,w
 21211     0F18  023A               	subwf	i1___fladd@b,w
 21212     0F19                     u659_23:
 21213     0F19  1803               	skipnc
 21214     0F1A  2F1C               	goto	u659_21
 21215     0F1B  2F1D               	goto	u659_20
 21216     0F1C                     u659_21:
 21217     0F1C  2F52               	goto	i1l5560
 21218     0F1D                     u659_20:
 21219     0F1D                     i1l5550:
 21220     0F1D  30FF               	movlw	255
 21221     0F1E  00C2               	movwf	??i1___fladd
 21222     0F1F  30FF               	movlw	255
 21223     0F20  00C3               	movwf	??i1___fladd+1
 21224     0F21  30FF               	movlw	255
 21225     0F22  00C4               	movwf	??i1___fladd+2
 21226     0F23  30FF               	movlw	255
 21227     0F24  00C5               	movwf	??i1___fladd+3
 21228     0F25  083A               	movf	i1___fladd@b,w
 21229     0F26  023E               	subwf	i1___fladd@a,w
 21230     0F27  00C6               	movwf	??i1___fladd+4
 21231     0F28  083B               	movf	i1___fladd@b+1,w
 21232     0F29  3B3F               	subwfb	i1___fladd@a+1,w
 21233     0F2A  00C7               	movwf	??i1___fladd+5
 21234     0F2B  083C               	movf	i1___fladd@b+2,w
 21235     0F2C  3B40               	subwfb	i1___fladd@a+2,w
 21236     0F2D  00C8               	movwf	??i1___fladd+6
 21237     0F2E  083D               	movf	i1___fladd@b+3,w
 21238     0F2F  3B41               	subwfb	i1___fladd@a+3,w
 21239     0F30  00C9               	movwf	??i1___fladd+7
 21240     0F31  0846               	movf	??i1___fladd+4,w
 21241     0F32  07C2               	addwf	??i1___fladd,f
 21242     0F33  0847               	movf	??i1___fladd+5,w
 21243     0F34  3DC3               	addwfc	??i1___fladd+1,f
 21244     0F35  0848               	movf	??i1___fladd+6,w
 21245     0F36  3DC4               	addwfc	??i1___fladd+2,f
 21246     0F37  0849               	movf	??i1___fladd+7,w
 21247     0F38  3DC5               	addwfc	??i1___fladd+3,f
 21248     0F39  0845               	movf	??i1___fladd+3,w
 21249     0F3A  00BD               	movwf	i1___fladd@b+3
 21250     0F3B  0844               	movf	??i1___fladd+2,w
 21251     0F3C  00BC               	movwf	i1___fladd@b+2
 21252     0F3D  0843               	movf	??i1___fladd+1,w
 21253     0F3E  00BB               	movwf	i1___fladd@b+1
 21254     0F3F  0842               	movf	??i1___fladd,w
 21255     0F40  00BA               	movwf	i1___fladd@b
 21256     0F41                     i1l5552:
 21257     0F41  3080               	movlw	128
 21258     0F42  06CA               	xorwf	i1___fladd@signs,f
 21259     0F43                     i1l5554:
 21260     0F43  034D               	decf	i1___fladd@grs,w
 21261     0F44  3AFF               	xorlw	255
 21262     0F45  00CD               	movwf	i1___fladd@grs
 21263     0F46                     i1l5556:
 21264     0F46  084D               	movf	i1___fladd@grs,w
 21265     0F47  1D03               	btfss	3,2
 21266     0F48  2F4A               	goto	u660_21
 21267     0F49  2F4B               	goto	u660_20
 21268     0F4A                     u660_21:
 21269     0F4A  2F5A               	goto	i1l1529
 21270     0F4B                     u660_20:
 21271     0F4B                     i1l5558:
 21272     0F4B  3001               	movlw	1
 21273     0F4C  07BA               	addwf	i1___fladd@b,f
 21274     0F4D  3000               	movlw	0
 21275     0F4E  3DBB               	addwfc	i1___fladd@b+1,f
 21276     0F4F  3DBC               	addwfc	i1___fladd@b+2,f
 21277     0F50  3DBD               	addwfc	i1___fladd@b+3,f
 21278     0F51  2F5A               	goto	i1l1529
 21279     0F52                     i1l5560:
 21280     0F52  083E               	movf	i1___fladd@a,w
 21281     0F53  02BA               	subwf	i1___fladd@b,f
 21282     0F54  083F               	movf	i1___fladd@a+1,w
 21283     0F55  3BBB               	subwfb	i1___fladd@b+1,f
 21284     0F56  0840               	movf	i1___fladd@a+2,w
 21285     0F57  3BBC               	subwfb	i1___fladd@b+2,f
 21286     0F58  0841               	movf	i1___fladd@a+3,w
 21287     0F59  3BBD               	subwfb	i1___fladd@b+3,f
 21288     0F5A                     i1l1529:
 21289     0F5A  083D               	movf	i1___fladd@b+3,w
 21290     0F5B  043C               	iorwf	i1___fladd@b+2,w
 21291     0F5C  043B               	iorwf	i1___fladd@b+1,w
 21292     0F5D  043A               	iorwf	i1___fladd@b,w
 21293     0F5E  1D03               	skipz
 21294     0F5F  2F61               	goto	u661_21
 21295     0F60  2F62               	goto	u661_20
 21296     0F61                     u661_21:
 21297     0F61  2F8D               	goto	i1l5582
 21298     0F62                     u661_20:
 21299     0F62                     i1l5562:
 21300     0F62  084D               	movf	i1___fladd@grs,w
 21301     0F63  1D03               	btfss	3,2
 21302     0F64  2F66               	goto	u662_21
 21303     0F65  2F67               	goto	u662_20
 21304     0F66                     u662_21:
 21305     0F66  2F8D               	goto	i1l5582
 21306     0F67                     u662_20:
 21307     0F67                     i1l5564:
 21308     0F67  3000               	movlw	0
 21309     0F68  00BD               	movwf	?i1___fladd+3
 21310     0F69  3000               	movlw	0
 21311     0F6A  00BC               	movwf	?i1___fladd+2
 21312     0F6B  3000               	movlw	0
 21313     0F6C  00BB               	movwf	?i1___fladd+1
 21314     0F6D  3000               	movlw	0
 21315     0F6E  00BA               	movwf	?i1___fladd
 21316     0F6F  2FFF               	goto	i1l1521
 21317     0F70                     i1l5568:
 21318     0F70  3001               	movlw	1
 21319     0F71                     u663_25:
 21320     0F71  35BA               	lslf	i1___fladd@b,f
 21321     0F72  0DBB               	rlf	i1___fladd@b+1,f
 21322     0F73  0DBC               	rlf	i1___fladd@b+2,f
 21323     0F74  0DBD               	rlf	i1___fladd@b+3,f
 21324     0F75  0B89               	decfsz	9,f
 21325     0F76  2F71               	goto	u663_25
 21326     0F77                     i1l5570:
 21327     0F77  1FCD               	btfss	i1___fladd@grs,7
 21328     0F78  2F7A               	goto	u664_21
 21329     0F79  2F7B               	goto	u664_20
 21330     0F7A                     u664_21:
 21331     0F7A  2F7C               	goto	i1l1533
 21332     0F7B                     u664_20:
 21333     0F7B                     i1l5572:
 21334     0F7B  143A               	bsf	i1___fladd@b,0
 21335     0F7C                     i1l1533:
 21336     0F7C  1C4D               	btfss	i1___fladd@grs,0
 21337     0F7D  2F7F               	goto	u665_21
 21338     0F7E  2F80               	goto	u665_20
 21339     0F7F                     u665_21:
 21340     0F7F  2F84               	goto	i1l5576
 21341     0F80                     u665_20:
 21342     0F80                     i1l5574:
 21343     0F80  1403               	setc
 21344     0F81  0D4D               	rlf	i1___fladd@grs,w
 21345     0F82  00CD               	movwf	i1___fladd@grs
 21346     0F83  2F86               	goto	i1l5578
 21347     0F84                     i1l5576:
 21348     0F84  1003               	clrc
 21349     0F85  0DCD               	rlf	i1___fladd@grs,f
 21350     0F86                     i1l5578:
 21351     0F86  084C               	movf	i1___fladd@bexp,w
 21352     0F87  1903               	btfsc	3,2
 21353     0F88  2F8A               	goto	u666_21
 21354     0F89  2F8B               	goto	u666_20
 21355     0F8A                     u666_21:
 21356     0F8A  2F8D               	goto	i1l5582
 21357     0F8B                     u666_20:
 21358     0F8B                     i1l5580:
 21359     0F8B  3001               	movlw	1
 21360     0F8C  02CC               	subwf	i1___fladd@bexp,f
 21361     0F8D                     i1l5582:
 21362     0F8D  1FBC               	btfss	i1___fladd@b+2,7
 21363     0F8E  2F90               	goto	u667_21
 21364     0F8F  2F91               	goto	u667_20
 21365     0F90                     u667_21:
 21366     0F90  2F70               	goto	i1l5568
 21367     0F91                     u667_20:
 21368     0F91                     i1l5584:
 21369     0F91  01CB               	clrf	i1___fladd@aexp
 21370     0F92                     i1l5586:
 21371     0F92  1FCD               	btfss	i1___fladd@grs,7
 21372     0F93  2F95               	goto	u668_21
 21373     0F94  2F96               	goto	u668_20
 21374     0F95                     u668_21:
 21375     0F95  2FA4               	goto	i1l5594
 21376     0F96                     u668_20:
 21377     0F96                     i1l5588:
 21378     0F96  084D               	movf	i1___fladd@grs,w
 21379     0F97  397F               	andlw	127
 21380     0F98  1903               	btfsc	3,2
 21381     0F99  2F9B               	goto	u669_21
 21382     0F9A  2F9C               	goto	u669_20
 21383     0F9B                     u669_21:
 21384     0F9B  2F9F               	goto	i1l1539
 21385     0F9C                     u669_20:
 21386     0F9C                     i1l5590:
 21387     0F9C  3001               	movlw	1
 21388     0F9D  00CB               	movwf	i1___fladd@aexp
 21389     0F9E  2FA4               	goto	i1l5594
 21390     0F9F                     i1l1539:
 21391     0F9F  1C3A               	btfss	i1___fladd@b,0
 21392     0FA0  2FA2               	goto	u670_21
 21393     0FA1  2FA3               	goto	u670_20
 21394     0FA2                     u670_21:
 21395     0FA2  2FA4               	goto	i1l5594
 21396     0FA3                     u670_20:
 21397     0FA3  2F9C               	goto	i1l5590
 21398     0FA4                     i1l5594:
 21399     0FA4  084B               	movf	i1___fladd@aexp,w
 21400     0FA5  1903               	btfsc	3,2
 21401     0FA6  2FA8               	goto	u671_21
 21402     0FA7  2FA9               	goto	u671_20
 21403     0FA8                     u671_21:
 21404     0FA8  2FD2               	goto	i1l1542
 21405     0FA9                     u671_20:
 21406     0FA9                     i1l5596:
 21407     0FA9  3001               	movlw	1
 21408     0FAA  07BA               	addwf	i1___fladd@b,f
 21409     0FAB  3000               	movlw	0
 21410     0FAC  3DBB               	addwfc	i1___fladd@b+1,f
 21411     0FAD  3DBC               	addwfc	i1___fladd@b+2,f
 21412     0FAE  3DBD               	addwfc	i1___fladd@b+3,f
 21413     0FAF                     i1l5598:
 21414     0FAF  1C3D               	btfss	i1___fladd@b+3,0
 21415     0FB0  2FB2               	goto	u672_21
 21416     0FB1  2FB3               	goto	u672_20
 21417     0FB2                     u672_21:
 21418     0FB2  2FD2               	goto	i1l1542
 21419     0FB3                     u672_20:
 21420     0FB3                     i1l5600:
 21421     0FB3  083A               	movf	i1___fladd@b,w
 21422     0FB4  00C2               	movwf	??i1___fladd
 21423     0FB5  083B               	movf	i1___fladd@b+1,w
 21424     0FB6  00C3               	movwf	??i1___fladd+1
 21425     0FB7  083C               	movf	i1___fladd@b+2,w
 21426     0FB8  00C4               	movwf	??i1___fladd+2
 21427     0FB9  083D               	movf	i1___fladd@b+3,w
 21428     0FBA  00C5               	movwf	??i1___fladd+3
 21429     0FBB  3001               	movlw	1
 21430     0FBC  00C6               	movwf	??i1___fladd+4
 21431     0FBD                     u673_25:
 21432     0FBD  37C5               	asrf	??i1___fladd+3,f
 21433     0FBE  0CC4               	rrf	??i1___fladd+2,f
 21434     0FBF  0CC3               	rrf	??i1___fladd+1,f
 21435     0FC0  0CC2               	rrf	??i1___fladd,f
 21436     0FC1                     u673_20:
 21437     0FC1  0BC6               	decfsz	??i1___fladd+4,f
 21438     0FC2  2FBD               	goto	u673_25
 21439     0FC3  0845               	movf	??i1___fladd+3,w
 21440     0FC4  00BD               	movwf	i1___fladd@b+3
 21441     0FC5  0844               	movf	??i1___fladd+2,w
 21442     0FC6  00BC               	movwf	i1___fladd@b+2
 21443     0FC7  0843               	movf	??i1___fladd+1,w
 21444     0FC8  00BB               	movwf	i1___fladd@b+1
 21445     0FC9  0842               	movf	??i1___fladd,w
 21446     0FCA  00BA               	movwf	i1___fladd@b
 21447     0FCB  0A4C               	incf	i1___fladd@bexp,w
 21448     0FCC  1903               	btfsc	3,2
 21449     0FCD  2FCF               	goto	u674_21
 21450     0FCE  2FD0               	goto	u674_20
 21451     0FCF                     u674_21:
 21452     0FCF  2FD2               	goto	i1l1542
 21453     0FD0                     u674_20:
 21454     0FD0                     i1l5602:
 21455     0FD0  3001               	movlw	1
 21456     0FD1  07CC               	addwf	i1___fladd@bexp,f
 21457     0FD2                     i1l1542:
 21458     0FD2  0A4C               	incf	i1___fladd@bexp,w
 21459     0FD3  1903               	btfsc	3,2
 21460     0FD4  2FD6               	goto	u675_21
 21461     0FD5  2FD7               	goto	u675_20
 21462     0FD6                     u675_21:
 21463     0FD6  2FDC               	goto	i1l5606
 21464     0FD7                     u675_20:
 21465     0FD7                     i1l5604:
 21466     0FD7  084C               	movf	i1___fladd@bexp,w
 21467     0FD8  1D03               	btfss	3,2
 21468     0FD9  2FDB               	goto	u676_21
 21469     0FDA  2FDC               	goto	u676_20
 21470     0FDB                     u676_21:
 21471     0FDB  2FEA               	goto	i1l5612
 21472     0FDC                     u676_20:
 21473     0FDC                     i1l5606:
 21474     0FDC  3000               	movlw	0
 21475     0FDD  00BD               	movwf	i1___fladd@b+3
 21476     0FDE  3000               	movlw	0
 21477     0FDF  00BC               	movwf	i1___fladd@b+2
 21478     0FE0  3000               	movlw	0
 21479     0FE1  00BB               	movwf	i1___fladd@b+1
 21480     0FE2  3000               	movlw	0
 21481     0FE3  00BA               	movwf	i1___fladd@b
 21482     0FE4                     i1l5608:
 21483     0FE4  084C               	movf	i1___fladd@bexp,w
 21484     0FE5  1D03               	btfss	3,2
 21485     0FE6  2FE8               	goto	u677_21
 21486     0FE7  2FE9               	goto	u677_20
 21487     0FE8                     u677_21:
 21488     0FE8  2FEA               	goto	i1l5612
 21489     0FE9                     u677_20:
 21490     0FE9                     i1l5610:
 21491     0FE9  01CA               	clrf	i1___fladd@signs
 21492     0FEA                     i1l5612:
 21493     0FEA  1C4C               	btfss	i1___fladd@bexp,0
 21494     0FEB  2FED               	goto	u678_21
 21495     0FEC  2FEE               	goto	u678_20
 21496     0FED                     u678_21:
 21497     0FED  2FF0               	goto	i1l5616
 21498     0FEE                     u678_20:
 21499     0FEE                     i1l5614:
 21500     0FEE  17BC               	bsf	i1___fladd@b+2,7
 21501     0FEF  2FF2               	goto	i1l1550
 21502     0FF0                     i1l5616:
 21503     0FF0  307F               	movlw	127
 21504     0FF1  05BC               	andwf	i1___fladd@b+2,f
 21505     0FF2                     i1l1550:
 21506     0FF2  084C               	movf	i1___fladd@bexp,w
 21507     0FF3  00C2               	movwf	??i1___fladd
 21508     0FF4  3001               	movlw	1
 21509     0FF5                     u679_25:
 21510     0FF5  36C2               	lsrf	??i1___fladd,f
 21511     0FF6  0B89               	decfsz	9,f
 21512     0FF7  2FF5               	goto	u679_25
 21513     0FF8  0842               	movf	??i1___fladd,w
 21514     0FF9  00BD               	movwf	i1___fladd@b+3
 21515     0FFA                     i1l5618:
 21516     0FFA  1FCA               	btfss	i1___fladd@signs,7
 21517     0FFB  2FFD               	goto	u680_21
 21518     0FFC  2FFE               	goto	u680_20
 21519     0FFD                     u680_21:
 21520     0FFD  2FFF               	goto	i1l1551
 21521     0FFE                     u680_20:
 21522     0FFE                     i1l5620:
 21523     0FFE  17BD               	bsf	i1___fladd@b+3,7
 21524     0FFF                     i1l1551:
 21525     0FFF                     i1l1521:
 21526     0FFF  0008               	return
 21527     1000                     __end_ofi1___fladd:
 21528                           
 21529                           	psect	text88
 21530     1C3E                     __ptext88:	
 21531 ;; *************** function _pwm_fan_LoadDutyValue *****************
 21532 ;; Defined at:
 21533 ;;		line 64 in file "mcc_generated_files/pwm/src/pwm5.c"
 21534 ;; Parameters:    Size  Location     Type
 21535 ;;  dutyValue       2    0[COMMON] unsigned short 
 21536 ;; Auto vars:     Size  Location     Type
 21537 ;;		None
 21538 ;; Return value:  Size  Location     Type
 21539 ;;                  1    wreg      void 
 21540 ;; Registers used:
 21541 ;;		wreg, status,2, status,0
 21542 ;; Tracked objects:
 21543 ;;		On entry : 0/0
 21544 ;;		On exit  : 0/0
 21545 ;;		Unchanged: 0/0
 21546 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 21547 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 21548 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 21549 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 21550 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 21551 ;;Total ram usage:        4 bytes
 21552 ;; Hardware stack levels used: 1
 21553 ;; This function calls:
 21554 ;;		Nothing
 21555 ;; This function is called by:
 21556 ;;		_controller
 21557 ;; This function uses a non-reentrant model
 21558 ;;
 21559                           
 21560     1C3E                     _pwm_fan_LoadDutyValue:	
 21561                           ;psect for function _pwm_fan_LoadDutyValue
 21562                           
 21563     1C3E                     i1l5126:	
 21564                           ;incstack = 0
 21565                           ; Regs used in _pwm_fan_LoadDutyValue: [wreg+status,2+status,0]
 21566                           
 21567                           
 21568                           ;mcc_generated_files/pwm/src/pwm5.c: 64:  void pwm_fan_LoadDutyValue(uint16_t dutyValue)
      +                          ;mcc_generated_files/pwm/src/pwm5.c: 65:  {;mcc_generated_files/pwm/src/pwm5.c: 67:     
      +                           PWM5DCH = (uint8_t) ((dutyValue & 0x03FCu) >> 2);
 21569     1C3E  0871               	movf	pwm_fan_LoadDutyValue@dutyValue+1,w
 21570     1C3F  00F3               	movwf	??_pwm_fan_LoadDutyValue+1
 21571     1C40  0870               	movf	pwm_fan_LoadDutyValue@dutyValue,w
 21572     1C41  00F2               	movwf	??_pwm_fan_LoadDutyValue
 21573     1C42  36F3               	lsrf	??_pwm_fan_LoadDutyValue+1,f
 21574     1C43  0CF2               	rrf	??_pwm_fan_LoadDutyValue,f
 21575     1C44  36F3               	lsrf	??_pwm_fan_LoadDutyValue+1,f
 21576     1C45  0CF2               	rrf	??_pwm_fan_LoadDutyValue,f
 21577     1C46  0872               	movf	??_pwm_fan_LoadDutyValue,w
 21578     1C47  002C               	movlb	12	; select bank12
 21579     1C48  0098               	movwf	24	;volatile
 21580                           
 21581                           ;mcc_generated_files/pwm/src/pwm5.c: 70:      PWM5DCL = (uint8_t) ((dutyValue & 0x0003u)
      +                           << 6);
 21582     1C49  0870               	movf	pwm_fan_LoadDutyValue@dutyValue,w
 21583     1C4A  3903               	andlw	3
 21584     1C4B  00F2               	movwf	??_pwm_fan_LoadDutyValue
 21585     1C4C  3006               	movlw	6
 21586     1C4D                     u577_25:
 21587     1C4D  35F2               	lslf	??_pwm_fan_LoadDutyValue,f
 21588     1C4E  0B89               	decfsz	9,f
 21589     1C4F  2C4D               	goto	u577_25
 21590     1C50  0872               	movf	??_pwm_fan_LoadDutyValue,w
 21591     1C51  0097               	movwf	23	;volatile
 21592     1C52                     i1l72:
 21593     1C52  0008               	return
 21594     1C53                     __end_of_pwm_fan_LoadDutyValue:
 21595                           
 21596                           	psect	text89
 21597     1B75                     __ptext89:	
 21598 ;; *************** function _TMR2_ISR *****************
 21599 ;; Defined at:
 21600 ;;		line 114 in file "mcc_generated_files/timer/src/tmr2.c"
 21601 ;; Parameters:    Size  Location     Type
 21602 ;;		None
 21603 ;; Auto vars:     Size  Location     Type
 21604 ;;		None
 21605 ;; Return value:  Size  Location     Type
 21606 ;;                  1    wreg      void 
 21607 ;; Registers used:
 21608 ;;		wreg, status,2, status,0, pclath, cstack
 21609 ;; Tracked objects:
 21610 ;;		On entry : 0/0
 21611 ;;		On exit  : 0/0
 21612 ;;		Unchanged: 0/0
 21613 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 21614 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 21615 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 21616 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 21617 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 21618 ;;Total ram usage:        0 bytes
 21619 ;; Hardware stack levels used: 1
 21620 ;; Hardware stack levels required when called: 1
 21621 ;; This function calls:
 21622 ;;		NULL
 21623 ;;		_TMR2_DefaultPeriodMatchCallback
 21624 ;; This function is called by:
 21625 ;;		_INTERRUPT_InterruptManager
 21626 ;; This function uses a non-reentrant model
 21627 ;;
 21628                           
 21629     1B75                     _TMR2_ISR:	
 21630                           ;psect for function _TMR2_ISR
 21631                           
 21632     1B75                     i1l6168:	
 21633                           ;incstack = 0
 21634                           ; Regs used in _TMR2_ISR: [wreg+status,2+status,0+pclath+cstack]
 21635                           
 21636                           
 21637                           ;mcc_generated_files/timer/src/tmr2.c: 117:     if(((void*)0) != TMR2_PeriodMatchCallbac
      +                          k)
 21638     1B75  0022               	movlb	2	; select bank2
 21639     1B76  086B               	movf	_TMR2_PeriodMatchCallback^(0+256),w
 21640     1B77  046C               	iorwf	(_TMR2_PeriodMatchCallback+1)^(0+256),w
 21641     1B78  1903               	btfsc	3,2
 21642     1B79  2B7B               	goto	u746_21
 21643     1B7A  2B7C               	goto	u746_20
 21644     1B7B                     u746_21:
 21645     1B7B  2B81               	goto	i1l6172
 21646     1B7C                     u746_20:
 21647     1B7C                     i1l6170:
 21648                           
 21649                           ;mcc_generated_files/timer/src/tmr2.c: 118:     {;mcc_generated_files/timer/src/tmr2.c: 
      +                          119:         TMR2_PeriodMatchCallback();
 21650     1B7C  086C               	movf	(_TMR2_PeriodMatchCallback+1)^(0+256),w
 21651     1B7D  008A               	movwf	10
 21652     1B7E  086B               	movf	_TMR2_PeriodMatchCallback^(0+256),w
 21653     1B7F  000A               	callw
 21654     1B80  319B               	pagesel	$
 21655     1B81                     i1l6172:
 21656                           
 21657                           ;mcc_generated_files/timer/src/tmr2.c: 121:     PIR1bits.TMR2IF = 0;
 21658     1B81  0020               	movlb	0	; select bank0
 21659     1B82  1091               	bcf	17,1	;volatile
 21660     1B83                     i1l432:
 21661     1B83  0008               	return
 21662     1B84                     __end_of_TMR2_ISR:
 21663                           
 21664                           	psect	text90
 21665     1A4B                     __ptext90:	
 21666 ;; *************** function _TMR2_DefaultPeriodMatchCallback *****************
 21667 ;; Defined at:
 21668 ;;		line 129 in file "mcc_generated_files/timer/src/tmr2.c"
 21669 ;; Parameters:    Size  Location     Type
 21670 ;;		None
 21671 ;; Auto vars:     Size  Location     Type
 21672 ;;		None
 21673 ;; Return value:  Size  Location     Type
 21674 ;;                  1    wreg      void 
 21675 ;; Registers used:
 21676 ;;		None
 21677 ;; Tracked objects:
 21678 ;;		On entry : 0/0
 21679 ;;		On exit  : 0/0
 21680 ;;		Unchanged: 0/0
 21681 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 21682 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 21683 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 21684 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 21685 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 21686 ;;Total ram usage:        0 bytes
 21687 ;; Hardware stack levels used: 1
 21688 ;; This function calls:
 21689 ;;		Nothing
 21690 ;; This function is called by:
 21691 ;;		_TMR2_Initialize
 21692 ;;		_TMR2_ISR
 21693 ;; This function uses a non-reentrant model
 21694 ;;
 21695                           
 21696     1A4B                     _TMR2_DefaultPeriodMatchCallback:	
 21697                           ;psect for function _TMR2_DefaultPeriodMatchCallback
 21698                           
 21699     1A4B                     i1l438:	
 21700                           ;incstack = 0
 21701                           ; Regs used in _TMR2_DefaultPeriodMatchCallback: []
 21702                           
 21703     1A4B  0008               	return
 21704     1A4C                     __end_of_TMR2_DefaultPeriodMatchCallback:
 21705                           
 21706                           	psect	text91
 21707     1CE0                     __ptext91:	
 21708 ;; *************** function _EUSART_TransmitISR *****************
 21709 ;; Defined at:
 21710 ;;		line 377 in file "mcc_generated_files/uart/src/eusart.c"
 21711 ;; Parameters:    Size  Location     Type
 21712 ;;		None
 21713 ;; Auto vars:     Size  Location     Type
 21714 ;;  tempTxTail      1    0[COMMON] unsigned char 
 21715 ;; Return value:  Size  Location     Type
 21716 ;;                  1    wreg      void 
 21717 ;; Registers used:
 21718 ;;		wreg, fsr1l, fsr1h, status,2, status,0
 21719 ;; Tracked objects:
 21720 ;;		On entry : 0/0
 21721 ;;		On exit  : 0/0
 21722 ;;		Unchanged: 0/0
 21723 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 21724 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 21725 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 21726 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 21727 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 21728 ;;Total ram usage:        1 bytes
 21729 ;; Hardware stack levels used: 1
 21730 ;; This function calls:
 21731 ;;		Nothing
 21732 ;; This function is called by:
 21733 ;;		_EUSART_Initialize
 21734 ;;		_INTERRUPT_InterruptManager
 21735 ;; This function uses a non-reentrant model
 21736 ;;
 21737                           
 21738     1CE0                     _EUSART_TransmitISR:	
 21739                           ;psect for function _EUSART_TransmitISR
 21740                           
 21741     1CE0                     i1l6236:	
 21742                           ;incstack = 0
 21743                           ; Regs used in _EUSART_TransmitISR: [wreg+fsr1l+fsr1h+status,2+status,0]
 21744                           
 21745                           
 21746                           ;mcc_generated_files/uart/src/eusart.c: 379:     uint8_t tempTxTail;;mcc_generated_files
      +                          /uart/src/eusart.c: 381:     if(sizeof(eusartTxBuffer) > eusartTxBufferRemaining)
 21747     1CE0  3008               	movlw	8
 21748     1CE1  0020               	movlb	0	; select bank0
 21749     1CE2  026A               	subwf	_eusartTxBufferRemaining,w	;volatile
 21750     1CE3  1803               	skipnc
 21751     1CE4  2CE6               	goto	u754_21
 21752     1CE5  2CE7               	goto	u754_20
 21753     1CE6                     u754_21:
 21754     1CE6  2CF9               	goto	i1l745
 21755     1CE7                     u754_20:
 21756     1CE7                     i1l6238:
 21757                           
 21758                           ;mcc_generated_files/uart/src/eusart.c: 382:     {;mcc_generated_files/uart/src/eusart.c
      +                          : 383:        TX1REG = eusartTxBuffer[eusartTxTail];
 21759     1CE7  086B               	movf	_eusartTxTail,w
 21760     1CE8  3E43               	addlw	(low (_eusartTxBuffer| (0+256)))& (0+255)
 21761     1CE9  0086               	movwf	6
 21762     1CEA  3001               	movlw	1	; select bank2/3
 21763     1CEB  0087               	movwf	7
 21764     1CEC  0801               	movf	1,w
 21765     1CED  0023               	movlb	3	; select bank3
 21766     1CEE  009A               	movwf	26	;volatile
 21767     1CEF                     i1l6240:
 21768                           
 21769                           ;mcc_generated_files/uart/src/eusart.c: 384:        tempTxTail = (eusartTxTail + 1U) & (
      +                          (8U) - 1U);
 21770     1CEF  0020               	movlb	0	; select bank0
 21771     1CF0  086B               	movf	_eusartTxTail,w	;volatile
 21772     1CF1  3E01               	addlw	1
 21773     1CF2  3907               	andlw	7
 21774     1CF3  00F0               	movwf	EUSART_TransmitISR@tempTxTail
 21775     1CF4                     i1l6242:
 21776                           
 21777                           ;mcc_generated_files/uart/src/eusart.c: 386:        eusartTxTail = tempTxTail;
 21778     1CF4  0870               	movf	EUSART_TransmitISR@tempTxTail,w
 21779     1CF5  00EB               	movwf	_eusartTxTail	;volatile
 21780     1CF6                     i1l6244:
 21781                           
 21782                           ;mcc_generated_files/uart/src/eusart.c: 387:        eusartTxBufferRemaining++;
 21783     1CF6  3001               	movlw	1
 21784     1CF7  07EA               	addwf	_eusartTxBufferRemaining,f	;volatile
 21785                           
 21786                           ;mcc_generated_files/uart/src/eusart.c: 388:     }
 21787     1CF8  2CFB               	goto	i1l748
 21788     1CF9                     i1l745:	
 21789                           ;mcc_generated_files/uart/src/eusart.c: 389:     else
 21790                           
 21791                           
 21792                           ;mcc_generated_files/uart/src/eusart.c: 390:     {;mcc_generated_files/uart/src/eusart.c
      +                          : 391:         PIE1bits.TXIE = 0;
 21793     1CF9  0021               	movlb	1	; select bank1
 21794     1CFA  1211               	bcf	17,4	;volatile
 21795     1CFB                     i1l748:
 21796     1CFB  0008               	return
 21797     1CFC                     __end_of_EUSART_TransmitISR:
 21798                           
 21799                           	psect	text92
 21800     1F07                     __ptext92:	
 21801 ;; *************** function _EUSART_ReceiveISR *****************
 21802 ;; Defined at:
 21803 ;;		line 308 in file "mcc_generated_files/uart/src/eusart.c"
 21804 ;; Parameters:    Size  Location     Type
 21805 ;;		None
 21806 ;; Auto vars:     Size  Location     Type
 21807 ;;  tempRxHead      1    1[COMMON] unsigned char 
 21808 ;;  regValue        1    0[COMMON] unsigned char 
 21809 ;; Return value:  Size  Location     Type
 21810 ;;                  1    wreg      void 
 21811 ;; Registers used:
 21812 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 21813 ;; Tracked objects:
 21814 ;;		On entry : 0/0
 21815 ;;		On exit  : 0/0
 21816 ;;		Unchanged: 0/0
 21817 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 21818 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 21819 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 21820 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 21821 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 21822 ;;Total ram usage:        2 bytes
 21823 ;; Hardware stack levels used: 1
 21824 ;; Hardware stack levels required when called: 1
 21825 ;; This function calls:
 21826 ;;		NULL
 21827 ;;		_EUSART_DefaultFramingErrorCallback
 21828 ;;		_EUSART_DefaultOverrunErrorCallback
 21829 ;; This function is called by:
 21830 ;;		_EUSART_Initialize
 21831 ;;		_INTERRUPT_InterruptManager
 21832 ;; This function uses a non-reentrant model
 21833 ;;
 21834                           
 21835     1F07                     _EUSART_ReceiveISR:	
 21836                           ;psect for function _EUSART_ReceiveISR
 21837                           
 21838     1F07                     i1l6202:	
 21839                           ;incstack = 0
 21840                           ; Regs used in _EUSART_ReceiveISR: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
 21841                           
 21842                           
 21843                           ;mcc_generated_files/uart/src/eusart.c: 310:     uint8_t regValue;;mcc_generated_files/u
      +                          art/src/eusart.c: 311:  uint8_t tempRxHead;;mcc_generated_files/uart/src/eusart.c: 314: 
      +                              eusartRxStatusBuffer[eusartRxHead].status = 0;
 21844     1F07  0020               	movlb	0	; select bank0
 21845     1F08  3569               	lslf	_eusartRxHead,w	;volatile
 21846     1F09  3EA0               	addlw	(low (_eusartRxStatusBuffer| (0+256)))& (0+255)
 21847     1F0A  0086               	movwf	6
 21848     1F0B  3001               	movlw	1	; select bank3/4
 21849     1F0C  0087               	movwf	7
 21850     1F0D  3000               	movlw	0
 21851     1F0E  3FC0               	movwi [0]fsr1
 21852     1F0F  3FC1               	movwi [1]fsr1
 21853     1F10                     i1l6204:
 21854                           
 21855                           ;mcc_generated_files/uart/src/eusart.c: 316:     if(1 == RC1STAbits.OERR)
 21856     1F10  0023               	movlb	3	; select bank3
 21857     1F11  1C9D               	btfss	29,1	;volatile
 21858     1F12  2F14               	goto	u749_21
 21859     1F13  2F15               	goto	u749_20
 21860     1F14                     u749_21:
 21861     1F14  2F27               	goto	i1l6212
 21862     1F15                     u749_20:
 21863     1F15                     i1l6206:
 21864                           
 21865                           ;mcc_generated_files/uart/src/eusart.c: 317:     {;mcc_generated_files/uart/src/eusart.c
      +                          : 318:         eusartRxStatusBuffer[eusartRxHead].oerr = 1;
 21866     1F15  0020               	movlb	0	; select bank0
 21867     1F16  3569               	lslf	_eusartRxHead,w	;volatile
 21868     1F17  3EA0               	addlw	(low (_eusartRxStatusBuffer| (0+256)))& (0+255)
 21869     1F18  0086               	movwf	6
 21870     1F19  3001               	movlw	1	; select bank3/4
 21871     1F1A  0087               	movwf	7
 21872     1F1B  1501               	bsf	1,2
 21873     1F1C                     i1l6208:
 21874                           
 21875                           ;mcc_generated_files/uart/src/eusart.c: 319:         if(((void*)0) != EUSART_OverrunErro
      +                          rHandler)
 21876     1F1C  085D               	movf	_EUSART_OverrunErrorHandler,w
 21877     1F1D  045E               	iorwf	_EUSART_OverrunErrorHandler+1,w
 21878     1F1E  1903               	btfsc	3,2
 21879     1F1F  2F21               	goto	u750_21
 21880     1F20  2F22               	goto	u750_20
 21881     1F21                     u750_21:
 21882     1F21  2F27               	goto	i1l6212
 21883     1F22                     u750_20:
 21884     1F22                     i1l6210:
 21885                           
 21886                           ;mcc_generated_files/uart/src/eusart.c: 320:         {;mcc_generated_files/uart/src/eusa
      +                          rt.c: 321:             EUSART_OverrunErrorHandler();
 21887     1F22  085E               	movf	_EUSART_OverrunErrorHandler+1,w
 21888     1F23  008A               	movwf	10
 21889     1F24  085D               	movf	_EUSART_OverrunErrorHandler,w
 21890     1F25  000A               	callw
 21891     1F26  319F               	pagesel	$
 21892     1F27                     i1l6212:
 21893                           
 21894                           ;mcc_generated_files/uart/src/eusart.c: 324:     if(1 == RC1STAbits.FERR)
 21895     1F27  0023               	movlb	3	; select bank3
 21896     1F28  1D1D               	btfss	29,2	;volatile
 21897     1F29  2F2B               	goto	u751_21
 21898     1F2A  2F2C               	goto	u751_20
 21899     1F2B                     u751_21:
 21900     1F2B  2F3E               	goto	i1l6220
 21901     1F2C                     u751_20:
 21902     1F2C                     i1l6214:
 21903                           
 21904                           ;mcc_generated_files/uart/src/eusart.c: 325:     {;mcc_generated_files/uart/src/eusart.c
      +                          : 326:         eusartRxStatusBuffer[eusartRxHead].ferr = 1;
 21905     1F2C  0020               	movlb	0	; select bank0
 21906     1F2D  3569               	lslf	_eusartRxHead,w	;volatile
 21907     1F2E  3EA0               	addlw	(low (_eusartRxStatusBuffer| (0+256)))& (0+255)
 21908     1F2F  0086               	movwf	6
 21909     1F30  3001               	movlw	1	; select bank3/4
 21910     1F31  0087               	movwf	7
 21911     1F32  1481               	bsf	1,1
 21912     1F33                     i1l6216:
 21913                           
 21914                           ;mcc_generated_files/uart/src/eusart.c: 327:         if(((void*)0) != EUSART_FramingErro
      +                          rHandler)
 21915     1F33  085F               	movf	_EUSART_FramingErrorHandler,w
 21916     1F34  0460               	iorwf	_EUSART_FramingErrorHandler+1,w
 21917     1F35  1903               	btfsc	3,2
 21918     1F36  2F38               	goto	u752_21
 21919     1F37  2F39               	goto	u752_20
 21920     1F38                     u752_21:
 21921     1F38  2F3E               	goto	i1l6220
 21922     1F39                     u752_20:
 21923     1F39                     i1l6218:
 21924                           
 21925                           ;mcc_generated_files/uart/src/eusart.c: 328:         {;mcc_generated_files/uart/src/eusa
      +                          rt.c: 329:             EUSART_FramingErrorHandler();
 21926     1F39  0860               	movf	_EUSART_FramingErrorHandler+1,w
 21927     1F3A  008A               	movwf	10
 21928     1F3B  085F               	movf	_EUSART_FramingErrorHandler,w
 21929     1F3C  000A               	callw
 21930     1F3D  319F               	pagesel	$
 21931     1F3E                     i1l6220:
 21932                           
 21933                           ;mcc_generated_files/uart/src/eusart.c: 333:     regValue = RC1REG;
 21934     1F3E  0023               	movlb	3	; select bank3
 21935     1F3F  0819               	movf	25,w	;volatile
 21936     1F40  00F0               	movwf	EUSART_ReceiveISR@regValue
 21937     1F41                     i1l6222:
 21938                           
 21939                           ;mcc_generated_files/uart/src/eusart.c: 335:     tempRxHead = (eusartRxHead + 1U) & ((8U
      +                          ) - 1U);
 21940     1F41  0020               	movlb	0	; select bank0
 21941     1F42  0869               	movf	_eusartRxHead,w	;volatile
 21942     1F43  3E01               	addlw	1
 21943     1F44  3907               	andlw	7
 21944     1F45  00F1               	movwf	EUSART_ReceiveISR@tempRxHead
 21945     1F46                     i1l6224:
 21946                           
 21947                           ;mcc_generated_files/uart/src/eusart.c: 336:     if (tempRxHead == eusartRxTail)
 21948     1F46  0871               	movf	EUSART_ReceiveISR@tempRxHead,w
 21949     1F47  0668               	xorwf	_eusartRxTail,w	;volatile
 21950     1F48  1D03               	skipz
 21951     1F49  2F4B               	goto	u753_21
 21952     1F4A  2F4C               	goto	u753_20
 21953     1F4B                     u753_21:
 21954     1F4B  2F4D               	goto	i1l6228
 21955     1F4C                     u753_20:
 21956     1F4C  2F58               	goto	i1l735
 21957     1F4D                     i1l6228:
 21958                           
 21959                           ;mcc_generated_files/uart/src/eusart.c: 341:     {;mcc_generated_files/uart/src/eusart.c
      +                          : 342:         eusartRxBuffer[eusartRxHead] = regValue;
 21960     1F4D  0869               	movf	_eusartRxHead,w
 21961     1F4E  3EB0               	addlw	(low (_eusartRxBuffer| (0+256)))& (0+255)
 21962     1F4F  0086               	movwf	6
 21963     1F50  3001               	movlw	1	; select bank3/4
 21964     1F51  0087               	movwf	7
 21965     1F52  0870               	movf	EUSART_ReceiveISR@regValue,w
 21966     1F53  0081               	movwf	1
 21967     1F54                     i1l6230:
 21968                           
 21969                           ;mcc_generated_files/uart/src/eusart.c: 343:   eusartRxHead = tempRxHead;
 21970     1F54  0871               	movf	EUSART_ReceiveISR@tempRxHead,w
 21971     1F55  00E9               	movwf	_eusartRxHead	;volatile
 21972     1F56                     i1l6232:
 21973                           
 21974                           ;mcc_generated_files/uart/src/eusart.c: 344:   eusartRxCount++;
 21975     1F56  3001               	movlw	1
 21976     1F57  07E7               	addwf	_eusartRxCount,f	;volatile
 21977     1F58                     i1l735:
 21978     1F58  0008               	return
 21979     1F59                     __end_of_EUSART_ReceiveISR:
 21980                           
 21981                           	psect	text93
 21982     1A4E                     __ptext93:	
 21983 ;; *************** function _EUSART_DefaultOverrunErrorCallback *****************
 21984 ;; Defined at:
 21985 ;;		line 423 in file "mcc_generated_files/uart/src/eusart.c"
 21986 ;; Parameters:    Size  Location     Type
 21987 ;;		None
 21988 ;; Auto vars:     Size  Location     Type
 21989 ;;		None
 21990 ;; Return value:  Size  Location     Type
 21991 ;;                  1    wreg      void 
 21992 ;; Registers used:
 21993 ;;		None
 21994 ;; Tracked objects:
 21995 ;;		On entry : 0/0
 21996 ;;		On exit  : 0/0
 21997 ;;		Unchanged: 0/0
 21998 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 21999 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 22000 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 22001 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 22002 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 22003 ;;Total ram usage:        0 bytes
 22004 ;; Hardware stack levels used: 1
 22005 ;; This function calls:
 22006 ;;		Nothing
 22007 ;; This function is called by:
 22008 ;;		_EUSART_Initialize
 22009 ;;		_EUSART_ReceiveISR
 22010 ;; This function uses a non-reentrant model
 22011 ;;
 22012                           
 22013     1A4E                     _EUSART_DefaultOverrunErrorCallback:	
 22014                           ;psect for function _EUSART_DefaultOverrunErrorCallback
 22015                           
 22016     1A4E                     i1l5964:	
 22017                           ;incstack = 0
 22018                           ; Regs used in _EUSART_DefaultOverrunErrorCallback: []
 22019                           
 22020                           
 22021                           ;mcc_generated_files/uart/src/eusart.c: 426:     RC1STAbits.CREN = 0;
 22022     1A4E  0023               	movlb	3	; select bank3
 22023     1A4F  121D               	bcf	29,4	;volatile
 22024                           
 22025                           ;mcc_generated_files/uart/src/eusart.c: 427:     RC1STAbits.CREN = 1;
 22026     1A50  161D               	bsf	29,4	;volatile
 22027     1A51                     i1l766:
 22028     1A51  0008               	return
 22029     1A52                     __end_of_EUSART_DefaultOverrunErrorCallback:
 22030                           
 22031                           	psect	text94
 22032     1A4A                     __ptext94:	
 22033 ;; *************** function _EUSART_DefaultFramingErrorCallback *****************
 22034 ;; Defined at:
 22035 ;;		line 418 in file "mcc_generated_files/uart/src/eusart.c"
 22036 ;; Parameters:    Size  Location     Type
 22037 ;;		None
 22038 ;; Auto vars:     Size  Location     Type
 22039 ;;		None
 22040 ;; Return value:  Size  Location     Type
 22041 ;;                  1    wreg      void 
 22042 ;; Registers used:
 22043 ;;		None
 22044 ;; Tracked objects:
 22045 ;;		On entry : 0/0
 22046 ;;		On exit  : 0/0
 22047 ;;		Unchanged: 0/0
 22048 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 22049 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 22050 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 22051 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 22052 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 22053 ;;Total ram usage:        0 bytes
 22054 ;; Hardware stack levels used: 1
 22055 ;; This function calls:
 22056 ;;		Nothing
 22057 ;; This function is called by:
 22058 ;;		_EUSART_Initialize
 22059 ;;		_EUSART_ReceiveISR
 22060 ;; This function uses a non-reentrant model
 22061 ;;
 22062                           
 22063     1A4A                     _EUSART_DefaultFramingErrorCallback:	
 22064                           ;psect for function _EUSART_DefaultFramingErrorCallback
 22065                           
 22066     1A4A                     i1l763:	
 22067                           ;incstack = 0
 22068                           ; Regs used in _EUSART_DefaultFramingErrorCallback: []
 22069                           
 22070     1A4A  0008               	return
 22071     1A4B                     __end_of_EUSART_DefaultFramingErrorCallback:
 22072                           
 22073                           	psect	text95
 22074     1B66                     __ptext95:	
 22075 ;; *************** function _ADC_ISR *****************
 22076 ;; Defined at:
 22077 ;;		line 134 in file "mcc_generated_files/adc/src/adc.c"
 22078 ;; Parameters:    Size  Location     Type
 22079 ;;		None
 22080 ;; Auto vars:     Size  Location     Type
 22081 ;;		None
 22082 ;; Return value:  Size  Location     Type
 22083 ;;                  1    wreg      void 
 22084 ;; Registers used:
 22085 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
 22086 ;; Tracked objects:
 22087 ;;		On entry : 0/0
 22088 ;;		On exit  : 0/0
 22089 ;;		Unchanged: 0/0
 22090 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 22091 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 22092 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 22093 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 22094 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 22095 ;;Total ram usage:        0 bytes
 22096 ;; Hardware stack levels used: 1
 22097 ;; Hardware stack levels required when called: 2
 22098 ;; This function calls:
 22099 ;;		NULL
 22100 ;;		_ADC_DefaultInterruptHandler
 22101 ;;		_adcConversionDoneHandler
 22102 ;; This function is called by:
 22103 ;;		_INTERRUPT_InterruptManager
 22104 ;; This function uses a non-reentrant model
 22105 ;;
 22106                           
 22107     1B66                     _ADC_ISR:	
 22108                           ;psect for function _ADC_ISR
 22109                           
 22110     1B66                     i1l6154:	
 22111                           ;incstack = 0
 22112                           ; Regs used in _ADC_ISR: [wreg-fsr0h+status,2+status,0+pclath+cstack]
 22113                           
 22114                           
 22115                           ;mcc_generated_files/adc/src/adc.c: 137:     PIR1bits.ADIF = 0;
 22116     1B66  0020               	movlb	0	; select bank0
 22117     1B67  1311               	bcf	17,6	;volatile
 22118     1B68                     i1l6156:
 22119                           
 22120                           ;mcc_generated_files/adc/src/adc.c: 139:  if(ADC_InterruptHandler)
 22121     1B68  0022               	movlb	2	; select bank2
 22122     1B69  086D               	movf	_ADC_InterruptHandler^(0+256),w
 22123     1B6A  046E               	iorwf	(_ADC_InterruptHandler+1)^(0+256),w
 22124     1B6B  1903               	btfsc	3,2
 22125     1B6C  2B6E               	goto	u743_21
 22126     1B6D  2B6F               	goto	u743_20
 22127     1B6E                     u743_21:
 22128     1B6E  2B74               	goto	i1l52
 22129     1B6F                     u743_20:
 22130     1B6F                     i1l6158:
 22131                           
 22132                           ;mcc_generated_files/adc/src/adc.c: 140:     {;mcc_generated_files/adc/src/adc.c: 141:  
      +                                 ADC_InterruptHandler();
 22133     1B6F  086E               	movf	(_ADC_InterruptHandler+1)^(0+256),w
 22134     1B70  008A               	movwf	10
 22135     1B71  086D               	movf	_ADC_InterruptHandler^(0+256),w
 22136     1B72  000A               	callw
 22137     1B73  319B               	pagesel	$
 22138     1B74                     i1l52:
 22139     1B74  0008               	return
 22140     1B75                     __end_of_ADC_ISR:
 22141                           
 22142                           	psect	text96
 22143     1A49                     __ptext96:	
 22144 ;; *************** function _ADC_DefaultInterruptHandler *****************
 22145 ;; Defined at:
 22146 ;;		line 150 in file "mcc_generated_files/adc/src/adc.c"
 22147 ;; Parameters:    Size  Location     Type
 22148 ;;		None
 22149 ;; Auto vars:     Size  Location     Type
 22150 ;;		None
 22151 ;; Return value:  Size  Location     Type
 22152 ;;                  1    wreg      void 
 22153 ;; Registers used:
 22154 ;;		None
 22155 ;; Tracked objects:
 22156 ;;		On entry : 0/0
 22157 ;;		On exit  : 0/0
 22158 ;;		Unchanged: 0/0
 22159 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 22160 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 22161 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 22162 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 22163 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 22164 ;;Total ram usage:        0 bytes
 22165 ;; Hardware stack levels used: 1
 22166 ;; This function calls:
 22167 ;;		Nothing
 22168 ;; This function is called by:
 22169 ;;		_ADC_Initialize
 22170 ;;		_ADC_ISR
 22171 ;; This function uses a non-reentrant model
 22172 ;;
 22173                           
 22174     1A49                     _ADC_DefaultInterruptHandler:	
 22175                           ;psect for function _ADC_DefaultInterruptHandler
 22176                           
 22177     1A49                     i1l58:	
 22178                           ;incstack = 0
 22179                           ; Regs used in _ADC_DefaultInterruptHandler: []
 22180                           
 22181     1A49  0008               	return
 22182     1A4A                     __end_of_ADC_DefaultInterruptHandler:
 22183                           
 22184                           	psect	text97
 22185     1ECB                     __ptext97:	
 22186 ;; *************** function _adcConversionDoneHandler *****************
 22187 ;; Defined at:
 22188 ;;		line 5 in file "adcMeasurements.c"
 22189 ;; Parameters:    Size  Location     Type
 22190 ;;		None
 22191 ;; Auto vars:     Size  Location     Type
 22192 ;;		None
 22193 ;; Return value:  Size  Location     Type
 22194 ;;                  1    wreg      void 
 22195 ;; Registers used:
 22196 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
 22197 ;; Tracked objects:
 22198 ;;		On entry : 0/0
 22199 ;;		On exit  : 0/0
 22200 ;;		Unchanged: 0/0
 22201 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 22202 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 22203 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 22204 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 22205 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 22206 ;;Total ram usage:        2 bytes
 22207 ;; Hardware stack levels used: 1
 22208 ;; Hardware stack levels required when called: 1
 22209 ;; This function calls:
 22210 ;;		_ADC_GetConversionResult
 22211 ;;		i1_ADC_SelectChannel
 22212 ;; This function is called by:
 22213 ;;		_initAdcMultiplexer
 22214 ;;		_ADC_ISR
 22215 ;; This function uses a non-reentrant model
 22216 ;;
 22217                           
 22218     1ECB                     _adcConversionDoneHandler:	
 22219                           ;psect for function _adcConversionDoneHandler
 22220                           
 22221     1ECB                     i1l5972:	
 22222                           ;incstack = 0
 22223                           ; Regs used in _adcConversionDoneHandler: [wreg-fsr0h+status,2+status,0+pclath+cstack]
 22224                           
 22225                           
 22226                           ;adcMeasurements.c: 10:     static adc_channel_t new_channel = potentiometer;;adcMeasure
      +                          ments.c: 11:     switch (new_channel) {
 22227     1ECB  2EEE               	goto	i1l5988
 22228     1ECC                     i1l5974:
 22229                           
 22230                           ;adcMeasurements.c: 13:             ADC_potentiometer = ADC_GetConversionResult();
 22231     1ECC  319A  2256  319E   	fcall	_ADC_GetConversionResult
 22232     1ECF  0871               	movf	?_ADC_GetConversionResult+1,w
 22233     1ED0  0022               	movlb	2	; select bank2
 22234     1ED1  00D6               	movwf	(_ADC_potentiometer+1)^(0+256)	;volatile
 22235     1ED2  0870               	movf	?_ADC_GetConversionResult,w
 22236     1ED3  00D5               	movwf	_ADC_potentiometer^(0+256)	;volatile
 22237     1ED4                     i1l5976:
 22238                           
 22239                           ;adcMeasurements.c: 14:             new_channel = hoogtesensor;
 22240     1ED4  3012               	movlw	18
 22241     1ED5  0020               	movlb	0	; select bank0
 22242     1ED6  00EE               	movwf	adcConversionDoneHandler@new_channel
 22243                           
 22244                           ;adcMeasurements.c: 15:             break;
 22245     1ED7  2F02               	goto	i1l5990
 22246     1ED8                     i1l5978:
 22247                           
 22248                           ;adcMeasurements.c: 17:             ADC_hoogtesensor = ADC_GetConversionResult();
 22249     1ED8  319A  2256  319E   	fcall	_ADC_GetConversionResult
 22250     1EDB  0871               	movf	?_ADC_GetConversionResult+1,w
 22251     1EDC  0020               	movlb	0	; select bank0
 22252     1EDD  00DC               	movwf	_ADC_hoogtesensor+1	;volatile
 22253     1EDE  0870               	movf	?_ADC_GetConversionResult,w
 22254     1EDF  00DB               	movwf	_ADC_hoogtesensor	;volatile
 22255     1EE0                     i1l5980:
 22256                           
 22257                           ;adcMeasurements.c: 18:             new_channel = pomphoogte;
 22258     1EE0  3013               	movlw	19
 22259     1EE1  00EE               	movwf	adcConversionDoneHandler@new_channel
 22260                           
 22261                           ;adcMeasurements.c: 19:             break;
 22262     1EE2  2F02               	goto	i1l5990
 22263     1EE3                     i1l5982:
 22264                           
 22265                           ;adcMeasurements.c: 21:             ADC_pomphoogte = ADC_GetConversionResult();
 22266     1EE3  319A  2256  319E   	fcall	_ADC_GetConversionResult
 22267     1EE6  0871               	movf	?_ADC_GetConversionResult+1,w
 22268     1EE7  0020               	movlb	0	; select bank0
 22269     1EE8  00DA               	movwf	_ADC_pomphoogte+1	;volatile
 22270     1EE9  0870               	movf	?_ADC_GetConversionResult,w
 22271     1EEA  00D9               	movwf	_ADC_pomphoogte	;volatile
 22272     1EEB                     i1l5984:
 22273                           
 22274                           ;adcMeasurements.c: 22:             new_channel = potentiometer;
 22275     1EEB  3010               	movlw	16
 22276     1EEC  00EE               	movwf	adcConversionDoneHandler@new_channel
 22277                           
 22278                           ;adcMeasurements.c: 23:             break;
 22279     1EED  2F02               	goto	i1l5990
 22280     1EEE                     i1l5988:
 22281     1EEE  0020               	movlb	0	; select bank0
 22282     1EEF  086E               	movf	adcConversionDoneHandler@new_channel,w
 22283     1EF0  00F2               	movwf	??_adcConversionDoneHandler
 22284     1EF1  01F3               	clrf	??_adcConversionDoneHandler+1
 22285                           
 22286                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 22287                           ; Switch size 1, requested type "simple"
 22288                           ; Number of cases is 1, Range of values is 0 to 0
 22289                           ; switch strategies available:
 22290                           ; Name         Instructions Cycles
 22291                           ; simple_byte            4     3 (average)
 22292                           ; direct_byte            8     6 (fixed)
 22293                           ; jumptable            260     6 (fixed)
 22294                           ;	Chosen strategy is simple_byte
 22295     1EF2  0873               	movf	??_adcConversionDoneHandler+1,w
 22296     1EF3  3A00               	xorlw	0	; case 0
 22297     1EF4  1903               	skipnz
 22298     1EF5  2EF7               	goto	i1l6432
 22299     1EF6  2F02               	goto	i1l5990
 22300     1EF7                     i1l6432:
 22301                           
 22302                           ; Switch size 1, requested type "simple"
 22303                           ; Number of cases is 3, Range of values is 16 to 19
 22304                           ; switch strategies available:
 22305                           ; Name         Instructions Cycles
 22306                           ; simple_byte           10     6 (average)
 22307                           ; direct_byte           17     9 (fixed)
 22308                           ; jumptable            263     9 (fixed)
 22309                           ;	Chosen strategy is simple_byte
 22310     1EF7  0872               	movf	??_adcConversionDoneHandler,w
 22311     1EF8  3A10               	xorlw	16	; case 16
 22312     1EF9  1903               	skipnz
 22313     1EFA  2ECC               	goto	i1l5974
 22314     1EFB  3A02               	xorlw	2	; case 18
 22315     1EFC  1903               	skipnz
 22316     1EFD  2ED8               	goto	i1l5978
 22317     1EFE  3A01               	xorlw	1	; case 19
 22318     1EFF  1903               	skipnz
 22319     1F00  2EE3               	goto	i1l5982
 22320     1F01  2F02               	goto	i1l5990
 22321     1F02                     i1l5990:
 22322                           
 22323                           ;adcMeasurements.c: 25:     ADC_SelectChannel(new_channel);
 22324     1F02  086E               	movf	adcConversionDoneHandler@new_channel,w
 22325     1F03  319B  2302  319E   	fcall	i1_ADC_SelectChannel
 22326     1F06                     i1l848:
 22327     1F06  0008               	return
 22328     1F07                     __end_of_adcConversionDoneHandler:
 22329                           
 22330                           	psect	text98
 22331     1B02                     __ptext98:	
 22332 ;; *************** function i1_ADC_SelectChannel *****************
 22333 ;; Defined at:
 22334 ;;		line 82 in file "mcc_generated_files/adc/src/adc.c"
 22335 ;; Parameters:    Size  Location     Type
 22336 ;;  channel         1    wreg     enum E6663
 22337 ;; Auto vars:     Size  Location     Type
 22338 ;;  channel         1    1[COMMON] enum E6663
 22339 ;; Return value:  Size  Location     Type
 22340 ;;                  1    wreg      void 
 22341 ;; Registers used:
 22342 ;;		wreg, status,2, status,0
 22343 ;; Tracked objects:
 22344 ;;		On entry : 0/0
 22345 ;;		On exit  : 0/0
 22346 ;;		Unchanged: 0/0
 22347 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 22348 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 22349 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 22350 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 22351 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 22352 ;;Total ram usage:        2 bytes
 22353 ;; Hardware stack levels used: 1
 22354 ;; This function calls:
 22355 ;;		Nothing
 22356 ;; This function is called by:
 22357 ;;		_adcConversionDoneHandler
 22358 ;; This function uses a non-reentrant model
 22359 ;;
 22360                           
 22361     1B02                     i1_ADC_SelectChannel:	
 22362                           ;psect for function i1_ADC_SelectChannel
 22363                           
 22364                           
 22365                           ;incstack = 0
 22366                           ; Regs used in i1_ADC_SelectChannel: [wreg+status,2+status,0]
 22367                           ;i1ADC_SelectChannel@channel stored from wreg
 22368     1B02  00F1               	movwf	i1ADC_SelectChannel@channel
 22369     1B03                     i1l5384:
 22370                           
 22371                           ;mcc_generated_files/adc/src/adc.c: 82: void ADC_SelectChannel(adc_channel_t channel);mc
      +                          c_generated_files/adc/src/adc.c: 83: {;mcc_generated_files/adc/src/adc.c: 85:     ADCON0
      +                          bits.CHS = channel;
 22372     1B03  0871               	movf	i1ADC_SelectChannel@channel,w
 22373     1B04  00F0               	movwf	??i1_ADC_SelectChannel
 22374     1B05  0DF0               	rlf	??i1_ADC_SelectChannel,f
 22375     1B06  0DF0               	rlf	??i1_ADC_SelectChannel,f
 22376     1B07  0021               	movlb	1	; select bank1
 22377     1B08  081D               	movf	29,w	;volatile
 22378     1B09  0670               	xorwf	??i1_ADC_SelectChannel,w
 22379     1B0A  3903               	andlw	-253
 22380     1B0B  0670               	xorwf	??i1_ADC_SelectChannel,w
 22381     1B0C  009D               	movwf	29	;volatile
 22382     1B0D                     i1l30:
 22383     1B0D  0008               	return
 22384     1B0E                     __end_ofi1_ADC_SelectChannel:
 22385                           
 22386                           	psect	text99
 22387     1A56                     __ptext99:	
 22388 ;; *************** function _ADC_GetConversionResult *****************
 22389 ;; Defined at:
 22390 ;;		line 100 in file "mcc_generated_files/adc/src/adc.c"
 22391 ;; Parameters:    Size  Location     Type
 22392 ;;		None
 22393 ;; Auto vars:     Size  Location     Type
 22394 ;;		None
 22395 ;; Return value:  Size  Location     Type
 22396 ;;                  2    0[COMMON] unsigned short 
 22397 ;; Registers used:
 22398 ;;		wreg
 22399 ;; Tracked objects:
 22400 ;;		On entry : 0/0
 22401 ;;		On exit  : 0/0
 22402 ;;		Unchanged: 0/0
 22403 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 22404 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 22405 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 22406 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 22407 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 22408 ;;Total ram usage:        2 bytes
 22409 ;; Hardware stack levels used: 1
 22410 ;; This function calls:
 22411 ;;		Nothing
 22412 ;; This function is called by:
 22413 ;;		_adcConversionDoneHandler
 22414 ;; This function uses a non-reentrant model
 22415 ;;
 22416                           
 22417     1A56                     _ADC_GetConversionResult:	
 22418                           ;psect for function _ADC_GetConversionResult
 22419                           
 22420     1A56                     i1l5122:	
 22421                           ;incstack = 0
 22422                           ; Regs used in _ADC_GetConversionResult: [wreg]
 22423                           
 22424                           
 22425                           ;mcc_generated_files/adc/src/adc.c: 103:     return ((adc_result_t)((ADRESH << 8) + ADRE
      +                          SL));
 22426     1A56  0021               	movlb	1	; select bank1
 22427     1A57  081C               	movf	28,w	;volatile
 22428     1A58  00F1               	movwf	?_ADC_GetConversionResult+1
 22429     1A59  081B               	movf	27,w	;volatile
 22430     1A5A  00F0               	movwf	?_ADC_GetConversionResult
 22431     1A5B                     i1l39:
 22432     1A5B  0008               	return
 22433     1A5C                     __end_of_ADC_GetConversionResult:
 22434     0002                     ___latbits      equ	2
 22435     007E                     btemp           set	126	;btemp
 22436     007E                     int$flags       set	126
 22437     007E                     wtemp0          set	126
 22438                           
 22439                           	psect	config
 22440                           
 22441                           ;Config register CONFIG1 @ 0x8007
 22442                           ;	FEXTOSC External Oscillator mode Selection bits
 22443                           ;	FEXTOSC = OFF, Oscillator not enabled
 22444                           ;	Power-up default value for COSC bits
 22445                           ;	RSTOSC = HFINT32, HFINTOSC with 2x PLL (32MHz)
 22446                           ;	Clock Out Enable bit
 22447                           ;	CLKOUTEN = OFF, CLKOUT function is disabled; I/O or oscillator function on OSC2
 22448                           ;	Clock Switch Enable bit
 22449                           ;	CSWEN = ON, Writing to NOSC and NDIV is allowed
 22450                           ;	Fail-Safe Clock Monitor Enable
 22451                           ;	FCMEN = ON, Fail-Safe Clock Monitor is enabled
 22452     8007                     	org	32775
 22453     8007  3F8C               	dw	16268
 22454                           
 22455                           ;Config register CONFIG2 @ 0x8008
 22456                           ;	Master Clear Enable bit
 22457                           ;	MCLRE = ON, MCLR/VPP pin function is MCLR; Weak pull-up enabled
 22458                           ;	Power-up Timer Enable bit
 22459                           ;	PWRTE = OFF, PWRT disabled
 22460                           ;	Watchdog Timer Enable bits
 22461                           ;	WDTE = OFF, WDT disabled; SWDTEN is ignored
 22462                           ;	Low-power BOR enable bit
 22463                           ;	LPBOREN = OFF, ULPBOR disabled
 22464                           ;	Brown-out Reset Enable bits
 22465                           ;	BOREN = ON, Brown-out Reset enabled, SBOREN bit ignored
 22466                           ;	Brown-out Reset Voltage selection bit
 22467                           ;	BORV = LOW, Brown-out voltage (Vbor) set to 2.45V
 22468                           ;	PPSLOCK bit One-Way Set Enable bit
 22469                           ;	PPS1WAY = ON, The PPSLOCK bit can be cleared and set only once; PPS registers remain l
      +                          ocked after one clear/set cycle
 22470                           ;	Stack Overflow/Underflow Reset Enable bit
 22471                           ;	STVREN = ON, Stack Overflow or Underflow will cause a Reset
 22472                           ;	Debugger enable bit
 22473                           ;	DEBUG = 0x1, unprogrammed default
 22474     8008                     	org	32776
 22475     8008  3FF3               	dw	16371
 22476                           
 22477                           ;Config register CONFIG3 @ 0x8009
 22478                           ;	User NVM self-write protection bits
 22479                           ;	WRT = OFF, Write protection off
 22480                           ;	Low Voltage Programming Enable bit
 22481                           ;	LVP = ON, Low Voltage programming enabled. MCLR/VPP pin function is MCLR. MCLRE config
      +                          uration bit is ignored.
 22482     8009                     	org	32777
 22483     8009  3FFF               	dw	16383
 22484                           
 22485                           ;Config register CONFIG4 @ 0x800A
 22486                           ;	User NVM Program Memory Code Protection bit
 22487                           ;	CP = OFF, User NVM code protection disabled
 22488                           ;	Data NVM Memory Code Protection bit
 22489                           ;	CPD = OFF, Data NVM code protection disabled
 22490     800A                     	org	32778
 22491     800A  3FFF               	dw	16383

Data Sizes:
    Strings     197
    Constant    86
    Data        12
    BSS         126
    Persistent  44
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     14      14
    BANK0            80     53      79
    BANK1            80     80      80
    BANK2            80     35      79
    BANK3            80      0      80
    BANK4            80      0       0
    BANK5            80      0       0
    BANK6            80      0       0
    BANK7            80      0       0
    BANK8            80      0       0
    BANK9            80      0       0
    BANK10           80      0       0
    BANK11           80      0       0
    BANK12           48      0       0

Pointer List with Targets:

    ADC_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> ADC_DefaultInterruptHandler(), adcConversionDoneHandler(), NULL(), 

    ADC_SetInterruptHandler@InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> ADC_DefaultInterruptHandler(), adcConversionDoneHandler(), 

    atoi@s	PTR const unsigned char  size(1) Largest target is 20
		 -> line(BANK3[20]), 

    dtoa@fp	PTR struct _IO_FILE size(2) Largest target is 11
		 -> sprintf@f(BANK2[11]), NULL(NULL[0]), 

    EUSART_FramingErrorCallbackRegister@callbackHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART_DefaultFramingErrorCallback(), 

    EUSART_FramingErrorHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART_DefaultFramingErrorCallback(), NULL(), 

    EUSART_OverrunErrorCallbackRegister@callbackHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART_DefaultOverrunErrorCallback(), 

    EUSART_OverrunErrorHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART_DefaultOverrunErrorCallback(), NULL(), 

    EUSART_RxCompleteInterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> NULL(), 

    EUSART_RxInterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART_ReceiveISR(), NULL(), 

    EUSART_TxCompleteInterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> NULL(), 

    EUSART_TxInterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART_TransmitISR(), NULL(), 

    f$.$buffer	PTR unsigned char  size(2) Largest target is 20
		 -> main@str(BANK2[20]), 

    f$.$source	PTR const unsigned char  size(2) Largest target is 0

    fputc@fp	PTR struct _IO_FILE size(2) Largest target is 11
		 -> sprintf@f(BANK2[11]), NULL(NULL[0]), 

    fputc@fp$.$buffer	PTR unsigned char  size(2) Largest target is 20
		 -> main@str(BANK2[20]), 

    fputc@fp$.$source	PTR const unsigned char  size(2) Largest target is 0

    fputs@fp	PTR struct _IO_FILE size(2) Largest target is 11
		 -> sprintf@f(BANK2[11]), NULL(NULL[0]), 

    fputs@s	PTR const unsigned char  size(1) Largest target is 32
		 -> dbuf(BANK3[32]), 

    INT_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> INT_DefaultInterruptHandler(), NULL(), 

    INT_SetInterruptHandler@InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> INT_DefaultInterruptHandler(), 

    ledstrip$BufferExchange	PTR FTN(PTR void ,unsigned int ,)void  size(2) Largest target is 1
		 -> SPI1_BufferExchange(), 

    ledstrip$BufferRead	PTR FTN(PTR void ,unsigned int ,)void  size(2) Largest target is 1
		 -> SPI1_BufferRead(), 

    ledstrip$BufferWrite	PTR FTN(PTR void ,unsigned int ,)void  size(2) Largest target is 1
		 -> SPI1_BufferWrite(), 

    ledstrip$ByteExchange	PTR FTN(unsigned char ,)unsigned char  size(2) Largest target is 1
		 -> SPI1_ByteExchange(), 

    ledstrip$ByteRead	PTR FTN()unsigned char  size(2) Largest target is 1
		 -> SPI1_ByteRead(), 

    ledstrip$ByteWrite	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> SPI1_ByteWrite(), 

    ledstrip$Close	PTR FTN()void  size(2) Largest target is 1
		 -> SPI1_Close(), 

    ledstrip$Deinitialize	PTR FTN()void  size(2) Largest target is 1
		 -> SPI1_Deinitialize(), 

    ledstrip$Initialize	PTR FTN()void  size(2) Largest target is 1
		 -> SPI1_Initialize(), 

    ledstrip$IsRxReady	PTR FTN()_Bool  size(2) Largest target is 1
		 -> SPI1_IsRxReady(), 

    ledstrip$IsTxReady	PTR FTN()_Bool  size(2) Largest target is 1
		 -> SPI1_IsTxReady(), 

    ledstrip$Open	PTR FTN(unsigned char ,)_Bool  size(2) Largest target is 1
		 -> SPI1_Open(), 

    ledstrip$RxCompleteCallbackRegister	PTR FTN(PTR FTN()void ,)void  size(2) Largest target is 1
		 -> NULL(), 

    ledstrip$TxCompleteCallbackRegister	PTR FTN(PTR FTN()void ,)void  size(2) Largest target is 1
		 -> NULL(), 

    pad@buf	PTR unsigned char  size(1) Largest target is 32
		 -> dbuf(BANK3[32]), 

    pad@fp	PTR struct _IO_FILE size(2) Largest target is 11
		 -> sprintf@f(BANK2[11]), NULL(NULL[0]), 

    printf@ap	PTR void [1] size(1) Largest target is 2
		 -> ?_printf(BANK1[2]), ?_sprintf(BANK1[2]), 

    printf@fmt	PTR const unsigned char  size(2) Largest target is 25
		 -> main@str(BANK2[20]), STR_10(CODE[3]), STR_11(CODE[25]), STR_12(CODE[13]), 
		 -> STR_13(CODE[13]), STR_14(CODE[15]), STR_15(CODE[17]), STR_2(CODE[8]), 
		 -> STR_3(CODE[24]), STR_4(CODE[11]), STR_5(CODE[15]), STR_6(CODE[17]), 
		 -> STR_7(CODE[7]), STR_8(CODE[7]), STR_9(CODE[11]), 

    printOut@str	PTR unsigned char  size(1) Largest target is 20
		 -> main@str(BANK2[20]), 

    read_prec_or_width@ap	PTR PTR void [1] size(2) Largest target is 1
		 -> printf@ap(BANK1[1]), sprintf@ap(BANK2[1]), 

    read_prec_or_width@fmt	PTR PTR const unsigned char  size(1) Largest target is 2
		 -> vfprintf@cfmt(BANK1[2]), 

    S2082$buffer	PTR unsigned char  size(2) Largest target is 20
		 -> main@str(BANK2[20]), 

    S2082$source	PTR const unsigned char  size(2) Largest target is 0

    S242$4$0	PTR void  size(2) Largest target is 0

    S242$5$0	PTR void  size(2) Largest target is 0

    S242$6$0	PTR void  size(2) Largest target is 0

    S242SPI_INTERFACE$BufferExchange	PTR FTN(PTR void ,unsigned int ,)void  size(2) Largest target is 1
		 -> SPI1_BufferExchange(), 

    S242SPI_INTERFACE$BufferRead	PTR FTN(PTR void ,unsigned int ,)void  size(2) Largest target is 1
		 -> SPI1_BufferRead(), 

    S242SPI_INTERFACE$BufferWrite	PTR FTN(PTR void ,unsigned int ,)void  size(2) Largest target is 1
		 -> SPI1_BufferWrite(), 

    S242SPI_INTERFACE$ByteExchange	PTR FTN(unsigned char ,)unsigned char  size(2) Largest target is 1
		 -> SPI1_ByteExchange(), 

    S242SPI_INTERFACE$ByteRead	PTR FTN()unsigned char  size(2) Largest target is 1
		 -> SPI1_ByteRead(), 

    S242SPI_INTERFACE$ByteWrite	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> SPI1_ByteWrite(), 

    S242SPI_INTERFACE$Close	PTR FTN()void  size(2) Largest target is 1
		 -> SPI1_Close(), 

    S242SPI_INTERFACE$Deinitialize	PTR FTN()void  size(2) Largest target is 1
		 -> SPI1_Deinitialize(), 

    S242SPI_INTERFACE$Initialize	PTR FTN()void  size(2) Largest target is 1
		 -> SPI1_Initialize(), 

    S242SPI_INTERFACE$IsRxReady	PTR FTN()_Bool  size(2) Largest target is 1
		 -> SPI1_IsRxReady(), 

    S242SPI_INTERFACE$IsTxReady	PTR FTN()_Bool  size(2) Largest target is 1
		 -> SPI1_IsTxReady(), 

    S242SPI_INTERFACE$Open	PTR FTN(unsigned char ,)_Bool  size(2) Largest target is 1
		 -> SPI1_Open(), 

    S242SPI_INTERFACE$RxCompleteCallbackRegister	PTR FTN(PTR FTN()void ,)void  size(2) Largest target is 1
		 -> NULL(), 

    S242SPI_INTERFACE$TxCompleteCallbackRegister	PTR FTN(PTR FTN()void ,)void  size(2) Largest target is 1
		 -> NULL(), 

    S997$17$0	PTR FTN()void  size(2) Largest target is 0

    S997$18$0	PTR FTN()void  size(2) Largest target is 0

    S997$20$0	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART_DefaultFramingErrorCallback(), 

    S997$21$0	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART_DefaultOverrunErrorCallback(), 

    S997$AutoBaudEventEnableGet	PTR FTN()_Bool  size(2) Largest target is 1
		 -> NULL(), 

    S997$AutoBaudQuery	PTR FTN()_Bool  size(2) Largest target is 1
		 -> EUSART_AutoBaudQuery(), 

    S997$AutoBaudSet	PTR FTN(_Bool ,)void  size(2) Largest target is 1
		 -> EUSART_AutoBaudSet(), 

    S997$BaudRateGet	PTR FTN()unsigned long  size(2) Largest target is 1
		 -> NULL(), 

    S997$BaudRateSet	PTR FTN(unsigned long ,)void  size(2) Largest target is 1
		 -> NULL(), 

    S997$BRGCountGet	PTR FTN()unsigned long  size(2) Largest target is 1
		 -> NULL(), 

    S997$BRGCountSet	PTR FTN(unsigned long ,)void  size(2) Largest target is 1
		 -> NULL(), 

    S997$Deinitialize	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART_Deinitialize(), 

    S997$ErrorGet	PTR FTN()unsigned int  size(2) Largest target is 2
		 -> EUSART_ErrorGet(), 

    S997$EventCallbackRegister	PTR FTN(PTR FTN()void ,)void  size(2) Largest target is 1
		 -> NULL(), 

    S997$FramingErrorCallbackRegister	PTR FTN(PTR FTN()void ,)void  size(2) Largest target is 1
		 -> EUSART_FramingErrorCallbackRegister(), 

    S997$Initialize	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART_Initialize(), 

    S997$IsRxReady	PTR FTN()_Bool  size(2) Largest target is 1
		 -> EUSART_IsRxReady(), 

    S997$IsTxDone	PTR FTN()_Bool  size(2) Largest target is 1
		 -> EUSART_IsTxDone(), 

    S997$IsTxReady	PTR FTN()_Bool  size(2) Largest target is 1
		 -> EUSART_IsTxReady(), 

    S997$OverrunErrorCallbackRegister	PTR FTN(PTR FTN()void ,)void  size(2) Largest target is 1
		 -> EUSART_OverrunErrorCallbackRegister(), 

    S997$ParityErrorCallbackRegister	PTR FTN(PTR FTN()void ,)void  size(2) Largest target is 1
		 -> NULL(), 

    S997$Read	PTR FTN()unsigned char  size(2) Largest target is 1
		 -> EUSART_Read(), 

    S997$RxCompleteCallbackRegister	PTR FTN(PTR FTN()void ,)void  size(2) Largest target is 1
		 -> EUSART_RxCompleteCallbackRegister(), 

    S997$TransmitDisable	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART_TransmitDisable(), 

    S997$TransmitEnable	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART_TransmitEnable(), 

    S997$TxCollisionCallbackRegister	PTR FTN(PTR FTN()void ,)void  size(2) Largest target is 1
		 -> NULL(), 

    S997$TxCompleteCallbackRegister	PTR FTN(PTR FTN()void ,)void  size(2) Largest target is 1
		 -> EUSART_TxCompleteCallbackRegister(), 

    S997$Write	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> EUSART_Write(), 

    sp__readLine	PTR unsigned char  size(1) Largest target is 20
		 -> line(BANK3[20]), 

    sprintf@ap	PTR void [1] size(1) Largest target is 2
		 -> ?_printf(BANK1[2]), ?_sprintf(BANK1[2]), 

    sprintf@fmt	PTR const unsigned char  size(2) Largest target is 14
		 -> STR_1(CODE[14]), 

    sprintf@s	PTR unsigned char  size(1) Largest target is 20
		 -> main@str(BANK2[20]), 

    str2float@str	PTR unsigned char  size(1) Largest target is 20
		 -> line(BANK3[20]), 

    strlen@a	PTR const unsigned char  size(1) Largest target is 32
		 -> dbuf(BANK3[32]), 

    strlen@s	PTR const unsigned char  size(1) Largest target is 32
		 -> dbuf(BANK3[32]), 

    TMR2_PeriodMatchCallback	PTR FTN()void  size(2) Largest target is 1
		 -> TMR2_DefaultPeriodMatchCallback(), NULL(), 

    TMR4_PeriodMatchCallback	PTR FTN()void  size(2) Largest target is 1
		 -> controller(), TMR4_DefaultPeriodMatchCallback(), NULL(), 

    TMR4_PeriodMatchCallbackRegister@CallbackHandler	PTR FTN()void  size(2) Largest target is 1
		 -> controller(), 

    TMR6_PeriodMatchCallback	PTR FTN()void  size(2) Largest target is 1
		 -> TMR6_DefaultPeriodMatchCallback(), updateLedstripAnimation(), NULL(), 

    TMR6_PeriodMatchCallbackRegister@CallbackHandler	PTR FTN()void  size(2) Largest target is 1
		 -> updateLedstripAnimation(), 

    UART1$AutoBaudEventEnableGet	PTR FTN()_Bool  size(2) Largest target is 1
		 -> NULL(), 

    UART1$AutoBaudQuery	PTR FTN()_Bool  size(2) Largest target is 1
		 -> EUSART_AutoBaudQuery(), 

    UART1$AutoBaudSet	PTR FTN(_Bool ,)void  size(2) Largest target is 1
		 -> EUSART_AutoBaudSet(), 

    UART1$BaudRateGet	PTR FTN()unsigned long  size(2) Largest target is 1
		 -> NULL(), 

    UART1$BaudRateSet	PTR FTN(unsigned long ,)void  size(2) Largest target is 1
		 -> NULL(), 

    UART1$BRGCountGet	PTR FTN()unsigned long  size(2) Largest target is 1
		 -> NULL(), 

    UART1$BRGCountSet	PTR FTN(unsigned long ,)void  size(2) Largest target is 1
		 -> NULL(), 

    UART1$Deinitialize	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART_Deinitialize(), 

    UART1$ErrorGet	PTR FTN()unsigned int  size(2) Largest target is 2
		 -> EUSART_ErrorGet(), 

    UART1$EventCallbackRegister	PTR FTN(PTR FTN()void ,)void  size(2) Largest target is 1
		 -> NULL(), 

    UART1$FramingErrorCallbackRegister	PTR FTN(PTR FTN()void ,)void  size(2) Largest target is 1
		 -> EUSART_FramingErrorCallbackRegister(), 

    UART1$Initialize	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART_Initialize(), 

    UART1$IsRxReady	PTR FTN()_Bool  size(2) Largest target is 1
		 -> EUSART_IsRxReady(), 

    UART1$IsTxDone	PTR FTN()_Bool  size(2) Largest target is 1
		 -> EUSART_IsTxDone(), 

    UART1$IsTxReady	PTR FTN()_Bool  size(2) Largest target is 1
		 -> EUSART_IsTxReady(), 

    UART1$OverrunErrorCallbackRegister	PTR FTN(PTR FTN()void ,)void  size(2) Largest target is 1
		 -> EUSART_OverrunErrorCallbackRegister(), 

    UART1$ParityErrorCallbackRegister	PTR FTN(PTR FTN()void ,)void  size(2) Largest target is 1
		 -> NULL(), 

    UART1$Read	PTR FTN()unsigned char  size(2) Largest target is 1
		 -> EUSART_Read(), 

    UART1$RxCompleteCallbackRegister	PTR FTN(PTR FTN()void ,)void  size(2) Largest target is 1
		 -> EUSART_RxCompleteCallbackRegister(), 

    UART1$TransmitDisable	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART_TransmitDisable(), 

    UART1$TransmitEnable	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART_TransmitEnable(), 

    UART1$TxCollisionCallbackRegister	PTR FTN(PTR FTN()void ,)void  size(2) Largest target is 1
		 -> NULL(), 

    UART1$TxCompleteCallbackRegister	PTR FTN(PTR FTN()void ,)void  size(2) Largest target is 1
		 -> EUSART_TxCompleteCallbackRegister(), 

    UART1$Write	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> EUSART_Write(), 

    uartHandler@str	PTR unsigned char  size(1) Largest target is 20
		 -> line(BANK3[20]), 

    utoa@fp	PTR struct _IO_FILE size(2) Largest target is 11
		 -> sprintf@f(BANK2[11]), NULL(NULL[0]), 

    vfpfcnvrt@ap	PTR PTR void  size(2) Largest target is 1
		 -> printf@ap(BANK1[1]), sprintf@ap(BANK2[1]), 

    vfpfcnvrt@cp	PTR unsigned char  size(2) Largest target is 25
		 -> main@str(BANK2[20]), STR_1(CODE[14]), STR_10(CODE[3]), STR_11(CODE[25]), 
		 -> STR_12(CODE[13]), STR_13(CODE[13]), STR_14(CODE[15]), STR_15(CODE[17]), 
		 -> STR_2(CODE[8]), STR_3(CODE[24]), STR_4(CODE[11]), STR_5(CODE[15]), 
		 -> STR_6(CODE[17]), STR_7(CODE[7]), STR_8(CODE[7]), STR_9(CODE[11]), 

    vfpfcnvrt@fmt	PTR PTR unsigned char  size(1) Largest target is 2
		 -> vfprintf@cfmt(BANK1[2]), 

    vfpfcnvrt@fp	PTR struct _IO_FILE size(2) Largest target is 11
		 -> sprintf@f(BANK2[11]), NULL(NULL[0]), 

    vfprintf@ap	PTR PTR void  size(2) Largest target is 1
		 -> printf@ap(BANK1[1]), sprintf@ap(BANK2[1]), 

    vfprintf@cfmt	PTR unsigned char  size(2) Largest target is 25
		 -> main@str(BANK2[20]), STR_1(CODE[14]), STR_10(CODE[3]), STR_11(CODE[25]), 
		 -> STR_12(CODE[13]), STR_13(CODE[13]), STR_14(CODE[15]), STR_15(CODE[17]), 
		 -> STR_2(CODE[8]), STR_3(CODE[24]), STR_4(CODE[11]), STR_5(CODE[15]), 
		 -> STR_6(CODE[17]), STR_7(CODE[7]), STR_8(CODE[7]), STR_9(CODE[11]), 

    vfprintf@fmt	PTR const unsigned char  size(2) Largest target is 25
		 -> main@str(BANK2[20]), STR_1(CODE[14]), STR_10(CODE[3]), STR_11(CODE[25]), 
		 -> STR_12(CODE[13]), STR_13(CODE[13]), STR_14(CODE[15]), STR_15(CODE[17]), 
		 -> STR_2(CODE[8]), STR_3(CODE[24]), STR_4(CODE[11]), STR_5(CODE[15]), 
		 -> STR_6(CODE[17]), STR_7(CODE[7]), STR_8(CODE[7]), STR_9(CODE[11]), 

    vfprintf@fp	PTR struct _IO_FILE size(2) Largest target is 11
		 -> sprintf@f(BANK2[11]), NULL(NULL[0]), 


Critical Paths under _main in COMMON

    None.

Critical Paths under _INTERRUPT_InterruptManager in COMMON

    _controller->i1___xxtofl
    i1___fltol->i1___xxtofl
    i1___flmul->i1___xxtofl
    i1___fladd->i1___xxtofl
    _ADC_ISR->_adcConversionDoneHandler
    _adcConversionDoneHandler->_ADC_GetConversionResult
    _adcConversionDoneHandler->i1_ADC_SelectChannel

Critical Paths under _main in BANK0

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK0

    _TMR4_ISR->_controller
    _controller->i1___fladd
    i1___fltol->i1___flmul
    i1___fladd->i1___flmul

Critical Paths under _main in BANK1

    _uartHandler->_str2float
    _str2float->___flmul
    _setSetpoint->_atoi
    _setKp->_str2float
    _setKi->_str2float
    _readLine->_printf
    _atoi->___wmul
    _sprintf->_vfprintf
    _printOut->_printf
    _printLogs->_printFloat
    _printFloat->___fltol
    _printf->_vfprintf
    _vfprintf->_vfpfcnvrt
    _vfpfcnvrt->_dtoa
    _utoa->_pad
    _read_prec_or_width->___wmul
    _dtoa->_pad
    _pad->_fputs
    _fputs->_fputc
    _fputc->_putch
    _putch->_EUSART_Write
    _abs->___awmod
    ___flsub->___fladd
    _initLedstrip->_SPI1_Open
    _SPI1_Open->___wmul
    _initAdcMultiplexer->_ADC_SelectChannel
    _initAdcMultiplexer->_ADC_SetInterruptHandler
    _position_led_strip->_getLedNumber
    _sendLedstripStartFrame->_SPI1_ByteExchange
    _sendLedstripFrame->_SPI1_ByteExchange
    _sendLedstripEndFrame->_SPI1_ByteExchange
    _getLedNumber->___fltol
    ___fltol->___flmul
    ___flmul->___flsub
    ___fladd->___xxtofl
    _INTERRUPT_Initialize->_INT_SetInterruptHandler
    _EUSART_Initialize->_EUSART_FramingErrorCallbackRegister
    _EUSART_Initialize->_EUSART_OverrunErrorCallbackRegister
    _ADC_Initialize->_ADC_SetInterruptHandler

Critical Paths under _INTERRUPT_InterruptManager in BANK1

    None.

Critical Paths under _main in BANK2

    _main->_sprintf
    _uartHandler->_setKi
    _uartHandler->_setKp
    _printLogs->_printFloat
    _updateLedstripAnimation->_position_led_strip
    _position_led_strip->_getLedNumber

Critical Paths under _INTERRUPT_InterruptManager in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK12

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                23    23      0   48389
                                             12 BANK2     23    23      0
           _PWM_buzzer_LoadDutyValue
                  _SYSTEM_Initialize
   _TMR4_PeriodMatchCallbackRegister
                         _TMR6_Tasks
                             ___wmul
                      _getPomphoogte
                 _initAdcMultiplexer
                       _initLedstrip
                          _printLogs
                           _printOut
                        _setSetpoint
                            _sprintf
                        _uartHandler
 ---------------------------------------------------------------------------------
 (1) _uartHandler                                          1     1      0   16721
                                              4 BANK2      1     1      0
                               _atoi
                             _printf
                           _readLine
                              _setKi
                              _setKp
                        _setSetpoint
                          _str2float
 ---------------------------------------------------------------------------------
 (2) _str2float                                           12     8      4    5363
                                             68 BANK1     12     8      4
                            ___fladd
                            ___fldiv
                            ___flmul
                           ___xxtofl
 ---------------------------------------------------------------------------------
 (3) ___fldiv                                             26    18      8    1123
                                              0 BANK1     26    18      8
 ---------------------------------------------------------------------------------
 (2) _setSetpoint                                          2     0      2      24
                                             13 BANK1      2     0      2
                             ___wmul (ARG)
                               _atoi (ARG)
 ---------------------------------------------------------------------------------
 (2) _setKp                                                4     0      4      23
                                              0 BANK2      4     0      4
                          _str2float (ARG)
 ---------------------------------------------------------------------------------
 (2) _setKi                                                4     0      4      23
                                              0 BANK2      4     0      4
                          _str2float (ARG)
 ---------------------------------------------------------------------------------
 (2) _readLine                                             3     1      2    5443
                                             73 BANK1      3     1      2
                   _EUSART_IsRxReady
                        _EUSART_Read
                             _printf
 ---------------------------------------------------------------------------------
 (3) _EUSART_Read                                          2     2      0      47
                                              0 BANK1      2     2      0
 ---------------------------------------------------------------------------------
 (3) _EUSART_IsRxReady                                     0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _atoi                                                 7     5      2     338
                                              6 BANK1      7     5      2
                             ___wmul
 ---------------------------------------------------------------------------------
 (1) _sprintf                                             19    14      5    5528
                                             66 BANK1      5     0      5
                                              0 BANK2     12    12      0
                           _vfprintf
 ---------------------------------------------------------------------------------
 (1) _printOut                                             1     0      1    5419
                                             73 BANK1      1     0      1
                             _printf
 ---------------------------------------------------------------------------------
 (1) _printLogs                                            0     0      0   15125
                       _getDutycycle
                    _getHoogtesensor
                              _getKi
                              _getKp
                      _getPomphoogte
                        _getSetpoint
                         _printFloat
                             _printf
 ---------------------------------------------------------------------------------
 (2) _printFloat                                           9     5      4    9729
                                             78 BANK1      2     2      0
                                              0 BANK2      7     3      4
                            ___flmul
                            ___flsub
                            ___fltol
                           ___xxtofl
                              _getKi (ARG)
                              _getKp (ARG)
                             _printf
 ---------------------------------------------------------------------------------
 (3) _printf                                               9     3      6    5396
                                             66 BANK1      7     1      6
                               _atoi (ARG)
                       _getDutycycle (ARG)
                    _getHoogtesensor (ARG)
                      _getPomphoogte (ARG)
                        _getSetpoint (ARG)
                           _vfprintf
 ---------------------------------------------------------------------------------
 (4) _vfprintf                                             9     3      6    5321
                                             57 BANK1      9     3      6
                          _vfpfcnvrt
 ---------------------------------------------------------------------------------
 (5) _vfpfcnvrt                                           17    12      5    5177
                                             41 BANK1     16    11      5
                               _dtoa
                              _fputc
                 _read_prec_or_width
                               _utoa
 ---------------------------------------------------------------------------------
 (6) _utoa                                                10     6      4    1661
                                             28 BANK1     10     6      4
                            ___lwdiv
                            ___lwmod
                                _pad
 ---------------------------------------------------------------------------------
 (7) ___lwmod                                              5     1      4     161
                                              0 BANK1      5     1      4
 ---------------------------------------------------------------------------------
 (7) ___lwdiv                                              7     3      4     166
                                              0 BANK1      7     3      4
 ---------------------------------------------------------------------------------
 (6) _read_prec_or_width                                   9     6      3     290
                                              6 BANK1      9     6      3
                             ___wmul
 ---------------------------------------------------------------------------------
 (6) _dtoa                                                13     9      4    2161
                                             28 BANK1     13     9      4
                            ___awdiv
                            ___awmod
                                _abs
                                _pad
 ---------------------------------------------------------------------------------
 (7) _pad                                                  8     3      5    1083
                                             20 BANK1      8     3      5
                              _fputc
                              _fputs
                             _strlen
 ---------------------------------------------------------------------------------
 (8) _strlen                                               3     1      2      91
                                              0 BANK1      3     1      2
 ---------------------------------------------------------------------------------
 (8) _fputs                                                8     5      3     432
                                             12 BANK1      8     5      3
                              _fputc
 ---------------------------------------------------------------------------------
 (9) _fputc                                                9     5      4     331
                                              3 BANK1      9     5      4
                              _putch
 ---------------------------------------------------------------------------------
 (10) _putch                                               1     1      0      97
                                              2 BANK1      1     1      0
                   _EUSART_IsTxReady
                       _EUSART_Write
 ---------------------------------------------------------------------------------
 (11) _EUSART_Write                                        2     1      1      68
                                              0 BANK1      2     1      1
 ---------------------------------------------------------------------------------
 (11) _EUSART_IsTxReady                                    0     0      0       0
 ---------------------------------------------------------------------------------
 (7) _abs                                                  4     2      2      67
                                              6 BANK1      4     2      2
                            ___awmod (ARG)
 ---------------------------------------------------------------------------------
 (7) ___awmod                                              6     2      4     298
                                              0 BANK1      6     2      4
 ---------------------------------------------------------------------------------
 (7) ___awdiv                                              8     4      4     302
                                              0 BANK1      8     4      4
 ---------------------------------------------------------------------------------
 (3) ___flsub                                              8     0      8    2037
                                             34 BANK1      8     0      8
                            ___fladd
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (2) _getPomphoogte                                        2     0      2       0
                                              0 BANK1      2     0      2
 ---------------------------------------------------------------------------------
 (2) _getKp                                                4     0      4       0
                                              0 BANK1      4     0      4
 ---------------------------------------------------------------------------------
 (2) _getKi                                                4     0      4       0
                                              0 BANK1      4     0      4
 ---------------------------------------------------------------------------------
 (2) _getDutycycle                                         2     0      2       0
                                              0 BANK1      2     0      2
 ---------------------------------------------------------------------------------
 (1) _initLedstrip                                         0     0      0     229
                          _SPI1_Open
   _TMR6_PeriodMatchCallbackRegister
 ---------------------------------------------------------------------------------
 (2) _TMR6_PeriodMatchCallbackRegister                     2     0      2      23
                                              0 BANK1      2     0      2
 ---------------------------------------------------------------------------------
 (2) _SPI1_Open                                            4     3      1     206
                                              6 BANK1      3     2      1
                             ___wmul
 ---------------------------------------------------------------------------------
 (7) ___wmul                                               6     2      4     108
                                              0 BANK1      6     2      4
 ---------------------------------------------------------------------------------
 (1) _initAdcMultiplexer                                   0     0      0      53
                  _ADC_SelectChannel
            _ADC_SetInterruptHandler
 ---------------------------------------------------------------------------------
 (2) _ADC_SelectChannel                                    2     2      0      29
                                              0 BANK1      2     2      0
 ---------------------------------------------------------------------------------
 (1) _TMR6_Tasks                                           0     0      0    4868
                                NULL *
    _TMR6_DefaultPeriodMatchCallback *
            _updateLedstripAnimation *
 ---------------------------------------------------------------------------------
 (2) _updateLedstripAnimation                              0     0      0    4868
                 _position_led_strip
 ---------------------------------------------------------------------------------
 (3) _position_led_strip                                   8     8      0    4868
                                              4 BANK2      8     8      0
                    _getHoogtesensor
                       _getLedNumber
                        _getSetpoint
               _sendLedstripEndFrame
                  _sendLedstripFrame
             _sendLedstripStartFrame
 ---------------------------------------------------------------------------------
 (4) _sendLedstripStartFrame                               0     0      0      34
                  _SPI1_ByteExchange
 ---------------------------------------------------------------------------------
 (4) _sendLedstripFrame                                    4     1      3     156
                                              1 BANK1      4     1      3
                  _SPI1_ByteExchange
 ---------------------------------------------------------------------------------
 (4) _sendLedstripEndFrame                                 0     0      0      34
                  _SPI1_ByteExchange
 ---------------------------------------------------------------------------------
 (5) _SPI1_ByteExchange                                    1     0      1      34
                                              0 BANK1      1     0      1
 ---------------------------------------------------------------------------------
 (2) _getSetpoint                                          2     0      2       0
                                              0 BANK1      2     0      2
 ---------------------------------------------------------------------------------
 (4) _getLedNumber                                         6     4      2    4219
                                             78 BANK1      2     0      2
                                              0 BANK2      4     4      0
                            ___fladd
                            ___flmul
                            ___fltol
                           ___xxtofl
                    _getHoogtesensor (ARG)
                        _getSetpoint (ARG)
 ---------------------------------------------------------------------------------
 (3) ___xxtofl                                            14    10      4     339
                                              0 BANK1     14    10      4
 ---------------------------------------------------------------------------------
 (3) ___fltol                                             10     6      4     232
                                             68 BANK1     10     6      4
                            ___flmul (ARG)
                            ___flsub (ARG)
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (3) ___flmul                                             26    18      8    1611
                                             42 BANK1     26    18      8
                          __Umul8_16
                            ___fladd (ARG)
                            ___flsub (ARG)
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (4) __Umul8_16                                            9     7      2     139
                                              0 BANK1      9     7      2
 ---------------------------------------------------------------------------------
 (3) ___fladd                                             20    12      8    1990
                                             14 BANK1     20    12      8
                          __Umul8_16 (ARG)
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (2) _getHoogtesensor                                      2     0      2       0
                                              0 BANK1      2     0      2
 ---------------------------------------------------------------------------------
 (2) _TMR6_DefaultPeriodMatchCallback                      0     0      0       0
 ---------------------------------------------------------------------------------
 (14) NULL(Fake)                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _TMR4_PeriodMatchCallbackRegister                     2     0      2      23
                                              0 BANK1      2     0      2
 ---------------------------------------------------------------------------------
 (1) _SYSTEM_Initialize                                    0     0      0     137
                     _ADC_Initialize
                   _CLOCK_Initialize
                  _EUSART_Initialize
               _INTERRUPT_Initialize
             _PIN_MANAGER_Initialize
              _PWM_buzzer_Initialize
                    _SPI1_Initialize
                    _TMR2_Initialize
                    _TMR4_Initialize
                    _TMR6_Initialize
                 _pwm_fan_Initialize
 ---------------------------------------------------------------------------------
 (2) _pwm_fan_Initialize                                   0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _TMR6_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _TMR4_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _TMR2_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _SPI1_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _PWM_buzzer_Initialize                                0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _PIN_MANAGER_Initialize                               0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _INTERRUPT_Initialize                                 0     0      0      23
            _INT_SetInterruptHandler
 ---------------------------------------------------------------------------------
 (3) _INT_SetInterruptHandler                              2     0      2      23
                                              0 BANK1      2     0      2
 ---------------------------------------------------------------------------------
 (2) _EUSART_Initialize                                    0     0      0      90
_EUSART_FramingErrorCallbackRegister
_EUSART_OverrunErrorCallbackRegister
 ---------------------------------------------------------------------------------
 (3) _EUSART_OverrunErrorCallbackRegister                  2     0      2      45
                                              0 BANK1      2     0      2
 ---------------------------------------------------------------------------------
 (3) _EUSART_FramingErrorCallbackRegister                  2     0      2      45
                                              0 BANK1      2     0      2
 ---------------------------------------------------------------------------------
 (2) _CLOCK_Initialize                                     0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _ADC_Initialize                                       0     0      0      24
            _ADC_SetInterruptHandler
 ---------------------------------------------------------------------------------
 (2) _ADC_SetInterruptHandler                              2     0      2      24
                                              0 BANK1      2     0      2
 ---------------------------------------------------------------------------------
 (1) _PWM_buzzer_LoadDutyValue                             4     2      2      46
                                              0 BANK1      4     2      2
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 14
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (12) _INTERRUPT_InterruptManager                          0     0      0    4466
                                NULL *
                            _ADC_ISR
                  _EUSART_ReceiveISR *
                 _EUSART_TransmitISR *
                           _TMR2_ISR
                           _TMR4_ISR
 ---------------------------------------------------------------------------------
 (13) _TMR4_ISR                                            0     0      0    4346
                                NULL *
    _TMR4_DefaultPeriodMatchCallback *
                         _controller *
 ---------------------------------------------------------------------------------
 (14) _controller                                          7     7      0    4346
                                             46 BANK0      7     7      0
              _pwm_fan_LoadDutyValue
                          i1___fladd
                          i1___flmul
                          i1___fltol
                         i1___xxtofl
                  i1_getHoogtesensor
 ---------------------------------------------------------------------------------
 (15) i1_getHoogtesensor                                   2     0      2       0
                                              0 COMMON     2     0      2
 ---------------------------------------------------------------------------------
 (15) i1___xxtofl                                         14    10      4     338
                                              0 COMMON    14    10      4
 ---------------------------------------------------------------------------------
 (15) i1___fltol                                          10     6      4     231
                                             26 BANK0     10     6      4
                          i1___flmul (ARG)
                         i1___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (15) i1___flmul                                          26    18      8    1611
                                              0 BANK0     26    18      8
                        i1__Umul8_16
                         i1___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (16) i1__Umul8_16                                         9     7      2     139
                                              0 COMMON     9     7      2
 ---------------------------------------------------------------------------------
 (15) i1___fladd                                          20    12      8    1986
                                             26 BANK0     20    12      8
                          i1___flmul (ARG)
                         i1___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (15) _pwm_fan_LoadDutyValue                               4     2      2      45
                                              0 COMMON     4     2      2
 ---------------------------------------------------------------------------------
 (14) _TMR4_DefaultPeriodMatchCallback                     0     0      0       0
 ---------------------------------------------------------------------------------
 (13) _TMR2_ISR                                            0     0      0       0
                                NULL *
    _TMR2_DefaultPeriodMatchCallback *
 ---------------------------------------------------------------------------------
 (14) _TMR2_DefaultPeriodMatchCallback                     0     0      0       0
 ---------------------------------------------------------------------------------
 (13) _EUSART_TransmitISR                                  1     1      0      23
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (13) _EUSART_ReceiveISR                                   2     2      0      68
                                              0 COMMON     2     2      0
                                NULL *
 _EUSART_DefaultFramingErrorCallback *
 _EUSART_DefaultOverrunErrorCallback *
 ---------------------------------------------------------------------------------
 (14) _EUSART_DefaultOverrunErrorCallback                  0     0      0       0
 ---------------------------------------------------------------------------------
 (14) _EUSART_DefaultFramingErrorCallback                  0     0      0       0
 ---------------------------------------------------------------------------------
 (13) _ADC_ISR                                             0     0      0      29
                                NULL *
        _ADC_DefaultInterruptHandler *
           _adcConversionDoneHandler *
 ---------------------------------------------------------------------------------
 (14) _adcConversionDoneHandler                            2     2      0      29
                                              2 COMMON     2     2      0
            _ADC_GetConversionResult
                i1_ADC_SelectChannel
 ---------------------------------------------------------------------------------
 (15) i1_ADC_SelectChannel                                 2     2      0      29
                                              0 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 (15) _ADC_GetConversionResult                             2     0      2       0
                                              0 COMMON     2     0      2
 ---------------------------------------------------------------------------------
 (14) _ADC_DefaultInterruptHandler                         0     0      0       0
 ---------------------------------------------------------------------------------
 (14) NULL(Fake)                                           0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 16
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _PWM_buzzer_LoadDutyValue
   _SYSTEM_Initialize
     _ADC_Initialize
       _ADC_SetInterruptHandler
     _CLOCK_Initialize
     _EUSART_Initialize
       _EUSART_FramingErrorCallbackRegister
       _EUSART_OverrunErrorCallbackRegister
     _INTERRUPT_Initialize
       _INT_SetInterruptHandler
     _PIN_MANAGER_Initialize
     _PWM_buzzer_Initialize
     _SPI1_Initialize
     _TMR2_Initialize
     _TMR4_Initialize
     _TMR6_Initialize
     _pwm_fan_Initialize
   _TMR4_PeriodMatchCallbackRegister
   _TMR6_Tasks
     NULL(Fake) *
     _TMR6_DefaultPeriodMatchCallback *
     _updateLedstripAnimation *
       _position_led_strip
         _getHoogtesensor
         _getLedNumber
           ___fladd
             __Umul8_16 (ARG)
             ___xxtofl (ARG)
           ___flmul
             __Umul8_16
             ___fladd (ARG)
             ___flsub (ARG)
               ___fladd
               ___xxtofl (ARG)
             ___xxtofl (ARG)
           ___fltol
             ___flmul (ARG)
             ___flsub (ARG)
             ___xxtofl (ARG)
           ___xxtofl
           _getHoogtesensor (ARG)
           _getSetpoint (ARG)
         _getSetpoint
         _sendLedstripEndFrame
           _SPI1_ByteExchange
         _sendLedstripFrame
           _SPI1_ByteExchange
         _sendLedstripStartFrame
           _SPI1_ByteExchange
   ___wmul
   _getPomphoogte
   _initAdcMultiplexer
     _ADC_SelectChannel
     _ADC_SetInterruptHandler
   _initLedstrip
     _SPI1_Open
       ___wmul
     _TMR6_PeriodMatchCallbackRegister
   _printLogs
     _getDutycycle
     _getHoogtesensor
     _getKi
     _getKp
     _getPomphoogte
     _getSetpoint
     _printFloat
       ___flmul
       ___flsub
       ___fltol
       ___xxtofl
       _getKi (ARG)
       _getKp (ARG)
       _printf (ARG)
         _atoi (ARG)
           ___wmul
         _getDutycycle (ARG)
         _getHoogtesensor (ARG)
         _getPomphoogte (ARG)
         _getSetpoint (ARG)
         _vfprintf (ARG)
           _vfpfcnvrt
             _dtoa
               ___awdiv
               ___awmod
               _abs
                 ___awmod (ARG)
               _pad
                 _fputc
                   _putch
                     _EUSART_IsTxReady
                     _EUSART_Write
                 _fputs
                   _fputc
                 _strlen
             _fputc
             _read_prec_or_width
               ___wmul
             _utoa
               ___lwdiv
               ___lwmod
               _pad
     _printf
   _printOut
     _printf
   _setSetpoint
     ___wmul (ARG)
     _atoi (ARG)
   _sprintf
     _vfprintf
   _uartHandler
     _atoi
     _printf
     _readLine
       _EUSART_IsRxReady
       _EUSART_Read
       _printf
     _setKi
       _str2float (ARG)
         ___fladd
         ___fldiv
         ___flmul
         ___xxtofl
     _setKp
       _str2float (ARG)
     _setSetpoint
     _str2float

 _INTERRUPT_InterruptManager (ROOT)
   NULL(Fake) *
   _ADC_ISR *
     NULL(Fake) *
     _ADC_DefaultInterruptHandler *
     _adcConversionDoneHandler *
       _ADC_GetConversionResult
       i1_ADC_SelectChannel
   _EUSART_ReceiveISR *
     NULL(Fake) *
     _EUSART_DefaultFramingErrorCallback *
     _EUSART_DefaultOverrunErrorCallback *
   _EUSART_TransmitISR *
   _TMR2_ISR *
     NULL(Fake) *
     _TMR2_DefaultPeriodMatchCallback *
   _TMR4_ISR *
     NULL(Fake) *
     _TMR4_DefaultPeriodMatchCallback *
     _controller *
       _pwm_fan_LoadDutyValue
       i1___fladd
         i1___flmul (ARG)
           i1__Umul8_16
           i1___xxtofl (ARG)
         i1___xxtofl (ARG)
       i1___flmul
       i1___fltol
         i1___flmul (ARG)
         i1___xxtofl (ARG)
       i1___xxtofl
       i1_getHoogtesensor

Address spaces:
Name               Size   Autos  Total    Usage
BITCOMMON           14      0       0      0.0%
BITBANK0            80      0       0      0.0%
BITBANK1            80      0       0      0.0%
BITBANK2            80      0       0      0.0%
BITBANK3            80      0       0      0.0%
BITBANK4            80      0       0      0.0%
BITBANK5            80      0       0      0.0%
BITBANK6            80      0       0      0.0%
BITBANK7            80      0       0      0.0%
BITBANK8            80      0       0      0.0%
BITBANK9            80      0       0      0.0%
BITBANK10           80      0       0      0.0%
BITBANK11           80      0       0      0.0%
BITBANK12           48      0       0      0.0%
BIGRAM            1008      0       0      0.0%
COMMON              14     14      14    100.0%
BANK0               80     53      79     98.8%
BANK1               80     80      80    100.0%
BANK2               80     35      79     98.8%
BANK3               80      0      80    100.0%
BANK4               80      0       0      0.0%
BANK5               80      0       0      0.0%
BANK6               80      0       0      0.0%
BANK7               80      0       0      0.0%
BANK8               80      0       0      0.0%
BANK9               80      0       0      0.0%
BANK10              80      0       0      0.0%
BANK11              80      0       0      0.0%
BANK12              48      0       0      0.0%
STACK                0      0       0      0.0%
DATA                 0      0     332      0.0%


Microchip Technology PIC Macro Assembler V3.00 build 20241204225717 
Symbol Table                                                                                   Wed Mar 05 16:00:52 2025

           __end_of_TMR4_DefaultPeriodMatchCallback 1A4D                   ??_TMR4_DefaultPeriodMatchCallback 0070  
                  ?_TMR4_DefaultPeriodMatchCallback 0070                     _TMR4_DefaultPeriodMatchCallback 1A4C  
                                 _SPI1_ByteExchange 1B3E                          __end_of_pwm_fan_Initialize 1B32  
                                      ___fldiv@aexp 00B9                                        ___fldiv@bexp 00B8  
                                       i1___fladd@a 003E                                         i1___fladd@b 003A  
                                      ___fldiv@sign 00B1                                                  l30 1B3D  
                                                l27 1C7D                                                  l55 1A76  
                                                l83 1B25                                                  l69 1B31  
                                                l86 1CAB                                  ?_SPI1_ByteExchange 00A0  
                                      ___awdiv@sign 00A5                             ??_PWM_buzzer_Initialize 00A0  
       __end_of_EUSART_OverrunErrorCallbackRegister 1BB1               ??_EUSART_OverrunErrorCallbackRegister 00A2  
              ?_EUSART_OverrunErrorCallbackRegister 00A0                 _EUSART_OverrunErrorCallbackRegister 1BA2  
                                       i1___flmul@a 0024                                                  _ki 015D  
                                       i1___flmul@b 0020                                                  _kp 0161  
                               ___wmul@multiplicand 00A2                                 __Umul8_16@word_mpld 00A6  
                                   ??_getPomphoogte 00A2                                          i1___xxtofl 160C  
                                               l133 1AE3                                                 l141 1367  
                                               l227 1B19                                                 l254 1A88  
                                               l174 1B42                                                 l351 104E  
                                               l272 1A7F                                                 l176 1B47  
                                               l177 1B4A                                                 l516 080E  
                                               l543 1AAC                                                 l712 1AD9  
                                               l457 1BD2                                                 l546 1A4D  
                                               l379 1D7D                                                 l715 1AC7  
                                               l557 1C3D                                                 l725 1D5B  
                                               l901 17C8                                                 l398 1BC1  
                                               l494 1A91                                                 l742 1E36  
                                               l910 17FF                                                 l656 1ECA  
                                               l760 1C05                                                 l770 1BA1  
                                               l851 1B57                                                 l739 1E34  
                                               l931 1AD0                                                 l915 104F  
                                               l860 1ABE                                                 l917 10A7  
                                               l774 1BB0                                                 l928 156A  
                                               l857 1A9A                                                 l946 08BC  
                                               l973 1AA3                                                 l893 14DF  
                                               l982 1BE3                                                 l991 1AF7  
                                               l976 1AB5                                                 l985 1008  
                                               l994 1AED                                                 l979 1BF4  
                                               _PR2 001E                                                 _PR4 0416  
                                               _PR6 041D                                                 _abs 1C06  
                                               _pad 1FAB                                     __end_of_ADC_ISR 1B75  
                                      i1___fltol@f1 003A                     __end_of_ADC_SetInterruptHandler 1A77  
                               ??_SPI1_ByteExchange 00A1                                        ___awmod@sign 00A5  
                                   _TMR2_Initialize 1BB1                        __end_of_sendLedstripEndFrame 1CC5  
                                               wreg 0009                                       i1___fladd@grs 004D  
                                      ___flmul@aexp 00DC                                        ___flmul@bexp 00DD  
                      ?_ADC_DefaultInterruptHandler 0070                                        ___flmul@sign 00D7  
                                      ___flmul@temp 00E2                                        ___flmul@prod 00DE  
                               i1_ADC_SelectChannel 1B02                                        ?_EUSART_Read 0070  
                                      _BAUD1CONbits 019F                                        ___fltol@exp1 00ED  
                                              l1012 1CC4                                                l1015 1CDF  
                                              l1009 1C67                                                l1018 1102  
                                              ?_abs 00A6                                                l1052 1A55  
                                              l1207 1D07                                                l1055 1B65  
                                              l1401 12F7                                                l1049 0ADB  
                                              l1209 1D1B                                                l1411 12F7  
                                              l1512 05D5                                                l1408 12E2  
                                              l1360 115E                                                l1521 070B  
                                              l1514 05AF                                                l1610 0242  
                                              l1508 0556                                                l1604 02C4  
                                              l1533 0688                                                l1373 1FAA  
                                              l1550 06FE                                                l1542 06DE  
                                              l1710 1FC1                                                l1551 070B  
                                              l1623 1DB4                                                l1616 02BA  
                                              l1529 0666                                                l1625 1DC4  
                                              l1713 1FE3                                                l1650 1754  
                                              l1554 1D3B                                                l1722 0735  
                                              l5010 0B3C                                                l5002 0B12  
                                              l1539 06AB                                                l1715 1FFF  
                                              l1731 07C4                                                l4300 1D17  
                                              l5020 0B5E                                                l5012 0B3D  
                                              l5004 0B22                                                l5100 1E55  
                                              l1812 1C29                                                l1580 0D79  
                                              l1564 0C9F                                                l1661 1720  
                                              l1805 1DE8                                                l1741 13E0  
                                              l1662 172C                                                l4310 110E  
                                              l1718 0737                                                l5030 0B93  
                                              l5022 0B6B                                                l5014 0B42  
                                              l5006 0B27                                                l5102 1E5F  
                                              l1566 0DF3                                                l1487 07FF  
                                              l5120 1A6E                                                l1648 16D3  
                                              l5200 0A37                                                l4320 111D  
                                              l4312 1110                                                l4304 1103  
                                              l4240 1E26                                                l4232 1E0F  
                                              l4400 07EB                                                l5040 0BBF  
                                              l5032 0BA0                                                l5024 0B78  
                                              l5016 0B4A                                                l5008 0B38  
                                              l6000 1755                                                l1649 16E4  
                                              l1497 1E94                                                l1585 0DC3  
                                              l5130 1B93                                                l5210 0A7E  
                                              l5202 0A4C                                                l4330 1131  
                                              l4322 1123                                                l4314 1114  
                                              l4306 1105                                                l4242 1E2C  
                                              l4234 1E14                                                l4250 1BF7  
                                              l1818 1C93                                                l4402 07EF  
                                              l5034 0BAE                                                l5042 0BC8  
                                              l5018 0B54                                                l1586 0DDD  
                                              l6010 176D                                                l6002 175E  
                                              l5132 1B9A                                                l5212 0A88  
                                              l5204 0A57                                                l4332 1140  
                                              l4324 1126                                                l4340 1150  
                                              l4316 1119                                                l4308 1109  
                                              l4228 1ABF                                                l4244 1E2F  
                                              l4236 1E18                                                l4252 1BFF  
                                              l4260 11C9                                                l4500 0764  
                                              l4404 07F0                                                l4420 1E73  
                                              l4412 1E62                                                l5044 0BD2  
                                              l5052 0BF9                                                l1764 0C4F  
                                              l5028 0B89                                                l1756 0B03  
                                              l6100 140B                                                l1588 0DE8  
                                              l5300 0CDC                                                l6020 17CA  
                                              l6012 1773                                                l6004 175F  
                                              l1749 11BB                                                l5134 1BA2  
                                              l5222 0AAE                                                l5214 0A91  
                                              l5206 0A65                                                l4342 1155  
                                              l4334 1144                                                l4326 112B  
                                              l4318 111B                                                l4350 1F5B  
                                              l4246 1E31                                                l4238 1E1E  
                                              l4262 11CE                                                l4510 079B  
                                              l4502 0774                                                l4406 07F5  
                                              l4422 1E77                                                l4414 1E69  
                                              l4430 1E90                                                l5070 0C45  
                                              l5054 0C0A                                                l5062 0C23  
                                              l5046 0BE8                                                l1758 0B0F  
                                              l1686 1E0E                                                l6110 1437  
                                              l6102 140E                                                l5150 1D4E  
                                              l5142 1D3C                                                l5310 0CFB  
                                              l5302 0CE4                                                l6030 17F1  
                                              l6022 17CC                                                l6014 17B9  
                                              l6006 1765                                                l1679 1459  
                                              l5136 1BA9                                                l5128 1A80  
                                              l4600 12D2                                                l5080 1A9B  
                                              l5224 0ABB                                                l5208 0A71  
                                              l5232 0ACF                                                l5216 0A94  
                                              l6200 1C3B                                                l5240 1D1F  
                                              l4344 115A                                                l4336 1145  
                                              l4328 112D                                                l4360 1F6F  
                                              l4352 1F5F                                                l4248 1BF7  
                                              l4264 11D9                                                l4256 11BC  
                                              l4272 1DC5                                                l4280 1C7E  
                                              l4440 1FBF                                                l4504 0782  
                                              l4512 07A0                                                l4408 07FB  
                                              l4424 1E81                                                l4416 1E6C  
                                              l5056 0C12                                                l5048 0BF6  
                                              l6112 1444                                                l5152 1D50  
                                              l5144 1D3C                                                l6040 105E  
                                              l6120 1AEE                                                l5320 0D27  
                                              l5312 0D09                                                l5304 0CEC  
                                              l6032 17F7                                                l6024 17CE  
                                              l6016 17BC                                                l6008 1767  
                                              l1785 1C17                                                l4610 12EC  
                                              l5090 10A8                                                l5234 0AD2  
                                              l5218 0AA2                                                l5170 09D8  
                                              l4290 1CFC                                                l4338 114A  
                                              l4370 1F83                                                l4362 1F75  
                                              l4354 1F64                                                l4266 11F9  
                                              l4258 11C3                                                l4274 1DC9  
                                              l4282 1C82                                                l4450 1FF2  
                                              l4442 1FC4                                                l4434 1FAB  
                                              l4514 07A6                                                l4506 0789  
                                              l4426 1E85                                                l4418 1E71  
                                              l4530 137F                                                l4522 1368  
                                              l5058 0C1D                                                l1778 1E61  
                                              l5162 1C18                                                l6114 1449  
                                              l6106 1419                                                l5138 1AD1  
                                              l5154 1D56                                                l5146 1D45  
                                              l6050 106C                                                l6122 1AE4  
                                              l5330 0D40                                                l5322 0D28  
                                              l5314 0D0D                                                l5306 0CF4  
                                              l5250 0C5A                                                l6026 17EA  
                                              l6018 17C2                                                l5076 1A92  
                                              l4700 05BF                                                l4620 050B  
                                              l4612 0500                                                l5084 1C53  
                                              l5236 0AD8                                                l5228 0AC5  
                                              l5180 0A04                                                l5172 09DC  
                                              l4292 1CFF                                                l4380 1FA1  
                                              l4372 1F8D                                                l4364 1F78  
                                              l4356 1F66                                                l4348 1F59  
                                              l4268 120F                                                l4276 1DD7  
                                              l4284 1C84                                                l4444 1FD0  
                                              l4436 1FB0                                                l4516 07AA  
                                              l4508 078E                                                l4428 1E8A  
                                              l4540 13AF                                                l4532 1393  
                                              l4524 136B                                                l5068 0C2C  
                                              l5164 1C1B                                                l6116 1455  
                                              l5156 1D58                                                l5148 1D4B  
                                              l6052 1074                                                l6044 1061  
                                              l6036 104F                                                l5340 0D55  
                                              l5332 0D42                                                l5324 0D30  
                                              l5316 0D0E                                                l5308 0CF6  
                                              l5260 0C6E                                                l5252 0C5B  
                                              l5244 0C50                                                l6028 17EC  
                                              l1797 1219                                                l4710 05D9  
                                              l4702 05C3                                                l4622 0510  
                                              l4630 0520                                                l4614 0504  
                                              l4470 1DBB                                                l4462 1DA3  
                                              l4606 12D9                                                l5086 1CAC  
                                              l5182 0A08                                                l5174 09DF  
                                              l4294 1D03                                                l5238 1D1C  
                                              l4382 1FA6                                                l4374 1F91  
                                              l4366 1F7D                                                l4358 1F6A  
                                              l4454 1C06                                                l4278 1DDC  
                                              l4286 1C8D                                                l4446 1FD5  
                                              l4438 1FBA                                                l4518 07B1  
                                              l4390 07CE                                                l4542 13B5  
                                              l4534 1394                                                l4526 1377  
                                              l5094 1E37                                                l5158 1D5A  
                                              l6054 107C                                                l6062 1082  
                                              l6038 1057                                                l5350 0D76  
                                              l5334 0D49                                                l5342 0D59  
                                              l5318 0D15                                                l5326 0D32  
                                              l5270 0C81                                                l5254 0C60  
                                              l5262 0C70                                                l5246 0C54  
                                              ?_pad 00B4                                                l6160 1C94  
                                              l4800 06FA                                                l4720 05F3  
                                              l4712 05DE                                                l4704 05C4  
                                              l4640 0534                                                l4632 0528  
                                              l4624 0515                                                l4616 0506  
                                              l4472 1DC0                                                l4464 1DA5  
                                              l4608 12E7                                                l5088 1CC7  
                                              l5192 0A0F                                                l5184 0A0A  
                                              l5176 09EC                                                l5168 09C5  
                                              l6152 1A52                                                l4296 1D0C  
                                              l6080 1BE4                                                l4376 1F96  
                                              l4368 1F7F                                                l4456 1C0B  
                                              l4448 1FE8                                                l4480 071E  
                                              l4560 1189                                                l4552 115F  
                                              l4392 07D1                                                l4544 13BA  
                                              l4536 1398                                                l4528 137A  
                                              l5096 1E3C                                                l6064 1090  
                                              l6056 107E                                                l6048 1069  
                                              l5360 0D8D                                                l5344 0D5D  
                                              l5336 0D4D                                                l5328 0D38  
                                              l5280 0C95                                                l5272 0C82  
                                              l5264 0C78                                                l5256 0C65  
                                              l5248 0C56                                                l4802 06FC  
                                              l4730 0608                                                l4722 05F7  
                                              l4706 05CC                                                l4650 054B  
                                              l4642 0538                                                l4634 052B  
                                              l4626 051D                                                l4618 050A  
                                              l4466 1DAC                                                l4810 008E  
                                              l4570 1B3E                                                l5194 0A19  
                                              l5186 0A0D                                                l5178 09F1  
                                              l4298 1D11                                                l6250 1B58  
                                              l4378 1F9C                                                l4458 1C0C  
                                              l4490 073B                                                l4482 0723  
                                              l4562 119B                                                l4554 1162  
                                              l4394 07D6                                                l4386 07C5  
                                              l4546 13C7                                                l4538 13A8  
                                              l5098 1E40                                                l6090 13E6  
                                              l6066 109C                                                l6074 10A4  
                                              l6058 1080                                                l5370 0DD4  
                                              l5362 0DA5                                                l5354 0D7E  
                                              l5346 0D5E                                                l5338 0D4E  
                                              l5274 0C87                                                l5282 0C97  
                                              l5266 0C7B                                                l5258 0C6D  
                                              l6180 1D68                                                l4804 0706  
                                              l4740 064F                                                l4732 0610  
                                              l4724 0601                                                l4716 05E7  
                                              l4708 05CE                                                l4660 0562  
                                              l4652 054C                                                l4644 0539  
                                              l4636 0531                                                l4628 051E  
                                              l4468 1DB0                                                l4900 0217  
                                              l4820 009F                                                l4812 0090  
                                              l4572 1B48                                                l5196 0A1C  
                                              l6252 1B5D                                                l6076 1AAD  
                                              l6084 1BD3                                                l4492 073E  
                                              l4484 0727                                                l4476 070C  
                                              l4556 1173                                                l4564 11A3  
                                              l4396 07D8                                                l4388 07C8  
                                              l4548 13CC                                                l6092 13E8  
                                              l6068 10A2                                                l5372 0DDC  
                                              l5356 0D83                                                l5364 0DA9  
                                              l5348 0D62                                                l5284 0CA7  
                                              l5292 0CBE                                                l5276 0C8C  
                                              l5268 0C7D                                                l6260 083A  
                                              l6190 1D77                                                l6182 1D6B  
                                              l6174 1D5C                                                l4806 070A  
                                              l4750 0673                                                l4742 0652  
                                              l4726 0603                                                l4718 05EF  
                                              l4734 0613                                                l4670 056C  
                                              l4662 0564                                                l4646 053E  
                                              l4654 054E                                                l4638 0532  
                                              l4910 022B                                                l4902 021E  
                                              l4830 00B6                                                l4822 00A7  
                                              l4814 0094                                                l4590 12B8  
                                              l4582 129C                                                l5198 0A22  
                                              l4494 0743                                                l4486 072C  
                                              l4478 070F                                                l4566 11B7  
                                              l4558 117B                                                l4398 07DC  
                                              l6094 13F2                                                l5374 0DE0  
                                              l5366 0DB6                                                l5358 0D89  
                                              l5294 0CC3                                                l5286 0CB3  
                                              l5278 0C94                                                l6270 0889  
                                              l6262 0854                                                l6254 080F  
                                              l6350 156E                                                l6184 1D6E  
                                              l6176 1D62                                                l6192 1A89  
                                              l4760 068C                                                l4744 0657  
                                              l4736 0629                                                l4728 0607  
                                              l4680 0576                                                l4672 056E  
                                              l4664 0566                                                l4656 055C  
                                              l4648 0543                                                l4920 0252  
                                              l4912 023F                                                l4904 0222  
                                              l4840 00CD                                                l4832 00BA  
                                              l4824 00A9                                                l4816 0095  
                                              l4808 008A                                                l4592 12BC  
                                              l4584 12AD                                                l4576 1289  
                                              l6248 1B4B                                                l4496 075F  
                                              l4488 0731                                                l6280 1DE9  
                                              l6096 13FF                                                l6088 13E1  
                                              l5376 0DE4                                                l5368 0DD1  
                                              l5288 0CB5                                                l6272 0892  
                                              l6264 085D                                                l6256 0815  
                                              l6360 1583                                                l6352 156F  
                                              l5810 1C71                                                l5802 1C68  
                                              l6186 1D71                                                l6178 1D65  
                                              l4762 0690                                                l4754 067C  
                                              l4738 064D                                                l4746 065E  
                                              l4770 069D                                                l4682 0578  
                                              l4674 0570                                                l4666 0568  
                                              l4658 0560                                                l4690 0580  
                                              l4930 0289                                                l4922 0256  
                                              l4906 0226                                                l4842 00CF  
                                              l4834 00BB                                                l4826 00B1  
                                              l4818 009A                                                l4586 12AE  
                                              l4578 1293                                                l6194 1C2A  
                                              l4498 0760                                                l6282 1DF2  
                                              l6098 1409                                                l5378 0DE6  
                                              l5298 0CCC                                                l6266 0877  
                                              l6258 0824                                                l6274 089B  
                                              l6370 15A3                                                l6362 1589  
                                              l6354 157B                                                l5812 1C73  
                                              l5804 1C6B                                                l5900 1BBC  
                                              l5820 1B2D                                                l6188 1D74  
                                              l4780 06B0                                                l4772 069E  
                                              l4764 0692                                                l4756 0683  
                                              l4748 066E                                                l4692 0581  
                                              l4684 057A                                                l4676 0572  
                                              l4668 056A                                                l4940 02B1  
                                              l4932 0297                                                l4924 026E  
                                              l4916 0247                                                l4908 0227  
                                              l4860 0127                                                l4852 00EA  
                                              l4844 00D7                                                l4836 00C0  
                                              l4828 00B4                                                l4588 12B6  
                                              l6196 1C2F                                                l6276 14E0  
                                              l6292 1AC8                                                l6284 1DF4  
                                              l6268 0880                                                l6380 15CC  
                                              l6364 1596                                                l6372 15AC  
                                              l6356 157E                                                l6348 156B  
                                              l5814 1C7B                                                l5806 1C6D  
                                              l5822 1B1A                                                l5902 1BBE  
                                              l5910 1BCB                                                l4790 06E3  
                                              l4782 06B5                                                l4774 06A2  
                                              l4766 0697                                                l4758 0687  
                                              l4694 0598                                                l4686 057C  
                                              l4678 0574                                                l4942 02B2  
                                              l4934 02A0                                                l4918 024C  
                                              l4926 0272                                                l4870 016B  
                                              l4862 013F                                                l4854 00F5  
                                              l4846 00DC                                                l4838 00C5  
                                              l4598 12C4                                                l4950 16B7  
                                              l6198 1C36                                                l5830 12F8  
                                              l6278 14E6                                                l6286 1DF6  
                                              l6382 15CF                                                l6366 159D  
                                              l6374 15B4                                                l6358 1580  
                                              l5808 1C6F                                                l5824 1B21  
                                              l5912 1BCD                                                l5904 1BC2  
                                              l5920 0804                                                l4792 06E8  
                                              l4784 06BB                                                l4776 06A8  
                                              l4768 0699                                                l4696 05B3  
                                              l4688 057E                                                l4944 02BC  
                                              l4936 02A2                                                l4928 027F  
                                              l4880 019D                                                l4872 0172  
                                              l4864 014C                                                l4856 0102  
                                              l4848 00E1                                                l4960 16E7  
                                              l4952 16BB                                                l5816 1B34  
                                              l5840 1367                                                l5832 12F8  
                                              l6288 1E06                                                l6384 15EB  
                                              l6376 15C1                                                l6368 15A0  
                                              l5850 1A7B                                                l5930 1E9C  
                                              l5826 1ADA                                                l5914 1BCF  
                                              l5906 1BC5                                                l5922 0809  
                                              l5818 1B26                                                l4794 06F0  
                                              l4786 06BF                                                l4698 05BD  
                                              l4938 02AD                                                l4890 01F8  
                                              l4882 01AF                                                l4874 017D  
                                              l4866 0159                                                l4858 011A  
                                              l4970 1716                                                l4962 16F0  
                                              l4954 16CB                                                l5834 12FD  
                                              l6386 1600                                                l6378 15C3  
                                              l5940 1EAB                                                l5932 1EA3  
                                              l5844 1B0E                                                l5860 1014  
                                              l5852 1009                                                l5828 1ADE  
                                              l5908 1BC6                                                l5924 080B  
                                              l5916 0800                                                l4796 06F5  
                                              l4788 06DC                                                l4892 01FF  
                                              l4884 01BA                                                l4876 0184  
                                              l4868 0160                                                l4980 1747  
                                              l4972 171A                                                l4964 16F7  
                                              l4956 16DB                                                l4948 16B2  
                                              l5836 1365                                                l6388 1606  
                                              l5950 1EC2                                                l5942 1EAD  
                                              l5934 1EA5                                                l5926 1E95  
                                              l5846 1B11                                                l5870 1028  
                                              l5862 1017                                                l5854 100D  
                                              l5918 0803                                                l4798 06F6  
                                              l4894 020B                                                l4886 01CC  
                                              l4878 0196                                                l4982 174B  
                                              l4974 1724                                                l4966 1706  
                                              l5838 1366                                                l4990 0AEE  
                                              l5848 1A77                                                l5960 1EC8  
                                              l5952 1EC3                                                l5944 1EB5  
                                              l5936 1EA7                                                l5928 1E97  
                                              l5880 1035                                                l5872 102A  
                                              l5864 1019                                                l5856 1010  
                                              l4896 0212                                                l4888 01E1  
                                              l4984 174C                                                l4976 172E  
                                              l4968 170D                                                l4992 0AF6  
                                              l5954 1EC5                                                l5946 1EBD  
                                              l5938 1EA9                                                l5890 1041  
                                              l5882 1038                                                l5874 102D  
                                              l5866 1023                                                l5858 1012  
                                              l4898 0216                                                l4978 1742  
                                              l5962 1AA4                                                l4994 0AFB  
                                              l5970 1000                                                l5956 1EC6  
                                              l5948 1EC0                                                l5884 103A  
                                              l5876 102F                                                l5868 1026  
                                              l5892 1BB1                                                l4996 0B00  
                                              l4988 0ADC                                                l5958 1EC7  
                                              l5886 103C                                                l5878 1033  
                                              l5894 1BB4                                                l5966 1AB6  
                                              l4998 0B05                                                l5888 103E  
                                              l5896 1BB5                                                l5898 1BBA  
                                              l5996 145A                                                l5998 14C8  
                                              STR_1 18BD                                                STR_2 1905  
                                              STR_3 1865                                                STR_4 18E5  
                                              STR_5 18AE                                                STR_6 188E  
                                              STR_7 1914                                                STR_8 190D  
                                              STR_9 18F0                                                _LATA 010C  
                                              _LATB 010D                                                _LATC 010E  
                                              u4000 11C3                                                u4001 11C2  
                                              u4010 11C9                                                u4011 11C8  
                                              u4100 1109                                                u4020 11D9  
                                              u4101 1108                                                u4021 11D8  
                                              u4110 1114                                                u4030 11F9  
                                              u4111 1113                                                u4031 11F8  
                                              u5000 0607                                                u4120 1123  
                                              u4200 1F5F                                                u4040 1DE8  
                                              u5001 0606                                                u4121 1122  
                                              u4201 1F5E                                                u4041 1DE7  
                                              u4210 1F6A                                                u4050 1C8D  
                                              u4211 1F69                                                u4035 11F5  
                                              u4051 1C8C                                                u5100 069D  
                                              u5020 0629                                                u4060 1D03  
                                              u4140 1131                                                u4220 1F75  
                                              u5101 069C                                                u5021 0628  
                                              u4061 1D02                                                u4141 1130  
                                              u4221 1F74                                                u5110 06A2  
                                              u5030 0657                                                u4310 07DC  
                                              u5111 06A1                                                u5031 0656  
                                              u5023 0625                                                u5015 060A  
                                              u4135 1127                                                u4311 07DB  
                                              u5200 06F5                                                u5120 06A8  
                                              u5040 066E                                                u4160 1140  
                                              u4240 1F83                                                u6000 0C8C  
                                              u5201 06F4                                                u5121 06A7  
                                              u5041 066D                                                u4161 113F  
                                              u4241 1F82                                                u4305 07D2  
                                              u6001 0C8B                                         main@counter 0142  
                                              u5210 06FA                                                u5130 06AF  
                                              u5050 0673                                                u4090 1D17  
                                              u4250 1F8D                                                u4330 07EB  
                                              u4410 1E90                                                u6010 0CA7  
                                              u5211 06F9                                                u5131 06AE  
                                              u5051 0672                                                u4091 1D16  
                                              u4075 1D08                                                u4155 1132  
                                              u4251 1F8C                                                u4235 1F79  
                                              u4331 07EA                                                u4411 1E8F  
                                              u6011 0CA6                                                u5140 06B5  
                                              u5300 00DC                                                u4180 1150  
                                              u4420 1FB0                                                u4500 0714  
                                              u6100 0D40                                                u6020 0CC3  
                                              u5141 06B4                                                u5301 00DB  
                                              u4085 1D0D                                                u4181 114F  
                                              u4165 113C                                                u4421 1FAF  
                                              u4501 0712                                                u4325 07DD  
                                              u4405 1E86                                                u6101 0D3F  
                                              u6021 0CC2                                                u5230 070A  
                                              u5150 06BF                                                u5070 0687  
                                              u5310 00E1                                                u4190 1155  
                                              u4270 1F9C                                                u4430 1FBF  
                                              u4510 0715                                                u4350 07FB  
                                              u6030 0CFB                                                u5231 0709  
                                              u5151 06BE                                                u5071 0686  
                                              u5311 00E0                                                u4191 1154  
                                              u4175 1146                                                u4271 1F9B  
                                              u4255 1F89                                                u4431 1FBE  
                                              u4351 07FA                                                u4335 07E7  
                                              u6031 0CFA                                                u5160 06CD  
                                              u5080 068C                                                u5400 0226  
                                              u5240 0094                                                u4280 1FA1  
                                              u4440 1FE3                                                u4520 0723  
                                              u4360 1E69                                                u4600 13AF  
                                              u6200 0D9B                                                u6120 0D4D  
                                              u5225 0701                                                u5081 068B  
                                              u5065 067D                                                u5401 0225  
                                              u5241 0093                                                u4281 1FA0  
                                              u4265 1F92                                                u4441 1FE2  
                                              u4521 0722                                                u4345 07F1  
                                              u4361 1E68                                                u4601 13AE  
                                              u6121 0D4C                                                u5170 06DC  
                                              u5090 0697                                                u5410 022B  
                                              u5250 009A                                                u4450 1FE8  
                                              u4530 072C                                                u4290 07CE  
                                              u4610 13B5                                                u6210 0DB6  
                                              u5171 06DB                                                u5091 0696  
                                              u5411 022A                                                u5251 0099  
                                              u4451 1FE7                                                u4531 072B  
                                              u4291 07CD                                                u4611 13B4  
                                              u6211 0DB5                                                u6115 0D43  
                                              u5180 06E3                                                u5420 023F  
                                              u5340 01D7                                                u5260 009F  
                                              u4700 12BC                                                u4460 1C0B  
                                              u4540 0782                                                u4380 1E77  
                                              u4620 13BA                                                u6220 0DD1  
                                              u6140 0D5D                                                u6060 0D0D  
                                              u5181 06E2                                                u5165 06C9  
                                              u5421 023E                                                u5325 015A  
                                              u5261 009E                                                u4701 12BB  
                                              u4461 1C0A                                                u4445 1FDF  
                                              u4541 0781                                                u4381 1E76  
                                              u4621 13B9                                                u6221 0DD0  
                                              u6205 0D97                                                u6141 0D5C  
                                              u6061 0D0C                                                u6045 0CFC  
                                              i1l30 1B0D                                                u5190 06E8  
                                              u4470 1DB0                                                u5430 0246  
                                              u5350 01EE                                                u5270 00BA  
                                              u4710 12C3                                                u5510 16B7  
                                              u4550 0789                                                u4390 1E81  
                                              u4630 13C7                                                u6230 0DE4  
                                              u6150 0D62                                                u5191 06E7  
                                              u4471 1DAF                                                u5431 0245  
                                              u5335 0185                                                u5271 00B9  
                                              u4711 12C2                                                u5511 16B6  
                                              u4551 0788                                                u4391 1E80  
                                              u4375 1E6D                                                u4631 13C6  
                                              u6231 0DE3                                                u6215 0DB2  
                                              u6151 0D61                                                u6135 0D4F  
                                              u6055 0D03                                                u4800 0515  
                                              u5440 024C                                                u5280 00C0  
                                              u5600 1720                                                u5520 16BB  
                                              u4560 078E                                                u4640 13CC  
                                              u6160 0D76                                                u6080 0D27  
                                              u4801 0514                                                u5505 02B5  
                                              u5441 024B                                                u5345 01D3  
                                              u5281 00BF                                                u5601 171F  
                                              u5521 16BA                                                u4561 078D  
                                              u4545 077E                                                u4641 13CB  
                                              u6225 0DCD                                                u6161 0D75  
                                              u6081 0D26                                                u4810 0531  
                                              u4490 1DC0                                                u5450 0256  
                                              u5290 00C5                                                u4730 12D1  
                                              u5610 1724                                                u5530 16DB  
                                              u4570 079B                                                u4650 1173  
                                              u6170 0D7D                                                u6090 0D38  
                                              u4811 0530                                                u4491 1DBF  
                                              u5451 0255                                                u5355 01EA  
                                              u5291 00C4                                                u4731 12D0  
                                              u5611 1723                                                u5531 16DA  
                                              u4571 079A                                                u4651 1172  
                                              u4395 1E7D                                                u4635 13C3  
                                              u6171 0D7C                                                u6091 0D37  
                                              u6075 0D0F                                                i1l52 1B74  
                                              u4900 05B3                                                u4820 0538  
                                              u5460 0264                                                u5380 0216  
                                              u4740 12D8                                                u5620 1738  
                                              u7220 12FD                                                u4580 07A0  
                                              u4660 11B7                                                u5700 0B93  
                                              u7300 1068                                                u6180 0D83  
                                              u4901 05B2                                                u4821 0537  
                                              u4485 1DB5                                                u5381 0215  
                                              u5365 01F9                                                u4741 12D7  
                                              u4725 12C5                                                u7221 12FC  
                                              u4581 079F                                                u4661 11B6  
                                              u5701 0B92                                                u7301 1067  
                                              u6245 0DEB                                                u6181 0D82  
                                              u6085 0D23                                                u4830 053E  
                                              u5470 027F                                                u5630 1747  
                                              u5550 16F6                                                u4670 1B47  
                                              u3950 1AC6                                                u4590 07A6  
                                              u5710 0BD2                                                u7310 1074  
                                              u6190 0D8D                                                u7230 176D  
                                              i1l39 1A5B                                                u4831 053D  
                                              u5471 027E                                                u5375 020C  
                                              u5631 1746                                                u5551 16F5  
                                              u4671 1B46                                                u3951 1AC4  
                                              u4591 07A5                                                u4575 0797  
                                              u5711 0BD1                                                u7311 1073  
                                              u6191 0D8C                                                u7231 176C  
                                              i1l72 1C52                                                u4920 05C3  
                                              u4840 0543                                                u5480 0297  
                                              u4760 12E7                                                u4680 1293  
                                              u5640 174B                                                u3960 1AC7  
                                              u5720 0C0A                                                u5800 1AD8  
                                              u7320 109C                                                u7240 1773  
                                              u4921 05C2                                                u4841 0542  
                                              u5481 0296                                                u5465 0260  
                                              u4761 12E6                                                u4681 1292  
                                              u5641 174A                                                u5625 1734  
                                              u5545 16EA                                                u5721 0C09  
                                              u5801 1AD6                                                u7321 109B  
                                              u7241 1772                                                i1l58 1A49  
                                              u4850 055C                                                u5490 02B1  
                                              u4770 12EC                                                u4690 12A9  
                                              u5570 170C                                                u3970 1E14  
                                              u5650 0AEE                                                u5730 1E5F  
                                              u7330 13F2                                                u5810 1AD9  
                                              u7250 17C2                                                u4915 05B6  
                                              u4851 055B                                                u5491 02B0  
                                              u5475 027B                                                u5395 0218  
                                              u4771 12EB                                                u4755 12DA  
                                              u5571 170B                                                u3971 1E13  
                                              u5651 0AED                                                u5731 1E5E  
                                              u7331 13F1                                                u7251 17C1  
                                              u4940 05D5                                                u4860 0560  
                                              u4780 050A                                                u5900 0A65  
                                              u3980 1E1E                                                u5660 0B27  
                                              u7340 13FF                                                u5820 1D56  
                                              u7260 17C8                                                u4941 05D4  
                                              u4861 055F                                                u4781 0509  
                                              u5485 0293                                                u5565 1700  
                                              u5901 0A64                                                u3981 1E1D  
                                              u5661 0B26                                                u7341 13FE  
                                              u5821 1D55                                                u7261 17C7  
                                              u4950 05D9                                                u4870 0598  
                                              u4790 0510                                                u5590 171A  
                                              u5910 0A7E                                                u5830 09DC  
                                              u3990 1BFF                                                u5670 0B3C  
                                              u7350 1409                                                u7270 17F1  
                                              u4951 05D8                                                u4935 05C6  
                                              u4871 0597                                                u4791 050F  
                                              u4695 12A5                                                u5591 1719  
                                              u5911 0A7D                                                u5831 09DB  
                                              u3991 1BFE                                                u5671 0B3B  
                                              u7351 1408                                                u7271 17F0  
                                              u4960 05DE                                                u4880 05A2  
                                              u5920 0AA2                                                u5840 09EC  
                                              u5680 0B54                                                u7360 1418  
                                              u7280 17F7                                                u4961 05DD  
                                              u4881 05A0                                                u5585 1710  
                                              u5921 0AA1                                                u5905 0A61  
                                              u5841 09EB                                                u5681 0B53  
                                              u7361 1417                                                u7281 17F6  
                                              u4970 05F3                                                u4890 05A3  
                                              u5930 0ABB                                                u5850 0A08  
                                              u5690 0B5E                                                u7370 1444  
                                              u7290 1057                                                u4971 05F2  
                                              u4875 0594                                                u5931 0ABA  
                                              u5915 0A7A                                                u5851 0A07  
                                              u5691 0B5D                                                u7371 1443  
                                              u7291 1056                                                u5780 1B9A  
                                              u4980 05F7                                                u5940 0AD8  
                                              u5860 0A19                                                u7380 1449  
                                              u7445 1CA5                                                u5781 1B99  
                                              u4981 05F6                                                u5941 0AD7  
                                              u5925 0A9E                                                u5861 0A18  
                                              u5845 09E8                                                u7381 1448  
                                              u5790 1BA9                                                u5870 0A22  
                                              u7470 1C2F                                                u5950 0C5A  
                                              u7550 0887                                                u5791 1BA8  
                                              u5935 0AB7                                                u5871 0A21  
                                              u7471 1C2E                                                u5951 0C59  
                                              u7551 0885                                                u5880 0A37  
                                              u7480 1C36                                                u5960 0C60  
                                              u7560 0888                                                u5881 0A36  
                                              u5865 0A15                                                u7481 1C35  
                                              u5961 0C5F                                                u5890 0A4C  
                                              u7570 14E6                                                u5970 0C65  
                                              u7730 1589                                                u4995 05FA  
                                              u5891 0A4B                                                u7571 14E5  
                                              u5971 0C64                                                u7731 1588  
                                              u5980 0C81                                                u7740 1596  
                                              u5885 0A33                                                u5981 0C80  
                                              u7741 1595                                                u5990 0C87  
                                              u7750 15C1                                                u5895 0A48  
                                              u5991 0C86                                                u7751 15C0  
                                              u7787 15A7                                                u7797 15C7  
                                              _TMR2 001D                                                _TMR4 0415  
                                              _TMR6 041C                                                _WPUA 020C  
                                              _WPUB 020D                                                _WPUC 020E  
                         EUSART_ReceiveISR@regValue 0070                                     _getHoogtesensor 1A92  
                                              abs@a 00A6                                                _dbuf 01B8  
                                              _atoi 13E1                                                _main 156B  
                                              _dtoa 070C                                                _line 01D8  
                                     i1___flmul@grs 002E                                                _prec 0151  
                                              _nout 014F                                                pad@i 00BA  
                                              pad@p 00B7                                                fsr0h 0005  
                                              fsr1h 0007                                                indf0 0000  
                                              fsr0l 0004                                                indf1 0001  
                                              fsr1l 0006                                                btemp 007E  
                                              _utoa 1368                         _INT_DefaultInterruptHandler 0000  
                  __end_of_adcConversionDoneHandler 1F07                                      i1___fladd@aexp 004B  
                                    i1___fladd@bexp 004C                                                start 0058  
        __end_of_EUSART_DefaultOverrunErrorCallback 1A52                ??_EUSART_DefaultOverrunErrorCallback 0070  
               ?_EUSART_DefaultOverrunErrorCallback 0070                  _EUSART_DefaultOverrunErrorCallback 1A4E  
                                   ___fldiv@new_exp 00B2                           __end_of_SPI1_ByteExchange 1B4B  
                   __end_of_INT_SetInterruptHandler 1A89                                ?i1_ADC_SelectChannel 0070  
                                             ??_abs 00A8                                               ??_pad 00B9  
                                     ?_EUSART_Write 00A0                                       ___fltol@sign1 00EC  
                                             _ADACT 009F                                               ?_atoi 00A6  
                                   __end_of___fladd 070C                                               ?_main 0070  
                                             ?_dtoa 00BC                                     __end_of___fldiv 0DF4  
                                   __end_of___awdiv 115F                                               STR_10 18AB  
                                             STR_11 184C                                               STR_12 18D8  
                                             STR_13 18CB                                               STR_14 189F  
                                             STR_15 187D                                     __end_of___awmod 1FAB  
                                   __end_of___flmul 02C5                                     __end_of___flsub 1D3C  
                                   __end_of___fltol 12F8                                               ?_utoa 00BC  
                                   ___awdiv@divisor 00A0                                               _T2CON 001F  
                                             _T4CON 0417                                               _IOCAF 0393  
                                             _IOCBF 0396                                               _IOCCF 0399  
                                             _IOCAN 0392                                               _IOCAP 0391  
                                             _IOCBN 0395                                               _T6CON 041E  
                                             _IOCBP 0394                                               _IOCCN 0398  
                                             _IOCCP 0397                                     __end_of___lwdiv 0800  
                                             i1l233 001B                                               i1l235 002C  
                                             i1l244 0056                                               i1l237 003A  
                                             i1l238 0056                                               i1l239 0048  
                                             i1l432 1B83                                     __end_of___lwmod 1E95  
                                             i1l438 1A4B                                               i1l491 1B92  
                                             i1l735 1F58                                               i1l745 1CF9  
                                             i1l497 1A4C                                               i1l763 1A4A  
                                             i1l748 1CFB                                               i1l766 1A51  
                                             i1l848 1F06                                               i1l857 1A61  
                                             i1l970 09C4                                               i1l968 09BD  
                                   ___awdiv@counter 00A4                                               _OSCEN 091D  
                                             _UART1 1800                                        vfpfcnvrt@fmt 00CB  
                                             _TRISA 008C                                               _TRISB 008D  
                                             _TRISC 008E                                               _RXPPS 0E24  
                                   _TMR4_Initialize 1BC2                                    __end_of_TMR2_ISR 1B84  
                                  __end_of_TMR4_ISR 1B93                                               _getKi 1BD3  
                                             _getKp 1BE4                                               _flags 0063  
                                _EUSART_TransmitISR 1CE0                                      i1___flmul@aexp 0032  
                               read_prec_or_width@c 00AC                                      i1___flmul@bexp 0033  
                               read_prec_or_width@n 00AD                                               _fputc 11BC  
                                             _fputs 1DC5                                               _setKi 1AE4  
                                             _setKp 1AEE                                         ?_TMR6_Tasks 0070  
                                    i1___flmul@sign 002D                                      i1___flmul@temp 0038  
                                    i1___flmul@prod 0034                                               atoi@n 00AB  
                                             pad@fp 00B4                                               atoi@s 00A6  
                                             _width 0055                                               _putch 1BF5  
                                             dtoa@d 00BE                                               dtoa@i 00C7  
                                             dtoa@p 00C3                                               dtoa@s 00C6  
                                             dtoa@w 00C4                                               pclath 000A  
                                    i1___fltol@exp1 0043                                __end_of_getLedNumber 1103  
                                             utoa@d 00BE                                               utoa@i 00C4  
                                             utoa@p 00C1                                               utoa@w 00C2  
                                             status 0003                                               wtemp0 007E  
                                   __end_of_sprintf 1E0F                                 ?_EUSART_TransmitISR 0070  
                                   i1___fladd@signs 004A                                         controller@I 0051  
                                       controller@P 004F                               ??i1_ADC_SelectChannel 0070  
                                   __initialization 005A                                        __end_of_atoi 145A  
                                      __end_of_main 160C                                        __end_of_dtoa 07C5  
                                      __end_of_utoa 13E1                                       ?_initLedstrip 0070  
                        ??_PWM_buzzer_LoadDutyValue 00A2                                      ??_EUSART_Write 00A1  
                 _EUSART_TxCompleteInterruptHandler 0159                             __end_of_TMR2_Initialize 1BC2  
                                         ??_ADC_ISR 0074                         ?_INTERRUPT_InterruptManager 0070  
                            printFloat@integer_part 0126                                              ??_atoi 00A8  
                              ??_EUSART_TransmitISR 0070                                              ??_main 012C  
                                            ??_dtoa 00C0                                         ?i1___xxtofl 0070  
                              __end_of_getDutycycle 1AB6                                              ??_utoa 00C0  
                           setSetpoint@new_setpoint 00AD                          __end_of_read_prec_or_width 11BC  
                 PWM_buzzer_LoadDutyValue@dutyValue 00A0                                     _TMR6_Initialize 0800  
EUSART_OverrunErrorCallbackRegister@callbackHandler 00A0  EUSART_FramingErrorCallbackRegister@callbackHandler 00A0  
                           __end_of_getHoogtesensor 1A9B                                              ?_getKi 00A0  
                                            ?_getKp 00A0                                              _ADCON0 009D  
                                            _ADCON1 009E                          _EUSART_OverrunErrorHandler 005D  
                                            ?_fputc 00A3                                              ?_fputs 00AC  
                                            _ADRESH 009C                                              _ADRESL 009B  
                                            ?_setKi 0120                                              ?_setKp 0120  
                        __end_of_position_led_strip 0ADC                                    ___awdiv@dividend 00A2  
                                            _ANSELA 018C                                              ?_putch 0070  
                                            _ANSELB 018D                                              _ANSELC 018E  
                                      ?_setSetpoint 00AD                                              _RC1REG 0199  
                                            _RC1STA 019D                                              _RB4PPS 0E9C  
                                            _RB6PPS 0E9E                                              i1l1401 1288  
                                            i1l1411 1288                                              _RC5PPS 0EA5  
                                            _RB7PPS 0E9F                                              i1l1512 0EC9  
                                            i1l1408 1273                                              i1l1521 0FFF  
                                            _ODCONA 028C                                              i1l1514 0EA3  
                                            i1l1610 047D                                              _ODCONB 028D  
                                            _ODCONC 028E                                              i1l1508 0E4A  
                                            i1l1604 04FF                                              i1l1533 0F7C  
                                            i1l1550 0FF2                                              i1l1542 0FD2  
                                            i1l1551 0FFF                                              i1l1623 1D90  
                                            i1l1616 04F5                                              i1l1529 0F5A  
                                            i1l1625 1DA0                                              i1l1650 16AF  
                                            i1l1539 0F9F                                              _RC7PPS 0EA7  
                                            i1l1661 167B                                              i1l5110 1D88  
                                            i1l1662 1687                                              i1l5112 1D8C  
                                            i1l1648 162E                                              i1l1649 163F  
                                            i1l5122 1A56                                              i1l5114 1D97  
                                            i1l5106 1D7F                                              i1l5116 1D9C  
                                            i1l5108 1D81                                              i1l5126 1C3E  
                                            i1l5400 123F                                              i1l6210 1F22  
                                            i1l6202 1F07                                              i1l5402 1247  
                                            i1l6130 091B                                              i1l6220 1F3E  
                                            i1l6212 1F27                                              i1l6204 1F10  
                                            i1l5500 0E70                                              i1l5420 126A  
                                            i1l5412 1255                                              i1l5404 1249  
                                            i1l6140 09A6                                              i1l6132 0956  
                                            i1l6124 08BD                                              i1l6300 0014  
                                            i1l6230 1F54                                              i1l6222 1F41  
                                            i1l6214 1F2C                                              i1l6206 1F15  
                                            i1l5510 0EA7                                              i1l5502 0E72  
                                            i1l5430 0DFA                                              i1l5422 1278  
                                            i1l5406 124D                                              i1l5414 1263  
                                            i1l6150 09BD                                              i1l6142 09AC  
                                            i1l6134 098A                                              i1l6126 08C5  
                                            i1l6310 003F                                              i1l6302 0020  
                                            i1l6232 1F56                                              i1l6224 1F46  
                                            i1l6216 1F33                                              i1l6208 1F1C  
                                            i1l6240 1CEF                                              i1l5600 0FB3  
                                            i1l5520 0EC0                                              i1l5512 0EB1  
                                            i1l5504 0E74                                              i1l5440 0E11  
                                            i1l5432 0DFE                                              i1l5424 127D  
                                            i1l6144 09B6                                              i1l6136 0990  
                                            i1l6128 08CE                                              i1l6312 0044  
                                            i1l6304 0025                                              i1l6154 1B66  
                                            i1l6218 1F39                                              i1l6242 1CF4  
                                            i1l6170 1B7C                                              i1l5610 0FE9  
                                            i1l5602 0FD0                                              i1l5530 0EDB  
                                            i1l5514 0EB3                                              i1l5522 0EC2  
                                            i1l5506 0E75                                              i1l5450 0E25  
                                            i1l5442 0E12                                              i1l5434 0DFF  
                                            i1l5426 0DF4                                              i1l6146 09BA  
                                            i1l6138 0999                                              i1l6162 1B84  
                                            i1l6314 004D                                              i1l6306 0031  
                                            i1l6156 1B68                                              i1l6228 1F4D  
                                            i1l6244 1CF6                                              i1l6236 1CE0  
                                            i1l6172 1B81                                              i1l5620 0FFE  
                                            i1l5612 0FEA                                              i1l5604 0FD7  
                                            i1l5540 0EF7                                              i1l5532 0EE3  
                                            i1l5524 0ECD                                              i1l5516 0EB7  
                                            i1l5508 0E8C                                              i1l5460 0E32  
                                            i1l5452 0E26                                              i1l5436 0E04  
                                            i1l5444 0E14                                              i1l5428 0DF8  
                                            i1l5700 0407                                              i1l6164 1B8B  
                                            i1l6316 0052                                              i1l6308 0036  
                                            i1l6158 1B6F                                              i1l6238 1CE7  
                                            i1l5614 0FEE                                              i1l5606 0FDC  
                                            i1l5550 0F1D                                              i1l5542 0EFB  
                                            i1l5534 0EE7                                              i1l5526 0ED2  
                                            i1l5518 0EB8                                              i1l5470 0E50  
                                            i1l5462 0E37                                              i1l5454 0E28  
                                            i1l5446 0E1C                                              i1l5438 0E09  
                                            i1l5710 044D                                              i1l5702 041C  
                                            i1l5630 02D0                                              i1l5622 02C5  
                                            i1l5390 121A                                              i1l6166 1B90  
                                            i1l5384 1B03                                              i1l6432 1EF7  
                                            i1l6168 1B75                                              i1l5616 0FF0  
                                            i1l5608 0FE4                                              i1l5552 0F41  
                                            i1l5560 0F52                                              i1l5544 0EFC  
                                            i1l5536 0EEB                                              i1l5480 0E5C  
                                            i1l5472 0E54                                              i1l5464 0E3F  
                                            i1l5456 0E2C                                              i1l5448 0E1F  
                                            i1l5720 0461                                              i1l5712 0451  
                                            i1l5704 0433                                              i1l5640 02EC  
                                            i1l5632 02D5                                              i1l5624 02C9  
                                            i1l5392 1224                                              i1l5618 0FFA  
                                            i1l5570 0F77                                              i1l5562 0F62  
                                            i1l5554 0F43                                              i1l5546 0F04  
                                            i1l5538 0EF5                                              i1l5490 0E66  
                                            i1l5482 0E5E                                              i1l5474 0E56  
                                            i1l5466 0E40                                              i1l5458 0E2D  
                                            i1l5730 0482                                              i1l5722 0462  
                                            i1l5714 0452                                              i1l5706 043A  
                                            i1l5650 02FB                                              i1l5642 02EF  
                                            i1l5634 02DA                                              i1l5626 02CB  
                                            i1l5386 1A5C                                              i1l5580 0F8B  
                                            i1l5572 0F7B                                              i1l5564 0F67  
                                            i1l5556 0F46                                              i1l5548 0F07  
                                            i1l5492 0E68                                              i1l5484 0E60  
                                            i1l5476 0E58                                              i1l5468 0E42  
                                            i1l5732 0487                                              i1l5740 04AD  
                                            i1l5724 0466                                              i1l5716 0459  
                                            i1l5708 0446                                              i1l5660 0317  
                                            i1l5652 0300                                              i1l5644 02F1  
                                            i1l5636 02E2                                              i1l5628 02CF  
                                            i1l5396 122D                                              i1l5590 0F9C  
                                            i1l5574 0F80                                              i1l5582 0F8D  
                                            i1l5558 0F4B                                              i1l5494 0E6A  
                                            i1l5486 0E62                                              i1l5478 0E5A  
                                            i1l5750 04DD                                              i1l5742 04BA  
                                            i1l5734 048D                                              i1l5726 047A  
                                            i1l5718 045D                                              i1l5670 033D  
                                            i1l5662 031C                                              i1l5654 0308  
                                            i1l5646 02F5                                              i1l5638 02E4  
                                            i1l5398 123E                                              i1l6294 0006  
                                            i1l5576 0F84                                              i1l5568 0F70  
                                            i1l5584 0F91                                              i1l5496 0E6C  
                                            i1l5488 0E64                                              i1l5752 04E8  
                                            i1l5744 04C4                                              i1l5736 0491  
                                            i1l5680 0394                                              i1l5672 0355  
                                            i1l5656 030A                                              i1l5648 02F6  
                                            i1l6296 000A                                              i1l5594 0FA4  
                                            i1l5586 0F92                                              i1l5578 0F86  
                                            i1l5498 0E6E                                              i1l5754 04EC  
                                            i1l5746 04D2                                              i1l5738 04A9  
                                            i1l5690 03BF                                              i1l5682 039B  
                                            i1l5674 0362                                              i1l5666 0325  
                                            i1l5658 0312                                              i1l5770 1636  
                                            i1l5762 160D                                              i1l6298 000F  
                                            i1l5596 0FA9                                              i1l5588 0F96  
                                            i1l5756 04ED                                              i1l5748 04DB  
                                            i1l5692 03D1                                              i1l5684 03A6  
                                            i1l5676 037A                                              i1l5668 0330  
                                            i1l5780 1661                                              i1l5764 1612  
                                            i1l5598 0FAF                                              i1l5758 04F7  
                                            i1l5694 03D8                                              i1l5686 03AD  
                                            i1l5678 0387                                              i1l5790 1689  
                                            i1l5782 1668                                              i1l5774 1642  
                                            i1l5766 1616                                              i1l5696 03EA  
                                            i1l5688 03B8                                              i1l5792 169D  
                                            i1l5784 1671                                              i1l5776 164B  
                                            i1l5768 1626                                              i1l5698 03F5  
                                            i1l5794 16A2                                              i1l5786 1675  
                                            i1l5778 1652                                              i1l5980 1EE0  
                                            i1l5972 1ECB                                              i1l5964 1A4E  
                                            i1l5796 16A6                                              i1l5788 167F  
                                            i1l5982 1EE3                                              i1l5990 1F02  
                                            i1l5974 1ECC                                              i1l5798 16A7  
                                            i1l5984 1EEB                                              i1l5976 1ED4  
                                            _INLVLA 038C                                              i1l5978 1ED8  
                                            _INLVLB 038D                                              _INLVLC 038E  
                                            i1l5988 1EEE                                              u700_20 0481  
                                            u700_21 0480                                              u701_20 0487  
                                            u701_21 0486                                              u702_20 0491  
                                            u630_20 1262                                              u710_20 1636  
                                            u702_21 0490                                              u630_21 1261  
                                            u710_21 1635                                              u703_20 049F  
                                            u631_20 1269                                              u631_21 1268  
                                            u703_25 049B                                              u711_25 1645  
                                            u640_20 0E32                                              u704_20 04BA  
                                            u720_20 16A2                                              u712_20 1651  
                                            u640_21 0E31                                              u704_21 04B9  
                                            u720_21 16A1                                              u712_21 1650  
                                            u704_25 04B6                                              u632_25 126B  
                                            u641_20 0E37                                              u705_20 04D2  
                                            u633_20 1278                                              u625_20 1224  
                                            u721_20 16A6                                              u641_21 0E36  
                                            u705_21 04D1                                              u633_21 1277  
                                            u625_21 1223                                              u721_21 16A5  
                                            u705_25 04CE                                              u713_25 165B  
                                            u642_20 0E50                                              u706_20 04EC  
                                            u634_20 127D                                              u626_20 123A  
                                            u714_20 1667                                              u642_21 0E4F  
                                            u706_21 04EB                                              u634_21 127C  
                                            u714_21 1666                                              u650_25 0EBA  
                                            u626_25 1236                                              u651_20 0EC9  
                                            u643_20 0E54                                              u635_20 0DFE  
                                            u627_20 124D                                              u651_21 0EC8  
                                            u643_21 0E53                                              u635_21 0DFD  
                                            u627_21 124C                                              u707_25 04F0  
                                            u715_25 166B                                              u660_20 0F4B  
                                            u652_20 0ECD                                              u644_20 0E8C  
                                            u636_20 0E04                                              u628_20 1254  
                                            u716_20 1675                                              u708_20 1612  
                                            u740_20 09A6                                              u660_21 0F4A  
                                            u652_21 0ECC                                              u644_21 0E8B  
                                            u636_21 0E03                                              u628_21 1253  
                                            u716_21 1674                                              u708_21 1611  
                                            u740_21 09A5                                              u644_25 0E88  
                                            u740_25 09A2                                              _OSCFRQ 091F  
                                            u661_20 0F62                                              u653_20 0ED2  
                                            u645_20 0E96                                              u637_20 0E09  
                                            u717_20 167B                                              u709_20 1616  
                                            u741_20 09B6                                              u661_21 0F61  
                                            u653_21 0ED1                                              u645_21 0E94  
                                            u637_21 0E08                                              u717_21 167A  
                                            u709_21 1615                                              u741_21 09B5  
                                            u629_25 1256                                              u750_20 1F22  
                                            u670_20 0FA3                                              u662_20 0F67  
                                            u654_20 0EE7                                              u646_20 0E97  
                                            u638_20 0E25                                              u574_20 1D8C  
                                            u718_20 167F                                              u742_20 09BA  
                                            u750_21 1F21                                              u670_21 0FA2  
                                            u662_21 0F66                                              u654_21 0EE6  
                                            u638_21 0E24                                              u574_21 1D8B  
                                            u718_21 167E                                              u742_21 09B9  
                                            u743_20 1B6F                                              u751_20 1F2C  
                                            u671_20 0FA9                                              u655_20 0EEB  
                                            u647_20 0EA7                                              u639_20 0E2C  
                                            u719_20 1693                                              u743_21 1B6E  
                                            u751_21 1F2B                                              u671_21 0FA8  
                                            u655_21 0EEA                                              u647_21 0EA6  
                                            u639_21 0E2B                                              u663_25 0F71  
                                            u575_25 1D91                                              u719_25 168F  
                                            u752_20 1F39                                              u680_20 0FFE  
                                            u672_20 0FB3                                              u664_20 0F7B  
                                            u576_20 1D9C                                              u760_20 0014  
                                            u752_21 1F38                                              u680_21 0FFD  
                                            u672_21 0FB2                                              u664_21 0F7A  
                                            u576_21 1D9B                                              u760_21 0013  
                                            u656_25 0EEE                                              u648_25 0EAA  
                                     vfpfcnvrt@done 00D2                                              u753_20 1F4C  
                                            u673_20 0FC1                                              u665_20 0F80  
                                            u657_20 0EFB                                              u649_20 0EB7  
                                            u681_20 02CF                                              u745_20 1B8B  
                                            u761_20 0020                                              u753_21 1F4B  
                                            u665_21 0F7F                                              u657_21 0EFA  
                                            u649_21 0EB6                                              u681_21 02CE  
                                            u745_21 1B8A                                              u761_21 001F  
                                            u577_25 1C4D                                              u673_25 0FBD  
                                            u754_20 1CE7                                              u746_20 1B7C  
                                            u674_20 0FD0                                              u666_20 0F8B  
                                            u682_20 02D5                                              u762_20 0025  
                                            u754_21 1CE6                                              u746_21 1B7B  
                                            u674_21 0FCF                                              u666_21 0F8A  
                                            u682_21 02D4                                              u762_21 0024  
                                            u658_25 0EFE                                              u690_25 03C0  
                                            u675_20 0FD7                                              u667_20 0F91  
                                            u659_20 0F1D                                              u691_20 0412  
                                            u683_20 02DA                                              u739_20 0999  
                                            u763_20 0031                                              u675_21 0FD6  
                                            u667_21 0F90                                              u659_21 0F1C  
                                            u683_21 02D9                                              u739_21 0998  
                                            u763_21 0030                                              u659_23 0F19  
                                            u691_25 040E                                              u676_20 0FDC  
                                            u668_20 0F96                                              u692_20 0429  
                                            u684_20 02F5                                              u764_20 0036  
                                            u676_21 0FDB                                              u668_21 0F95  
                                            u684_21 02F4                                              u764_21 0035  
                                            u692_25 0425                                              u749_20 1F15  
                                            u677_20 0FE9                                              u669_20 0F9C  
                                            u685_20 02FB                                              u765_20 003F  
                                            u749_21 1F14                                              u677_21 0FE8  
                                            u669_21 0F9B                                              u685_21 02FA  
                                            u765_21 003E                                              u693_25 0434  
                                            u678_20 0FEE                                              u686_20 0300  
                                            u766_20 0044                                              u758_20 000A  
                                            u678_21 0FED                                              u686_21 02FF  
                                            u766_21 0043                                              u758_21 0009  
                                            u694_25 0447                                              u695_20 0451  
                                            u687_20 0317                                              u767_20 004D  
                                            u759_20 000F                                              u695_21 0450  
                                            u687_21 0316                                              u767_21 004C  
                                            u759_21 000E                                              u679_25 0FF5  
                                            u688_20 031C                                              u768_20 0052  
                                            u688_21 031B                                              u768_21 0051  
                                            u696_25 0453                                              u697_20 0461  
                                            u697_21 0460                                              u689_25 0395  
                                            u698_20 0466                                              u698_21 0465  
                                            _TX1REG 019A                                              u699_20 047A  
                                            u699_21 0479                                              _TX1STA 019E  
                                  __end_of___xxtofl 1755                                        ?_uartHandler 0070  
                                 __end_of_SPI1_Open 1368                                _sendLedstripEndFrame 1CAC  
                                 _ADC_potentiometer 0155                                        vfprintf@cfmt 00E0  
                                    ??_initLedstrip 00A9                                           ??___fladd 00B6  
                                            ___wmul 1CFC                             _updateLedstripAnimation 1A52  
                                         ??___fldiv 00A8                                           ??___awdiv 00A4  
                                         ??___awmod 00A4                                           ??___flmul 00D2  
                                         ??___flsub 00CA                                           ??___fltol 00E8  
                                         ??___lwdiv 00A4                                           ??___lwmod 00A4  
                                  __end_of_ledstrip 184C                                    __end_of_readLine 10A8  
                              read_prec_or_width@ap 00A7                             __end_of_TMR4_Initialize 1BD3  
                                  ___awdiv@quotient 00A6                                   ?_EUSART_IsRxReady 0070  
                                   ___awmod@divisor 00A0                                   ?_EUSART_IsTxReady 0070  
                                   ___awmod@counter 00A4                                              _printf 1C18  
                                            pad@buf 00B6                                   ?_CLOCK_Initialize 0070  
                                            dtoa@fp 00BC                                              _strlen 1C7E  
                                 __end_ofi1___fladd 1000                                  ??_EUSART_IsRxReady 00A0  
                                 __end_ofi1___flmul 0500                                   __end_ofi1___fltol 1289  
                                            fputc@c 00A3                                  ??_EUSART_IsTxReady 00A0  
                                            fputs@c 00B1                                              fputs@i 00B2  
                                            fputs@s 00AC                           ?_adcConversionDoneHandler 0070  
                                ??_CLOCK_Initialize 00A0                          str2float@decimal_separator 00E8  
                                  __end_of_printOut 1AD1                                     i1___fltol@sign1 0042  
                           ?_sendLedstripStartFrame 0070                         EUSART_ReceiveISR@tempRxHead 0071  
                                  __end_of_vfprintf 1E62                               _pwm_fan_LoadDutyValue 1C3E  
                                            utoa@fp 00BC             INT_SetInterruptHandler@InterruptHandler 00A0  
           ADC_SetInterruptHandler@InterruptHandler 00A0                                           ??_sprintf 00E7  
                                    _SPI1_IsRxReady 0000                                      _SPI1_IsTxReady 0000  
                                      ___xxtofl@arg 00AA                                        ___xxtofl@exp 00A9  
                                 _SYSTEM_Initialize 1D5C                                        ___xxtofl@val 00A0  
                           __end_of__initialization 0086                                      _SPI1_ByteWrite 0000  
                                  printFloat@number 0120                                  ?_SYSTEM_Initialize 0070  
                                        ___fltol@f1 00E4                                        ?i1__Umul8_16 0070  
                                     __end_of_UART1 1830                               ?_sendLedstripEndFrame 0070  
                                    __pcstackCOMMON 0070                                        __pidataBANK0 0002  
                                      __pidataBANK2 1AF8                                 ??_SYSTEM_Initialize 00A2  
                                         ?_TMR2_ISR 0070                                       __end_of_getKi 1BE4  
                                     __end_of_getKp 1BF5                                           ?_TMR4_ISR 0070  
                                     __end_of_fputc 121A                                       __end_of_fputs 1DE9  
                                 ??_SPI1_Initialize 00A0                                       __end_of_setKi 1AEE  
                                     __end_of_setKp 1AF8                                       __end_of_putch 1C06  
                                  ?_TMR2_Initialize 0070                             __end_of_TMR6_Initialize 080F  
                     __end_of_PWM_buzzer_Initialize 1B26                             _ADC_GetConversionResult 1A56  
                                _spi1_configuration 18FB                      __end_of_sendLedstripStartFrame 1C68  
                              _eusartRxStatusBuffer 01A0                                    _ADC_hoogtesensor 005B  
                                _pwm_fan_Initialize 1B26                                    ?_getHoogtesensor 00A0  
                                           ??_getKi 00A4                                             ??_getKp 00A4  
                                       setKi@new_ki 0120                                             ??_fputc 00A7  
                         __end_of_SYSTEM_Initialize 1D7E                                             ??_fputs 00AF  
                                           ??_setKi 00F0                                             ??_setKp 00F0  
                                           ??_putch 00A2                                          __pbssBANK0 0055  
                                        __pbssBANK2 0143                                          __pbssBANK3 01A0  
                               ?_pwm_fan_Initialize 0070                                __end_of_EUSART_Write 1E37  
                                       setKp@new_kp 0120                                      i1___xxtofl@arg 007A  
                                    i1___xxtofl@exp 0079                                      i1___xxtofl@val 0070  
                         ??_updateLedstripAnimation 00F0                                   __end_of__Umul8_16 1DC5  
                          _TMR6_PeriodMatchCallback 0167                                          __pmaintext 156B  
                                           ?___wmul 00A0                                          ??_TMR2_ISR 0070  
                                        ??_TMR4_ISR 007E                                          __pintentry 0004  
                              _EUSART_AutoBaudQuery 0000                                ??_pwm_fan_Initialize 00A0  
                                           _ADC_ISR 1B66                                    ?_TMR4_Initialize 0070  
                                           ?_printf 00E2                                        _getLedNumber 10A8  
                                           ?_strlen 00A0                                     _EUSART_IsTxDone 0000  
                                     _eusartRxCount 0067                   _EUSART_RxCompleteCallbackRegister 0000  
                             __end_of_getPomphoogte 1ABF                                           ?___xxtofl 00A0  
                                   _EUSART_ErrorGet 0000                                             _SP1BRGH 019C  
                                           _SP1BRGL 019B                                             _OSCCON1 0919  
                                           _OSCCON3 091B                                 i1__Umul8_16@product 0074  
                            ?_pwm_fan_LoadDutyValue 0070                                             _OSCTUNE 091E  
                                           _PWM5DCH 0618                                             _PWM5DCL 0617  
                                           _PWM6DCH 061B                                             _PWM6DCL 061A  
                                           _PWM5CON 0619                                             _PWM6CON 061C  
                        sendLedstripFrame@intensity 00A3                                             _SSP1ADD 0212  
                                           _SLRCONA 030C                                             _SLRCONB 030D  
                                           _SLRCONC 030E                                             _SSP1BUF 0211  
                                      ??_TMR6_Tasks 00F0                                __end_of_initLedstrip 1B66  
                                         ?_readLine 00E9                                        _getDutycycle 1AAD  
                                        _controller 08BD                               EUSART_Read@tempRxTail 00A0  
                            ??_sendLedstripEndFrame 00A1                                _ADC_InterruptHandler 016D  
                           _ADC_SetInterruptHandler 1A6E                                           ?_printOut 00E9  
                                           ___fladd 0500                                             ___fldiv 0C50  
                                           ___awdiv 1103                                             ___awmod 1F59  
                                           ___flmul 008A                                             ___flsub 1D1C  
                                           ___fltol 1289                 adcConversionDoneHandler@new_channel 006E  
                                    uartHandler@str 0124                                             ___lwdiv 07C5  
                                           ___lwmod 1E62                                           ?_vfprintf 00D9  
                         ??_ADC_GetConversionResult 0072                                          _hoogte_bal 0153  
                                  ?_TMR6_Initialize 0070                                  __end_of_TMR6_Tasks 1C3E  
                                      ??i1___xxtofl 0074                                             __ptext1 080F  
                                           __ptext2 1755                                             __ptext3 0C50  
                                           __ptext4 1000                                             __ptext5 1AEE  
                                           __ptext6 1AE4                                             __ptext7 104F  
                                           __ptext8 1D3C                                             __ptext9 1AD1  
                                         _T2CONbits 001F                               read_prec_or_width@fmt 00A6  
                   __end_of_updateLedstripAnimation 1A56                                          ??___xxtofl 00A4  
                                  ___awmod@dividend 00A2                                             _buzzing 0066  
                                         _T4CONbits 0417                            ??_PIN_MANAGER_Initialize 00A0  
                           _INT_SetInterruptHandler 1A80                                           _T6CONbits 041E  
                                           atoi@neg 00AA                           printFloat@fractional_part 0124  
                                           _sprintf 1DE9                                             clrloop0 1A63  
                                           main@str 012E                                end_of_initialization 0086  
                                           fputc@fp 00A5                         __end_ofi1_ADC_SelectChannel 1B0E  
                                        ??_readLine 00EB                                             init_ram 1A68  
                                           fputs@fp 00AD                                             initloop 1A69  
                                _read_prec_or_width 115F                                   _EUSART_Initialize 1E95  
                                 __end_of_str2float 1800                                  __end_ofi1___xxtofl 16B0  
                                 __end_of_printLogs 156B             __end_of_TMR6_DefaultPeriodMatchCallback 1A4E  
                  ?_TMR6_DefaultPeriodMatchCallback 0070                   ??_TMR6_DefaultPeriodMatchCallback 00A0  
                   _TMR6_DefaultPeriodMatchCallback 1A4D                                  ?_EUSART_Initialize 0070  
                                _position_led_strip 09C5                                   __end_of_vfpfcnvrt 0C50  
                                   _SPI1_BufferRead 0000                                   _EUSART_ReceiveISR 1F07  
                               ?_read_prec_or_width 00A6                                          ??_printOut 00EA  
                                  vfpfcnvrt@convarg 00D3                                          ??_vfprintf 00DF  
                                ?_EUSART_ReceiveISR 0070                                           _SPI1_Open 12F8  
                                           strlen@a 00A2                                             strlen@s 00A0  
                               ??_EUSART_Initialize 00A2                                 ?_position_led_strip 0070  
                             i1__Umul8_16@word_mpld 0076                                          _printFloat 145A  
                               _SPI1_BufferExchange 0000                                         ___fladd@grs 00C1  
                               ??_EUSART_ReceiveISR 0070                 __end_of_ADC_DefaultInterruptHandler 1A4A  
                       _ADC_DefaultInterruptHandler 1A49                                       ___xxtofl@sign 00A8  
   TMR6_PeriodMatchCallbackRegister@CallbackHandler 00A0     TMR4_PeriodMatchCallbackRegister@CallbackHandler 00A0  
          __end_of_TMR6_PeriodMatchCallbackRegister 1AAD                  ??_TMR6_PeriodMatchCallbackRegister 00A2  
                 ?_TMR6_PeriodMatchCallbackRegister 00A0                    _TMR6_PeriodMatchCallbackRegister 1AA4  
                                         i1___fladd 0DF4                                ??_read_prec_or_width 00A9  
                                         i1___flmul 02C5                                         ___fldiv@grs 00B4  
                                         i1___fltol 121A                                         ___fldiv@rem 00AD  
                               _EUSART_Deinitialize 0000                                       ??_getSetpoint 00A2  
                        __end_of_initAdcMultiplexer 1B58                           ?_PWM_buzzer_LoadDutyValue 00A0  
                              ??_position_led_strip 0124                                         ___flmul@grs 00D8  
                         __end_of_EUSART_Initialize 1ECB                       ??_ADC_DefaultInterruptHandler 0070  
                         ??_ADC_SetInterruptHandler 00A2                                         printOut@str 00E9  
                                   _SPI1_Initialize 1ADA                                         ?_controller 0070  
                         __end_of_EUSART_ReceiveISR 1F59             __end_of_TMR2_DefaultPeriodMatchCallback 1A4C  
                 ??_TMR2_DefaultPeriodMatchCallback 0070                    ?_TMR2_DefaultPeriodMatchCallback 0070  
                   _TMR2_DefaultPeriodMatchCallback 1A4B                        __end_of_INTERRUPT_Initialize 1B1A  
                                        ?_SPI1_Open 00A6                                         vfpfcnvrt@ap 00CC  
                                       vfpfcnvrt@cp 00D7                                         vfpfcnvrt@fp 00C9  
                                    __end_of___wmul 1D1C                                 str2float@multiplier 00E9  
                                      _EUSART_Write 1E0F                                      _ADC_Initialize 1C68  
                         ??_INT_SetInterruptHandler 00A2                                      __end_of_printf 1C2A  
                                    __end_of_strlen 1C94                                 start_initialization 005A  
                                       __end_of_abs 1C18                                          ?i1___fladd 003A  
                                       __end_of_pad 2000                                          ?i1___flmul 0020  
                                     ??_EUSART_Read 00A0                                          ?i1___fltol 003A  
          __end_of_TMR4_PeriodMatchCallbackRegister 1A92                  ??_TMR4_PeriodMatchCallbackRegister 00A2  
                 ?_TMR4_PeriodMatchCallbackRegister 00A0                    _TMR4_PeriodMatchCallbackRegister 1A89  
                                       putch@txData 00A2                           _EUSART_RxInterruptHandler 01EC  
                               __end_of_getSetpoint 1AA4                                     str2float@number 00EB  
                                       vfprintf@fmt 00DB                          _EUSART_FramingErrorHandler 005F  
                                          ??___wmul 00A4                              __end_of_ADC_Initialize 1C7E  
                                         __Umul8_16 1DA1                                        _initLedstrip 1B58  
                                       __pdataBANK0 006D                                         __pdataBANK2 015D  
                             position_led_strip@led 0129                                            ?_ADC_ISR 0070  
                          _adcConversionDoneHandler 1ECB                                            ??_printf 00E8  
                                       ?_printFloat 0120                                            ??_strlen 00A2  
                           ??_pwm_fan_LoadDutyValue 0072                                           ___fladd@a 00B2  
                                         ___fladd@b 00AE                                       _SPI1_ByteRead 0000  
                                         ___fldiv@a 00A0                                           ___fldiv@b 00A4  
                                         ___flmul@a 00CE                                           ___flmul@b 00CA  
                             _PWM_buzzer_Initialize 1B1A                                           ___flsub@a 00C2  
                                         ___flsub@b 00C6                                           ___latbits 0002  
                                     __pcstackBANK0 0020                                       __pcstackBANK1 00A0  
                                     __pcstackBANK2 0120                             __end_of_SPI1_Initialize 1AE4  
                                 i1_getHoogtesensor 1A5C                                     i1___xxtofl@sign 0078  
                                ?i1_getHoogtesensor 0070                                   _sendLedstripFrame 1CC5  
                               __end_of_EUSART_Read 1D5C                              EUSART_Write@tempTxHead 00A1  
                                      _is_on_target 0064                                           __pnvBANK2 0167  
                                         __pnvBANK3 01EC                                  ?_sendLedstripFrame 00A1  
                                  ___lwdiv@dividend 00A2                              _PIN_MANAGER_Initialize 1009  
                               ??i1_getHoogtesensor 0072                                           _dtoa$2167 00C1  
                          _TMR4_PeriodMatchCallback 0169                                EUSART_Read@readValue 00A1  
                                 _ADC_SelectChannel 1B32                            i1__Umul8_16@multiplicand 0070  
                                          ?___fladd 00AE                                            ?___fldiv 00A0  
                                          ?___awdiv 00A0                                            ?___awmod 00A0  
                                          ?___flmul 00CA                                            ?___flsub 00C2  
                                          ?___fltol 00E4                                 ??_sendLedstripFrame 00A4  
                                        ?__Umul8_16 00A0                                            ?___lwdiv 00A0  
                                       ??_SPI1_Open 00A7                                            ?___lwmod 00A0  
                                   ?_ADC_Initialize 0070                                        _eusartRxHead 0069  
                                ?_ADC_SelectChannel 0070                                        _eusartTxHead 006C  
                                      _eusartRxTail 0068                                        _eusartTxTail 006B  
                      ??_INTERRUPT_InterruptManager 007E                                  getLedNumber@height 00EE  
                      EUSART_TransmitISR@tempTxTail 0070                             _eusartTxBufferRemaining 006A  
                                          _BAUD1CON 019F                                  getLedNumber@result 0120  
                            _EUSART_TransmitDisable 0000                                 ??_ADC_SelectChannel 00A0  
                         __end_ofi1_getHoogtesensor 1A62                                         ??i1___fladd 0042  
                                       ??i1___flmul 0028                                         ??i1___fltol 003E  
                                  ___lwdiv@quotient 00A4                                            ?_sprintf 00E2  
                                       _getSetpoint 1A9B                                       ??_setSetpoint 00AF  
                         __end_of_sendLedstripFrame 1CE0                                    _EUSART_IsRxReady 1AD1  
                              _INTERRUPT_Initialize 1B0E                                           _integraal 014B  
                                  _EUSART_IsTxReady 1ABF                                      _eusartRxBuffer 01B0  
                                  _CLOCK_Initialize 1A77                                           _dutycycle 0057  
                          ?_updateLedstripAnimation 0070                                      _eusartTxBuffer 0143  
                                    ___wmul@product 00A4                                           clear_ram0 1A62  
                                          _PIE1bits 0091                   _EUSART_TxCompleteCallbackRegister 0000  
                                          _PIE2bits 0092                                   _eusartRxLastError 015B  
                                     ??_uartHandler 00F0                           __end_of_ADC_SelectChannel 1B3E  
                                          _PIR0bits 0010                                            _PIR1bits 0011  
                                          _PIR2bits 0012                                            _OSCSTAT1 091C  
                                        str2float@i 00EA                                           _str2float 1755  
                                          _SSP1CON1 0215                                            _SSP1CON3 0217  
                                          _TMR2_ISR 1B75                                            _TMR4_ISR 1B84  
                                          _SSP1STAT 0214                                           _printLogs 14E0  
                          ??_sendLedstripStartFrame 00A1                                           _vfpfcnvrt 0ADC  
                  __end_of_PWM_buzzer_LoadDutyValue 1CAC                                          _ADCON0bits 009D  
                                 _SPI1_Deinitialize 0000                                   ___wmul@multiplier 00A0  
                          ADC_SelectChannel@channel 00A1                              ?_PWM_buzzer_Initialize 0070  
                                     readLine@index 0065                                         _EUSART_Read 1D3C  
                                  ?_SPI1_Initialize 0070                               ?_INTERRUPT_Initialize 0070  
                 _EUSART_RxCompleteInterruptHandler 0157                                   ??_TMR2_Initialize 00A0  
                                      ??_controller 004E                                       ??i1__Umul8_16 0072  
                               __end_of_setSetpoint 1009                                      str2float@digit 00EF  
                                _initAdcMultiplexer 1B4B                                          vfprintf@ap 00DD  
                                        vfprintf@fp 00D9                            ?_ADC_GetConversionResult 0070  
                                        ?_str2float 00E4                          i1ADC_SelectChannel@channel 0071  
                                 ??_getHoogtesensor 00A2                                         ??__Umul8_16 00A2  
                                        ?_printLogs 0070                                 __end_of_uartHandler 08BD  
                        __end_of_EUSART_TransmitISR 1CFC                                 ?_initAdcMultiplexer 0070  
                                        ?_vfpfcnvrt 00C9                                          sprintf@fmt 00E3  
                                          ___xxtofl 16B0                                  __end_of_controller 09C5  
                                     _getPomphoogte 1AB6                                     ___lwdiv@divisor 00A0  
                                _EUSART_AutoBaudSet 0000                                     ___lwdiv@counter 00A6  
                                          __ptext10 13E1                                            __ptext11 1DE9  
                                          __ptext20 07C5                                            __ptext12 1AC8  
                                          __ptext21 115F                                            __ptext13 14E0  
                                          __ptext30 1C06                                            __ptext22 070C  
                                          __ptext14 145A                                            __ptext31 1F59  
                                          __ptext23 1FAB                                            __ptext15 1C18  
                                          __ptext40 12F8                                            __ptext32 1103  
                                          __ptext24 1C7E                                            __ptext16 1E37  
                                          __ptext41 1CFC                                            __ptext33 1D1C  
                                          __ptext25 1DC5                                            __ptext17 0ADC  
                                          __ptext50 1CAC                                            __ptext42 1B4B  
                                          __ptext34 1AB6                                            __ptext26 11BC  
                                          __ptext18 1368                                            __ptext51 1B3E  
                                          __ptext43 1B32                                            __ptext35 1BE4  
                                          __ptext27 1BF5                                            __ptext19 1E62  
                                          __ptext60 1A89                                            __ptext52 1A9B  
                                          __ptext44 1C2A                                            __ptext36 1BD3  
                                          __ptext28 1E0F                                            __ptext61 1D5C  
                                          __ptext53 10A8                                            __ptext45 1A4D  
                                          __ptext37 1AAD                                            __ptext29 1ABF  
                                          __ptext70 1A80                                            __ptext62 1B26  
                                          __ptext54 16B0                                            __ptext46 1A52  
                                          __ptext38 1B58                                            __ptext71 1E95  
                                          __ptext63 0800                                            __ptext55 1289  
                                          __ptext47 09C5                                            __ptext39 1AA4  
                                          __ptext80 1A4C                                            __ptext72 1BA2  
                                          __ptext64 1BC2                                            __ptext56 008A  
                                          __ptext48 1C53                                            __ptext81 08BD  
                                          __ptext73 1B93                                            __ptext65 1BB1  
                                          __ptext57 1DA1                                            __ptext49 1CC5  
                                          __ptext90 1A4B                                            __ptext82 1A5C  
                                          __ptext74 1A77                                            __ptext66 1ADA  
                                          __ptext58 0500                                            __ptext91 1CE0  
                                          __ptext83 160C                                            __ptext75 1C68  
                                          __ptext67 1B1A                                            __ptext59 1A92  
                                          __ptext92 1F07                                            __ptext84 121A  
                                          __ptext76 1A6E                                            __ptext68 1009  
                                          __ptext93 1A4E                                            __ptext85 02C5  
                                          __ptext77 1C94                                            __ptext69 1B0E  
                                          __ptext94 1A4A                                            __ptext86 1D7E  
                                          __ptext95 1B66                                            __ptext87 0DF4  
                                          __ptext79 1B84                                            __ptext96 1A49  
                                          __ptext88 1C3E                                            __ptext97 1ECB  
                                          __ptext89 1B75                                            __ptext98 1B02  
                                          __ptext99 1A56                                        _SSP1CON1bits 0215  
                              ??_initAdcMultiplexer 00A2                               _EUSART_TransmitEnable 0000  
                                          _ledstrip 1830                                            _readLine 104F  
                                 ??_TMR4_Initialize 00A0                          ??_adcConversionDoneHandler 0072  
                                        _RC1STAbits 019D                                            _setpoint 0165  
                                          _printOut 1AC8                                            int$flags 007E  
                               __end_ofi1__Umul8_16 1DA1                                            _vfprintf 1E37  
                __end_of_INTERRUPT_InterruptManager 0058                          _INTERRUPT_InterruptManager 0004  
       __end_of_EUSART_FramingErrorCallbackRegister 1BA2               ??_EUSART_FramingErrorCallbackRegister 00A2  
              ?_EUSART_FramingErrorCallbackRegister 00A0                 _EUSART_FramingErrorCallbackRegister 1B93  
                                         printf@fmt 00E2                                       ?_getLedNumber 00EE  
                                      ??_printFloat 00EE                      pwm_fan_LoadDutyValue@dutyValue 0070  
                                    _ADC_pomphoogte 0059                                      ?_getPomphoogte 00A0  
                                        _INTCONbits 000B                       __end_of_pwm_fan_LoadDutyValue 1C53  
                          _PWM_buzzer_LoadDutyValue 1C94                                _INT_InterruptHandler 0061  
                                    __pstringtext10 18BD                                      __pstringtext11 18CB  
                                    __pstringtext12 18D8                                      __pstringtext13 18E5  
                                    __pstringtext14 18F0                                      __pstringtext15 1905  
                                    __pstringtext16 190D                                      __pstringtext17 1914  
                                    __pstringtext18 0000                              ??_INTERRUPT_Initialize 00A2  
                          position_led_strip@led_on 012A                            ?_ADC_SetInterruptHandler 00A0  
                          position_led_strip@target 0127                                         _setSetpoint 1000  
                                          intlevel1 0000                                           sprintf@ap 0120  
                            i1__Umul8_16@multiplier 0078                                    ___lwmod@dividend 00A2  
                         _EUSART_TxInterruptHandler 01EE                             ?_PIN_MANAGER_Initialize 0070  
                                     ?_getDutycycle 00A0                                   ??_TMR6_Initialize 00A0  
                         SPI1_ByteExchange@byteData 00A0          __end_of_EUSART_DefaultFramingErrorCallback 1A4B  
              ??_EUSART_DefaultFramingErrorCallback 0070                 ?_EUSART_DefaultFramingErrorCallback 0070  
                _EUSART_DefaultFramingErrorCallback 1A4A                     __end_of_ADC_GetConversionResult 1A5C  
                                __end_of_printFloat 14E0                                    ??_ADC_Initialize 00A2  
                                       _uartHandler 080F                                         ??_str2float 00E8  
                                     _mustPrintLogs 006D                                            printf@ap 00E8  
                                  _SPI1_BufferWrite 0000                                         ??_printLogs 00F0  
                          ?_INT_SetInterruptHandler 00A0                            __end_of_EUSART_IsRxReady 1ADA  
                                    ??_getLedNumber 00F0                                         ??_vfpfcnvrt 00CE  
                          __end_of_EUSART_IsTxReady 1AC8                                        str2float@str 00E4  
                          __end_of_CLOCK_Initialize 1A80                                       __pstringtext1 1800  
                                     __pstringtext2 1830                                       __pstringtext3 18FB  
                                     __pstringtext4 184C                                       __pstringtext5 1865  
                                     __pstringtext6 187D                                       __pstringtext7 188E  
                                     __pstringtext8 189F                                       __pstringtext9 18AE  
                                        _SPI1_Close 0000                              __Umul8_16@multiplicand 00A0  
                                          sprintf@f 0121                                            sprintf@s 00E2  
                                        _SSP1DATPPS 0E21                                          _SSP1CLKPPS 0E20  
                                   ___lwmod@divisor 00A0                                     ___lwmod@counter 00A4  
                                        _TX1STAbits 019E                                        ?_getSetpoint 00A0  
                            sendLedstripFrame@green 00A1                                       ___fladd@signs 00BE  
                                   controller@error 0053                                          _TMR6_Tasks 1C2A  
                                EUSART_Write@txData 00A0                              _sendLedstripStartFrame 1C53  
                    __end_of_PIN_MANAGER_Initialize 104F                                      ??_getDutycycle 00A2  
                                       _PWMTMRSbits 061F                                        ___fladd@aexp 00BF  
                                      ___fladd@bexp 00C0                               sendLedstripFrame@blue 00A2  
                              __Umul8_16@multiplier 00A8                             SPI1_Open@spiConfigIndex 00A6  
                              sendLedstripFrame@red 00A4                                         i1__Umul8_16 1D7E  
                          _TMR2_PeriodMatchCallback 016B                          __end_of_spi1_configuration 1905  
                                 __Umul8_16@product 00A4  
