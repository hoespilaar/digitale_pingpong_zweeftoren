

Microchip MPLAB XC8 Assembler V3.00 build 20241204225717 
                                                                                               Wed Mar 12 11:49:11 2025

Microchip MPLAB XC8 C Compiler v3.00 (Free license) build 20241204225717 Og1 
     1                           	processor	16F18345
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	idataBANK0,global,class=CODE,space=0,delta=2,noexec
     5                           	psect	idataBANK1,global,class=CODE,space=0,delta=2,noexec
     6                           	psect	idataBANK2,global,class=CODE,space=0,delta=2,noexec
     7                           	psect	stringtext1,global,class=STRCODE,space=0,delta=2,noexec
     8                           	psect	stringtext2,global,class=STRCODE,space=0,delta=2,noexec
     9                           	psect	stringtext3,global,class=STRCODE,space=0,delta=2,noexec
    10                           	psect	nvBANK2,global,class=BANK2,space=1,delta=1,noexec
    11                           	psect	stringtext4,global,class=STRCODE,space=0,delta=2,noexec
    12                           	psect	stringtext5,global,class=STRCODE,space=0,delta=2,noexec
    13                           	psect	stringtext6,global,class=STRCODE,space=0,delta=2,noexec
    14                           	psect	stringtext7,global,class=STRCODE,space=0,delta=2,noexec
    15                           	psect	stringtext8,global,class=STRCODE,space=0,delta=2,noexec
    16                           	psect	stringtext9,global,class=STRCODE,space=0,delta=2,noexec
    17                           	psect	stringtext10,global,class=STRCODE,space=0,delta=2,noexec
    18                           	psect	stringtext11,global,class=STRCODE,space=0,delta=2,noexec
    19                           	psect	stringtext12,global,class=STRCODE,space=0,delta=2,noexec
    20                           	psect	stringtext13,global,class=STRCODE,space=0,delta=2,noexec
    21                           	psect	cinit,global,class=CODE,space=0,merge=1,delta=2
    22                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,noexec
    23                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,noexec
    24                           	psect	dataBANK1,global,class=BANK1,space=1,delta=1,noexec
    25                           	psect	bssBANK2,global,class=BANK2,space=1,delta=1,noexec
    26                           	psect	dataBANK2,global,class=BANK2,space=1,delta=1,noexec
    27                           	psect	bssBANK3,global,class=BANK3,space=1,delta=1,noexec
    28                           	psect	inittext,global,class=CODE,space=0,delta=2
    29                           	psect	clrtext,global,class=CODE,space=0,delta=2
    30                           	psect	cstackBANK4,global,class=BANK4,space=1,delta=1,noexec
    31                           	psect	cstackBANK2,global,class=BANK2,space=1,delta=1,noexec
    32                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1,noexec
    33                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
    34                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    35                           	psect	maintext,global,class=CODE,space=0,merge=1,split=1,delta=2
    36                           	psect	text1,local,class=CODE,space=0,merge=1,delta=2
    37                           	psect	text2,local,class=CODE,space=0,merge=1,delta=2
    38                           	psect	text3,local,class=CODE,space=0,merge=1,delta=2,group=2
    39                           	psect	text4,local,class=CODE,space=0,merge=1,delta=2,group=2
    40                           	psect	text5,local,class=CODE,space=0,merge=1,delta=2,group=2
    41                           	psect	text6,local,class=CODE,space=0,merge=1,delta=2,group=2
    42                           	psect	text7,local,class=CODE,space=0,merge=1,delta=2,group=2
    43                           	psect	text8,local,class=CODE,space=0,merge=1,delta=2
    44                           	psect	text9,local,class=CODE,space=0,merge=1,delta=2
    45                           	psect	text10,local,class=CODE,space=0,merge=1,delta=2
    46                           	psect	text11,local,class=CODE,space=0,merge=1,delta=2
    47                           	psect	text12,local,class=CODE,space=0,merge=1,delta=2
    48                           	psect	text13,local,class=CODE,space=0,merge=1,delta=2
    49                           	psect	text14,local,class=CODE,space=0,merge=1,delta=2,group=3
    50                           	psect	text15,local,class=CODE,space=0,merge=1,delta=2,group=3
    51                           	psect	text16,local,class=CODE,space=0,merge=1,delta=2
    52                           	psect	text17,local,class=CODE,space=0,merge=1,delta=2
    53                           	psect	text18,local,class=CODE,space=0,merge=1,delta=2,group=3
    54                           	psect	text19,local,class=CODE,space=0,merge=1,delta=2,group=1
    55                           	psect	text20,local,class=CODE,space=0,merge=1,delta=2,group=1
    56                           	psect	text21,local,class=CODE,space=0,merge=1,delta=2,group=1
    57                           	psect	text22,local,class=CODE,space=0,merge=1,delta=2,group=2
    58                           	psect	text23,local,class=CODE,space=0,merge=1,delta=2,group=1
    59                           	psect	text24,local,class=CODE,space=0,merge=1,delta=2,group=1
    60                           	psect	text25,local,class=CODE,space=0,merge=1,delta=2,group=1
    61                           	psect	text26,local,class=CODE,space=0,merge=1,delta=2,group=3
    62                           	psect	text27,local,class=CODE,space=0,merge=1,delta=2,group=3
    63                           	psect	text28,local,class=CODE,space=0,merge=1,delta=2,group=3
    64                           	psect	text29,local,class=CODE,space=0,merge=1,delta=2
    65                           	psect	text30,local,class=CODE,space=0,merge=1,delta=2
    66                           	psect	text31,local,class=CODE,space=0,merge=1,delta=2
    67                           	psect	text32,local,class=CODE,space=0,merge=1,delta=2,group=3
    68                           	psect	text33,local,class=CODE,space=0,merge=1,delta=2,group=2
    69                           	psect	text34,local,class=CODE,space=0,merge=1,delta=2,group=2
    70                           	psect	text35,local,class=CODE,space=0,merge=1,delta=2
    71                           	psect	text36,local,class=CODE,space=0,merge=1,delta=2
    72                           	psect	text37,local,class=CODE,space=0,merge=1,delta=2
    73                           	psect	text38,local,class=CODE,space=0,merge=1,delta=2
    74                           	psect	text39,local,class=CODE,space=0,merge=1,delta=2
    75                           	psect	text40,local,class=CODE,space=0,merge=1,delta=2
    76                           	psect	text41,local,class=CODE,space=0,merge=1,delta=2
    77                           	psect	text42,local,class=CODE,space=0,merge=1,delta=2
    78                           	psect	text43,local,class=CODE,space=0,merge=1,delta=2
    79                           	psect	text44,local,class=CODE,space=0,merge=1,delta=2
    80                           	psect	text45,local,class=CODE,space=0,merge=1,delta=2
    81                           	psect	text46,local,class=CODE,space=0,merge=1,delta=2
    82                           	psect	text47,local,class=CODE,space=0,merge=1,delta=2
    83                           	psect	text48,local,class=CODE,space=0,merge=1,delta=2
    84                           	psect	text49,local,class=CODE,space=0,merge=1,delta=2
    85                           	psect	text50,local,class=CODE,space=0,merge=1,delta=2,group=2
    86                           	psect	text51,local,class=CODE,space=0,merge=1,delta=2,group=2
    87                           	psect	text52,local,class=CODE,space=0,merge=1,delta=2
    88                           	psect	text53,local,class=CODE,space=0,merge=1,delta=2
    89                           	psect	text54,local,class=CODE,space=0,merge=1,delta=2
    90                           	psect	text55,local,class=CODE,space=0,merge=1,delta=2
    91                           	psect	text56,local,class=CODE,space=0,merge=1,delta=2
    92                           	psect	text57,local,class=CODE,space=0,merge=1,delta=2
    93                           	psect	text58,local,class=CODE,space=0,merge=1,delta=2
    94                           	psect	text59,local,class=CODE,space=0,merge=1,delta=2
    95                           	psect	text60,local,class=CODE,space=0,merge=1,delta=2
    96                           	psect	text61,local,class=CODE,space=0,merge=1,delta=2
    97                           	psect	text62,local,class=CODE,space=0,merge=1,delta=2
    98                           	psect	text63,local,class=CODE,space=0,merge=1,delta=2
    99                           	psect	text64,local,class=CODE,space=0,merge=1,delta=2
   100                           	psect	text65,local,class=CODE,space=0,merge=1,delta=2
   101                           	psect	text66,local,class=CODE,space=0,merge=1,delta=2
   102                           	psect	text67,local,class=CODE,space=0,merge=1,delta=2
   103                           	psect	text68,local,class=CODE,space=0,merge=1,delta=2
   104                           	psect	text69,local,class=CODE,space=0,merge=1,delta=2
   105                           	psect	intentry,global,class=CODE,space=0,delta=2
   106                           	psect	text71,local,class=CODE,space=0,merge=1,delta=2
   107                           	psect	text72,local,class=CODE,space=0,merge=1,delta=2
   108                           	psect	text73,local,class=CODE,space=0,merge=1,delta=2
   109                           	psect	text74,local,class=CODE,space=0,merge=1,delta=2
   110                           	psect	text75,local,class=CODE,space=0,merge=1,delta=2
   111                           	psect	text76,local,class=CODE,space=0,merge=1,delta=2
   112                           	psect	text77,local,class=CODE,space=0,merge=1,delta=2
   113                           	psect	text78,local,class=CODE,space=0,merge=1,delta=2
   114                           	psect	text79,local,class=CODE,space=0,merge=1,delta=2
   115                           	psect	text80,local,class=CODE,space=0,merge=1,delta=2,group=2
   116                           	psect	text81,local,class=CODE,space=0,merge=1,delta=2
   117                           	psect	text82,local,class=CODE,space=0,merge=1,delta=2
   118                           	psect	text83,local,class=CODE,space=0,merge=1,delta=2
   119                           	psect	text84,local,class=CODE,space=0,merge=1,delta=2
   120                           	psect	text85,local,class=CODE,space=0,merge=1,delta=2
   121                           	psect	text86,local,class=CODE,space=0,merge=1,delta=2
   122                           	psect	text87,local,class=CODE,space=0,merge=1,delta=2
   123                           	psect	text88,local,class=CODE,space=0,merge=1,delta=2
   124                           	psect	text89,local,class=CODE,space=0,merge=1,delta=2
   125                           	psect	text90,local,class=CODE,space=0,merge=1,delta=2
   126                           	psect	text91,local,class=CODE,space=0,merge=1,delta=2
   127                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
   128                           	dabs	1,0x7E,2
   129     0000                     
   130                           ; Generated 11/01/2024 GMT
   131                           ; 
   132                           ; Copyright © 2024, Microchip Technology Inc. and its subsidiaries ("Microchip")
   133                           ; All rights reserved.
   134                           ; 
   135                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
   136                           ; 
   137                           ; Redistribution and use in source and binary forms, with or without modification, are
   138                           ; permitted provided that the following conditions are met:
   139                           ; 
   140                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
   141                           ;        conditions and the following disclaimer.
   142                           ; 
   143                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
   144                           ;        of conditions and the following disclaimer in the documentation and/or other
   145                           ;        materials provided with the distribution. Publication is not required when
   146                           ;        this file is used in an embedded application.
   147                           ; 
   148                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
   149                           ;        software without specific prior written permission.
   150                           ; 
   151                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
   152                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
   153                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
   154                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
   155                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
   156                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
   157                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
   158                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
   159                           ; 
   160                           ; 
   161                           ; Code-generator required, PIC16F18345 Definitions
   162                           ; 
   163                           ; SFR Addresses
   164     0008                     bsr             equ	8
   165     0005                     fsr0h           equ	5
   166     0004                     fsr0l           equ	4
   167     0007                     fsr1h           equ	7
   168     0006                     fsr1l           equ	6
   169     0000                     indf            equ	0
   170     0000                     indf0           equ	0
   171     0001                     indf1           equ	1
   172     000B                     intcon          equ	11
   173     0002                     pc              equ	2
   174     0002                     pcl             equ	2
   175     000A                     pclath          equ	10
   176     0003                     status          equ	3
   177     0009                     wreg            equ	9
   178     0000                     INDF0           equ	0	;# 
   179     0001                     INDF1           equ	1	;# 
   180     0002                     PCL             equ	2	;# 
   181     0003                     STATUS          equ	3	;# 
   182     0004                     FSR0L           equ	4	;# 
   183     0005                     FSR0H           equ	5	;# 
   184     0006                     FSR1L           equ	6	;# 
   185     0007                     FSR1H           equ	7	;# 
   186     0008                     BSR             equ	8	;# 
   187     0009                     WREG            equ	9	;# 
   188     000A                     PCLATH          equ	10	;# 
   189     000B                     INTCON          equ	11	;# 
   190     000C                     PORTA           equ	12	;# 
   191     000D                     PORTB           equ	13	;# 
   192     000E                     PORTC           equ	14	;# 
   193     0010                     PIR0            equ	16	;# 
   194     0011                     PIR1            equ	17	;# 
   195     0012                     PIR2            equ	18	;# 
   196     0013                     PIR3            equ	19	;# 
   197     0014                     PIR4            equ	20	;# 
   198     0015                     TMR0L           equ	21	;# 
   199     0015                     TMR0            equ	21	;# 
   200     0016                     TMR0H           equ	22	;# 
   201     0016                     PR0             equ	22	;# 
   202     0017                     T0CON0          equ	23	;# 
   203     0018                     T0CON1          equ	24	;# 
   204     0019                     TMR1            equ	25	;# 
   205     0019                     TMR1L           equ	25	;# 
   206     001A                     TMR1H           equ	26	;# 
   207     001B                     T1CON           equ	27	;# 
   208     001C                     T1GCON          equ	28	;# 
   209     001D                     TMR2            equ	29	;# 
   210     001E                     PR2             equ	30	;# 
   211     001F                     T2CON           equ	31	;# 
   212     008C                     TRISA           equ	140	;# 
   213     008D                     TRISB           equ	141	;# 
   214     008E                     TRISC           equ	142	;# 
   215     0090                     PIE0            equ	144	;# 
   216     0091                     PIE1            equ	145	;# 
   217     0092                     PIE2            equ	146	;# 
   218     0093                     PIE3            equ	147	;# 
   219     0094                     PIE4            equ	148	;# 
   220     0097                     WDTCON          equ	151	;# 
   221     009B                     ADRES           equ	155	;# 
   222     009B                     ADRESL          equ	155	;# 
   223     009C                     ADRESH          equ	156	;# 
   224     009D                     ADCON0          equ	157	;# 
   225     009E                     ADCON1          equ	158	;# 
   226     009F                     ADACT           equ	159	;# 
   227     010C                     LATA            equ	268	;# 
   228     010D                     LATB            equ	269	;# 
   229     010E                     LATC            equ	270	;# 
   230     0111                     CM1CON0         equ	273	;# 
   231     0112                     CM1CON1         equ	274	;# 
   232     0113                     CM2CON0         equ	275	;# 
   233     0114                     CM2CON1         equ	276	;# 
   234     0115                     CMOUT           equ	277	;# 
   235     0116                     BORCON          equ	278	;# 
   236     0117                     FVRCON          equ	279	;# 
   237     0118                     DACCON0         equ	280	;# 
   238     0119                     DACCON1         equ	281	;# 
   239     018C                     ANSELA          equ	396	;# 
   240     018D                     ANSELB          equ	397	;# 
   241     018E                     ANSELC          equ	398	;# 
   242     0197                     VREGCON         equ	407	;# 
   243     0199                     RC1REG          equ	409	;# 
   244     0199                     RCREG           equ	409	;# 
   245     0199                     RCREG1          equ	409	;# 
   246     019A                     TX1REG          equ	410	;# 
   247     019A                     TXREG1          equ	410	;# 
   248     019A                     TXREG           equ	410	;# 
   249     019B                     SP1BRG          equ	411	;# 
   250     019B                     SPBRG           equ	411	;# 
   251     019B                     SP1BRGL         equ	411	;# 
   252     019B                     SPBRG1          equ	411	;# 
   253     019B                     SPBRGL          equ	411	;# 
   254     019C                     SP1BRGH         equ	412	;# 
   255     019C                     SPBRGH          equ	412	;# 
   256     019C                     SPBRGH1         equ	412	;# 
   257     019D                     RC1STA          equ	413	;# 
   258     019D                     RCSTA1          equ	413	;# 
   259     019D                     RCSTA           equ	413	;# 
   260     019E                     TX1STA          equ	414	;# 
   261     019E                     TXSTA1          equ	414	;# 
   262     019E                     TXSTA           equ	414	;# 
   263     019F                     BAUD1CON        equ	415	;# 
   264     019F                     BAUDCON1        equ	415	;# 
   265     019F                     BAUDCTL1        equ	415	;# 
   266     019F                     BAUDCON         equ	415	;# 
   267     019F                     BAUDCTL         equ	415	;# 
   268     020C                     WPUA            equ	524	;# 
   269     020D                     WPUB            equ	525	;# 
   270     020E                     WPUC            equ	526	;# 
   271     0211                     SSP1BUF         equ	529	;# 
   272     0211                     SSPBUF          equ	529	;# 
   273     0212                     SSP1ADD         equ	530	;# 
   274     0212                     SSPADD          equ	530	;# 
   275     0213                     SSP1MSK         equ	531	;# 
   276     0213                     SSPMSK          equ	531	;# 
   277     0214                     SSP1STAT        equ	532	;# 
   278     0214                     SSPSTAT         equ	532	;# 
   279     0215                     SSP1CON1        equ	533	;# 
   280     0215                     SSPCON          equ	533	;# 
   281     0215                     SSPCON1         equ	533	;# 
   282     0215                     SSP1CON         equ	533	;# 
   283     0216                     SSP1CON2        equ	534	;# 
   284     0216                     SSPCON2         equ	534	;# 
   285     0217                     SSP1CON3        equ	535	;# 
   286     0217                     SSPCON3         equ	535	;# 
   287     0219                     SSP2BUF         equ	537	;# 
   288     021A                     SSP2ADD         equ	538	;# 
   289     021B                     SSP2MSK         equ	539	;# 
   290     021C                     SSP2STAT        equ	540	;# 
   291     021D                     SSP2CON1        equ	541	;# 
   292     021D                     SSP2CON         equ	541	;# 
   293     021E                     SSP2CON2        equ	542	;# 
   294     021F                     SSP2CON3        equ	543	;# 
   295     028C                     ODCONA          equ	652	;# 
   296     028D                     ODCONB          equ	653	;# 
   297     028E                     ODCONC          equ	654	;# 
   298     0291                     CCPR1           equ	657	;# 
   299     0291                     CCPR1L          equ	657	;# 
   300     0292                     CCPR1H          equ	658	;# 
   301     0293                     CCP1CON         equ	659	;# 
   302     0294                     CCP1CAP         equ	660	;# 
   303     0295                     CCPR2           equ	661	;# 
   304     0295                     CCPR2L          equ	661	;# 
   305     0296                     CCPR2H          equ	662	;# 
   306     0297                     CCP2CON         equ	663	;# 
   307     0298                     CCP2CAP         equ	664	;# 
   308     029F                     CCPTMRS         equ	671	;# 
   309     030C                     SLRCONA         equ	780	;# 
   310     030D                     SLRCONB         equ	781	;# 
   311     030E                     SLRCONC         equ	782	;# 
   312     0311                     CCPR3           equ	785	;# 
   313     0311                     CCPR3L          equ	785	;# 
   314     0312                     CCPR3H          equ	786	;# 
   315     0313                     CCP3CON         equ	787	;# 
   316     0314                     CCP3CAP         equ	788	;# 
   317     0315                     CCPR4           equ	789	;# 
   318     0315                     CCPR4L          equ	789	;# 
   319     0316                     CCPR4H          equ	790	;# 
   320     0317                     CCP4CON         equ	791	;# 
   321     0318                     CCP4CAP         equ	792	;# 
   322     038C                     INLVLA          equ	908	;# 
   323     038D                     INLVLB          equ	909	;# 
   324     038E                     INLVLC          equ	910	;# 
   325     0391                     IOCAP           equ	913	;# 
   326     0392                     IOCAN           equ	914	;# 
   327     0393                     IOCAF           equ	915	;# 
   328     0394                     IOCBP           equ	916	;# 
   329     0395                     IOCBN           equ	917	;# 
   330     0396                     IOCBF           equ	918	;# 
   331     0397                     IOCCP           equ	919	;# 
   332     0398                     IOCCN           equ	920	;# 
   333     0399                     IOCCF           equ	921	;# 
   334     039A                     CLKRCON         equ	922	;# 
   335     039C                     MDCON           equ	924	;# 
   336     039D                     MDSRC           equ	925	;# 
   337     039E                     MDCARH          equ	926	;# 
   338     039F                     MDCARL          equ	927	;# 
   339     0411                     TMR3            equ	1041	;# 
   340     0411                     TMR3L           equ	1041	;# 
   341     0412                     TMR3H           equ	1042	;# 
   342     0413                     T3CON           equ	1043	;# 
   343     0414                     T3GCON          equ	1044	;# 
   344     0415                     TMR4            equ	1045	;# 
   345     0416                     PR4             equ	1046	;# 
   346     0417                     T4CON           equ	1047	;# 
   347     0418                     TMR5            equ	1048	;# 
   348     0418                     TMR5L           equ	1048	;# 
   349     0419                     TMR5H           equ	1049	;# 
   350     041A                     T5CON           equ	1050	;# 
   351     041B                     T5GCON          equ	1051	;# 
   352     041C                     TMR6            equ	1052	;# 
   353     041D                     PR6             equ	1053	;# 
   354     041E                     T6CON           equ	1054	;# 
   355     041F                     CCDCON          equ	1055	;# 
   356     0498                     NCO1ACC         equ	1176	;# 
   357     0498                     NCO1ACCL        equ	1176	;# 
   358     0499                     NCO1ACCH        equ	1177	;# 
   359     049A                     NCO1ACCU        equ	1178	;# 
   360     049B                     NCO1INC         equ	1179	;# 
   361     049B                     NCO1INCL        equ	1179	;# 
   362     049C                     NCO1INCH        equ	1180	;# 
   363     049D                     NCO1INCU        equ	1181	;# 
   364     049E                     NCO1CON         equ	1182	;# 
   365     049F                     NCO1CLK         equ	1183	;# 
   366     0617                     PWM5DCL         equ	1559	;# 
   367     0618                     PWM5DCH         equ	1560	;# 
   368     0619                     PWM5CON         equ	1561	;# 
   369     0619                     PWM5CON0        equ	1561	;# 
   370     061A                     PWM6DCL         equ	1562	;# 
   371     061B                     PWM6DCH         equ	1563	;# 
   372     061C                     PWM6CON         equ	1564	;# 
   373     061C                     PWM6CON0        equ	1564	;# 
   374     061F                     PWMTMRS         equ	1567	;# 
   375     0691                     CWG1CLKCON      equ	1681	;# 
   376     0692                     CWG1DAT         equ	1682	;# 
   377     0693                     CWG1DBR         equ	1683	;# 
   378     0694                     CWG1DBF         equ	1684	;# 
   379     0695                     CWG1CON0        equ	1685	;# 
   380     0696                     CWG1CON1        equ	1686	;# 
   381     0697                     CWG1AS0         equ	1687	;# 
   382     0698                     CWG1AS1         equ	1688	;# 
   383     0699                     CWG1STR         equ	1689	;# 
   384     0711                     CWG2CLKCON      equ	1809	;# 
   385     0712                     CWG2DAT         equ	1810	;# 
   386     0713                     CWG2DBR         equ	1811	;# 
   387     0714                     CWG2DBF         equ	1812	;# 
   388     0715                     CWG2CON0        equ	1813	;# 
   389     0716                     CWG2CON1        equ	1814	;# 
   390     0717                     CWG2AS0         equ	1815	;# 
   391     0718                     CWG2AS1         equ	1816	;# 
   392     0719                     CWG2STR         equ	1817	;# 
   393     0891                     NVMADR          equ	2193	;# 
   394     0891                     EEADR           equ	2193	;# 
   395     0891                     PMADR           equ	2193	;# 
   396     0891                     NVMADRL         equ	2193	;# 
   397     0891                     EEADRL          equ	2193	;# 
   398     0891                     PMADRL          equ	2193	;# 
   399     0892                     NVMADRH         equ	2194	;# 
   400     0892                     EEADRH          equ	2194	;# 
   401     0892                     PMADRH          equ	2194	;# 
   402     0893                     NVMDAT          equ	2195	;# 
   403     0893                     EEDAT           equ	2195	;# 
   404     0893                     PMDAT           equ	2195	;# 
   405     0893                     NVMDATL         equ	2195	;# 
   406     0893                     EEDATL          equ	2195	;# 
   407     0893                     PMDATL          equ	2195	;# 
   408     0894                     NVMDATH         equ	2196	;# 
   409     0894                     EEDATH          equ	2196	;# 
   410     0894                     PMDATH          equ	2196	;# 
   411     0895                     NVMCON1         equ	2197	;# 
   412     0895                     EECON1          equ	2197	;# 
   413     0895                     PMCON1          equ	2197	;# 
   414     0896                     NVMCON2         equ	2198	;# 
   415     0896                     EECON2          equ	2198	;# 
   416     0896                     PMCON2          equ	2198	;# 
   417     089B                     PCON0           equ	2203	;# 
   418     0911                     PMD0            equ	2321	;# 
   419     0912                     PMD1            equ	2322	;# 
   420     0913                     PMD2            equ	2323	;# 
   421     0914                     PMD3            equ	2324	;# 
   422     0915                     PMD4            equ	2325	;# 
   423     0916                     PMD5            equ	2326	;# 
   424     0918                     CPUDOZE         equ	2328	;# 
   425     0919                     OSCCON1         equ	2329	;# 
   426     091A                     OSCCON2         equ	2330	;# 
   427     091B                     OSCCON3         equ	2331	;# 
   428     091C                     OSCSTAT1        equ	2332	;# 
   429     091D                     OSCEN           equ	2333	;# 
   430     091E                     OSCTUNE         equ	2334	;# 
   431     091F                     OSCFRQ          equ	2335	;# 
   432     0E0F                     PPSLOCK         equ	3599	;# 
   433     0E10                     INTPPS          equ	3600	;# 
   434     0E11                     T0CKIPPS        equ	3601	;# 
   435     0E12                     T1CKIPPS        equ	3602	;# 
   436     0E13                     T1GPPS          equ	3603	;# 
   437     0E14                     CCP1PPS         equ	3604	;# 
   438     0E15                     CCP2PPS         equ	3605	;# 
   439     0E16                     CCP3PPS         equ	3606	;# 
   440     0E17                     CCP4PPS         equ	3607	;# 
   441     0E18                     CWG1PPS         equ	3608	;# 
   442     0E19                     CWG2PPS         equ	3609	;# 
   443     0E1A                     MDCIN1PPS       equ	3610	;# 
   444     0E1B                     MDCIN2PPS       equ	3611	;# 
   445     0E1C                     MDMINPPS        equ	3612	;# 
   446     0E1D                     SSP2CLKPPS      equ	3613	;# 
   447     0E1E                     SSP2DATPPS      equ	3614	;# 
   448     0E1F                     SSP2SSPPS       equ	3615	;# 
   449     0E20                     SSP1CLKPPS      equ	3616	;# 
   450     0E21                     SSP1DATPPS      equ	3617	;# 
   451     0E22                     SSP1SSPPS       equ	3618	;# 
   452     0E24                     RXPPS           equ	3620	;# 
   453     0E25                     TXPPS           equ	3621	;# 
   454     0E28                     CLCIN0PPS       equ	3624	;# 
   455     0E29                     CLCIN1PPS       equ	3625	;# 
   456     0E2A                     CLCIN2PPS       equ	3626	;# 
   457     0E2B                     CLCIN3PPS       equ	3627	;# 
   458     0E2C                     T3CKIPPS        equ	3628	;# 
   459     0E2D                     T3GPPS          equ	3629	;# 
   460     0E2E                     T5CKIPPS        equ	3630	;# 
   461     0E2F                     T5GPPS          equ	3631	;# 
   462     0E90                     RA0PPS          equ	3728	;# 
   463     0E91                     RA1PPS          equ	3729	;# 
   464     0E92                     RA2PPS          equ	3730	;# 
   465     0E94                     RA4PPS          equ	3732	;# 
   466     0E95                     RA5PPS          equ	3733	;# 
   467     0E9C                     RB4PPS          equ	3740	;# 
   468     0E9D                     RB5PPS          equ	3741	;# 
   469     0E9E                     RB6PPS          equ	3742	;# 
   470     0E9F                     RB7PPS          equ	3743	;# 
   471     0EA0                     RC0PPS          equ	3744	;# 
   472     0EA1                     RC1PPS          equ	3745	;# 
   473     0EA2                     RC2PPS          equ	3746	;# 
   474     0EA3                     RC3PPS          equ	3747	;# 
   475     0EA4                     RC4PPS          equ	3748	;# 
   476     0EA5                     RC5PPS          equ	3749	;# 
   477     0EA6                     RC6PPS          equ	3750	;# 
   478     0EA7                     RC7PPS          equ	3751	;# 
   479     0F0F                     CLCDATA         equ	3855	;# 
   480     0F10                     CLC1CON         equ	3856	;# 
   481     0F11                     CLC1POL         equ	3857	;# 
   482     0F12                     CLC1SEL0        equ	3858	;# 
   483     0F13                     CLC1SEL1        equ	3859	;# 
   484     0F14                     CLC1SEL2        equ	3860	;# 
   485     0F15                     CLC1SEL3        equ	3861	;# 
   486     0F16                     CLC1GLS0        equ	3862	;# 
   487     0F17                     CLC1GLS1        equ	3863	;# 
   488     0F18                     CLC1GLS2        equ	3864	;# 
   489     0F19                     CLC1GLS3        equ	3865	;# 
   490     0F1A                     CLC2CON         equ	3866	;# 
   491     0F1B                     CLC2POL         equ	3867	;# 
   492     0F1C                     CLC2SEL0        equ	3868	;# 
   493     0F1D                     CLC2SEL1        equ	3869	;# 
   494     0F1E                     CLC2SEL2        equ	3870	;# 
   495     0F1F                     CLC2SEL3        equ	3871	;# 
   496     0F20                     CLC2GLS0        equ	3872	;# 
   497     0F21                     CLC2GLS1        equ	3873	;# 
   498     0F22                     CLC2GLS2        equ	3874	;# 
   499     0F23                     CLC2GLS3        equ	3875	;# 
   500     0F24                     CLC3CON         equ	3876	;# 
   501     0F25                     CLC3POL         equ	3877	;# 
   502     0F26                     CLC3SEL0        equ	3878	;# 
   503     0F27                     CLC3SEL1        equ	3879	;# 
   504     0F28                     CLC3SEL2        equ	3880	;# 
   505     0F29                     CLC3SEL3        equ	3881	;# 
   506     0F2A                     CLC3GLS0        equ	3882	;# 
   507     0F2B                     CLC3GLS1        equ	3883	;# 
   508     0F2C                     CLC3GLS2        equ	3884	;# 
   509     0F2D                     CLC3GLS3        equ	3885	;# 
   510     0F2E                     CLC4CON         equ	3886	;# 
   511     0F2F                     CLC4POL         equ	3887	;# 
   512     0F30                     CLC4SEL0        equ	3888	;# 
   513     0F31                     CLC4SEL1        equ	3889	;# 
   514     0F32                     CLC4SEL2        equ	3890	;# 
   515     0F33                     CLC4SEL3        equ	3891	;# 
   516     0F34                     CLC4GLS0        equ	3892	;# 
   517     0F35                     CLC4GLS1        equ	3893	;# 
   518     0F36                     CLC4GLS2        equ	3894	;# 
   519     0F37                     CLC4GLS3        equ	3895	;# 
   520     0FE4                     STATUS_SHAD     equ	4068	;# 
   521     0FE5                     WREG_SHAD       equ	4069	;# 
   522     0FE6                     BSR_SHAD        equ	4070	;# 
   523     0FE7                     PCLATH_SHAD     equ	4071	;# 
   524     0FE8                     FSR0L_SHAD      equ	4072	;# 
   525     0FE9                     FSR0H_SHAD      equ	4073	;# 
   526     0FEA                     FSR1L_SHAD      equ	4074	;# 
   527     0FEB                     FSR1H_SHAD      equ	4075	;# 
   528     0FED                     STKPTR          equ	4077	;# 
   529     0FEE                     TOSL            equ	4078	;# 
   530     0FEF                     TOSH            equ	4079	;# 
   531     0000                     INDF0           equ	0	;# 
   532     0001                     INDF1           equ	1	;# 
   533     0002                     PCL             equ	2	;# 
   534     0003                     STATUS          equ	3	;# 
   535     0004                     FSR0L           equ	4	;# 
   536     0005                     FSR0H           equ	5	;# 
   537     0006                     FSR1L           equ	6	;# 
   538     0007                     FSR1H           equ	7	;# 
   539     0008                     BSR             equ	8	;# 
   540     0009                     WREG            equ	9	;# 
   541     000A                     PCLATH          equ	10	;# 
   542     000B                     INTCON          equ	11	;# 
   543     000C                     PORTA           equ	12	;# 
   544     000D                     PORTB           equ	13	;# 
   545     000E                     PORTC           equ	14	;# 
   546     0010                     PIR0            equ	16	;# 
   547     0011                     PIR1            equ	17	;# 
   548     0012                     PIR2            equ	18	;# 
   549     0013                     PIR3            equ	19	;# 
   550     0014                     PIR4            equ	20	;# 
   551     0015                     TMR0L           equ	21	;# 
   552     0015                     TMR0            equ	21	;# 
   553     0016                     TMR0H           equ	22	;# 
   554     0016                     PR0             equ	22	;# 
   555     0017                     T0CON0          equ	23	;# 
   556     0018                     T0CON1          equ	24	;# 
   557     0019                     TMR1            equ	25	;# 
   558     0019                     TMR1L           equ	25	;# 
   559     001A                     TMR1H           equ	26	;# 
   560     001B                     T1CON           equ	27	;# 
   561     001C                     T1GCON          equ	28	;# 
   562     001D                     TMR2            equ	29	;# 
   563     001E                     PR2             equ	30	;# 
   564     001F                     T2CON           equ	31	;# 
   565     008C                     TRISA           equ	140	;# 
   566     008D                     TRISB           equ	141	;# 
   567     008E                     TRISC           equ	142	;# 
   568     0090                     PIE0            equ	144	;# 
   569     0091                     PIE1            equ	145	;# 
   570     0092                     PIE2            equ	146	;# 
   571     0093                     PIE3            equ	147	;# 
   572     0094                     PIE4            equ	148	;# 
   573     0097                     WDTCON          equ	151	;# 
   574     009B                     ADRES           equ	155	;# 
   575     009B                     ADRESL          equ	155	;# 
   576     009C                     ADRESH          equ	156	;# 
   577     009D                     ADCON0          equ	157	;# 
   578     009E                     ADCON1          equ	158	;# 
   579     009F                     ADACT           equ	159	;# 
   580     010C                     LATA            equ	268	;# 
   581     010D                     LATB            equ	269	;# 
   582     010E                     LATC            equ	270	;# 
   583     0111                     CM1CON0         equ	273	;# 
   584     0112                     CM1CON1         equ	274	;# 
   585     0113                     CM2CON0         equ	275	;# 
   586     0114                     CM2CON1         equ	276	;# 
   587     0115                     CMOUT           equ	277	;# 
   588     0116                     BORCON          equ	278	;# 
   589     0117                     FVRCON          equ	279	;# 
   590     0118                     DACCON0         equ	280	;# 
   591     0119                     DACCON1         equ	281	;# 
   592     018C                     ANSELA          equ	396	;# 
   593     018D                     ANSELB          equ	397	;# 
   594     018E                     ANSELC          equ	398	;# 
   595     0197                     VREGCON         equ	407	;# 
   596     0199                     RC1REG          equ	409	;# 
   597     0199                     RCREG           equ	409	;# 
   598     0199                     RCREG1          equ	409	;# 
   599     019A                     TX1REG          equ	410	;# 
   600     019A                     TXREG1          equ	410	;# 
   601     019A                     TXREG           equ	410	;# 
   602     019B                     SP1BRG          equ	411	;# 
   603     019B                     SPBRG           equ	411	;# 
   604     019B                     SP1BRGL         equ	411	;# 
   605     019B                     SPBRG1          equ	411	;# 
   606     019B                     SPBRGL          equ	411	;# 
   607     019C                     SP1BRGH         equ	412	;# 
   608     019C                     SPBRGH          equ	412	;# 
   609     019C                     SPBRGH1         equ	412	;# 
   610     019D                     RC1STA          equ	413	;# 
   611     019D                     RCSTA1          equ	413	;# 
   612     019D                     RCSTA           equ	413	;# 
   613     019E                     TX1STA          equ	414	;# 
   614     019E                     TXSTA1          equ	414	;# 
   615     019E                     TXSTA           equ	414	;# 
   616     019F                     BAUD1CON        equ	415	;# 
   617     019F                     BAUDCON1        equ	415	;# 
   618     019F                     BAUDCTL1        equ	415	;# 
   619     019F                     BAUDCON         equ	415	;# 
   620     019F                     BAUDCTL         equ	415	;# 
   621     020C                     WPUA            equ	524	;# 
   622     020D                     WPUB            equ	525	;# 
   623     020E                     WPUC            equ	526	;# 
   624     0211                     SSP1BUF         equ	529	;# 
   625     0211                     SSPBUF          equ	529	;# 
   626     0212                     SSP1ADD         equ	530	;# 
   627     0212                     SSPADD          equ	530	;# 
   628     0213                     SSP1MSK         equ	531	;# 
   629     0213                     SSPMSK          equ	531	;# 
   630     0214                     SSP1STAT        equ	532	;# 
   631     0214                     SSPSTAT         equ	532	;# 
   632     0215                     SSP1CON1        equ	533	;# 
   633     0215                     SSPCON          equ	533	;# 
   634     0215                     SSPCON1         equ	533	;# 
   635     0215                     SSP1CON         equ	533	;# 
   636     0216                     SSP1CON2        equ	534	;# 
   637     0216                     SSPCON2         equ	534	;# 
   638     0217                     SSP1CON3        equ	535	;# 
   639     0217                     SSPCON3         equ	535	;# 
   640     0219                     SSP2BUF         equ	537	;# 
   641     021A                     SSP2ADD         equ	538	;# 
   642     021B                     SSP2MSK         equ	539	;# 
   643     021C                     SSP2STAT        equ	540	;# 
   644     021D                     SSP2CON1        equ	541	;# 
   645     021D                     SSP2CON         equ	541	;# 
   646     021E                     SSP2CON2        equ	542	;# 
   647     021F                     SSP2CON3        equ	543	;# 
   648     028C                     ODCONA          equ	652	;# 
   649     028D                     ODCONB          equ	653	;# 
   650     028E                     ODCONC          equ	654	;# 
   651     0291                     CCPR1           equ	657	;# 
   652     0291                     CCPR1L          equ	657	;# 
   653     0292                     CCPR1H          equ	658	;# 
   654     0293                     CCP1CON         equ	659	;# 
   655     0294                     CCP1CAP         equ	660	;# 
   656     0295                     CCPR2           equ	661	;# 
   657     0295                     CCPR2L          equ	661	;# 
   658     0296                     CCPR2H          equ	662	;# 
   659     0297                     CCP2CON         equ	663	;# 
   660     0298                     CCP2CAP         equ	664	;# 
   661     029F                     CCPTMRS         equ	671	;# 
   662     030C                     SLRCONA         equ	780	;# 
   663     030D                     SLRCONB         equ	781	;# 
   664     030E                     SLRCONC         equ	782	;# 
   665     0311                     CCPR3           equ	785	;# 
   666     0311                     CCPR3L          equ	785	;# 
   667     0312                     CCPR3H          equ	786	;# 
   668     0313                     CCP3CON         equ	787	;# 
   669     0314                     CCP3CAP         equ	788	;# 
   670     0315                     CCPR4           equ	789	;# 
   671     0315                     CCPR4L          equ	789	;# 
   672     0316                     CCPR4H          equ	790	;# 
   673     0317                     CCP4CON         equ	791	;# 
   674     0318                     CCP4CAP         equ	792	;# 
   675     038C                     INLVLA          equ	908	;# 
   676     038D                     INLVLB          equ	909	;# 
   677     038E                     INLVLC          equ	910	;# 
   678     0391                     IOCAP           equ	913	;# 
   679     0392                     IOCAN           equ	914	;# 
   680     0393                     IOCAF           equ	915	;# 
   681     0394                     IOCBP           equ	916	;# 
   682     0395                     IOCBN           equ	917	;# 
   683     0396                     IOCBF           equ	918	;# 
   684     0397                     IOCCP           equ	919	;# 
   685     0398                     IOCCN           equ	920	;# 
   686     0399                     IOCCF           equ	921	;# 
   687     039A                     CLKRCON         equ	922	;# 
   688     039C                     MDCON           equ	924	;# 
   689     039D                     MDSRC           equ	925	;# 
   690     039E                     MDCARH          equ	926	;# 
   691     039F                     MDCARL          equ	927	;# 
   692     0411                     TMR3            equ	1041	;# 
   693     0411                     TMR3L           equ	1041	;# 
   694     0412                     TMR3H           equ	1042	;# 
   695     0413                     T3CON           equ	1043	;# 
   696     0414                     T3GCON          equ	1044	;# 
   697     0415                     TMR4            equ	1045	;# 
   698     0416                     PR4             equ	1046	;# 
   699     0417                     T4CON           equ	1047	;# 
   700     0418                     TMR5            equ	1048	;# 
   701     0418                     TMR5L           equ	1048	;# 
   702     0419                     TMR5H           equ	1049	;# 
   703     041A                     T5CON           equ	1050	;# 
   704     041B                     T5GCON          equ	1051	;# 
   705     041C                     TMR6            equ	1052	;# 
   706     041D                     PR6             equ	1053	;# 
   707     041E                     T6CON           equ	1054	;# 
   708     041F                     CCDCON          equ	1055	;# 
   709     0498                     NCO1ACC         equ	1176	;# 
   710     0498                     NCO1ACCL        equ	1176	;# 
   711     0499                     NCO1ACCH        equ	1177	;# 
   712     049A                     NCO1ACCU        equ	1178	;# 
   713     049B                     NCO1INC         equ	1179	;# 
   714     049B                     NCO1INCL        equ	1179	;# 
   715     049C                     NCO1INCH        equ	1180	;# 
   716     049D                     NCO1INCU        equ	1181	;# 
   717     049E                     NCO1CON         equ	1182	;# 
   718     049F                     NCO1CLK         equ	1183	;# 
   719     0617                     PWM5DCL         equ	1559	;# 
   720     0618                     PWM5DCH         equ	1560	;# 
   721     0619                     PWM5CON         equ	1561	;# 
   722     0619                     PWM5CON0        equ	1561	;# 
   723     061A                     PWM6DCL         equ	1562	;# 
   724     061B                     PWM6DCH         equ	1563	;# 
   725     061C                     PWM6CON         equ	1564	;# 
   726     061C                     PWM6CON0        equ	1564	;# 
   727     061F                     PWMTMRS         equ	1567	;# 
   728     0691                     CWG1CLKCON      equ	1681	;# 
   729     0692                     CWG1DAT         equ	1682	;# 
   730     0693                     CWG1DBR         equ	1683	;# 
   731     0694                     CWG1DBF         equ	1684	;# 
   732     0695                     CWG1CON0        equ	1685	;# 
   733     0696                     CWG1CON1        equ	1686	;# 
   734     0697                     CWG1AS0         equ	1687	;# 
   735     0698                     CWG1AS1         equ	1688	;# 
   736     0699                     CWG1STR         equ	1689	;# 
   737     0711                     CWG2CLKCON      equ	1809	;# 
   738     0712                     CWG2DAT         equ	1810	;# 
   739     0713                     CWG2DBR         equ	1811	;# 
   740     0714                     CWG2DBF         equ	1812	;# 
   741     0715                     CWG2CON0        equ	1813	;# 
   742     0716                     CWG2CON1        equ	1814	;# 
   743     0717                     CWG2AS0         equ	1815	;# 
   744     0718                     CWG2AS1         equ	1816	;# 
   745     0719                     CWG2STR         equ	1817	;# 
   746     0891                     NVMADR          equ	2193	;# 
   747     0891                     EEADR           equ	2193	;# 
   748     0891                     PMADR           equ	2193	;# 
   749     0891                     NVMADRL         equ	2193	;# 
   750     0891                     EEADRL          equ	2193	;# 
   751     0891                     PMADRL          equ	2193	;# 
   752     0892                     NVMADRH         equ	2194	;# 
   753     0892                     EEADRH          equ	2194	;# 
   754     0892                     PMADRH          equ	2194	;# 
   755     0893                     NVMDAT          equ	2195	;# 
   756     0893                     EEDAT           equ	2195	;# 
   757     0893                     PMDAT           equ	2195	;# 
   758     0893                     NVMDATL         equ	2195	;# 
   759     0893                     EEDATL          equ	2195	;# 
   760     0893                     PMDATL          equ	2195	;# 
   761     0894                     NVMDATH         equ	2196	;# 
   762     0894                     EEDATH          equ	2196	;# 
   763     0894                     PMDATH          equ	2196	;# 
   764     0895                     NVMCON1         equ	2197	;# 
   765     0895                     EECON1          equ	2197	;# 
   766     0895                     PMCON1          equ	2197	;# 
   767     0896                     NVMCON2         equ	2198	;# 
   768     0896                     EECON2          equ	2198	;# 
   769     0896                     PMCON2          equ	2198	;# 
   770     089B                     PCON0           equ	2203	;# 
   771     0911                     PMD0            equ	2321	;# 
   772     0912                     PMD1            equ	2322	;# 
   773     0913                     PMD2            equ	2323	;# 
   774     0914                     PMD3            equ	2324	;# 
   775     0915                     PMD4            equ	2325	;# 
   776     0916                     PMD5            equ	2326	;# 
   777     0918                     CPUDOZE         equ	2328	;# 
   778     0919                     OSCCON1         equ	2329	;# 
   779     091A                     OSCCON2         equ	2330	;# 
   780     091B                     OSCCON3         equ	2331	;# 
   781     091C                     OSCSTAT1        equ	2332	;# 
   782     091D                     OSCEN           equ	2333	;# 
   783     091E                     OSCTUNE         equ	2334	;# 
   784     091F                     OSCFRQ          equ	2335	;# 
   785     0E0F                     PPSLOCK         equ	3599	;# 
   786     0E10                     INTPPS          equ	3600	;# 
   787     0E11                     T0CKIPPS        equ	3601	;# 
   788     0E12                     T1CKIPPS        equ	3602	;# 
   789     0E13                     T1GPPS          equ	3603	;# 
   790     0E14                     CCP1PPS         equ	3604	;# 
   791     0E15                     CCP2PPS         equ	3605	;# 
   792     0E16                     CCP3PPS         equ	3606	;# 
   793     0E17                     CCP4PPS         equ	3607	;# 
   794     0E18                     CWG1PPS         equ	3608	;# 
   795     0E19                     CWG2PPS         equ	3609	;# 
   796     0E1A                     MDCIN1PPS       equ	3610	;# 
   797     0E1B                     MDCIN2PPS       equ	3611	;# 
   798     0E1C                     MDMINPPS        equ	3612	;# 
   799     0E1D                     SSP2CLKPPS      equ	3613	;# 
   800     0E1E                     SSP2DATPPS      equ	3614	;# 
   801     0E1F                     SSP2SSPPS       equ	3615	;# 
   802     0E20                     SSP1CLKPPS      equ	3616	;# 
   803     0E21                     SSP1DATPPS      equ	3617	;# 
   804     0E22                     SSP1SSPPS       equ	3618	;# 
   805     0E24                     RXPPS           equ	3620	;# 
   806     0E25                     TXPPS           equ	3621	;# 
   807     0E28                     CLCIN0PPS       equ	3624	;# 
   808     0E29                     CLCIN1PPS       equ	3625	;# 
   809     0E2A                     CLCIN2PPS       equ	3626	;# 
   810     0E2B                     CLCIN3PPS       equ	3627	;# 
   811     0E2C                     T3CKIPPS        equ	3628	;# 
   812     0E2D                     T3GPPS          equ	3629	;# 
   813     0E2E                     T5CKIPPS        equ	3630	;# 
   814     0E2F                     T5GPPS          equ	3631	;# 
   815     0E90                     RA0PPS          equ	3728	;# 
   816     0E91                     RA1PPS          equ	3729	;# 
   817     0E92                     RA2PPS          equ	3730	;# 
   818     0E94                     RA4PPS          equ	3732	;# 
   819     0E95                     RA5PPS          equ	3733	;# 
   820     0E9C                     RB4PPS          equ	3740	;# 
   821     0E9D                     RB5PPS          equ	3741	;# 
   822     0E9E                     RB6PPS          equ	3742	;# 
   823     0E9F                     RB7PPS          equ	3743	;# 
   824     0EA0                     RC0PPS          equ	3744	;# 
   825     0EA1                     RC1PPS          equ	3745	;# 
   826     0EA2                     RC2PPS          equ	3746	;# 
   827     0EA3                     RC3PPS          equ	3747	;# 
   828     0EA4                     RC4PPS          equ	3748	;# 
   829     0EA5                     RC5PPS          equ	3749	;# 
   830     0EA6                     RC6PPS          equ	3750	;# 
   831     0EA7                     RC7PPS          equ	3751	;# 
   832     0F0F                     CLCDATA         equ	3855	;# 
   833     0F10                     CLC1CON         equ	3856	;# 
   834     0F11                     CLC1POL         equ	3857	;# 
   835     0F12                     CLC1SEL0        equ	3858	;# 
   836     0F13                     CLC1SEL1        equ	3859	;# 
   837     0F14                     CLC1SEL2        equ	3860	;# 
   838     0F15                     CLC1SEL3        equ	3861	;# 
   839     0F16                     CLC1GLS0        equ	3862	;# 
   840     0F17                     CLC1GLS1        equ	3863	;# 
   841     0F18                     CLC1GLS2        equ	3864	;# 
   842     0F19                     CLC1GLS3        equ	3865	;# 
   843     0F1A                     CLC2CON         equ	3866	;# 
   844     0F1B                     CLC2POL         equ	3867	;# 
   845     0F1C                     CLC2SEL0        equ	3868	;# 
   846     0F1D                     CLC2SEL1        equ	3869	;# 
   847     0F1E                     CLC2SEL2        equ	3870	;# 
   848     0F1F                     CLC2SEL3        equ	3871	;# 
   849     0F20                     CLC2GLS0        equ	3872	;# 
   850     0F21                     CLC2GLS1        equ	3873	;# 
   851     0F22                     CLC2GLS2        equ	3874	;# 
   852     0F23                     CLC2GLS3        equ	3875	;# 
   853     0F24                     CLC3CON         equ	3876	;# 
   854     0F25                     CLC3POL         equ	3877	;# 
   855     0F26                     CLC3SEL0        equ	3878	;# 
   856     0F27                     CLC3SEL1        equ	3879	;# 
   857     0F28                     CLC3SEL2        equ	3880	;# 
   858     0F29                     CLC3SEL3        equ	3881	;# 
   859     0F2A                     CLC3GLS0        equ	3882	;# 
   860     0F2B                     CLC3GLS1        equ	3883	;# 
   861     0F2C                     CLC3GLS2        equ	3884	;# 
   862     0F2D                     CLC3GLS3        equ	3885	;# 
   863     0F2E                     CLC4CON         equ	3886	;# 
   864     0F2F                     CLC4POL         equ	3887	;# 
   865     0F30                     CLC4SEL0        equ	3888	;# 
   866     0F31                     CLC4SEL1        equ	3889	;# 
   867     0F32                     CLC4SEL2        equ	3890	;# 
   868     0F33                     CLC4SEL3        equ	3891	;# 
   869     0F34                     CLC4GLS0        equ	3892	;# 
   870     0F35                     CLC4GLS1        equ	3893	;# 
   871     0F36                     CLC4GLS2        equ	3894	;# 
   872     0F37                     CLC4GLS3        equ	3895	;# 
   873     0FE4                     STATUS_SHAD     equ	4068	;# 
   874     0FE5                     WREG_SHAD       equ	4069	;# 
   875     0FE6                     BSR_SHAD        equ	4070	;# 
   876     0FE7                     PCLATH_SHAD     equ	4071	;# 
   877     0FE8                     FSR0L_SHAD      equ	4072	;# 
   878     0FE9                     FSR0H_SHAD      equ	4073	;# 
   879     0FEA                     FSR1L_SHAD      equ	4074	;# 
   880     0FEB                     FSR1H_SHAD      equ	4075	;# 
   881     0FED                     STKPTR          equ	4077	;# 
   882     0FEE                     TOSL            equ	4078	;# 
   883     0FEF                     TOSH            equ	4079	;# 
   884     0000                     INDF0           equ	0	;# 
   885     0001                     INDF1           equ	1	;# 
   886     0002                     PCL             equ	2	;# 
   887     0003                     STATUS          equ	3	;# 
   888     0004                     FSR0L           equ	4	;# 
   889     0005                     FSR0H           equ	5	;# 
   890     0006                     FSR1L           equ	6	;# 
   891     0007                     FSR1H           equ	7	;# 
   892     0008                     BSR             equ	8	;# 
   893     0009                     WREG            equ	9	;# 
   894     000A                     PCLATH          equ	10	;# 
   895     000B                     INTCON          equ	11	;# 
   896     000C                     PORTA           equ	12	;# 
   897     000D                     PORTB           equ	13	;# 
   898     000E                     PORTC           equ	14	;# 
   899     0010                     PIR0            equ	16	;# 
   900     0011                     PIR1            equ	17	;# 
   901     0012                     PIR2            equ	18	;# 
   902     0013                     PIR3            equ	19	;# 
   903     0014                     PIR4            equ	20	;# 
   904     0015                     TMR0L           equ	21	;# 
   905     0015                     TMR0            equ	21	;# 
   906     0016                     TMR0H           equ	22	;# 
   907     0016                     PR0             equ	22	;# 
   908     0017                     T0CON0          equ	23	;# 
   909     0018                     T0CON1          equ	24	;# 
   910     0019                     TMR1            equ	25	;# 
   911     0019                     TMR1L           equ	25	;# 
   912     001A                     TMR1H           equ	26	;# 
   913     001B                     T1CON           equ	27	;# 
   914     001C                     T1GCON          equ	28	;# 
   915     001D                     TMR2            equ	29	;# 
   916     001E                     PR2             equ	30	;# 
   917     001F                     T2CON           equ	31	;# 
   918     008C                     TRISA           equ	140	;# 
   919     008D                     TRISB           equ	141	;# 
   920     008E                     TRISC           equ	142	;# 
   921     0090                     PIE0            equ	144	;# 
   922     0091                     PIE1            equ	145	;# 
   923     0092                     PIE2            equ	146	;# 
   924     0093                     PIE3            equ	147	;# 
   925     0094                     PIE4            equ	148	;# 
   926     0097                     WDTCON          equ	151	;# 
   927     009B                     ADRES           equ	155	;# 
   928     009B                     ADRESL          equ	155	;# 
   929     009C                     ADRESH          equ	156	;# 
   930     009D                     ADCON0          equ	157	;# 
   931     009E                     ADCON1          equ	158	;# 
   932     009F                     ADACT           equ	159	;# 
   933     010C                     LATA            equ	268	;# 
   934     010D                     LATB            equ	269	;# 
   935     010E                     LATC            equ	270	;# 
   936     0111                     CM1CON0         equ	273	;# 
   937     0112                     CM1CON1         equ	274	;# 
   938     0113                     CM2CON0         equ	275	;# 
   939     0114                     CM2CON1         equ	276	;# 
   940     0115                     CMOUT           equ	277	;# 
   941     0116                     BORCON          equ	278	;# 
   942     0117                     FVRCON          equ	279	;# 
   943     0118                     DACCON0         equ	280	;# 
   944     0119                     DACCON1         equ	281	;# 
   945     018C                     ANSELA          equ	396	;# 
   946     018D                     ANSELB          equ	397	;# 
   947     018E                     ANSELC          equ	398	;# 
   948     0197                     VREGCON         equ	407	;# 
   949     0199                     RC1REG          equ	409	;# 
   950     0199                     RCREG           equ	409	;# 
   951     0199                     RCREG1          equ	409	;# 
   952     019A                     TX1REG          equ	410	;# 
   953     019A                     TXREG1          equ	410	;# 
   954     019A                     TXREG           equ	410	;# 
   955     019B                     SP1BRG          equ	411	;# 
   956     019B                     SPBRG           equ	411	;# 
   957     019B                     SP1BRGL         equ	411	;# 
   958     019B                     SPBRG1          equ	411	;# 
   959     019B                     SPBRGL          equ	411	;# 
   960     019C                     SP1BRGH         equ	412	;# 
   961     019C                     SPBRGH          equ	412	;# 
   962     019C                     SPBRGH1         equ	412	;# 
   963     019D                     RC1STA          equ	413	;# 
   964     019D                     RCSTA1          equ	413	;# 
   965     019D                     RCSTA           equ	413	;# 
   966     019E                     TX1STA          equ	414	;# 
   967     019E                     TXSTA1          equ	414	;# 
   968     019E                     TXSTA           equ	414	;# 
   969     019F                     BAUD1CON        equ	415	;# 
   970     019F                     BAUDCON1        equ	415	;# 
   971     019F                     BAUDCTL1        equ	415	;# 
   972     019F                     BAUDCON         equ	415	;# 
   973     019F                     BAUDCTL         equ	415	;# 
   974     020C                     WPUA            equ	524	;# 
   975     020D                     WPUB            equ	525	;# 
   976     020E                     WPUC            equ	526	;# 
   977     0211                     SSP1BUF         equ	529	;# 
   978     0211                     SSPBUF          equ	529	;# 
   979     0212                     SSP1ADD         equ	530	;# 
   980     0212                     SSPADD          equ	530	;# 
   981     0213                     SSP1MSK         equ	531	;# 
   982     0213                     SSPMSK          equ	531	;# 
   983     0214                     SSP1STAT        equ	532	;# 
   984     0214                     SSPSTAT         equ	532	;# 
   985     0215                     SSP1CON1        equ	533	;# 
   986     0215                     SSPCON          equ	533	;# 
   987     0215                     SSPCON1         equ	533	;# 
   988     0215                     SSP1CON         equ	533	;# 
   989     0216                     SSP1CON2        equ	534	;# 
   990     0216                     SSPCON2         equ	534	;# 
   991     0217                     SSP1CON3        equ	535	;# 
   992     0217                     SSPCON3         equ	535	;# 
   993     0219                     SSP2BUF         equ	537	;# 
   994     021A                     SSP2ADD         equ	538	;# 
   995     021B                     SSP2MSK         equ	539	;# 
   996     021C                     SSP2STAT        equ	540	;# 
   997     021D                     SSP2CON1        equ	541	;# 
   998     021D                     SSP2CON         equ	541	;# 
   999     021E                     SSP2CON2        equ	542	;# 
  1000     021F                     SSP2CON3        equ	543	;# 
  1001     028C                     ODCONA          equ	652	;# 
  1002     028D                     ODCONB          equ	653	;# 
  1003     028E                     ODCONC          equ	654	;# 
  1004     0291                     CCPR1           equ	657	;# 
  1005     0291                     CCPR1L          equ	657	;# 
  1006     0292                     CCPR1H          equ	658	;# 
  1007     0293                     CCP1CON         equ	659	;# 
  1008     0294                     CCP1CAP         equ	660	;# 
  1009     0295                     CCPR2           equ	661	;# 
  1010     0295                     CCPR2L          equ	661	;# 
  1011     0296                     CCPR2H          equ	662	;# 
  1012     0297                     CCP2CON         equ	663	;# 
  1013     0298                     CCP2CAP         equ	664	;# 
  1014     029F                     CCPTMRS         equ	671	;# 
  1015     030C                     SLRCONA         equ	780	;# 
  1016     030D                     SLRCONB         equ	781	;# 
  1017     030E                     SLRCONC         equ	782	;# 
  1018     0311                     CCPR3           equ	785	;# 
  1019     0311                     CCPR3L          equ	785	;# 
  1020     0312                     CCPR3H          equ	786	;# 
  1021     0313                     CCP3CON         equ	787	;# 
  1022     0314                     CCP3CAP         equ	788	;# 
  1023     0315                     CCPR4           equ	789	;# 
  1024     0315                     CCPR4L          equ	789	;# 
  1025     0316                     CCPR4H          equ	790	;# 
  1026     0317                     CCP4CON         equ	791	;# 
  1027     0318                     CCP4CAP         equ	792	;# 
  1028     038C                     INLVLA          equ	908	;# 
  1029     038D                     INLVLB          equ	909	;# 
  1030     038E                     INLVLC          equ	910	;# 
  1031     0391                     IOCAP           equ	913	;# 
  1032     0392                     IOCAN           equ	914	;# 
  1033     0393                     IOCAF           equ	915	;# 
  1034     0394                     IOCBP           equ	916	;# 
  1035     0395                     IOCBN           equ	917	;# 
  1036     0396                     IOCBF           equ	918	;# 
  1037     0397                     IOCCP           equ	919	;# 
  1038     0398                     IOCCN           equ	920	;# 
  1039     0399                     IOCCF           equ	921	;# 
  1040     039A                     CLKRCON         equ	922	;# 
  1041     039C                     MDCON           equ	924	;# 
  1042     039D                     MDSRC           equ	925	;# 
  1043     039E                     MDCARH          equ	926	;# 
  1044     039F                     MDCARL          equ	927	;# 
  1045     0411                     TMR3            equ	1041	;# 
  1046     0411                     TMR3L           equ	1041	;# 
  1047     0412                     TMR3H           equ	1042	;# 
  1048     0413                     T3CON           equ	1043	;# 
  1049     0414                     T3GCON          equ	1044	;# 
  1050     0415                     TMR4            equ	1045	;# 
  1051     0416                     PR4             equ	1046	;# 
  1052     0417                     T4CON           equ	1047	;# 
  1053     0418                     TMR5            equ	1048	;# 
  1054     0418                     TMR5L           equ	1048	;# 
  1055     0419                     TMR5H           equ	1049	;# 
  1056     041A                     T5CON           equ	1050	;# 
  1057     041B                     T5GCON          equ	1051	;# 
  1058     041C                     TMR6            equ	1052	;# 
  1059     041D                     PR6             equ	1053	;# 
  1060     041E                     T6CON           equ	1054	;# 
  1061     041F                     CCDCON          equ	1055	;# 
  1062     0498                     NCO1ACC         equ	1176	;# 
  1063     0498                     NCO1ACCL        equ	1176	;# 
  1064     0499                     NCO1ACCH        equ	1177	;# 
  1065     049A                     NCO1ACCU        equ	1178	;# 
  1066     049B                     NCO1INC         equ	1179	;# 
  1067     049B                     NCO1INCL        equ	1179	;# 
  1068     049C                     NCO1INCH        equ	1180	;# 
  1069     049D                     NCO1INCU        equ	1181	;# 
  1070     049E                     NCO1CON         equ	1182	;# 
  1071     049F                     NCO1CLK         equ	1183	;# 
  1072     0617                     PWM5DCL         equ	1559	;# 
  1073     0618                     PWM5DCH         equ	1560	;# 
  1074     0619                     PWM5CON         equ	1561	;# 
  1075     0619                     PWM5CON0        equ	1561	;# 
  1076     061A                     PWM6DCL         equ	1562	;# 
  1077     061B                     PWM6DCH         equ	1563	;# 
  1078     061C                     PWM6CON         equ	1564	;# 
  1079     061C                     PWM6CON0        equ	1564	;# 
  1080     061F                     PWMTMRS         equ	1567	;# 
  1081     0691                     CWG1CLKCON      equ	1681	;# 
  1082     0692                     CWG1DAT         equ	1682	;# 
  1083     0693                     CWG1DBR         equ	1683	;# 
  1084     0694                     CWG1DBF         equ	1684	;# 
  1085     0695                     CWG1CON0        equ	1685	;# 
  1086     0696                     CWG1CON1        equ	1686	;# 
  1087     0697                     CWG1AS0         equ	1687	;# 
  1088     0698                     CWG1AS1         equ	1688	;# 
  1089     0699                     CWG1STR         equ	1689	;# 
  1090     0711                     CWG2CLKCON      equ	1809	;# 
  1091     0712                     CWG2DAT         equ	1810	;# 
  1092     0713                     CWG2DBR         equ	1811	;# 
  1093     0714                     CWG2DBF         equ	1812	;# 
  1094     0715                     CWG2CON0        equ	1813	;# 
  1095     0716                     CWG2CON1        equ	1814	;# 
  1096     0717                     CWG2AS0         equ	1815	;# 
  1097     0718                     CWG2AS1         equ	1816	;# 
  1098     0719                     CWG2STR         equ	1817	;# 
  1099     0891                     NVMADR          equ	2193	;# 
  1100     0891                     EEADR           equ	2193	;# 
  1101     0891                     PMADR           equ	2193	;# 
  1102     0891                     NVMADRL         equ	2193	;# 
  1103     0891                     EEADRL          equ	2193	;# 
  1104     0891                     PMADRL          equ	2193	;# 
  1105     0892                     NVMADRH         equ	2194	;# 
  1106     0892                     EEADRH          equ	2194	;# 
  1107     0892                     PMADRH          equ	2194	;# 
  1108     0893                     NVMDAT          equ	2195	;# 
  1109     0893                     EEDAT           equ	2195	;# 
  1110     0893                     PMDAT           equ	2195	;# 
  1111     0893                     NVMDATL         equ	2195	;# 
  1112     0893                     EEDATL          equ	2195	;# 
  1113     0893                     PMDATL          equ	2195	;# 
  1114     0894                     NVMDATH         equ	2196	;# 
  1115     0894                     EEDATH          equ	2196	;# 
  1116     0894                     PMDATH          equ	2196	;# 
  1117     0895                     NVMCON1         equ	2197	;# 
  1118     0895                     EECON1          equ	2197	;# 
  1119     0895                     PMCON1          equ	2197	;# 
  1120     0896                     NVMCON2         equ	2198	;# 
  1121     0896                     EECON2          equ	2198	;# 
  1122     0896                     PMCON2          equ	2198	;# 
  1123     089B                     PCON0           equ	2203	;# 
  1124     0911                     PMD0            equ	2321	;# 
  1125     0912                     PMD1            equ	2322	;# 
  1126     0913                     PMD2            equ	2323	;# 
  1127     0914                     PMD3            equ	2324	;# 
  1128     0915                     PMD4            equ	2325	;# 
  1129     0916                     PMD5            equ	2326	;# 
  1130     0918                     CPUDOZE         equ	2328	;# 
  1131     0919                     OSCCON1         equ	2329	;# 
  1132     091A                     OSCCON2         equ	2330	;# 
  1133     091B                     OSCCON3         equ	2331	;# 
  1134     091C                     OSCSTAT1        equ	2332	;# 
  1135     091D                     OSCEN           equ	2333	;# 
  1136     091E                     OSCTUNE         equ	2334	;# 
  1137     091F                     OSCFRQ          equ	2335	;# 
  1138     0E0F                     PPSLOCK         equ	3599	;# 
  1139     0E10                     INTPPS          equ	3600	;# 
  1140     0E11                     T0CKIPPS        equ	3601	;# 
  1141     0E12                     T1CKIPPS        equ	3602	;# 
  1142     0E13                     T1GPPS          equ	3603	;# 
  1143     0E14                     CCP1PPS         equ	3604	;# 
  1144     0E15                     CCP2PPS         equ	3605	;# 
  1145     0E16                     CCP3PPS         equ	3606	;# 
  1146     0E17                     CCP4PPS         equ	3607	;# 
  1147     0E18                     CWG1PPS         equ	3608	;# 
  1148     0E19                     CWG2PPS         equ	3609	;# 
  1149     0E1A                     MDCIN1PPS       equ	3610	;# 
  1150     0E1B                     MDCIN2PPS       equ	3611	;# 
  1151     0E1C                     MDMINPPS        equ	3612	;# 
  1152     0E1D                     SSP2CLKPPS      equ	3613	;# 
  1153     0E1E                     SSP2DATPPS      equ	3614	;# 
  1154     0E1F                     SSP2SSPPS       equ	3615	;# 
  1155     0E20                     SSP1CLKPPS      equ	3616	;# 
  1156     0E21                     SSP1DATPPS      equ	3617	;# 
  1157     0E22                     SSP1SSPPS       equ	3618	;# 
  1158     0E24                     RXPPS           equ	3620	;# 
  1159     0E25                     TXPPS           equ	3621	;# 
  1160     0E28                     CLCIN0PPS       equ	3624	;# 
  1161     0E29                     CLCIN1PPS       equ	3625	;# 
  1162     0E2A                     CLCIN2PPS       equ	3626	;# 
  1163     0E2B                     CLCIN3PPS       equ	3627	;# 
  1164     0E2C                     T3CKIPPS        equ	3628	;# 
  1165     0E2D                     T3GPPS          equ	3629	;# 
  1166     0E2E                     T5CKIPPS        equ	3630	;# 
  1167     0E2F                     T5GPPS          equ	3631	;# 
  1168     0E90                     RA0PPS          equ	3728	;# 
  1169     0E91                     RA1PPS          equ	3729	;# 
  1170     0E92                     RA2PPS          equ	3730	;# 
  1171     0E94                     RA4PPS          equ	3732	;# 
  1172     0E95                     RA5PPS          equ	3733	;# 
  1173     0E9C                     RB4PPS          equ	3740	;# 
  1174     0E9D                     RB5PPS          equ	3741	;# 
  1175     0E9E                     RB6PPS          equ	3742	;# 
  1176     0E9F                     RB7PPS          equ	3743	;# 
  1177     0EA0                     RC0PPS          equ	3744	;# 
  1178     0EA1                     RC1PPS          equ	3745	;# 
  1179     0EA2                     RC2PPS          equ	3746	;# 
  1180     0EA3                     RC3PPS          equ	3747	;# 
  1181     0EA4                     RC4PPS          equ	3748	;# 
  1182     0EA5                     RC5PPS          equ	3749	;# 
  1183     0EA6                     RC6PPS          equ	3750	;# 
  1184     0EA7                     RC7PPS          equ	3751	;# 
  1185     0F0F                     CLCDATA         equ	3855	;# 
  1186     0F10                     CLC1CON         equ	3856	;# 
  1187     0F11                     CLC1POL         equ	3857	;# 
  1188     0F12                     CLC1SEL0        equ	3858	;# 
  1189     0F13                     CLC1SEL1        equ	3859	;# 
  1190     0F14                     CLC1SEL2        equ	3860	;# 
  1191     0F15                     CLC1SEL3        equ	3861	;# 
  1192     0F16                     CLC1GLS0        equ	3862	;# 
  1193     0F17                     CLC1GLS1        equ	3863	;# 
  1194     0F18                     CLC1GLS2        equ	3864	;# 
  1195     0F19                     CLC1GLS3        equ	3865	;# 
  1196     0F1A                     CLC2CON         equ	3866	;# 
  1197     0F1B                     CLC2POL         equ	3867	;# 
  1198     0F1C                     CLC2SEL0        equ	3868	;# 
  1199     0F1D                     CLC2SEL1        equ	3869	;# 
  1200     0F1E                     CLC2SEL2        equ	3870	;# 
  1201     0F1F                     CLC2SEL3        equ	3871	;# 
  1202     0F20                     CLC2GLS0        equ	3872	;# 
  1203     0F21                     CLC2GLS1        equ	3873	;# 
  1204     0F22                     CLC2GLS2        equ	3874	;# 
  1205     0F23                     CLC2GLS3        equ	3875	;# 
  1206     0F24                     CLC3CON         equ	3876	;# 
  1207     0F25                     CLC3POL         equ	3877	;# 
  1208     0F26                     CLC3SEL0        equ	3878	;# 
  1209     0F27                     CLC3SEL1        equ	3879	;# 
  1210     0F28                     CLC3SEL2        equ	3880	;# 
  1211     0F29                     CLC3SEL3        equ	3881	;# 
  1212     0F2A                     CLC3GLS0        equ	3882	;# 
  1213     0F2B                     CLC3GLS1        equ	3883	;# 
  1214     0F2C                     CLC3GLS2        equ	3884	;# 
  1215     0F2D                     CLC3GLS3        equ	3885	;# 
  1216     0F2E                     CLC4CON         equ	3886	;# 
  1217     0F2F                     CLC4POL         equ	3887	;# 
  1218     0F30                     CLC4SEL0        equ	3888	;# 
  1219     0F31                     CLC4SEL1        equ	3889	;# 
  1220     0F32                     CLC4SEL2        equ	3890	;# 
  1221     0F33                     CLC4SEL3        equ	3891	;# 
  1222     0F34                     CLC4GLS0        equ	3892	;# 
  1223     0F35                     CLC4GLS1        equ	3893	;# 
  1224     0F36                     CLC4GLS2        equ	3894	;# 
  1225     0F37                     CLC4GLS3        equ	3895	;# 
  1226     0FE4                     STATUS_SHAD     equ	4068	;# 
  1227     0FE5                     WREG_SHAD       equ	4069	;# 
  1228     0FE6                     BSR_SHAD        equ	4070	;# 
  1229     0FE7                     PCLATH_SHAD     equ	4071	;# 
  1230     0FE8                     FSR0L_SHAD      equ	4072	;# 
  1231     0FE9                     FSR0H_SHAD      equ	4073	;# 
  1232     0FEA                     FSR1L_SHAD      equ	4074	;# 
  1233     0FEB                     FSR1H_SHAD      equ	4075	;# 
  1234     0FED                     STKPTR          equ	4077	;# 
  1235     0FEE                     TOSL            equ	4078	;# 
  1236     0FEF                     TOSH            equ	4079	;# 
  1237     0000                     INDF0           equ	0	;# 
  1238     0001                     INDF1           equ	1	;# 
  1239     0002                     PCL             equ	2	;# 
  1240     0003                     STATUS          equ	3	;# 
  1241     0004                     FSR0L           equ	4	;# 
  1242     0005                     FSR0H           equ	5	;# 
  1243     0006                     FSR1L           equ	6	;# 
  1244     0007                     FSR1H           equ	7	;# 
  1245     0008                     BSR             equ	8	;# 
  1246     0009                     WREG            equ	9	;# 
  1247     000A                     PCLATH          equ	10	;# 
  1248     000B                     INTCON          equ	11	;# 
  1249     000C                     PORTA           equ	12	;# 
  1250     000D                     PORTB           equ	13	;# 
  1251     000E                     PORTC           equ	14	;# 
  1252     0010                     PIR0            equ	16	;# 
  1253     0011                     PIR1            equ	17	;# 
  1254     0012                     PIR2            equ	18	;# 
  1255     0013                     PIR3            equ	19	;# 
  1256     0014                     PIR4            equ	20	;# 
  1257     0015                     TMR0L           equ	21	;# 
  1258     0015                     TMR0            equ	21	;# 
  1259     0016                     TMR0H           equ	22	;# 
  1260     0016                     PR0             equ	22	;# 
  1261     0017                     T0CON0          equ	23	;# 
  1262     0018                     T0CON1          equ	24	;# 
  1263     0019                     TMR1            equ	25	;# 
  1264     0019                     TMR1L           equ	25	;# 
  1265     001A                     TMR1H           equ	26	;# 
  1266     001B                     T1CON           equ	27	;# 
  1267     001C                     T1GCON          equ	28	;# 
  1268     001D                     TMR2            equ	29	;# 
  1269     001E                     PR2             equ	30	;# 
  1270     001F                     T2CON           equ	31	;# 
  1271     008C                     TRISA           equ	140	;# 
  1272     008D                     TRISB           equ	141	;# 
  1273     008E                     TRISC           equ	142	;# 
  1274     0090                     PIE0            equ	144	;# 
  1275     0091                     PIE1            equ	145	;# 
  1276     0092                     PIE2            equ	146	;# 
  1277     0093                     PIE3            equ	147	;# 
  1278     0094                     PIE4            equ	148	;# 
  1279     0097                     WDTCON          equ	151	;# 
  1280     009B                     ADRES           equ	155	;# 
  1281     009B                     ADRESL          equ	155	;# 
  1282     009C                     ADRESH          equ	156	;# 
  1283     009D                     ADCON0          equ	157	;# 
  1284     009E                     ADCON1          equ	158	;# 
  1285     009F                     ADACT           equ	159	;# 
  1286     010C                     LATA            equ	268	;# 
  1287     010D                     LATB            equ	269	;# 
  1288     010E                     LATC            equ	270	;# 
  1289     0111                     CM1CON0         equ	273	;# 
  1290     0112                     CM1CON1         equ	274	;# 
  1291     0113                     CM2CON0         equ	275	;# 
  1292     0114                     CM2CON1         equ	276	;# 
  1293     0115                     CMOUT           equ	277	;# 
  1294     0116                     BORCON          equ	278	;# 
  1295     0117                     FVRCON          equ	279	;# 
  1296     0118                     DACCON0         equ	280	;# 
  1297     0119                     DACCON1         equ	281	;# 
  1298     018C                     ANSELA          equ	396	;# 
  1299     018D                     ANSELB          equ	397	;# 
  1300     018E                     ANSELC          equ	398	;# 
  1301     0197                     VREGCON         equ	407	;# 
  1302     0199                     RC1REG          equ	409	;# 
  1303     0199                     RCREG           equ	409	;# 
  1304     0199                     RCREG1          equ	409	;# 
  1305     019A                     TX1REG          equ	410	;# 
  1306     019A                     TXREG1          equ	410	;# 
  1307     019A                     TXREG           equ	410	;# 
  1308     019B                     SP1BRG          equ	411	;# 
  1309     019B                     SPBRG           equ	411	;# 
  1310     019B                     SP1BRGL         equ	411	;# 
  1311     019B                     SPBRG1          equ	411	;# 
  1312     019B                     SPBRGL          equ	411	;# 
  1313     019C                     SP1BRGH         equ	412	;# 
  1314     019C                     SPBRGH          equ	412	;# 
  1315     019C                     SPBRGH1         equ	412	;# 
  1316     019D                     RC1STA          equ	413	;# 
  1317     019D                     RCSTA1          equ	413	;# 
  1318     019D                     RCSTA           equ	413	;# 
  1319     019E                     TX1STA          equ	414	;# 
  1320     019E                     TXSTA1          equ	414	;# 
  1321     019E                     TXSTA           equ	414	;# 
  1322     019F                     BAUD1CON        equ	415	;# 
  1323     019F                     BAUDCON1        equ	415	;# 
  1324     019F                     BAUDCTL1        equ	415	;# 
  1325     019F                     BAUDCON         equ	415	;# 
  1326     019F                     BAUDCTL         equ	415	;# 
  1327     020C                     WPUA            equ	524	;# 
  1328     020D                     WPUB            equ	525	;# 
  1329     020E                     WPUC            equ	526	;# 
  1330     0211                     SSP1BUF         equ	529	;# 
  1331     0211                     SSPBUF          equ	529	;# 
  1332     0212                     SSP1ADD         equ	530	;# 
  1333     0212                     SSPADD          equ	530	;# 
  1334     0213                     SSP1MSK         equ	531	;# 
  1335     0213                     SSPMSK          equ	531	;# 
  1336     0214                     SSP1STAT        equ	532	;# 
  1337     0214                     SSPSTAT         equ	532	;# 
  1338     0215                     SSP1CON1        equ	533	;# 
  1339     0215                     SSPCON          equ	533	;# 
  1340     0215                     SSPCON1         equ	533	;# 
  1341     0215                     SSP1CON         equ	533	;# 
  1342     0216                     SSP1CON2        equ	534	;# 
  1343     0216                     SSPCON2         equ	534	;# 
  1344     0217                     SSP1CON3        equ	535	;# 
  1345     0217                     SSPCON3         equ	535	;# 
  1346     0219                     SSP2BUF         equ	537	;# 
  1347     021A                     SSP2ADD         equ	538	;# 
  1348     021B                     SSP2MSK         equ	539	;# 
  1349     021C                     SSP2STAT        equ	540	;# 
  1350     021D                     SSP2CON1        equ	541	;# 
  1351     021D                     SSP2CON         equ	541	;# 
  1352     021E                     SSP2CON2        equ	542	;# 
  1353     021F                     SSP2CON3        equ	543	;# 
  1354     028C                     ODCONA          equ	652	;# 
  1355     028D                     ODCONB          equ	653	;# 
  1356     028E                     ODCONC          equ	654	;# 
  1357     0291                     CCPR1           equ	657	;# 
  1358     0291                     CCPR1L          equ	657	;# 
  1359     0292                     CCPR1H          equ	658	;# 
  1360     0293                     CCP1CON         equ	659	;# 
  1361     0294                     CCP1CAP         equ	660	;# 
  1362     0295                     CCPR2           equ	661	;# 
  1363     0295                     CCPR2L          equ	661	;# 
  1364     0296                     CCPR2H          equ	662	;# 
  1365     0297                     CCP2CON         equ	663	;# 
  1366     0298                     CCP2CAP         equ	664	;# 
  1367     029F                     CCPTMRS         equ	671	;# 
  1368     030C                     SLRCONA         equ	780	;# 
  1369     030D                     SLRCONB         equ	781	;# 
  1370     030E                     SLRCONC         equ	782	;# 
  1371     0311                     CCPR3           equ	785	;# 
  1372     0311                     CCPR3L          equ	785	;# 
  1373     0312                     CCPR3H          equ	786	;# 
  1374     0313                     CCP3CON         equ	787	;# 
  1375     0314                     CCP3CAP         equ	788	;# 
  1376     0315                     CCPR4           equ	789	;# 
  1377     0315                     CCPR4L          equ	789	;# 
  1378     0316                     CCPR4H          equ	790	;# 
  1379     0317                     CCP4CON         equ	791	;# 
  1380     0318                     CCP4CAP         equ	792	;# 
  1381     038C                     INLVLA          equ	908	;# 
  1382     038D                     INLVLB          equ	909	;# 
  1383     038E                     INLVLC          equ	910	;# 
  1384     0391                     IOCAP           equ	913	;# 
  1385     0392                     IOCAN           equ	914	;# 
  1386     0393                     IOCAF           equ	915	;# 
  1387     0394                     IOCBP           equ	916	;# 
  1388     0395                     IOCBN           equ	917	;# 
  1389     0396                     IOCBF           equ	918	;# 
  1390     0397                     IOCCP           equ	919	;# 
  1391     0398                     IOCCN           equ	920	;# 
  1392     0399                     IOCCF           equ	921	;# 
  1393     039A                     CLKRCON         equ	922	;# 
  1394     039C                     MDCON           equ	924	;# 
  1395     039D                     MDSRC           equ	925	;# 
  1396     039E                     MDCARH          equ	926	;# 
  1397     039F                     MDCARL          equ	927	;# 
  1398     0411                     TMR3            equ	1041	;# 
  1399     0411                     TMR3L           equ	1041	;# 
  1400     0412                     TMR3H           equ	1042	;# 
  1401     0413                     T3CON           equ	1043	;# 
  1402     0414                     T3GCON          equ	1044	;# 
  1403     0415                     TMR4            equ	1045	;# 
  1404     0416                     PR4             equ	1046	;# 
  1405     0417                     T4CON           equ	1047	;# 
  1406     0418                     TMR5            equ	1048	;# 
  1407     0418                     TMR5L           equ	1048	;# 
  1408     0419                     TMR5H           equ	1049	;# 
  1409     041A                     T5CON           equ	1050	;# 
  1410     041B                     T5GCON          equ	1051	;# 
  1411     041C                     TMR6            equ	1052	;# 
  1412     041D                     PR6             equ	1053	;# 
  1413     041E                     T6CON           equ	1054	;# 
  1414     041F                     CCDCON          equ	1055	;# 
  1415     0498                     NCO1ACC         equ	1176	;# 
  1416     0498                     NCO1ACCL        equ	1176	;# 
  1417     0499                     NCO1ACCH        equ	1177	;# 
  1418     049A                     NCO1ACCU        equ	1178	;# 
  1419     049B                     NCO1INC         equ	1179	;# 
  1420     049B                     NCO1INCL        equ	1179	;# 
  1421     049C                     NCO1INCH        equ	1180	;# 
  1422     049D                     NCO1INCU        equ	1181	;# 
  1423     049E                     NCO1CON         equ	1182	;# 
  1424     049F                     NCO1CLK         equ	1183	;# 
  1425     0617                     PWM5DCL         equ	1559	;# 
  1426     0618                     PWM5DCH         equ	1560	;# 
  1427     0619                     PWM5CON         equ	1561	;# 
  1428     0619                     PWM5CON0        equ	1561	;# 
  1429     061A                     PWM6DCL         equ	1562	;# 
  1430     061B                     PWM6DCH         equ	1563	;# 
  1431     061C                     PWM6CON         equ	1564	;# 
  1432     061C                     PWM6CON0        equ	1564	;# 
  1433     061F                     PWMTMRS         equ	1567	;# 
  1434     0691                     CWG1CLKCON      equ	1681	;# 
  1435     0692                     CWG1DAT         equ	1682	;# 
  1436     0693                     CWG1DBR         equ	1683	;# 
  1437     0694                     CWG1DBF         equ	1684	;# 
  1438     0695                     CWG1CON0        equ	1685	;# 
  1439     0696                     CWG1CON1        equ	1686	;# 
  1440     0697                     CWG1AS0         equ	1687	;# 
  1441     0698                     CWG1AS1         equ	1688	;# 
  1442     0699                     CWG1STR         equ	1689	;# 
  1443     0711                     CWG2CLKCON      equ	1809	;# 
  1444     0712                     CWG2DAT         equ	1810	;# 
  1445     0713                     CWG2DBR         equ	1811	;# 
  1446     0714                     CWG2DBF         equ	1812	;# 
  1447     0715                     CWG2CON0        equ	1813	;# 
  1448     0716                     CWG2CON1        equ	1814	;# 
  1449     0717                     CWG2AS0         equ	1815	;# 
  1450     0718                     CWG2AS1         equ	1816	;# 
  1451     0719                     CWG2STR         equ	1817	;# 
  1452     0891                     NVMADR          equ	2193	;# 
  1453     0891                     EEADR           equ	2193	;# 
  1454     0891                     PMADR           equ	2193	;# 
  1455     0891                     NVMADRL         equ	2193	;# 
  1456     0891                     EEADRL          equ	2193	;# 
  1457     0891                     PMADRL          equ	2193	;# 
  1458     0892                     NVMADRH         equ	2194	;# 
  1459     0892                     EEADRH          equ	2194	;# 
  1460     0892                     PMADRH          equ	2194	;# 
  1461     0893                     NVMDAT          equ	2195	;# 
  1462     0893                     EEDAT           equ	2195	;# 
  1463     0893                     PMDAT           equ	2195	;# 
  1464     0893                     NVMDATL         equ	2195	;# 
  1465     0893                     EEDATL          equ	2195	;# 
  1466     0893                     PMDATL          equ	2195	;# 
  1467     0894                     NVMDATH         equ	2196	;# 
  1468     0894                     EEDATH          equ	2196	;# 
  1469     0894                     PMDATH          equ	2196	;# 
  1470     0895                     NVMCON1         equ	2197	;# 
  1471     0895                     EECON1          equ	2197	;# 
  1472     0895                     PMCON1          equ	2197	;# 
  1473     0896                     NVMCON2         equ	2198	;# 
  1474     0896                     EECON2          equ	2198	;# 
  1475     0896                     PMCON2          equ	2198	;# 
  1476     089B                     PCON0           equ	2203	;# 
  1477     0911                     PMD0            equ	2321	;# 
  1478     0912                     PMD1            equ	2322	;# 
  1479     0913                     PMD2            equ	2323	;# 
  1480     0914                     PMD3            equ	2324	;# 
  1481     0915                     PMD4            equ	2325	;# 
  1482     0916                     PMD5            equ	2326	;# 
  1483     0918                     CPUDOZE         equ	2328	;# 
  1484     0919                     OSCCON1         equ	2329	;# 
  1485     091A                     OSCCON2         equ	2330	;# 
  1486     091B                     OSCCON3         equ	2331	;# 
  1487     091C                     OSCSTAT1        equ	2332	;# 
  1488     091D                     OSCEN           equ	2333	;# 
  1489     091E                     OSCTUNE         equ	2334	;# 
  1490     091F                     OSCFRQ          equ	2335	;# 
  1491     0E0F                     PPSLOCK         equ	3599	;# 
  1492     0E10                     INTPPS          equ	3600	;# 
  1493     0E11                     T0CKIPPS        equ	3601	;# 
  1494     0E12                     T1CKIPPS        equ	3602	;# 
  1495     0E13                     T1GPPS          equ	3603	;# 
  1496     0E14                     CCP1PPS         equ	3604	;# 
  1497     0E15                     CCP2PPS         equ	3605	;# 
  1498     0E16                     CCP3PPS         equ	3606	;# 
  1499     0E17                     CCP4PPS         equ	3607	;# 
  1500     0E18                     CWG1PPS         equ	3608	;# 
  1501     0E19                     CWG2PPS         equ	3609	;# 
  1502     0E1A                     MDCIN1PPS       equ	3610	;# 
  1503     0E1B                     MDCIN2PPS       equ	3611	;# 
  1504     0E1C                     MDMINPPS        equ	3612	;# 
  1505     0E1D                     SSP2CLKPPS      equ	3613	;# 
  1506     0E1E                     SSP2DATPPS      equ	3614	;# 
  1507     0E1F                     SSP2SSPPS       equ	3615	;# 
  1508     0E20                     SSP1CLKPPS      equ	3616	;# 
  1509     0E21                     SSP1DATPPS      equ	3617	;# 
  1510     0E22                     SSP1SSPPS       equ	3618	;# 
  1511     0E24                     RXPPS           equ	3620	;# 
  1512     0E25                     TXPPS           equ	3621	;# 
  1513     0E28                     CLCIN0PPS       equ	3624	;# 
  1514     0E29                     CLCIN1PPS       equ	3625	;# 
  1515     0E2A                     CLCIN2PPS       equ	3626	;# 
  1516     0E2B                     CLCIN3PPS       equ	3627	;# 
  1517     0E2C                     T3CKIPPS        equ	3628	;# 
  1518     0E2D                     T3GPPS          equ	3629	;# 
  1519     0E2E                     T5CKIPPS        equ	3630	;# 
  1520     0E2F                     T5GPPS          equ	3631	;# 
  1521     0E90                     RA0PPS          equ	3728	;# 
  1522     0E91                     RA1PPS          equ	3729	;# 
  1523     0E92                     RA2PPS          equ	3730	;# 
  1524     0E94                     RA4PPS          equ	3732	;# 
  1525     0E95                     RA5PPS          equ	3733	;# 
  1526     0E9C                     RB4PPS          equ	3740	;# 
  1527     0E9D                     RB5PPS          equ	3741	;# 
  1528     0E9E                     RB6PPS          equ	3742	;# 
  1529     0E9F                     RB7PPS          equ	3743	;# 
  1530     0EA0                     RC0PPS          equ	3744	;# 
  1531     0EA1                     RC1PPS          equ	3745	;# 
  1532     0EA2                     RC2PPS          equ	3746	;# 
  1533     0EA3                     RC3PPS          equ	3747	;# 
  1534     0EA4                     RC4PPS          equ	3748	;# 
  1535     0EA5                     RC5PPS          equ	3749	;# 
  1536     0EA6                     RC6PPS          equ	3750	;# 
  1537     0EA7                     RC7PPS          equ	3751	;# 
  1538     0F0F                     CLCDATA         equ	3855	;# 
  1539     0F10                     CLC1CON         equ	3856	;# 
  1540     0F11                     CLC1POL         equ	3857	;# 
  1541     0F12                     CLC1SEL0        equ	3858	;# 
  1542     0F13                     CLC1SEL1        equ	3859	;# 
  1543     0F14                     CLC1SEL2        equ	3860	;# 
  1544     0F15                     CLC1SEL3        equ	3861	;# 
  1545     0F16                     CLC1GLS0        equ	3862	;# 
  1546     0F17                     CLC1GLS1        equ	3863	;# 
  1547     0F18                     CLC1GLS2        equ	3864	;# 
  1548     0F19                     CLC1GLS3        equ	3865	;# 
  1549     0F1A                     CLC2CON         equ	3866	;# 
  1550     0F1B                     CLC2POL         equ	3867	;# 
  1551     0F1C                     CLC2SEL0        equ	3868	;# 
  1552     0F1D                     CLC2SEL1        equ	3869	;# 
  1553     0F1E                     CLC2SEL2        equ	3870	;# 
  1554     0F1F                     CLC2SEL3        equ	3871	;# 
  1555     0F20                     CLC2GLS0        equ	3872	;# 
  1556     0F21                     CLC2GLS1        equ	3873	;# 
  1557     0F22                     CLC2GLS2        equ	3874	;# 
  1558     0F23                     CLC2GLS3        equ	3875	;# 
  1559     0F24                     CLC3CON         equ	3876	;# 
  1560     0F25                     CLC3POL         equ	3877	;# 
  1561     0F26                     CLC3SEL0        equ	3878	;# 
  1562     0F27                     CLC3SEL1        equ	3879	;# 
  1563     0F28                     CLC3SEL2        equ	3880	;# 
  1564     0F29                     CLC3SEL3        equ	3881	;# 
  1565     0F2A                     CLC3GLS0        equ	3882	;# 
  1566     0F2B                     CLC3GLS1        equ	3883	;# 
  1567     0F2C                     CLC3GLS2        equ	3884	;# 
  1568     0F2D                     CLC3GLS3        equ	3885	;# 
  1569     0F2E                     CLC4CON         equ	3886	;# 
  1570     0F2F                     CLC4POL         equ	3887	;# 
  1571     0F30                     CLC4SEL0        equ	3888	;# 
  1572     0F31                     CLC4SEL1        equ	3889	;# 
  1573     0F32                     CLC4SEL2        equ	3890	;# 
  1574     0F33                     CLC4SEL3        equ	3891	;# 
  1575     0F34                     CLC4GLS0        equ	3892	;# 
  1576     0F35                     CLC4GLS1        equ	3893	;# 
  1577     0F36                     CLC4GLS2        equ	3894	;# 
  1578     0F37                     CLC4GLS3        equ	3895	;# 
  1579     0FE4                     STATUS_SHAD     equ	4068	;# 
  1580     0FE5                     WREG_SHAD       equ	4069	;# 
  1581     0FE6                     BSR_SHAD        equ	4070	;# 
  1582     0FE7                     PCLATH_SHAD     equ	4071	;# 
  1583     0FE8                     FSR0L_SHAD      equ	4072	;# 
  1584     0FE9                     FSR0H_SHAD      equ	4073	;# 
  1585     0FEA                     FSR1L_SHAD      equ	4074	;# 
  1586     0FEB                     FSR1H_SHAD      equ	4075	;# 
  1587     0FED                     STKPTR          equ	4077	;# 
  1588     0FEE                     TOSL            equ	4078	;# 
  1589     0FEF                     TOSH            equ	4079	;# 
  1590     0000                     INDF0           equ	0	;# 
  1591     0001                     INDF1           equ	1	;# 
  1592     0002                     PCL             equ	2	;# 
  1593     0003                     STATUS          equ	3	;# 
  1594     0004                     FSR0L           equ	4	;# 
  1595     0005                     FSR0H           equ	5	;# 
  1596     0006                     FSR1L           equ	6	;# 
  1597     0007                     FSR1H           equ	7	;# 
  1598     0008                     BSR             equ	8	;# 
  1599     0009                     WREG            equ	9	;# 
  1600     000A                     PCLATH          equ	10	;# 
  1601     000B                     INTCON          equ	11	;# 
  1602     000C                     PORTA           equ	12	;# 
  1603     000D                     PORTB           equ	13	;# 
  1604     000E                     PORTC           equ	14	;# 
  1605     0010                     PIR0            equ	16	;# 
  1606     0011                     PIR1            equ	17	;# 
  1607     0012                     PIR2            equ	18	;# 
  1608     0013                     PIR3            equ	19	;# 
  1609     0014                     PIR4            equ	20	;# 
  1610     0015                     TMR0L           equ	21	;# 
  1611     0015                     TMR0            equ	21	;# 
  1612     0016                     TMR0H           equ	22	;# 
  1613     0016                     PR0             equ	22	;# 
  1614     0017                     T0CON0          equ	23	;# 
  1615     0018                     T0CON1          equ	24	;# 
  1616     0019                     TMR1            equ	25	;# 
  1617     0019                     TMR1L           equ	25	;# 
  1618     001A                     TMR1H           equ	26	;# 
  1619     001B                     T1CON           equ	27	;# 
  1620     001C                     T1GCON          equ	28	;# 
  1621     001D                     TMR2            equ	29	;# 
  1622     001E                     PR2             equ	30	;# 
  1623     001F                     T2CON           equ	31	;# 
  1624     008C                     TRISA           equ	140	;# 
  1625     008D                     TRISB           equ	141	;# 
  1626     008E                     TRISC           equ	142	;# 
  1627     0090                     PIE0            equ	144	;# 
  1628     0091                     PIE1            equ	145	;# 
  1629     0092                     PIE2            equ	146	;# 
  1630     0093                     PIE3            equ	147	;# 
  1631     0094                     PIE4            equ	148	;# 
  1632     0097                     WDTCON          equ	151	;# 
  1633     009B                     ADRES           equ	155	;# 
  1634     009B                     ADRESL          equ	155	;# 
  1635     009C                     ADRESH          equ	156	;# 
  1636     009D                     ADCON0          equ	157	;# 
  1637     009E                     ADCON1          equ	158	;# 
  1638     009F                     ADACT           equ	159	;# 
  1639     010C                     LATA            equ	268	;# 
  1640     010D                     LATB            equ	269	;# 
  1641     010E                     LATC            equ	270	;# 
  1642     0111                     CM1CON0         equ	273	;# 
  1643     0112                     CM1CON1         equ	274	;# 
  1644     0113                     CM2CON0         equ	275	;# 
  1645     0114                     CM2CON1         equ	276	;# 
  1646     0115                     CMOUT           equ	277	;# 
  1647     0116                     BORCON          equ	278	;# 
  1648     0117                     FVRCON          equ	279	;# 
  1649     0118                     DACCON0         equ	280	;# 
  1650     0119                     DACCON1         equ	281	;# 
  1651     018C                     ANSELA          equ	396	;# 
  1652     018D                     ANSELB          equ	397	;# 
  1653     018E                     ANSELC          equ	398	;# 
  1654     0197                     VREGCON         equ	407	;# 
  1655     0199                     RC1REG          equ	409	;# 
  1656     0199                     RCREG           equ	409	;# 
  1657     0199                     RCREG1          equ	409	;# 
  1658     019A                     TX1REG          equ	410	;# 
  1659     019A                     TXREG1          equ	410	;# 
  1660     019A                     TXREG           equ	410	;# 
  1661     019B                     SP1BRG          equ	411	;# 
  1662     019B                     SPBRG           equ	411	;# 
  1663     019B                     SP1BRGL         equ	411	;# 
  1664     019B                     SPBRG1          equ	411	;# 
  1665     019B                     SPBRGL          equ	411	;# 
  1666     019C                     SP1BRGH         equ	412	;# 
  1667     019C                     SPBRGH          equ	412	;# 
  1668     019C                     SPBRGH1         equ	412	;# 
  1669     019D                     RC1STA          equ	413	;# 
  1670     019D                     RCSTA1          equ	413	;# 
  1671     019D                     RCSTA           equ	413	;# 
  1672     019E                     TX1STA          equ	414	;# 
  1673     019E                     TXSTA1          equ	414	;# 
  1674     019E                     TXSTA           equ	414	;# 
  1675     019F                     BAUD1CON        equ	415	;# 
  1676     019F                     BAUDCON1        equ	415	;# 
  1677     019F                     BAUDCTL1        equ	415	;# 
  1678     019F                     BAUDCON         equ	415	;# 
  1679     019F                     BAUDCTL         equ	415	;# 
  1680     020C                     WPUA            equ	524	;# 
  1681     020D                     WPUB            equ	525	;# 
  1682     020E                     WPUC            equ	526	;# 
  1683     0211                     SSP1BUF         equ	529	;# 
  1684     0211                     SSPBUF          equ	529	;# 
  1685     0212                     SSP1ADD         equ	530	;# 
  1686     0212                     SSPADD          equ	530	;# 
  1687     0213                     SSP1MSK         equ	531	;# 
  1688     0213                     SSPMSK          equ	531	;# 
  1689     0214                     SSP1STAT        equ	532	;# 
  1690     0214                     SSPSTAT         equ	532	;# 
  1691     0215                     SSP1CON1        equ	533	;# 
  1692     0215                     SSPCON          equ	533	;# 
  1693     0215                     SSPCON1         equ	533	;# 
  1694     0215                     SSP1CON         equ	533	;# 
  1695     0216                     SSP1CON2        equ	534	;# 
  1696     0216                     SSPCON2         equ	534	;# 
  1697     0217                     SSP1CON3        equ	535	;# 
  1698     0217                     SSPCON3         equ	535	;# 
  1699     0219                     SSP2BUF         equ	537	;# 
  1700     021A                     SSP2ADD         equ	538	;# 
  1701     021B                     SSP2MSK         equ	539	;# 
  1702     021C                     SSP2STAT        equ	540	;# 
  1703     021D                     SSP2CON1        equ	541	;# 
  1704     021D                     SSP2CON         equ	541	;# 
  1705     021E                     SSP2CON2        equ	542	;# 
  1706     021F                     SSP2CON3        equ	543	;# 
  1707     028C                     ODCONA          equ	652	;# 
  1708     028D                     ODCONB          equ	653	;# 
  1709     028E                     ODCONC          equ	654	;# 
  1710     0291                     CCPR1           equ	657	;# 
  1711     0291                     CCPR1L          equ	657	;# 
  1712     0292                     CCPR1H          equ	658	;# 
  1713     0293                     CCP1CON         equ	659	;# 
  1714     0294                     CCP1CAP         equ	660	;# 
  1715     0295                     CCPR2           equ	661	;# 
  1716     0295                     CCPR2L          equ	661	;# 
  1717     0296                     CCPR2H          equ	662	;# 
  1718     0297                     CCP2CON         equ	663	;# 
  1719     0298                     CCP2CAP         equ	664	;# 
  1720     029F                     CCPTMRS         equ	671	;# 
  1721     030C                     SLRCONA         equ	780	;# 
  1722     030D                     SLRCONB         equ	781	;# 
  1723     030E                     SLRCONC         equ	782	;# 
  1724     0311                     CCPR3           equ	785	;# 
  1725     0311                     CCPR3L          equ	785	;# 
  1726     0312                     CCPR3H          equ	786	;# 
  1727     0313                     CCP3CON         equ	787	;# 
  1728     0314                     CCP3CAP         equ	788	;# 
  1729     0315                     CCPR4           equ	789	;# 
  1730     0315                     CCPR4L          equ	789	;# 
  1731     0316                     CCPR4H          equ	790	;# 
  1732     0317                     CCP4CON         equ	791	;# 
  1733     0318                     CCP4CAP         equ	792	;# 
  1734     038C                     INLVLA          equ	908	;# 
  1735     038D                     INLVLB          equ	909	;# 
  1736     038E                     INLVLC          equ	910	;# 
  1737     0391                     IOCAP           equ	913	;# 
  1738     0392                     IOCAN           equ	914	;# 
  1739     0393                     IOCAF           equ	915	;# 
  1740     0394                     IOCBP           equ	916	;# 
  1741     0395                     IOCBN           equ	917	;# 
  1742     0396                     IOCBF           equ	918	;# 
  1743     0397                     IOCCP           equ	919	;# 
  1744     0398                     IOCCN           equ	920	;# 
  1745     0399                     IOCCF           equ	921	;# 
  1746     039A                     CLKRCON         equ	922	;# 
  1747     039C                     MDCON           equ	924	;# 
  1748     039D                     MDSRC           equ	925	;# 
  1749     039E                     MDCARH          equ	926	;# 
  1750     039F                     MDCARL          equ	927	;# 
  1751     0411                     TMR3            equ	1041	;# 
  1752     0411                     TMR3L           equ	1041	;# 
  1753     0412                     TMR3H           equ	1042	;# 
  1754     0413                     T3CON           equ	1043	;# 
  1755     0414                     T3GCON          equ	1044	;# 
  1756     0415                     TMR4            equ	1045	;# 
  1757     0416                     PR4             equ	1046	;# 
  1758     0417                     T4CON           equ	1047	;# 
  1759     0418                     TMR5            equ	1048	;# 
  1760     0418                     TMR5L           equ	1048	;# 
  1761     0419                     TMR5H           equ	1049	;# 
  1762     041A                     T5CON           equ	1050	;# 
  1763     041B                     T5GCON          equ	1051	;# 
  1764     041C                     TMR6            equ	1052	;# 
  1765     041D                     PR6             equ	1053	;# 
  1766     041E                     T6CON           equ	1054	;# 
  1767     041F                     CCDCON          equ	1055	;# 
  1768     0498                     NCO1ACC         equ	1176	;# 
  1769     0498                     NCO1ACCL        equ	1176	;# 
  1770     0499                     NCO1ACCH        equ	1177	;# 
  1771     049A                     NCO1ACCU        equ	1178	;# 
  1772     049B                     NCO1INC         equ	1179	;# 
  1773     049B                     NCO1INCL        equ	1179	;# 
  1774     049C                     NCO1INCH        equ	1180	;# 
  1775     049D                     NCO1INCU        equ	1181	;# 
  1776     049E                     NCO1CON         equ	1182	;# 
  1777     049F                     NCO1CLK         equ	1183	;# 
  1778     0617                     PWM5DCL         equ	1559	;# 
  1779     0618                     PWM5DCH         equ	1560	;# 
  1780     0619                     PWM5CON         equ	1561	;# 
  1781     0619                     PWM5CON0        equ	1561	;# 
  1782     061A                     PWM6DCL         equ	1562	;# 
  1783     061B                     PWM6DCH         equ	1563	;# 
  1784     061C                     PWM6CON         equ	1564	;# 
  1785     061C                     PWM6CON0        equ	1564	;# 
  1786     061F                     PWMTMRS         equ	1567	;# 
  1787     0691                     CWG1CLKCON      equ	1681	;# 
  1788     0692                     CWG1DAT         equ	1682	;# 
  1789     0693                     CWG1DBR         equ	1683	;# 
  1790     0694                     CWG1DBF         equ	1684	;# 
  1791     0695                     CWG1CON0        equ	1685	;# 
  1792     0696                     CWG1CON1        equ	1686	;# 
  1793     0697                     CWG1AS0         equ	1687	;# 
  1794     0698                     CWG1AS1         equ	1688	;# 
  1795     0699                     CWG1STR         equ	1689	;# 
  1796     0711                     CWG2CLKCON      equ	1809	;# 
  1797     0712                     CWG2DAT         equ	1810	;# 
  1798     0713                     CWG2DBR         equ	1811	;# 
  1799     0714                     CWG2DBF         equ	1812	;# 
  1800     0715                     CWG2CON0        equ	1813	;# 
  1801     0716                     CWG2CON1        equ	1814	;# 
  1802     0717                     CWG2AS0         equ	1815	;# 
  1803     0718                     CWG2AS1         equ	1816	;# 
  1804     0719                     CWG2STR         equ	1817	;# 
  1805     0891                     NVMADR          equ	2193	;# 
  1806     0891                     EEADR           equ	2193	;# 
  1807     0891                     PMADR           equ	2193	;# 
  1808     0891                     NVMADRL         equ	2193	;# 
  1809     0891                     EEADRL          equ	2193	;# 
  1810     0891                     PMADRL          equ	2193	;# 
  1811     0892                     NVMADRH         equ	2194	;# 
  1812     0892                     EEADRH          equ	2194	;# 
  1813     0892                     PMADRH          equ	2194	;# 
  1814     0893                     NVMDAT          equ	2195	;# 
  1815     0893                     EEDAT           equ	2195	;# 
  1816     0893                     PMDAT           equ	2195	;# 
  1817     0893                     NVMDATL         equ	2195	;# 
  1818     0893                     EEDATL          equ	2195	;# 
  1819     0893                     PMDATL          equ	2195	;# 
  1820     0894                     NVMDATH         equ	2196	;# 
  1821     0894                     EEDATH          equ	2196	;# 
  1822     0894                     PMDATH          equ	2196	;# 
  1823     0895                     NVMCON1         equ	2197	;# 
  1824     0895                     EECON1          equ	2197	;# 
  1825     0895                     PMCON1          equ	2197	;# 
  1826     0896                     NVMCON2         equ	2198	;# 
  1827     0896                     EECON2          equ	2198	;# 
  1828     0896                     PMCON2          equ	2198	;# 
  1829     089B                     PCON0           equ	2203	;# 
  1830     0911                     PMD0            equ	2321	;# 
  1831     0912                     PMD1            equ	2322	;# 
  1832     0913                     PMD2            equ	2323	;# 
  1833     0914                     PMD3            equ	2324	;# 
  1834     0915                     PMD4            equ	2325	;# 
  1835     0916                     PMD5            equ	2326	;# 
  1836     0918                     CPUDOZE         equ	2328	;# 
  1837     0919                     OSCCON1         equ	2329	;# 
  1838     091A                     OSCCON2         equ	2330	;# 
  1839     091B                     OSCCON3         equ	2331	;# 
  1840     091C                     OSCSTAT1        equ	2332	;# 
  1841     091D                     OSCEN           equ	2333	;# 
  1842     091E                     OSCTUNE         equ	2334	;# 
  1843     091F                     OSCFRQ          equ	2335	;# 
  1844     0E0F                     PPSLOCK         equ	3599	;# 
  1845     0E10                     INTPPS          equ	3600	;# 
  1846     0E11                     T0CKIPPS        equ	3601	;# 
  1847     0E12                     T1CKIPPS        equ	3602	;# 
  1848     0E13                     T1GPPS          equ	3603	;# 
  1849     0E14                     CCP1PPS         equ	3604	;# 
  1850     0E15                     CCP2PPS         equ	3605	;# 
  1851     0E16                     CCP3PPS         equ	3606	;# 
  1852     0E17                     CCP4PPS         equ	3607	;# 
  1853     0E18                     CWG1PPS         equ	3608	;# 
  1854     0E19                     CWG2PPS         equ	3609	;# 
  1855     0E1A                     MDCIN1PPS       equ	3610	;# 
  1856     0E1B                     MDCIN2PPS       equ	3611	;# 
  1857     0E1C                     MDMINPPS        equ	3612	;# 
  1858     0E1D                     SSP2CLKPPS      equ	3613	;# 
  1859     0E1E                     SSP2DATPPS      equ	3614	;# 
  1860     0E1F                     SSP2SSPPS       equ	3615	;# 
  1861     0E20                     SSP1CLKPPS      equ	3616	;# 
  1862     0E21                     SSP1DATPPS      equ	3617	;# 
  1863     0E22                     SSP1SSPPS       equ	3618	;# 
  1864     0E24                     RXPPS           equ	3620	;# 
  1865     0E25                     TXPPS           equ	3621	;# 
  1866     0E28                     CLCIN0PPS       equ	3624	;# 
  1867     0E29                     CLCIN1PPS       equ	3625	;# 
  1868     0E2A                     CLCIN2PPS       equ	3626	;# 
  1869     0E2B                     CLCIN3PPS       equ	3627	;# 
  1870     0E2C                     T3CKIPPS        equ	3628	;# 
  1871     0E2D                     T3GPPS          equ	3629	;# 
  1872     0E2E                     T5CKIPPS        equ	3630	;# 
  1873     0E2F                     T5GPPS          equ	3631	;# 
  1874     0E90                     RA0PPS          equ	3728	;# 
  1875     0E91                     RA1PPS          equ	3729	;# 
  1876     0E92                     RA2PPS          equ	3730	;# 
  1877     0E94                     RA4PPS          equ	3732	;# 
  1878     0E95                     RA5PPS          equ	3733	;# 
  1879     0E9C                     RB4PPS          equ	3740	;# 
  1880     0E9D                     RB5PPS          equ	3741	;# 
  1881     0E9E                     RB6PPS          equ	3742	;# 
  1882     0E9F                     RB7PPS          equ	3743	;# 
  1883     0EA0                     RC0PPS          equ	3744	;# 
  1884     0EA1                     RC1PPS          equ	3745	;# 
  1885     0EA2                     RC2PPS          equ	3746	;# 
  1886     0EA3                     RC3PPS          equ	3747	;# 
  1887     0EA4                     RC4PPS          equ	3748	;# 
  1888     0EA5                     RC5PPS          equ	3749	;# 
  1889     0EA6                     RC6PPS          equ	3750	;# 
  1890     0EA7                     RC7PPS          equ	3751	;# 
  1891     0F0F                     CLCDATA         equ	3855	;# 
  1892     0F10                     CLC1CON         equ	3856	;# 
  1893     0F11                     CLC1POL         equ	3857	;# 
  1894     0F12                     CLC1SEL0        equ	3858	;# 
  1895     0F13                     CLC1SEL1        equ	3859	;# 
  1896     0F14                     CLC1SEL2        equ	3860	;# 
  1897     0F15                     CLC1SEL3        equ	3861	;# 
  1898     0F16                     CLC1GLS0        equ	3862	;# 
  1899     0F17                     CLC1GLS1        equ	3863	;# 
  1900     0F18                     CLC1GLS2        equ	3864	;# 
  1901     0F19                     CLC1GLS3        equ	3865	;# 
  1902     0F1A                     CLC2CON         equ	3866	;# 
  1903     0F1B                     CLC2POL         equ	3867	;# 
  1904     0F1C                     CLC2SEL0        equ	3868	;# 
  1905     0F1D                     CLC2SEL1        equ	3869	;# 
  1906     0F1E                     CLC2SEL2        equ	3870	;# 
  1907     0F1F                     CLC2SEL3        equ	3871	;# 
  1908     0F20                     CLC2GLS0        equ	3872	;# 
  1909     0F21                     CLC2GLS1        equ	3873	;# 
  1910     0F22                     CLC2GLS2        equ	3874	;# 
  1911     0F23                     CLC2GLS3        equ	3875	;# 
  1912     0F24                     CLC3CON         equ	3876	;# 
  1913     0F25                     CLC3POL         equ	3877	;# 
  1914     0F26                     CLC3SEL0        equ	3878	;# 
  1915     0F27                     CLC3SEL1        equ	3879	;# 
  1916     0F28                     CLC3SEL2        equ	3880	;# 
  1917     0F29                     CLC3SEL3        equ	3881	;# 
  1918     0F2A                     CLC3GLS0        equ	3882	;# 
  1919     0F2B                     CLC3GLS1        equ	3883	;# 
  1920     0F2C                     CLC3GLS2        equ	3884	;# 
  1921     0F2D                     CLC3GLS3        equ	3885	;# 
  1922     0F2E                     CLC4CON         equ	3886	;# 
  1923     0F2F                     CLC4POL         equ	3887	;# 
  1924     0F30                     CLC4SEL0        equ	3888	;# 
  1925     0F31                     CLC4SEL1        equ	3889	;# 
  1926     0F32                     CLC4SEL2        equ	3890	;# 
  1927     0F33                     CLC4SEL3        equ	3891	;# 
  1928     0F34                     CLC4GLS0        equ	3892	;# 
  1929     0F35                     CLC4GLS1        equ	3893	;# 
  1930     0F36                     CLC4GLS2        equ	3894	;# 
  1931     0F37                     CLC4GLS3        equ	3895	;# 
  1932     0FE4                     STATUS_SHAD     equ	4068	;# 
  1933     0FE5                     WREG_SHAD       equ	4069	;# 
  1934     0FE6                     BSR_SHAD        equ	4070	;# 
  1935     0FE7                     PCLATH_SHAD     equ	4071	;# 
  1936     0FE8                     FSR0L_SHAD      equ	4072	;# 
  1937     0FE9                     FSR0H_SHAD      equ	4073	;# 
  1938     0FEA                     FSR1L_SHAD      equ	4074	;# 
  1939     0FEB                     FSR1H_SHAD      equ	4075	;# 
  1940     0FED                     STKPTR          equ	4077	;# 
  1941     0FEE                     TOSL            equ	4078	;# 
  1942     0FEF                     TOSH            equ	4079	;# 
  1943     0000                     INDF0           equ	0	;# 
  1944     0001                     INDF1           equ	1	;# 
  1945     0002                     PCL             equ	2	;# 
  1946     0003                     STATUS          equ	3	;# 
  1947     0004                     FSR0L           equ	4	;# 
  1948     0005                     FSR0H           equ	5	;# 
  1949     0006                     FSR1L           equ	6	;# 
  1950     0007                     FSR1H           equ	7	;# 
  1951     0008                     BSR             equ	8	;# 
  1952     0009                     WREG            equ	9	;# 
  1953     000A                     PCLATH          equ	10	;# 
  1954     000B                     INTCON          equ	11	;# 
  1955     000C                     PORTA           equ	12	;# 
  1956     000D                     PORTB           equ	13	;# 
  1957     000E                     PORTC           equ	14	;# 
  1958     0010                     PIR0            equ	16	;# 
  1959     0011                     PIR1            equ	17	;# 
  1960     0012                     PIR2            equ	18	;# 
  1961     0013                     PIR3            equ	19	;# 
  1962     0014                     PIR4            equ	20	;# 
  1963     0015                     TMR0L           equ	21	;# 
  1964     0015                     TMR0            equ	21	;# 
  1965     0016                     TMR0H           equ	22	;# 
  1966     0016                     PR0             equ	22	;# 
  1967     0017                     T0CON0          equ	23	;# 
  1968     0018                     T0CON1          equ	24	;# 
  1969     0019                     TMR1            equ	25	;# 
  1970     0019                     TMR1L           equ	25	;# 
  1971     001A                     TMR1H           equ	26	;# 
  1972     001B                     T1CON           equ	27	;# 
  1973     001C                     T1GCON          equ	28	;# 
  1974     001D                     TMR2            equ	29	;# 
  1975     001E                     PR2             equ	30	;# 
  1976     001F                     T2CON           equ	31	;# 
  1977     008C                     TRISA           equ	140	;# 
  1978     008D                     TRISB           equ	141	;# 
  1979     008E                     TRISC           equ	142	;# 
  1980     0090                     PIE0            equ	144	;# 
  1981     0091                     PIE1            equ	145	;# 
  1982     0092                     PIE2            equ	146	;# 
  1983     0093                     PIE3            equ	147	;# 
  1984     0094                     PIE4            equ	148	;# 
  1985     0097                     WDTCON          equ	151	;# 
  1986     009B                     ADRES           equ	155	;# 
  1987     009B                     ADRESL          equ	155	;# 
  1988     009C                     ADRESH          equ	156	;# 
  1989     009D                     ADCON0          equ	157	;# 
  1990     009E                     ADCON1          equ	158	;# 
  1991     009F                     ADACT           equ	159	;# 
  1992     010C                     LATA            equ	268	;# 
  1993     010D                     LATB            equ	269	;# 
  1994     010E                     LATC            equ	270	;# 
  1995     0111                     CM1CON0         equ	273	;# 
  1996     0112                     CM1CON1         equ	274	;# 
  1997     0113                     CM2CON0         equ	275	;# 
  1998     0114                     CM2CON1         equ	276	;# 
  1999     0115                     CMOUT           equ	277	;# 
  2000     0116                     BORCON          equ	278	;# 
  2001     0117                     FVRCON          equ	279	;# 
  2002     0118                     DACCON0         equ	280	;# 
  2003     0119                     DACCON1         equ	281	;# 
  2004     018C                     ANSELA          equ	396	;# 
  2005     018D                     ANSELB          equ	397	;# 
  2006     018E                     ANSELC          equ	398	;# 
  2007     0197                     VREGCON         equ	407	;# 
  2008     0199                     RC1REG          equ	409	;# 
  2009     0199                     RCREG           equ	409	;# 
  2010     0199                     RCREG1          equ	409	;# 
  2011     019A                     TX1REG          equ	410	;# 
  2012     019A                     TXREG1          equ	410	;# 
  2013     019A                     TXREG           equ	410	;# 
  2014     019B                     SP1BRG          equ	411	;# 
  2015     019B                     SPBRG           equ	411	;# 
  2016     019B                     SP1BRGL         equ	411	;# 
  2017     019B                     SPBRG1          equ	411	;# 
  2018     019B                     SPBRGL          equ	411	;# 
  2019     019C                     SP1BRGH         equ	412	;# 
  2020     019C                     SPBRGH          equ	412	;# 
  2021     019C                     SPBRGH1         equ	412	;# 
  2022     019D                     RC1STA          equ	413	;# 
  2023     019D                     RCSTA1          equ	413	;# 
  2024     019D                     RCSTA           equ	413	;# 
  2025     019E                     TX1STA          equ	414	;# 
  2026     019E                     TXSTA1          equ	414	;# 
  2027     019E                     TXSTA           equ	414	;# 
  2028     019F                     BAUD1CON        equ	415	;# 
  2029     019F                     BAUDCON1        equ	415	;# 
  2030     019F                     BAUDCTL1        equ	415	;# 
  2031     019F                     BAUDCON         equ	415	;# 
  2032     019F                     BAUDCTL         equ	415	;# 
  2033     020C                     WPUA            equ	524	;# 
  2034     020D                     WPUB            equ	525	;# 
  2035     020E                     WPUC            equ	526	;# 
  2036     0211                     SSP1BUF         equ	529	;# 
  2037     0211                     SSPBUF          equ	529	;# 
  2038     0212                     SSP1ADD         equ	530	;# 
  2039     0212                     SSPADD          equ	530	;# 
  2040     0213                     SSP1MSK         equ	531	;# 
  2041     0213                     SSPMSK          equ	531	;# 
  2042     0214                     SSP1STAT        equ	532	;# 
  2043     0214                     SSPSTAT         equ	532	;# 
  2044     0215                     SSP1CON1        equ	533	;# 
  2045     0215                     SSPCON          equ	533	;# 
  2046     0215                     SSPCON1         equ	533	;# 
  2047     0215                     SSP1CON         equ	533	;# 
  2048     0216                     SSP1CON2        equ	534	;# 
  2049     0216                     SSPCON2         equ	534	;# 
  2050     0217                     SSP1CON3        equ	535	;# 
  2051     0217                     SSPCON3         equ	535	;# 
  2052     0219                     SSP2BUF         equ	537	;# 
  2053     021A                     SSP2ADD         equ	538	;# 
  2054     021B                     SSP2MSK         equ	539	;# 
  2055     021C                     SSP2STAT        equ	540	;# 
  2056     021D                     SSP2CON1        equ	541	;# 
  2057     021D                     SSP2CON         equ	541	;# 
  2058     021E                     SSP2CON2        equ	542	;# 
  2059     021F                     SSP2CON3        equ	543	;# 
  2060     028C                     ODCONA          equ	652	;# 
  2061     028D                     ODCONB          equ	653	;# 
  2062     028E                     ODCONC          equ	654	;# 
  2063     0291                     CCPR1           equ	657	;# 
  2064     0291                     CCPR1L          equ	657	;# 
  2065     0292                     CCPR1H          equ	658	;# 
  2066     0293                     CCP1CON         equ	659	;# 
  2067     0294                     CCP1CAP         equ	660	;# 
  2068     0295                     CCPR2           equ	661	;# 
  2069     0295                     CCPR2L          equ	661	;# 
  2070     0296                     CCPR2H          equ	662	;# 
  2071     0297                     CCP2CON         equ	663	;# 
  2072     0298                     CCP2CAP         equ	664	;# 
  2073     029F                     CCPTMRS         equ	671	;# 
  2074     030C                     SLRCONA         equ	780	;# 
  2075     030D                     SLRCONB         equ	781	;# 
  2076     030E                     SLRCONC         equ	782	;# 
  2077     0311                     CCPR3           equ	785	;# 
  2078     0311                     CCPR3L          equ	785	;# 
  2079     0312                     CCPR3H          equ	786	;# 
  2080     0313                     CCP3CON         equ	787	;# 
  2081     0314                     CCP3CAP         equ	788	;# 
  2082     0315                     CCPR4           equ	789	;# 
  2083     0315                     CCPR4L          equ	789	;# 
  2084     0316                     CCPR4H          equ	790	;# 
  2085     0317                     CCP4CON         equ	791	;# 
  2086     0318                     CCP4CAP         equ	792	;# 
  2087     038C                     INLVLA          equ	908	;# 
  2088     038D                     INLVLB          equ	909	;# 
  2089     038E                     INLVLC          equ	910	;# 
  2090     0391                     IOCAP           equ	913	;# 
  2091     0392                     IOCAN           equ	914	;# 
  2092     0393                     IOCAF           equ	915	;# 
  2093     0394                     IOCBP           equ	916	;# 
  2094     0395                     IOCBN           equ	917	;# 
  2095     0396                     IOCBF           equ	918	;# 
  2096     0397                     IOCCP           equ	919	;# 
  2097     0398                     IOCCN           equ	920	;# 
  2098     0399                     IOCCF           equ	921	;# 
  2099     039A                     CLKRCON         equ	922	;# 
  2100     039C                     MDCON           equ	924	;# 
  2101     039D                     MDSRC           equ	925	;# 
  2102     039E                     MDCARH          equ	926	;# 
  2103     039F                     MDCARL          equ	927	;# 
  2104     0411                     TMR3            equ	1041	;# 
  2105     0411                     TMR3L           equ	1041	;# 
  2106     0412                     TMR3H           equ	1042	;# 
  2107     0413                     T3CON           equ	1043	;# 
  2108     0414                     T3GCON          equ	1044	;# 
  2109     0415                     TMR4            equ	1045	;# 
  2110     0416                     PR4             equ	1046	;# 
  2111     0417                     T4CON           equ	1047	;# 
  2112     0418                     TMR5            equ	1048	;# 
  2113     0418                     TMR5L           equ	1048	;# 
  2114     0419                     TMR5H           equ	1049	;# 
  2115     041A                     T5CON           equ	1050	;# 
  2116     041B                     T5GCON          equ	1051	;# 
  2117     041C                     TMR6            equ	1052	;# 
  2118     041D                     PR6             equ	1053	;# 
  2119     041E                     T6CON           equ	1054	;# 
  2120     041F                     CCDCON          equ	1055	;# 
  2121     0498                     NCO1ACC         equ	1176	;# 
  2122     0498                     NCO1ACCL        equ	1176	;# 
  2123     0499                     NCO1ACCH        equ	1177	;# 
  2124     049A                     NCO1ACCU        equ	1178	;# 
  2125     049B                     NCO1INC         equ	1179	;# 
  2126     049B                     NCO1INCL        equ	1179	;# 
  2127     049C                     NCO1INCH        equ	1180	;# 
  2128     049D                     NCO1INCU        equ	1181	;# 
  2129     049E                     NCO1CON         equ	1182	;# 
  2130     049F                     NCO1CLK         equ	1183	;# 
  2131     0617                     PWM5DCL         equ	1559	;# 
  2132     0618                     PWM5DCH         equ	1560	;# 
  2133     0619                     PWM5CON         equ	1561	;# 
  2134     0619                     PWM5CON0        equ	1561	;# 
  2135     061A                     PWM6DCL         equ	1562	;# 
  2136     061B                     PWM6DCH         equ	1563	;# 
  2137     061C                     PWM6CON         equ	1564	;# 
  2138     061C                     PWM6CON0        equ	1564	;# 
  2139     061F                     PWMTMRS         equ	1567	;# 
  2140     0691                     CWG1CLKCON      equ	1681	;# 
  2141     0692                     CWG1DAT         equ	1682	;# 
  2142     0693                     CWG1DBR         equ	1683	;# 
  2143     0694                     CWG1DBF         equ	1684	;# 
  2144     0695                     CWG1CON0        equ	1685	;# 
  2145     0696                     CWG1CON1        equ	1686	;# 
  2146     0697                     CWG1AS0         equ	1687	;# 
  2147     0698                     CWG1AS1         equ	1688	;# 
  2148     0699                     CWG1STR         equ	1689	;# 
  2149     0711                     CWG2CLKCON      equ	1809	;# 
  2150     0712                     CWG2DAT         equ	1810	;# 
  2151     0713                     CWG2DBR         equ	1811	;# 
  2152     0714                     CWG2DBF         equ	1812	;# 
  2153     0715                     CWG2CON0        equ	1813	;# 
  2154     0716                     CWG2CON1        equ	1814	;# 
  2155     0717                     CWG2AS0         equ	1815	;# 
  2156     0718                     CWG2AS1         equ	1816	;# 
  2157     0719                     CWG2STR         equ	1817	;# 
  2158     0891                     NVMADR          equ	2193	;# 
  2159     0891                     EEADR           equ	2193	;# 
  2160     0891                     PMADR           equ	2193	;# 
  2161     0891                     NVMADRL         equ	2193	;# 
  2162     0891                     EEADRL          equ	2193	;# 
  2163     0891                     PMADRL          equ	2193	;# 
  2164     0892                     NVMADRH         equ	2194	;# 
  2165     0892                     EEADRH          equ	2194	;# 
  2166     0892                     PMADRH          equ	2194	;# 
  2167     0893                     NVMDAT          equ	2195	;# 
  2168     0893                     EEDAT           equ	2195	;# 
  2169     0893                     PMDAT           equ	2195	;# 
  2170     0893                     NVMDATL         equ	2195	;# 
  2171     0893                     EEDATL          equ	2195	;# 
  2172     0893                     PMDATL          equ	2195	;# 
  2173     0894                     NVMDATH         equ	2196	;# 
  2174     0894                     EEDATH          equ	2196	;# 
  2175     0894                     PMDATH          equ	2196	;# 
  2176     0895                     NVMCON1         equ	2197	;# 
  2177     0895                     EECON1          equ	2197	;# 
  2178     0895                     PMCON1          equ	2197	;# 
  2179     0896                     NVMCON2         equ	2198	;# 
  2180     0896                     EECON2          equ	2198	;# 
  2181     0896                     PMCON2          equ	2198	;# 
  2182     089B                     PCON0           equ	2203	;# 
  2183     0911                     PMD0            equ	2321	;# 
  2184     0912                     PMD1            equ	2322	;# 
  2185     0913                     PMD2            equ	2323	;# 
  2186     0914                     PMD3            equ	2324	;# 
  2187     0915                     PMD4            equ	2325	;# 
  2188     0916                     PMD5            equ	2326	;# 
  2189     0918                     CPUDOZE         equ	2328	;# 
  2190     0919                     OSCCON1         equ	2329	;# 
  2191     091A                     OSCCON2         equ	2330	;# 
  2192     091B                     OSCCON3         equ	2331	;# 
  2193     091C                     OSCSTAT1        equ	2332	;# 
  2194     091D                     OSCEN           equ	2333	;# 
  2195     091E                     OSCTUNE         equ	2334	;# 
  2196     091F                     OSCFRQ          equ	2335	;# 
  2197     0E0F                     PPSLOCK         equ	3599	;# 
  2198     0E10                     INTPPS          equ	3600	;# 
  2199     0E11                     T0CKIPPS        equ	3601	;# 
  2200     0E12                     T1CKIPPS        equ	3602	;# 
  2201     0E13                     T1GPPS          equ	3603	;# 
  2202     0E14                     CCP1PPS         equ	3604	;# 
  2203     0E15                     CCP2PPS         equ	3605	;# 
  2204     0E16                     CCP3PPS         equ	3606	;# 
  2205     0E17                     CCP4PPS         equ	3607	;# 
  2206     0E18                     CWG1PPS         equ	3608	;# 
  2207     0E19                     CWG2PPS         equ	3609	;# 
  2208     0E1A                     MDCIN1PPS       equ	3610	;# 
  2209     0E1B                     MDCIN2PPS       equ	3611	;# 
  2210     0E1C                     MDMINPPS        equ	3612	;# 
  2211     0E1D                     SSP2CLKPPS      equ	3613	;# 
  2212     0E1E                     SSP2DATPPS      equ	3614	;# 
  2213     0E1F                     SSP2SSPPS       equ	3615	;# 
  2214     0E20                     SSP1CLKPPS      equ	3616	;# 
  2215     0E21                     SSP1DATPPS      equ	3617	;# 
  2216     0E22                     SSP1SSPPS       equ	3618	;# 
  2217     0E24                     RXPPS           equ	3620	;# 
  2218     0E25                     TXPPS           equ	3621	;# 
  2219     0E28                     CLCIN0PPS       equ	3624	;# 
  2220     0E29                     CLCIN1PPS       equ	3625	;# 
  2221     0E2A                     CLCIN2PPS       equ	3626	;# 
  2222     0E2B                     CLCIN3PPS       equ	3627	;# 
  2223     0E2C                     T3CKIPPS        equ	3628	;# 
  2224     0E2D                     T3GPPS          equ	3629	;# 
  2225     0E2E                     T5CKIPPS        equ	3630	;# 
  2226     0E2F                     T5GPPS          equ	3631	;# 
  2227     0E90                     RA0PPS          equ	3728	;# 
  2228     0E91                     RA1PPS          equ	3729	;# 
  2229     0E92                     RA2PPS          equ	3730	;# 
  2230     0E94                     RA4PPS          equ	3732	;# 
  2231     0E95                     RA5PPS          equ	3733	;# 
  2232     0E9C                     RB4PPS          equ	3740	;# 
  2233     0E9D                     RB5PPS          equ	3741	;# 
  2234     0E9E                     RB6PPS          equ	3742	;# 
  2235     0E9F                     RB7PPS          equ	3743	;# 
  2236     0EA0                     RC0PPS          equ	3744	;# 
  2237     0EA1                     RC1PPS          equ	3745	;# 
  2238     0EA2                     RC2PPS          equ	3746	;# 
  2239     0EA3                     RC3PPS          equ	3747	;# 
  2240     0EA4                     RC4PPS          equ	3748	;# 
  2241     0EA5                     RC5PPS          equ	3749	;# 
  2242     0EA6                     RC6PPS          equ	3750	;# 
  2243     0EA7                     RC7PPS          equ	3751	;# 
  2244     0F0F                     CLCDATA         equ	3855	;# 
  2245     0F10                     CLC1CON         equ	3856	;# 
  2246     0F11                     CLC1POL         equ	3857	;# 
  2247     0F12                     CLC1SEL0        equ	3858	;# 
  2248     0F13                     CLC1SEL1        equ	3859	;# 
  2249     0F14                     CLC1SEL2        equ	3860	;# 
  2250     0F15                     CLC1SEL3        equ	3861	;# 
  2251     0F16                     CLC1GLS0        equ	3862	;# 
  2252     0F17                     CLC1GLS1        equ	3863	;# 
  2253     0F18                     CLC1GLS2        equ	3864	;# 
  2254     0F19                     CLC1GLS3        equ	3865	;# 
  2255     0F1A                     CLC2CON         equ	3866	;# 
  2256     0F1B                     CLC2POL         equ	3867	;# 
  2257     0F1C                     CLC2SEL0        equ	3868	;# 
  2258     0F1D                     CLC2SEL1        equ	3869	;# 
  2259     0F1E                     CLC2SEL2        equ	3870	;# 
  2260     0F1F                     CLC2SEL3        equ	3871	;# 
  2261     0F20                     CLC2GLS0        equ	3872	;# 
  2262     0F21                     CLC2GLS1        equ	3873	;# 
  2263     0F22                     CLC2GLS2        equ	3874	;# 
  2264     0F23                     CLC2GLS3        equ	3875	;# 
  2265     0F24                     CLC3CON         equ	3876	;# 
  2266     0F25                     CLC3POL         equ	3877	;# 
  2267     0F26                     CLC3SEL0        equ	3878	;# 
  2268     0F27                     CLC3SEL1        equ	3879	;# 
  2269     0F28                     CLC3SEL2        equ	3880	;# 
  2270     0F29                     CLC3SEL3        equ	3881	;# 
  2271     0F2A                     CLC3GLS0        equ	3882	;# 
  2272     0F2B                     CLC3GLS1        equ	3883	;# 
  2273     0F2C                     CLC3GLS2        equ	3884	;# 
  2274     0F2D                     CLC3GLS3        equ	3885	;# 
  2275     0F2E                     CLC4CON         equ	3886	;# 
  2276     0F2F                     CLC4POL         equ	3887	;# 
  2277     0F30                     CLC4SEL0        equ	3888	;# 
  2278     0F31                     CLC4SEL1        equ	3889	;# 
  2279     0F32                     CLC4SEL2        equ	3890	;# 
  2280     0F33                     CLC4SEL3        equ	3891	;# 
  2281     0F34                     CLC4GLS0        equ	3892	;# 
  2282     0F35                     CLC4GLS1        equ	3893	;# 
  2283     0F36                     CLC4GLS2        equ	3894	;# 
  2284     0F37                     CLC4GLS3        equ	3895	;# 
  2285     0FE4                     STATUS_SHAD     equ	4068	;# 
  2286     0FE5                     WREG_SHAD       equ	4069	;# 
  2287     0FE6                     BSR_SHAD        equ	4070	;# 
  2288     0FE7                     PCLATH_SHAD     equ	4071	;# 
  2289     0FE8                     FSR0L_SHAD      equ	4072	;# 
  2290     0FE9                     FSR0H_SHAD      equ	4073	;# 
  2291     0FEA                     FSR1L_SHAD      equ	4074	;# 
  2292     0FEB                     FSR1H_SHAD      equ	4075	;# 
  2293     0FED                     STKPTR          equ	4077	;# 
  2294     0FEE                     TOSL            equ	4078	;# 
  2295     0FEF                     TOSH            equ	4079	;# 
  2296     0000                     INDF0           equ	0	;# 
  2297     0001                     INDF1           equ	1	;# 
  2298     0002                     PCL             equ	2	;# 
  2299     0003                     STATUS          equ	3	;# 
  2300     0004                     FSR0L           equ	4	;# 
  2301     0005                     FSR0H           equ	5	;# 
  2302     0006                     FSR1L           equ	6	;# 
  2303     0007                     FSR1H           equ	7	;# 
  2304     0008                     BSR             equ	8	;# 
  2305     0009                     WREG            equ	9	;# 
  2306     000A                     PCLATH          equ	10	;# 
  2307     000B                     INTCON          equ	11	;# 
  2308     000C                     PORTA           equ	12	;# 
  2309     000D                     PORTB           equ	13	;# 
  2310     000E                     PORTC           equ	14	;# 
  2311     0010                     PIR0            equ	16	;# 
  2312     0011                     PIR1            equ	17	;# 
  2313     0012                     PIR2            equ	18	;# 
  2314     0013                     PIR3            equ	19	;# 
  2315     0014                     PIR4            equ	20	;# 
  2316     0015                     TMR0L           equ	21	;# 
  2317     0015                     TMR0            equ	21	;# 
  2318     0016                     TMR0H           equ	22	;# 
  2319     0016                     PR0             equ	22	;# 
  2320     0017                     T0CON0          equ	23	;# 
  2321     0018                     T0CON1          equ	24	;# 
  2322     0019                     TMR1            equ	25	;# 
  2323     0019                     TMR1L           equ	25	;# 
  2324     001A                     TMR1H           equ	26	;# 
  2325     001B                     T1CON           equ	27	;# 
  2326     001C                     T1GCON          equ	28	;# 
  2327     001D                     TMR2            equ	29	;# 
  2328     001E                     PR2             equ	30	;# 
  2329     001F                     T2CON           equ	31	;# 
  2330     008C                     TRISA           equ	140	;# 
  2331     008D                     TRISB           equ	141	;# 
  2332     008E                     TRISC           equ	142	;# 
  2333     0090                     PIE0            equ	144	;# 
  2334     0091                     PIE1            equ	145	;# 
  2335     0092                     PIE2            equ	146	;# 
  2336     0093                     PIE3            equ	147	;# 
  2337     0094                     PIE4            equ	148	;# 
  2338     0097                     WDTCON          equ	151	;# 
  2339     009B                     ADRES           equ	155	;# 
  2340     009B                     ADRESL          equ	155	;# 
  2341     009C                     ADRESH          equ	156	;# 
  2342     009D                     ADCON0          equ	157	;# 
  2343     009E                     ADCON1          equ	158	;# 
  2344     009F                     ADACT           equ	159	;# 
  2345     010C                     LATA            equ	268	;# 
  2346     010D                     LATB            equ	269	;# 
  2347     010E                     LATC            equ	270	;# 
  2348     0111                     CM1CON0         equ	273	;# 
  2349     0112                     CM1CON1         equ	274	;# 
  2350     0113                     CM2CON0         equ	275	;# 
  2351     0114                     CM2CON1         equ	276	;# 
  2352     0115                     CMOUT           equ	277	;# 
  2353     0116                     BORCON          equ	278	;# 
  2354     0117                     FVRCON          equ	279	;# 
  2355     0118                     DACCON0         equ	280	;# 
  2356     0119                     DACCON1         equ	281	;# 
  2357     018C                     ANSELA          equ	396	;# 
  2358     018D                     ANSELB          equ	397	;# 
  2359     018E                     ANSELC          equ	398	;# 
  2360     0197                     VREGCON         equ	407	;# 
  2361     0199                     RC1REG          equ	409	;# 
  2362     0199                     RCREG           equ	409	;# 
  2363     0199                     RCREG1          equ	409	;# 
  2364     019A                     TX1REG          equ	410	;# 
  2365     019A                     TXREG1          equ	410	;# 
  2366     019A                     TXREG           equ	410	;# 
  2367     019B                     SP1BRG          equ	411	;# 
  2368     019B                     SPBRG           equ	411	;# 
  2369     019B                     SP1BRGL         equ	411	;# 
  2370     019B                     SPBRG1          equ	411	;# 
  2371     019B                     SPBRGL          equ	411	;# 
  2372     019C                     SP1BRGH         equ	412	;# 
  2373     019C                     SPBRGH          equ	412	;# 
  2374     019C                     SPBRGH1         equ	412	;# 
  2375     019D                     RC1STA          equ	413	;# 
  2376     019D                     RCSTA1          equ	413	;# 
  2377     019D                     RCSTA           equ	413	;# 
  2378     019E                     TX1STA          equ	414	;# 
  2379     019E                     TXSTA1          equ	414	;# 
  2380     019E                     TXSTA           equ	414	;# 
  2381     019F                     BAUD1CON        equ	415	;# 
  2382     019F                     BAUDCON1        equ	415	;# 
  2383     019F                     BAUDCTL1        equ	415	;# 
  2384     019F                     BAUDCON         equ	415	;# 
  2385     019F                     BAUDCTL         equ	415	;# 
  2386     020C                     WPUA            equ	524	;# 
  2387     020D                     WPUB            equ	525	;# 
  2388     020E                     WPUC            equ	526	;# 
  2389     0211                     SSP1BUF         equ	529	;# 
  2390     0211                     SSPBUF          equ	529	;# 
  2391     0212                     SSP1ADD         equ	530	;# 
  2392     0212                     SSPADD          equ	530	;# 
  2393     0213                     SSP1MSK         equ	531	;# 
  2394     0213                     SSPMSK          equ	531	;# 
  2395     0214                     SSP1STAT        equ	532	;# 
  2396     0214                     SSPSTAT         equ	532	;# 
  2397     0215                     SSP1CON1        equ	533	;# 
  2398     0215                     SSPCON          equ	533	;# 
  2399     0215                     SSPCON1         equ	533	;# 
  2400     0215                     SSP1CON         equ	533	;# 
  2401     0216                     SSP1CON2        equ	534	;# 
  2402     0216                     SSPCON2         equ	534	;# 
  2403     0217                     SSP1CON3        equ	535	;# 
  2404     0217                     SSPCON3         equ	535	;# 
  2405     0219                     SSP2BUF         equ	537	;# 
  2406     021A                     SSP2ADD         equ	538	;# 
  2407     021B                     SSP2MSK         equ	539	;# 
  2408     021C                     SSP2STAT        equ	540	;# 
  2409     021D                     SSP2CON1        equ	541	;# 
  2410     021D                     SSP2CON         equ	541	;# 
  2411     021E                     SSP2CON2        equ	542	;# 
  2412     021F                     SSP2CON3        equ	543	;# 
  2413     028C                     ODCONA          equ	652	;# 
  2414     028D                     ODCONB          equ	653	;# 
  2415     028E                     ODCONC          equ	654	;# 
  2416     0291                     CCPR1           equ	657	;# 
  2417     0291                     CCPR1L          equ	657	;# 
  2418     0292                     CCPR1H          equ	658	;# 
  2419     0293                     CCP1CON         equ	659	;# 
  2420     0294                     CCP1CAP         equ	660	;# 
  2421     0295                     CCPR2           equ	661	;# 
  2422     0295                     CCPR2L          equ	661	;# 
  2423     0296                     CCPR2H          equ	662	;# 
  2424     0297                     CCP2CON         equ	663	;# 
  2425     0298                     CCP2CAP         equ	664	;# 
  2426     029F                     CCPTMRS         equ	671	;# 
  2427     030C                     SLRCONA         equ	780	;# 
  2428     030D                     SLRCONB         equ	781	;# 
  2429     030E                     SLRCONC         equ	782	;# 
  2430     0311                     CCPR3           equ	785	;# 
  2431     0311                     CCPR3L          equ	785	;# 
  2432     0312                     CCPR3H          equ	786	;# 
  2433     0313                     CCP3CON         equ	787	;# 
  2434     0314                     CCP3CAP         equ	788	;# 
  2435     0315                     CCPR4           equ	789	;# 
  2436     0315                     CCPR4L          equ	789	;# 
  2437     0316                     CCPR4H          equ	790	;# 
  2438     0317                     CCP4CON         equ	791	;# 
  2439     0318                     CCP4CAP         equ	792	;# 
  2440     038C                     INLVLA          equ	908	;# 
  2441     038D                     INLVLB          equ	909	;# 
  2442     038E                     INLVLC          equ	910	;# 
  2443     0391                     IOCAP           equ	913	;# 
  2444     0392                     IOCAN           equ	914	;# 
  2445     0393                     IOCAF           equ	915	;# 
  2446     0394                     IOCBP           equ	916	;# 
  2447     0395                     IOCBN           equ	917	;# 
  2448     0396                     IOCBF           equ	918	;# 
  2449     0397                     IOCCP           equ	919	;# 
  2450     0398                     IOCCN           equ	920	;# 
  2451     0399                     IOCCF           equ	921	;# 
  2452     039A                     CLKRCON         equ	922	;# 
  2453     039C                     MDCON           equ	924	;# 
  2454     039D                     MDSRC           equ	925	;# 
  2455     039E                     MDCARH          equ	926	;# 
  2456     039F                     MDCARL          equ	927	;# 
  2457     0411                     TMR3            equ	1041	;# 
  2458     0411                     TMR3L           equ	1041	;# 
  2459     0412                     TMR3H           equ	1042	;# 
  2460     0413                     T3CON           equ	1043	;# 
  2461     0414                     T3GCON          equ	1044	;# 
  2462     0415                     TMR4            equ	1045	;# 
  2463     0416                     PR4             equ	1046	;# 
  2464     0417                     T4CON           equ	1047	;# 
  2465     0418                     TMR5            equ	1048	;# 
  2466     0418                     TMR5L           equ	1048	;# 
  2467     0419                     TMR5H           equ	1049	;# 
  2468     041A                     T5CON           equ	1050	;# 
  2469     041B                     T5GCON          equ	1051	;# 
  2470     041C                     TMR6            equ	1052	;# 
  2471     041D                     PR6             equ	1053	;# 
  2472     041E                     T6CON           equ	1054	;# 
  2473     041F                     CCDCON          equ	1055	;# 
  2474     0498                     NCO1ACC         equ	1176	;# 
  2475     0498                     NCO1ACCL        equ	1176	;# 
  2476     0499                     NCO1ACCH        equ	1177	;# 
  2477     049A                     NCO1ACCU        equ	1178	;# 
  2478     049B                     NCO1INC         equ	1179	;# 
  2479     049B                     NCO1INCL        equ	1179	;# 
  2480     049C                     NCO1INCH        equ	1180	;# 
  2481     049D                     NCO1INCU        equ	1181	;# 
  2482     049E                     NCO1CON         equ	1182	;# 
  2483     049F                     NCO1CLK         equ	1183	;# 
  2484     0617                     PWM5DCL         equ	1559	;# 
  2485     0618                     PWM5DCH         equ	1560	;# 
  2486     0619                     PWM5CON         equ	1561	;# 
  2487     0619                     PWM5CON0        equ	1561	;# 
  2488     061A                     PWM6DCL         equ	1562	;# 
  2489     061B                     PWM6DCH         equ	1563	;# 
  2490     061C                     PWM6CON         equ	1564	;# 
  2491     061C                     PWM6CON0        equ	1564	;# 
  2492     061F                     PWMTMRS         equ	1567	;# 
  2493     0691                     CWG1CLKCON      equ	1681	;# 
  2494     0692                     CWG1DAT         equ	1682	;# 
  2495     0693                     CWG1DBR         equ	1683	;# 
  2496     0694                     CWG1DBF         equ	1684	;# 
  2497     0695                     CWG1CON0        equ	1685	;# 
  2498     0696                     CWG1CON1        equ	1686	;# 
  2499     0697                     CWG1AS0         equ	1687	;# 
  2500     0698                     CWG1AS1         equ	1688	;# 
  2501     0699                     CWG1STR         equ	1689	;# 
  2502     0711                     CWG2CLKCON      equ	1809	;# 
  2503     0712                     CWG2DAT         equ	1810	;# 
  2504     0713                     CWG2DBR         equ	1811	;# 
  2505     0714                     CWG2DBF         equ	1812	;# 
  2506     0715                     CWG2CON0        equ	1813	;# 
  2507     0716                     CWG2CON1        equ	1814	;# 
  2508     0717                     CWG2AS0         equ	1815	;# 
  2509     0718                     CWG2AS1         equ	1816	;# 
  2510     0719                     CWG2STR         equ	1817	;# 
  2511     0891                     NVMADR          equ	2193	;# 
  2512     0891                     EEADR           equ	2193	;# 
  2513     0891                     PMADR           equ	2193	;# 
  2514     0891                     NVMADRL         equ	2193	;# 
  2515     0891                     EEADRL          equ	2193	;# 
  2516     0891                     PMADRL          equ	2193	;# 
  2517     0892                     NVMADRH         equ	2194	;# 
  2518     0892                     EEADRH          equ	2194	;# 
  2519     0892                     PMADRH          equ	2194	;# 
  2520     0893                     NVMDAT          equ	2195	;# 
  2521     0893                     EEDAT           equ	2195	;# 
  2522     0893                     PMDAT           equ	2195	;# 
  2523     0893                     NVMDATL         equ	2195	;# 
  2524     0893                     EEDATL          equ	2195	;# 
  2525     0893                     PMDATL          equ	2195	;# 
  2526     0894                     NVMDATH         equ	2196	;# 
  2527     0894                     EEDATH          equ	2196	;# 
  2528     0894                     PMDATH          equ	2196	;# 
  2529     0895                     NVMCON1         equ	2197	;# 
  2530     0895                     EECON1          equ	2197	;# 
  2531     0895                     PMCON1          equ	2197	;# 
  2532     0896                     NVMCON2         equ	2198	;# 
  2533     0896                     EECON2          equ	2198	;# 
  2534     0896                     PMCON2          equ	2198	;# 
  2535     089B                     PCON0           equ	2203	;# 
  2536     0911                     PMD0            equ	2321	;# 
  2537     0912                     PMD1            equ	2322	;# 
  2538     0913                     PMD2            equ	2323	;# 
  2539     0914                     PMD3            equ	2324	;# 
  2540     0915                     PMD4            equ	2325	;# 
  2541     0916                     PMD5            equ	2326	;# 
  2542     0918                     CPUDOZE         equ	2328	;# 
  2543     0919                     OSCCON1         equ	2329	;# 
  2544     091A                     OSCCON2         equ	2330	;# 
  2545     091B                     OSCCON3         equ	2331	;# 
  2546     091C                     OSCSTAT1        equ	2332	;# 
  2547     091D                     OSCEN           equ	2333	;# 
  2548     091E                     OSCTUNE         equ	2334	;# 
  2549     091F                     OSCFRQ          equ	2335	;# 
  2550     0E0F                     PPSLOCK         equ	3599	;# 
  2551     0E10                     INTPPS          equ	3600	;# 
  2552     0E11                     T0CKIPPS        equ	3601	;# 
  2553     0E12                     T1CKIPPS        equ	3602	;# 
  2554     0E13                     T1GPPS          equ	3603	;# 
  2555     0E14                     CCP1PPS         equ	3604	;# 
  2556     0E15                     CCP2PPS         equ	3605	;# 
  2557     0E16                     CCP3PPS         equ	3606	;# 
  2558     0E17                     CCP4PPS         equ	3607	;# 
  2559     0E18                     CWG1PPS         equ	3608	;# 
  2560     0E19                     CWG2PPS         equ	3609	;# 
  2561     0E1A                     MDCIN1PPS       equ	3610	;# 
  2562     0E1B                     MDCIN2PPS       equ	3611	;# 
  2563     0E1C                     MDMINPPS        equ	3612	;# 
  2564     0E1D                     SSP2CLKPPS      equ	3613	;# 
  2565     0E1E                     SSP2DATPPS      equ	3614	;# 
  2566     0E1F                     SSP2SSPPS       equ	3615	;# 
  2567     0E20                     SSP1CLKPPS      equ	3616	;# 
  2568     0E21                     SSP1DATPPS      equ	3617	;# 
  2569     0E22                     SSP1SSPPS       equ	3618	;# 
  2570     0E24                     RXPPS           equ	3620	;# 
  2571     0E25                     TXPPS           equ	3621	;# 
  2572     0E28                     CLCIN0PPS       equ	3624	;# 
  2573     0E29                     CLCIN1PPS       equ	3625	;# 
  2574     0E2A                     CLCIN2PPS       equ	3626	;# 
  2575     0E2B                     CLCIN3PPS       equ	3627	;# 
  2576     0E2C                     T3CKIPPS        equ	3628	;# 
  2577     0E2D                     T3GPPS          equ	3629	;# 
  2578     0E2E                     T5CKIPPS        equ	3630	;# 
  2579     0E2F                     T5GPPS          equ	3631	;# 
  2580     0E90                     RA0PPS          equ	3728	;# 
  2581     0E91                     RA1PPS          equ	3729	;# 
  2582     0E92                     RA2PPS          equ	3730	;# 
  2583     0E94                     RA4PPS          equ	3732	;# 
  2584     0E95                     RA5PPS          equ	3733	;# 
  2585     0E9C                     RB4PPS          equ	3740	;# 
  2586     0E9D                     RB5PPS          equ	3741	;# 
  2587     0E9E                     RB6PPS          equ	3742	;# 
  2588     0E9F                     RB7PPS          equ	3743	;# 
  2589     0EA0                     RC0PPS          equ	3744	;# 
  2590     0EA1                     RC1PPS          equ	3745	;# 
  2591     0EA2                     RC2PPS          equ	3746	;# 
  2592     0EA3                     RC3PPS          equ	3747	;# 
  2593     0EA4                     RC4PPS          equ	3748	;# 
  2594     0EA5                     RC5PPS          equ	3749	;# 
  2595     0EA6                     RC6PPS          equ	3750	;# 
  2596     0EA7                     RC7PPS          equ	3751	;# 
  2597     0F0F                     CLCDATA         equ	3855	;# 
  2598     0F10                     CLC1CON         equ	3856	;# 
  2599     0F11                     CLC1POL         equ	3857	;# 
  2600     0F12                     CLC1SEL0        equ	3858	;# 
  2601     0F13                     CLC1SEL1        equ	3859	;# 
  2602     0F14                     CLC1SEL2        equ	3860	;# 
  2603     0F15                     CLC1SEL3        equ	3861	;# 
  2604     0F16                     CLC1GLS0        equ	3862	;# 
  2605     0F17                     CLC1GLS1        equ	3863	;# 
  2606     0F18                     CLC1GLS2        equ	3864	;# 
  2607     0F19                     CLC1GLS3        equ	3865	;# 
  2608     0F1A                     CLC2CON         equ	3866	;# 
  2609     0F1B                     CLC2POL         equ	3867	;# 
  2610     0F1C                     CLC2SEL0        equ	3868	;# 
  2611     0F1D                     CLC2SEL1        equ	3869	;# 
  2612     0F1E                     CLC2SEL2        equ	3870	;# 
  2613     0F1F                     CLC2SEL3        equ	3871	;# 
  2614     0F20                     CLC2GLS0        equ	3872	;# 
  2615     0F21                     CLC2GLS1        equ	3873	;# 
  2616     0F22                     CLC2GLS2        equ	3874	;# 
  2617     0F23                     CLC2GLS3        equ	3875	;# 
  2618     0F24                     CLC3CON         equ	3876	;# 
  2619     0F25                     CLC3POL         equ	3877	;# 
  2620     0F26                     CLC3SEL0        equ	3878	;# 
  2621     0F27                     CLC3SEL1        equ	3879	;# 
  2622     0F28                     CLC3SEL2        equ	3880	;# 
  2623     0F29                     CLC3SEL3        equ	3881	;# 
  2624     0F2A                     CLC3GLS0        equ	3882	;# 
  2625     0F2B                     CLC3GLS1        equ	3883	;# 
  2626     0F2C                     CLC3GLS2        equ	3884	;# 
  2627     0F2D                     CLC3GLS3        equ	3885	;# 
  2628     0F2E                     CLC4CON         equ	3886	;# 
  2629     0F2F                     CLC4POL         equ	3887	;# 
  2630     0F30                     CLC4SEL0        equ	3888	;# 
  2631     0F31                     CLC4SEL1        equ	3889	;# 
  2632     0F32                     CLC4SEL2        equ	3890	;# 
  2633     0F33                     CLC4SEL3        equ	3891	;# 
  2634     0F34                     CLC4GLS0        equ	3892	;# 
  2635     0F35                     CLC4GLS1        equ	3893	;# 
  2636     0F36                     CLC4GLS2        equ	3894	;# 
  2637     0F37                     CLC4GLS3        equ	3895	;# 
  2638     0FE4                     STATUS_SHAD     equ	4068	;# 
  2639     0FE5                     WREG_SHAD       equ	4069	;# 
  2640     0FE6                     BSR_SHAD        equ	4070	;# 
  2641     0FE7                     PCLATH_SHAD     equ	4071	;# 
  2642     0FE8                     FSR0L_SHAD      equ	4072	;# 
  2643     0FE9                     FSR0H_SHAD      equ	4073	;# 
  2644     0FEA                     FSR1L_SHAD      equ	4074	;# 
  2645     0FEB                     FSR1H_SHAD      equ	4075	;# 
  2646     0FED                     STKPTR          equ	4077	;# 
  2647     0FEE                     TOSL            equ	4078	;# 
  2648     0FEF                     TOSH            equ	4079	;# 
  2649     0000                     INDF0           equ	0	;# 
  2650     0001                     INDF1           equ	1	;# 
  2651     0002                     PCL             equ	2	;# 
  2652     0003                     STATUS          equ	3	;# 
  2653     0004                     FSR0L           equ	4	;# 
  2654     0005                     FSR0H           equ	5	;# 
  2655     0006                     FSR1L           equ	6	;# 
  2656     0007                     FSR1H           equ	7	;# 
  2657     0008                     BSR             equ	8	;# 
  2658     0009                     WREG            equ	9	;# 
  2659     000A                     PCLATH          equ	10	;# 
  2660     000B                     INTCON          equ	11	;# 
  2661     000C                     PORTA           equ	12	;# 
  2662     000D                     PORTB           equ	13	;# 
  2663     000E                     PORTC           equ	14	;# 
  2664     0010                     PIR0            equ	16	;# 
  2665     0011                     PIR1            equ	17	;# 
  2666     0012                     PIR2            equ	18	;# 
  2667     0013                     PIR3            equ	19	;# 
  2668     0014                     PIR4            equ	20	;# 
  2669     0015                     TMR0L           equ	21	;# 
  2670     0015                     TMR0            equ	21	;# 
  2671     0016                     TMR0H           equ	22	;# 
  2672     0016                     PR0             equ	22	;# 
  2673     0017                     T0CON0          equ	23	;# 
  2674     0018                     T0CON1          equ	24	;# 
  2675     0019                     TMR1            equ	25	;# 
  2676     0019                     TMR1L           equ	25	;# 
  2677     001A                     TMR1H           equ	26	;# 
  2678     001B                     T1CON           equ	27	;# 
  2679     001C                     T1GCON          equ	28	;# 
  2680     001D                     TMR2            equ	29	;# 
  2681     001E                     PR2             equ	30	;# 
  2682     001F                     T2CON           equ	31	;# 
  2683     008C                     TRISA           equ	140	;# 
  2684     008D                     TRISB           equ	141	;# 
  2685     008E                     TRISC           equ	142	;# 
  2686     0090                     PIE0            equ	144	;# 
  2687     0091                     PIE1            equ	145	;# 
  2688     0092                     PIE2            equ	146	;# 
  2689     0093                     PIE3            equ	147	;# 
  2690     0094                     PIE4            equ	148	;# 
  2691     0097                     WDTCON          equ	151	;# 
  2692     009B                     ADRES           equ	155	;# 
  2693     009B                     ADRESL          equ	155	;# 
  2694     009C                     ADRESH          equ	156	;# 
  2695     009D                     ADCON0          equ	157	;# 
  2696     009E                     ADCON1          equ	158	;# 
  2697     009F                     ADACT           equ	159	;# 
  2698     010C                     LATA            equ	268	;# 
  2699     010D                     LATB            equ	269	;# 
  2700     010E                     LATC            equ	270	;# 
  2701     0111                     CM1CON0         equ	273	;# 
  2702     0112                     CM1CON1         equ	274	;# 
  2703     0113                     CM2CON0         equ	275	;# 
  2704     0114                     CM2CON1         equ	276	;# 
  2705     0115                     CMOUT           equ	277	;# 
  2706     0116                     BORCON          equ	278	;# 
  2707     0117                     FVRCON          equ	279	;# 
  2708     0118                     DACCON0         equ	280	;# 
  2709     0119                     DACCON1         equ	281	;# 
  2710     018C                     ANSELA          equ	396	;# 
  2711     018D                     ANSELB          equ	397	;# 
  2712     018E                     ANSELC          equ	398	;# 
  2713     0197                     VREGCON         equ	407	;# 
  2714     0199                     RC1REG          equ	409	;# 
  2715     0199                     RCREG           equ	409	;# 
  2716     0199                     RCREG1          equ	409	;# 
  2717     019A                     TX1REG          equ	410	;# 
  2718     019A                     TXREG1          equ	410	;# 
  2719     019A                     TXREG           equ	410	;# 
  2720     019B                     SP1BRG          equ	411	;# 
  2721     019B                     SPBRG           equ	411	;# 
  2722     019B                     SP1BRGL         equ	411	;# 
  2723     019B                     SPBRG1          equ	411	;# 
  2724     019B                     SPBRGL          equ	411	;# 
  2725     019C                     SP1BRGH         equ	412	;# 
  2726     019C                     SPBRGH          equ	412	;# 
  2727     019C                     SPBRGH1         equ	412	;# 
  2728     019D                     RC1STA          equ	413	;# 
  2729     019D                     RCSTA1          equ	413	;# 
  2730     019D                     RCSTA           equ	413	;# 
  2731     019E                     TX1STA          equ	414	;# 
  2732     019E                     TXSTA1          equ	414	;# 
  2733     019E                     TXSTA           equ	414	;# 
  2734     019F                     BAUD1CON        equ	415	;# 
  2735     019F                     BAUDCON1        equ	415	;# 
  2736     019F                     BAUDCTL1        equ	415	;# 
  2737     019F                     BAUDCON         equ	415	;# 
  2738     019F                     BAUDCTL         equ	415	;# 
  2739     020C                     WPUA            equ	524	;# 
  2740     020D                     WPUB            equ	525	;# 
  2741     020E                     WPUC            equ	526	;# 
  2742     0211                     SSP1BUF         equ	529	;# 
  2743     0211                     SSPBUF          equ	529	;# 
  2744     0212                     SSP1ADD         equ	530	;# 
  2745     0212                     SSPADD          equ	530	;# 
  2746     0213                     SSP1MSK         equ	531	;# 
  2747     0213                     SSPMSK          equ	531	;# 
  2748     0214                     SSP1STAT        equ	532	;# 
  2749     0214                     SSPSTAT         equ	532	;# 
  2750     0215                     SSP1CON1        equ	533	;# 
  2751     0215                     SSPCON          equ	533	;# 
  2752     0215                     SSPCON1         equ	533	;# 
  2753     0215                     SSP1CON         equ	533	;# 
  2754     0216                     SSP1CON2        equ	534	;# 
  2755     0216                     SSPCON2         equ	534	;# 
  2756     0217                     SSP1CON3        equ	535	;# 
  2757     0217                     SSPCON3         equ	535	;# 
  2758     0219                     SSP2BUF         equ	537	;# 
  2759     021A                     SSP2ADD         equ	538	;# 
  2760     021B                     SSP2MSK         equ	539	;# 
  2761     021C                     SSP2STAT        equ	540	;# 
  2762     021D                     SSP2CON1        equ	541	;# 
  2763     021D                     SSP2CON         equ	541	;# 
  2764     021E                     SSP2CON2        equ	542	;# 
  2765     021F                     SSP2CON3        equ	543	;# 
  2766     028C                     ODCONA          equ	652	;# 
  2767     028D                     ODCONB          equ	653	;# 
  2768     028E                     ODCONC          equ	654	;# 
  2769     0291                     CCPR1           equ	657	;# 
  2770     0291                     CCPR1L          equ	657	;# 
  2771     0292                     CCPR1H          equ	658	;# 
  2772     0293                     CCP1CON         equ	659	;# 
  2773     0294                     CCP1CAP         equ	660	;# 
  2774     0295                     CCPR2           equ	661	;# 
  2775     0295                     CCPR2L          equ	661	;# 
  2776     0296                     CCPR2H          equ	662	;# 
  2777     0297                     CCP2CON         equ	663	;# 
  2778     0298                     CCP2CAP         equ	664	;# 
  2779     029F                     CCPTMRS         equ	671	;# 
  2780     030C                     SLRCONA         equ	780	;# 
  2781     030D                     SLRCONB         equ	781	;# 
  2782     030E                     SLRCONC         equ	782	;# 
  2783     0311                     CCPR3           equ	785	;# 
  2784     0311                     CCPR3L          equ	785	;# 
  2785     0312                     CCPR3H          equ	786	;# 
  2786     0313                     CCP3CON         equ	787	;# 
  2787     0314                     CCP3CAP         equ	788	;# 
  2788     0315                     CCPR4           equ	789	;# 
  2789     0315                     CCPR4L          equ	789	;# 
  2790     0316                     CCPR4H          equ	790	;# 
  2791     0317                     CCP4CON         equ	791	;# 
  2792     0318                     CCP4CAP         equ	792	;# 
  2793     038C                     INLVLA          equ	908	;# 
  2794     038D                     INLVLB          equ	909	;# 
  2795     038E                     INLVLC          equ	910	;# 
  2796     0391                     IOCAP           equ	913	;# 
  2797     0392                     IOCAN           equ	914	;# 
  2798     0393                     IOCAF           equ	915	;# 
  2799     0394                     IOCBP           equ	916	;# 
  2800     0395                     IOCBN           equ	917	;# 
  2801     0396                     IOCBF           equ	918	;# 
  2802     0397                     IOCCP           equ	919	;# 
  2803     0398                     IOCCN           equ	920	;# 
  2804     0399                     IOCCF           equ	921	;# 
  2805     039A                     CLKRCON         equ	922	;# 
  2806     039C                     MDCON           equ	924	;# 
  2807     039D                     MDSRC           equ	925	;# 
  2808     039E                     MDCARH          equ	926	;# 
  2809     039F                     MDCARL          equ	927	;# 
  2810     0411                     TMR3            equ	1041	;# 
  2811     0411                     TMR3L           equ	1041	;# 
  2812     0412                     TMR3H           equ	1042	;# 
  2813     0413                     T3CON           equ	1043	;# 
  2814     0414                     T3GCON          equ	1044	;# 
  2815     0415                     TMR4            equ	1045	;# 
  2816     0416                     PR4             equ	1046	;# 
  2817     0417                     T4CON           equ	1047	;# 
  2818     0418                     TMR5            equ	1048	;# 
  2819     0418                     TMR5L           equ	1048	;# 
  2820     0419                     TMR5H           equ	1049	;# 
  2821     041A                     T5CON           equ	1050	;# 
  2822     041B                     T5GCON          equ	1051	;# 
  2823     041C                     TMR6            equ	1052	;# 
  2824     041D                     PR6             equ	1053	;# 
  2825     041E                     T6CON           equ	1054	;# 
  2826     041F                     CCDCON          equ	1055	;# 
  2827     0498                     NCO1ACC         equ	1176	;# 
  2828     0498                     NCO1ACCL        equ	1176	;# 
  2829     0499                     NCO1ACCH        equ	1177	;# 
  2830     049A                     NCO1ACCU        equ	1178	;# 
  2831     049B                     NCO1INC         equ	1179	;# 
  2832     049B                     NCO1INCL        equ	1179	;# 
  2833     049C                     NCO1INCH        equ	1180	;# 
  2834     049D                     NCO1INCU        equ	1181	;# 
  2835     049E                     NCO1CON         equ	1182	;# 
  2836     049F                     NCO1CLK         equ	1183	;# 
  2837     0617                     PWM5DCL         equ	1559	;# 
  2838     0618                     PWM5DCH         equ	1560	;# 
  2839     0619                     PWM5CON         equ	1561	;# 
  2840     0619                     PWM5CON0        equ	1561	;# 
  2841     061A                     PWM6DCL         equ	1562	;# 
  2842     061B                     PWM6DCH         equ	1563	;# 
  2843     061C                     PWM6CON         equ	1564	;# 
  2844     061C                     PWM6CON0        equ	1564	;# 
  2845     061F                     PWMTMRS         equ	1567	;# 
  2846     0691                     CWG1CLKCON      equ	1681	;# 
  2847     0692                     CWG1DAT         equ	1682	;# 
  2848     0693                     CWG1DBR         equ	1683	;# 
  2849     0694                     CWG1DBF         equ	1684	;# 
  2850     0695                     CWG1CON0        equ	1685	;# 
  2851     0696                     CWG1CON1        equ	1686	;# 
  2852     0697                     CWG1AS0         equ	1687	;# 
  2853     0698                     CWG1AS1         equ	1688	;# 
  2854     0699                     CWG1STR         equ	1689	;# 
  2855     0711                     CWG2CLKCON      equ	1809	;# 
  2856     0712                     CWG2DAT         equ	1810	;# 
  2857     0713                     CWG2DBR         equ	1811	;# 
  2858     0714                     CWG2DBF         equ	1812	;# 
  2859     0715                     CWG2CON0        equ	1813	;# 
  2860     0716                     CWG2CON1        equ	1814	;# 
  2861     0717                     CWG2AS0         equ	1815	;# 
  2862     0718                     CWG2AS1         equ	1816	;# 
  2863     0719                     CWG2STR         equ	1817	;# 
  2864     0891                     NVMADR          equ	2193	;# 
  2865     0891                     EEADR           equ	2193	;# 
  2866     0891                     PMADR           equ	2193	;# 
  2867     0891                     NVMADRL         equ	2193	;# 
  2868     0891                     EEADRL          equ	2193	;# 
  2869     0891                     PMADRL          equ	2193	;# 
  2870     0892                     NVMADRH         equ	2194	;# 
  2871     0892                     EEADRH          equ	2194	;# 
  2872     0892                     PMADRH          equ	2194	;# 
  2873     0893                     NVMDAT          equ	2195	;# 
  2874     0893                     EEDAT           equ	2195	;# 
  2875     0893                     PMDAT           equ	2195	;# 
  2876     0893                     NVMDATL         equ	2195	;# 
  2877     0893                     EEDATL          equ	2195	;# 
  2878     0893                     PMDATL          equ	2195	;# 
  2879     0894                     NVMDATH         equ	2196	;# 
  2880     0894                     EEDATH          equ	2196	;# 
  2881     0894                     PMDATH          equ	2196	;# 
  2882     0895                     NVMCON1         equ	2197	;# 
  2883     0895                     EECON1          equ	2197	;# 
  2884     0895                     PMCON1          equ	2197	;# 
  2885     0896                     NVMCON2         equ	2198	;# 
  2886     0896                     EECON2          equ	2198	;# 
  2887     0896                     PMCON2          equ	2198	;# 
  2888     089B                     PCON0           equ	2203	;# 
  2889     0911                     PMD0            equ	2321	;# 
  2890     0912                     PMD1            equ	2322	;# 
  2891     0913                     PMD2            equ	2323	;# 
  2892     0914                     PMD3            equ	2324	;# 
  2893     0915                     PMD4            equ	2325	;# 
  2894     0916                     PMD5            equ	2326	;# 
  2895     0918                     CPUDOZE         equ	2328	;# 
  2896     0919                     OSCCON1         equ	2329	;# 
  2897     091A                     OSCCON2         equ	2330	;# 
  2898     091B                     OSCCON3         equ	2331	;# 
  2899     091C                     OSCSTAT1        equ	2332	;# 
  2900     091D                     OSCEN           equ	2333	;# 
  2901     091E                     OSCTUNE         equ	2334	;# 
  2902     091F                     OSCFRQ          equ	2335	;# 
  2903     0E0F                     PPSLOCK         equ	3599	;# 
  2904     0E10                     INTPPS          equ	3600	;# 
  2905     0E11                     T0CKIPPS        equ	3601	;# 
  2906     0E12                     T1CKIPPS        equ	3602	;# 
  2907     0E13                     T1GPPS          equ	3603	;# 
  2908     0E14                     CCP1PPS         equ	3604	;# 
  2909     0E15                     CCP2PPS         equ	3605	;# 
  2910     0E16                     CCP3PPS         equ	3606	;# 
  2911     0E17                     CCP4PPS         equ	3607	;# 
  2912     0E18                     CWG1PPS         equ	3608	;# 
  2913     0E19                     CWG2PPS         equ	3609	;# 
  2914     0E1A                     MDCIN1PPS       equ	3610	;# 
  2915     0E1B                     MDCIN2PPS       equ	3611	;# 
  2916     0E1C                     MDMINPPS        equ	3612	;# 
  2917     0E1D                     SSP2CLKPPS      equ	3613	;# 
  2918     0E1E                     SSP2DATPPS      equ	3614	;# 
  2919     0E1F                     SSP2SSPPS       equ	3615	;# 
  2920     0E20                     SSP1CLKPPS      equ	3616	;# 
  2921     0E21                     SSP1DATPPS      equ	3617	;# 
  2922     0E22                     SSP1SSPPS       equ	3618	;# 
  2923     0E24                     RXPPS           equ	3620	;# 
  2924     0E25                     TXPPS           equ	3621	;# 
  2925     0E28                     CLCIN0PPS       equ	3624	;# 
  2926     0E29                     CLCIN1PPS       equ	3625	;# 
  2927     0E2A                     CLCIN2PPS       equ	3626	;# 
  2928     0E2B                     CLCIN3PPS       equ	3627	;# 
  2929     0E2C                     T3CKIPPS        equ	3628	;# 
  2930     0E2D                     T3GPPS          equ	3629	;# 
  2931     0E2E                     T5CKIPPS        equ	3630	;# 
  2932     0E2F                     T5GPPS          equ	3631	;# 
  2933     0E90                     RA0PPS          equ	3728	;# 
  2934     0E91                     RA1PPS          equ	3729	;# 
  2935     0E92                     RA2PPS          equ	3730	;# 
  2936     0E94                     RA4PPS          equ	3732	;# 
  2937     0E95                     RA5PPS          equ	3733	;# 
  2938     0E9C                     RB4PPS          equ	3740	;# 
  2939     0E9D                     RB5PPS          equ	3741	;# 
  2940     0E9E                     RB6PPS          equ	3742	;# 
  2941     0E9F                     RB7PPS          equ	3743	;# 
  2942     0EA0                     RC0PPS          equ	3744	;# 
  2943     0EA1                     RC1PPS          equ	3745	;# 
  2944     0EA2                     RC2PPS          equ	3746	;# 
  2945     0EA3                     RC3PPS          equ	3747	;# 
  2946     0EA4                     RC4PPS          equ	3748	;# 
  2947     0EA5                     RC5PPS          equ	3749	;# 
  2948     0EA6                     RC6PPS          equ	3750	;# 
  2949     0EA7                     RC7PPS          equ	3751	;# 
  2950     0F0F                     CLCDATA         equ	3855	;# 
  2951     0F10                     CLC1CON         equ	3856	;# 
  2952     0F11                     CLC1POL         equ	3857	;# 
  2953     0F12                     CLC1SEL0        equ	3858	;# 
  2954     0F13                     CLC1SEL1        equ	3859	;# 
  2955     0F14                     CLC1SEL2        equ	3860	;# 
  2956     0F15                     CLC1SEL3        equ	3861	;# 
  2957     0F16                     CLC1GLS0        equ	3862	;# 
  2958     0F17                     CLC1GLS1        equ	3863	;# 
  2959     0F18                     CLC1GLS2        equ	3864	;# 
  2960     0F19                     CLC1GLS3        equ	3865	;# 
  2961     0F1A                     CLC2CON         equ	3866	;# 
  2962     0F1B                     CLC2POL         equ	3867	;# 
  2963     0F1C                     CLC2SEL0        equ	3868	;# 
  2964     0F1D                     CLC2SEL1        equ	3869	;# 
  2965     0F1E                     CLC2SEL2        equ	3870	;# 
  2966     0F1F                     CLC2SEL3        equ	3871	;# 
  2967     0F20                     CLC2GLS0        equ	3872	;# 
  2968     0F21                     CLC2GLS1        equ	3873	;# 
  2969     0F22                     CLC2GLS2        equ	3874	;# 
  2970     0F23                     CLC2GLS3        equ	3875	;# 
  2971     0F24                     CLC3CON         equ	3876	;# 
  2972     0F25                     CLC3POL         equ	3877	;# 
  2973     0F26                     CLC3SEL0        equ	3878	;# 
  2974     0F27                     CLC3SEL1        equ	3879	;# 
  2975     0F28                     CLC3SEL2        equ	3880	;# 
  2976     0F29                     CLC3SEL3        equ	3881	;# 
  2977     0F2A                     CLC3GLS0        equ	3882	;# 
  2978     0F2B                     CLC3GLS1        equ	3883	;# 
  2979     0F2C                     CLC3GLS2        equ	3884	;# 
  2980     0F2D                     CLC3GLS3        equ	3885	;# 
  2981     0F2E                     CLC4CON         equ	3886	;# 
  2982     0F2F                     CLC4POL         equ	3887	;# 
  2983     0F30                     CLC4SEL0        equ	3888	;# 
  2984     0F31                     CLC4SEL1        equ	3889	;# 
  2985     0F32                     CLC4SEL2        equ	3890	;# 
  2986     0F33                     CLC4SEL3        equ	3891	;# 
  2987     0F34                     CLC4GLS0        equ	3892	;# 
  2988     0F35                     CLC4GLS1        equ	3893	;# 
  2989     0F36                     CLC4GLS2        equ	3894	;# 
  2990     0F37                     CLC4GLS3        equ	3895	;# 
  2991     0FE4                     STATUS_SHAD     equ	4068	;# 
  2992     0FE5                     WREG_SHAD       equ	4069	;# 
  2993     0FE6                     BSR_SHAD        equ	4070	;# 
  2994     0FE7                     PCLATH_SHAD     equ	4071	;# 
  2995     0FE8                     FSR0L_SHAD      equ	4072	;# 
  2996     0FE9                     FSR0H_SHAD      equ	4073	;# 
  2997     0FEA                     FSR1L_SHAD      equ	4074	;# 
  2998     0FEB                     FSR1H_SHAD      equ	4075	;# 
  2999     0FED                     STKPTR          equ	4077	;# 
  3000     0FEE                     TOSL            equ	4078	;# 
  3001     0FEF                     TOSH            equ	4079	;# 
  3002     0000                     INDF0           equ	0	;# 
  3003     0001                     INDF1           equ	1	;# 
  3004     0002                     PCL             equ	2	;# 
  3005     0003                     STATUS          equ	3	;# 
  3006     0004                     FSR0L           equ	4	;# 
  3007     0005                     FSR0H           equ	5	;# 
  3008     0006                     FSR1L           equ	6	;# 
  3009     0007                     FSR1H           equ	7	;# 
  3010     0008                     BSR             equ	8	;# 
  3011     0009                     WREG            equ	9	;# 
  3012     000A                     PCLATH          equ	10	;# 
  3013     000B                     INTCON          equ	11	;# 
  3014     000C                     PORTA           equ	12	;# 
  3015     000D                     PORTB           equ	13	;# 
  3016     000E                     PORTC           equ	14	;# 
  3017     0010                     PIR0            equ	16	;# 
  3018     0011                     PIR1            equ	17	;# 
  3019     0012                     PIR2            equ	18	;# 
  3020     0013                     PIR3            equ	19	;# 
  3021     0014                     PIR4            equ	20	;# 
  3022     0015                     TMR0L           equ	21	;# 
  3023     0015                     TMR0            equ	21	;# 
  3024     0016                     TMR0H           equ	22	;# 
  3025     0016                     PR0             equ	22	;# 
  3026     0017                     T0CON0          equ	23	;# 
  3027     0018                     T0CON1          equ	24	;# 
  3028     0019                     TMR1            equ	25	;# 
  3029     0019                     TMR1L           equ	25	;# 
  3030     001A                     TMR1H           equ	26	;# 
  3031     001B                     T1CON           equ	27	;# 
  3032     001C                     T1GCON          equ	28	;# 
  3033     001D                     TMR2            equ	29	;# 
  3034     001E                     PR2             equ	30	;# 
  3035     001F                     T2CON           equ	31	;# 
  3036     008C                     TRISA           equ	140	;# 
  3037     008D                     TRISB           equ	141	;# 
  3038     008E                     TRISC           equ	142	;# 
  3039     0090                     PIE0            equ	144	;# 
  3040     0091                     PIE1            equ	145	;# 
  3041     0092                     PIE2            equ	146	;# 
  3042     0093                     PIE3            equ	147	;# 
  3043     0094                     PIE4            equ	148	;# 
  3044     0097                     WDTCON          equ	151	;# 
  3045     009B                     ADRES           equ	155	;# 
  3046     009B                     ADRESL          equ	155	;# 
  3047     009C                     ADRESH          equ	156	;# 
  3048     009D                     ADCON0          equ	157	;# 
  3049     009E                     ADCON1          equ	158	;# 
  3050     009F                     ADACT           equ	159	;# 
  3051     010C                     LATA            equ	268	;# 
  3052     010D                     LATB            equ	269	;# 
  3053     010E                     LATC            equ	270	;# 
  3054     0111                     CM1CON0         equ	273	;# 
  3055     0112                     CM1CON1         equ	274	;# 
  3056     0113                     CM2CON0         equ	275	;# 
  3057     0114                     CM2CON1         equ	276	;# 
  3058     0115                     CMOUT           equ	277	;# 
  3059     0116                     BORCON          equ	278	;# 
  3060     0117                     FVRCON          equ	279	;# 
  3061     0118                     DACCON0         equ	280	;# 
  3062     0119                     DACCON1         equ	281	;# 
  3063     018C                     ANSELA          equ	396	;# 
  3064     018D                     ANSELB          equ	397	;# 
  3065     018E                     ANSELC          equ	398	;# 
  3066     0197                     VREGCON         equ	407	;# 
  3067     0199                     RC1REG          equ	409	;# 
  3068     0199                     RCREG           equ	409	;# 
  3069     0199                     RCREG1          equ	409	;# 
  3070     019A                     TX1REG          equ	410	;# 
  3071     019A                     TXREG1          equ	410	;# 
  3072     019A                     TXREG           equ	410	;# 
  3073     019B                     SP1BRG          equ	411	;# 
  3074     019B                     SPBRG           equ	411	;# 
  3075     019B                     SP1BRGL         equ	411	;# 
  3076     019B                     SPBRG1          equ	411	;# 
  3077     019B                     SPBRGL          equ	411	;# 
  3078     019C                     SP1BRGH         equ	412	;# 
  3079     019C                     SPBRGH          equ	412	;# 
  3080     019C                     SPBRGH1         equ	412	;# 
  3081     019D                     RC1STA          equ	413	;# 
  3082     019D                     RCSTA1          equ	413	;# 
  3083     019D                     RCSTA           equ	413	;# 
  3084     019E                     TX1STA          equ	414	;# 
  3085     019E                     TXSTA1          equ	414	;# 
  3086     019E                     TXSTA           equ	414	;# 
  3087     019F                     BAUD1CON        equ	415	;# 
  3088     019F                     BAUDCON1        equ	415	;# 
  3089     019F                     BAUDCTL1        equ	415	;# 
  3090     019F                     BAUDCON         equ	415	;# 
  3091     019F                     BAUDCTL         equ	415	;# 
  3092     020C                     WPUA            equ	524	;# 
  3093     020D                     WPUB            equ	525	;# 
  3094     020E                     WPUC            equ	526	;# 
  3095     0211                     SSP1BUF         equ	529	;# 
  3096     0211                     SSPBUF          equ	529	;# 
  3097     0212                     SSP1ADD         equ	530	;# 
  3098     0212                     SSPADD          equ	530	;# 
  3099     0213                     SSP1MSK         equ	531	;# 
  3100     0213                     SSPMSK          equ	531	;# 
  3101     0214                     SSP1STAT        equ	532	;# 
  3102     0214                     SSPSTAT         equ	532	;# 
  3103     0215                     SSP1CON1        equ	533	;# 
  3104     0215                     SSPCON          equ	533	;# 
  3105     0215                     SSPCON1         equ	533	;# 
  3106     0215                     SSP1CON         equ	533	;# 
  3107     0216                     SSP1CON2        equ	534	;# 
  3108     0216                     SSPCON2         equ	534	;# 
  3109     0217                     SSP1CON3        equ	535	;# 
  3110     0217                     SSPCON3         equ	535	;# 
  3111     0219                     SSP2BUF         equ	537	;# 
  3112     021A                     SSP2ADD         equ	538	;# 
  3113     021B                     SSP2MSK         equ	539	;# 
  3114     021C                     SSP2STAT        equ	540	;# 
  3115     021D                     SSP2CON1        equ	541	;# 
  3116     021D                     SSP2CON         equ	541	;# 
  3117     021E                     SSP2CON2        equ	542	;# 
  3118     021F                     SSP2CON3        equ	543	;# 
  3119     028C                     ODCONA          equ	652	;# 
  3120     028D                     ODCONB          equ	653	;# 
  3121     028E                     ODCONC          equ	654	;# 
  3122     0291                     CCPR1           equ	657	;# 
  3123     0291                     CCPR1L          equ	657	;# 
  3124     0292                     CCPR1H          equ	658	;# 
  3125     0293                     CCP1CON         equ	659	;# 
  3126     0294                     CCP1CAP         equ	660	;# 
  3127     0295                     CCPR2           equ	661	;# 
  3128     0295                     CCPR2L          equ	661	;# 
  3129     0296                     CCPR2H          equ	662	;# 
  3130     0297                     CCP2CON         equ	663	;# 
  3131     0298                     CCP2CAP         equ	664	;# 
  3132     029F                     CCPTMRS         equ	671	;# 
  3133     030C                     SLRCONA         equ	780	;# 
  3134     030D                     SLRCONB         equ	781	;# 
  3135     030E                     SLRCONC         equ	782	;# 
  3136     0311                     CCPR3           equ	785	;# 
  3137     0311                     CCPR3L          equ	785	;# 
  3138     0312                     CCPR3H          equ	786	;# 
  3139     0313                     CCP3CON         equ	787	;# 
  3140     0314                     CCP3CAP         equ	788	;# 
  3141     0315                     CCPR4           equ	789	;# 
  3142     0315                     CCPR4L          equ	789	;# 
  3143     0316                     CCPR4H          equ	790	;# 
  3144     0317                     CCP4CON         equ	791	;# 
  3145     0318                     CCP4CAP         equ	792	;# 
  3146     038C                     INLVLA          equ	908	;# 
  3147     038D                     INLVLB          equ	909	;# 
  3148     038E                     INLVLC          equ	910	;# 
  3149     0391                     IOCAP           equ	913	;# 
  3150     0392                     IOCAN           equ	914	;# 
  3151     0393                     IOCAF           equ	915	;# 
  3152     0394                     IOCBP           equ	916	;# 
  3153     0395                     IOCBN           equ	917	;# 
  3154     0396                     IOCBF           equ	918	;# 
  3155     0397                     IOCCP           equ	919	;# 
  3156     0398                     IOCCN           equ	920	;# 
  3157     0399                     IOCCF           equ	921	;# 
  3158     039A                     CLKRCON         equ	922	;# 
  3159     039C                     MDCON           equ	924	;# 
  3160     039D                     MDSRC           equ	925	;# 
  3161     039E                     MDCARH          equ	926	;# 
  3162     039F                     MDCARL          equ	927	;# 
  3163     0411                     TMR3            equ	1041	;# 
  3164     0411                     TMR3L           equ	1041	;# 
  3165     0412                     TMR3H           equ	1042	;# 
  3166     0413                     T3CON           equ	1043	;# 
  3167     0414                     T3GCON          equ	1044	;# 
  3168     0415                     TMR4            equ	1045	;# 
  3169     0416                     PR4             equ	1046	;# 
  3170     0417                     T4CON           equ	1047	;# 
  3171     0418                     TMR5            equ	1048	;# 
  3172     0418                     TMR5L           equ	1048	;# 
  3173     0419                     TMR5H           equ	1049	;# 
  3174     041A                     T5CON           equ	1050	;# 
  3175     041B                     T5GCON          equ	1051	;# 
  3176     041C                     TMR6            equ	1052	;# 
  3177     041D                     PR6             equ	1053	;# 
  3178     041E                     T6CON           equ	1054	;# 
  3179     041F                     CCDCON          equ	1055	;# 
  3180     0498                     NCO1ACC         equ	1176	;# 
  3181     0498                     NCO1ACCL        equ	1176	;# 
  3182     0499                     NCO1ACCH        equ	1177	;# 
  3183     049A                     NCO1ACCU        equ	1178	;# 
  3184     049B                     NCO1INC         equ	1179	;# 
  3185     049B                     NCO1INCL        equ	1179	;# 
  3186     049C                     NCO1INCH        equ	1180	;# 
  3187     049D                     NCO1INCU        equ	1181	;# 
  3188     049E                     NCO1CON         equ	1182	;# 
  3189     049F                     NCO1CLK         equ	1183	;# 
  3190     0617                     PWM5DCL         equ	1559	;# 
  3191     0618                     PWM5DCH         equ	1560	;# 
  3192     0619                     PWM5CON         equ	1561	;# 
  3193     0619                     PWM5CON0        equ	1561	;# 
  3194     061A                     PWM6DCL         equ	1562	;# 
  3195     061B                     PWM6DCH         equ	1563	;# 
  3196     061C                     PWM6CON         equ	1564	;# 
  3197     061C                     PWM6CON0        equ	1564	;# 
  3198     061F                     PWMTMRS         equ	1567	;# 
  3199     0691                     CWG1CLKCON      equ	1681	;# 
  3200     0692                     CWG1DAT         equ	1682	;# 
  3201     0693                     CWG1DBR         equ	1683	;# 
  3202     0694                     CWG1DBF         equ	1684	;# 
  3203     0695                     CWG1CON0        equ	1685	;# 
  3204     0696                     CWG1CON1        equ	1686	;# 
  3205     0697                     CWG1AS0         equ	1687	;# 
  3206     0698                     CWG1AS1         equ	1688	;# 
  3207     0699                     CWG1STR         equ	1689	;# 
  3208     0711                     CWG2CLKCON      equ	1809	;# 
  3209     0712                     CWG2DAT         equ	1810	;# 
  3210     0713                     CWG2DBR         equ	1811	;# 
  3211     0714                     CWG2DBF         equ	1812	;# 
  3212     0715                     CWG2CON0        equ	1813	;# 
  3213     0716                     CWG2CON1        equ	1814	;# 
  3214     0717                     CWG2AS0         equ	1815	;# 
  3215     0718                     CWG2AS1         equ	1816	;# 
  3216     0719                     CWG2STR         equ	1817	;# 
  3217     0891                     NVMADR          equ	2193	;# 
  3218     0891                     EEADR           equ	2193	;# 
  3219     0891                     PMADR           equ	2193	;# 
  3220     0891                     NVMADRL         equ	2193	;# 
  3221     0891                     EEADRL          equ	2193	;# 
  3222     0891                     PMADRL          equ	2193	;# 
  3223     0892                     NVMADRH         equ	2194	;# 
  3224     0892                     EEADRH          equ	2194	;# 
  3225     0892                     PMADRH          equ	2194	;# 
  3226     0893                     NVMDAT          equ	2195	;# 
  3227     0893                     EEDAT           equ	2195	;# 
  3228     0893                     PMDAT           equ	2195	;# 
  3229     0893                     NVMDATL         equ	2195	;# 
  3230     0893                     EEDATL          equ	2195	;# 
  3231     0893                     PMDATL          equ	2195	;# 
  3232     0894                     NVMDATH         equ	2196	;# 
  3233     0894                     EEDATH          equ	2196	;# 
  3234     0894                     PMDATH          equ	2196	;# 
  3235     0895                     NVMCON1         equ	2197	;# 
  3236     0895                     EECON1          equ	2197	;# 
  3237     0895                     PMCON1          equ	2197	;# 
  3238     0896                     NVMCON2         equ	2198	;# 
  3239     0896                     EECON2          equ	2198	;# 
  3240     0896                     PMCON2          equ	2198	;# 
  3241     089B                     PCON0           equ	2203	;# 
  3242     0911                     PMD0            equ	2321	;# 
  3243     0912                     PMD1            equ	2322	;# 
  3244     0913                     PMD2            equ	2323	;# 
  3245     0914                     PMD3            equ	2324	;# 
  3246     0915                     PMD4            equ	2325	;# 
  3247     0916                     PMD5            equ	2326	;# 
  3248     0918                     CPUDOZE         equ	2328	;# 
  3249     0919                     OSCCON1         equ	2329	;# 
  3250     091A                     OSCCON2         equ	2330	;# 
  3251     091B                     OSCCON3         equ	2331	;# 
  3252     091C                     OSCSTAT1        equ	2332	;# 
  3253     091D                     OSCEN           equ	2333	;# 
  3254     091E                     OSCTUNE         equ	2334	;# 
  3255     091F                     OSCFRQ          equ	2335	;# 
  3256     0E0F                     PPSLOCK         equ	3599	;# 
  3257     0E10                     INTPPS          equ	3600	;# 
  3258     0E11                     T0CKIPPS        equ	3601	;# 
  3259     0E12                     T1CKIPPS        equ	3602	;# 
  3260     0E13                     T1GPPS          equ	3603	;# 
  3261     0E14                     CCP1PPS         equ	3604	;# 
  3262     0E15                     CCP2PPS         equ	3605	;# 
  3263     0E16                     CCP3PPS         equ	3606	;# 
  3264     0E17                     CCP4PPS         equ	3607	;# 
  3265     0E18                     CWG1PPS         equ	3608	;# 
  3266     0E19                     CWG2PPS         equ	3609	;# 
  3267     0E1A                     MDCIN1PPS       equ	3610	;# 
  3268     0E1B                     MDCIN2PPS       equ	3611	;# 
  3269     0E1C                     MDMINPPS        equ	3612	;# 
  3270     0E1D                     SSP2CLKPPS      equ	3613	;# 
  3271     0E1E                     SSP2DATPPS      equ	3614	;# 
  3272     0E1F                     SSP2SSPPS       equ	3615	;# 
  3273     0E20                     SSP1CLKPPS      equ	3616	;# 
  3274     0E21                     SSP1DATPPS      equ	3617	;# 
  3275     0E22                     SSP1SSPPS       equ	3618	;# 
  3276     0E24                     RXPPS           equ	3620	;# 
  3277     0E25                     TXPPS           equ	3621	;# 
  3278     0E28                     CLCIN0PPS       equ	3624	;# 
  3279     0E29                     CLCIN1PPS       equ	3625	;# 
  3280     0E2A                     CLCIN2PPS       equ	3626	;# 
  3281     0E2B                     CLCIN3PPS       equ	3627	;# 
  3282     0E2C                     T3CKIPPS        equ	3628	;# 
  3283     0E2D                     T3GPPS          equ	3629	;# 
  3284     0E2E                     T5CKIPPS        equ	3630	;# 
  3285     0E2F                     T5GPPS          equ	3631	;# 
  3286     0E90                     RA0PPS          equ	3728	;# 
  3287     0E91                     RA1PPS          equ	3729	;# 
  3288     0E92                     RA2PPS          equ	3730	;# 
  3289     0E94                     RA4PPS          equ	3732	;# 
  3290     0E95                     RA5PPS          equ	3733	;# 
  3291     0E9C                     RB4PPS          equ	3740	;# 
  3292     0E9D                     RB5PPS          equ	3741	;# 
  3293     0E9E                     RB6PPS          equ	3742	;# 
  3294     0E9F                     RB7PPS          equ	3743	;# 
  3295     0EA0                     RC0PPS          equ	3744	;# 
  3296     0EA1                     RC1PPS          equ	3745	;# 
  3297     0EA2                     RC2PPS          equ	3746	;# 
  3298     0EA3                     RC3PPS          equ	3747	;# 
  3299     0EA4                     RC4PPS          equ	3748	;# 
  3300     0EA5                     RC5PPS          equ	3749	;# 
  3301     0EA6                     RC6PPS          equ	3750	;# 
  3302     0EA7                     RC7PPS          equ	3751	;# 
  3303     0F0F                     CLCDATA         equ	3855	;# 
  3304     0F10                     CLC1CON         equ	3856	;# 
  3305     0F11                     CLC1POL         equ	3857	;# 
  3306     0F12                     CLC1SEL0        equ	3858	;# 
  3307     0F13                     CLC1SEL1        equ	3859	;# 
  3308     0F14                     CLC1SEL2        equ	3860	;# 
  3309     0F15                     CLC1SEL3        equ	3861	;# 
  3310     0F16                     CLC1GLS0        equ	3862	;# 
  3311     0F17                     CLC1GLS1        equ	3863	;# 
  3312     0F18                     CLC1GLS2        equ	3864	;# 
  3313     0F19                     CLC1GLS3        equ	3865	;# 
  3314     0F1A                     CLC2CON         equ	3866	;# 
  3315     0F1B                     CLC2POL         equ	3867	;# 
  3316     0F1C                     CLC2SEL0        equ	3868	;# 
  3317     0F1D                     CLC2SEL1        equ	3869	;# 
  3318     0F1E                     CLC2SEL2        equ	3870	;# 
  3319     0F1F                     CLC2SEL3        equ	3871	;# 
  3320     0F20                     CLC2GLS0        equ	3872	;# 
  3321     0F21                     CLC2GLS1        equ	3873	;# 
  3322     0F22                     CLC2GLS2        equ	3874	;# 
  3323     0F23                     CLC2GLS3        equ	3875	;# 
  3324     0F24                     CLC3CON         equ	3876	;# 
  3325     0F25                     CLC3POL         equ	3877	;# 
  3326     0F26                     CLC3SEL0        equ	3878	;# 
  3327     0F27                     CLC3SEL1        equ	3879	;# 
  3328     0F28                     CLC3SEL2        equ	3880	;# 
  3329     0F29                     CLC3SEL3        equ	3881	;# 
  3330     0F2A                     CLC3GLS0        equ	3882	;# 
  3331     0F2B                     CLC3GLS1        equ	3883	;# 
  3332     0F2C                     CLC3GLS2        equ	3884	;# 
  3333     0F2D                     CLC3GLS3        equ	3885	;# 
  3334     0F2E                     CLC4CON         equ	3886	;# 
  3335     0F2F                     CLC4POL         equ	3887	;# 
  3336     0F30                     CLC4SEL0        equ	3888	;# 
  3337     0F31                     CLC4SEL1        equ	3889	;# 
  3338     0F32                     CLC4SEL2        equ	3890	;# 
  3339     0F33                     CLC4SEL3        equ	3891	;# 
  3340     0F34                     CLC4GLS0        equ	3892	;# 
  3341     0F35                     CLC4GLS1        equ	3893	;# 
  3342     0F36                     CLC4GLS2        equ	3894	;# 
  3343     0F37                     CLC4GLS3        equ	3895	;# 
  3344     0FE4                     STATUS_SHAD     equ	4068	;# 
  3345     0FE5                     WREG_SHAD       equ	4069	;# 
  3346     0FE6                     BSR_SHAD        equ	4070	;# 
  3347     0FE7                     PCLATH_SHAD     equ	4071	;# 
  3348     0FE8                     FSR0L_SHAD      equ	4072	;# 
  3349     0FE9                     FSR0H_SHAD      equ	4073	;# 
  3350     0FEA                     FSR1L_SHAD      equ	4074	;# 
  3351     0FEB                     FSR1H_SHAD      equ	4075	;# 
  3352     0FED                     STKPTR          equ	4077	;# 
  3353     0FEE                     TOSL            equ	4078	;# 
  3354     0FEF                     TOSH            equ	4079	;# 
  3355     0000                     INDF0           equ	0	;# 
  3356     0001                     INDF1           equ	1	;# 
  3357     0002                     PCL             equ	2	;# 
  3358     0003                     STATUS          equ	3	;# 
  3359     0004                     FSR0L           equ	4	;# 
  3360     0005                     FSR0H           equ	5	;# 
  3361     0006                     FSR1L           equ	6	;# 
  3362     0007                     FSR1H           equ	7	;# 
  3363     0008                     BSR             equ	8	;# 
  3364     0009                     WREG            equ	9	;# 
  3365     000A                     PCLATH          equ	10	;# 
  3366     000B                     INTCON          equ	11	;# 
  3367     000C                     PORTA           equ	12	;# 
  3368     000D                     PORTB           equ	13	;# 
  3369     000E                     PORTC           equ	14	;# 
  3370     0010                     PIR0            equ	16	;# 
  3371     0011                     PIR1            equ	17	;# 
  3372     0012                     PIR2            equ	18	;# 
  3373     0013                     PIR3            equ	19	;# 
  3374     0014                     PIR4            equ	20	;# 
  3375     0015                     TMR0L           equ	21	;# 
  3376     0015                     TMR0            equ	21	;# 
  3377     0016                     TMR0H           equ	22	;# 
  3378     0016                     PR0             equ	22	;# 
  3379     0017                     T0CON0          equ	23	;# 
  3380     0018                     T0CON1          equ	24	;# 
  3381     0019                     TMR1            equ	25	;# 
  3382     0019                     TMR1L           equ	25	;# 
  3383     001A                     TMR1H           equ	26	;# 
  3384     001B                     T1CON           equ	27	;# 
  3385     001C                     T1GCON          equ	28	;# 
  3386     001D                     TMR2            equ	29	;# 
  3387     001E                     PR2             equ	30	;# 
  3388     001F                     T2CON           equ	31	;# 
  3389     008C                     TRISA           equ	140	;# 
  3390     008D                     TRISB           equ	141	;# 
  3391     008E                     TRISC           equ	142	;# 
  3392     0090                     PIE0            equ	144	;# 
  3393     0091                     PIE1            equ	145	;# 
  3394     0092                     PIE2            equ	146	;# 
  3395     0093                     PIE3            equ	147	;# 
  3396     0094                     PIE4            equ	148	;# 
  3397     0097                     WDTCON          equ	151	;# 
  3398     009B                     ADRES           equ	155	;# 
  3399     009B                     ADRESL          equ	155	;# 
  3400     009C                     ADRESH          equ	156	;# 
  3401     009D                     ADCON0          equ	157	;# 
  3402     009E                     ADCON1          equ	158	;# 
  3403     009F                     ADACT           equ	159	;# 
  3404     010C                     LATA            equ	268	;# 
  3405     010D                     LATB            equ	269	;# 
  3406     010E                     LATC            equ	270	;# 
  3407     0111                     CM1CON0         equ	273	;# 
  3408     0112                     CM1CON1         equ	274	;# 
  3409     0113                     CM2CON0         equ	275	;# 
  3410     0114                     CM2CON1         equ	276	;# 
  3411     0115                     CMOUT           equ	277	;# 
  3412     0116                     BORCON          equ	278	;# 
  3413     0117                     FVRCON          equ	279	;# 
  3414     0118                     DACCON0         equ	280	;# 
  3415     0119                     DACCON1         equ	281	;# 
  3416     018C                     ANSELA          equ	396	;# 
  3417     018D                     ANSELB          equ	397	;# 
  3418     018E                     ANSELC          equ	398	;# 
  3419     0197                     VREGCON         equ	407	;# 
  3420     0199                     RC1REG          equ	409	;# 
  3421     0199                     RCREG           equ	409	;# 
  3422     0199                     RCREG1          equ	409	;# 
  3423     019A                     TX1REG          equ	410	;# 
  3424     019A                     TXREG1          equ	410	;# 
  3425     019A                     TXREG           equ	410	;# 
  3426     019B                     SP1BRG          equ	411	;# 
  3427     019B                     SPBRG           equ	411	;# 
  3428     019B                     SP1BRGL         equ	411	;# 
  3429     019B                     SPBRG1          equ	411	;# 
  3430     019B                     SPBRGL          equ	411	;# 
  3431     019C                     SP1BRGH         equ	412	;# 
  3432     019C                     SPBRGH          equ	412	;# 
  3433     019C                     SPBRGH1         equ	412	;# 
  3434     019D                     RC1STA          equ	413	;# 
  3435     019D                     RCSTA1          equ	413	;# 
  3436     019D                     RCSTA           equ	413	;# 
  3437     019E                     TX1STA          equ	414	;# 
  3438     019E                     TXSTA1          equ	414	;# 
  3439     019E                     TXSTA           equ	414	;# 
  3440     019F                     BAUD1CON        equ	415	;# 
  3441     019F                     BAUDCON1        equ	415	;# 
  3442     019F                     BAUDCTL1        equ	415	;# 
  3443     019F                     BAUDCON         equ	415	;# 
  3444     019F                     BAUDCTL         equ	415	;# 
  3445     020C                     WPUA            equ	524	;# 
  3446     020D                     WPUB            equ	525	;# 
  3447     020E                     WPUC            equ	526	;# 
  3448     0211                     SSP1BUF         equ	529	;# 
  3449     0211                     SSPBUF          equ	529	;# 
  3450     0212                     SSP1ADD         equ	530	;# 
  3451     0212                     SSPADD          equ	530	;# 
  3452     0213                     SSP1MSK         equ	531	;# 
  3453     0213                     SSPMSK          equ	531	;# 
  3454     0214                     SSP1STAT        equ	532	;# 
  3455     0214                     SSPSTAT         equ	532	;# 
  3456     0215                     SSP1CON1        equ	533	;# 
  3457     0215                     SSPCON          equ	533	;# 
  3458     0215                     SSPCON1         equ	533	;# 
  3459     0215                     SSP1CON         equ	533	;# 
  3460     0216                     SSP1CON2        equ	534	;# 
  3461     0216                     SSPCON2         equ	534	;# 
  3462     0217                     SSP1CON3        equ	535	;# 
  3463     0217                     SSPCON3         equ	535	;# 
  3464     0219                     SSP2BUF         equ	537	;# 
  3465     021A                     SSP2ADD         equ	538	;# 
  3466     021B                     SSP2MSK         equ	539	;# 
  3467     021C                     SSP2STAT        equ	540	;# 
  3468     021D                     SSP2CON1        equ	541	;# 
  3469     021D                     SSP2CON         equ	541	;# 
  3470     021E                     SSP2CON2        equ	542	;# 
  3471     021F                     SSP2CON3        equ	543	;# 
  3472     028C                     ODCONA          equ	652	;# 
  3473     028D                     ODCONB          equ	653	;# 
  3474     028E                     ODCONC          equ	654	;# 
  3475     0291                     CCPR1           equ	657	;# 
  3476     0291                     CCPR1L          equ	657	;# 
  3477     0292                     CCPR1H          equ	658	;# 
  3478     0293                     CCP1CON         equ	659	;# 
  3479     0294                     CCP1CAP         equ	660	;# 
  3480     0295                     CCPR2           equ	661	;# 
  3481     0295                     CCPR2L          equ	661	;# 
  3482     0296                     CCPR2H          equ	662	;# 
  3483     0297                     CCP2CON         equ	663	;# 
  3484     0298                     CCP2CAP         equ	664	;# 
  3485     029F                     CCPTMRS         equ	671	;# 
  3486     030C                     SLRCONA         equ	780	;# 
  3487     030D                     SLRCONB         equ	781	;# 
  3488     030E                     SLRCONC         equ	782	;# 
  3489     0311                     CCPR3           equ	785	;# 
  3490     0311                     CCPR3L          equ	785	;# 
  3491     0312                     CCPR3H          equ	786	;# 
  3492     0313                     CCP3CON         equ	787	;# 
  3493     0314                     CCP3CAP         equ	788	;# 
  3494     0315                     CCPR4           equ	789	;# 
  3495     0315                     CCPR4L          equ	789	;# 
  3496     0316                     CCPR4H          equ	790	;# 
  3497     0317                     CCP4CON         equ	791	;# 
  3498     0318                     CCP4CAP         equ	792	;# 
  3499     038C                     INLVLA          equ	908	;# 
  3500     038D                     INLVLB          equ	909	;# 
  3501     038E                     INLVLC          equ	910	;# 
  3502     0391                     IOCAP           equ	913	;# 
  3503     0392                     IOCAN           equ	914	;# 
  3504     0393                     IOCAF           equ	915	;# 
  3505     0394                     IOCBP           equ	916	;# 
  3506     0395                     IOCBN           equ	917	;# 
  3507     0396                     IOCBF           equ	918	;# 
  3508     0397                     IOCCP           equ	919	;# 
  3509     0398                     IOCCN           equ	920	;# 
  3510     0399                     IOCCF           equ	921	;# 
  3511     039A                     CLKRCON         equ	922	;# 
  3512     039C                     MDCON           equ	924	;# 
  3513     039D                     MDSRC           equ	925	;# 
  3514     039E                     MDCARH          equ	926	;# 
  3515     039F                     MDCARL          equ	927	;# 
  3516     0411                     TMR3            equ	1041	;# 
  3517     0411                     TMR3L           equ	1041	;# 
  3518     0412                     TMR3H           equ	1042	;# 
  3519     0413                     T3CON           equ	1043	;# 
  3520     0414                     T3GCON          equ	1044	;# 
  3521     0415                     TMR4            equ	1045	;# 
  3522     0416                     PR4             equ	1046	;# 
  3523     0417                     T4CON           equ	1047	;# 
  3524     0418                     TMR5            equ	1048	;# 
  3525     0418                     TMR5L           equ	1048	;# 
  3526     0419                     TMR5H           equ	1049	;# 
  3527     041A                     T5CON           equ	1050	;# 
  3528     041B                     T5GCON          equ	1051	;# 
  3529     041C                     TMR6            equ	1052	;# 
  3530     041D                     PR6             equ	1053	;# 
  3531     041E                     T6CON           equ	1054	;# 
  3532     041F                     CCDCON          equ	1055	;# 
  3533     0498                     NCO1ACC         equ	1176	;# 
  3534     0498                     NCO1ACCL        equ	1176	;# 
  3535     0499                     NCO1ACCH        equ	1177	;# 
  3536     049A                     NCO1ACCU        equ	1178	;# 
  3537     049B                     NCO1INC         equ	1179	;# 
  3538     049B                     NCO1INCL        equ	1179	;# 
  3539     049C                     NCO1INCH        equ	1180	;# 
  3540     049D                     NCO1INCU        equ	1181	;# 
  3541     049E                     NCO1CON         equ	1182	;# 
  3542     049F                     NCO1CLK         equ	1183	;# 
  3543     0617                     PWM5DCL         equ	1559	;# 
  3544     0618                     PWM5DCH         equ	1560	;# 
  3545     0619                     PWM5CON         equ	1561	;# 
  3546     0619                     PWM5CON0        equ	1561	;# 
  3547     061A                     PWM6DCL         equ	1562	;# 
  3548     061B                     PWM6DCH         equ	1563	;# 
  3549     061C                     PWM6CON         equ	1564	;# 
  3550     061C                     PWM6CON0        equ	1564	;# 
  3551     061F                     PWMTMRS         equ	1567	;# 
  3552     0691                     CWG1CLKCON      equ	1681	;# 
  3553     0692                     CWG1DAT         equ	1682	;# 
  3554     0693                     CWG1DBR         equ	1683	;# 
  3555     0694                     CWG1DBF         equ	1684	;# 
  3556     0695                     CWG1CON0        equ	1685	;# 
  3557     0696                     CWG1CON1        equ	1686	;# 
  3558     0697                     CWG1AS0         equ	1687	;# 
  3559     0698                     CWG1AS1         equ	1688	;# 
  3560     0699                     CWG1STR         equ	1689	;# 
  3561     0711                     CWG2CLKCON      equ	1809	;# 
  3562     0712                     CWG2DAT         equ	1810	;# 
  3563     0713                     CWG2DBR         equ	1811	;# 
  3564     0714                     CWG2DBF         equ	1812	;# 
  3565     0715                     CWG2CON0        equ	1813	;# 
  3566     0716                     CWG2CON1        equ	1814	;# 
  3567     0717                     CWG2AS0         equ	1815	;# 
  3568     0718                     CWG2AS1         equ	1816	;# 
  3569     0719                     CWG2STR         equ	1817	;# 
  3570     0891                     NVMADR          equ	2193	;# 
  3571     0891                     EEADR           equ	2193	;# 
  3572     0891                     PMADR           equ	2193	;# 
  3573     0891                     NVMADRL         equ	2193	;# 
  3574     0891                     EEADRL          equ	2193	;# 
  3575     0891                     PMADRL          equ	2193	;# 
  3576     0892                     NVMADRH         equ	2194	;# 
  3577     0892                     EEADRH          equ	2194	;# 
  3578     0892                     PMADRH          equ	2194	;# 
  3579     0893                     NVMDAT          equ	2195	;# 
  3580     0893                     EEDAT           equ	2195	;# 
  3581     0893                     PMDAT           equ	2195	;# 
  3582     0893                     NVMDATL         equ	2195	;# 
  3583     0893                     EEDATL          equ	2195	;# 
  3584     0893                     PMDATL          equ	2195	;# 
  3585     0894                     NVMDATH         equ	2196	;# 
  3586     0894                     EEDATH          equ	2196	;# 
  3587     0894                     PMDATH          equ	2196	;# 
  3588     0895                     NVMCON1         equ	2197	;# 
  3589     0895                     EECON1          equ	2197	;# 
  3590     0895                     PMCON1          equ	2197	;# 
  3591     0896                     NVMCON2         equ	2198	;# 
  3592     0896                     EECON2          equ	2198	;# 
  3593     0896                     PMCON2          equ	2198	;# 
  3594     089B                     PCON0           equ	2203	;# 
  3595     0911                     PMD0            equ	2321	;# 
  3596     0912                     PMD1            equ	2322	;# 
  3597     0913                     PMD2            equ	2323	;# 
  3598     0914                     PMD3            equ	2324	;# 
  3599     0915                     PMD4            equ	2325	;# 
  3600     0916                     PMD5            equ	2326	;# 
  3601     0918                     CPUDOZE         equ	2328	;# 
  3602     0919                     OSCCON1         equ	2329	;# 
  3603     091A                     OSCCON2         equ	2330	;# 
  3604     091B                     OSCCON3         equ	2331	;# 
  3605     091C                     OSCSTAT1        equ	2332	;# 
  3606     091D                     OSCEN           equ	2333	;# 
  3607     091E                     OSCTUNE         equ	2334	;# 
  3608     091F                     OSCFRQ          equ	2335	;# 
  3609     0E0F                     PPSLOCK         equ	3599	;# 
  3610     0E10                     INTPPS          equ	3600	;# 
  3611     0E11                     T0CKIPPS        equ	3601	;# 
  3612     0E12                     T1CKIPPS        equ	3602	;# 
  3613     0E13                     T1GPPS          equ	3603	;# 
  3614     0E14                     CCP1PPS         equ	3604	;# 
  3615     0E15                     CCP2PPS         equ	3605	;# 
  3616     0E16                     CCP3PPS         equ	3606	;# 
  3617     0E17                     CCP4PPS         equ	3607	;# 
  3618     0E18                     CWG1PPS         equ	3608	;# 
  3619     0E19                     CWG2PPS         equ	3609	;# 
  3620     0E1A                     MDCIN1PPS       equ	3610	;# 
  3621     0E1B                     MDCIN2PPS       equ	3611	;# 
  3622     0E1C                     MDMINPPS        equ	3612	;# 
  3623     0E1D                     SSP2CLKPPS      equ	3613	;# 
  3624     0E1E                     SSP2DATPPS      equ	3614	;# 
  3625     0E1F                     SSP2SSPPS       equ	3615	;# 
  3626     0E20                     SSP1CLKPPS      equ	3616	;# 
  3627     0E21                     SSP1DATPPS      equ	3617	;# 
  3628     0E22                     SSP1SSPPS       equ	3618	;# 
  3629     0E24                     RXPPS           equ	3620	;# 
  3630     0E25                     TXPPS           equ	3621	;# 
  3631     0E28                     CLCIN0PPS       equ	3624	;# 
  3632     0E29                     CLCIN1PPS       equ	3625	;# 
  3633     0E2A                     CLCIN2PPS       equ	3626	;# 
  3634     0E2B                     CLCIN3PPS       equ	3627	;# 
  3635     0E2C                     T3CKIPPS        equ	3628	;# 
  3636     0E2D                     T3GPPS          equ	3629	;# 
  3637     0E2E                     T5CKIPPS        equ	3630	;# 
  3638     0E2F                     T5GPPS          equ	3631	;# 
  3639     0E90                     RA0PPS          equ	3728	;# 
  3640     0E91                     RA1PPS          equ	3729	;# 
  3641     0E92                     RA2PPS          equ	3730	;# 
  3642     0E94                     RA4PPS          equ	3732	;# 
  3643     0E95                     RA5PPS          equ	3733	;# 
  3644     0E9C                     RB4PPS          equ	3740	;# 
  3645     0E9D                     RB5PPS          equ	3741	;# 
  3646     0E9E                     RB6PPS          equ	3742	;# 
  3647     0E9F                     RB7PPS          equ	3743	;# 
  3648     0EA0                     RC0PPS          equ	3744	;# 
  3649     0EA1                     RC1PPS          equ	3745	;# 
  3650     0EA2                     RC2PPS          equ	3746	;# 
  3651     0EA3                     RC3PPS          equ	3747	;# 
  3652     0EA4                     RC4PPS          equ	3748	;# 
  3653     0EA5                     RC5PPS          equ	3749	;# 
  3654     0EA6                     RC6PPS          equ	3750	;# 
  3655     0EA7                     RC7PPS          equ	3751	;# 
  3656     0F0F                     CLCDATA         equ	3855	;# 
  3657     0F10                     CLC1CON         equ	3856	;# 
  3658     0F11                     CLC1POL         equ	3857	;# 
  3659     0F12                     CLC1SEL0        equ	3858	;# 
  3660     0F13                     CLC1SEL1        equ	3859	;# 
  3661     0F14                     CLC1SEL2        equ	3860	;# 
  3662     0F15                     CLC1SEL3        equ	3861	;# 
  3663     0F16                     CLC1GLS0        equ	3862	;# 
  3664     0F17                     CLC1GLS1        equ	3863	;# 
  3665     0F18                     CLC1GLS2        equ	3864	;# 
  3666     0F19                     CLC1GLS3        equ	3865	;# 
  3667     0F1A                     CLC2CON         equ	3866	;# 
  3668     0F1B                     CLC2POL         equ	3867	;# 
  3669     0F1C                     CLC2SEL0        equ	3868	;# 
  3670     0F1D                     CLC2SEL1        equ	3869	;# 
  3671     0F1E                     CLC2SEL2        equ	3870	;# 
  3672     0F1F                     CLC2SEL3        equ	3871	;# 
  3673     0F20                     CLC2GLS0        equ	3872	;# 
  3674     0F21                     CLC2GLS1        equ	3873	;# 
  3675     0F22                     CLC2GLS2        equ	3874	;# 
  3676     0F23                     CLC2GLS3        equ	3875	;# 
  3677     0F24                     CLC3CON         equ	3876	;# 
  3678     0F25                     CLC3POL         equ	3877	;# 
  3679     0F26                     CLC3SEL0        equ	3878	;# 
  3680     0F27                     CLC3SEL1        equ	3879	;# 
  3681     0F28                     CLC3SEL2        equ	3880	;# 
  3682     0F29                     CLC3SEL3        equ	3881	;# 
  3683     0F2A                     CLC3GLS0        equ	3882	;# 
  3684     0F2B                     CLC3GLS1        equ	3883	;# 
  3685     0F2C                     CLC3GLS2        equ	3884	;# 
  3686     0F2D                     CLC3GLS3        equ	3885	;# 
  3687     0F2E                     CLC4CON         equ	3886	;# 
  3688     0F2F                     CLC4POL         equ	3887	;# 
  3689     0F30                     CLC4SEL0        equ	3888	;# 
  3690     0F31                     CLC4SEL1        equ	3889	;# 
  3691     0F32                     CLC4SEL2        equ	3890	;# 
  3692     0F33                     CLC4SEL3        equ	3891	;# 
  3693     0F34                     CLC4GLS0        equ	3892	;# 
  3694     0F35                     CLC4GLS1        equ	3893	;# 
  3695     0F36                     CLC4GLS2        equ	3894	;# 
  3696     0F37                     CLC4GLS3        equ	3895	;# 
  3697     0FE4                     STATUS_SHAD     equ	4068	;# 
  3698     0FE5                     WREG_SHAD       equ	4069	;# 
  3699     0FE6                     BSR_SHAD        equ	4070	;# 
  3700     0FE7                     PCLATH_SHAD     equ	4071	;# 
  3701     0FE8                     FSR0L_SHAD      equ	4072	;# 
  3702     0FE9                     FSR0H_SHAD      equ	4073	;# 
  3703     0FEA                     FSR1L_SHAD      equ	4074	;# 
  3704     0FEB                     FSR1H_SHAD      equ	4075	;# 
  3705     0FED                     STKPTR          equ	4077	;# 
  3706     0FEE                     TOSL            equ	4078	;# 
  3707     0FEF                     TOSH            equ	4079	;# 
  3708     0000                     INDF0           equ	0	;# 
  3709     0001                     INDF1           equ	1	;# 
  3710     0002                     PCL             equ	2	;# 
  3711     0003                     STATUS          equ	3	;# 
  3712     0004                     FSR0L           equ	4	;# 
  3713     0005                     FSR0H           equ	5	;# 
  3714     0006                     FSR1L           equ	6	;# 
  3715     0007                     FSR1H           equ	7	;# 
  3716     0008                     BSR             equ	8	;# 
  3717     0009                     WREG            equ	9	;# 
  3718     000A                     PCLATH          equ	10	;# 
  3719     000B                     INTCON          equ	11	;# 
  3720     000C                     PORTA           equ	12	;# 
  3721     000D                     PORTB           equ	13	;# 
  3722     000E                     PORTC           equ	14	;# 
  3723     0010                     PIR0            equ	16	;# 
  3724     0011                     PIR1            equ	17	;# 
  3725     0012                     PIR2            equ	18	;# 
  3726     0013                     PIR3            equ	19	;# 
  3727     0014                     PIR4            equ	20	;# 
  3728     0015                     TMR0L           equ	21	;# 
  3729     0015                     TMR0            equ	21	;# 
  3730     0016                     TMR0H           equ	22	;# 
  3731     0016                     PR0             equ	22	;# 
  3732     0017                     T0CON0          equ	23	;# 
  3733     0018                     T0CON1          equ	24	;# 
  3734     0019                     TMR1            equ	25	;# 
  3735     0019                     TMR1L           equ	25	;# 
  3736     001A                     TMR1H           equ	26	;# 
  3737     001B                     T1CON           equ	27	;# 
  3738     001C                     T1GCON          equ	28	;# 
  3739     001D                     TMR2            equ	29	;# 
  3740     001E                     PR2             equ	30	;# 
  3741     001F                     T2CON           equ	31	;# 
  3742     008C                     TRISA           equ	140	;# 
  3743     008D                     TRISB           equ	141	;# 
  3744     008E                     TRISC           equ	142	;# 
  3745     0090                     PIE0            equ	144	;# 
  3746     0091                     PIE1            equ	145	;# 
  3747     0092                     PIE2            equ	146	;# 
  3748     0093                     PIE3            equ	147	;# 
  3749     0094                     PIE4            equ	148	;# 
  3750     0097                     WDTCON          equ	151	;# 
  3751     009B                     ADRES           equ	155	;# 
  3752     009B                     ADRESL          equ	155	;# 
  3753     009C                     ADRESH          equ	156	;# 
  3754     009D                     ADCON0          equ	157	;# 
  3755     009E                     ADCON1          equ	158	;# 
  3756     009F                     ADACT           equ	159	;# 
  3757     010C                     LATA            equ	268	;# 
  3758     010D                     LATB            equ	269	;# 
  3759     010E                     LATC            equ	270	;# 
  3760     0111                     CM1CON0         equ	273	;# 
  3761     0112                     CM1CON1         equ	274	;# 
  3762     0113                     CM2CON0         equ	275	;# 
  3763     0114                     CM2CON1         equ	276	;# 
  3764     0115                     CMOUT           equ	277	;# 
  3765     0116                     BORCON          equ	278	;# 
  3766     0117                     FVRCON          equ	279	;# 
  3767     0118                     DACCON0         equ	280	;# 
  3768     0119                     DACCON1         equ	281	;# 
  3769     018C                     ANSELA          equ	396	;# 
  3770     018D                     ANSELB          equ	397	;# 
  3771     018E                     ANSELC          equ	398	;# 
  3772     0197                     VREGCON         equ	407	;# 
  3773     0199                     RC1REG          equ	409	;# 
  3774     0199                     RCREG           equ	409	;# 
  3775     0199                     RCREG1          equ	409	;# 
  3776     019A                     TX1REG          equ	410	;# 
  3777     019A                     TXREG1          equ	410	;# 
  3778     019A                     TXREG           equ	410	;# 
  3779     019B                     SP1BRG          equ	411	;# 
  3780     019B                     SPBRG           equ	411	;# 
  3781     019B                     SP1BRGL         equ	411	;# 
  3782     019B                     SPBRG1          equ	411	;# 
  3783     019B                     SPBRGL          equ	411	;# 
  3784     019C                     SP1BRGH         equ	412	;# 
  3785     019C                     SPBRGH          equ	412	;# 
  3786     019C                     SPBRGH1         equ	412	;# 
  3787     019D                     RC1STA          equ	413	;# 
  3788     019D                     RCSTA1          equ	413	;# 
  3789     019D                     RCSTA           equ	413	;# 
  3790     019E                     TX1STA          equ	414	;# 
  3791     019E                     TXSTA1          equ	414	;# 
  3792     019E                     TXSTA           equ	414	;# 
  3793     019F                     BAUD1CON        equ	415	;# 
  3794     019F                     BAUDCON1        equ	415	;# 
  3795     019F                     BAUDCTL1        equ	415	;# 
  3796     019F                     BAUDCON         equ	415	;# 
  3797     019F                     BAUDCTL         equ	415	;# 
  3798     020C                     WPUA            equ	524	;# 
  3799     020D                     WPUB            equ	525	;# 
  3800     020E                     WPUC            equ	526	;# 
  3801     0211                     SSP1BUF         equ	529	;# 
  3802     0211                     SSPBUF          equ	529	;# 
  3803     0212                     SSP1ADD         equ	530	;# 
  3804     0212                     SSPADD          equ	530	;# 
  3805     0213                     SSP1MSK         equ	531	;# 
  3806     0213                     SSPMSK          equ	531	;# 
  3807     0214                     SSP1STAT        equ	532	;# 
  3808     0214                     SSPSTAT         equ	532	;# 
  3809     0215                     SSP1CON1        equ	533	;# 
  3810     0215                     SSPCON          equ	533	;# 
  3811     0215                     SSPCON1         equ	533	;# 
  3812     0215                     SSP1CON         equ	533	;# 
  3813     0216                     SSP1CON2        equ	534	;# 
  3814     0216                     SSPCON2         equ	534	;# 
  3815     0217                     SSP1CON3        equ	535	;# 
  3816     0217                     SSPCON3         equ	535	;# 
  3817     0219                     SSP2BUF         equ	537	;# 
  3818     021A                     SSP2ADD         equ	538	;# 
  3819     021B                     SSP2MSK         equ	539	;# 
  3820     021C                     SSP2STAT        equ	540	;# 
  3821     021D                     SSP2CON1        equ	541	;# 
  3822     021D                     SSP2CON         equ	541	;# 
  3823     021E                     SSP2CON2        equ	542	;# 
  3824     021F                     SSP2CON3        equ	543	;# 
  3825     028C                     ODCONA          equ	652	;# 
  3826     028D                     ODCONB          equ	653	;# 
  3827     028E                     ODCONC          equ	654	;# 
  3828     0291                     CCPR1           equ	657	;# 
  3829     0291                     CCPR1L          equ	657	;# 
  3830     0292                     CCPR1H          equ	658	;# 
  3831     0293                     CCP1CON         equ	659	;# 
  3832     0294                     CCP1CAP         equ	660	;# 
  3833     0295                     CCPR2           equ	661	;# 
  3834     0295                     CCPR2L          equ	661	;# 
  3835     0296                     CCPR2H          equ	662	;# 
  3836     0297                     CCP2CON         equ	663	;# 
  3837     0298                     CCP2CAP         equ	664	;# 
  3838     029F                     CCPTMRS         equ	671	;# 
  3839     030C                     SLRCONA         equ	780	;# 
  3840     030D                     SLRCONB         equ	781	;# 
  3841     030E                     SLRCONC         equ	782	;# 
  3842     0311                     CCPR3           equ	785	;# 
  3843     0311                     CCPR3L          equ	785	;# 
  3844     0312                     CCPR3H          equ	786	;# 
  3845     0313                     CCP3CON         equ	787	;# 
  3846     0314                     CCP3CAP         equ	788	;# 
  3847     0315                     CCPR4           equ	789	;# 
  3848     0315                     CCPR4L          equ	789	;# 
  3849     0316                     CCPR4H          equ	790	;# 
  3850     0317                     CCP4CON         equ	791	;# 
  3851     0318                     CCP4CAP         equ	792	;# 
  3852     038C                     INLVLA          equ	908	;# 
  3853     038D                     INLVLB          equ	909	;# 
  3854     038E                     INLVLC          equ	910	;# 
  3855     0391                     IOCAP           equ	913	;# 
  3856     0392                     IOCAN           equ	914	;# 
  3857     0393                     IOCAF           equ	915	;# 
  3858     0394                     IOCBP           equ	916	;# 
  3859     0395                     IOCBN           equ	917	;# 
  3860     0396                     IOCBF           equ	918	;# 
  3861     0397                     IOCCP           equ	919	;# 
  3862     0398                     IOCCN           equ	920	;# 
  3863     0399                     IOCCF           equ	921	;# 
  3864     039A                     CLKRCON         equ	922	;# 
  3865     039C                     MDCON           equ	924	;# 
  3866     039D                     MDSRC           equ	925	;# 
  3867     039E                     MDCARH          equ	926	;# 
  3868     039F                     MDCARL          equ	927	;# 
  3869     0411                     TMR3            equ	1041	;# 
  3870     0411                     TMR3L           equ	1041	;# 
  3871     0412                     TMR3H           equ	1042	;# 
  3872     0413                     T3CON           equ	1043	;# 
  3873     0414                     T3GCON          equ	1044	;# 
  3874     0415                     TMR4            equ	1045	;# 
  3875     0416                     PR4             equ	1046	;# 
  3876     0417                     T4CON           equ	1047	;# 
  3877     0418                     TMR5            equ	1048	;# 
  3878     0418                     TMR5L           equ	1048	;# 
  3879     0419                     TMR5H           equ	1049	;# 
  3880     041A                     T5CON           equ	1050	;# 
  3881     041B                     T5GCON          equ	1051	;# 
  3882     041C                     TMR6            equ	1052	;# 
  3883     041D                     PR6             equ	1053	;# 
  3884     041E                     T6CON           equ	1054	;# 
  3885     041F                     CCDCON          equ	1055	;# 
  3886     0498                     NCO1ACC         equ	1176	;# 
  3887     0498                     NCO1ACCL        equ	1176	;# 
  3888     0499                     NCO1ACCH        equ	1177	;# 
  3889     049A                     NCO1ACCU        equ	1178	;# 
  3890     049B                     NCO1INC         equ	1179	;# 
  3891     049B                     NCO1INCL        equ	1179	;# 
  3892     049C                     NCO1INCH        equ	1180	;# 
  3893     049D                     NCO1INCU        equ	1181	;# 
  3894     049E                     NCO1CON         equ	1182	;# 
  3895     049F                     NCO1CLK         equ	1183	;# 
  3896     0617                     PWM5DCL         equ	1559	;# 
  3897     0618                     PWM5DCH         equ	1560	;# 
  3898     0619                     PWM5CON         equ	1561	;# 
  3899     0619                     PWM5CON0        equ	1561	;# 
  3900     061A                     PWM6DCL         equ	1562	;# 
  3901     061B                     PWM6DCH         equ	1563	;# 
  3902     061C                     PWM6CON         equ	1564	;# 
  3903     061C                     PWM6CON0        equ	1564	;# 
  3904     061F                     PWMTMRS         equ	1567	;# 
  3905     0691                     CWG1CLKCON      equ	1681	;# 
  3906     0692                     CWG1DAT         equ	1682	;# 
  3907     0693                     CWG1DBR         equ	1683	;# 
  3908     0694                     CWG1DBF         equ	1684	;# 
  3909     0695                     CWG1CON0        equ	1685	;# 
  3910     0696                     CWG1CON1        equ	1686	;# 
  3911     0697                     CWG1AS0         equ	1687	;# 
  3912     0698                     CWG1AS1         equ	1688	;# 
  3913     0699                     CWG1STR         equ	1689	;# 
  3914     0711                     CWG2CLKCON      equ	1809	;# 
  3915     0712                     CWG2DAT         equ	1810	;# 
  3916     0713                     CWG2DBR         equ	1811	;# 
  3917     0714                     CWG2DBF         equ	1812	;# 
  3918     0715                     CWG2CON0        equ	1813	;# 
  3919     0716                     CWG2CON1        equ	1814	;# 
  3920     0717                     CWG2AS0         equ	1815	;# 
  3921     0718                     CWG2AS1         equ	1816	;# 
  3922     0719                     CWG2STR         equ	1817	;# 
  3923     0891                     NVMADR          equ	2193	;# 
  3924     0891                     EEADR           equ	2193	;# 
  3925     0891                     PMADR           equ	2193	;# 
  3926     0891                     NVMADRL         equ	2193	;# 
  3927     0891                     EEADRL          equ	2193	;# 
  3928     0891                     PMADRL          equ	2193	;# 
  3929     0892                     NVMADRH         equ	2194	;# 
  3930     0892                     EEADRH          equ	2194	;# 
  3931     0892                     PMADRH          equ	2194	;# 
  3932     0893                     NVMDAT          equ	2195	;# 
  3933     0893                     EEDAT           equ	2195	;# 
  3934     0893                     PMDAT           equ	2195	;# 
  3935     0893                     NVMDATL         equ	2195	;# 
  3936     0893                     EEDATL          equ	2195	;# 
  3937     0893                     PMDATL          equ	2195	;# 
  3938     0894                     NVMDATH         equ	2196	;# 
  3939     0894                     EEDATH          equ	2196	;# 
  3940     0894                     PMDATH          equ	2196	;# 
  3941     0895                     NVMCON1         equ	2197	;# 
  3942     0895                     EECON1          equ	2197	;# 
  3943     0895                     PMCON1          equ	2197	;# 
  3944     0896                     NVMCON2         equ	2198	;# 
  3945     0896                     EECON2          equ	2198	;# 
  3946     0896                     PMCON2          equ	2198	;# 
  3947     089B                     PCON0           equ	2203	;# 
  3948     0911                     PMD0            equ	2321	;# 
  3949     0912                     PMD1            equ	2322	;# 
  3950     0913                     PMD2            equ	2323	;# 
  3951     0914                     PMD3            equ	2324	;# 
  3952     0915                     PMD4            equ	2325	;# 
  3953     0916                     PMD5            equ	2326	;# 
  3954     0918                     CPUDOZE         equ	2328	;# 
  3955     0919                     OSCCON1         equ	2329	;# 
  3956     091A                     OSCCON2         equ	2330	;# 
  3957     091B                     OSCCON3         equ	2331	;# 
  3958     091C                     OSCSTAT1        equ	2332	;# 
  3959     091D                     OSCEN           equ	2333	;# 
  3960     091E                     OSCTUNE         equ	2334	;# 
  3961     091F                     OSCFRQ          equ	2335	;# 
  3962     0E0F                     PPSLOCK         equ	3599	;# 
  3963     0E10                     INTPPS          equ	3600	;# 
  3964     0E11                     T0CKIPPS        equ	3601	;# 
  3965     0E12                     T1CKIPPS        equ	3602	;# 
  3966     0E13                     T1GPPS          equ	3603	;# 
  3967     0E14                     CCP1PPS         equ	3604	;# 
  3968     0E15                     CCP2PPS         equ	3605	;# 
  3969     0E16                     CCP3PPS         equ	3606	;# 
  3970     0E17                     CCP4PPS         equ	3607	;# 
  3971     0E18                     CWG1PPS         equ	3608	;# 
  3972     0E19                     CWG2PPS         equ	3609	;# 
  3973     0E1A                     MDCIN1PPS       equ	3610	;# 
  3974     0E1B                     MDCIN2PPS       equ	3611	;# 
  3975     0E1C                     MDMINPPS        equ	3612	;# 
  3976     0E1D                     SSP2CLKPPS      equ	3613	;# 
  3977     0E1E                     SSP2DATPPS      equ	3614	;# 
  3978     0E1F                     SSP2SSPPS       equ	3615	;# 
  3979     0E20                     SSP1CLKPPS      equ	3616	;# 
  3980     0E21                     SSP1DATPPS      equ	3617	;# 
  3981     0E22                     SSP1SSPPS       equ	3618	;# 
  3982     0E24                     RXPPS           equ	3620	;# 
  3983     0E25                     TXPPS           equ	3621	;# 
  3984     0E28                     CLCIN0PPS       equ	3624	;# 
  3985     0E29                     CLCIN1PPS       equ	3625	;# 
  3986     0E2A                     CLCIN2PPS       equ	3626	;# 
  3987     0E2B                     CLCIN3PPS       equ	3627	;# 
  3988     0E2C                     T3CKIPPS        equ	3628	;# 
  3989     0E2D                     T3GPPS          equ	3629	;# 
  3990     0E2E                     T5CKIPPS        equ	3630	;# 
  3991     0E2F                     T5GPPS          equ	3631	;# 
  3992     0E90                     RA0PPS          equ	3728	;# 
  3993     0E91                     RA1PPS          equ	3729	;# 
  3994     0E92                     RA2PPS          equ	3730	;# 
  3995     0E94                     RA4PPS          equ	3732	;# 
  3996     0E95                     RA5PPS          equ	3733	;# 
  3997     0E9C                     RB4PPS          equ	3740	;# 
  3998     0E9D                     RB5PPS          equ	3741	;# 
  3999     0E9E                     RB6PPS          equ	3742	;# 
  4000     0E9F                     RB7PPS          equ	3743	;# 
  4001     0EA0                     RC0PPS          equ	3744	;# 
  4002     0EA1                     RC1PPS          equ	3745	;# 
  4003     0EA2                     RC2PPS          equ	3746	;# 
  4004     0EA3                     RC3PPS          equ	3747	;# 
  4005     0EA4                     RC4PPS          equ	3748	;# 
  4006     0EA5                     RC5PPS          equ	3749	;# 
  4007     0EA6                     RC6PPS          equ	3750	;# 
  4008     0EA7                     RC7PPS          equ	3751	;# 
  4009     0F0F                     CLCDATA         equ	3855	;# 
  4010     0F10                     CLC1CON         equ	3856	;# 
  4011     0F11                     CLC1POL         equ	3857	;# 
  4012     0F12                     CLC1SEL0        equ	3858	;# 
  4013     0F13                     CLC1SEL1        equ	3859	;# 
  4014     0F14                     CLC1SEL2        equ	3860	;# 
  4015     0F15                     CLC1SEL3        equ	3861	;# 
  4016     0F16                     CLC1GLS0        equ	3862	;# 
  4017     0F17                     CLC1GLS1        equ	3863	;# 
  4018     0F18                     CLC1GLS2        equ	3864	;# 
  4019     0F19                     CLC1GLS3        equ	3865	;# 
  4020     0F1A                     CLC2CON         equ	3866	;# 
  4021     0F1B                     CLC2POL         equ	3867	;# 
  4022     0F1C                     CLC2SEL0        equ	3868	;# 
  4023     0F1D                     CLC2SEL1        equ	3869	;# 
  4024     0F1E                     CLC2SEL2        equ	3870	;# 
  4025     0F1F                     CLC2SEL3        equ	3871	;# 
  4026     0F20                     CLC2GLS0        equ	3872	;# 
  4027     0F21                     CLC2GLS1        equ	3873	;# 
  4028     0F22                     CLC2GLS2        equ	3874	;# 
  4029     0F23                     CLC2GLS3        equ	3875	;# 
  4030     0F24                     CLC3CON         equ	3876	;# 
  4031     0F25                     CLC3POL         equ	3877	;# 
  4032     0F26                     CLC3SEL0        equ	3878	;# 
  4033     0F27                     CLC3SEL1        equ	3879	;# 
  4034     0F28                     CLC3SEL2        equ	3880	;# 
  4035     0F29                     CLC3SEL3        equ	3881	;# 
  4036     0F2A                     CLC3GLS0        equ	3882	;# 
  4037     0F2B                     CLC3GLS1        equ	3883	;# 
  4038     0F2C                     CLC3GLS2        equ	3884	;# 
  4039     0F2D                     CLC3GLS3        equ	3885	;# 
  4040     0F2E                     CLC4CON         equ	3886	;# 
  4041     0F2F                     CLC4POL         equ	3887	;# 
  4042     0F30                     CLC4SEL0        equ	3888	;# 
  4043     0F31                     CLC4SEL1        equ	3889	;# 
  4044     0F32                     CLC4SEL2        equ	3890	;# 
  4045     0F33                     CLC4SEL3        equ	3891	;# 
  4046     0F34                     CLC4GLS0        equ	3892	;# 
  4047     0F35                     CLC4GLS1        equ	3893	;# 
  4048     0F36                     CLC4GLS2        equ	3894	;# 
  4049     0F37                     CLC4GLS3        equ	3895	;# 
  4050     0FE4                     STATUS_SHAD     equ	4068	;# 
  4051     0FE5                     WREG_SHAD       equ	4069	;# 
  4052     0FE6                     BSR_SHAD        equ	4070	;# 
  4053     0FE7                     PCLATH_SHAD     equ	4071	;# 
  4054     0FE8                     FSR0L_SHAD      equ	4072	;# 
  4055     0FE9                     FSR0H_SHAD      equ	4073	;# 
  4056     0FEA                     FSR1L_SHAD      equ	4074	;# 
  4057     0FEB                     FSR1H_SHAD      equ	4075	;# 
  4058     0FED                     STKPTR          equ	4077	;# 
  4059     0FEE                     TOSL            equ	4078	;# 
  4060     0FEF                     TOSH            equ	4079	;# 
  4061     0000                     INDF0           equ	0	;# 
  4062     0001                     INDF1           equ	1	;# 
  4063     0002                     PCL             equ	2	;# 
  4064     0003                     STATUS          equ	3	;# 
  4065     0004                     FSR0L           equ	4	;# 
  4066     0005                     FSR0H           equ	5	;# 
  4067     0006                     FSR1L           equ	6	;# 
  4068     0007                     FSR1H           equ	7	;# 
  4069     0008                     BSR             equ	8	;# 
  4070     0009                     WREG            equ	9	;# 
  4071     000A                     PCLATH          equ	10	;# 
  4072     000B                     INTCON          equ	11	;# 
  4073     000C                     PORTA           equ	12	;# 
  4074     000D                     PORTB           equ	13	;# 
  4075     000E                     PORTC           equ	14	;# 
  4076     0010                     PIR0            equ	16	;# 
  4077     0011                     PIR1            equ	17	;# 
  4078     0012                     PIR2            equ	18	;# 
  4079     0013                     PIR3            equ	19	;# 
  4080     0014                     PIR4            equ	20	;# 
  4081     0015                     TMR0L           equ	21	;# 
  4082     0015                     TMR0            equ	21	;# 
  4083     0016                     TMR0H           equ	22	;# 
  4084     0016                     PR0             equ	22	;# 
  4085     0017                     T0CON0          equ	23	;# 
  4086     0018                     T0CON1          equ	24	;# 
  4087     0019                     TMR1            equ	25	;# 
  4088     0019                     TMR1L           equ	25	;# 
  4089     001A                     TMR1H           equ	26	;# 
  4090     001B                     T1CON           equ	27	;# 
  4091     001C                     T1GCON          equ	28	;# 
  4092     001D                     TMR2            equ	29	;# 
  4093     001E                     PR2             equ	30	;# 
  4094     001F                     T2CON           equ	31	;# 
  4095     008C                     TRISA           equ	140	;# 
  4096     008D                     TRISB           equ	141	;# 
  4097     008E                     TRISC           equ	142	;# 
  4098     0090                     PIE0            equ	144	;# 
  4099     0091                     PIE1            equ	145	;# 
  4100     0092                     PIE2            equ	146	;# 
  4101     0093                     PIE3            equ	147	;# 
  4102     0094                     PIE4            equ	148	;# 
  4103     0097                     WDTCON          equ	151	;# 
  4104     009B                     ADRES           equ	155	;# 
  4105     009B                     ADRESL          equ	155	;# 
  4106     009C                     ADRESH          equ	156	;# 
  4107     009D                     ADCON0          equ	157	;# 
  4108     009E                     ADCON1          equ	158	;# 
  4109     009F                     ADACT           equ	159	;# 
  4110     010C                     LATA            equ	268	;# 
  4111     010D                     LATB            equ	269	;# 
  4112     010E                     LATC            equ	270	;# 
  4113     0111                     CM1CON0         equ	273	;# 
  4114     0112                     CM1CON1         equ	274	;# 
  4115     0113                     CM2CON0         equ	275	;# 
  4116     0114                     CM2CON1         equ	276	;# 
  4117     0115                     CMOUT           equ	277	;# 
  4118     0116                     BORCON          equ	278	;# 
  4119     0117                     FVRCON          equ	279	;# 
  4120     0118                     DACCON0         equ	280	;# 
  4121     0119                     DACCON1         equ	281	;# 
  4122     018C                     ANSELA          equ	396	;# 
  4123     018D                     ANSELB          equ	397	;# 
  4124     018E                     ANSELC          equ	398	;# 
  4125     0197                     VREGCON         equ	407	;# 
  4126     0199                     RC1REG          equ	409	;# 
  4127     0199                     RCREG           equ	409	;# 
  4128     0199                     RCREG1          equ	409	;# 
  4129     019A                     TX1REG          equ	410	;# 
  4130     019A                     TXREG1          equ	410	;# 
  4131     019A                     TXREG           equ	410	;# 
  4132     019B                     SP1BRG          equ	411	;# 
  4133     019B                     SPBRG           equ	411	;# 
  4134     019B                     SP1BRGL         equ	411	;# 
  4135     019B                     SPBRG1          equ	411	;# 
  4136     019B                     SPBRGL          equ	411	;# 
  4137     019C                     SP1BRGH         equ	412	;# 
  4138     019C                     SPBRGH          equ	412	;# 
  4139     019C                     SPBRGH1         equ	412	;# 
  4140     019D                     RC1STA          equ	413	;# 
  4141     019D                     RCSTA1          equ	413	;# 
  4142     019D                     RCSTA           equ	413	;# 
  4143     019E                     TX1STA          equ	414	;# 
  4144     019E                     TXSTA1          equ	414	;# 
  4145     019E                     TXSTA           equ	414	;# 
  4146     019F                     BAUD1CON        equ	415	;# 
  4147     019F                     BAUDCON1        equ	415	;# 
  4148     019F                     BAUDCTL1        equ	415	;# 
  4149     019F                     BAUDCON         equ	415	;# 
  4150     019F                     BAUDCTL         equ	415	;# 
  4151     020C                     WPUA            equ	524	;# 
  4152     020D                     WPUB            equ	525	;# 
  4153     020E                     WPUC            equ	526	;# 
  4154     0211                     SSP1BUF         equ	529	;# 
  4155     0211                     SSPBUF          equ	529	;# 
  4156     0212                     SSP1ADD         equ	530	;# 
  4157     0212                     SSPADD          equ	530	;# 
  4158     0213                     SSP1MSK         equ	531	;# 
  4159     0213                     SSPMSK          equ	531	;# 
  4160     0214                     SSP1STAT        equ	532	;# 
  4161     0214                     SSPSTAT         equ	532	;# 
  4162     0215                     SSP1CON1        equ	533	;# 
  4163     0215                     SSPCON          equ	533	;# 
  4164     0215                     SSPCON1         equ	533	;# 
  4165     0215                     SSP1CON         equ	533	;# 
  4166     0216                     SSP1CON2        equ	534	;# 
  4167     0216                     SSPCON2         equ	534	;# 
  4168     0217                     SSP1CON3        equ	535	;# 
  4169     0217                     SSPCON3         equ	535	;# 
  4170     0219                     SSP2BUF         equ	537	;# 
  4171     021A                     SSP2ADD         equ	538	;# 
  4172     021B                     SSP2MSK         equ	539	;# 
  4173     021C                     SSP2STAT        equ	540	;# 
  4174     021D                     SSP2CON1        equ	541	;# 
  4175     021D                     SSP2CON         equ	541	;# 
  4176     021E                     SSP2CON2        equ	542	;# 
  4177     021F                     SSP2CON3        equ	543	;# 
  4178     028C                     ODCONA          equ	652	;# 
  4179     028D                     ODCONB          equ	653	;# 
  4180     028E                     ODCONC          equ	654	;# 
  4181     0291                     CCPR1           equ	657	;# 
  4182     0291                     CCPR1L          equ	657	;# 
  4183     0292                     CCPR1H          equ	658	;# 
  4184     0293                     CCP1CON         equ	659	;# 
  4185     0294                     CCP1CAP         equ	660	;# 
  4186     0295                     CCPR2           equ	661	;# 
  4187     0295                     CCPR2L          equ	661	;# 
  4188     0296                     CCPR2H          equ	662	;# 
  4189     0297                     CCP2CON         equ	663	;# 
  4190     0298                     CCP2CAP         equ	664	;# 
  4191     029F                     CCPTMRS         equ	671	;# 
  4192     030C                     SLRCONA         equ	780	;# 
  4193     030D                     SLRCONB         equ	781	;# 
  4194     030E                     SLRCONC         equ	782	;# 
  4195     0311                     CCPR3           equ	785	;# 
  4196     0311                     CCPR3L          equ	785	;# 
  4197     0312                     CCPR3H          equ	786	;# 
  4198     0313                     CCP3CON         equ	787	;# 
  4199     0314                     CCP3CAP         equ	788	;# 
  4200     0315                     CCPR4           equ	789	;# 
  4201     0315                     CCPR4L          equ	789	;# 
  4202     0316                     CCPR4H          equ	790	;# 
  4203     0317                     CCP4CON         equ	791	;# 
  4204     0318                     CCP4CAP         equ	792	;# 
  4205     038C                     INLVLA          equ	908	;# 
  4206     038D                     INLVLB          equ	909	;# 
  4207     038E                     INLVLC          equ	910	;# 
  4208     0391                     IOCAP           equ	913	;# 
  4209     0392                     IOCAN           equ	914	;# 
  4210     0393                     IOCAF           equ	915	;# 
  4211     0394                     IOCBP           equ	916	;# 
  4212     0395                     IOCBN           equ	917	;# 
  4213     0396                     IOCBF           equ	918	;# 
  4214     0397                     IOCCP           equ	919	;# 
  4215     0398                     IOCCN           equ	920	;# 
  4216     0399                     IOCCF           equ	921	;# 
  4217     039A                     CLKRCON         equ	922	;# 
  4218     039C                     MDCON           equ	924	;# 
  4219     039D                     MDSRC           equ	925	;# 
  4220     039E                     MDCARH          equ	926	;# 
  4221     039F                     MDCARL          equ	927	;# 
  4222     0411                     TMR3            equ	1041	;# 
  4223     0411                     TMR3L           equ	1041	;# 
  4224     0412                     TMR3H           equ	1042	;# 
  4225     0413                     T3CON           equ	1043	;# 
  4226     0414                     T3GCON          equ	1044	;# 
  4227     0415                     TMR4            equ	1045	;# 
  4228     0416                     PR4             equ	1046	;# 
  4229     0417                     T4CON           equ	1047	;# 
  4230     0418                     TMR5            equ	1048	;# 
  4231     0418                     TMR5L           equ	1048	;# 
  4232     0419                     TMR5H           equ	1049	;# 
  4233     041A                     T5CON           equ	1050	;# 
  4234     041B                     T5GCON          equ	1051	;# 
  4235     041C                     TMR6            equ	1052	;# 
  4236     041D                     PR6             equ	1053	;# 
  4237     041E                     T6CON           equ	1054	;# 
  4238     041F                     CCDCON          equ	1055	;# 
  4239     0498                     NCO1ACC         equ	1176	;# 
  4240     0498                     NCO1ACCL        equ	1176	;# 
  4241     0499                     NCO1ACCH        equ	1177	;# 
  4242     049A                     NCO1ACCU        equ	1178	;# 
  4243     049B                     NCO1INC         equ	1179	;# 
  4244     049B                     NCO1INCL        equ	1179	;# 
  4245     049C                     NCO1INCH        equ	1180	;# 
  4246     049D                     NCO1INCU        equ	1181	;# 
  4247     049E                     NCO1CON         equ	1182	;# 
  4248     049F                     NCO1CLK         equ	1183	;# 
  4249     0617                     PWM5DCL         equ	1559	;# 
  4250     0618                     PWM5DCH         equ	1560	;# 
  4251     0619                     PWM5CON         equ	1561	;# 
  4252     0619                     PWM5CON0        equ	1561	;# 
  4253     061A                     PWM6DCL         equ	1562	;# 
  4254     061B                     PWM6DCH         equ	1563	;# 
  4255     061C                     PWM6CON         equ	1564	;# 
  4256     061C                     PWM6CON0        equ	1564	;# 
  4257     061F                     PWMTMRS         equ	1567	;# 
  4258     0691                     CWG1CLKCON      equ	1681	;# 
  4259     0692                     CWG1DAT         equ	1682	;# 
  4260     0693                     CWG1DBR         equ	1683	;# 
  4261     0694                     CWG1DBF         equ	1684	;# 
  4262     0695                     CWG1CON0        equ	1685	;# 
  4263     0696                     CWG1CON1        equ	1686	;# 
  4264     0697                     CWG1AS0         equ	1687	;# 
  4265     0698                     CWG1AS1         equ	1688	;# 
  4266     0699                     CWG1STR         equ	1689	;# 
  4267     0711                     CWG2CLKCON      equ	1809	;# 
  4268     0712                     CWG2DAT         equ	1810	;# 
  4269     0713                     CWG2DBR         equ	1811	;# 
  4270     0714                     CWG2DBF         equ	1812	;# 
  4271     0715                     CWG2CON0        equ	1813	;# 
  4272     0716                     CWG2CON1        equ	1814	;# 
  4273     0717                     CWG2AS0         equ	1815	;# 
  4274     0718                     CWG2AS1         equ	1816	;# 
  4275     0719                     CWG2STR         equ	1817	;# 
  4276     0891                     NVMADR          equ	2193	;# 
  4277     0891                     EEADR           equ	2193	;# 
  4278     0891                     PMADR           equ	2193	;# 
  4279     0891                     NVMADRL         equ	2193	;# 
  4280     0891                     EEADRL          equ	2193	;# 
  4281     0891                     PMADRL          equ	2193	;# 
  4282     0892                     NVMADRH         equ	2194	;# 
  4283     0892                     EEADRH          equ	2194	;# 
  4284     0892                     PMADRH          equ	2194	;# 
  4285     0893                     NVMDAT          equ	2195	;# 
  4286     0893                     EEDAT           equ	2195	;# 
  4287     0893                     PMDAT           equ	2195	;# 
  4288     0893                     NVMDATL         equ	2195	;# 
  4289     0893                     EEDATL          equ	2195	;# 
  4290     0893                     PMDATL          equ	2195	;# 
  4291     0894                     NVMDATH         equ	2196	;# 
  4292     0894                     EEDATH          equ	2196	;# 
  4293     0894                     PMDATH          equ	2196	;# 
  4294     0895                     NVMCON1         equ	2197	;# 
  4295     0895                     EECON1          equ	2197	;# 
  4296     0895                     PMCON1          equ	2197	;# 
  4297     0896                     NVMCON2         equ	2198	;# 
  4298     0896                     EECON2          equ	2198	;# 
  4299     0896                     PMCON2          equ	2198	;# 
  4300     089B                     PCON0           equ	2203	;# 
  4301     0911                     PMD0            equ	2321	;# 
  4302     0912                     PMD1            equ	2322	;# 
  4303     0913                     PMD2            equ	2323	;# 
  4304     0914                     PMD3            equ	2324	;# 
  4305     0915                     PMD4            equ	2325	;# 
  4306     0916                     PMD5            equ	2326	;# 
  4307     0918                     CPUDOZE         equ	2328	;# 
  4308     0919                     OSCCON1         equ	2329	;# 
  4309     091A                     OSCCON2         equ	2330	;# 
  4310     091B                     OSCCON3         equ	2331	;# 
  4311     091C                     OSCSTAT1        equ	2332	;# 
  4312     091D                     OSCEN           equ	2333	;# 
  4313     091E                     OSCTUNE         equ	2334	;# 
  4314     091F                     OSCFRQ          equ	2335	;# 
  4315     0E0F                     PPSLOCK         equ	3599	;# 
  4316     0E10                     INTPPS          equ	3600	;# 
  4317     0E11                     T0CKIPPS        equ	3601	;# 
  4318     0E12                     T1CKIPPS        equ	3602	;# 
  4319     0E13                     T1GPPS          equ	3603	;# 
  4320     0E14                     CCP1PPS         equ	3604	;# 
  4321     0E15                     CCP2PPS         equ	3605	;# 
  4322     0E16                     CCP3PPS         equ	3606	;# 
  4323     0E17                     CCP4PPS         equ	3607	;# 
  4324     0E18                     CWG1PPS         equ	3608	;# 
  4325     0E19                     CWG2PPS         equ	3609	;# 
  4326     0E1A                     MDCIN1PPS       equ	3610	;# 
  4327     0E1B                     MDCIN2PPS       equ	3611	;# 
  4328     0E1C                     MDMINPPS        equ	3612	;# 
  4329     0E1D                     SSP2CLKPPS      equ	3613	;# 
  4330     0E1E                     SSP2DATPPS      equ	3614	;# 
  4331     0E1F                     SSP2SSPPS       equ	3615	;# 
  4332     0E20                     SSP1CLKPPS      equ	3616	;# 
  4333     0E21                     SSP1DATPPS      equ	3617	;# 
  4334     0E22                     SSP1SSPPS       equ	3618	;# 
  4335     0E24                     RXPPS           equ	3620	;# 
  4336     0E25                     TXPPS           equ	3621	;# 
  4337     0E28                     CLCIN0PPS       equ	3624	;# 
  4338     0E29                     CLCIN1PPS       equ	3625	;# 
  4339     0E2A                     CLCIN2PPS       equ	3626	;# 
  4340     0E2B                     CLCIN3PPS       equ	3627	;# 
  4341     0E2C                     T3CKIPPS        equ	3628	;# 
  4342     0E2D                     T3GPPS          equ	3629	;# 
  4343     0E2E                     T5CKIPPS        equ	3630	;# 
  4344     0E2F                     T5GPPS          equ	3631	;# 
  4345     0E90                     RA0PPS          equ	3728	;# 
  4346     0E91                     RA1PPS          equ	3729	;# 
  4347     0E92                     RA2PPS          equ	3730	;# 
  4348     0E94                     RA4PPS          equ	3732	;# 
  4349     0E95                     RA5PPS          equ	3733	;# 
  4350     0E9C                     RB4PPS          equ	3740	;# 
  4351     0E9D                     RB5PPS          equ	3741	;# 
  4352     0E9E                     RB6PPS          equ	3742	;# 
  4353     0E9F                     RB7PPS          equ	3743	;# 
  4354     0EA0                     RC0PPS          equ	3744	;# 
  4355     0EA1                     RC1PPS          equ	3745	;# 
  4356     0EA2                     RC2PPS          equ	3746	;# 
  4357     0EA3                     RC3PPS          equ	3747	;# 
  4358     0EA4                     RC4PPS          equ	3748	;# 
  4359     0EA5                     RC5PPS          equ	3749	;# 
  4360     0EA6                     RC6PPS          equ	3750	;# 
  4361     0EA7                     RC7PPS          equ	3751	;# 
  4362     0F0F                     CLCDATA         equ	3855	;# 
  4363     0F10                     CLC1CON         equ	3856	;# 
  4364     0F11                     CLC1POL         equ	3857	;# 
  4365     0F12                     CLC1SEL0        equ	3858	;# 
  4366     0F13                     CLC1SEL1        equ	3859	;# 
  4367     0F14                     CLC1SEL2        equ	3860	;# 
  4368     0F15                     CLC1SEL3        equ	3861	;# 
  4369     0F16                     CLC1GLS0        equ	3862	;# 
  4370     0F17                     CLC1GLS1        equ	3863	;# 
  4371     0F18                     CLC1GLS2        equ	3864	;# 
  4372     0F19                     CLC1GLS3        equ	3865	;# 
  4373     0F1A                     CLC2CON         equ	3866	;# 
  4374     0F1B                     CLC2POL         equ	3867	;# 
  4375     0F1C                     CLC2SEL0        equ	3868	;# 
  4376     0F1D                     CLC2SEL1        equ	3869	;# 
  4377     0F1E                     CLC2SEL2        equ	3870	;# 
  4378     0F1F                     CLC2SEL3        equ	3871	;# 
  4379     0F20                     CLC2GLS0        equ	3872	;# 
  4380     0F21                     CLC2GLS1        equ	3873	;# 
  4381     0F22                     CLC2GLS2        equ	3874	;# 
  4382     0F23                     CLC2GLS3        equ	3875	;# 
  4383     0F24                     CLC3CON         equ	3876	;# 
  4384     0F25                     CLC3POL         equ	3877	;# 
  4385     0F26                     CLC3SEL0        equ	3878	;# 
  4386     0F27                     CLC3SEL1        equ	3879	;# 
  4387     0F28                     CLC3SEL2        equ	3880	;# 
  4388     0F29                     CLC3SEL3        equ	3881	;# 
  4389     0F2A                     CLC3GLS0        equ	3882	;# 
  4390     0F2B                     CLC3GLS1        equ	3883	;# 
  4391     0F2C                     CLC3GLS2        equ	3884	;# 
  4392     0F2D                     CLC3GLS3        equ	3885	;# 
  4393     0F2E                     CLC4CON         equ	3886	;# 
  4394     0F2F                     CLC4POL         equ	3887	;# 
  4395     0F30                     CLC4SEL0        equ	3888	;# 
  4396     0F31                     CLC4SEL1        equ	3889	;# 
  4397     0F32                     CLC4SEL2        equ	3890	;# 
  4398     0F33                     CLC4SEL3        equ	3891	;# 
  4399     0F34                     CLC4GLS0        equ	3892	;# 
  4400     0F35                     CLC4GLS1        equ	3893	;# 
  4401     0F36                     CLC4GLS2        equ	3894	;# 
  4402     0F37                     CLC4GLS3        equ	3895	;# 
  4403     0FE4                     STATUS_SHAD     equ	4068	;# 
  4404     0FE5                     WREG_SHAD       equ	4069	;# 
  4405     0FE6                     BSR_SHAD        equ	4070	;# 
  4406     0FE7                     PCLATH_SHAD     equ	4071	;# 
  4407     0FE8                     FSR0L_SHAD      equ	4072	;# 
  4408     0FE9                     FSR0H_SHAD      equ	4073	;# 
  4409     0FEA                     FSR1L_SHAD      equ	4074	;# 
  4410     0FEB                     FSR1H_SHAD      equ	4075	;# 
  4411     0FED                     STKPTR          equ	4077	;# 
  4412     0FEE                     TOSL            equ	4078	;# 
  4413     0FEF                     TOSH            equ	4079	;# 
  4414     0000                     INDF0           equ	0	;# 
  4415     0001                     INDF1           equ	1	;# 
  4416     0002                     PCL             equ	2	;# 
  4417     0003                     STATUS          equ	3	;# 
  4418     0004                     FSR0L           equ	4	;# 
  4419     0005                     FSR0H           equ	5	;# 
  4420     0006                     FSR1L           equ	6	;# 
  4421     0007                     FSR1H           equ	7	;# 
  4422     0008                     BSR             equ	8	;# 
  4423     0009                     WREG            equ	9	;# 
  4424     000A                     PCLATH          equ	10	;# 
  4425     000B                     INTCON          equ	11	;# 
  4426     000C                     PORTA           equ	12	;# 
  4427     000D                     PORTB           equ	13	;# 
  4428     000E                     PORTC           equ	14	;# 
  4429     0010                     PIR0            equ	16	;# 
  4430     0011                     PIR1            equ	17	;# 
  4431     0012                     PIR2            equ	18	;# 
  4432     0013                     PIR3            equ	19	;# 
  4433     0014                     PIR4            equ	20	;# 
  4434     0015                     TMR0L           equ	21	;# 
  4435     0015                     TMR0            equ	21	;# 
  4436     0016                     TMR0H           equ	22	;# 
  4437     0016                     PR0             equ	22	;# 
  4438     0017                     T0CON0          equ	23	;# 
  4439     0018                     T0CON1          equ	24	;# 
  4440     0019                     TMR1            equ	25	;# 
  4441     0019                     TMR1L           equ	25	;# 
  4442     001A                     TMR1H           equ	26	;# 
  4443     001B                     T1CON           equ	27	;# 
  4444     001C                     T1GCON          equ	28	;# 
  4445     001D                     TMR2            equ	29	;# 
  4446     001E                     PR2             equ	30	;# 
  4447     001F                     T2CON           equ	31	;# 
  4448     008C                     TRISA           equ	140	;# 
  4449     008D                     TRISB           equ	141	;# 
  4450     008E                     TRISC           equ	142	;# 
  4451     0090                     PIE0            equ	144	;# 
  4452     0091                     PIE1            equ	145	;# 
  4453     0092                     PIE2            equ	146	;# 
  4454     0093                     PIE3            equ	147	;# 
  4455     0094                     PIE4            equ	148	;# 
  4456     0097                     WDTCON          equ	151	;# 
  4457     009B                     ADRES           equ	155	;# 
  4458     009B                     ADRESL          equ	155	;# 
  4459     009C                     ADRESH          equ	156	;# 
  4460     009D                     ADCON0          equ	157	;# 
  4461     009E                     ADCON1          equ	158	;# 
  4462     009F                     ADACT           equ	159	;# 
  4463     010C                     LATA            equ	268	;# 
  4464     010D                     LATB            equ	269	;# 
  4465     010E                     LATC            equ	270	;# 
  4466     0111                     CM1CON0         equ	273	;# 
  4467     0112                     CM1CON1         equ	274	;# 
  4468     0113                     CM2CON0         equ	275	;# 
  4469     0114                     CM2CON1         equ	276	;# 
  4470     0115                     CMOUT           equ	277	;# 
  4471     0116                     BORCON          equ	278	;# 
  4472     0117                     FVRCON          equ	279	;# 
  4473     0118                     DACCON0         equ	280	;# 
  4474     0119                     DACCON1         equ	281	;# 
  4475     018C                     ANSELA          equ	396	;# 
  4476     018D                     ANSELB          equ	397	;# 
  4477     018E                     ANSELC          equ	398	;# 
  4478     0197                     VREGCON         equ	407	;# 
  4479     0199                     RC1REG          equ	409	;# 
  4480     0199                     RCREG           equ	409	;# 
  4481     0199                     RCREG1          equ	409	;# 
  4482     019A                     TX1REG          equ	410	;# 
  4483     019A                     TXREG1          equ	410	;# 
  4484     019A                     TXREG           equ	410	;# 
  4485     019B                     SP1BRG          equ	411	;# 
  4486     019B                     SPBRG           equ	411	;# 
  4487     019B                     SP1BRGL         equ	411	;# 
  4488     019B                     SPBRG1          equ	411	;# 
  4489     019B                     SPBRGL          equ	411	;# 
  4490     019C                     SP1BRGH         equ	412	;# 
  4491     019C                     SPBRGH          equ	412	;# 
  4492     019C                     SPBRGH1         equ	412	;# 
  4493     019D                     RC1STA          equ	413	;# 
  4494     019D                     RCSTA1          equ	413	;# 
  4495     019D                     RCSTA           equ	413	;# 
  4496     019E                     TX1STA          equ	414	;# 
  4497     019E                     TXSTA1          equ	414	;# 
  4498     019E                     TXSTA           equ	414	;# 
  4499     019F                     BAUD1CON        equ	415	;# 
  4500     019F                     BAUDCON1        equ	415	;# 
  4501     019F                     BAUDCTL1        equ	415	;# 
  4502     019F                     BAUDCON         equ	415	;# 
  4503     019F                     BAUDCTL         equ	415	;# 
  4504     020C                     WPUA            equ	524	;# 
  4505     020D                     WPUB            equ	525	;# 
  4506     020E                     WPUC            equ	526	;# 
  4507     0211                     SSP1BUF         equ	529	;# 
  4508     0211                     SSPBUF          equ	529	;# 
  4509     0212                     SSP1ADD         equ	530	;# 
  4510     0212                     SSPADD          equ	530	;# 
  4511     0213                     SSP1MSK         equ	531	;# 
  4512     0213                     SSPMSK          equ	531	;# 
  4513     0214                     SSP1STAT        equ	532	;# 
  4514     0214                     SSPSTAT         equ	532	;# 
  4515     0215                     SSP1CON1        equ	533	;# 
  4516     0215                     SSPCON          equ	533	;# 
  4517     0215                     SSPCON1         equ	533	;# 
  4518     0215                     SSP1CON         equ	533	;# 
  4519     0216                     SSP1CON2        equ	534	;# 
  4520     0216                     SSPCON2         equ	534	;# 
  4521     0217                     SSP1CON3        equ	535	;# 
  4522     0217                     SSPCON3         equ	535	;# 
  4523     0219                     SSP2BUF         equ	537	;# 
  4524     021A                     SSP2ADD         equ	538	;# 
  4525     021B                     SSP2MSK         equ	539	;# 
  4526     021C                     SSP2STAT        equ	540	;# 
  4527     021D                     SSP2CON1        equ	541	;# 
  4528     021D                     SSP2CON         equ	541	;# 
  4529     021E                     SSP2CON2        equ	542	;# 
  4530     021F                     SSP2CON3        equ	543	;# 
  4531     028C                     ODCONA          equ	652	;# 
  4532     028D                     ODCONB          equ	653	;# 
  4533     028E                     ODCONC          equ	654	;# 
  4534     0291                     CCPR1           equ	657	;# 
  4535     0291                     CCPR1L          equ	657	;# 
  4536     0292                     CCPR1H          equ	658	;# 
  4537     0293                     CCP1CON         equ	659	;# 
  4538     0294                     CCP1CAP         equ	660	;# 
  4539     0295                     CCPR2           equ	661	;# 
  4540     0295                     CCPR2L          equ	661	;# 
  4541     0296                     CCPR2H          equ	662	;# 
  4542     0297                     CCP2CON         equ	663	;# 
  4543     0298                     CCP2CAP         equ	664	;# 
  4544     029F                     CCPTMRS         equ	671	;# 
  4545     030C                     SLRCONA         equ	780	;# 
  4546     030D                     SLRCONB         equ	781	;# 
  4547     030E                     SLRCONC         equ	782	;# 
  4548     0311                     CCPR3           equ	785	;# 
  4549     0311                     CCPR3L          equ	785	;# 
  4550     0312                     CCPR3H          equ	786	;# 
  4551     0313                     CCP3CON         equ	787	;# 
  4552     0314                     CCP3CAP         equ	788	;# 
  4553     0315                     CCPR4           equ	789	;# 
  4554     0315                     CCPR4L          equ	789	;# 
  4555     0316                     CCPR4H          equ	790	;# 
  4556     0317                     CCP4CON         equ	791	;# 
  4557     0318                     CCP4CAP         equ	792	;# 
  4558     038C                     INLVLA          equ	908	;# 
  4559     038D                     INLVLB          equ	909	;# 
  4560     038E                     INLVLC          equ	910	;# 
  4561     0391                     IOCAP           equ	913	;# 
  4562     0392                     IOCAN           equ	914	;# 
  4563     0393                     IOCAF           equ	915	;# 
  4564     0394                     IOCBP           equ	916	;# 
  4565     0395                     IOCBN           equ	917	;# 
  4566     0396                     IOCBF           equ	918	;# 
  4567     0397                     IOCCP           equ	919	;# 
  4568     0398                     IOCCN           equ	920	;# 
  4569     0399                     IOCCF           equ	921	;# 
  4570     039A                     CLKRCON         equ	922	;# 
  4571     039C                     MDCON           equ	924	;# 
  4572     039D                     MDSRC           equ	925	;# 
  4573     039E                     MDCARH          equ	926	;# 
  4574     039F                     MDCARL          equ	927	;# 
  4575     0411                     TMR3            equ	1041	;# 
  4576     0411                     TMR3L           equ	1041	;# 
  4577     0412                     TMR3H           equ	1042	;# 
  4578     0413                     T3CON           equ	1043	;# 
  4579     0414                     T3GCON          equ	1044	;# 
  4580     0415                     TMR4            equ	1045	;# 
  4581     0416                     PR4             equ	1046	;# 
  4582     0417                     T4CON           equ	1047	;# 
  4583     0418                     TMR5            equ	1048	;# 
  4584     0418                     TMR5L           equ	1048	;# 
  4585     0419                     TMR5H           equ	1049	;# 
  4586     041A                     T5CON           equ	1050	;# 
  4587     041B                     T5GCON          equ	1051	;# 
  4588     041C                     TMR6            equ	1052	;# 
  4589     041D                     PR6             equ	1053	;# 
  4590     041E                     T6CON           equ	1054	;# 
  4591     041F                     CCDCON          equ	1055	;# 
  4592     0498                     NCO1ACC         equ	1176	;# 
  4593     0498                     NCO1ACCL        equ	1176	;# 
  4594     0499                     NCO1ACCH        equ	1177	;# 
  4595     049A                     NCO1ACCU        equ	1178	;# 
  4596     049B                     NCO1INC         equ	1179	;# 
  4597     049B                     NCO1INCL        equ	1179	;# 
  4598     049C                     NCO1INCH        equ	1180	;# 
  4599     049D                     NCO1INCU        equ	1181	;# 
  4600     049E                     NCO1CON         equ	1182	;# 
  4601     049F                     NCO1CLK         equ	1183	;# 
  4602     0617                     PWM5DCL         equ	1559	;# 
  4603     0618                     PWM5DCH         equ	1560	;# 
  4604     0619                     PWM5CON         equ	1561	;# 
  4605     0619                     PWM5CON0        equ	1561	;# 
  4606     061A                     PWM6DCL         equ	1562	;# 
  4607     061B                     PWM6DCH         equ	1563	;# 
  4608     061C                     PWM6CON         equ	1564	;# 
  4609     061C                     PWM6CON0        equ	1564	;# 
  4610     061F                     PWMTMRS         equ	1567	;# 
  4611     0691                     CWG1CLKCON      equ	1681	;# 
  4612     0692                     CWG1DAT         equ	1682	;# 
  4613     0693                     CWG1DBR         equ	1683	;# 
  4614     0694                     CWG1DBF         equ	1684	;# 
  4615     0695                     CWG1CON0        equ	1685	;# 
  4616     0696                     CWG1CON1        equ	1686	;# 
  4617     0697                     CWG1AS0         equ	1687	;# 
  4618     0698                     CWG1AS1         equ	1688	;# 
  4619     0699                     CWG1STR         equ	1689	;# 
  4620     0711                     CWG2CLKCON      equ	1809	;# 
  4621     0712                     CWG2DAT         equ	1810	;# 
  4622     0713                     CWG2DBR         equ	1811	;# 
  4623     0714                     CWG2DBF         equ	1812	;# 
  4624     0715                     CWG2CON0        equ	1813	;# 
  4625     0716                     CWG2CON1        equ	1814	;# 
  4626     0717                     CWG2AS0         equ	1815	;# 
  4627     0718                     CWG2AS1         equ	1816	;# 
  4628     0719                     CWG2STR         equ	1817	;# 
  4629     0891                     NVMADR          equ	2193	;# 
  4630     0891                     EEADR           equ	2193	;# 
  4631     0891                     PMADR           equ	2193	;# 
  4632     0891                     NVMADRL         equ	2193	;# 
  4633     0891                     EEADRL          equ	2193	;# 
  4634     0891                     PMADRL          equ	2193	;# 
  4635     0892                     NVMADRH         equ	2194	;# 
  4636     0892                     EEADRH          equ	2194	;# 
  4637     0892                     PMADRH          equ	2194	;# 
  4638     0893                     NVMDAT          equ	2195	;# 
  4639     0893                     EEDAT           equ	2195	;# 
  4640     0893                     PMDAT           equ	2195	;# 
  4641     0893                     NVMDATL         equ	2195	;# 
  4642     0893                     EEDATL          equ	2195	;# 
  4643     0893                     PMDATL          equ	2195	;# 
  4644     0894                     NVMDATH         equ	2196	;# 
  4645     0894                     EEDATH          equ	2196	;# 
  4646     0894                     PMDATH          equ	2196	;# 
  4647     0895                     NVMCON1         equ	2197	;# 
  4648     0895                     EECON1          equ	2197	;# 
  4649     0895                     PMCON1          equ	2197	;# 
  4650     0896                     NVMCON2         equ	2198	;# 
  4651     0896                     EECON2          equ	2198	;# 
  4652     0896                     PMCON2          equ	2198	;# 
  4653     089B                     PCON0           equ	2203	;# 
  4654     0911                     PMD0            equ	2321	;# 
  4655     0912                     PMD1            equ	2322	;# 
  4656     0913                     PMD2            equ	2323	;# 
  4657     0914                     PMD3            equ	2324	;# 
  4658     0915                     PMD4            equ	2325	;# 
  4659     0916                     PMD5            equ	2326	;# 
  4660     0918                     CPUDOZE         equ	2328	;# 
  4661     0919                     OSCCON1         equ	2329	;# 
  4662     091A                     OSCCON2         equ	2330	;# 
  4663     091B                     OSCCON3         equ	2331	;# 
  4664     091C                     OSCSTAT1        equ	2332	;# 
  4665     091D                     OSCEN           equ	2333	;# 
  4666     091E                     OSCTUNE         equ	2334	;# 
  4667     091F                     OSCFRQ          equ	2335	;# 
  4668     0E0F                     PPSLOCK         equ	3599	;# 
  4669     0E10                     INTPPS          equ	3600	;# 
  4670     0E11                     T0CKIPPS        equ	3601	;# 
  4671     0E12                     T1CKIPPS        equ	3602	;# 
  4672     0E13                     T1GPPS          equ	3603	;# 
  4673     0E14                     CCP1PPS         equ	3604	;# 
  4674     0E15                     CCP2PPS         equ	3605	;# 
  4675     0E16                     CCP3PPS         equ	3606	;# 
  4676     0E17                     CCP4PPS         equ	3607	;# 
  4677     0E18                     CWG1PPS         equ	3608	;# 
  4678     0E19                     CWG2PPS         equ	3609	;# 
  4679     0E1A                     MDCIN1PPS       equ	3610	;# 
  4680     0E1B                     MDCIN2PPS       equ	3611	;# 
  4681     0E1C                     MDMINPPS        equ	3612	;# 
  4682     0E1D                     SSP2CLKPPS      equ	3613	;# 
  4683     0E1E                     SSP2DATPPS      equ	3614	;# 
  4684     0E1F                     SSP2SSPPS       equ	3615	;# 
  4685     0E20                     SSP1CLKPPS      equ	3616	;# 
  4686     0E21                     SSP1DATPPS      equ	3617	;# 
  4687     0E22                     SSP1SSPPS       equ	3618	;# 
  4688     0E24                     RXPPS           equ	3620	;# 
  4689     0E25                     TXPPS           equ	3621	;# 
  4690     0E28                     CLCIN0PPS       equ	3624	;# 
  4691     0E29                     CLCIN1PPS       equ	3625	;# 
  4692     0E2A                     CLCIN2PPS       equ	3626	;# 
  4693     0E2B                     CLCIN3PPS       equ	3627	;# 
  4694     0E2C                     T3CKIPPS        equ	3628	;# 
  4695     0E2D                     T3GPPS          equ	3629	;# 
  4696     0E2E                     T5CKIPPS        equ	3630	;# 
  4697     0E2F                     T5GPPS          equ	3631	;# 
  4698     0E90                     RA0PPS          equ	3728	;# 
  4699     0E91                     RA1PPS          equ	3729	;# 
  4700     0E92                     RA2PPS          equ	3730	;# 
  4701     0E94                     RA4PPS          equ	3732	;# 
  4702     0E95                     RA5PPS          equ	3733	;# 
  4703     0E9C                     RB4PPS          equ	3740	;# 
  4704     0E9D                     RB5PPS          equ	3741	;# 
  4705     0E9E                     RB6PPS          equ	3742	;# 
  4706     0E9F                     RB7PPS          equ	3743	;# 
  4707     0EA0                     RC0PPS          equ	3744	;# 
  4708     0EA1                     RC1PPS          equ	3745	;# 
  4709     0EA2                     RC2PPS          equ	3746	;# 
  4710     0EA3                     RC3PPS          equ	3747	;# 
  4711     0EA4                     RC4PPS          equ	3748	;# 
  4712     0EA5                     RC5PPS          equ	3749	;# 
  4713     0EA6                     RC6PPS          equ	3750	;# 
  4714     0EA7                     RC7PPS          equ	3751	;# 
  4715     0F0F                     CLCDATA         equ	3855	;# 
  4716     0F10                     CLC1CON         equ	3856	;# 
  4717     0F11                     CLC1POL         equ	3857	;# 
  4718     0F12                     CLC1SEL0        equ	3858	;# 
  4719     0F13                     CLC1SEL1        equ	3859	;# 
  4720     0F14                     CLC1SEL2        equ	3860	;# 
  4721     0F15                     CLC1SEL3        equ	3861	;# 
  4722     0F16                     CLC1GLS0        equ	3862	;# 
  4723     0F17                     CLC1GLS1        equ	3863	;# 
  4724     0F18                     CLC1GLS2        equ	3864	;# 
  4725     0F19                     CLC1GLS3        equ	3865	;# 
  4726     0F1A                     CLC2CON         equ	3866	;# 
  4727     0F1B                     CLC2POL         equ	3867	;# 
  4728     0F1C                     CLC2SEL0        equ	3868	;# 
  4729     0F1D                     CLC2SEL1        equ	3869	;# 
  4730     0F1E                     CLC2SEL2        equ	3870	;# 
  4731     0F1F                     CLC2SEL3        equ	3871	;# 
  4732     0F20                     CLC2GLS0        equ	3872	;# 
  4733     0F21                     CLC2GLS1        equ	3873	;# 
  4734     0F22                     CLC2GLS2        equ	3874	;# 
  4735     0F23                     CLC2GLS3        equ	3875	;# 
  4736     0F24                     CLC3CON         equ	3876	;# 
  4737     0F25                     CLC3POL         equ	3877	;# 
  4738     0F26                     CLC3SEL0        equ	3878	;# 
  4739     0F27                     CLC3SEL1        equ	3879	;# 
  4740     0F28                     CLC3SEL2        equ	3880	;# 
  4741     0F29                     CLC3SEL3        equ	3881	;# 
  4742     0F2A                     CLC3GLS0        equ	3882	;# 
  4743     0F2B                     CLC3GLS1        equ	3883	;# 
  4744     0F2C                     CLC3GLS2        equ	3884	;# 
  4745     0F2D                     CLC3GLS3        equ	3885	;# 
  4746     0F2E                     CLC4CON         equ	3886	;# 
  4747     0F2F                     CLC4POL         equ	3887	;# 
  4748     0F30                     CLC4SEL0        equ	3888	;# 
  4749     0F31                     CLC4SEL1        equ	3889	;# 
  4750     0F32                     CLC4SEL2        equ	3890	;# 
  4751     0F33                     CLC4SEL3        equ	3891	;# 
  4752     0F34                     CLC4GLS0        equ	3892	;# 
  4753     0F35                     CLC4GLS1        equ	3893	;# 
  4754     0F36                     CLC4GLS2        equ	3894	;# 
  4755     0F37                     CLC4GLS3        equ	3895	;# 
  4756     0FE4                     STATUS_SHAD     equ	4068	;# 
  4757     0FE5                     WREG_SHAD       equ	4069	;# 
  4758     0FE6                     BSR_SHAD        equ	4070	;# 
  4759     0FE7                     PCLATH_SHAD     equ	4071	;# 
  4760     0FE8                     FSR0L_SHAD      equ	4072	;# 
  4761     0FE9                     FSR0H_SHAD      equ	4073	;# 
  4762     0FEA                     FSR1L_SHAD      equ	4074	;# 
  4763     0FEB                     FSR1H_SHAD      equ	4075	;# 
  4764     0FED                     STKPTR          equ	4077	;# 
  4765     0FEE                     TOSL            equ	4078	;# 
  4766     0FEF                     TOSH            equ	4079	;# 
  4767     0000                     INDF0           equ	0	;# 
  4768     0001                     INDF1           equ	1	;# 
  4769     0002                     PCL             equ	2	;# 
  4770     0003                     STATUS          equ	3	;# 
  4771     0004                     FSR0L           equ	4	;# 
  4772     0005                     FSR0H           equ	5	;# 
  4773     0006                     FSR1L           equ	6	;# 
  4774     0007                     FSR1H           equ	7	;# 
  4775     0008                     BSR             equ	8	;# 
  4776     0009                     WREG            equ	9	;# 
  4777     000A                     PCLATH          equ	10	;# 
  4778     000B                     INTCON          equ	11	;# 
  4779     000C                     PORTA           equ	12	;# 
  4780     000D                     PORTB           equ	13	;# 
  4781     000E                     PORTC           equ	14	;# 
  4782     0010                     PIR0            equ	16	;# 
  4783     0011                     PIR1            equ	17	;# 
  4784     0012                     PIR2            equ	18	;# 
  4785     0013                     PIR3            equ	19	;# 
  4786     0014                     PIR4            equ	20	;# 
  4787     0015                     TMR0L           equ	21	;# 
  4788     0015                     TMR0            equ	21	;# 
  4789     0016                     TMR0H           equ	22	;# 
  4790     0016                     PR0             equ	22	;# 
  4791     0017                     T0CON0          equ	23	;# 
  4792     0018                     T0CON1          equ	24	;# 
  4793     0019                     TMR1            equ	25	;# 
  4794     0019                     TMR1L           equ	25	;# 
  4795     001A                     TMR1H           equ	26	;# 
  4796     001B                     T1CON           equ	27	;# 
  4797     001C                     T1GCON          equ	28	;# 
  4798     001D                     TMR2            equ	29	;# 
  4799     001E                     PR2             equ	30	;# 
  4800     001F                     T2CON           equ	31	;# 
  4801     008C                     TRISA           equ	140	;# 
  4802     008D                     TRISB           equ	141	;# 
  4803     008E                     TRISC           equ	142	;# 
  4804     0090                     PIE0            equ	144	;# 
  4805     0091                     PIE1            equ	145	;# 
  4806     0092                     PIE2            equ	146	;# 
  4807     0093                     PIE3            equ	147	;# 
  4808     0094                     PIE4            equ	148	;# 
  4809     0097                     WDTCON          equ	151	;# 
  4810     009B                     ADRES           equ	155	;# 
  4811     009B                     ADRESL          equ	155	;# 
  4812     009C                     ADRESH          equ	156	;# 
  4813     009D                     ADCON0          equ	157	;# 
  4814     009E                     ADCON1          equ	158	;# 
  4815     009F                     ADACT           equ	159	;# 
  4816     010C                     LATA            equ	268	;# 
  4817     010D                     LATB            equ	269	;# 
  4818     010E                     LATC            equ	270	;# 
  4819     0111                     CM1CON0         equ	273	;# 
  4820     0112                     CM1CON1         equ	274	;# 
  4821     0113                     CM2CON0         equ	275	;# 
  4822     0114                     CM2CON1         equ	276	;# 
  4823     0115                     CMOUT           equ	277	;# 
  4824     0116                     BORCON          equ	278	;# 
  4825     0117                     FVRCON          equ	279	;# 
  4826     0118                     DACCON0         equ	280	;# 
  4827     0119                     DACCON1         equ	281	;# 
  4828     018C                     ANSELA          equ	396	;# 
  4829     018D                     ANSELB          equ	397	;# 
  4830     018E                     ANSELC          equ	398	;# 
  4831     0197                     VREGCON         equ	407	;# 
  4832     0199                     RC1REG          equ	409	;# 
  4833     0199                     RCREG           equ	409	;# 
  4834     0199                     RCREG1          equ	409	;# 
  4835     019A                     TX1REG          equ	410	;# 
  4836     019A                     TXREG1          equ	410	;# 
  4837     019A                     TXREG           equ	410	;# 
  4838     019B                     SP1BRG          equ	411	;# 
  4839     019B                     SPBRG           equ	411	;# 
  4840     019B                     SP1BRGL         equ	411	;# 
  4841     019B                     SPBRG1          equ	411	;# 
  4842     019B                     SPBRGL          equ	411	;# 
  4843     019C                     SP1BRGH         equ	412	;# 
  4844     019C                     SPBRGH          equ	412	;# 
  4845     019C                     SPBRGH1         equ	412	;# 
  4846     019D                     RC1STA          equ	413	;# 
  4847     019D                     RCSTA1          equ	413	;# 
  4848     019D                     RCSTA           equ	413	;# 
  4849     019E                     TX1STA          equ	414	;# 
  4850     019E                     TXSTA1          equ	414	;# 
  4851     019E                     TXSTA           equ	414	;# 
  4852     019F                     BAUD1CON        equ	415	;# 
  4853     019F                     BAUDCON1        equ	415	;# 
  4854     019F                     BAUDCTL1        equ	415	;# 
  4855     019F                     BAUDCON         equ	415	;# 
  4856     019F                     BAUDCTL         equ	415	;# 
  4857     020C                     WPUA            equ	524	;# 
  4858     020D                     WPUB            equ	525	;# 
  4859     020E                     WPUC            equ	526	;# 
  4860     0211                     SSP1BUF         equ	529	;# 
  4861     0211                     SSPBUF          equ	529	;# 
  4862     0212                     SSP1ADD         equ	530	;# 
  4863     0212                     SSPADD          equ	530	;# 
  4864     0213                     SSP1MSK         equ	531	;# 
  4865     0213                     SSPMSK          equ	531	;# 
  4866     0214                     SSP1STAT        equ	532	;# 
  4867     0214                     SSPSTAT         equ	532	;# 
  4868     0215                     SSP1CON1        equ	533	;# 
  4869     0215                     SSPCON          equ	533	;# 
  4870     0215                     SSPCON1         equ	533	;# 
  4871     0215                     SSP1CON         equ	533	;# 
  4872     0216                     SSP1CON2        equ	534	;# 
  4873     0216                     SSPCON2         equ	534	;# 
  4874     0217                     SSP1CON3        equ	535	;# 
  4875     0217                     SSPCON3         equ	535	;# 
  4876     0219                     SSP2BUF         equ	537	;# 
  4877     021A                     SSP2ADD         equ	538	;# 
  4878     021B                     SSP2MSK         equ	539	;# 
  4879     021C                     SSP2STAT        equ	540	;# 
  4880     021D                     SSP2CON1        equ	541	;# 
  4881     021D                     SSP2CON         equ	541	;# 
  4882     021E                     SSP2CON2        equ	542	;# 
  4883     021F                     SSP2CON3        equ	543	;# 
  4884     028C                     ODCONA          equ	652	;# 
  4885     028D                     ODCONB          equ	653	;# 
  4886     028E                     ODCONC          equ	654	;# 
  4887     0291                     CCPR1           equ	657	;# 
  4888     0291                     CCPR1L          equ	657	;# 
  4889     0292                     CCPR1H          equ	658	;# 
  4890     0293                     CCP1CON         equ	659	;# 
  4891     0294                     CCP1CAP         equ	660	;# 
  4892     0295                     CCPR2           equ	661	;# 
  4893     0295                     CCPR2L          equ	661	;# 
  4894     0296                     CCPR2H          equ	662	;# 
  4895     0297                     CCP2CON         equ	663	;# 
  4896     0298                     CCP2CAP         equ	664	;# 
  4897     029F                     CCPTMRS         equ	671	;# 
  4898     030C                     SLRCONA         equ	780	;# 
  4899     030D                     SLRCONB         equ	781	;# 
  4900     030E                     SLRCONC         equ	782	;# 
  4901     0311                     CCPR3           equ	785	;# 
  4902     0311                     CCPR3L          equ	785	;# 
  4903     0312                     CCPR3H          equ	786	;# 
  4904     0313                     CCP3CON         equ	787	;# 
  4905     0314                     CCP3CAP         equ	788	;# 
  4906     0315                     CCPR4           equ	789	;# 
  4907     0315                     CCPR4L          equ	789	;# 
  4908     0316                     CCPR4H          equ	790	;# 
  4909     0317                     CCP4CON         equ	791	;# 
  4910     0318                     CCP4CAP         equ	792	;# 
  4911     038C                     INLVLA          equ	908	;# 
  4912     038D                     INLVLB          equ	909	;# 
  4913     038E                     INLVLC          equ	910	;# 
  4914     0391                     IOCAP           equ	913	;# 
  4915     0392                     IOCAN           equ	914	;# 
  4916     0393                     IOCAF           equ	915	;# 
  4917     0394                     IOCBP           equ	916	;# 
  4918     0395                     IOCBN           equ	917	;# 
  4919     0396                     IOCBF           equ	918	;# 
  4920     0397                     IOCCP           equ	919	;# 
  4921     0398                     IOCCN           equ	920	;# 
  4922     0399                     IOCCF           equ	921	;# 
  4923     039A                     CLKRCON         equ	922	;# 
  4924     039C                     MDCON           equ	924	;# 
  4925     039D                     MDSRC           equ	925	;# 
  4926     039E                     MDCARH          equ	926	;# 
  4927     039F                     MDCARL          equ	927	;# 
  4928     0411                     TMR3            equ	1041	;# 
  4929     0411                     TMR3L           equ	1041	;# 
  4930     0412                     TMR3H           equ	1042	;# 
  4931     0413                     T3CON           equ	1043	;# 
  4932     0414                     T3GCON          equ	1044	;# 
  4933     0415                     TMR4            equ	1045	;# 
  4934     0416                     PR4             equ	1046	;# 
  4935     0417                     T4CON           equ	1047	;# 
  4936     0418                     TMR5            equ	1048	;# 
  4937     0418                     TMR5L           equ	1048	;# 
  4938     0419                     TMR5H           equ	1049	;# 
  4939     041A                     T5CON           equ	1050	;# 
  4940     041B                     T5GCON          equ	1051	;# 
  4941     041C                     TMR6            equ	1052	;# 
  4942     041D                     PR6             equ	1053	;# 
  4943     041E                     T6CON           equ	1054	;# 
  4944     041F                     CCDCON          equ	1055	;# 
  4945     0498                     NCO1ACC         equ	1176	;# 
  4946     0498                     NCO1ACCL        equ	1176	;# 
  4947     0499                     NCO1ACCH        equ	1177	;# 
  4948     049A                     NCO1ACCU        equ	1178	;# 
  4949     049B                     NCO1INC         equ	1179	;# 
  4950     049B                     NCO1INCL        equ	1179	;# 
  4951     049C                     NCO1INCH        equ	1180	;# 
  4952     049D                     NCO1INCU        equ	1181	;# 
  4953     049E                     NCO1CON         equ	1182	;# 
  4954     049F                     NCO1CLK         equ	1183	;# 
  4955     0617                     PWM5DCL         equ	1559	;# 
  4956     0618                     PWM5DCH         equ	1560	;# 
  4957     0619                     PWM5CON         equ	1561	;# 
  4958     0619                     PWM5CON0        equ	1561	;# 
  4959     061A                     PWM6DCL         equ	1562	;# 
  4960     061B                     PWM6DCH         equ	1563	;# 
  4961     061C                     PWM6CON         equ	1564	;# 
  4962     061C                     PWM6CON0        equ	1564	;# 
  4963     061F                     PWMTMRS         equ	1567	;# 
  4964     0691                     CWG1CLKCON      equ	1681	;# 
  4965     0692                     CWG1DAT         equ	1682	;# 
  4966     0693                     CWG1DBR         equ	1683	;# 
  4967     0694                     CWG1DBF         equ	1684	;# 
  4968     0695                     CWG1CON0        equ	1685	;# 
  4969     0696                     CWG1CON1        equ	1686	;# 
  4970     0697                     CWG1AS0         equ	1687	;# 
  4971     0698                     CWG1AS1         equ	1688	;# 
  4972     0699                     CWG1STR         equ	1689	;# 
  4973     0711                     CWG2CLKCON      equ	1809	;# 
  4974     0712                     CWG2DAT         equ	1810	;# 
  4975     0713                     CWG2DBR         equ	1811	;# 
  4976     0714                     CWG2DBF         equ	1812	;# 
  4977     0715                     CWG2CON0        equ	1813	;# 
  4978     0716                     CWG2CON1        equ	1814	;# 
  4979     0717                     CWG2AS0         equ	1815	;# 
  4980     0718                     CWG2AS1         equ	1816	;# 
  4981     0719                     CWG2STR         equ	1817	;# 
  4982     0891                     NVMADR          equ	2193	;# 
  4983     0891                     EEADR           equ	2193	;# 
  4984     0891                     PMADR           equ	2193	;# 
  4985     0891                     NVMADRL         equ	2193	;# 
  4986     0891                     EEADRL          equ	2193	;# 
  4987     0891                     PMADRL          equ	2193	;# 
  4988     0892                     NVMADRH         equ	2194	;# 
  4989     0892                     EEADRH          equ	2194	;# 
  4990     0892                     PMADRH          equ	2194	;# 
  4991     0893                     NVMDAT          equ	2195	;# 
  4992     0893                     EEDAT           equ	2195	;# 
  4993     0893                     PMDAT           equ	2195	;# 
  4994     0893                     NVMDATL         equ	2195	;# 
  4995     0893                     EEDATL          equ	2195	;# 
  4996     0893                     PMDATL          equ	2195	;# 
  4997     0894                     NVMDATH         equ	2196	;# 
  4998     0894                     EEDATH          equ	2196	;# 
  4999     0894                     PMDATH          equ	2196	;# 
  5000     0895                     NVMCON1         equ	2197	;# 
  5001     0895                     EECON1          equ	2197	;# 
  5002     0895                     PMCON1          equ	2197	;# 
  5003     0896                     NVMCON2         equ	2198	;# 
  5004     0896                     EECON2          equ	2198	;# 
  5005     0896                     PMCON2          equ	2198	;# 
  5006     089B                     PCON0           equ	2203	;# 
  5007     0911                     PMD0            equ	2321	;# 
  5008     0912                     PMD1            equ	2322	;# 
  5009     0913                     PMD2            equ	2323	;# 
  5010     0914                     PMD3            equ	2324	;# 
  5011     0915                     PMD4            equ	2325	;# 
  5012     0916                     PMD5            equ	2326	;# 
  5013     0918                     CPUDOZE         equ	2328	;# 
  5014     0919                     OSCCON1         equ	2329	;# 
  5015     091A                     OSCCON2         equ	2330	;# 
  5016     091B                     OSCCON3         equ	2331	;# 
  5017     091C                     OSCSTAT1        equ	2332	;# 
  5018     091D                     OSCEN           equ	2333	;# 
  5019     091E                     OSCTUNE         equ	2334	;# 
  5020     091F                     OSCFRQ          equ	2335	;# 
  5021     0E0F                     PPSLOCK         equ	3599	;# 
  5022     0E10                     INTPPS          equ	3600	;# 
  5023     0E11                     T0CKIPPS        equ	3601	;# 
  5024     0E12                     T1CKIPPS        equ	3602	;# 
  5025     0E13                     T1GPPS          equ	3603	;# 
  5026     0E14                     CCP1PPS         equ	3604	;# 
  5027     0E15                     CCP2PPS         equ	3605	;# 
  5028     0E16                     CCP3PPS         equ	3606	;# 
  5029     0E17                     CCP4PPS         equ	3607	;# 
  5030     0E18                     CWG1PPS         equ	3608	;# 
  5031     0E19                     CWG2PPS         equ	3609	;# 
  5032     0E1A                     MDCIN1PPS       equ	3610	;# 
  5033     0E1B                     MDCIN2PPS       equ	3611	;# 
  5034     0E1C                     MDMINPPS        equ	3612	;# 
  5035     0E1D                     SSP2CLKPPS      equ	3613	;# 
  5036     0E1E                     SSP2DATPPS      equ	3614	;# 
  5037     0E1F                     SSP2SSPPS       equ	3615	;# 
  5038     0E20                     SSP1CLKPPS      equ	3616	;# 
  5039     0E21                     SSP1DATPPS      equ	3617	;# 
  5040     0E22                     SSP1SSPPS       equ	3618	;# 
  5041     0E24                     RXPPS           equ	3620	;# 
  5042     0E25                     TXPPS           equ	3621	;# 
  5043     0E28                     CLCIN0PPS       equ	3624	;# 
  5044     0E29                     CLCIN1PPS       equ	3625	;# 
  5045     0E2A                     CLCIN2PPS       equ	3626	;# 
  5046     0E2B                     CLCIN3PPS       equ	3627	;# 
  5047     0E2C                     T3CKIPPS        equ	3628	;# 
  5048     0E2D                     T3GPPS          equ	3629	;# 
  5049     0E2E                     T5CKIPPS        equ	3630	;# 
  5050     0E2F                     T5GPPS          equ	3631	;# 
  5051     0E90                     RA0PPS          equ	3728	;# 
  5052     0E91                     RA1PPS          equ	3729	;# 
  5053     0E92                     RA2PPS          equ	3730	;# 
  5054     0E94                     RA4PPS          equ	3732	;# 
  5055     0E95                     RA5PPS          equ	3733	;# 
  5056     0E9C                     RB4PPS          equ	3740	;# 
  5057     0E9D                     RB5PPS          equ	3741	;# 
  5058     0E9E                     RB6PPS          equ	3742	;# 
  5059     0E9F                     RB7PPS          equ	3743	;# 
  5060     0EA0                     RC0PPS          equ	3744	;# 
  5061     0EA1                     RC1PPS          equ	3745	;# 
  5062     0EA2                     RC2PPS          equ	3746	;# 
  5063     0EA3                     RC3PPS          equ	3747	;# 
  5064     0EA4                     RC4PPS          equ	3748	;# 
  5065     0EA5                     RC5PPS          equ	3749	;# 
  5066     0EA6                     RC6PPS          equ	3750	;# 
  5067     0EA7                     RC7PPS          equ	3751	;# 
  5068     0F0F                     CLCDATA         equ	3855	;# 
  5069     0F10                     CLC1CON         equ	3856	;# 
  5070     0F11                     CLC1POL         equ	3857	;# 
  5071     0F12                     CLC1SEL0        equ	3858	;# 
  5072     0F13                     CLC1SEL1        equ	3859	;# 
  5073     0F14                     CLC1SEL2        equ	3860	;# 
  5074     0F15                     CLC1SEL3        equ	3861	;# 
  5075     0F16                     CLC1GLS0        equ	3862	;# 
  5076     0F17                     CLC1GLS1        equ	3863	;# 
  5077     0F18                     CLC1GLS2        equ	3864	;# 
  5078     0F19                     CLC1GLS3        equ	3865	;# 
  5079     0F1A                     CLC2CON         equ	3866	;# 
  5080     0F1B                     CLC2POL         equ	3867	;# 
  5081     0F1C                     CLC2SEL0        equ	3868	;# 
  5082     0F1D                     CLC2SEL1        equ	3869	;# 
  5083     0F1E                     CLC2SEL2        equ	3870	;# 
  5084     0F1F                     CLC2SEL3        equ	3871	;# 
  5085     0F20                     CLC2GLS0        equ	3872	;# 
  5086     0F21                     CLC2GLS1        equ	3873	;# 
  5087     0F22                     CLC2GLS2        equ	3874	;# 
  5088     0F23                     CLC2GLS3        equ	3875	;# 
  5089     0F24                     CLC3CON         equ	3876	;# 
  5090     0F25                     CLC3POL         equ	3877	;# 
  5091     0F26                     CLC3SEL0        equ	3878	;# 
  5092     0F27                     CLC3SEL1        equ	3879	;# 
  5093     0F28                     CLC3SEL2        equ	3880	;# 
  5094     0F29                     CLC3SEL3        equ	3881	;# 
  5095     0F2A                     CLC3GLS0        equ	3882	;# 
  5096     0F2B                     CLC3GLS1        equ	3883	;# 
  5097     0F2C                     CLC3GLS2        equ	3884	;# 
  5098     0F2D                     CLC3GLS3        equ	3885	;# 
  5099     0F2E                     CLC4CON         equ	3886	;# 
  5100     0F2F                     CLC4POL         equ	3887	;# 
  5101     0F30                     CLC4SEL0        equ	3888	;# 
  5102     0F31                     CLC4SEL1        equ	3889	;# 
  5103     0F32                     CLC4SEL2        equ	3890	;# 
  5104     0F33                     CLC4SEL3        equ	3891	;# 
  5105     0F34                     CLC4GLS0        equ	3892	;# 
  5106     0F35                     CLC4GLS1        equ	3893	;# 
  5107     0F36                     CLC4GLS2        equ	3894	;# 
  5108     0F37                     CLC4GLS3        equ	3895	;# 
  5109     0FE4                     STATUS_SHAD     equ	4068	;# 
  5110     0FE5                     WREG_SHAD       equ	4069	;# 
  5111     0FE6                     BSR_SHAD        equ	4070	;# 
  5112     0FE7                     PCLATH_SHAD     equ	4071	;# 
  5113     0FE8                     FSR0L_SHAD      equ	4072	;# 
  5114     0FE9                     FSR0H_SHAD      equ	4073	;# 
  5115     0FEA                     FSR1L_SHAD      equ	4074	;# 
  5116     0FEB                     FSR1H_SHAD      equ	4075	;# 
  5117     0FED                     STKPTR          equ	4077	;# 
  5118     0FEE                     TOSL            equ	4078	;# 
  5119     0FEF                     TOSH            equ	4079	;# 
  5120     0000                     INDF0           equ	0	;# 
  5121     0001                     INDF1           equ	1	;# 
  5122     0002                     PCL             equ	2	;# 
  5123     0003                     STATUS          equ	3	;# 
  5124     0004                     FSR0L           equ	4	;# 
  5125     0005                     FSR0H           equ	5	;# 
  5126     0006                     FSR1L           equ	6	;# 
  5127     0007                     FSR1H           equ	7	;# 
  5128     0008                     BSR             equ	8	;# 
  5129     0009                     WREG            equ	9	;# 
  5130     000A                     PCLATH          equ	10	;# 
  5131     000B                     INTCON          equ	11	;# 
  5132     000C                     PORTA           equ	12	;# 
  5133     000D                     PORTB           equ	13	;# 
  5134     000E                     PORTC           equ	14	;# 
  5135     0010                     PIR0            equ	16	;# 
  5136     0011                     PIR1            equ	17	;# 
  5137     0012                     PIR2            equ	18	;# 
  5138     0013                     PIR3            equ	19	;# 
  5139     0014                     PIR4            equ	20	;# 
  5140     0015                     TMR0L           equ	21	;# 
  5141     0015                     TMR0            equ	21	;# 
  5142     0016                     TMR0H           equ	22	;# 
  5143     0016                     PR0             equ	22	;# 
  5144     0017                     T0CON0          equ	23	;# 
  5145     0018                     T0CON1          equ	24	;# 
  5146     0019                     TMR1            equ	25	;# 
  5147     0019                     TMR1L           equ	25	;# 
  5148     001A                     TMR1H           equ	26	;# 
  5149     001B                     T1CON           equ	27	;# 
  5150     001C                     T1GCON          equ	28	;# 
  5151     001D                     TMR2            equ	29	;# 
  5152     001E                     PR2             equ	30	;# 
  5153     001F                     T2CON           equ	31	;# 
  5154     008C                     TRISA           equ	140	;# 
  5155     008D                     TRISB           equ	141	;# 
  5156     008E                     TRISC           equ	142	;# 
  5157     0090                     PIE0            equ	144	;# 
  5158     0091                     PIE1            equ	145	;# 
  5159     0092                     PIE2            equ	146	;# 
  5160     0093                     PIE3            equ	147	;# 
  5161     0094                     PIE4            equ	148	;# 
  5162     0097                     WDTCON          equ	151	;# 
  5163     009B                     ADRES           equ	155	;# 
  5164     009B                     ADRESL          equ	155	;# 
  5165     009C                     ADRESH          equ	156	;# 
  5166     009D                     ADCON0          equ	157	;# 
  5167     009E                     ADCON1          equ	158	;# 
  5168     009F                     ADACT           equ	159	;# 
  5169     010C                     LATA            equ	268	;# 
  5170     010D                     LATB            equ	269	;# 
  5171     010E                     LATC            equ	270	;# 
  5172     0111                     CM1CON0         equ	273	;# 
  5173     0112                     CM1CON1         equ	274	;# 
  5174     0113                     CM2CON0         equ	275	;# 
  5175     0114                     CM2CON1         equ	276	;# 
  5176     0115                     CMOUT           equ	277	;# 
  5177     0116                     BORCON          equ	278	;# 
  5178     0117                     FVRCON          equ	279	;# 
  5179     0118                     DACCON0         equ	280	;# 
  5180     0119                     DACCON1         equ	281	;# 
  5181     018C                     ANSELA          equ	396	;# 
  5182     018D                     ANSELB          equ	397	;# 
  5183     018E                     ANSELC          equ	398	;# 
  5184     0197                     VREGCON         equ	407	;# 
  5185     0199                     RC1REG          equ	409	;# 
  5186     0199                     RCREG           equ	409	;# 
  5187     0199                     RCREG1          equ	409	;# 
  5188     019A                     TX1REG          equ	410	;# 
  5189     019A                     TXREG1          equ	410	;# 
  5190     019A                     TXREG           equ	410	;# 
  5191     019B                     SP1BRG          equ	411	;# 
  5192     019B                     SPBRG           equ	411	;# 
  5193     019B                     SP1BRGL         equ	411	;# 
  5194     019B                     SPBRG1          equ	411	;# 
  5195     019B                     SPBRGL          equ	411	;# 
  5196     019C                     SP1BRGH         equ	412	;# 
  5197     019C                     SPBRGH          equ	412	;# 
  5198     019C                     SPBRGH1         equ	412	;# 
  5199     019D                     RC1STA          equ	413	;# 
  5200     019D                     RCSTA1          equ	413	;# 
  5201     019D                     RCSTA           equ	413	;# 
  5202     019E                     TX1STA          equ	414	;# 
  5203     019E                     TXSTA1          equ	414	;# 
  5204     019E                     TXSTA           equ	414	;# 
  5205     019F                     BAUD1CON        equ	415	;# 
  5206     019F                     BAUDCON1        equ	415	;# 
  5207     019F                     BAUDCTL1        equ	415	;# 
  5208     019F                     BAUDCON         equ	415	;# 
  5209     019F                     BAUDCTL         equ	415	;# 
  5210     020C                     WPUA            equ	524	;# 
  5211     020D                     WPUB            equ	525	;# 
  5212     020E                     WPUC            equ	526	;# 
  5213     0211                     SSP1BUF         equ	529	;# 
  5214     0211                     SSPBUF          equ	529	;# 
  5215     0212                     SSP1ADD         equ	530	;# 
  5216     0212                     SSPADD          equ	530	;# 
  5217     0213                     SSP1MSK         equ	531	;# 
  5218     0213                     SSPMSK          equ	531	;# 
  5219     0214                     SSP1STAT        equ	532	;# 
  5220     0214                     SSPSTAT         equ	532	;# 
  5221     0215                     SSP1CON1        equ	533	;# 
  5222     0215                     SSPCON          equ	533	;# 
  5223     0215                     SSPCON1         equ	533	;# 
  5224     0215                     SSP1CON         equ	533	;# 
  5225     0216                     SSP1CON2        equ	534	;# 
  5226     0216                     SSPCON2         equ	534	;# 
  5227     0217                     SSP1CON3        equ	535	;# 
  5228     0217                     SSPCON3         equ	535	;# 
  5229     0219                     SSP2BUF         equ	537	;# 
  5230     021A                     SSP2ADD         equ	538	;# 
  5231     021B                     SSP2MSK         equ	539	;# 
  5232     021C                     SSP2STAT        equ	540	;# 
  5233     021D                     SSP2CON1        equ	541	;# 
  5234     021D                     SSP2CON         equ	541	;# 
  5235     021E                     SSP2CON2        equ	542	;# 
  5236     021F                     SSP2CON3        equ	543	;# 
  5237     028C                     ODCONA          equ	652	;# 
  5238     028D                     ODCONB          equ	653	;# 
  5239     028E                     ODCONC          equ	654	;# 
  5240     0291                     CCPR1           equ	657	;# 
  5241     0291                     CCPR1L          equ	657	;# 
  5242     0292                     CCPR1H          equ	658	;# 
  5243     0293                     CCP1CON         equ	659	;# 
  5244     0294                     CCP1CAP         equ	660	;# 
  5245     0295                     CCPR2           equ	661	;# 
  5246     0295                     CCPR2L          equ	661	;# 
  5247     0296                     CCPR2H          equ	662	;# 
  5248     0297                     CCP2CON         equ	663	;# 
  5249     0298                     CCP2CAP         equ	664	;# 
  5250     029F                     CCPTMRS         equ	671	;# 
  5251     030C                     SLRCONA         equ	780	;# 
  5252     030D                     SLRCONB         equ	781	;# 
  5253     030E                     SLRCONC         equ	782	;# 
  5254     0311                     CCPR3           equ	785	;# 
  5255     0311                     CCPR3L          equ	785	;# 
  5256     0312                     CCPR3H          equ	786	;# 
  5257     0313                     CCP3CON         equ	787	;# 
  5258     0314                     CCP3CAP         equ	788	;# 
  5259     0315                     CCPR4           equ	789	;# 
  5260     0315                     CCPR4L          equ	789	;# 
  5261     0316                     CCPR4H          equ	790	;# 
  5262     0317                     CCP4CON         equ	791	;# 
  5263     0318                     CCP4CAP         equ	792	;# 
  5264     038C                     INLVLA          equ	908	;# 
  5265     038D                     INLVLB          equ	909	;# 
  5266     038E                     INLVLC          equ	910	;# 
  5267     0391                     IOCAP           equ	913	;# 
  5268     0392                     IOCAN           equ	914	;# 
  5269     0393                     IOCAF           equ	915	;# 
  5270     0394                     IOCBP           equ	916	;# 
  5271     0395                     IOCBN           equ	917	;# 
  5272     0396                     IOCBF           equ	918	;# 
  5273     0397                     IOCCP           equ	919	;# 
  5274     0398                     IOCCN           equ	920	;# 
  5275     0399                     IOCCF           equ	921	;# 
  5276     039A                     CLKRCON         equ	922	;# 
  5277     039C                     MDCON           equ	924	;# 
  5278     039D                     MDSRC           equ	925	;# 
  5279     039E                     MDCARH          equ	926	;# 
  5280     039F                     MDCARL          equ	927	;# 
  5281     0411                     TMR3            equ	1041	;# 
  5282     0411                     TMR3L           equ	1041	;# 
  5283     0412                     TMR3H           equ	1042	;# 
  5284     0413                     T3CON           equ	1043	;# 
  5285     0414                     T3GCON          equ	1044	;# 
  5286     0415                     TMR4            equ	1045	;# 
  5287     0416                     PR4             equ	1046	;# 
  5288     0417                     T4CON           equ	1047	;# 
  5289     0418                     TMR5            equ	1048	;# 
  5290     0418                     TMR5L           equ	1048	;# 
  5291     0419                     TMR5H           equ	1049	;# 
  5292     041A                     T5CON           equ	1050	;# 
  5293     041B                     T5GCON          equ	1051	;# 
  5294     041C                     TMR6            equ	1052	;# 
  5295     041D                     PR6             equ	1053	;# 
  5296     041E                     T6CON           equ	1054	;# 
  5297     041F                     CCDCON          equ	1055	;# 
  5298     0498                     NCO1ACC         equ	1176	;# 
  5299     0498                     NCO1ACCL        equ	1176	;# 
  5300     0499                     NCO1ACCH        equ	1177	;# 
  5301     049A                     NCO1ACCU        equ	1178	;# 
  5302     049B                     NCO1INC         equ	1179	;# 
  5303     049B                     NCO1INCL        equ	1179	;# 
  5304     049C                     NCO1INCH        equ	1180	;# 
  5305     049D                     NCO1INCU        equ	1181	;# 
  5306     049E                     NCO1CON         equ	1182	;# 
  5307     049F                     NCO1CLK         equ	1183	;# 
  5308     0617                     PWM5DCL         equ	1559	;# 
  5309     0618                     PWM5DCH         equ	1560	;# 
  5310     0619                     PWM5CON         equ	1561	;# 
  5311     0619                     PWM5CON0        equ	1561	;# 
  5312     061A                     PWM6DCL         equ	1562	;# 
  5313     061B                     PWM6DCH         equ	1563	;# 
  5314     061C                     PWM6CON         equ	1564	;# 
  5315     061C                     PWM6CON0        equ	1564	;# 
  5316     061F                     PWMTMRS         equ	1567	;# 
  5317     0691                     CWG1CLKCON      equ	1681	;# 
  5318     0692                     CWG1DAT         equ	1682	;# 
  5319     0693                     CWG1DBR         equ	1683	;# 
  5320     0694                     CWG1DBF         equ	1684	;# 
  5321     0695                     CWG1CON0        equ	1685	;# 
  5322     0696                     CWG1CON1        equ	1686	;# 
  5323     0697                     CWG1AS0         equ	1687	;# 
  5324     0698                     CWG1AS1         equ	1688	;# 
  5325     0699                     CWG1STR         equ	1689	;# 
  5326     0711                     CWG2CLKCON      equ	1809	;# 
  5327     0712                     CWG2DAT         equ	1810	;# 
  5328     0713                     CWG2DBR         equ	1811	;# 
  5329     0714                     CWG2DBF         equ	1812	;# 
  5330     0715                     CWG2CON0        equ	1813	;# 
  5331     0716                     CWG2CON1        equ	1814	;# 
  5332     0717                     CWG2AS0         equ	1815	;# 
  5333     0718                     CWG2AS1         equ	1816	;# 
  5334     0719                     CWG2STR         equ	1817	;# 
  5335     0891                     NVMADR          equ	2193	;# 
  5336     0891                     EEADR           equ	2193	;# 
  5337     0891                     PMADR           equ	2193	;# 
  5338     0891                     NVMADRL         equ	2193	;# 
  5339     0891                     EEADRL          equ	2193	;# 
  5340     0891                     PMADRL          equ	2193	;# 
  5341     0892                     NVMADRH         equ	2194	;# 
  5342     0892                     EEADRH          equ	2194	;# 
  5343     0892                     PMADRH          equ	2194	;# 
  5344     0893                     NVMDAT          equ	2195	;# 
  5345     0893                     EEDAT           equ	2195	;# 
  5346     0893                     PMDAT           equ	2195	;# 
  5347     0893                     NVMDATL         equ	2195	;# 
  5348     0893                     EEDATL          equ	2195	;# 
  5349     0893                     PMDATL          equ	2195	;# 
  5350     0894                     NVMDATH         equ	2196	;# 
  5351     0894                     EEDATH          equ	2196	;# 
  5352     0894                     PMDATH          equ	2196	;# 
  5353     0895                     NVMCON1         equ	2197	;# 
  5354     0895                     EECON1          equ	2197	;# 
  5355     0895                     PMCON1          equ	2197	;# 
  5356     0896                     NVMCON2         equ	2198	;# 
  5357     0896                     EECON2          equ	2198	;# 
  5358     0896                     PMCON2          equ	2198	;# 
  5359     089B                     PCON0           equ	2203	;# 
  5360     0911                     PMD0            equ	2321	;# 
  5361     0912                     PMD1            equ	2322	;# 
  5362     0913                     PMD2            equ	2323	;# 
  5363     0914                     PMD3            equ	2324	;# 
  5364     0915                     PMD4            equ	2325	;# 
  5365     0916                     PMD5            equ	2326	;# 
  5366     0918                     CPUDOZE         equ	2328	;# 
  5367     0919                     OSCCON1         equ	2329	;# 
  5368     091A                     OSCCON2         equ	2330	;# 
  5369     091B                     OSCCON3         equ	2331	;# 
  5370     091C                     OSCSTAT1        equ	2332	;# 
  5371     091D                     OSCEN           equ	2333	;# 
  5372     091E                     OSCTUNE         equ	2334	;# 
  5373     091F                     OSCFRQ          equ	2335	;# 
  5374     0E0F                     PPSLOCK         equ	3599	;# 
  5375     0E10                     INTPPS          equ	3600	;# 
  5376     0E11                     T0CKIPPS        equ	3601	;# 
  5377     0E12                     T1CKIPPS        equ	3602	;# 
  5378     0E13                     T1GPPS          equ	3603	;# 
  5379     0E14                     CCP1PPS         equ	3604	;# 
  5380     0E15                     CCP2PPS         equ	3605	;# 
  5381     0E16                     CCP3PPS         equ	3606	;# 
  5382     0E17                     CCP4PPS         equ	3607	;# 
  5383     0E18                     CWG1PPS         equ	3608	;# 
  5384     0E19                     CWG2PPS         equ	3609	;# 
  5385     0E1A                     MDCIN1PPS       equ	3610	;# 
  5386     0E1B                     MDCIN2PPS       equ	3611	;# 
  5387     0E1C                     MDMINPPS        equ	3612	;# 
  5388     0E1D                     SSP2CLKPPS      equ	3613	;# 
  5389     0E1E                     SSP2DATPPS      equ	3614	;# 
  5390     0E1F                     SSP2SSPPS       equ	3615	;# 
  5391     0E20                     SSP1CLKPPS      equ	3616	;# 
  5392     0E21                     SSP1DATPPS      equ	3617	;# 
  5393     0E22                     SSP1SSPPS       equ	3618	;# 
  5394     0E24                     RXPPS           equ	3620	;# 
  5395     0E25                     TXPPS           equ	3621	;# 
  5396     0E28                     CLCIN0PPS       equ	3624	;# 
  5397     0E29                     CLCIN1PPS       equ	3625	;# 
  5398     0E2A                     CLCIN2PPS       equ	3626	;# 
  5399     0E2B                     CLCIN3PPS       equ	3627	;# 
  5400     0E2C                     T3CKIPPS        equ	3628	;# 
  5401     0E2D                     T3GPPS          equ	3629	;# 
  5402     0E2E                     T5CKIPPS        equ	3630	;# 
  5403     0E2F                     T5GPPS          equ	3631	;# 
  5404     0E90                     RA0PPS          equ	3728	;# 
  5405     0E91                     RA1PPS          equ	3729	;# 
  5406     0E92                     RA2PPS          equ	3730	;# 
  5407     0E94                     RA4PPS          equ	3732	;# 
  5408     0E95                     RA5PPS          equ	3733	;# 
  5409     0E9C                     RB4PPS          equ	3740	;# 
  5410     0E9D                     RB5PPS          equ	3741	;# 
  5411     0E9E                     RB6PPS          equ	3742	;# 
  5412     0E9F                     RB7PPS          equ	3743	;# 
  5413     0EA0                     RC0PPS          equ	3744	;# 
  5414     0EA1                     RC1PPS          equ	3745	;# 
  5415     0EA2                     RC2PPS          equ	3746	;# 
  5416     0EA3                     RC3PPS          equ	3747	;# 
  5417     0EA4                     RC4PPS          equ	3748	;# 
  5418     0EA5                     RC5PPS          equ	3749	;# 
  5419     0EA6                     RC6PPS          equ	3750	;# 
  5420     0EA7                     RC7PPS          equ	3751	;# 
  5421     0F0F                     CLCDATA         equ	3855	;# 
  5422     0F10                     CLC1CON         equ	3856	;# 
  5423     0F11                     CLC1POL         equ	3857	;# 
  5424     0F12                     CLC1SEL0        equ	3858	;# 
  5425     0F13                     CLC1SEL1        equ	3859	;# 
  5426     0F14                     CLC1SEL2        equ	3860	;# 
  5427     0F15                     CLC1SEL3        equ	3861	;# 
  5428     0F16                     CLC1GLS0        equ	3862	;# 
  5429     0F17                     CLC1GLS1        equ	3863	;# 
  5430     0F18                     CLC1GLS2        equ	3864	;# 
  5431     0F19                     CLC1GLS3        equ	3865	;# 
  5432     0F1A                     CLC2CON         equ	3866	;# 
  5433     0F1B                     CLC2POL         equ	3867	;# 
  5434     0F1C                     CLC2SEL0        equ	3868	;# 
  5435     0F1D                     CLC2SEL1        equ	3869	;# 
  5436     0F1E                     CLC2SEL2        equ	3870	;# 
  5437     0F1F                     CLC2SEL3        equ	3871	;# 
  5438     0F20                     CLC2GLS0        equ	3872	;# 
  5439     0F21                     CLC2GLS1        equ	3873	;# 
  5440     0F22                     CLC2GLS2        equ	3874	;# 
  5441     0F23                     CLC2GLS3        equ	3875	;# 
  5442     0F24                     CLC3CON         equ	3876	;# 
  5443     0F25                     CLC3POL         equ	3877	;# 
  5444     0F26                     CLC3SEL0        equ	3878	;# 
  5445     0F27                     CLC3SEL1        equ	3879	;# 
  5446     0F28                     CLC3SEL2        equ	3880	;# 
  5447     0F29                     CLC3SEL3        equ	3881	;# 
  5448     0F2A                     CLC3GLS0        equ	3882	;# 
  5449     0F2B                     CLC3GLS1        equ	3883	;# 
  5450     0F2C                     CLC3GLS2        equ	3884	;# 
  5451     0F2D                     CLC3GLS3        equ	3885	;# 
  5452     0F2E                     CLC4CON         equ	3886	;# 
  5453     0F2F                     CLC4POL         equ	3887	;# 
  5454     0F30                     CLC4SEL0        equ	3888	;# 
  5455     0F31                     CLC4SEL1        equ	3889	;# 
  5456     0F32                     CLC4SEL2        equ	3890	;# 
  5457     0F33                     CLC4SEL3        equ	3891	;# 
  5458     0F34                     CLC4GLS0        equ	3892	;# 
  5459     0F35                     CLC4GLS1        equ	3893	;# 
  5460     0F36                     CLC4GLS2        equ	3894	;# 
  5461     0F37                     CLC4GLS3        equ	3895	;# 
  5462     0FE4                     STATUS_SHAD     equ	4068	;# 
  5463     0FE5                     WREG_SHAD       equ	4069	;# 
  5464     0FE6                     BSR_SHAD        equ	4070	;# 
  5465     0FE7                     PCLATH_SHAD     equ	4071	;# 
  5466     0FE8                     FSR0L_SHAD      equ	4072	;# 
  5467     0FE9                     FSR0H_SHAD      equ	4073	;# 
  5468     0FEA                     FSR1L_SHAD      equ	4074	;# 
  5469     0FEB                     FSR1H_SHAD      equ	4075	;# 
  5470     0FED                     STKPTR          equ	4077	;# 
  5471     0FEE                     TOSL            equ	4078	;# 
  5472     0FEF                     TOSH            equ	4079	;# 
  5473     0000                     INDF0           equ	0	;# 
  5474     0001                     INDF1           equ	1	;# 
  5475     0002                     PCL             equ	2	;# 
  5476     0003                     STATUS          equ	3	;# 
  5477     0004                     FSR0L           equ	4	;# 
  5478     0005                     FSR0H           equ	5	;# 
  5479     0006                     FSR1L           equ	6	;# 
  5480     0007                     FSR1H           equ	7	;# 
  5481     0008                     BSR             equ	8	;# 
  5482     0009                     WREG            equ	9	;# 
  5483     000A                     PCLATH          equ	10	;# 
  5484     000B                     INTCON          equ	11	;# 
  5485     000C                     PORTA           equ	12	;# 
  5486     000D                     PORTB           equ	13	;# 
  5487     000E                     PORTC           equ	14	;# 
  5488     0010                     PIR0            equ	16	;# 
  5489     0011                     PIR1            equ	17	;# 
  5490     0012                     PIR2            equ	18	;# 
  5491     0013                     PIR3            equ	19	;# 
  5492     0014                     PIR4            equ	20	;# 
  5493     0015                     TMR0L           equ	21	;# 
  5494     0015                     TMR0            equ	21	;# 
  5495     0016                     TMR0H           equ	22	;# 
  5496     0016                     PR0             equ	22	;# 
  5497     0017                     T0CON0          equ	23	;# 
  5498     0018                     T0CON1          equ	24	;# 
  5499     0019                     TMR1            equ	25	;# 
  5500     0019                     TMR1L           equ	25	;# 
  5501     001A                     TMR1H           equ	26	;# 
  5502     001B                     T1CON           equ	27	;# 
  5503     001C                     T1GCON          equ	28	;# 
  5504     001D                     TMR2            equ	29	;# 
  5505     001E                     PR2             equ	30	;# 
  5506     001F                     T2CON           equ	31	;# 
  5507     008C                     TRISA           equ	140	;# 
  5508     008D                     TRISB           equ	141	;# 
  5509     008E                     TRISC           equ	142	;# 
  5510     0090                     PIE0            equ	144	;# 
  5511     0091                     PIE1            equ	145	;# 
  5512     0092                     PIE2            equ	146	;# 
  5513     0093                     PIE3            equ	147	;# 
  5514     0094                     PIE4            equ	148	;# 
  5515     0097                     WDTCON          equ	151	;# 
  5516     009B                     ADRES           equ	155	;# 
  5517     009B                     ADRESL          equ	155	;# 
  5518     009C                     ADRESH          equ	156	;# 
  5519     009D                     ADCON0          equ	157	;# 
  5520     009E                     ADCON1          equ	158	;# 
  5521     009F                     ADACT           equ	159	;# 
  5522     010C                     LATA            equ	268	;# 
  5523     010D                     LATB            equ	269	;# 
  5524     010E                     LATC            equ	270	;# 
  5525     0111                     CM1CON0         equ	273	;# 
  5526     0112                     CM1CON1         equ	274	;# 
  5527     0113                     CM2CON0         equ	275	;# 
  5528     0114                     CM2CON1         equ	276	;# 
  5529     0115                     CMOUT           equ	277	;# 
  5530     0116                     BORCON          equ	278	;# 
  5531     0117                     FVRCON          equ	279	;# 
  5532     0118                     DACCON0         equ	280	;# 
  5533     0119                     DACCON1         equ	281	;# 
  5534     018C                     ANSELA          equ	396	;# 
  5535     018D                     ANSELB          equ	397	;# 
  5536     018E                     ANSELC          equ	398	;# 
  5537     0197                     VREGCON         equ	407	;# 
  5538     0199                     RC1REG          equ	409	;# 
  5539     0199                     RCREG           equ	409	;# 
  5540     0199                     RCREG1          equ	409	;# 
  5541     019A                     TX1REG          equ	410	;# 
  5542     019A                     TXREG1          equ	410	;# 
  5543     019A                     TXREG           equ	410	;# 
  5544     019B                     SP1BRG          equ	411	;# 
  5545     019B                     SPBRG           equ	411	;# 
  5546     019B                     SP1BRGL         equ	411	;# 
  5547     019B                     SPBRG1          equ	411	;# 
  5548     019B                     SPBRGL          equ	411	;# 
  5549     019C                     SP1BRGH         equ	412	;# 
  5550     019C                     SPBRGH          equ	412	;# 
  5551     019C                     SPBRGH1         equ	412	;# 
  5552     019D                     RC1STA          equ	413	;# 
  5553     019D                     RCSTA1          equ	413	;# 
  5554     019D                     RCSTA           equ	413	;# 
  5555     019E                     TX1STA          equ	414	;# 
  5556     019E                     TXSTA1          equ	414	;# 
  5557     019E                     TXSTA           equ	414	;# 
  5558     019F                     BAUD1CON        equ	415	;# 
  5559     019F                     BAUDCON1        equ	415	;# 
  5560     019F                     BAUDCTL1        equ	415	;# 
  5561     019F                     BAUDCON         equ	415	;# 
  5562     019F                     BAUDCTL         equ	415	;# 
  5563     020C                     WPUA            equ	524	;# 
  5564     020D                     WPUB            equ	525	;# 
  5565     020E                     WPUC            equ	526	;# 
  5566     0211                     SSP1BUF         equ	529	;# 
  5567     0211                     SSPBUF          equ	529	;# 
  5568     0212                     SSP1ADD         equ	530	;# 
  5569     0212                     SSPADD          equ	530	;# 
  5570     0213                     SSP1MSK         equ	531	;# 
  5571     0213                     SSPMSK          equ	531	;# 
  5572     0214                     SSP1STAT        equ	532	;# 
  5573     0214                     SSPSTAT         equ	532	;# 
  5574     0215                     SSP1CON1        equ	533	;# 
  5575     0215                     SSPCON          equ	533	;# 
  5576     0215                     SSPCON1         equ	533	;# 
  5577     0215                     SSP1CON         equ	533	;# 
  5578     0216                     SSP1CON2        equ	534	;# 
  5579     0216                     SSPCON2         equ	534	;# 
  5580     0217                     SSP1CON3        equ	535	;# 
  5581     0217                     SSPCON3         equ	535	;# 
  5582     0219                     SSP2BUF         equ	537	;# 
  5583     021A                     SSP2ADD         equ	538	;# 
  5584     021B                     SSP2MSK         equ	539	;# 
  5585     021C                     SSP2STAT        equ	540	;# 
  5586     021D                     SSP2CON1        equ	541	;# 
  5587     021D                     SSP2CON         equ	541	;# 
  5588     021E                     SSP2CON2        equ	542	;# 
  5589     021F                     SSP2CON3        equ	543	;# 
  5590     028C                     ODCONA          equ	652	;# 
  5591     028D                     ODCONB          equ	653	;# 
  5592     028E                     ODCONC          equ	654	;# 
  5593     0291                     CCPR1           equ	657	;# 
  5594     0291                     CCPR1L          equ	657	;# 
  5595     0292                     CCPR1H          equ	658	;# 
  5596     0293                     CCP1CON         equ	659	;# 
  5597     0294                     CCP1CAP         equ	660	;# 
  5598     0295                     CCPR2           equ	661	;# 
  5599     0295                     CCPR2L          equ	661	;# 
  5600     0296                     CCPR2H          equ	662	;# 
  5601     0297                     CCP2CON         equ	663	;# 
  5602     0298                     CCP2CAP         equ	664	;# 
  5603     029F                     CCPTMRS         equ	671	;# 
  5604     030C                     SLRCONA         equ	780	;# 
  5605     030D                     SLRCONB         equ	781	;# 
  5606     030E                     SLRCONC         equ	782	;# 
  5607     0311                     CCPR3           equ	785	;# 
  5608     0311                     CCPR3L          equ	785	;# 
  5609     0312                     CCPR3H          equ	786	;# 
  5610     0313                     CCP3CON         equ	787	;# 
  5611     0314                     CCP3CAP         equ	788	;# 
  5612     0315                     CCPR4           equ	789	;# 
  5613     0315                     CCPR4L          equ	789	;# 
  5614     0316                     CCPR4H          equ	790	;# 
  5615     0317                     CCP4CON         equ	791	;# 
  5616     0318                     CCP4CAP         equ	792	;# 
  5617     038C                     INLVLA          equ	908	;# 
  5618     038D                     INLVLB          equ	909	;# 
  5619     038E                     INLVLC          equ	910	;# 
  5620     0391                     IOCAP           equ	913	;# 
  5621     0392                     IOCAN           equ	914	;# 
  5622     0393                     IOCAF           equ	915	;# 
  5623     0394                     IOCBP           equ	916	;# 
  5624     0395                     IOCBN           equ	917	;# 
  5625     0396                     IOCBF           equ	918	;# 
  5626     0397                     IOCCP           equ	919	;# 
  5627     0398                     IOCCN           equ	920	;# 
  5628     0399                     IOCCF           equ	921	;# 
  5629     039A                     CLKRCON         equ	922	;# 
  5630     039C                     MDCON           equ	924	;# 
  5631     039D                     MDSRC           equ	925	;# 
  5632     039E                     MDCARH          equ	926	;# 
  5633     039F                     MDCARL          equ	927	;# 
  5634     0411                     TMR3            equ	1041	;# 
  5635     0411                     TMR3L           equ	1041	;# 
  5636     0412                     TMR3H           equ	1042	;# 
  5637     0413                     T3CON           equ	1043	;# 
  5638     0414                     T3GCON          equ	1044	;# 
  5639     0415                     TMR4            equ	1045	;# 
  5640     0416                     PR4             equ	1046	;# 
  5641     0417                     T4CON           equ	1047	;# 
  5642     0418                     TMR5            equ	1048	;# 
  5643     0418                     TMR5L           equ	1048	;# 
  5644     0419                     TMR5H           equ	1049	;# 
  5645     041A                     T5CON           equ	1050	;# 
  5646     041B                     T5GCON          equ	1051	;# 
  5647     041C                     TMR6            equ	1052	;# 
  5648     041D                     PR6             equ	1053	;# 
  5649     041E                     T6CON           equ	1054	;# 
  5650     041F                     CCDCON          equ	1055	;# 
  5651     0498                     NCO1ACC         equ	1176	;# 
  5652     0498                     NCO1ACCL        equ	1176	;# 
  5653     0499                     NCO1ACCH        equ	1177	;# 
  5654     049A                     NCO1ACCU        equ	1178	;# 
  5655     049B                     NCO1INC         equ	1179	;# 
  5656     049B                     NCO1INCL        equ	1179	;# 
  5657     049C                     NCO1INCH        equ	1180	;# 
  5658     049D                     NCO1INCU        equ	1181	;# 
  5659     049E                     NCO1CON         equ	1182	;# 
  5660     049F                     NCO1CLK         equ	1183	;# 
  5661     0617                     PWM5DCL         equ	1559	;# 
  5662     0618                     PWM5DCH         equ	1560	;# 
  5663     0619                     PWM5CON         equ	1561	;# 
  5664     0619                     PWM5CON0        equ	1561	;# 
  5665     061A                     PWM6DCL         equ	1562	;# 
  5666     061B                     PWM6DCH         equ	1563	;# 
  5667     061C                     PWM6CON         equ	1564	;# 
  5668     061C                     PWM6CON0        equ	1564	;# 
  5669     061F                     PWMTMRS         equ	1567	;# 
  5670     0691                     CWG1CLKCON      equ	1681	;# 
  5671     0692                     CWG1DAT         equ	1682	;# 
  5672     0693                     CWG1DBR         equ	1683	;# 
  5673     0694                     CWG1DBF         equ	1684	;# 
  5674     0695                     CWG1CON0        equ	1685	;# 
  5675     0696                     CWG1CON1        equ	1686	;# 
  5676     0697                     CWG1AS0         equ	1687	;# 
  5677     0698                     CWG1AS1         equ	1688	;# 
  5678     0699                     CWG1STR         equ	1689	;# 
  5679     0711                     CWG2CLKCON      equ	1809	;# 
  5680     0712                     CWG2DAT         equ	1810	;# 
  5681     0713                     CWG2DBR         equ	1811	;# 
  5682     0714                     CWG2DBF         equ	1812	;# 
  5683     0715                     CWG2CON0        equ	1813	;# 
  5684     0716                     CWG2CON1        equ	1814	;# 
  5685     0717                     CWG2AS0         equ	1815	;# 
  5686     0718                     CWG2AS1         equ	1816	;# 
  5687     0719                     CWG2STR         equ	1817	;# 
  5688     0891                     NVMADR          equ	2193	;# 
  5689     0891                     EEADR           equ	2193	;# 
  5690     0891                     PMADR           equ	2193	;# 
  5691     0891                     NVMADRL         equ	2193	;# 
  5692     0891                     EEADRL          equ	2193	;# 
  5693     0891                     PMADRL          equ	2193	;# 
  5694     0892                     NVMADRH         equ	2194	;# 
  5695     0892                     EEADRH          equ	2194	;# 
  5696     0892                     PMADRH          equ	2194	;# 
  5697     0893                     NVMDAT          equ	2195	;# 
  5698     0893                     EEDAT           equ	2195	;# 
  5699     0893                     PMDAT           equ	2195	;# 
  5700     0893                     NVMDATL         equ	2195	;# 
  5701     0893                     EEDATL          equ	2195	;# 
  5702     0893                     PMDATL          equ	2195	;# 
  5703     0894                     NVMDATH         equ	2196	;# 
  5704     0894                     EEDATH          equ	2196	;# 
  5705     0894                     PMDATH          equ	2196	;# 
  5706     0895                     NVMCON1         equ	2197	;# 
  5707     0895                     EECON1          equ	2197	;# 
  5708     0895                     PMCON1          equ	2197	;# 
  5709     0896                     NVMCON2         equ	2198	;# 
  5710     0896                     EECON2          equ	2198	;# 
  5711     0896                     PMCON2          equ	2198	;# 
  5712     089B                     PCON0           equ	2203	;# 
  5713     0911                     PMD0            equ	2321	;# 
  5714     0912                     PMD1            equ	2322	;# 
  5715     0913                     PMD2            equ	2323	;# 
  5716     0914                     PMD3            equ	2324	;# 
  5717     0915                     PMD4            equ	2325	;# 
  5718     0916                     PMD5            equ	2326	;# 
  5719     0918                     CPUDOZE         equ	2328	;# 
  5720     0919                     OSCCON1         equ	2329	;# 
  5721     091A                     OSCCON2         equ	2330	;# 
  5722     091B                     OSCCON3         equ	2331	;# 
  5723     091C                     OSCSTAT1        equ	2332	;# 
  5724     091D                     OSCEN           equ	2333	;# 
  5725     091E                     OSCTUNE         equ	2334	;# 
  5726     091F                     OSCFRQ          equ	2335	;# 
  5727     0E0F                     PPSLOCK         equ	3599	;# 
  5728     0E10                     INTPPS          equ	3600	;# 
  5729     0E11                     T0CKIPPS        equ	3601	;# 
  5730     0E12                     T1CKIPPS        equ	3602	;# 
  5731     0E13                     T1GPPS          equ	3603	;# 
  5732     0E14                     CCP1PPS         equ	3604	;# 
  5733     0E15                     CCP2PPS         equ	3605	;# 
  5734     0E16                     CCP3PPS         equ	3606	;# 
  5735     0E17                     CCP4PPS         equ	3607	;# 
  5736     0E18                     CWG1PPS         equ	3608	;# 
  5737     0E19                     CWG2PPS         equ	3609	;# 
  5738     0E1A                     MDCIN1PPS       equ	3610	;# 
  5739     0E1B                     MDCIN2PPS       equ	3611	;# 
  5740     0E1C                     MDMINPPS        equ	3612	;# 
  5741     0E1D                     SSP2CLKPPS      equ	3613	;# 
  5742     0E1E                     SSP2DATPPS      equ	3614	;# 
  5743     0E1F                     SSP2SSPPS       equ	3615	;# 
  5744     0E20                     SSP1CLKPPS      equ	3616	;# 
  5745     0E21                     SSP1DATPPS      equ	3617	;# 
  5746     0E22                     SSP1SSPPS       equ	3618	;# 
  5747     0E24                     RXPPS           equ	3620	;# 
  5748     0E25                     TXPPS           equ	3621	;# 
  5749     0E28                     CLCIN0PPS       equ	3624	;# 
  5750     0E29                     CLCIN1PPS       equ	3625	;# 
  5751     0E2A                     CLCIN2PPS       equ	3626	;# 
  5752     0E2B                     CLCIN3PPS       equ	3627	;# 
  5753     0E2C                     T3CKIPPS        equ	3628	;# 
  5754     0E2D                     T3GPPS          equ	3629	;# 
  5755     0E2E                     T5CKIPPS        equ	3630	;# 
  5756     0E2F                     T5GPPS          equ	3631	;# 
  5757     0E90                     RA0PPS          equ	3728	;# 
  5758     0E91                     RA1PPS          equ	3729	;# 
  5759     0E92                     RA2PPS          equ	3730	;# 
  5760     0E94                     RA4PPS          equ	3732	;# 
  5761     0E95                     RA5PPS          equ	3733	;# 
  5762     0E9C                     RB4PPS          equ	3740	;# 
  5763     0E9D                     RB5PPS          equ	3741	;# 
  5764     0E9E                     RB6PPS          equ	3742	;# 
  5765     0E9F                     RB7PPS          equ	3743	;# 
  5766     0EA0                     RC0PPS          equ	3744	;# 
  5767     0EA1                     RC1PPS          equ	3745	;# 
  5768     0EA2                     RC2PPS          equ	3746	;# 
  5769     0EA3                     RC3PPS          equ	3747	;# 
  5770     0EA4                     RC4PPS          equ	3748	;# 
  5771     0EA5                     RC5PPS          equ	3749	;# 
  5772     0EA6                     RC6PPS          equ	3750	;# 
  5773     0EA7                     RC7PPS          equ	3751	;# 
  5774     0F0F                     CLCDATA         equ	3855	;# 
  5775     0F10                     CLC1CON         equ	3856	;# 
  5776     0F11                     CLC1POL         equ	3857	;# 
  5777     0F12                     CLC1SEL0        equ	3858	;# 
  5778     0F13                     CLC1SEL1        equ	3859	;# 
  5779     0F14                     CLC1SEL2        equ	3860	;# 
  5780     0F15                     CLC1SEL3        equ	3861	;# 
  5781     0F16                     CLC1GLS0        equ	3862	;# 
  5782     0F17                     CLC1GLS1        equ	3863	;# 
  5783     0F18                     CLC1GLS2        equ	3864	;# 
  5784     0F19                     CLC1GLS3        equ	3865	;# 
  5785     0F1A                     CLC2CON         equ	3866	;# 
  5786     0F1B                     CLC2POL         equ	3867	;# 
  5787     0F1C                     CLC2SEL0        equ	3868	;# 
  5788     0F1D                     CLC2SEL1        equ	3869	;# 
  5789     0F1E                     CLC2SEL2        equ	3870	;# 
  5790     0F1F                     CLC2SEL3        equ	3871	;# 
  5791     0F20                     CLC2GLS0        equ	3872	;# 
  5792     0F21                     CLC2GLS1        equ	3873	;# 
  5793     0F22                     CLC2GLS2        equ	3874	;# 
  5794     0F23                     CLC2GLS3        equ	3875	;# 
  5795     0F24                     CLC3CON         equ	3876	;# 
  5796     0F25                     CLC3POL         equ	3877	;# 
  5797     0F26                     CLC3SEL0        equ	3878	;# 
  5798     0F27                     CLC3SEL1        equ	3879	;# 
  5799     0F28                     CLC3SEL2        equ	3880	;# 
  5800     0F29                     CLC3SEL3        equ	3881	;# 
  5801     0F2A                     CLC3GLS0        equ	3882	;# 
  5802     0F2B                     CLC3GLS1        equ	3883	;# 
  5803     0F2C                     CLC3GLS2        equ	3884	;# 
  5804     0F2D                     CLC3GLS3        equ	3885	;# 
  5805     0F2E                     CLC4CON         equ	3886	;# 
  5806     0F2F                     CLC4POL         equ	3887	;# 
  5807     0F30                     CLC4SEL0        equ	3888	;# 
  5808     0F31                     CLC4SEL1        equ	3889	;# 
  5809     0F32                     CLC4SEL2        equ	3890	;# 
  5810     0F33                     CLC4SEL3        equ	3891	;# 
  5811     0F34                     CLC4GLS0        equ	3892	;# 
  5812     0F35                     CLC4GLS1        equ	3893	;# 
  5813     0F36                     CLC4GLS2        equ	3894	;# 
  5814     0F37                     CLC4GLS3        equ	3895	;# 
  5815     0FE4                     STATUS_SHAD     equ	4068	;# 
  5816     0FE5                     WREG_SHAD       equ	4069	;# 
  5817     0FE6                     BSR_SHAD        equ	4070	;# 
  5818     0FE7                     PCLATH_SHAD     equ	4071	;# 
  5819     0FE8                     FSR0L_SHAD      equ	4072	;# 
  5820     0FE9                     FSR0H_SHAD      equ	4073	;# 
  5821     0FEA                     FSR1L_SHAD      equ	4074	;# 
  5822     0FEB                     FSR1H_SHAD      equ	4075	;# 
  5823     0FED                     STKPTR          equ	4077	;# 
  5824     0FEE                     TOSL            equ	4078	;# 
  5825     0FEF                     TOSH            equ	4079	;# 
  5826     0000                     INDF0           equ	0	;# 
  5827     0001                     INDF1           equ	1	;# 
  5828     0002                     PCL             equ	2	;# 
  5829     0003                     STATUS          equ	3	;# 
  5830     0004                     FSR0L           equ	4	;# 
  5831     0005                     FSR0H           equ	5	;# 
  5832     0006                     FSR1L           equ	6	;# 
  5833     0007                     FSR1H           equ	7	;# 
  5834     0008                     BSR             equ	8	;# 
  5835     0009                     WREG            equ	9	;# 
  5836     000A                     PCLATH          equ	10	;# 
  5837     000B                     INTCON          equ	11	;# 
  5838     000C                     PORTA           equ	12	;# 
  5839     000D                     PORTB           equ	13	;# 
  5840     000E                     PORTC           equ	14	;# 
  5841     0010                     PIR0            equ	16	;# 
  5842     0011                     PIR1            equ	17	;# 
  5843     0012                     PIR2            equ	18	;# 
  5844     0013                     PIR3            equ	19	;# 
  5845     0014                     PIR4            equ	20	;# 
  5846     0015                     TMR0L           equ	21	;# 
  5847     0015                     TMR0            equ	21	;# 
  5848     0016                     TMR0H           equ	22	;# 
  5849     0016                     PR0             equ	22	;# 
  5850     0017                     T0CON0          equ	23	;# 
  5851     0018                     T0CON1          equ	24	;# 
  5852     0019                     TMR1            equ	25	;# 
  5853     0019                     TMR1L           equ	25	;# 
  5854     001A                     TMR1H           equ	26	;# 
  5855     001B                     T1CON           equ	27	;# 
  5856     001C                     T1GCON          equ	28	;# 
  5857     001D                     TMR2            equ	29	;# 
  5858     001E                     PR2             equ	30	;# 
  5859     001F                     T2CON           equ	31	;# 
  5860     008C                     TRISA           equ	140	;# 
  5861     008D                     TRISB           equ	141	;# 
  5862     008E                     TRISC           equ	142	;# 
  5863     0090                     PIE0            equ	144	;# 
  5864     0091                     PIE1            equ	145	;# 
  5865     0092                     PIE2            equ	146	;# 
  5866     0093                     PIE3            equ	147	;# 
  5867     0094                     PIE4            equ	148	;# 
  5868     0097                     WDTCON          equ	151	;# 
  5869     009B                     ADRES           equ	155	;# 
  5870     009B                     ADRESL          equ	155	;# 
  5871     009C                     ADRESH          equ	156	;# 
  5872     009D                     ADCON0          equ	157	;# 
  5873     009E                     ADCON1          equ	158	;# 
  5874     009F                     ADACT           equ	159	;# 
  5875     010C                     LATA            equ	268	;# 
  5876     010D                     LATB            equ	269	;# 
  5877     010E                     LATC            equ	270	;# 
  5878     0111                     CM1CON0         equ	273	;# 
  5879     0112                     CM1CON1         equ	274	;# 
  5880     0113                     CM2CON0         equ	275	;# 
  5881     0114                     CM2CON1         equ	276	;# 
  5882     0115                     CMOUT           equ	277	;# 
  5883     0116                     BORCON          equ	278	;# 
  5884     0117                     FVRCON          equ	279	;# 
  5885     0118                     DACCON0         equ	280	;# 
  5886     0119                     DACCON1         equ	281	;# 
  5887     018C                     ANSELA          equ	396	;# 
  5888     018D                     ANSELB          equ	397	;# 
  5889     018E                     ANSELC          equ	398	;# 
  5890     0197                     VREGCON         equ	407	;# 
  5891     0199                     RC1REG          equ	409	;# 
  5892     0199                     RCREG           equ	409	;# 
  5893     0199                     RCREG1          equ	409	;# 
  5894     019A                     TX1REG          equ	410	;# 
  5895     019A                     TXREG1          equ	410	;# 
  5896     019A                     TXREG           equ	410	;# 
  5897     019B                     SP1BRG          equ	411	;# 
  5898     019B                     SPBRG           equ	411	;# 
  5899     019B                     SP1BRGL         equ	411	;# 
  5900     019B                     SPBRG1          equ	411	;# 
  5901     019B                     SPBRGL          equ	411	;# 
  5902     019C                     SP1BRGH         equ	412	;# 
  5903     019C                     SPBRGH          equ	412	;# 
  5904     019C                     SPBRGH1         equ	412	;# 
  5905     019D                     RC1STA          equ	413	;# 
  5906     019D                     RCSTA1          equ	413	;# 
  5907     019D                     RCSTA           equ	413	;# 
  5908     019E                     TX1STA          equ	414	;# 
  5909     019E                     TXSTA1          equ	414	;# 
  5910     019E                     TXSTA           equ	414	;# 
  5911     019F                     BAUD1CON        equ	415	;# 
  5912     019F                     BAUDCON1        equ	415	;# 
  5913     019F                     BAUDCTL1        equ	415	;# 
  5914     019F                     BAUDCON         equ	415	;# 
  5915     019F                     BAUDCTL         equ	415	;# 
  5916     020C                     WPUA            equ	524	;# 
  5917     020D                     WPUB            equ	525	;# 
  5918     020E                     WPUC            equ	526	;# 
  5919     0211                     SSP1BUF         equ	529	;# 
  5920     0211                     SSPBUF          equ	529	;# 
  5921     0212                     SSP1ADD         equ	530	;# 
  5922     0212                     SSPADD          equ	530	;# 
  5923     0213                     SSP1MSK         equ	531	;# 
  5924     0213                     SSPMSK          equ	531	;# 
  5925     0214                     SSP1STAT        equ	532	;# 
  5926     0214                     SSPSTAT         equ	532	;# 
  5927     0215                     SSP1CON1        equ	533	;# 
  5928     0215                     SSPCON          equ	533	;# 
  5929     0215                     SSPCON1         equ	533	;# 
  5930     0215                     SSP1CON         equ	533	;# 
  5931     0216                     SSP1CON2        equ	534	;# 
  5932     0216                     SSPCON2         equ	534	;# 
  5933     0217                     SSP1CON3        equ	535	;# 
  5934     0217                     SSPCON3         equ	535	;# 
  5935     0219                     SSP2BUF         equ	537	;# 
  5936     021A                     SSP2ADD         equ	538	;# 
  5937     021B                     SSP2MSK         equ	539	;# 
  5938     021C                     SSP2STAT        equ	540	;# 
  5939     021D                     SSP2CON1        equ	541	;# 
  5940     021D                     SSP2CON         equ	541	;# 
  5941     021E                     SSP2CON2        equ	542	;# 
  5942     021F                     SSP2CON3        equ	543	;# 
  5943     028C                     ODCONA          equ	652	;# 
  5944     028D                     ODCONB          equ	653	;# 
  5945     028E                     ODCONC          equ	654	;# 
  5946     0291                     CCPR1           equ	657	;# 
  5947     0291                     CCPR1L          equ	657	;# 
  5948     0292                     CCPR1H          equ	658	;# 
  5949     0293                     CCP1CON         equ	659	;# 
  5950     0294                     CCP1CAP         equ	660	;# 
  5951     0295                     CCPR2           equ	661	;# 
  5952     0295                     CCPR2L          equ	661	;# 
  5953     0296                     CCPR2H          equ	662	;# 
  5954     0297                     CCP2CON         equ	663	;# 
  5955     0298                     CCP2CAP         equ	664	;# 
  5956     029F                     CCPTMRS         equ	671	;# 
  5957     030C                     SLRCONA         equ	780	;# 
  5958     030D                     SLRCONB         equ	781	;# 
  5959     030E                     SLRCONC         equ	782	;# 
  5960     0311                     CCPR3           equ	785	;# 
  5961     0311                     CCPR3L          equ	785	;# 
  5962     0312                     CCPR3H          equ	786	;# 
  5963     0313                     CCP3CON         equ	787	;# 
  5964     0314                     CCP3CAP         equ	788	;# 
  5965     0315                     CCPR4           equ	789	;# 
  5966     0315                     CCPR4L          equ	789	;# 
  5967     0316                     CCPR4H          equ	790	;# 
  5968     0317                     CCP4CON         equ	791	;# 
  5969     0318                     CCP4CAP         equ	792	;# 
  5970     038C                     INLVLA          equ	908	;# 
  5971     038D                     INLVLB          equ	909	;# 
  5972     038E                     INLVLC          equ	910	;# 
  5973     0391                     IOCAP           equ	913	;# 
  5974     0392                     IOCAN           equ	914	;# 
  5975     0393                     IOCAF           equ	915	;# 
  5976     0394                     IOCBP           equ	916	;# 
  5977     0395                     IOCBN           equ	917	;# 
  5978     0396                     IOCBF           equ	918	;# 
  5979     0397                     IOCCP           equ	919	;# 
  5980     0398                     IOCCN           equ	920	;# 
  5981     0399                     IOCCF           equ	921	;# 
  5982     039A                     CLKRCON         equ	922	;# 
  5983     039C                     MDCON           equ	924	;# 
  5984     039D                     MDSRC           equ	925	;# 
  5985     039E                     MDCARH          equ	926	;# 
  5986     039F                     MDCARL          equ	927	;# 
  5987     0411                     TMR3            equ	1041	;# 
  5988     0411                     TMR3L           equ	1041	;# 
  5989     0412                     TMR3H           equ	1042	;# 
  5990     0413                     T3CON           equ	1043	;# 
  5991     0414                     T3GCON          equ	1044	;# 
  5992     0415                     TMR4            equ	1045	;# 
  5993     0416                     PR4             equ	1046	;# 
  5994     0417                     T4CON           equ	1047	;# 
  5995     0418                     TMR5            equ	1048	;# 
  5996     0418                     TMR5L           equ	1048	;# 
  5997     0419                     TMR5H           equ	1049	;# 
  5998     041A                     T5CON           equ	1050	;# 
  5999     041B                     T5GCON          equ	1051	;# 
  6000     041C                     TMR6            equ	1052	;# 
  6001     041D                     PR6             equ	1053	;# 
  6002     041E                     T6CON           equ	1054	;# 
  6003     041F                     CCDCON          equ	1055	;# 
  6004     0498                     NCO1ACC         equ	1176	;# 
  6005     0498                     NCO1ACCL        equ	1176	;# 
  6006     0499                     NCO1ACCH        equ	1177	;# 
  6007     049A                     NCO1ACCU        equ	1178	;# 
  6008     049B                     NCO1INC         equ	1179	;# 
  6009     049B                     NCO1INCL        equ	1179	;# 
  6010     049C                     NCO1INCH        equ	1180	;# 
  6011     049D                     NCO1INCU        equ	1181	;# 
  6012     049E                     NCO1CON         equ	1182	;# 
  6013     049F                     NCO1CLK         equ	1183	;# 
  6014     0617                     PWM5DCL         equ	1559	;# 
  6015     0618                     PWM5DCH         equ	1560	;# 
  6016     0619                     PWM5CON         equ	1561	;# 
  6017     0619                     PWM5CON0        equ	1561	;# 
  6018     061A                     PWM6DCL         equ	1562	;# 
  6019     061B                     PWM6DCH         equ	1563	;# 
  6020     061C                     PWM6CON         equ	1564	;# 
  6021     061C                     PWM6CON0        equ	1564	;# 
  6022     061F                     PWMTMRS         equ	1567	;# 
  6023     0691                     CWG1CLKCON      equ	1681	;# 
  6024     0692                     CWG1DAT         equ	1682	;# 
  6025     0693                     CWG1DBR         equ	1683	;# 
  6026     0694                     CWG1DBF         equ	1684	;# 
  6027     0695                     CWG1CON0        equ	1685	;# 
  6028     0696                     CWG1CON1        equ	1686	;# 
  6029     0697                     CWG1AS0         equ	1687	;# 
  6030     0698                     CWG1AS1         equ	1688	;# 
  6031     0699                     CWG1STR         equ	1689	;# 
  6032     0711                     CWG2CLKCON      equ	1809	;# 
  6033     0712                     CWG2DAT         equ	1810	;# 
  6034     0713                     CWG2DBR         equ	1811	;# 
  6035     0714                     CWG2DBF         equ	1812	;# 
  6036     0715                     CWG2CON0        equ	1813	;# 
  6037     0716                     CWG2CON1        equ	1814	;# 
  6038     0717                     CWG2AS0         equ	1815	;# 
  6039     0718                     CWG2AS1         equ	1816	;# 
  6040     0719                     CWG2STR         equ	1817	;# 
  6041     0891                     NVMADR          equ	2193	;# 
  6042     0891                     EEADR           equ	2193	;# 
  6043     0891                     PMADR           equ	2193	;# 
  6044     0891                     NVMADRL         equ	2193	;# 
  6045     0891                     EEADRL          equ	2193	;# 
  6046     0891                     PMADRL          equ	2193	;# 
  6047     0892                     NVMADRH         equ	2194	;# 
  6048     0892                     EEADRH          equ	2194	;# 
  6049     0892                     PMADRH          equ	2194	;# 
  6050     0893                     NVMDAT          equ	2195	;# 
  6051     0893                     EEDAT           equ	2195	;# 
  6052     0893                     PMDAT           equ	2195	;# 
  6053     0893                     NVMDATL         equ	2195	;# 
  6054     0893                     EEDATL          equ	2195	;# 
  6055     0893                     PMDATL          equ	2195	;# 
  6056     0894                     NVMDATH         equ	2196	;# 
  6057     0894                     EEDATH          equ	2196	;# 
  6058     0894                     PMDATH          equ	2196	;# 
  6059     0895                     NVMCON1         equ	2197	;# 
  6060     0895                     EECON1          equ	2197	;# 
  6061     0895                     PMCON1          equ	2197	;# 
  6062     0896                     NVMCON2         equ	2198	;# 
  6063     0896                     EECON2          equ	2198	;# 
  6064     0896                     PMCON2          equ	2198	;# 
  6065     089B                     PCON0           equ	2203	;# 
  6066     0911                     PMD0            equ	2321	;# 
  6067     0912                     PMD1            equ	2322	;# 
  6068     0913                     PMD2            equ	2323	;# 
  6069     0914                     PMD3            equ	2324	;# 
  6070     0915                     PMD4            equ	2325	;# 
  6071     0916                     PMD5            equ	2326	;# 
  6072     0918                     CPUDOZE         equ	2328	;# 
  6073     0919                     OSCCON1         equ	2329	;# 
  6074     091A                     OSCCON2         equ	2330	;# 
  6075     091B                     OSCCON3         equ	2331	;# 
  6076     091C                     OSCSTAT1        equ	2332	;# 
  6077     091D                     OSCEN           equ	2333	;# 
  6078     091E                     OSCTUNE         equ	2334	;# 
  6079     091F                     OSCFRQ          equ	2335	;# 
  6080     0E0F                     PPSLOCK         equ	3599	;# 
  6081     0E10                     INTPPS          equ	3600	;# 
  6082     0E11                     T0CKIPPS        equ	3601	;# 
  6083     0E12                     T1CKIPPS        equ	3602	;# 
  6084     0E13                     T1GPPS          equ	3603	;# 
  6085     0E14                     CCP1PPS         equ	3604	;# 
  6086     0E15                     CCP2PPS         equ	3605	;# 
  6087     0E16                     CCP3PPS         equ	3606	;# 
  6088     0E17                     CCP4PPS         equ	3607	;# 
  6089     0E18                     CWG1PPS         equ	3608	;# 
  6090     0E19                     CWG2PPS         equ	3609	;# 
  6091     0E1A                     MDCIN1PPS       equ	3610	;# 
  6092     0E1B                     MDCIN2PPS       equ	3611	;# 
  6093     0E1C                     MDMINPPS        equ	3612	;# 
  6094     0E1D                     SSP2CLKPPS      equ	3613	;# 
  6095     0E1E                     SSP2DATPPS      equ	3614	;# 
  6096     0E1F                     SSP2SSPPS       equ	3615	;# 
  6097     0E20                     SSP1CLKPPS      equ	3616	;# 
  6098     0E21                     SSP1DATPPS      equ	3617	;# 
  6099     0E22                     SSP1SSPPS       equ	3618	;# 
  6100     0E24                     RXPPS           equ	3620	;# 
  6101     0E25                     TXPPS           equ	3621	;# 
  6102     0E28                     CLCIN0PPS       equ	3624	;# 
  6103     0E29                     CLCIN1PPS       equ	3625	;# 
  6104     0E2A                     CLCIN2PPS       equ	3626	;# 
  6105     0E2B                     CLCIN3PPS       equ	3627	;# 
  6106     0E2C                     T3CKIPPS        equ	3628	;# 
  6107     0E2D                     T3GPPS          equ	3629	;# 
  6108     0E2E                     T5CKIPPS        equ	3630	;# 
  6109     0E2F                     T5GPPS          equ	3631	;# 
  6110     0E90                     RA0PPS          equ	3728	;# 
  6111     0E91                     RA1PPS          equ	3729	;# 
  6112     0E92                     RA2PPS          equ	3730	;# 
  6113     0E94                     RA4PPS          equ	3732	;# 
  6114     0E95                     RA5PPS          equ	3733	;# 
  6115     0E9C                     RB4PPS          equ	3740	;# 
  6116     0E9D                     RB5PPS          equ	3741	;# 
  6117     0E9E                     RB6PPS          equ	3742	;# 
  6118     0E9F                     RB7PPS          equ	3743	;# 
  6119     0EA0                     RC0PPS          equ	3744	;# 
  6120     0EA1                     RC1PPS          equ	3745	;# 
  6121     0EA2                     RC2PPS          equ	3746	;# 
  6122     0EA3                     RC3PPS          equ	3747	;# 
  6123     0EA4                     RC4PPS          equ	3748	;# 
  6124     0EA5                     RC5PPS          equ	3749	;# 
  6125     0EA6                     RC6PPS          equ	3750	;# 
  6126     0EA7                     RC7PPS          equ	3751	;# 
  6127     0F0F                     CLCDATA         equ	3855	;# 
  6128     0F10                     CLC1CON         equ	3856	;# 
  6129     0F11                     CLC1POL         equ	3857	;# 
  6130     0F12                     CLC1SEL0        equ	3858	;# 
  6131     0F13                     CLC1SEL1        equ	3859	;# 
  6132     0F14                     CLC1SEL2        equ	3860	;# 
  6133     0F15                     CLC1SEL3        equ	3861	;# 
  6134     0F16                     CLC1GLS0        equ	3862	;# 
  6135     0F17                     CLC1GLS1        equ	3863	;# 
  6136     0F18                     CLC1GLS2        equ	3864	;# 
  6137     0F19                     CLC1GLS3        equ	3865	;# 
  6138     0F1A                     CLC2CON         equ	3866	;# 
  6139     0F1B                     CLC2POL         equ	3867	;# 
  6140     0F1C                     CLC2SEL0        equ	3868	;# 
  6141     0F1D                     CLC2SEL1        equ	3869	;# 
  6142     0F1E                     CLC2SEL2        equ	3870	;# 
  6143     0F1F                     CLC2SEL3        equ	3871	;# 
  6144     0F20                     CLC2GLS0        equ	3872	;# 
  6145     0F21                     CLC2GLS1        equ	3873	;# 
  6146     0F22                     CLC2GLS2        equ	3874	;# 
  6147     0F23                     CLC2GLS3        equ	3875	;# 
  6148     0F24                     CLC3CON         equ	3876	;# 
  6149     0F25                     CLC3POL         equ	3877	;# 
  6150     0F26                     CLC3SEL0        equ	3878	;# 
  6151     0F27                     CLC3SEL1        equ	3879	;# 
  6152     0F28                     CLC3SEL2        equ	3880	;# 
  6153     0F29                     CLC3SEL3        equ	3881	;# 
  6154     0F2A                     CLC3GLS0        equ	3882	;# 
  6155     0F2B                     CLC3GLS1        equ	3883	;# 
  6156     0F2C                     CLC3GLS2        equ	3884	;# 
  6157     0F2D                     CLC3GLS3        equ	3885	;# 
  6158     0F2E                     CLC4CON         equ	3886	;# 
  6159     0F2F                     CLC4POL         equ	3887	;# 
  6160     0F30                     CLC4SEL0        equ	3888	;# 
  6161     0F31                     CLC4SEL1        equ	3889	;# 
  6162     0F32                     CLC4SEL2        equ	3890	;# 
  6163     0F33                     CLC4SEL3        equ	3891	;# 
  6164     0F34                     CLC4GLS0        equ	3892	;# 
  6165     0F35                     CLC4GLS1        equ	3893	;# 
  6166     0F36                     CLC4GLS2        equ	3894	;# 
  6167     0F37                     CLC4GLS3        equ	3895	;# 
  6168     0FE4                     STATUS_SHAD     equ	4068	;# 
  6169     0FE5                     WREG_SHAD       equ	4069	;# 
  6170     0FE6                     BSR_SHAD        equ	4070	;# 
  6171     0FE7                     PCLATH_SHAD     equ	4071	;# 
  6172     0FE8                     FSR0L_SHAD      equ	4072	;# 
  6173     0FE9                     FSR0H_SHAD      equ	4073	;# 
  6174     0FEA                     FSR1L_SHAD      equ	4074	;# 
  6175     0FEB                     FSR1H_SHAD      equ	4075	;# 
  6176     0FED                     STKPTR          equ	4077	;# 
  6177     0FEE                     TOSL            equ	4078	;# 
  6178     0FEF                     TOSH            equ	4079	;# 
  6179                           
  6180 ;; Function _SPI1_Deinitialize is unused but had its address taken
  6181     0000                     _SPI1_Deinitialize equ	0
  6182                           
  6183 ;; Function _SPI1_Close is unused but had its address taken
  6184     0000                     _SPI1_Close     equ	0
  6185                           
  6186 ;; Function _SPI1_BufferExchange is unused but had its address taken
  6187     0000                     _SPI1_BufferExchange equ	0
  6188                           
  6189 ;; Function _SPI1_BufferWrite is unused but had its address taken
  6190     0000                     _SPI1_BufferWrite equ	0
  6191                           
  6192 ;; Function _SPI1_BufferRead is unused but had its address taken
  6193     0000                     _SPI1_BufferRead equ	0
  6194                           
  6195 ;; Function _SPI1_ByteWrite is unused but had its address taken
  6196     0000                     _SPI1_ByteWrite equ	0
  6197                           
  6198 ;; Function _SPI1_ByteRead is unused but had its address taken
  6199     0000                     _SPI1_ByteRead  equ	0
  6200                           
  6201 ;; Function _SPI1_IsRxReady is unused but had its address taken
  6202     0000                     _SPI1_IsRxReady equ	0
  6203                           
  6204 ;; Function _SPI1_IsTxReady is unused but had its address taken
  6205     0000                     _SPI1_IsTxReady equ	0
  6206                           
  6207 ;; Function _INT_DefaultInterruptHandler is unused but had its address taken
  6208     0000                     _INT_DefaultInterruptHandler equ	0
  6209                           
  6210 ;; Function _EUSART_Deinitialize is unused but had its address taken
  6211     0000                     _EUSART_Deinitialize equ	0
  6212                           
  6213 ;; Function _EUSART_TransmitEnable is unused but had its address taken
  6214     0000                     _EUSART_TransmitEnable equ	0
  6215                           
  6216 ;; Function _EUSART_TransmitDisable is unused but had its address taken
  6217     0000                     _EUSART_TransmitDisable equ	0
  6218                           
  6219 ;; Function _EUSART_AutoBaudSet is unused but had its address taken
  6220     0000                     _EUSART_AutoBaudSet equ	0
  6221                           
  6222 ;; Function _EUSART_AutoBaudQuery is unused but had its address taken
  6223     0000                     _EUSART_AutoBaudQuery equ	0
  6224                           
  6225 ;; Function _EUSART_IsTxDone is unused but had its address taken
  6226     0000                     _EUSART_IsTxDone equ	0
  6227                           
  6228 ;; Function _EUSART_ErrorGet is unused but had its address taken
  6229     0000                     _EUSART_ErrorGet equ	0
  6230                           
  6231 ;; Function _EUSART_RxCompleteCallbackRegister is unused but had its address taken
  6232     0000                     _EUSART_RxCompleteCallbackRegister equ	0
  6233                           
  6234 ;; Function _EUSART_TxCompleteCallbackRegister is unused but had its address taken
  6235     0000                     _EUSART_TxCompleteCallbackRegister equ	0
  6236                           
  6237                           	psect	idataBANK0
  6238     0002                     __pidataBANK0:
  6239                           
  6240                           ;initializer for _mustPrintLogs
  6241     0002  3401               	retlw	1
  6242                           
  6243                           ;initializer for adcConversionDoneHandler@new_channel
  6244     0003  3410               	retlw	16
  6245                           
  6246                           	psect	idataBANK1
  6247     1D27                     __pidataBANK1:
  6248                           
  6249                           ;initializer for _setpoint
  6250     1D27  3432               	retlw	50
  6251     1D28  3400               	retlw	0
  6252                           
  6253                           	psect	idataBANK2
  6254     1D49                     __pidataBANK2:
  6255                           
  6256                           ;initializer for _ki
  6257     1D49  3400               	retlw	0
  6258     1D4A  3400               	retlw	0
  6259     1D4B  3460               	retlw	96
  6260     1D4C  3440               	retlw	64
  6261                           
  6262                           ;initializer for _kp
  6263     1D4D  3466               	retlw	102
  6264     1D4E  3466               	retlw	102
  6265     1D4F  3466               	retlw	102
  6266     1D50  343F               	retlw	63
  6267                           
  6268                           	psect	stringtext1
  6269     1800                     __pstringtext1:
  6270     1800                     _UART1:
  6271     1800  3422               	retlw	low _EUSART_Initialize
  6272     1801  3411               	retlw	high _EUSART_Initialize
  6273     1802  3400               	retlw	0
  6274     1803  3400               	retlw	0
  6275     1804  34E0               	retlw	low _EUSART_Read
  6276     1805  341F               	retlw	high _EUSART_Read
  6277     1806  34C7               	retlw	low _EUSART_Write
  6278     1807  3410               	retlw	high _EUSART_Write
  6279     1808  3400               	retlw	low _EUSART_IsRxReady
  6280     1809  3408               	retlw	high _EUSART_IsRxReady
  6281     180A  3490               	retlw	low _EUSART_IsTxReady
  6282     180B  341D               	retlw	high _EUSART_IsTxReady
  6283     180C  3400               	retlw	0
  6284     180D  3400               	retlw	0
  6285     180E  3400               	retlw	0
  6286     180F  3400               	retlw	0
  6287     1810  3400               	retlw	0
  6288     1811  3400               	retlw	0
  6289     1812  3400               	retlw	0
  6290     1813  3400               	retlw	0
  6291     1814  3400               	retlw	0
  6292     1815  3400               	retlw	0
  6293     1816  3400               	retlw	0
  6294     1817  3400               	retlw	0
  6295     1818  3400               	retlw	0
  6296     1819  3400               	retlw	0
  6297     181A  3400               	retlw	0
  6298     181B  3400               	retlw	0
  6299     181C  3400               	retlw	0
  6300     181D  3400               	retlw	0
  6301     181E  3400               	retlw	0
  6302     181F  3400               	retlw	0
  6303     1820  3400               	retlw	0
  6304     1821  3400               	retlw	0
  6305     1822  3400               	retlw	0
  6306     1823  3400               	retlw	0
  6307     1824  3400               	retlw	0
  6308     1825  3400               	retlw	0
  6309     1826  3400               	retlw	0
  6310     1827  3400               	retlw	0
  6311     1828  343D               	retlw	low _EUSART_FramingErrorCallbackRegister
  6312     1829  341E               	retlw	high _EUSART_FramingErrorCallbackRegister
  6313     182A  344C               	retlw	low _EUSART_OverrunErrorCallbackRegister
  6314     182B  341E               	retlw	high _EUSART_OverrunErrorCallbackRegister
  6315     182C  3400               	retlw	0
  6316     182D  3400               	retlw	0
  6317     182E  3400               	retlw	0
  6318     182F  3400               	retlw	0
  6319     1830                     __end_of_UART1:
  6320                           
  6321                           	psect	stringtext2
  6322     1830                     __pstringtext2:
  6323     1830                     _ledstrip:
  6324     1830  34A2               	retlw	low _SPI1_Initialize
  6325     1831  341D               	retlw	high _SPI1_Initialize
  6326     1832  3400               	retlw	0
  6327     1833  3400               	retlw	0
  6328     1834  3436               	retlw	low _SPI1_Open
  6329     1835  3415               	retlw	high _SPI1_Open
  6330     1836  3400               	retlw	0
  6331     1837  3400               	retlw	0
  6332     1838  3400               	retlw	0
  6333     1839  3400               	retlw	0
  6334     183A  3400               	retlw	0
  6335     183B  3400               	retlw	0
  6336     183C  3400               	retlw	0
  6337     183D  3400               	retlw	0
  6338     183E  34E8               	retlw	low _SPI1_ByteExchange
  6339     183F  341D               	retlw	high _SPI1_ByteExchange
  6340     1840  3400               	retlw	0
  6341     1841  3400               	retlw	0
  6342     1842  3400               	retlw	0
  6343     1843  3400               	retlw	0
  6344     1844  3400               	retlw	0
  6345     1845  3400               	retlw	0
  6346     1846  3400               	retlw	0
  6347     1847  3400               	retlw	0
  6348     1848  3400               	retlw	0
  6349     1849  3400               	retlw	0
  6350     184A  3400               	retlw	0
  6351     184B  3400               	retlw	0
  6352     184C                     __end_of_ledstrip:
  6353                           
  6354                           	psect	stringtext3
  6355     18D0                     __pstringtext3:
  6356     18D0                     _spi1_configuration:
  6357     18D0  3440               	retlw	64
  6358     18D1  340A               	retlw	10
  6359     18D2  3410               	retlw	16
  6360     18D3  3407               	retlw	7
  6361     18D4  3400               	retlw	0
  6362     18D5  3464               	retlw	100
  6363     18D6  3400               	retlw	0
  6364     18D7  3410               	retlw	16
  6365     18D8  3401               	retlw	1
  6366     18D9  3400               	retlw	0
  6367     18DA                     __end_of_spi1_configuration:
  6368                           
  6369                           	psect	nvBANK2
  6370     0148                     __pnvBANK2:
  6371     0148                     _TMR6_PeriodMatchCallback:
  6372     0148                     	ds	2
  6373     014A                     _TMR4_PeriodMatchCallback:
  6374     014A                     	ds	2
  6375     014C                     _TMR2_PeriodMatchCallback:
  6376     014C                     	ds	2
  6377     014E                     _EUSART_RxInterruptHandler:
  6378     014E                     	ds	2
  6379     0150                     _EUSART_TxInterruptHandler:
  6380     0150                     	ds	2
  6381     0152                     _ADC_InterruptHandler:
  6382     0152                     	ds	2
  6383     001F                     _T2CONbits      set	31
  6384     001F                     _T2CON          set	31
  6385     001D                     _TMR2           set	29
  6386     001E                     _PR2            set	30
  6387     0012                     _PIR2bits       set	18
  6388     000B                     _INTCONbits     set	11
  6389     0010                     _PIR0bits       set	16
  6390     0011                     _PIR1bits       set	17
  6391     008E                     _TRISC          set	142
  6392     008D                     _TRISB          set	141
  6393     008C                     _TRISA          set	140
  6394     0092                     _PIE2bits       set	146
  6395     009D                     _ADCON0bits     set	157
  6396     0091                     _PIE1bits       set	145
  6397     009D                     _ADCON0         set	157
  6398     009F                     _ADACT          set	159
  6399     009C                     _ADRESH         set	156
  6400     009B                     _ADRESL         set	155
  6401     009E                     _ADCON1         set	158
  6402     010E                     _LATC           set	270
  6403     010D                     _LATB           set	269
  6404     010C                     _LATA           set	268
  6405     019A                     _TX1REG         set	410
  6406     0199                     _RC1REG         set	409
  6407     019F                     _BAUD1CONbits   set	415
  6408     019E                     _TX1STAbits     set	414
  6409     019D                     _RC1STAbits     set	413
  6410     019C                     _SP1BRGH        set	412
  6411     019B                     _SP1BRGL        set	411
  6412     019E                     _TX1STA         set	414
  6413     019D                     _RC1STA         set	413
  6414     019F                     _BAUD1CON       set	415
  6415     018E                     _ANSELC         set	398
  6416     018D                     _ANSELB         set	397
  6417     018C                     _ANSELA         set	396
  6418     020E                     _WPUC           set	526
  6419     020D                     _WPUB           set	525
  6420     020C                     _WPUA           set	524
  6421     0211                     _SSP1BUF        set	529
  6422     0215                     _SSP1CON1bits   set	533
  6423     0212                     _SSP1ADD        set	530
  6424     0217                     _SSP1CON3       set	535
  6425     0215                     _SSP1CON1       set	533
  6426     0214                     _SSP1STAT       set	532
  6427     028E                     _ODCONC         set	654
  6428     028D                     _ODCONB         set	653
  6429     028C                     _ODCONA         set	652
  6430     030E                     _SLRCONC        set	782
  6431     030D                     _SLRCONB        set	781
  6432     030C                     _SLRCONA        set	780
  6433     0399                     _IOCCF          set	921
  6434     0398                     _IOCCN          set	920
  6435     0397                     _IOCCP          set	919
  6436     0396                     _IOCBF          set	918
  6437     0395                     _IOCBN          set	917
  6438     0394                     _IOCBP          set	916
  6439     0393                     _IOCAF          set	915
  6440     0392                     _IOCAN          set	914
  6441     0391                     _IOCAP          set	913
  6442     038E                     _INLVLC         set	910
  6443     038D                     _INLVLB         set	909
  6444     038C                     _INLVLA         set	908
  6445     041E                     _T6CONbits      set	1054
  6446     041E                     _T6CON          set	1054
  6447     041C                     _TMR6           set	1052
  6448     041D                     _PR6            set	1053
  6449     0417                     _T4CONbits      set	1047
  6450     0417                     _T4CON          set	1047
  6451     0415                     _TMR4           set	1045
  6452     0416                     _PR4            set	1046
  6453     061A                     _PWM6DCL        set	1562
  6454     061B                     _PWM6DCH        set	1563
  6455     061C                     _PWM6CON        set	1564
  6456     061F                     _PWMTMRSbits    set	1567
  6457     0617                     _PWM5DCL        set	1559
  6458     0618                     _PWM5DCH        set	1560
  6459     0619                     _PWM5CON        set	1561
  6460     091E                     _OSCTUNE        set	2334
  6461     091C                     _OSCSTAT1       set	2332
  6462     091F                     _OSCFRQ         set	2335
  6463     091D                     _OSCEN          set	2333
  6464     091B                     _OSCCON3        set	2331
  6465     0919                     _OSCCON1        set	2329
  6466     0E20                     _SSP1CLKPPS     set	3616
  6467     0E24                     _RXPPS          set	3620
  6468     0E21                     _SSP1DATPPS     set	3617
  6469     0E9E                     _RB6PPS         set	3742
  6470     0E9F                     _RB7PPS         set	3743
  6471     0EA7                     _RC7PPS         set	3751
  6472     0EA5                     _RC5PPS         set	3749
  6473     0E9C                     _RB4PPS         set	3740
  6474                           
  6475                           	psect	stringtext4
  6476     184C                     __pstringtext4:
  6477     184C                     STR_6:
  6478     184C  3463               	retlw	99	;'c'
  6479     184D  3468               	retlw	104	;'h'
  6480     184E  3461               	retlw	97	;'a'
  6481     184F  346E               	retlw	110	;'n'
  6482     1850  3467               	retlw	103	;'g'
  6483     1851  3465               	retlw	101	;'e'
  6484     1852  3464               	retlw	100	;'d'
  6485     1853  3420               	retlw	32	;' '
  6486     1854  3473               	retlw	115	;'s'
  6487     1855  3465               	retlw	101	;'e'
  6488     1856  3474               	retlw	116	;'t'
  6489     1857  3470               	retlw	112	;'p'
  6490     1858  346F               	retlw	111	;'o'
  6491     1859  3469               	retlw	105	;'i'
  6492     185A  346E               	retlw	110	;'n'
  6493     185B  3474               	retlw	116	;'t'
  6494     185C  3420               	retlw	32	;' '
  6495     185D  3474               	retlw	116	;'t'
  6496     185E  346F               	retlw	111	;'o'
  6497     185F  3420               	retlw	32	;' '
  6498     1860  3425               	retlw	37	;'%'
  6499     1861  3475               	retlw	117	;'u'
  6500     1862  340D               	retlw	13
  6501     1863  340A               	retlw	10
  6502     1864  3400               	retlw	0
  6503                           
  6504                           	psect	stringtext5
  6505     1865                     __pstringtext5:
  6506     1865                     STR_3:
  6507     1865  3469               	retlw	105	;'i'
  6508     1866  346E               	retlw	110	;'n'
  6509     1867  3470               	retlw	112	;'p'
  6510     1868  3475               	retlw	117	;'u'
  6511     1869  3474               	retlw	116	;'t'
  6512     186A  3420               	retlw	32	;' '
  6513     186B  3462               	retlw	98	;'b'
  6514     186C  3475               	retlw	117	;'u'
  6515     186D  3466               	retlw	102	;'f'
  6516     186E  3466               	retlw	102	;'f'
  6517     186F  3465               	retlw	101	;'e'
  6518     1870  3472               	retlw	114	;'r'
  6519     1871  3420               	retlw	32	;' '
  6520     1872  346F               	retlw	111	;'o'
  6521     1873  3476               	retlw	118	;'v'
  6522     1874  3465               	retlw	101	;'e'
  6523     1875  3472               	retlw	114	;'r'
  6524     1876  3466               	retlw	102	;'f'
  6525     1877  346C               	retlw	108	;'l'
  6526     1878  346F               	retlw	111	;'o'
  6527     1879  3477               	retlw	119	;'w'
  6528     187A  340D               	retlw	13
  6529     187B  340A               	retlw	10
  6530     187C  3400               	retlw	0
  6531                           
  6532                           	psect	stringtext6
  6533     187D                     __pstringtext6:
  6534     187D                     STR_10:
  6535     187D  3455               	retlw	85	;'U'
  6536     187E  346E               	retlw	110	;'n'
  6537     187F  346B               	retlw	107	;'k'
  6538     1880  346F               	retlw	111	;'o'
  6539     1881  3477               	retlw	119	;'w'
  6540     1882  346E               	retlw	110	;'n'
  6541     1883  3420               	retlw	32	;' '
  6542     1884  3463               	retlw	99	;'c'
  6543     1885  346F               	retlw	111	;'o'
  6544     1886  346D               	retlw	109	;'m'
  6545     1887  346D               	retlw	109	;'m'
  6546     1888  3461               	retlw	97	;'a'
  6547     1889  346E               	retlw	110	;'n'
  6548     188A  3464               	retlw	100	;'d'
  6549     188B  340D               	retlw	13
  6550     188C  340A               	retlw	10
  6551     188D  3400               	retlw	0
  6552                           
  6553                           	psect	stringtext7
  6554     188E                     __pstringtext7:
  6555     188E                     STR_9:
  6556     188E  346C               	retlw	108	;'l'
  6557     188F  346F               	retlw	111	;'o'
  6558     1890  3467               	retlw	103	;'g'
  6559     1891  3473               	retlw	115	;'s'
  6560     1892  3420               	retlw	32	;' '
  6561     1893  3474               	retlw	116	;'t'
  6562     1894  346F               	retlw	111	;'o'
  6563     1895  3467               	retlw	103	;'g'
  6564     1896  3467               	retlw	103	;'g'
  6565     1897  346C               	retlw	108	;'l'
  6566     1898  3465               	retlw	101	;'e'
  6567     1899  3464               	retlw	100	;'d'
  6568     189A  340D               	retlw	13
  6569     189B  340A               	retlw	10
  6570     189C  3400               	retlw	0
  6571                           
  6572                           	psect	stringtext8
  6573     189D                     __pstringtext8:
  6574     189D                     STR_1:
  6575     189D  3463               	retlw	99	;'c'
  6576     189E  346F               	retlw	111	;'o'
  6577     189F  3475               	retlw	117	;'u'
  6578     18A0  346E               	retlw	110	;'n'
  6579     18A1  3474               	retlw	116	;'t'
  6580     18A2  3465               	retlw	101	;'e'
  6581     18A3  3472               	retlw	114	;'r'
  6582     18A4  343A               	retlw	58	;':'
  6583     18A5  3420               	retlw	32	;' '
  6584     18A6  3425               	retlw	37	;'%'
  6585     18A7  3475               	retlw	117	;'u'
  6586     18A8  340A               	retlw	10
  6587     18A9  340D               	retlw	13
  6588     18AA  3400               	retlw	0
  6589                           
  6590                           	psect	stringtext9
  6591     18AB                     __pstringtext9:
  6592     18AB                     STR_8:
  6593     18AB  3463               	retlw	99	;'c'
  6594     18AC  3468               	retlw	104	;'h'
  6595     18AD  3461               	retlw	97	;'a'
  6596     18AE  346E               	retlw	110	;'n'
  6597     18AF  3467               	retlw	103	;'g'
  6598     18B0  3465               	retlw	101	;'e'
  6599     18B1  3464               	retlw	100	;'d'
  6600     18B2  3420               	retlw	32	;' '
  6601     18B3  346B               	retlw	107	;'k'
  6602     18B4  3469               	retlw	105	;'i'
  6603     18B5  340D               	retlw	13
  6604     18B6  340A               	retlw	10
  6605     18B7  3400               	retlw	0
  6606                           
  6607                           	psect	stringtext10
  6608     18B8                     __pstringtext10:
  6609     18B8                     STR_7:
  6610     18B8  3463               	retlw	99	;'c'
  6611     18B9  3468               	retlw	104	;'h'
  6612     18BA  3461               	retlw	97	;'a'
  6613     18BB  346E               	retlw	110	;'n'
  6614     18BC  3467               	retlw	103	;'g'
  6615     18BD  3465               	retlw	101	;'e'
  6616     18BE  3464               	retlw	100	;'d'
  6617     18BF  3420               	retlw	32	;' '
  6618     18C0  346B               	retlw	107	;'k'
  6619     18C1  3470               	retlw	112	;'p'
  6620     18C2  340D               	retlw	13
  6621     18C3  340A               	retlw	10
  6622     18C4  3400               	retlw	0
  6623                           
  6624                           	psect	stringtext11
  6625     18C5                     __pstringtext11:
  6626     18C5                     STR_4:
  6627     18C5  342C               	retlw	44	;','
  6628     18C6  3420               	retlw	32	;' '
  6629     18C7  3470               	retlw	112	;'p'
  6630     18C8  346F               	retlw	111	;'o'
  6631     18C9  346D               	retlw	109	;'m'
  6632     18CA  3470               	retlw	112	;'p'
  6633     18CB  343A               	retlw	58	;':'
  6634     18CC  3420               	retlw	32	;' '
  6635     18CD  3425               	retlw	37	;'%'
  6636     18CE  3475               	retlw	117	;'u'
  6637     18CF  3400               	retlw	0
  6638                           
  6639                           	psect	stringtext12
  6640     18DA                     __pstringtext12:
  6641     18DA                     STR_2:
  6642     18DA  3425               	retlw	37	;'%'
  6643     18DB  3469               	retlw	105	;'i'
  6644     18DC  342E               	retlw	46	;'.'
  6645     18DD  3425               	retlw	37	;'%'
  6646     18DE  3430               	retlw	48	;'0'
  6647     18DF  3433               	retlw	51	;'3'
  6648     18E0  3475               	retlw	117	;'u'
  6649     18E1  3400               	retlw	0
  6650                           
  6651                           	psect	stringtext13
  6652     0000                     __pstringtext13:
  6653     189A                     STR_5           equ	STR_9+12
  6654                           
  6655                           	psect	cinit
  6656     005A                     start_initialization:	
  6657                           ; #config settings
  6658                           
  6659     005A                     __initialization:
  6660                           
  6661                           ; Initialize objects allocated to BANK0
  6662     005A  3180  2002  3180   	fcall	__pidataBANK0	;fetch initializer
  6663     005D  00ED               	movwf	__pdataBANK0& (0+127)
  6664     005E  3180  2003  3180   	fcall	__pidataBANK0+1	;fetch initializer
  6665     0061  00EE               	movwf	(__pdataBANK0+1)& (0+127)
  6666                           
  6667                           ; Initialize objects allocated to BANK1
  6668     0062  0021               	movlb	1	; select bank1
  6669     0063  319D  2527  3180   	fcall	__pidataBANK1	;fetch initializer
  6670     0066  00ED               	movwf	__pdataBANK1& (0+127)
  6671     0067  319D  2528  3180   	fcall	__pidataBANK1+1	;fetch initializer
  6672     006A  00EE               	movwf	(__pdataBANK1+1)& (0+127)
  6673                           
  6674                           ; Initialize objects allocated to BANK2
  6675     006B  3049               	movlw	low __pidataBANK2
  6676     006C  0084               	movwf	4
  6677     006D  309D               	movlw	(high __pidataBANK2)| (0+128)
  6678     006E  0085               	movwf	5
  6679     006F  3054               	movlw	low __pdataBANK2
  6680     0070  0086               	movwf	6
  6681     0071  3001               	movlw	high __pdataBANK2
  6682     0072  0087               	movwf	7
  6683     0073  3008               	movlw	8
  6684     0074  3187  27F9  3180   	fcall	init_ram
  6685                           
  6686                           ; Clear objects allocated to BANK0
  6687     0077  3055               	movlw	low __pbssBANK0
  6688     0078  0084               	movwf	4
  6689     0079  3000               	movlw	high __pbssBANK0
  6690     007A  0085               	movwf	5
  6691     007B  3018               	movlw	24
  6692     007C  319D  2543  3180   	fcall	clear_ram0
  6693                           
  6694                           ; Clear objects allocated to BANK2
  6695     007F  3020               	movlw	low __pbssBANK2
  6696     0080  0084               	movwf	4
  6697     0081  3001               	movlw	high __pbssBANK2
  6698     0082  0085               	movwf	5
  6699     0083  301A               	movlw	26
  6700     0084  319D  2543  3180   	fcall	clear_ram0
  6701                           
  6702                           ; Clear objects allocated to BANK3
  6703     0087  30A0               	movlw	low __pbssBANK3
  6704     0088  0084               	movwf	4
  6705     0089  3001               	movlw	high __pbssBANK3
  6706     008A  0085               	movwf	5
  6707     008B  304C               	movlw	76
  6708     008C  319D  2543  3180   	fcall	clear_ram0
  6709     008F                     end_of_initialization:	
  6710                           ;End of C runtime variable initialization code
  6711                           
  6712     008F                     __end_of__initialization:
  6713     008F  107E               	bcf	int$flags,0	;clear compiler interrupt flag (level 1)
  6714     0090  0020               	movlb	0
  6715     0091  3196  2EB9         	ljmp	_main	;jump to C main() function
  6716                           
  6717                           	psect	bssBANK0
  6718     0055                     __pbssBANK0:
  6719     0055                     _width:
  6720     0055                     	ds	2
  6721     0057                     _dutycycle:
  6722     0057                     	ds	2
  6723     0059                     _ADC_pomphoogte:
  6724     0059                     	ds	2
  6725     005B                     _ADC_hoogtesensor:
  6726     005B                     	ds	2
  6727     005D                     _EUSART_OverrunErrorHandler:
  6728     005D                     	ds	2
  6729     005F                     _EUSART_FramingErrorHandler:
  6730     005F                     	ds	2
  6731     0061                     _INT_InterruptHandler:
  6732     0061                     	ds	2
  6733     0063                     _flags:
  6734     0063                     	ds	1
  6735     0064                     _is_on_target:
  6736     0064                     	ds	1
  6737     0065                     readLine@index:
  6738     0065                     	ds	1
  6739     0066                     _buzzing:
  6740     0066                     	ds	1
  6741     0067                     _eusartRxCount:
  6742     0067                     	ds	1
  6743     0068                     _eusartRxTail:
  6744     0068                     	ds	1
  6745     0069                     _eusartRxHead:
  6746     0069                     	ds	1
  6747     006A                     _eusartTxBufferRemaining:
  6748     006A                     	ds	1
  6749     006B                     _eusartTxTail:
  6750     006B                     	ds	1
  6751     006C                     _eusartTxHead:
  6752     006C                     	ds	1
  6753                           
  6754                           	psect	dataBANK0
  6755     006D                     __pdataBANK0:
  6756     006D                     _mustPrintLogs:
  6757     006D                     	ds	1
  6758     006E                     adcConversionDoneHandler@new_channel:
  6759     006E                     	ds	1
  6760                           
  6761                           	psect	dataBANK1
  6762     00ED                     __pdataBANK1:
  6763     00ED                     _setpoint:
  6764     00ED                     	ds	2
  6765                           
  6766                           	psect	bssBANK2
  6767     0120                     __pbssBANK2:
  6768     0120                     _eusartTxBuffer:
  6769     0120                     	ds	8
  6770     0128                     _integraal:
  6771     0128                     	ds	4
  6772     012C                     _nout:
  6773     012C                     	ds	2
  6774     012E                     _prec:
  6775     012E                     	ds	2
  6776     0130                     _hoogte_bal:
  6777     0130                     	ds	2
  6778     0132                     _ADC_potentiometer:
  6779     0132                     	ds	2
  6780     0134                     _EUSART_RxCompleteInterruptHandler:
  6781     0134                     	ds	2
  6782     0136                     _EUSART_TxCompleteInterruptHandler:
  6783     0136                     	ds	2
  6784     0138                     _eusartRxLastError:
  6785     0138                     	ds	2
  6786                           
  6787                           	psect	dataBANK2
  6788     0154                     __pdataBANK2:
  6789     0154                     _ki:
  6790     0154                     	ds	4
  6791     0158                     _kp:
  6792     0158                     	ds	4
  6793                           
  6794                           	psect	bssBANK3
  6795     01A0                     __pbssBANK3:
  6796     01A0                     _eusartRxStatusBuffer:
  6797     01A0                     	ds	16
  6798     01B0                     _eusartRxBuffer:
  6799     01B0                     	ds	8
  6800     01B8                     _dbuf:
  6801     01B8                     	ds	32
  6802     01D8                     _line:
  6803     01D8                     	ds	20
  6804                           
  6805                           	psect	inittext
  6806     07F9                     init_ram:
  6807     07F9  00FE               	movwf	btemp
  6808     07FA                     initloop:
  6809     07FA  0012               	moviw fsr0++
  6810     07FB  001E               	movwi fsr1++
  6811     07FC  0BFE               	decfsz	btemp,f
  6812     07FD  2FFA               	goto	initloop
  6813     07FE  3400               	retlw	0
  6814                           
  6815                           	psect	clrtext
  6816     1D43                     clear_ram0:	
  6817                           ;	Called with FSR0 containing the base address, and
  6818                           ;	WREG with the size to clear
  6819                           
  6820     1D43  0064               	clrwdt	;clear the watchdog before getting into this loop
  6821     1D44                     clrloop0:
  6822     1D44  0180               	clrf	0	;clear RAM location pointed to by FSR
  6823     1D45  3101               	addfsr 0,1
  6824     1D46  0B89               	decfsz	9,f	;Have we reached the end of clearing yet?
  6825     1D47  2D44               	goto	clrloop0	;have we reached the end yet?
  6826     1D48  3400               	retlw	0	;all done for this memory range, return
  6827                           
  6828                           	psect	cstackBANK4
  6829     0220                     __pcstackBANK4:
  6830     0220                     main@str:
  6831                           
  6832                           ; 20 bytes @ 0x0
  6833     0220                     	ds	20
  6834     0234                     main@counter:
  6835                           
  6836                           ; 1 bytes @ 0x14
  6837     0234                     	ds	1
  6838                           
  6839                           	psect	cstackBANK2
  6840     013A                     __pcstackBANK2:
  6841     013A                     sprintf@ap:
  6842                           
  6843                           ; 1 bytes @ 0x0
  6844     013A                     	ds	1
  6845     013B                     sprintf@f:
  6846                           
  6847                           ; 11 bytes @ 0x1
  6848     013B                     	ds	11
  6849     0146                     ??_main:
  6850                           
  6851                           ; 1 bytes @ 0xC
  6852     0146                     	ds	2
  6853                           
  6854                           	psect	cstackBANK1
  6855     00A0                     __pcstackBANK1:
  6856     00A0                     ?_ADC_SetInterruptHandler:
  6857     00A0                     ?_SPI1_ByteExchange:	
  6858                           ; 1 bytes @ 0x0
  6859                           
  6860     00A0                     ?_INT_SetInterruptHandler:	
  6861                           ; 1 bytes @ 0x0
  6862                           
  6863     00A0                     ?_EUSART_Write:	
  6864                           ; 1 bytes @ 0x0
  6865                           
  6866     00A0                     ?_EUSART_FramingErrorCallbackRegister:	
  6867                           ; 1 bytes @ 0x0
  6868                           
  6869     00A0                     ?_EUSART_OverrunErrorCallbackRegister:	
  6870                           ; 1 bytes @ 0x0
  6871                           
  6872     00A0                     ?_PWM_buzzer_LoadDutyValue:	
  6873                           ; 1 bytes @ 0x0
  6874                           
  6875     00A0                     ?_TMR4_PeriodMatchCallbackRegister:	
  6876                           ; 1 bytes @ 0x0
  6877                           
  6878     00A0                     ?_TMR6_PeriodMatchCallbackRegister:	
  6879                           ; 1 bytes @ 0x0
  6880                           
  6881     00A0                     ?_getPomphoogte:	
  6882                           ; 1 bytes @ 0x0
  6883                           
  6884     00A0                     ?__Umul8_16:	
  6885                           ; 2 bytes @ 0x0
  6886                           
  6887     00A0                     ?_strlen:	
  6888                           ; 2 bytes @ 0x0
  6889                           
  6890     00A0                     ?_getDutycycle:	
  6891                           ; 2 bytes @ 0x0
  6892                           
  6893     00A0                     ?___awdiv:	
  6894                           ; 2 bytes @ 0x0
  6895                           
  6896     00A0                     ?___awmod:	
  6897                           ; 2 bytes @ 0x0
  6898                           
  6899     00A0                     ?___lwmod:	
  6900                           ; 2 bytes @ 0x0
  6901                           
  6902     00A0                     ?___fldiv:	
  6903                           ; 2 bytes @ 0x0
  6904                           
  6905     00A0                     ?___xxtofl:	
  6906                           ; 4 bytes @ 0x0
  6907                           
  6908     00A0                     SPI1_ByteExchange@byteData:	
  6909                           ; 4 bytes @ 0x0
  6910                           
  6911     00A0                     EUSART_Read@tempRxTail:	
  6912                           ; 1 bytes @ 0x0
  6913                           
  6914     00A0                     EUSART_Write@txData:	
  6915                           ; 1 bytes @ 0x0
  6916                           
  6917     00A0                     __Umul8_16@multiplicand:	
  6918                           ; 1 bytes @ 0x0
  6919                           
  6920     00A0                     strlen@s:	
  6921                           ; 1 bytes @ 0x0
  6922                           
  6923     00A0                     ADC_SetInterruptHandler@InterruptHandler:	
  6924                           ; 1 bytes @ 0x0
  6925                           
  6926     00A0                     PWM_buzzer_LoadDutyValue@dutyValue:	
  6927                           ; 2 bytes @ 0x0
  6928                           
  6929     00A0                     INT_SetInterruptHandler@InterruptHandler:	
  6930                           ; 2 bytes @ 0x0
  6931                           
  6932     00A0                     TMR4_PeriodMatchCallbackRegister@CallbackHandler:	
  6933                           ; 2 bytes @ 0x0
  6934                           
  6935     00A0                     TMR6_PeriodMatchCallbackRegister@CallbackHandler:	
  6936                           ; 2 bytes @ 0x0
  6937                           
  6938     00A0                     EUSART_FramingErrorCallbackRegister@callbackHandler:	
  6939                           ; 2 bytes @ 0x0
  6940                           
  6941     00A0                     EUSART_OverrunErrorCallbackRegister@callbackHandler:	
  6942                           ; 2 bytes @ 0x0
  6943                           
  6944     00A0                     ___awdiv@divisor:	
  6945                           ; 2 bytes @ 0x0
  6946                           
  6947     00A0                     ___awmod@divisor:	
  6948                           ; 2 bytes @ 0x0
  6949                           
  6950     00A0                     ___lwmod@divisor:	
  6951                           ; 2 bytes @ 0x0
  6952                           
  6953     00A0                     ___fldiv@a:	
  6954                           ; 2 bytes @ 0x0
  6955                           
  6956     00A0                     ___xxtofl@val:	
  6957                           ; 4 bytes @ 0x0
  6958                           
  6959     00A0                     ??_SPI1_Initialize:	
  6960                           ; 4 bytes @ 0x0
  6961                           
  6962     00A0                     ??_TMR2_Initialize:	
  6963                           ; 1 bytes @ 0x0
  6964                           
  6965     00A0                     ??_TMR4_Initialize:	
  6966                           ; 1 bytes @ 0x0
  6967                           
  6968     00A0                     ??_TMR6_Initialize:	
  6969                           ; 1 bytes @ 0x0
  6970                           
  6971     00A0                     ??_TMR6_DefaultPeriodMatchCallback:	
  6972                           ; 1 bytes @ 0x0
  6973                           
  6974     00A0                     ??_EUSART_Read:	
  6975                           ; 1 bytes @ 0x0
  6976                           
  6977     00A0                     ??_EUSART_IsRxReady:	
  6978                           ; 1 bytes @ 0x0
  6979                           
  6980     00A0                     ??_EUSART_IsTxReady:	
  6981                           ; 1 bytes @ 0x0
  6982                           
  6983     00A0                     ??_ADC_SelectChannel:	
  6984                           ; 1 bytes @ 0x0
  6985                           
  6986     00A0                     ??_pwm_fan_Initialize:	
  6987                           ; 1 bytes @ 0x0
  6988                           
  6989     00A0                     ??_PWM_buzzer_Initialize:	
  6990                           ; 1 bytes @ 0x0
  6991                           
  6992     00A0                     ??_CLOCK_Initialize:	
  6993                           ; 1 bytes @ 0x0
  6994                           
  6995     00A0                     ??_PIN_MANAGER_Initialize:	
  6996                           ; 1 bytes @ 0x0
  6997                           
  6998                           
  6999                           ; 1 bytes @ 0x0
  7000     00A0                     	ds	1
  7001     00A1                     ?_sendLedstripFrame:
  7002     00A1                     ADC_SelectChannel@channel:	
  7003                           ; 1 bytes @ 0x1
  7004                           
  7005     00A1                     EUSART_Read@readValue:	
  7006                           ; 1 bytes @ 0x1
  7007                           
  7008     00A1                     EUSART_Write@tempTxHead:	
  7009                           ; 1 bytes @ 0x1
  7010                           
  7011     00A1                     sendLedstripFrame@green:	
  7012                           ; 1 bytes @ 0x1
  7013                           
  7014     00A1                     ??_SPI1_ByteExchange:	
  7015                           ; 1 bytes @ 0x1
  7016                           
  7017     00A1                     ??_EUSART_Write:	
  7018                           ; 1 bytes @ 0x1
  7019                           
  7020     00A1                     ??_sendLedstripStartFrame:	
  7021                           ; 1 bytes @ 0x1
  7022                           
  7023     00A1                     ??_sendLedstripEndFrame:	
  7024                           ; 1 bytes @ 0x1
  7025                           
  7026                           
  7027                           ; 1 bytes @ 0x1
  7028     00A1                     	ds	1
  7029     00A2                     ?___wmul:
  7030     00A2                     putch@txData:	
  7031                           ; 2 bytes @ 0x2
  7032                           
  7033     00A2                     sendLedstripFrame@blue:	
  7034                           ; 1 bytes @ 0x2
  7035                           
  7036     00A2                     strlen@a:	
  7037                           ; 1 bytes @ 0x2
  7038                           
  7039     00A2                     ___wmul@multiplier:	
  7040                           ; 1 bytes @ 0x2
  7041                           
  7042     00A2                     ___awdiv@dividend:	
  7043                           ; 2 bytes @ 0x2
  7044                           
  7045     00A2                     ___awmod@dividend:	
  7046                           ; 2 bytes @ 0x2
  7047                           
  7048     00A2                     ___lwmod@dividend:	
  7049                           ; 2 bytes @ 0x2
  7050                           
  7051     00A2                     ??_ADC_SetInterruptHandler:	
  7052                           ; 2 bytes @ 0x2
  7053                           
  7054     00A2                     ??_INT_SetInterruptHandler:	
  7055                           ; 1 bytes @ 0x2
  7056                           
  7057     00A2                     ??_EUSART_Initialize:	
  7058                           ; 1 bytes @ 0x2
  7059                           
  7060     00A2                     ??_EUSART_FramingErrorCallbackRegister:	
  7061                           ; 1 bytes @ 0x2
  7062                           
  7063     00A2                     ??_EUSART_OverrunErrorCallbackRegister:	
  7064                           ; 1 bytes @ 0x2
  7065                           
  7066     00A2                     ??_initAdcMultiplexer:	
  7067                           ; 1 bytes @ 0x2
  7068                           
  7069     00A2                     ??_getPomphoogte:	
  7070                           ; 1 bytes @ 0x2
  7071                           
  7072     00A2                     ??__Umul8_16:	
  7073                           ; 1 bytes @ 0x2
  7074                           
  7075     00A2                     ??_strlen:	
  7076                           ; 1 bytes @ 0x2
  7077                           
  7078     00A2                     ??_ADC_Initialize:	
  7079                           ; 1 bytes @ 0x2
  7080                           
  7081     00A2                     ??_PWM_buzzer_LoadDutyValue:	
  7082                           ; 1 bytes @ 0x2
  7083                           
  7084     00A2                     ??_INTERRUPT_Initialize:	
  7085                           ; 1 bytes @ 0x2
  7086                           
  7087     00A2                     ??_SYSTEM_Initialize:	
  7088                           ; 1 bytes @ 0x2
  7089                           
  7090     00A2                     ??_TMR4_PeriodMatchCallbackRegister:	
  7091                           ; 1 bytes @ 0x2
  7092                           
  7093     00A2                     ??_TMR6_PeriodMatchCallbackRegister:	
  7094                           ; 1 bytes @ 0x2
  7095                           
  7096     00A2                     ??_putch:	
  7097                           ; 1 bytes @ 0x2
  7098                           
  7099     00A2                     ??_getDutycycle:	
  7100                           ; 1 bytes @ 0x2
  7101                           
  7102                           
  7103                           ; 1 bytes @ 0x2
  7104     00A2                     	ds	1
  7105     00A3                     ?_fputc:
  7106     00A3                     sendLedstripFrame@intensity:	
  7107                           ; 2 bytes @ 0x3
  7108                           
  7109     00A3                     fputc@c:	
  7110                           ; 1 bytes @ 0x3
  7111                           
  7112                           
  7113                           ; 2 bytes @ 0x3
  7114     00A3                     	ds	1
  7115     00A4                     sendLedstripFrame@red:
  7116     00A4                     ___awdiv@counter:	
  7117                           ; 1 bytes @ 0x4
  7118                           
  7119     00A4                     ___awmod@counter:	
  7120                           ; 1 bytes @ 0x4
  7121                           
  7122     00A4                     ___lwmod@counter:	
  7123                           ; 1 bytes @ 0x4
  7124                           
  7125     00A4                     ___wmul@multiplicand:	
  7126                           ; 1 bytes @ 0x4
  7127                           
  7128     00A4                     __Umul8_16@product:	
  7129                           ; 2 bytes @ 0x4
  7130                           
  7131     00A4                     ___fldiv@b:	
  7132                           ; 2 bytes @ 0x4
  7133                           
  7134     00A4                     ??_sendLedstripFrame:	
  7135                           ; 4 bytes @ 0x4
  7136                           
  7137     00A4                     ??___awdiv:	
  7138                           ; 1 bytes @ 0x4
  7139                           
  7140     00A4                     ??___awmod:	
  7141                           ; 1 bytes @ 0x4
  7142                           
  7143     00A4                     ??___lwmod:	
  7144                           ; 1 bytes @ 0x4
  7145                           
  7146     00A4                     ??___xxtofl:	
  7147                           ; 1 bytes @ 0x4
  7148                           
  7149                           
  7150                           ; 1 bytes @ 0x4
  7151     00A4                     	ds	1
  7152     00A5                     ___awdiv@sign:
  7153     00A5                     ___awmod@sign:	
  7154                           ; 1 bytes @ 0x5
  7155                           
  7156     00A5                     fputc@fp:	
  7157                           ; 1 bytes @ 0x5
  7158                           
  7159                           
  7160                           ; 2 bytes @ 0x5
  7161     00A5                     	ds	1
  7162     00A6                     ?_abs:
  7163     00A6                     ___wmul@product:	
  7164                           ; 2 bytes @ 0x6
  7165                           
  7166     00A6                     ___awdiv@quotient:	
  7167                           ; 2 bytes @ 0x6
  7168                           
  7169     00A6                     __Umul8_16@word_mpld:	
  7170                           ; 2 bytes @ 0x6
  7171                           
  7172     00A6                     abs@a:	
  7173                           ; 2 bytes @ 0x6
  7174                           
  7175     00A6                     ??___wmul:	
  7176                           ; 2 bytes @ 0x6
  7177                           
  7178                           
  7179                           ; 1 bytes @ 0x6
  7180     00A6                     	ds	1
  7181     00A7                     ??_fputc:
  7182                           
  7183                           ; 1 bytes @ 0x7
  7184     00A7                     	ds	1
  7185     00A8                     ?_SPI1_Open:
  7186     00A8                     ?_atoi:	
  7187                           ; 1 bytes @ 0x8
  7188                           
  7189     00A8                     ?___lwdiv:	
  7190                           ; 2 bytes @ 0x8
  7191                           
  7192     00A8                     ?_read_prec_or_width:	
  7193                           ; 2 bytes @ 0x8
  7194                           
  7195     00A8                     SPI1_Open@spiConfigIndex:	
  7196                           ; 2 bytes @ 0x8
  7197                           
  7198     00A8                     __Umul8_16@multiplier:	
  7199                           ; 1 bytes @ 0x8
  7200                           
  7201     00A8                     ___xxtofl@sign:	
  7202                           ; 1 bytes @ 0x8
  7203                           
  7204     00A8                     atoi@s:	
  7205                           ; 1 bytes @ 0x8
  7206                           
  7207     00A8                     read_prec_or_width@fmt:	
  7208                           ; 1 bytes @ 0x8
  7209                           
  7210     00A8                     ___lwdiv@divisor:	
  7211                           ; 1 bytes @ 0x8
  7212                           
  7213     00A8                     ??_abs:	
  7214                           ; 2 bytes @ 0x8
  7215                           
  7216     00A8                     ??___fldiv:	
  7217                           ; 1 bytes @ 0x8
  7218                           
  7219                           
  7220                           ; 1 bytes @ 0x8
  7221     00A8                     	ds	1
  7222     00A9                     ?___flmul:
  7223     00A9                     ___xxtofl@exp:	
  7224                           ; 4 bytes @ 0x9
  7225                           
  7226     00A9                     read_prec_or_width@ap:	
  7227                           ; 1 bytes @ 0x9
  7228                           
  7229     00A9                     ___flmul@b:	
  7230                           ; 2 bytes @ 0x9
  7231                           
  7232     00A9                     ??_SPI1_Open:	
  7233                           ; 4 bytes @ 0x9
  7234                           
  7235                           
  7236                           ; 1 bytes @ 0x9
  7237     00A9                     	ds	1
  7238     00AA                     ___lwdiv@dividend:
  7239     00AA                     ___xxtofl@arg:	
  7240                           ; 2 bytes @ 0xA
  7241                           
  7242     00AA                     ??_atoi:	
  7243                           ; 4 bytes @ 0xA
  7244                           
  7245                           
  7246                           ; 1 bytes @ 0xA
  7247     00AA                     	ds	1
  7248     00AB                     ??_initLedstrip:
  7249     00AB                     ??_read_prec_or_width:	
  7250                           ; 1 bytes @ 0xB
  7251                           
  7252                           
  7253                           ; 1 bytes @ 0xB
  7254     00AB                     	ds	1
  7255     00AC                     ?_fputs:
  7256     00AC                     ___lwdiv@counter:	
  7257                           ; 2 bytes @ 0xC
  7258                           
  7259     00AC                     atoi@neg:	
  7260                           ; 1 bytes @ 0xC
  7261                           
  7262     00AC                     fputs@s:	
  7263                           ; 1 bytes @ 0xC
  7264                           
  7265     00AC                     ??___lwdiv:	
  7266                           ; 1 bytes @ 0xC
  7267                           
  7268                           
  7269                           ; 1 bytes @ 0xC
  7270     00AC                     	ds	1
  7271     00AD                     ___lwdiv@quotient:
  7272     00AD                     atoi@n:	
  7273                           ; 2 bytes @ 0xD
  7274                           
  7275     00AD                     fputs@fp:	
  7276                           ; 2 bytes @ 0xD
  7277                           
  7278     00AD                     ___fldiv@rem:	
  7279                           ; 2 bytes @ 0xD
  7280                           
  7281     00AD                     ___flmul@a:	
  7282                           ; 4 bytes @ 0xD
  7283                           
  7284                           
  7285                           ; 4 bytes @ 0xD
  7286     00AD                     	ds	1
  7287     00AE                     ?___fladd:
  7288     00AE                     read_prec_or_width@c:	
  7289                           ; 4 bytes @ 0xE
  7290                           
  7291     00AE                     ___fladd@b:	
  7292                           ; 1 bytes @ 0xE
  7293                           
  7294                           
  7295                           ; 4 bytes @ 0xE
  7296     00AE                     	ds	1
  7297     00AF                     ?_setSetpoint:
  7298     00AF                     dutycycle_led_strip@target:	
  7299                           ; 1 bytes @ 0xF
  7300                           
  7301     00AF                     setSetpoint@new_setpoint:	
  7302                           ; 1 bytes @ 0xF
  7303                           
  7304     00AF                     read_prec_or_width@n:	
  7305                           ; 2 bytes @ 0xF
  7306                           
  7307     00AF                     ??_fputs:	
  7308                           ; 2 bytes @ 0xF
  7309                           
  7310     00AF                     ??_dutycycle_led_strip:	
  7311                           ; 1 bytes @ 0xF
  7312                           
  7313                           
  7314                           ; 1 bytes @ 0xF
  7315     00AF                     	ds	1
  7316     00B0                     dutycycle_led_strip@led:
  7317                           
  7318                           ; 1 bytes @ 0x10
  7319     00B0                     	ds	1
  7320     00B1                     ___fldiv@sign:
  7321     00B1                     fputs@c:	
  7322                           ; 1 bytes @ 0x11
  7323                           
  7324     00B1                     ??_setSetpoint:	
  7325                           ; 1 bytes @ 0x11
  7326                           
  7327     00B1                     ??_TMR6_Tasks:	
  7328                           ; 1 bytes @ 0x11
  7329                           
  7330     00B1                     ??_updateLedstripAnimation:	
  7331                           ; 1 bytes @ 0x11
  7332                           
  7333     00B1                     ??___flmul:	
  7334                           ; 1 bytes @ 0x11
  7335                           
  7336                           
  7337                           ; 1 bytes @ 0x11
  7338     00B1                     	ds	1
  7339     00B2                     ___fldiv@new_exp:
  7340     00B2                     fputs@i:	
  7341                           ; 2 bytes @ 0x12
  7342                           
  7343     00B2                     ___fladd@a:	
  7344                           ; 2 bytes @ 0x12
  7345                           
  7346                           
  7347                           ; 4 bytes @ 0x12
  7348     00B2                     	ds	2
  7349     00B4                     ?_pad:
  7350     00B4                     pad@fp:	
  7351                           ; 2 bytes @ 0x14
  7352                           
  7353     00B4                     ___fldiv@grs:	
  7354                           ; 2 bytes @ 0x14
  7355                           
  7356                           
  7357                           ; 4 bytes @ 0x14
  7358     00B4                     	ds	2
  7359     00B6                     ___flmul@sign:
  7360     00B6                     pad@buf:	
  7361                           ; 1 bytes @ 0x16
  7362                           
  7363     00B6                     ??___fladd:	
  7364                           ; 1 bytes @ 0x16
  7365                           
  7366                           
  7367                           ; 1 bytes @ 0x16
  7368     00B6                     	ds	1
  7369     00B7                     ___flmul@aexp:
  7370     00B7                     pad@p:	
  7371                           ; 1 bytes @ 0x17
  7372                           
  7373                           
  7374                           ; 2 bytes @ 0x17
  7375     00B7                     	ds	1
  7376     00B8                     ___fldiv@bexp:
  7377     00B8                     ___flmul@grs:	
  7378                           ; 1 bytes @ 0x18
  7379                           
  7380                           
  7381                           ; 4 bytes @ 0x18
  7382     00B8                     	ds	1
  7383     00B9                     ___fldiv@aexp:
  7384     00B9                     ??_pad:	
  7385                           ; 1 bytes @ 0x19
  7386                           
  7387                           
  7388                           ; 1 bytes @ 0x19
  7389     00B9                     	ds	1
  7390     00BA                     pad@i:
  7391                           
  7392                           ; 2 bytes @ 0x1A
  7393     00BA                     	ds	2
  7394     00BC                     ?_dtoa:
  7395     00BC                     ?_utoa:	
  7396                           ; 2 bytes @ 0x1C
  7397                           
  7398     00BC                     ___flmul@bexp:	
  7399                           ; 2 bytes @ 0x1C
  7400                           
  7401     00BC                     dtoa@fp:	
  7402                           ; 1 bytes @ 0x1C
  7403                           
  7404     00BC                     utoa@fp:	
  7405                           ; 2 bytes @ 0x1C
  7406                           
  7407                           
  7408                           ; 2 bytes @ 0x1C
  7409     00BC                     	ds	1
  7410     00BD                     ___flmul@prod:
  7411                           
  7412                           ; 4 bytes @ 0x1D
  7413     00BD                     	ds	1
  7414     00BE                     ___fladd@signs:
  7415     00BE                     dtoa@d:	
  7416                           ; 1 bytes @ 0x1E
  7417                           
  7418     00BE                     utoa@d:	
  7419                           ; 2 bytes @ 0x1E
  7420                           
  7421                           
  7422                           ; 2 bytes @ 0x1E
  7423     00BE                     	ds	1
  7424     00BF                     ___fladd@aexp:
  7425                           
  7426                           ; 1 bytes @ 0x1F
  7427     00BF                     	ds	1
  7428     00C0                     ___fladd@bexp:
  7429     00C0                     ??_dtoa:	
  7430                           ; 1 bytes @ 0x20
  7431                           
  7432     00C0                     ??_utoa:	
  7433                           ; 1 bytes @ 0x20
  7434                           
  7435                           
  7436                           ; 1 bytes @ 0x20
  7437     00C0                     	ds	1
  7438     00C1                     ___fladd@grs:
  7439     00C1                     utoa@p:	
  7440                           ; 1 bytes @ 0x21
  7441                           
  7442     00C1                     ___flmul@temp:	
  7443                           ; 1 bytes @ 0x21
  7444                           
  7445     00C1                     _dtoa$2147:	
  7446                           ; 2 bytes @ 0x21
  7447                           
  7448                           
  7449                           ; 2 bytes @ 0x21
  7450     00C1                     	ds	1
  7451     00C2                     utoa@w:
  7452                           
  7453                           ; 2 bytes @ 0x22
  7454     00C2                     	ds	1
  7455     00C3                     ?_str2float:
  7456     00C3                     str2float@str:	
  7457                           ; 4 bytes @ 0x23
  7458                           
  7459     00C3                     dtoa@p:	
  7460                           ; 1 bytes @ 0x23
  7461                           
  7462                           
  7463                           ; 1 bytes @ 0x23
  7464     00C3                     	ds	1
  7465     00C4                     dtoa@w:
  7466     00C4                     utoa@i:	
  7467                           ; 2 bytes @ 0x24
  7468                           
  7469                           
  7470                           ; 2 bytes @ 0x24
  7471     00C4                     	ds	2
  7472     00C6                     dtoa@s:
  7473                           
  7474                           ; 1 bytes @ 0x26
  7475     00C6                     	ds	1
  7476     00C7                     str2float@decimal_separator:
  7477     00C7                     dtoa@i:	
  7478                           ; 1 bytes @ 0x27
  7479                           
  7480     00C7                     ??_str2float:	
  7481                           ; 2 bytes @ 0x27
  7482                           
  7483                           
  7484                           ; 1 bytes @ 0x27
  7485     00C7                     	ds	1
  7486     00C8                     str2float@multiplier:
  7487                           
  7488                           ; 1 bytes @ 0x28
  7489     00C8                     	ds	1
  7490     00C9                     ?_vfpfcnvrt:
  7491     00C9                     str2float@i:	
  7492                           ; 2 bytes @ 0x29
  7493                           
  7494     00C9                     vfpfcnvrt@fp:	
  7495                           ; 1 bytes @ 0x29
  7496                           
  7497                           
  7498                           ; 2 bytes @ 0x29
  7499     00C9                     	ds	1
  7500     00CA                     str2float@number:
  7501                           
  7502                           ; 4 bytes @ 0x2A
  7503     00CA                     	ds	1
  7504     00CB                     vfpfcnvrt@fmt:
  7505                           
  7506                           ; 1 bytes @ 0x2B
  7507     00CB                     	ds	1
  7508     00CC                     vfpfcnvrt@ap:
  7509                           
  7510                           ; 2 bytes @ 0x2C
  7511     00CC                     	ds	2
  7512     00CE                     str2float@digit:
  7513     00CE                     ??_vfpfcnvrt:	
  7514                           ; 1 bytes @ 0x2E
  7515                           
  7516                           
  7517                           ; 1 bytes @ 0x2E
  7518     00CE                     	ds	1
  7519     00CF                     ?_setKp:
  7520     00CF                     ?_setKi:	
  7521                           ; 1 bytes @ 0x2F
  7522                           
  7523     00CF                     setKp@new_kp:	
  7524                           ; 1 bytes @ 0x2F
  7525                           
  7526     00CF                     setKi@new_ki:	
  7527                           ; 4 bytes @ 0x2F
  7528                           
  7529                           
  7530                           ; 4 bytes @ 0x2F
  7531     00CF                     	ds	3
  7532     00D2                     vfpfcnvrt@done:
  7533                           
  7534                           ; 1 bytes @ 0x32
  7535     00D2                     	ds	1
  7536     00D3                     vfpfcnvrt@convarg:
  7537     00D3                     ??_setKp:	
  7538                           ; 4 bytes @ 0x33
  7539                           
  7540     00D3                     ??_setKi:	
  7541                           ; 1 bytes @ 0x33
  7542                           
  7543                           
  7544                           ; 1 bytes @ 0x33
  7545     00D3                     	ds	4
  7546     00D7                     vfpfcnvrt@cp:
  7547                           
  7548                           ; 2 bytes @ 0x37
  7549     00D7                     	ds	2
  7550     00D9                     ?_vfprintf:
  7551     00D9                     vfprintf@fp:	
  7552                           ; 2 bytes @ 0x39
  7553                           
  7554                           
  7555                           ; 2 bytes @ 0x39
  7556     00D9                     	ds	2
  7557     00DB                     vfprintf@fmt:
  7558                           
  7559                           ; 2 bytes @ 0x3B
  7560     00DB                     	ds	2
  7561     00DD                     vfprintf@ap:
  7562                           
  7563                           ; 2 bytes @ 0x3D
  7564     00DD                     	ds	2
  7565     00DF                     ??_vfprintf:
  7566                           
  7567                           ; 1 bytes @ 0x3F
  7568     00DF                     	ds	1
  7569     00E0                     vfprintf@cfmt:
  7570                           
  7571                           ; 2 bytes @ 0x40
  7572     00E0                     	ds	2
  7573     00E2                     ?_sprintf:
  7574     00E2                     ?_printf:	
  7575                           ; 2 bytes @ 0x42
  7576                           
  7577     00E2                     sprintf@s:	
  7578                           ; 2 bytes @ 0x42
  7579                           
  7580     00E2                     printf@fmt:	
  7581                           ; 1 bytes @ 0x42
  7582                           
  7583                           
  7584                           ; 2 bytes @ 0x42
  7585     00E2                     	ds	1
  7586     00E3                     sprintf@fmt:
  7587                           
  7588                           ; 2 bytes @ 0x43
  7589     00E3                     	ds	4
  7590     00E7                     ??_sprintf:
  7591                           
  7592                           ; 1 bytes @ 0x47
  7593     00E7                     	ds	1
  7594     00E8                     printf@ap:
  7595     00E8                     ??_printf:	
  7596                           ; 1 bytes @ 0x48
  7597                           
  7598                           
  7599                           ; 1 bytes @ 0x48
  7600     00E8                     	ds	1
  7601     00E9                     ?_printOut:
  7602     00E9                     ?_readLine:	
  7603                           ; 1 bytes @ 0x49
  7604                           
  7605     00E9                     printOut@str:	
  7606                           ; 1 bytes @ 0x49
  7607                           
  7608     00E9                     ??_printLogs:	
  7609                           ; 1 bytes @ 0x49
  7610                           
  7611                           
  7612                           ; 1 bytes @ 0x49
  7613     00E9                     	ds	1
  7614     00EA                     ??_printOut:
  7615                           
  7616                           ; 1 bytes @ 0x4A
  7617     00EA                     	ds	1
  7618     00EB                     ??_readLine:
  7619                           
  7620                           ; 1 bytes @ 0x4B
  7621     00EB                     	ds	1
  7622     00EC                     uartHandler@str:
  7623     00EC                     ??_uartHandler:	
  7624                           ; 1 bytes @ 0x4C
  7625                           
  7626                           
  7627                           ; 1 bytes @ 0x4C
  7628     00EC                     	ds	1
  7629                           
  7630                           	psect	cstackCOMMON
  7631     0070                     __pcstackCOMMON:
  7632     0070                     ?_ADC_DefaultInterruptHandler:
  7633     0070                     ?_SPI1_Initialize:	
  7634                           ; 1 bytes @ 0x0
  7635                           
  7636     0070                     ?_TMR4_ISR:	
  7637                           ; 1 bytes @ 0x0
  7638                           
  7639     0070                     ?_TMR2_ISR:	
  7640                           ; 1 bytes @ 0x0
  7641                           
  7642     0070                     ?_TMR2_Initialize:	
  7643                           ; 1 bytes @ 0x0
  7644                           
  7645     0070                     ?_TMR4_Initialize:	
  7646                           ; 1 bytes @ 0x0
  7647                           
  7648     0070                     ?_TMR6_Initialize:	
  7649                           ; 1 bytes @ 0x0
  7650                           
  7651     0070                     ?_EUSART_Initialize:	
  7652                           ; 1 bytes @ 0x0
  7653                           
  7654     0070                     ?_TMR2_DefaultPeriodMatchCallback:	
  7655                           ; 1 bytes @ 0x0
  7656                           
  7657     0070                     ?_TMR4_DefaultPeriodMatchCallback:	
  7658                           ; 1 bytes @ 0x0
  7659                           
  7660     0070                     ?_TMR6_DefaultPeriodMatchCallback:	
  7661                           ; 1 bytes @ 0x0
  7662                           
  7663     0070                     ?_EUSART_Read:	
  7664                           ; 1 bytes @ 0x0
  7665                           
  7666     0070                     ?_EUSART_IsRxReady:	
  7667                           ; 1 bytes @ 0x0
  7668                           
  7669     0070                     ?_EUSART_IsTxReady:	
  7670                           ; 1 bytes @ 0x0
  7671                           
  7672     0070                     ?_EUSART_ReceiveISR:	
  7673                           ; 1 bytes @ 0x0
  7674                           
  7675     0070                     ?_EUSART_TransmitISR:	
  7676                           ; 1 bytes @ 0x0
  7677                           
  7678     0070                     ?_EUSART_DefaultFramingErrorCallback:	
  7679                           ; 1 bytes @ 0x0
  7680                           
  7681     0070                     ?_EUSART_DefaultOverrunErrorCallback:	
  7682                           ; 1 bytes @ 0x0
  7683                           
  7684     0070                     ?_initAdcMultiplexer:	
  7685                           ; 1 bytes @ 0x0
  7686                           
  7687     0070                     ?_controller:	
  7688                           ; 1 bytes @ 0x0
  7689                           
  7690     0070                     ?_initLedstrip:	
  7691                           ; 1 bytes @ 0x0
  7692                           
  7693     0070                     ?_uartHandler:	
  7694                           ; 1 bytes @ 0x0
  7695                           
  7696     0070                     ?_printLogs:	
  7697                           ; 1 bytes @ 0x0
  7698                           
  7699     0070                     ?_ADC_Initialize:	
  7700                           ; 1 bytes @ 0x0
  7701                           
  7702     0070                     ?_ADC_SelectChannel:	
  7703                           ; 1 bytes @ 0x0
  7704                           
  7705     0070                     ?_ADC_ISR:	
  7706                           ; 1 bytes @ 0x0
  7707                           
  7708     0070                     ?_pwm_fan_Initialize:	
  7709                           ; 1 bytes @ 0x0
  7710                           
  7711     0070                     ?_pwm_fan_LoadDutyValue:	
  7712                           ; 1 bytes @ 0x0
  7713                           
  7714     0070                     ?_PWM_buzzer_Initialize:	
  7715                           ; 1 bytes @ 0x0
  7716                           
  7717     0070                     ?_INTERRUPT_Initialize:	
  7718                           ; 1 bytes @ 0x0
  7719                           
  7720     0070                     ?_INTERRUPT_InterruptManager:	
  7721                           ; 1 bytes @ 0x0
  7722                           
  7723     0070                     ?_CLOCK_Initialize:	
  7724                           ; 1 bytes @ 0x0
  7725                           
  7726     0070                     ?_PIN_MANAGER_Initialize:	
  7727                           ; 1 bytes @ 0x0
  7728                           
  7729     0070                     ?_SYSTEM_Initialize:	
  7730                           ; 1 bytes @ 0x0
  7731                           
  7732     0070                     ?_TMR6_Tasks:	
  7733                           ; 1 bytes @ 0x0
  7734                           
  7735     0070                     ?_putch:	
  7736                           ; 1 bytes @ 0x0
  7737                           
  7738     0070                     ?_adcConversionDoneHandler:	
  7739                           ; 1 bytes @ 0x0
  7740                           
  7741     0070                     ?_sendLedstripStartFrame:	
  7742                           ; 1 bytes @ 0x0
  7743                           
  7744     0070                     ?_sendLedstripEndFrame:	
  7745                           ; 1 bytes @ 0x0
  7746                           
  7747     0070                     ?_dutycycle_led_strip:	
  7748                           ; 1 bytes @ 0x0
  7749                           
  7750     0070                     ?_updateLedstripAnimation:	
  7751                           ; 1 bytes @ 0x0
  7752                           
  7753     0070                     ?i1_ADC_SelectChannel:	
  7754                           ; 1 bytes @ 0x0
  7755                           
  7756     0070                     ?_ADC_GetConversionResult:	
  7757                           ; 1 bytes @ 0x0
  7758                           
  7759     0070                     ?_main:	
  7760                           ; 2 bytes @ 0x0
  7761                           
  7762     0070                     ?_getHoogtesensor:	
  7763                           ; 2 bytes @ 0x0
  7764                           
  7765     0070                     ?i1__Umul8_16:	
  7766                           ; 2 bytes @ 0x0
  7767                           
  7768     0070                     ?i1___xxtofl:	
  7769                           ; 2 bytes @ 0x0
  7770                           
  7771     0070                     EUSART_ReceiveISR@regValue:	
  7772                           ; 4 bytes @ 0x0
  7773                           
  7774     0070                     EUSART_TransmitISR@tempTxTail:	
  7775                           ; 1 bytes @ 0x0
  7776                           
  7777     0070                     i1__Umul8_16@multiplicand:	
  7778                           ; 1 bytes @ 0x0
  7779                           
  7780     0070                     pwm_fan_LoadDutyValue@dutyValue:	
  7781                           ; 1 bytes @ 0x0
  7782                           
  7783     0070                     i1___xxtofl@val:	
  7784                           ; 2 bytes @ 0x0
  7785                           
  7786     0070                     ??_ADC_DefaultInterruptHandler:	
  7787                           ; 4 bytes @ 0x0
  7788                           
  7789     0070                     ??_TMR2_ISR:	
  7790                           ; 1 bytes @ 0x0
  7791                           
  7792     0070                     ??_TMR2_DefaultPeriodMatchCallback:	
  7793                           ; 1 bytes @ 0x0
  7794                           
  7795     0070                     ??_TMR4_DefaultPeriodMatchCallback:	
  7796                           ; 1 bytes @ 0x0
  7797                           
  7798     0070                     ??_EUSART_ReceiveISR:	
  7799                           ; 1 bytes @ 0x0
  7800                           
  7801     0070                     ??_EUSART_TransmitISR:	
  7802                           ; 1 bytes @ 0x0
  7803                           
  7804     0070                     ??_EUSART_DefaultFramingErrorCallback:	
  7805                           ; 1 bytes @ 0x0
  7806                           
  7807     0070                     ??_EUSART_DefaultOverrunErrorCallback:	
  7808                           ; 1 bytes @ 0x0
  7809                           
  7810     0070                     ??i1_ADC_SelectChannel:	
  7811                           ; 1 bytes @ 0x0
  7812                           
  7813                           
  7814                           ; 1 bytes @ 0x0
  7815     0070                     	ds	1
  7816     0071                     EUSART_ReceiveISR@tempRxHead:
  7817     0071                     i1ADC_SelectChannel@channel:	
  7818                           ; 1 bytes @ 0x1
  7819                           
  7820                           
  7821                           ; 1 bytes @ 0x1
  7822     0071                     	ds	1
  7823     0072                     ??_ADC_GetConversionResult:
  7824     0072                     ??_pwm_fan_LoadDutyValue:	
  7825                           ; 1 bytes @ 0x2
  7826                           
  7827     0072                     ??_adcConversionDoneHandler:	
  7828                           ; 1 bytes @ 0x2
  7829                           
  7830     0072                     ??_getHoogtesensor:	
  7831                           ; 1 bytes @ 0x2
  7832                           
  7833     0072                     ??i1__Umul8_16:	
  7834                           ; 1 bytes @ 0x2
  7835                           
  7836                           
  7837                           ; 1 bytes @ 0x2
  7838     0072                     	ds	2
  7839     0074                     i1__Umul8_16@product:
  7840     0074                     ??_ADC_ISR:	
  7841                           ; 2 bytes @ 0x4
  7842                           
  7843     0074                     ??i1___xxtofl:	
  7844                           ; 1 bytes @ 0x4
  7845                           
  7846                           
  7847                           ; 1 bytes @ 0x4
  7848     0074                     	ds	2
  7849     0076                     i1__Umul8_16@word_mpld:
  7850                           
  7851                           ; 2 bytes @ 0x6
  7852     0076                     	ds	2
  7853     0078                     i1__Umul8_16@multiplier:
  7854     0078                     i1___xxtofl@sign:	
  7855                           ; 1 bytes @ 0x8
  7856                           
  7857                           
  7858                           ; 1 bytes @ 0x8
  7859     0078                     	ds	1
  7860     0079                     i1___xxtofl@exp:
  7861                           
  7862                           ; 1 bytes @ 0x9
  7863     0079                     	ds	1
  7864     007A                     i1___xxtofl@arg:
  7865                           
  7866                           ; 4 bytes @ 0xA
  7867     007A                     	ds	4
  7868     007E                     ??_TMR4_ISR:
  7869     007E                     ??_INTERRUPT_InterruptManager:	
  7870                           ; 1 bytes @ 0xE
  7871                           
  7872                           
  7873                           	psect	cstackBANK0
  7874     0020                     __pcstackBANK0:	
  7875                           ; 1 bytes @ 0xE
  7876                           
  7877     0020                     ?i1___flmul:
  7878     0020                     i1___flmul@b:	
  7879                           ; 4 bytes @ 0x0
  7880                           
  7881                           
  7882                           ; 4 bytes @ 0x0
  7883     0020                     	ds	4
  7884     0024                     i1___flmul@a:
  7885                           
  7886                           ; 4 bytes @ 0x4
  7887     0024                     	ds	4
  7888     0028                     ??i1___flmul:
  7889                           
  7890                           ; 1 bytes @ 0x8
  7891     0028                     	ds	5
  7892     002D                     i1___flmul@sign:
  7893                           
  7894                           ; 1 bytes @ 0xD
  7895     002D                     	ds	1
  7896     002E                     i1___flmul@grs:
  7897                           
  7898                           ; 4 bytes @ 0xE
  7899     002E                     	ds	4
  7900     0032                     i1___flmul@aexp:
  7901                           
  7902                           ; 1 bytes @ 0x12
  7903     0032                     	ds	1
  7904     0033                     i1___flmul@bexp:
  7905                           
  7906                           ; 1 bytes @ 0x13
  7907     0033                     	ds	1
  7908     0034                     i1___flmul@prod:
  7909                           
  7910                           ; 4 bytes @ 0x14
  7911     0034                     	ds	4
  7912     0038                     i1___flmul@temp:
  7913                           
  7914                           ; 2 bytes @ 0x18
  7915     0038                     	ds	2
  7916     003A                     ?___fltol:
  7917     003A                     ?i1___fladd:	
  7918                           ; 4 bytes @ 0x1A
  7919                           
  7920     003A                     ___fltol@f1:	
  7921                           ; 4 bytes @ 0x1A
  7922                           
  7923     003A                     i1___fladd@b:	
  7924                           ; 4 bytes @ 0x1A
  7925                           
  7926                           
  7927                           ; 4 bytes @ 0x1A
  7928     003A                     	ds	4
  7929     003E                     i1___fladd@a:
  7930     003E                     ??___fltol:	
  7931                           ; 4 bytes @ 0x1E
  7932                           
  7933                           
  7934                           ; 1 bytes @ 0x1E
  7935     003E                     	ds	4
  7936     0042                     ___fltol@sign1:
  7937     0042                     ??i1___fladd:	
  7938                           ; 1 bytes @ 0x22
  7939                           
  7940                           
  7941                           ; 1 bytes @ 0x22
  7942     0042                     	ds	1
  7943     0043                     ___fltol@exp1:
  7944                           
  7945                           ; 1 bytes @ 0x23
  7946     0043                     	ds	7
  7947     004A                     i1___fladd@signs:
  7948                           
  7949                           ; 1 bytes @ 0x2A
  7950     004A                     	ds	1
  7951     004B                     i1___fladd@aexp:
  7952                           
  7953                           ; 1 bytes @ 0x2B
  7954     004B                     	ds	1
  7955     004C                     i1___fladd@bexp:
  7956                           
  7957                           ; 1 bytes @ 0x2C
  7958     004C                     	ds	1
  7959     004D                     i1___fladd@grs:
  7960                           
  7961                           ; 1 bytes @ 0x2D
  7962     004D                     	ds	1
  7963     004E                     ??_controller:
  7964                           
  7965                           ; 1 bytes @ 0x2E
  7966     004E                     	ds	1
  7967     004F                     controller@P:
  7968                           
  7969                           ; 2 bytes @ 0x2F
  7970     004F                     	ds	2
  7971     0051                     controller@I:
  7972                           
  7973                           ; 2 bytes @ 0x31
  7974     0051                     	ds	2
  7975     0053                     controller@error:
  7976                           
  7977                           ; 2 bytes @ 0x33
  7978     0053                     	ds	2
  7979                           
  7980                           	psect	maintext
  7981     16B9                     __pmaintext:	
  7982 ;;
  7983 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
  7984 ;;
  7985 ;; *************** function _main *****************
  7986 ;; Defined at:
  7987 ;;		line 52 in file "main.c"
  7988 ;; Parameters:    Size  Location     Type
  7989 ;;		None
  7990 ;; Auto vars:     Size  Location     Type
  7991 ;;  str            20    0[BANK4 ] unsigned char [20]
  7992 ;;  counter         1   20[BANK4 ] unsigned char 
  7993 ;; Return value:  Size  Location     Type
  7994 ;;                  2  818[None  ] int 
  7995 ;; Registers used:
  7996 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  7997 ;; Tracked objects:
  7998 ;;		On entry : B1F/0
  7999 ;;		On exit  : 0/0
  8000 ;;		Unchanged: 0/0
  8001 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8002 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8003 ;;      Locals:         0       0       0       0       0      21       0       0       0       0       0       0       
      +0       0
  8004 ;;      Temps:          0       0       0       2       0       0       0       0       0       0       0       0       
      +0       0
  8005 ;;      Totals:         0       0       0       2       0      21       0       0       0       0       0       0       
      +0       0
  8006 ;;Total ram usage:       23 bytes
  8007 ;; Hardware stack levels required when called: 16
  8008 ;; This function calls:
  8009 ;;		_PWM_buzzer_LoadDutyValue
  8010 ;;		_SYSTEM_Initialize
  8011 ;;		_TMR4_PeriodMatchCallbackRegister
  8012 ;;		_TMR6_Tasks
  8013 ;;		___wmul
  8014 ;;		_getPomphoogte
  8015 ;;		_initAdcMultiplexer
  8016 ;;		_initLedstrip
  8017 ;;		_printLogs
  8018 ;;		_printOut
  8019 ;;		_setSetpoint
  8020 ;;		_sprintf
  8021 ;;		_uartHandler
  8022 ;; This function is called by:
  8023 ;;		Startup code after reset
  8024 ;; This function uses a non-reentrant model
  8025 ;;
  8026                           
  8027     16B9                     _main:	
  8028                           ;psect for function _main
  8029                           
  8030     16B9                     l7683:	
  8031                           ;incstack = 0
  8032                           ; Regs used in _main: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  8033                           
  8034                           
  8035                           ;main.c: 54:     SYSTEM_Initialize();
  8036     16B9  3190  2014  3196   	fcall	_SYSTEM_Initialize
  8037     16BC                     l7685:
  8038                           
  8039                           ;main.c: 60:     (INTCONbits.GIE = 1);
  8040     16BC  178B               	bsf	11,7	;volatile
  8041     16BD                     l7687:
  8042                           
  8043                           ;main.c: 66:     (INTCONbits.PEIE = 1);
  8044     16BD  170B               	bsf	11,6	;volatile
  8045                           
  8046                           ;main.c: 71:     initAdcMultiplexer();
  8047     16BE  319D  25F5  3196   	fcall	_initAdcMultiplexer
  8048                           
  8049                           ;main.c: 72:     TMR4_PeriodMatchCallbackRegister(controller);
  8050     16C1  30D2               	movlw	low _controller
  8051     16C2  0021               	movlb	1	; select bank1
  8052     16C3  00A0               	movwf	TMR4_PeriodMatchCallbackRegister@CallbackHandler^(0+128)
  8053     16C4  3009               	movlw	high _controller
  8054     16C5  00A1               	movwf	(TMR4_PeriodMatchCallbackRegister@CallbackHandler^(0+128)+1)
  8055     16C6  319D  256C  3196   	fcall	_TMR4_PeriodMatchCallbackRegister
  8056     16C9                     l7689:
  8057                           
  8058                           ;main.c: 73:     initLedstrip();
  8059     16C9  319E  2602  3196   	fcall	_initLedstrip
  8060     16CC                     l7691:
  8061                           
  8062                           ;main.c: 75:     uint8_t counter = 0;
  8063     16CC  0024               	movlb	4	; select bank4
  8064     16CD  01B4               	clrf	main@counter^(0+512)
  8065     16CE                     l7693:
  8066                           
  8067                           ;main.c: 78:     {;main.c: 79:         uartHandler();
  8068     16CE  3196  261F  3196   	fcall	_uartHandler
  8069     16D1                     l7695:
  8070                           
  8071                           ;main.c: 81:         if (buzzing == 0){
  8072     16D1  0020               	movlb	0	; select bank0
  8073     16D2  0866               	movf	_buzzing,w
  8074     16D3  1D03               	btfss	3,2
  8075     16D4  2ED6               	goto	u9781
  8076     16D5  2ED7               	goto	u9780
  8077     16D6                     u9781:
  8078     16D6  2F02               	goto	l7709
  8079     16D7                     u9780:
  8080     16D7                     l7697:
  8081                           
  8082                           ;main.c: 83:            if (getPomphoogte() >= 450) {
  8083     16D7  319D  2587  3196   	fcall	_getPomphoogte
  8084     16DA  3001               	movlw	1
  8085     16DB  0021               	movlb	1	; select bank1
  8086     16DC  0221               	subwf	(?_getPomphoogte+1)^(0+128),w
  8087     16DD  30C2               	movlw	194
  8088     16DE  1903               	skipnz
  8089     16DF  0220               	subwf	?_getPomphoogte^(0+128),w
  8090     16E0  1C03               	skipc
  8091     16E1  2EE3               	goto	u9791
  8092     16E2  2EE4               	goto	u9790
  8093     16E3                     u9791:
  8094     16E3  2EFA               	goto	l7707
  8095     16E4                     u9790:
  8096     16E4                     l7699:
  8097                           
  8098                           ;main.c: 84:             PWM_buzzer_LoadDutyValue(50);
  8099     16E4  3032               	movlw	50
  8100     16E5  00A0               	movwf	PWM_buzzer_LoadDutyValue@dutyValue^(0+128)
  8101     16E6  3000               	movlw	0
  8102     16E7  00A1               	movwf	(PWM_buzzer_LoadDutyValue@dutyValue^(0+128)+1)
  8103     16E8  319F  2739  3196   	fcall	_PWM_buzzer_LoadDutyValue
  8104     16EB                     l7701:
  8105                           
  8106                           ;main.c: 85:             buzzing = 1;
  8107     16EB  3001               	movlw	1
  8108     16EC  0020               	movlb	0	; select bank0
  8109     16ED  00E6               	movwf	_buzzing
  8110     16EE                     l7703:
  8111                           
  8112                           ;main.c: 86:             counter += 1;
  8113     16EE  3001               	movlw	1
  8114     16EF  0024               	movlb	4	; select bank4
  8115     16F0  07B4               	addwf	main@counter^(0+512),f
  8116     16F1                     l7705:
  8117                           
  8118                           ;main.c: 87:             _delay((unsigned long)((20)*(32000000U/4000.0)));
  8119     16F1  30D0               	movlw	208
  8120     16F2  0022               	movlb	2	; select bank2
  8121     16F3  00C6               	movwf	??_main^(0+256)
  8122     16F4  30C9               	movlw	201
  8123     16F5                     u9887:
  8124     16F5  0B89               	decfsz	9,f
  8125     16F6  2EF5               	goto	u9887
  8126     16F7  0BC6               	decfsz	??_main^(0+256),f
  8127     16F8  2EF5               	goto	u9887
  8128     16F9  3200               	nop2
  8129     16FA                     l7707:
  8130                           
  8131                           ;main.c: 90:            PWM_buzzer_LoadDutyValue(0);
  8132     16FA  3000               	movlw	0
  8133     16FB  0021               	movlb	1	; select bank1
  8134     16FC  00A0               	movwf	PWM_buzzer_LoadDutyValue@dutyValue^(0+128)
  8135     16FD  00A1               	movwf	(PWM_buzzer_LoadDutyValue@dutyValue+1)^(0+128)
  8136     16FE  319F  2739  3196   	fcall	_PWM_buzzer_LoadDutyValue
  8137                           
  8138                           ;main.c: 91:         } else {
  8139     1701  2F11               	goto	l7713
  8140     1702                     l7709:
  8141                           
  8142                           ;main.c: 92:             if (getPomphoogte() <= 350) {
  8143     1702  319D  2587  3196   	fcall	_getPomphoogte
  8144     1705  3001               	movlw	1
  8145     1706  0021               	movlb	1	; select bank1
  8146     1707  0221               	subwf	(?_getPomphoogte+1)^(0+128),w
  8147     1708  305F               	movlw	95
  8148     1709  1903               	skipnz
  8149     170A  0220               	subwf	?_getPomphoogte^(0+128),w
  8150     170B  1803               	skipnc
  8151     170C  2F0E               	goto	u9801
  8152     170D  2F0F               	goto	u9800
  8153     170E                     u9801:
  8154     170E  2F11               	goto	l7713
  8155     170F                     u9800:
  8156     170F                     l7711:
  8157                           
  8158                           ;main.c: 93:                 buzzing = 0;
  8159     170F  0020               	movlb	0	; select bank0
  8160     1710  01E6               	clrf	_buzzing
  8161     1711                     l7713:
  8162                           
  8163                           ;main.c: 97:         _delay((unsigned long)((1)*(32000000U/4000.0)));
  8164     1711  300B               	movlw	11
  8165     1712  0022               	movlb	2	; select bank2
  8166     1713  00C6               	movwf	??_main^(0+256)
  8167     1714  3062               	movlw	98
  8168     1715                     u9897:
  8169     1715  0B89               	decfsz	9,f
  8170     1716  2F15               	goto	u9897
  8171     1717  0BC6               	decfsz	??_main^(0+256),f
  8172     1718  2F15               	goto	u9897
  8173     1719  0000               	nop
  8174     171A                     l7715:
  8175                           
  8176                           ;main.c: 100:         printLogs();
  8177     171A  319F  27A1  3196   	fcall	_printLogs
  8178     171D                     l7717:
  8179                           
  8180                           ;main.c: 102:         setSetpoint(45 + counter * 50);
  8181     171D  0024               	movlb	4	; select bank4
  8182     171E  0834               	movf	main@counter^(0+512),w
  8183     171F  0022               	movlb	2	; select bank2
  8184     1720  00C6               	movwf	??_main^(0+256)
  8185     1721  01C7               	clrf	(??_main^(0+256)+1)
  8186     1722  0846               	movf	??_main^(0+256),w
  8187     1723  0021               	movlb	1	; select bank1
  8188     1724  00A2               	movwf	___wmul@multiplier^(0+128)
  8189     1725  0022               	movlb	2	; select bank2
  8190     1726  0847               	movf	(??_main+1)^(0+256),w
  8191     1727  0021               	movlb	1	; select bank1
  8192     1728  00A3               	movwf	(___wmul@multiplier+1)^(0+128)
  8193     1729  3032               	movlw	50
  8194     172A  00A4               	movwf	___wmul@multiplicand^(0+128)
  8195     172B  3000               	movlw	0
  8196     172C  00A5               	movwf	(___wmul@multiplicand^(0+128)+1)
  8197     172D  319F  27C0  3196   	fcall	___wmul
  8198     1730  0021               	movlb	1	; select bank1
  8199     1731  0822               	movf	?___wmul^(0+128),w
  8200     1732  3E2D               	addlw	45
  8201     1733  00AF               	movwf	setSetpoint@new_setpoint^(0+128)
  8202     1734  3000               	movlw	0
  8203     1735  3D23               	addwfc	(?___wmul+1)^(0+128),w
  8204     1736  00B0               	movwf	(setSetpoint@new_setpoint+1)^(0+128)
  8205     1737  319D  253D  3196   	fcall	_setSetpoint
  8206     173A                     l7719:
  8207                           
  8208                           ;main.c: 103:         char str[20];;main.c: 104:         sprintf(str, "counter: %u\n\r",
      +                           counter);
  8209     173A  3020               	movlw	(low (main@str| (0+512)))& (0+255)
  8210     173B  0021               	movlb	1	; select bank1
  8211     173C  00E2               	movwf	sprintf@s^(0+128)
  8212     173D  309D               	movlw	low (STR_1| (0+32768))
  8213     173E  00E3               	movwf	sprintf@fmt^(0+128)
  8214     173F  3098               	movlw	high (STR_1| (0+32768))
  8215     1740  00E4               	movwf	(sprintf@fmt^(0+128)+1)
  8216     1741  0024               	movlb	4	; select bank4
  8217     1742  0834               	movf	main@counter^(0+512),w
  8218     1743  0022               	movlb	2	; select bank2
  8219     1744  00C6               	movwf	??_main^(0+256)
  8220     1745  01C7               	clrf	(??_main^(0+256)+1)
  8221     1746  0846               	movf	??_main^(0+256),w
  8222     1747  0021               	movlb	1	; select bank1
  8223     1748  00E5               	movwf	(?_sprintf^(0+128)+3)
  8224     1749  0022               	movlb	2	; select bank2
  8225     174A  0847               	movf	(??_main+1)^(0+256),w
  8226     174B  0021               	movlb	1	; select bank1
  8227     174C  00E6               	movwf	((?_sprintf+1)^(0+128)+3)
  8228     174D  3190  20A1  3196   	fcall	_sprintf
  8229     1750                     l7721:
  8230                           
  8231                           ;main.c: 105:         printOut(str);
  8232     1750  3020               	movlw	(low (main@str| (0+512)))& (0+255)
  8233     1751  0021               	movlb	1	; select bank1
  8234     1752  00E9               	movwf	printOut@str^(0+128)
  8235     1753  319D  2599  3196   	fcall	_printOut
  8236     1756                     l7723:
  8237                           
  8238                           ;main.c: 107:         TMR6_Tasks();
  8239     1756  3190  2000  3196   	fcall	_TMR6_Tasks
  8240     1759  2ECE               	goto	l7693
  8241     175A  3180  2858         	ljmp	start
  8242     175C                     __end_of_main:
  8243                           
  8244                           	psect	text1
  8245     161F                     __ptext1:	
  8246 ;; *************** function _uartHandler *****************
  8247 ;; Defined at:
  8248 ;;		line 95 in file "UART.c"
  8249 ;; Parameters:    Size  Location     Type
  8250 ;;		None
  8251 ;; Auto vars:     Size  Location     Type
  8252 ;;  str             1   76[BANK1 ] PTR unsigned char 
  8253 ;;		 -> line(20), 
  8254 ;; Return value:  Size  Location     Type
  8255 ;;                  1    wreg      void 
  8256 ;; Registers used:
  8257 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  8258 ;; Tracked objects:
  8259 ;;		On entry : 0/0
  8260 ;;		On exit  : 0/0
  8261 ;;		Unchanged: 0/0
  8262 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8263 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8264 ;;      Locals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0
  8265 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8266 ;;      Totals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0
  8267 ;;Total ram usage:        1 bytes
  8268 ;; Hardware stack levels used: 1
  8269 ;; Hardware stack levels required when called: 15
  8270 ;; This function calls:
  8271 ;;		_atoi
  8272 ;;		_printf
  8273 ;;		_readLine
  8274 ;;		_setKi
  8275 ;;		_setKp
  8276 ;;		_setSetpoint
  8277 ;;		_str2float
  8278 ;; This function is called by:
  8279 ;;		_main
  8280 ;; This function uses a non-reentrant model
  8281 ;;
  8282                           
  8283     161F                     _uartHandler:	
  8284                           ;psect for function _uartHandler
  8285                           
  8286     161F                     l7631:	
  8287                           ;incstack = 0
  8288                           ; Regs used in _uartHandler: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  8289                           
  8290                           
  8291                           ;UART.c: 96:     char *str = readLine();
  8292     161F  3193  2357  3196   	fcall	_readLine
  8293     1622  0021               	movlb	1	; select bank1
  8294     1623  00EC               	movwf	uartHandler@str^(0+128)
  8295                           
  8296                           ;UART.c: 97:     switch (*str) {
  8297     1624  2E97               	goto	l7651
  8298     1625                     l7633:
  8299                           
  8300                           ;UART.c: 103:             setSetpoint((uint16_t) atoi(str + 1));
  8301     1625  086C               	movf	uartHandler@str^(0+128),w
  8302     1626  3E01               	addlw	1
  8303     1627  00A8               	movwf	atoi@s^(0+128)
  8304     1628  3188  2009  3196   	fcall	_atoi
  8305     162B  0021               	movlb	1	; select bank1
  8306     162C  0829               	movf	(?_atoi+1)^(0+128),w
  8307     162D  00B0               	movwf	(setSetpoint@new_setpoint+1)^(0+128)
  8308     162E  0828               	movf	?_atoi^(0+128),w
  8309     162F  00AF               	movwf	setSetpoint@new_setpoint^(0+128)
  8310     1630  319D  253D  3196   	fcall	_setSetpoint
  8311     1633                     l7635:
  8312                           
  8313                           ;UART.c: 104:             printf("changed setpoint to %u\r\n", (uint16_t) atoi(str + 1))
      +                          ;
  8314     1633  304C               	movlw	low (STR_6| (0+32768))
  8315     1634  0021               	movlb	1	; select bank1
  8316     1635  00E2               	movwf	printf@fmt^(0+128)
  8317     1636  3098               	movlw	high (STR_6| (0+32768))
  8318     1637  00E3               	movwf	(printf@fmt^(0+128)+1)
  8319     1638  086C               	movf	uartHandler@str^(0+128),w
  8320     1639  3E01               	addlw	1
  8321     163A  00A8               	movwf	atoi@s^(0+128)
  8322     163B  3188  2009  3196   	fcall	_atoi
  8323     163E  0021               	movlb	1	; select bank1
  8324     163F  0829               	movf	(?_atoi+1)^(0+128),w
  8325     1640  00E5               	movwf	((?_printf+1)^(0+128)+2)
  8326     1641  0828               	movf	?_atoi^(0+128),w
  8327     1642  00E4               	movwf	(?_printf^(0+128)+2)
  8328     1643  319E  26D1  3196   	fcall	_printf
  8329                           
  8330                           ;UART.c: 105:             break;
  8331     1646  2EB8               	goto	l936
  8332     1647                     l7637:
  8333                           
  8334                           ;UART.c: 109:             setKp(str2float(str + 1));
  8335     1647  086C               	movf	uartHandler@str^(0+128),w
  8336     1648  3E01               	addlw	1
  8337     1649  00C3               	movwf	str2float@str^(0+128)
  8338     164A  3189  2127  3196   	fcall	_str2float
  8339     164D  0021               	movlb	1	; select bank1
  8340     164E  0846               	movf	(?_str2float+3)^(0+128),w
  8341     164F  00D2               	movwf	(setKp@new_kp+3)^(0+128)
  8342     1650  0845               	movf	(?_str2float+2)^(0+128),w
  8343     1651  00D1               	movwf	(setKp@new_kp+2)^(0+128)
  8344     1652  0844               	movf	(?_str2float+1)^(0+128),w
  8345     1653  00D0               	movwf	(setKp@new_kp+1)^(0+128)
  8346     1654  0843               	movf	?_str2float^(0+128),w
  8347     1655  00CF               	movwf	setKp@new_kp^(0+128)
  8348     1656  319E  26AE  3196   	fcall	_setKp
  8349     1659                     l7639:
  8350                           
  8351                           ;UART.c: 110:             printf("changed kp\r\n");
  8352     1659  30B8               	movlw	low (STR_7| (0+32768))
  8353     165A  0021               	movlb	1	; select bank1
  8354     165B  00E2               	movwf	printf@fmt^(0+128)
  8355     165C  3098               	movlw	high (STR_7| (0+32768))
  8356     165D  00E3               	movwf	(printf@fmt^(0+128)+1)
  8357     165E  319E  26D1  3196   	fcall	_printf
  8358                           
  8359                           ;UART.c: 111:             break;
  8360     1661  2EB8               	goto	l936
  8361     1662                     l7641:
  8362                           
  8363                           ;UART.c: 114:             setKi(str2float(str + 1));
  8364     1662  086C               	movf	uartHandler@str^(0+128),w
  8365     1663  3E01               	addlw	1
  8366     1664  00C3               	movwf	str2float@str^(0+128)
  8367     1665  3189  2127  3196   	fcall	_str2float
  8368     1668  0021               	movlb	1	; select bank1
  8369     1669  0846               	movf	(?_str2float+3)^(0+128),w
  8370     166A  00D2               	movwf	(setKi@new_ki+3)^(0+128)
  8371     166B  0845               	movf	(?_str2float+2)^(0+128),w
  8372     166C  00D1               	movwf	(setKi@new_ki+2)^(0+128)
  8373     166D  0844               	movf	(?_str2float+1)^(0+128),w
  8374     166E  00D0               	movwf	(setKi@new_ki+1)^(0+128)
  8375     166F  0843               	movf	?_str2float^(0+128),w
  8376     1670  00CF               	movwf	setKi@new_ki^(0+128)
  8377     1671  319E  269D  3196   	fcall	_setKi
  8378     1674                     l7643:
  8379                           
  8380                           ;UART.c: 115:             printf("changed ki\r\n");
  8381     1674  30AB               	movlw	low (STR_8| (0+32768))
  8382     1675  0021               	movlb	1	; select bank1
  8383     1676  00E2               	movwf	printf@fmt^(0+128)
  8384     1677  3098               	movlw	high (STR_8| (0+32768))
  8385     1678  00E3               	movwf	(printf@fmt^(0+128)+1)
  8386     1679  319E  26D1  3196   	fcall	_printf
  8387                           
  8388                           ;UART.c: 116:             break;
  8389     167C  2EB8               	goto	l936
  8390     167D                     l7645:
  8391                           
  8392                           ;UART.c: 119:             mustPrintLogs = !mustPrintLogs;
  8393     167D  0020               	movlb	0	; select bank0
  8394     167E  086D               	movf	_mustPrintLogs,w
  8395     167F  1903               	btfsc	3,2
  8396     1680  2E82               	goto	u9741
  8397     1681  2E84               	goto	u9740
  8398     1682                     u9741:
  8399     1682  3001               	movlw	1
  8400     1683  2E85               	goto	u9750
  8401     1684                     u9740:
  8402     1684  3000               	movlw	0
  8403     1685                     u9750:
  8404     1685  00ED               	movwf	_mustPrintLogs
  8405     1686                     l7647:
  8406                           
  8407                           ;UART.c: 120:             printf("logs toggled\r\n");
  8408     1686  308E               	movlw	low (STR_9| (0+32768))
  8409     1687  0021               	movlb	1	; select bank1
  8410     1688  00E2               	movwf	printf@fmt^(0+128)
  8411     1689  3098               	movlw	high (STR_9| (0+32768))
  8412     168A  00E3               	movwf	(printf@fmt^(0+128)+1)
  8413     168B  319E  26D1  3196   	fcall	_printf
  8414                           
  8415                           ;UART.c: 121:             break;
  8416     168E  2EB8               	goto	l936
  8417     168F                     l7649:
  8418                           
  8419                           ;UART.c: 125:             printf("Unkown command\r\n");
  8420     168F  307D               	movlw	low (STR_10| (0+32768))
  8421     1690  00E2               	movwf	printf@fmt^(0+128)
  8422     1691  3098               	movlw	high (STR_10| (0+32768))
  8423     1692  00E3               	movwf	(printf@fmt^(0+128)+1)
  8424     1693  319E  26D1  3196   	fcall	_printf
  8425                           
  8426                           ;UART.c: 126:     };
  8427     1696  2EB8               	goto	l936
  8428     1697                     l7651:
  8429     1697  086C               	movf	uartHandler@str^(0+128),w
  8430     1698  0086               	movwf	6
  8431     1699  3001               	movlw	1	; select bank2/3
  8432     169A  0087               	movwf	7
  8433     169B  0801               	movf	1,w
  8434                           
  8435                           ; Switch size 1, requested type "simple"
  8436                           ; Number of cases is 9, Range of values is 0 to 115
  8437                           ; switch strategies available:
  8438                           ; Name         Instructions Cycles
  8439                           ; simple_byte           28    15 (average)
  8440                           ; direct_byte          238     6 (fixed)
  8441                           ; jumptable            260     6 (fixed)
  8442                           ;	Chosen strategy is simple_byte
  8443     169C  3A00               	xorlw	0	; case 0
  8444     169D  1903               	skipnz
  8445     169E  2EB8               	goto	l936
  8446     169F  3A49               	xorlw	73	; case 73
  8447     16A0  1903               	skipnz
  8448     16A1  2E62               	goto	l7641
  8449     16A2  3A05               	xorlw	5	; case 76
  8450     16A3  1903               	skipnz
  8451     16A4  2E7D               	goto	l7645
  8452     16A5  3A1C               	xorlw	28	; case 80
  8453     16A6  1903               	skipnz
  8454     16A7  2E47               	goto	l7637
  8455     16A8  3A03               	xorlw	3	; case 83
  8456     16A9  1903               	skipnz
  8457     16AA  2E25               	goto	l7633
  8458     16AB  3A3A               	xorlw	58	; case 105
  8459     16AC  1903               	skipnz
  8460     16AD  2E62               	goto	l7641
  8461     16AE  3A05               	xorlw	5	; case 108
  8462     16AF  1903               	skipnz
  8463     16B0  2E7D               	goto	l7645
  8464     16B1  3A1C               	xorlw	28	; case 112
  8465     16B2  1903               	skipnz
  8466     16B3  2E47               	goto	l7637
  8467     16B4  3A03               	xorlw	3	; case 115
  8468     16B5  1903               	skipnz
  8469     16B6  2E25               	goto	l7633
  8470     16B7  2E8F               	goto	l7649
  8471     16B8                     l936:
  8472     16B8  0008               	return
  8473     16B9                     __end_of_uartHandler:
  8474                           
  8475                           	psect	text2
  8476     0927                     __ptext2:	
  8477 ;; *************** function _str2float *****************
  8478 ;; Defined at:
  8479 ;;		line 24 in file "UART.c"
  8480 ;; Parameters:    Size  Location     Type
  8481 ;;  str             1   35[BANK1 ] PTR unsigned char 
  8482 ;;		 -> line(20), 
  8483 ;; Auto vars:     Size  Location     Type
  8484 ;;  i               1   41[BANK1 ] unsigned char 
  8485 ;;  digit           1   46[BANK1 ] unsigned char 
  8486 ;;  number          4   42[BANK1 ] float 
  8487 ;;  multiplier      1   40[BANK1 ] unsigned char 
  8488 ;;  decimal_sepa    1   39[BANK1 ] _Bool 
  8489 ;; Return value:  Size  Location     Type
  8490 ;;                  4   35[BANK1 ] float 
  8491 ;; Registers used:
  8492 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  8493 ;; Tracked objects:
  8494 ;;		On entry : 0/0
  8495 ;;		On exit  : 0/0
  8496 ;;		Unchanged: 0/0
  8497 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8498 ;;      Params:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0
  8499 ;;      Locals:         0       0       8       0       0       0       0       0       0       0       0       0       
      +0       0
  8500 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8501 ;;      Totals:         0       0      12       0       0       0       0       0       0       0       0       0       
      +0       0
  8502 ;;Total ram usage:       12 bytes
  8503 ;; Hardware stack levels used: 1
  8504 ;; Hardware stack levels required when called: 7
  8505 ;; This function calls:
  8506 ;;		___fladd
  8507 ;;		___fldiv
  8508 ;;		___flmul
  8509 ;;		___xxtofl
  8510 ;; This function is called by:
  8511 ;;		_uartHandler
  8512 ;; This function uses a non-reentrant model
  8513 ;;
  8514                           
  8515     0927                     _str2float:	
  8516                           ;psect for function _str2float
  8517                           
  8518     0927                     l7481:	
  8519                           ;incstack = 0
  8520                           ; Regs used in _str2float: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  8521                           
  8522                           
  8523                           ;UART.c: 25:     float number = 0;
  8524     0927  3000               	movlw	0
  8525     0928  0021               	movlb	1	; select bank1
  8526     0929  00CD               	movwf	(str2float@number+3)^(0+128)
  8527     092A  3000               	movlw	0
  8528     092B  00CC               	movwf	(str2float@number+2)^(0+128)
  8529     092C  3000               	movlw	0
  8530     092D  00CB               	movwf	(str2float@number+1)^(0+128)
  8531     092E  3000               	movlw	0
  8532     092F  00CA               	movwf	str2float@number^(0+128)
  8533     0930                     l7483:
  8534                           
  8535                           ;UART.c: 26:     _Bool decimal_separator = 0;
  8536     0930  01C7               	clrf	str2float@decimal_separator^(0+128)
  8537     0931                     l7485:
  8538                           
  8539                           ;UART.c: 29:         char digit = *str++;
  8540     0931  0843               	movf	str2float@str^(0+128),w
  8541     0932  0086               	movwf	6
  8542     0933  3001               	movlw	1	; select bank2/3
  8543     0934  0087               	movwf	7
  8544     0935  0801               	movf	1,w
  8545     0936  00CE               	movwf	str2float@digit^(0+128)
  8546     0937                     l7487:
  8547     0937  3001               	movlw	1
  8548     0938  07C3               	addwf	str2float@str^(0+128),f
  8549     0939                     l7489:
  8550                           
  8551                           ;UART.c: 30:         if ('0' <= digit && digit <= '9') {
  8552     0939  3030               	movlw	48
  8553     093A  024E               	subwf	str2float@digit^(0+128),w
  8554     093B  1C03               	skipc
  8555     093C  293E               	goto	u9551
  8556     093D  293F               	goto	u9550
  8557     093E                     u9551:
  8558     093E  298E               	goto	l7497
  8559     093F                     u9550:
  8560     093F                     l7491:
  8561     093F  303A               	movlw	58
  8562     0940  024E               	subwf	str2float@digit^(0+128),w
  8563     0941  1803               	skipnc
  8564     0942  2944               	goto	u9561
  8565     0943  2945               	goto	u9560
  8566     0944                     u9561:
  8567     0944  298E               	goto	l7497
  8568     0945                     u9560:
  8569     0945                     l7493:
  8570                           
  8571                           ;UART.c: 31:             number *= 10;
  8572     0945  3041               	movlw	65
  8573     0946  00AC               	movwf	(___flmul@b+3)^(0+128)
  8574     0947  3020               	movlw	32
  8575     0948  00AB               	movwf	(___flmul@b+2)^(0+128)
  8576     0949  3000               	movlw	0
  8577     094A  00AA               	movwf	(___flmul@b+1)^(0+128)
  8578     094B  3000               	movlw	0
  8579     094C  00A9               	movwf	___flmul@b^(0+128)
  8580     094D  084D               	movf	(str2float@number+3)^(0+128),w
  8581     094E  00B0               	movwf	(___flmul@a+3)^(0+128)
  8582     094F  084C               	movf	(str2float@number+2)^(0+128),w
  8583     0950  00AF               	movwf	(___flmul@a+2)^(0+128)
  8584     0951  084B               	movf	(str2float@number+1)^(0+128),w
  8585     0952  00AE               	movwf	(___flmul@a+1)^(0+128)
  8586     0953  084A               	movf	str2float@number^(0+128),w
  8587     0954  00AD               	movwf	___flmul@a^(0+128)
  8588     0955  3180  2093  3189   	fcall	___flmul
  8589     0958  0021               	movlb	1	; select bank1
  8590     0959  082C               	movf	(?___flmul+3)^(0+128),w
  8591     095A  00CD               	movwf	(str2float@number+3)^(0+128)
  8592     095B  082B               	movf	(?___flmul+2)^(0+128),w
  8593     095C  00CC               	movwf	(str2float@number+2)^(0+128)
  8594     095D  082A               	movf	(?___flmul+1)^(0+128),w
  8595     095E  00CB               	movwf	(str2float@number+1)^(0+128)
  8596     095F  0829               	movf	?___flmul^(0+128),w
  8597     0960  00CA               	movwf	str2float@number^(0+128)
  8598                           
  8599                           ;UART.c: 32:             number += digit - '0';
  8600     0961  084E               	movf	str2float@digit^(0+128),w
  8601     0962  3ED0               	addlw	208
  8602     0963  00A0               	movwf	___xxtofl@val^(0+128)
  8603     0964  30FF               	movlw	255
  8604     0965  1803               	skipnc
  8605     0966  3000               	movlw	0
  8606     0967  00A1               	movwf	(___xxtofl@val^(0+128)+1)
  8607     0968  01A2               	clrf	(___xxtofl@val+2)^(0+128)
  8608     0969  01A3               	clrf	(___xxtofl@val+3)^(0+128)
  8609     096A  3000               	movlw	0
  8610     096B  3188  2082  3189   	fcall	___xxtofl
  8611     096E  0021               	movlb	1	; select bank1
  8612     096F  0823               	movf	(?___xxtofl+3)^(0+128),w
  8613     0970  00B1               	movwf	(___fladd@b+3)^(0+128)
  8614     0971  0822               	movf	(?___xxtofl+2)^(0+128),w
  8615     0972  00B0               	movwf	(___fladd@b+2)^(0+128)
  8616     0973  0821               	movf	(?___xxtofl+1)^(0+128),w
  8617     0974  00AF               	movwf	(___fladd@b+1)^(0+128)
  8618     0975  0820               	movf	?___xxtofl^(0+128),w
  8619     0976  00AE               	movwf	___fladd@b^(0+128)
  8620     0977  084D               	movf	(str2float@number+3)^(0+128),w
  8621     0978  00B5               	movwf	(___fladd@a+3)^(0+128)
  8622     0979  084C               	movf	(str2float@number+2)^(0+128),w
  8623     097A  00B4               	movwf	(___fladd@a+2)^(0+128)
  8624     097B  084B               	movf	(str2float@number+1)^(0+128),w
  8625     097C  00B3               	movwf	(___fladd@a+1)^(0+128)
  8626     097D  084A               	movf	str2float@number^(0+128),w
  8627     097E  00B2               	movwf	___fladd@a^(0+128)
  8628     097F  3185  2509  3189   	fcall	___fladd
  8629     0982  0021               	movlb	1	; select bank1
  8630     0983  0831               	movf	(?___fladd+3)^(0+128),w
  8631     0984  00CD               	movwf	(str2float@number+3)^(0+128)
  8632     0985  0830               	movf	(?___fladd+2)^(0+128),w
  8633     0986  00CC               	movwf	(str2float@number+2)^(0+128)
  8634     0987  082F               	movf	(?___fladd+1)^(0+128),w
  8635     0988  00CB               	movwf	(str2float@number+1)^(0+128)
  8636     0989  082E               	movf	?___fladd^(0+128),w
  8637     098A  00CA               	movwf	str2float@number^(0+128)
  8638     098B                     l7495:
  8639                           
  8640                           ;UART.c: 33:             multiplier++;
  8641     098B  3001               	movlw	1
  8642     098C  07C8               	addwf	str2float@multiplier^(0+128),f
  8643                           
  8644                           ;UART.c: 34:         } else if (digit == ',' || digit == '.') {
  8645     098D  2931               	goto	l7485
  8646     098E                     l7497:
  8647     098E  302C               	movlw	44
  8648     098F  064E               	xorwf	str2float@digit^(0+128),w
  8649     0990  1903               	btfsc	3,2
  8650     0991  2993               	goto	u9571
  8651     0992  2994               	goto	u9570
  8652     0993                     u9571:
  8653     0993  299A               	goto	l891
  8654     0994                     u9570:
  8655     0994                     l7499:
  8656     0994  302E               	movlw	46
  8657     0995  064E               	xorwf	str2float@digit^(0+128),w
  8658     0996  1D03               	btfss	3,2
  8659     0997  2999               	goto	u9581
  8660     0998  299A               	goto	u9580
  8661     0999                     u9581:
  8662     0999  299E               	goto	l7503
  8663     099A                     u9580:
  8664     099A                     l891:
  8665                           
  8666                           ;UART.c: 35:             decimal_separator = 1;
  8667     099A  3001               	movlw	1
  8668     099B  00C7               	movwf	str2float@decimal_separator^(0+128)
  8669     099C                     l7501:
  8670                           
  8671                           ;UART.c: 36:             multiplier = 0;
  8672     099C  01C8               	clrf	str2float@multiplier^(0+128)
  8673                           
  8674                           ;UART.c: 37:         } else {
  8675     099D  2931               	goto	l7485
  8676     099E                     l7503:
  8677                           
  8678                           ;UART.c: 42:     for (uint8_t i = 0; decimal_separator && i < multiplier; i++) {
  8679     099E  01C9               	clrf	str2float@i^(0+128)
  8680     099F  29BE               	goto	l7509
  8681     09A0                     l7505:
  8682                           
  8683                           ;UART.c: 43:         number /= 10;
  8684     09A0  3041               	movlw	65
  8685     09A1  00A3               	movwf	(___fldiv@a+3)^(0+128)
  8686     09A2  3020               	movlw	32
  8687     09A3  00A2               	movwf	(___fldiv@a+2)^(0+128)
  8688     09A4  3000               	movlw	0
  8689     09A5  00A1               	movwf	(___fldiv@a+1)^(0+128)
  8690     09A6  3000               	movlw	0
  8691     09A7  00A0               	movwf	___fldiv@a^(0+128)
  8692     09A8  084D               	movf	(str2float@number+3)^(0+128),w
  8693     09A9  00A7               	movwf	(___fldiv@b+3)^(0+128)
  8694     09AA  084C               	movf	(str2float@number+2)^(0+128),w
  8695     09AB  00A6               	movwf	(___fldiv@b+2)^(0+128)
  8696     09AC  084B               	movf	(str2float@number+1)^(0+128),w
  8697     09AD  00A5               	movwf	(___fldiv@b+1)^(0+128)
  8698     09AE  084A               	movf	str2float@number^(0+128),w
  8699     09AF  00A4               	movwf	___fldiv@b^(0+128)
  8700     09B0  318C  2450  3189   	fcall	___fldiv
  8701     09B3  0021               	movlb	1	; select bank1
  8702     09B4  0823               	movf	(?___fldiv+3)^(0+128),w
  8703     09B5  00CD               	movwf	(str2float@number+3)^(0+128)
  8704     09B6  0822               	movf	(?___fldiv+2)^(0+128),w
  8705     09B7  00CC               	movwf	(str2float@number+2)^(0+128)
  8706     09B8  0821               	movf	(?___fldiv+1)^(0+128),w
  8707     09B9  00CB               	movwf	(str2float@number+1)^(0+128)
  8708     09BA  0820               	movf	?___fldiv^(0+128),w
  8709     09BB  00CA               	movwf	str2float@number^(0+128)
  8710     09BC                     l7507:
  8711                           
  8712                           ;UART.c: 44:     }
  8713     09BC  3001               	movlw	1
  8714     09BD  07C9               	addwf	str2float@i^(0+128),f
  8715     09BE                     l7509:
  8716     09BE  0847               	movf	str2float@decimal_separator^(0+128),w
  8717     09BF  1903               	btfsc	3,2
  8718     09C0  29C2               	goto	u9591
  8719     09C1  29C3               	goto	u9590
  8720     09C2                     u9591:
  8721     09C2  29C9               	goto	l7513
  8722     09C3                     u9590:
  8723     09C3                     l7511:
  8724     09C3  0848               	movf	str2float@multiplier^(0+128),w
  8725     09C4  0249               	subwf	str2float@i^(0+128),w
  8726     09C5  1C03               	skipc
  8727     09C6  29C8               	goto	u9601
  8728     09C7  29C9               	goto	u9600
  8729     09C8                     u9601:
  8730     09C8  29A0               	goto	l7505
  8731     09C9                     u9600:
  8732     09C9                     l7513:
  8733                           
  8734                           ;UART.c: 45:     return number;
  8735     09C9  084D               	movf	(str2float@number+3)^(0+128),w
  8736     09CA  00C6               	movwf	(?_str2float+3)^(0+128)
  8737     09CB  084C               	movf	(str2float@number+2)^(0+128),w
  8738     09CC  00C5               	movwf	(?_str2float+2)^(0+128)
  8739     09CD  084B               	movf	(str2float@number+1)^(0+128),w
  8740     09CE  00C4               	movwf	(?_str2float+1)^(0+128)
  8741     09CF  084A               	movf	str2float@number^(0+128),w
  8742     09D0  00C3               	movwf	?_str2float^(0+128)
  8743     09D1                     l900:
  8744     09D1  0008               	return
  8745     09D2                     __end_of_str2float:
  8746                           
  8747                           	psect	text3
  8748     0882                     __ptext3:	
  8749 ;; *************** function ___xxtofl *****************
  8750 ;; Defined at:
  8751 ;;		line 10 in file "C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\xxtofl.c"
  8752 ;; Parameters:    Size  Location     Type
  8753 ;;  sign            1    wreg     unsigned char 
  8754 ;;  val             4    0[BANK1 ] long 
  8755 ;; Auto vars:     Size  Location     Type
  8756 ;;  sign            1    8[BANK1 ] unsigned char 
  8757 ;;  arg             4   10[BANK1 ] unsigned long 
  8758 ;;  exp             1    9[BANK1 ] unsigned char 
  8759 ;; Return value:  Size  Location     Type
  8760 ;;                  4    0[BANK1 ] unsigned char 
  8761 ;; Registers used:
  8762 ;;		wreg, status,2, status,0
  8763 ;; Tracked objects:
  8764 ;;		On entry : 0/0
  8765 ;;		On exit  : 0/0
  8766 ;;		Unchanged: 0/0
  8767 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8768 ;;      Params:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0
  8769 ;;      Locals:         0       0       6       0       0       0       0       0       0       0       0       0       
      +0       0
  8770 ;;      Temps:          0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0
  8771 ;;      Totals:         0       0      14       0       0       0       0       0       0       0       0       0       
      +0       0
  8772 ;;Total ram usage:       14 bytes
  8773 ;; Hardware stack levels used: 1
  8774 ;; Hardware stack levels required when called: 5
  8775 ;; This function calls:
  8776 ;;		Nothing
  8777 ;; This function is called by:
  8778 ;;		_str2float
  8779 ;;		_printFloat
  8780 ;;		_getLedNumber
  8781 ;; This function uses a non-reentrant model
  8782 ;;
  8783                           
  8784     0882                     ___xxtofl:	
  8785                           ;psect for function ___xxtofl
  8786                           
  8787                           
  8788                           ;incstack = 0
  8789                           ; Regs used in ___xxtofl: [wreg+status,2+status,0]
  8790                           ;___xxtofl@sign stored from wreg
  8791     0882  0021               	movlb	1	; select bank1
  8792     0883  00A8               	movwf	___xxtofl@sign^(0+128)
  8793     0884                     l7273:
  8794     0884  0828               	movf	___xxtofl@sign^(0+128),w
  8795     0885  1903               	btfsc	3,2
  8796     0886  2888               	goto	u9401
  8797     0887  2889               	goto	u9400
  8798     0888                     u9401:
  8799     0888  289D               	goto	l7279
  8800     0889                     u9400:
  8801     0889                     l7275:
  8802     0889  1FA3               	btfss	(___xxtofl@val+3)^(0+128),7
  8803     088A  288C               	goto	u9411
  8804     088B  288D               	goto	u9410
  8805     088C                     u9411:
  8806     088C  289D               	goto	l7279
  8807     088D                     u9410:
  8808     088D                     l7277:
  8809     088D  0920               	comf	___xxtofl@val^(0+128),w
  8810     088E  00AA               	movwf	___xxtofl@arg^(0+128)
  8811     088F  0921               	comf	(___xxtofl@val^(0+128)+1),w
  8812     0890  00AB               	movwf	(___xxtofl@arg+1)^(0+128)
  8813     0891  0922               	comf	(___xxtofl@val^(0+128)+2),w
  8814     0892  00AC               	movwf	(___xxtofl@arg+2)^(0+128)
  8815     0893  0923               	comf	(___xxtofl@val^(0+128)+3),w
  8816     0894  00AD               	movwf	(___xxtofl@arg+3)^(0+128)
  8817     0895  0AAA               	incf	___xxtofl@arg^(0+128),f
  8818     0896  1903               	skipnz
  8819     0897  0AAB               	incf	(___xxtofl@arg+1)^(0+128),f
  8820     0898  1903               	skipnz
  8821     0899  0AAC               	incf	(___xxtofl@arg+2)^(0+128),f
  8822     089A  1903               	skipnz
  8823     089B  0AAD               	incf	(___xxtofl@arg+3)^(0+128),f
  8824     089C  28A5               	goto	l1633
  8825     089D                     l7279:
  8826     089D  0823               	movf	(___xxtofl@val+3)^(0+128),w
  8827     089E  00AD               	movwf	(___xxtofl@arg+3)^(0+128)
  8828     089F  0822               	movf	(___xxtofl@val+2)^(0+128),w
  8829     08A0  00AC               	movwf	(___xxtofl@arg+2)^(0+128)
  8830     08A1  0821               	movf	(___xxtofl@val+1)^(0+128),w
  8831     08A2  00AB               	movwf	(___xxtofl@arg+1)^(0+128)
  8832     08A3  0820               	movf	___xxtofl@val^(0+128),w
  8833     08A4  00AA               	movwf	___xxtofl@arg^(0+128)
  8834     08A5                     l1633:
  8835     08A5  0823               	movf	(___xxtofl@val+3)^(0+128),w
  8836     08A6  0422               	iorwf	(___xxtofl@val+2)^(0+128),w
  8837     08A7  0421               	iorwf	(___xxtofl@val+1)^(0+128),w
  8838     08A8  0420               	iorwf	___xxtofl@val^(0+128),w
  8839     08A9  1D03               	skipz
  8840     08AA  28AC               	goto	u9421
  8841     08AB  28AD               	goto	u9420
  8842     08AC                     u9421:
  8843     08AC  28B6               	goto	l1634
  8844     08AD                     u9420:
  8845     08AD                     l7281:
  8846     08AD  3000               	movlw	0
  8847     08AE  00A3               	movwf	(?___xxtofl+3)^(0+128)
  8848     08AF  3000               	movlw	0
  8849     08B0  00A2               	movwf	(?___xxtofl+2)^(0+128)
  8850     08B1  3000               	movlw	0
  8851     08B2  00A1               	movwf	(?___xxtofl+1)^(0+128)
  8852     08B3  3000               	movlw	0
  8853     08B4  00A0               	movwf	?___xxtofl^(0+128)
  8854     08B5  2926               	goto	l1635
  8855     08B6                     l1634:
  8856     08B6  3096               	movlw	150
  8857     08B7  00A9               	movwf	___xxtofl@exp^(0+128)
  8858     08B8  28C2               	goto	l7287
  8859     08B9                     l7285:
  8860     08B9  3001               	movlw	1
  8861     08BA  07A9               	addwf	___xxtofl@exp^(0+128),f
  8862     08BB  3001               	movlw	1
  8863     08BC                     u9435:
  8864     08BC  36AD               	lsrf	(___xxtofl@arg+3)^(0+128),f
  8865     08BD  0CAC               	rrf	(___xxtofl@arg+2)^(0+128),f
  8866     08BE  0CAB               	rrf	(___xxtofl@arg+1)^(0+128),f
  8867     08BF  0CAA               	rrf	___xxtofl@arg^(0+128),f
  8868     08C0  0B89               	decfsz	9,f
  8869     08C1  28BC               	goto	u9435
  8870     08C2                     l7287:
  8871     08C2  30FE               	movlw	254
  8872     08C3  052D               	andwf	(___xxtofl@arg+3)^(0+128),w
  8873     08C4  1D03               	btfss	3,2
  8874     08C5  28C7               	goto	u9441
  8875     08C6  28C8               	goto	u9440
  8876     08C7                     u9441:
  8877     08C7  28B9               	goto	l7285
  8878     08C8                     u9440:
  8879     08C8  28D8               	goto	l7291
  8880     08C9                     l7289:
  8881     08C9  3001               	movlw	1
  8882     08CA  07A9               	addwf	___xxtofl@exp^(0+128),f
  8883     08CB  3001               	movlw	1
  8884     08CC  07AA               	addwf	___xxtofl@arg^(0+128),f
  8885     08CD  3000               	movlw	0
  8886     08CE  3DAB               	addwfc	(___xxtofl@arg+1)^(0+128),f
  8887     08CF  3DAC               	addwfc	(___xxtofl@arg+2)^(0+128),f
  8888     08D0  3DAD               	addwfc	(___xxtofl@arg+3)^(0+128),f
  8889     08D1  3001               	movlw	1
  8890     08D2                     u9455:
  8891     08D2  36AD               	lsrf	(___xxtofl@arg+3)^(0+128),f
  8892     08D3  0CAC               	rrf	(___xxtofl@arg+2)^(0+128),f
  8893     08D4  0CAB               	rrf	(___xxtofl@arg+1)^(0+128),f
  8894     08D5  0CAA               	rrf	___xxtofl@arg^(0+128),f
  8895     08D6  0B89               	decfsz	9,f
  8896     08D7  28D2               	goto	u9455
  8897     08D8                     l7291:
  8898     08D8  30FF               	movlw	255
  8899     08D9  052D               	andwf	(___xxtofl@arg+3)^(0+128),w
  8900     08DA  1D03               	btfss	3,2
  8901     08DB  28DD               	goto	u9461
  8902     08DC  28DE               	goto	u9460
  8903     08DD                     u9461:
  8904     08DD  28C9               	goto	l7289
  8905     08DE                     u9460:
  8906     08DE  28E8               	goto	l7295
  8907     08DF                     l7293:
  8908     08DF  3001               	movlw	1
  8909     08E0  02A9               	subwf	___xxtofl@exp^(0+128),f
  8910     08E1  3001               	movlw	1
  8911     08E2                     u9475:
  8912     08E2  35AA               	lslf	___xxtofl@arg^(0+128),f
  8913     08E3  0DAB               	rlf	(___xxtofl@arg+1)^(0+128),f
  8914     08E4  0DAC               	rlf	(___xxtofl@arg+2)^(0+128),f
  8915     08E5  0DAD               	rlf	(___xxtofl@arg+3)^(0+128),f
  8916     08E6  0B89               	decfsz	9,f
  8917     08E7  28E2               	goto	u9475
  8918     08E8                     l7295:
  8919     08E8  1BAC               	btfsc	(___xxtofl@arg+2)^(0+128),7
  8920     08E9  28EB               	goto	u9481
  8921     08EA  28EC               	goto	u9480
  8922     08EB                     u9481:
  8923     08EB  28F2               	goto	l1646
  8924     08EC                     u9480:
  8925     08EC                     l7297:
  8926     08EC  3002               	movlw	2
  8927     08ED  0229               	subwf	___xxtofl@exp^(0+128),w
  8928     08EE  1803               	skipnc
  8929     08EF  28F1               	goto	u9491
  8930     08F0  28F2               	goto	u9490
  8931     08F1                     u9491:
  8932     08F1  28DF               	goto	l7293
  8933     08F2                     u9490:
  8934     08F2                     l1646:
  8935     08F2  1829               	btfsc	___xxtofl@exp^(0+128),0
  8936     08F3  28F5               	goto	u9501
  8937     08F4  28F6               	goto	u9500
  8938     08F5                     u9501:
  8939     08F5  28FE               	goto	l1647
  8940     08F6                     u9500:
  8941     08F6                     l7299:
  8942     08F6  30FF               	movlw	255
  8943     08F7  05AA               	andwf	___xxtofl@arg^(0+128),f
  8944     08F8  30FF               	movlw	255
  8945     08F9  05AB               	andwf	(___xxtofl@arg+1)^(0+128),f
  8946     08FA  307F               	movlw	127
  8947     08FB  05AC               	andwf	(___xxtofl@arg+2)^(0+128),f
  8948     08FC  30FF               	movlw	255
  8949     08FD  05AD               	andwf	(___xxtofl@arg+3)^(0+128),f
  8950     08FE                     l1647:
  8951     08FE  1003               	clrc
  8952     08FF  0CA9               	rrf	___xxtofl@exp^(0+128),f
  8953     0900                     l7301:
  8954     0900  0829               	movf	___xxtofl@exp^(0+128),w
  8955     0901  00A4               	movwf	??___xxtofl^(0+128)
  8956     0902  01A5               	clrf	(??___xxtofl^(0+128)+1)
  8957     0903  01A6               	clrf	(??___xxtofl^(0+128)+2)
  8958     0904  01A7               	clrf	(??___xxtofl^(0+128)+3)
  8959     0905  3018               	movlw	24
  8960     0906                     u9515:
  8961     0906  35A4               	lslf	??___xxtofl^(0+128),f
  8962     0907  0DA5               	rlf	(??___xxtofl^(0+128)+1),f
  8963     0908  0DA6               	rlf	(??___xxtofl^(0+128)+2),f
  8964     0909  0DA7               	rlf	(??___xxtofl^(0+128)+3),f
  8965     090A                     u9510:
  8966     090A  0B89               	decfsz	9,f
  8967     090B  2906               	goto	u9515
  8968     090C  0824               	movf	??___xxtofl^(0+128),w
  8969     090D  04AA               	iorwf	___xxtofl@arg^(0+128),f
  8970     090E  0825               	movf	(??___xxtofl+1)^(0+128),w
  8971     090F  04AB               	iorwf	(___xxtofl@arg+1)^(0+128),f
  8972     0910  0826               	movf	(??___xxtofl+2)^(0+128),w
  8973     0911  04AC               	iorwf	(___xxtofl@arg+2)^(0+128),f
  8974     0912  0827               	movf	(??___xxtofl+3)^(0+128),w
  8975     0913  04AD               	iorwf	(___xxtofl@arg+3)^(0+128),f
  8976     0914                     l7303:
  8977     0914  0828               	movf	___xxtofl@sign^(0+128),w
  8978     0915  1903               	btfsc	3,2
  8979     0916  2918               	goto	u9521
  8980     0917  2919               	goto	u9520
  8981     0918                     u9521:
  8982     0918  291E               	goto	l7309
  8983     0919                     u9520:
  8984     0919                     l7305:
  8985     0919  1FA3               	btfss	(___xxtofl@val+3)^(0+128),7
  8986     091A  291C               	goto	u9531
  8987     091B  291D               	goto	u9530
  8988     091C                     u9531:
  8989     091C  291E               	goto	l7309
  8990     091D                     u9530:
  8991     091D                     l7307:
  8992     091D  17AD               	bsf	(___xxtofl@arg^(0+128)+3),7
  8993     091E                     l7309:
  8994     091E  082D               	movf	(___xxtofl@arg+3)^(0+128),w
  8995     091F  00A3               	movwf	(?___xxtofl+3)^(0+128)
  8996     0920  082C               	movf	(___xxtofl@arg+2)^(0+128),w
  8997     0921  00A2               	movwf	(?___xxtofl+2)^(0+128)
  8998     0922  082B               	movf	(___xxtofl@arg+1)^(0+128),w
  8999     0923  00A1               	movwf	(?___xxtofl+1)^(0+128)
  9000     0924  082A               	movf	___xxtofl@arg^(0+128),w
  9001     0925  00A0               	movwf	?___xxtofl^(0+128)
  9002     0926                     l1635:
  9003     0926  0008               	return
  9004     0927                     __end_of___xxtofl:
  9005                           
  9006                           	psect	text4
  9007     0093                     __ptext4:	
  9008 ;; *************** function ___flmul *****************
  9009 ;; Defined at:
  9010 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\sprcmul.c"
  9011 ;; Parameters:    Size  Location     Type
  9012 ;;  b               4    9[BANK1 ] unsigned char 
  9013 ;;  a               4   13[BANK1 ] unsigned char 
  9014 ;; Auto vars:     Size  Location     Type
  9015 ;;  prod            4   29[BANK1 ] struct .
  9016 ;;  grs             4   24[BANK1 ] unsigned long 
  9017 ;;  temp            2   33[BANK1 ] struct .
  9018 ;;  bexp            1   28[BANK1 ] unsigned char 
  9019 ;;  aexp            1   23[BANK1 ] unsigned char 
  9020 ;;  sign            1   22[BANK1 ] unsigned char 
  9021 ;; Return value:  Size  Location     Type
  9022 ;;                  4    9[BANK1 ] unsigned char 
  9023 ;; Registers used:
  9024 ;;		wreg, status,2, status,0, pclath, cstack
  9025 ;; Tracked objects:
  9026 ;;		On entry : 0/0
  9027 ;;		On exit  : 0/0
  9028 ;;		Unchanged: 0/0
  9029 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9030 ;;      Params:         0       0       8       0       0       0       0       0       0       0       0       0       
      +0       0
  9031 ;;      Locals:         0       0      13       0       0       0       0       0       0       0       0       0       
      +0       0
  9032 ;;      Temps:          0       0       5       0       0       0       0       0       0       0       0       0       
      +0       0
  9033 ;;      Totals:         0       0      26       0       0       0       0       0       0       0       0       0       
      +0       0
  9034 ;;Total ram usage:       26 bytes
  9035 ;; Hardware stack levels used: 1
  9036 ;; Hardware stack levels required when called: 6
  9037 ;; This function calls:
  9038 ;;		__Umul8_16
  9039 ;; This function is called by:
  9040 ;;		_str2float
  9041 ;;		_printFloat
  9042 ;;		_getLedNumber
  9043 ;; This function uses a non-reentrant model
  9044 ;;
  9045                           
  9046     0093                     ___flmul:	
  9047                           ;psect for function ___flmul
  9048                           
  9049     0093                     l7133:	
  9050                           ;incstack = 0
  9051                           ; Regs used in ___flmul: [wreg+status,2+status,0+pclath+cstack]
  9052                           
  9053     0093  0021               	movlb	1	; select bank1
  9054     0094  082C               	movf	(___flmul@b^(0+128)+3),w
  9055     0095  3980               	andlw	128
  9056     0096  00B6               	movwf	___flmul@sign^(0+128)
  9057     0097                     l7135:
  9058     0097  352C               	lslf	(___flmul@b^(0+128)+3),w
  9059     0098  00BC               	movwf	___flmul@bexp^(0+128)
  9060     0099                     l7137:
  9061     0099  1FAB               	btfss	(___flmul@b^(0+128)+2),7
  9062     009A  289C               	goto	u9131
  9063     009B  289D               	goto	u9130
  9064     009C                     u9131:
  9065     009C  289E               	goto	l7141
  9066     009D                     u9130:
  9067     009D                     l7139:
  9068     009D  143C               	bsf	___flmul@bexp^(0+128),0
  9069     009E                     l7141:
  9070     009E  083C               	movf	___flmul@bexp^(0+128),w
  9071     009F  1903               	btfsc	3,2
  9072     00A0  28A2               	goto	u9141
  9073     00A1  28A3               	goto	u9140
  9074     00A2                     u9141:
  9075     00A2  28B2               	goto	l7149
  9076     00A3                     u9140:
  9077     00A3                     l7143:
  9078     00A3  0A3C               	incf	___flmul@bexp^(0+128),w
  9079     00A4  1D03               	btfss	3,2
  9080     00A5  28A7               	goto	u9151
  9081     00A6  28A8               	goto	u9150
  9082     00A7                     u9151:
  9083     00A7  28B0               	goto	l7147
  9084     00A8                     u9150:
  9085     00A8                     l7145:
  9086     00A8  3000               	movlw	0
  9087     00A9  00AC               	movwf	(___flmul@b+3)^(0+128)
  9088     00AA  3000               	movlw	0
  9089     00AB  00AB               	movwf	(___flmul@b+2)^(0+128)
  9090     00AC  3000               	movlw	0
  9091     00AD  00AA               	movwf	(___flmul@b+1)^(0+128)
  9092     00AE  3000               	movlw	0
  9093     00AF  00A9               	movwf	___flmul@b^(0+128)
  9094     00B0                     l7147:
  9095     00B0  17AB               	bsf	(___flmul@b^(0+128)+2),7
  9096     00B1  28BA               	goto	l7151
  9097     00B2                     l7149:
  9098     00B2  3000               	movlw	0
  9099     00B3  00AC               	movwf	(___flmul@b+3)^(0+128)
  9100     00B4  3000               	movlw	0
  9101     00B5  00AB               	movwf	(___flmul@b+2)^(0+128)
  9102     00B6  3000               	movlw	0
  9103     00B7  00AA               	movwf	(___flmul@b+1)^(0+128)
  9104     00B8  3000               	movlw	0
  9105     00B9  00A9               	movwf	___flmul@b^(0+128)
  9106     00BA                     l7151:
  9107     00BA  0830               	movf	(___flmul@a^(0+128)+3),w
  9108     00BB  3980               	andlw	128
  9109     00BC  06B6               	xorwf	___flmul@sign^(0+128),f
  9110     00BD                     l7153:
  9111     00BD  3530               	lslf	(___flmul@a^(0+128)+3),w
  9112     00BE  00B7               	movwf	___flmul@aexp^(0+128)
  9113     00BF                     l7155:
  9114     00BF  1FAF               	btfss	(___flmul@a^(0+128)+2),7
  9115     00C0  28C2               	goto	u9161
  9116     00C1  28C3               	goto	u9160
  9117     00C2                     u9161:
  9118     00C2  28C4               	goto	l7159
  9119     00C3                     u9160:
  9120     00C3                     l7157:
  9121     00C3  1437               	bsf	___flmul@aexp^(0+128),0
  9122     00C4                     l7159:
  9123     00C4  0837               	movf	___flmul@aexp^(0+128),w
  9124     00C5  1903               	btfsc	3,2
  9125     00C6  28C8               	goto	u9171
  9126     00C7  28C9               	goto	u9170
  9127     00C8                     u9171:
  9128     00C8  28D8               	goto	l7167
  9129     00C9                     u9170:
  9130     00C9                     l7161:
  9131     00C9  0A37               	incf	___flmul@aexp^(0+128),w
  9132     00CA  1D03               	btfss	3,2
  9133     00CB  28CD               	goto	u9181
  9134     00CC  28CE               	goto	u9180
  9135     00CD                     u9181:
  9136     00CD  28D6               	goto	l7165
  9137     00CE                     u9180:
  9138     00CE                     l7163:
  9139     00CE  3000               	movlw	0
  9140     00CF  00B0               	movwf	(___flmul@a+3)^(0+128)
  9141     00D0  3000               	movlw	0
  9142     00D1  00AF               	movwf	(___flmul@a+2)^(0+128)
  9143     00D2  3000               	movlw	0
  9144     00D3  00AE               	movwf	(___flmul@a+1)^(0+128)
  9145     00D4  3000               	movlw	0
  9146     00D5  00AD               	movwf	___flmul@a^(0+128)
  9147     00D6                     l7165:
  9148     00D6  17AF               	bsf	(___flmul@a^(0+128)+2),7
  9149     00D7  28E0               	goto	l7169
  9150     00D8                     l7167:
  9151     00D8  3000               	movlw	0
  9152     00D9  00B0               	movwf	(___flmul@a+3)^(0+128)
  9153     00DA  3000               	movlw	0
  9154     00DB  00AF               	movwf	(___flmul@a+2)^(0+128)
  9155     00DC  3000               	movlw	0
  9156     00DD  00AE               	movwf	(___flmul@a+1)^(0+128)
  9157     00DE  3000               	movlw	0
  9158     00DF  00AD               	movwf	___flmul@a^(0+128)
  9159     00E0                     l7169:
  9160     00E0  0837               	movf	___flmul@aexp^(0+128),w
  9161     00E1  1903               	btfsc	3,2
  9162     00E2  28E4               	goto	u9191
  9163     00E3  28E5               	goto	u9190
  9164     00E4                     u9191:
  9165     00E4  28EA               	goto	l7173
  9166     00E5                     u9190:
  9167     00E5                     l7171:
  9168     00E5  083C               	movf	___flmul@bexp^(0+128),w
  9169     00E6  1D03               	btfss	3,2
  9170     00E7  28E9               	goto	u9201
  9171     00E8  28EA               	goto	u9200
  9172     00E9                     u9201:
  9173     00E9  28F3               	goto	l7177
  9174     00EA                     u9200:
  9175     00EA                     l7173:
  9176     00EA  3000               	movlw	0
  9177     00EB  00AC               	movwf	(?___flmul+3)^(0+128)
  9178     00EC  3000               	movlw	0
  9179     00ED  00AB               	movwf	(?___flmul+2)^(0+128)
  9180     00EE  3000               	movlw	0
  9181     00EF  00AA               	movwf	(?___flmul+1)^(0+128)
  9182     00F0  3000               	movlw	0
  9183     00F1  00A9               	movwf	?___flmul^(0+128)
  9184     00F2  2ACD               	goto	l1589
  9185     00F3                     l7177:
  9186     00F3  0829               	movf	___flmul@b^(0+128),w
  9187     00F4  00A0               	movwf	__Umul8_16@multiplicand^(0+128)
  9188     00F5  082F               	movf	(___flmul@a^(0+128)+2),w
  9189     00F6  3190  207D  3180   	fcall	__Umul8_16
  9190     00F9  0021               	movlb	1	; select bank1
  9191     00FA  0821               	movf	(?__Umul8_16+1)^(0+128),w
  9192     00FB  00C2               	movwf	(___flmul@temp+1)^(0+128)
  9193     00FC  0820               	movf	?__Umul8_16^(0+128),w
  9194     00FD  00C1               	movwf	___flmul@temp^(0+128)
  9195     00FE                     l7179:
  9196     00FE  0841               	movf	___flmul@temp^(0+128),w
  9197     00FF  00B1               	movwf	??___flmul^(0+128)
  9198     0100  01B2               	clrf	(??___flmul^(0+128)+1)
  9199     0101  01B3               	clrf	(??___flmul^(0+128)+2)
  9200     0102  01B4               	clrf	(??___flmul^(0+128)+3)
  9201     0103  0834               	movf	(??___flmul+3)^(0+128),w
  9202     0104  00BB               	movwf	(___flmul@grs+3)^(0+128)
  9203     0105  0833               	movf	(??___flmul+2)^(0+128),w
  9204     0106  00BA               	movwf	(___flmul@grs+2)^(0+128)
  9205     0107  0832               	movf	(??___flmul+1)^(0+128),w
  9206     0108  00B9               	movwf	(___flmul@grs+1)^(0+128)
  9207     0109  0831               	movf	??___flmul^(0+128),w
  9208     010A  00B8               	movwf	___flmul@grs^(0+128)
  9209     010B                     l7181:
  9210     010B  0842               	movf	(___flmul@temp^(0+128)+1),w
  9211     010C  00B1               	movwf	??___flmul^(0+128)
  9212     010D  01B2               	clrf	(??___flmul^(0+128)+1)
  9213     010E  01B3               	clrf	(??___flmul^(0+128)+2)
  9214     010F  01B4               	clrf	(??___flmul^(0+128)+3)
  9215     0110  0834               	movf	(??___flmul+3)^(0+128),w
  9216     0111  00C0               	movwf	(___flmul@prod+3)^(0+128)
  9217     0112  0833               	movf	(??___flmul+2)^(0+128),w
  9218     0113  00BF               	movwf	(___flmul@prod+2)^(0+128)
  9219     0114  0832               	movf	(??___flmul+1)^(0+128),w
  9220     0115  00BE               	movwf	(___flmul@prod+1)^(0+128)
  9221     0116  0831               	movf	??___flmul^(0+128),w
  9222     0117  00BD               	movwf	___flmul@prod^(0+128)
  9223     0118  082A               	movf	(___flmul@b^(0+128)+1),w
  9224     0119  00A0               	movwf	__Umul8_16@multiplicand^(0+128)
  9225     011A  082E               	movf	(___flmul@a^(0+128)+1),w
  9226     011B  3190  207D  3180   	fcall	__Umul8_16
  9227     011E  0021               	movlb	1	; select bank1
  9228     011F  0821               	movf	(?__Umul8_16+1)^(0+128),w
  9229     0120  00C2               	movwf	(___flmul@temp+1)^(0+128)
  9230     0121  0820               	movf	?__Umul8_16^(0+128),w
  9231     0122  00C1               	movwf	___flmul@temp^(0+128)
  9232     0123                     l7183:
  9233     0123  0841               	movf	___flmul@temp^(0+128),w
  9234     0124  00B1               	movwf	??___flmul^(0+128)
  9235     0125  01B2               	clrf	(??___flmul^(0+128)+1)
  9236     0126  01B3               	clrf	(??___flmul^(0+128)+2)
  9237     0127  01B4               	clrf	(??___flmul^(0+128)+3)
  9238     0128  0831               	movf	??___flmul^(0+128),w
  9239     0129  07B8               	addwf	___flmul@grs^(0+128),f
  9240     012A  0832               	movf	(??___flmul+1)^(0+128),w
  9241     012B  3DB9               	addwfc	(___flmul@grs+1)^(0+128),f
  9242     012C  0833               	movf	(??___flmul+2)^(0+128),w
  9243     012D  3DBA               	addwfc	(___flmul@grs+2)^(0+128),f
  9244     012E  0834               	movf	(??___flmul+3)^(0+128),w
  9245     012F  3DBB               	addwfc	(___flmul@grs+3)^(0+128),f
  9246     0130                     l7185:
  9247     0130  0842               	movf	(___flmul@temp^(0+128)+1),w
  9248     0131  00B1               	movwf	??___flmul^(0+128)
  9249     0132  01B2               	clrf	(??___flmul^(0+128)+1)
  9250     0133  01B3               	clrf	(??___flmul^(0+128)+2)
  9251     0134  01B4               	clrf	(??___flmul^(0+128)+3)
  9252     0135  0831               	movf	??___flmul^(0+128),w
  9253     0136  07BD               	addwf	___flmul@prod^(0+128),f
  9254     0137  0832               	movf	(??___flmul+1)^(0+128),w
  9255     0138  3DBE               	addwfc	(___flmul@prod+1)^(0+128),f
  9256     0139  0833               	movf	(??___flmul+2)^(0+128),w
  9257     013A  3DBF               	addwfc	(___flmul@prod+2)^(0+128),f
  9258     013B  0834               	movf	(??___flmul+3)^(0+128),w
  9259     013C  3DC0               	addwfc	(___flmul@prod+3)^(0+128),f
  9260     013D  082B               	movf	(___flmul@b^(0+128)+2),w
  9261     013E  00A0               	movwf	__Umul8_16@multiplicand^(0+128)
  9262     013F  082D               	movf	___flmul@a^(0+128),w
  9263     0140  3190  207D  3180   	fcall	__Umul8_16
  9264     0143  0021               	movlb	1	; select bank1
  9265     0144  0821               	movf	(?__Umul8_16+1)^(0+128),w
  9266     0145  00C2               	movwf	(___flmul@temp+1)^(0+128)
  9267     0146  0820               	movf	?__Umul8_16^(0+128),w
  9268     0147  00C1               	movwf	___flmul@temp^(0+128)
  9269     0148                     l7187:
  9270     0148  0841               	movf	___flmul@temp^(0+128),w
  9271     0149  00B1               	movwf	??___flmul^(0+128)
  9272     014A  01B2               	clrf	(??___flmul^(0+128)+1)
  9273     014B  01B3               	clrf	(??___flmul^(0+128)+2)
  9274     014C  01B4               	clrf	(??___flmul^(0+128)+3)
  9275     014D  0831               	movf	??___flmul^(0+128),w
  9276     014E  07B8               	addwf	___flmul@grs^(0+128),f
  9277     014F  0832               	movf	(??___flmul+1)^(0+128),w
  9278     0150  3DB9               	addwfc	(___flmul@grs+1)^(0+128),f
  9279     0151  0833               	movf	(??___flmul+2)^(0+128),w
  9280     0152  3DBA               	addwfc	(___flmul@grs+2)^(0+128),f
  9281     0153  0834               	movf	(??___flmul+3)^(0+128),w
  9282     0154  3DBB               	addwfc	(___flmul@grs+3)^(0+128),f
  9283     0155                     l7189:
  9284     0155  0842               	movf	(___flmul@temp^(0+128)+1),w
  9285     0156  00B1               	movwf	??___flmul^(0+128)
  9286     0157  01B2               	clrf	(??___flmul^(0+128)+1)
  9287     0158  01B3               	clrf	(??___flmul^(0+128)+2)
  9288     0159  01B4               	clrf	(??___flmul^(0+128)+3)
  9289     015A  0831               	movf	??___flmul^(0+128),w
  9290     015B  07BD               	addwf	___flmul@prod^(0+128),f
  9291     015C  0832               	movf	(??___flmul+1)^(0+128),w
  9292     015D  3DBE               	addwfc	(___flmul@prod+1)^(0+128),f
  9293     015E  0833               	movf	(??___flmul+2)^(0+128),w
  9294     015F  3DBF               	addwfc	(___flmul@prod+2)^(0+128),f
  9295     0160  0834               	movf	(??___flmul+3)^(0+128),w
  9296     0161  3DC0               	addwfc	(___flmul@prod+3)^(0+128),f
  9297     0162                     l7191:
  9298     0162  3008               	movlw	8
  9299     0163                     u9215:
  9300     0163  35B8               	lslf	___flmul@grs^(0+128),f
  9301     0164  0DB9               	rlf	(___flmul@grs+1)^(0+128),f
  9302     0165  0DBA               	rlf	(___flmul@grs+2)^(0+128),f
  9303     0166  0DBB               	rlf	(___flmul@grs+3)^(0+128),f
  9304     0167  0B89               	decfsz	9,f
  9305     0168  2963               	goto	u9215
  9306     0169                     l7193:
  9307     0169  082A               	movf	(___flmul@b^(0+128)+1),w
  9308     016A  00A0               	movwf	__Umul8_16@multiplicand^(0+128)
  9309     016B  082D               	movf	___flmul@a^(0+128),w
  9310     016C  3190  207D  3180   	fcall	__Umul8_16
  9311     016F  0021               	movlb	1	; select bank1
  9312     0170  0821               	movf	(?__Umul8_16+1)^(0+128),w
  9313     0171  00C2               	movwf	(___flmul@temp+1)^(0+128)
  9314     0172  0820               	movf	?__Umul8_16^(0+128),w
  9315     0173  00C1               	movwf	___flmul@temp^(0+128)
  9316     0174                     l7195:
  9317     0174  0841               	movf	___flmul@temp^(0+128),w
  9318     0175  07B8               	addwf	___flmul@grs^(0+128),f
  9319     0176  0842               	movf	(___flmul@temp+1)^(0+128),w
  9320     0177  3DB9               	addwfc	(___flmul@grs+1)^(0+128),f
  9321     0178  3000               	movlw	0
  9322     0179  3DBA               	addwfc	(___flmul@grs+2)^(0+128),f
  9323     017A  3DBB               	addwfc	(___flmul@grs+3)^(0+128),f
  9324     017B                     l7197:
  9325     017B  0829               	movf	___flmul@b^(0+128),w
  9326     017C  00A0               	movwf	__Umul8_16@multiplicand^(0+128)
  9327     017D  082E               	movf	(___flmul@a^(0+128)+1),w
  9328     017E  3190  207D  3180   	fcall	__Umul8_16
  9329     0181  0021               	movlb	1	; select bank1
  9330     0182  0821               	movf	(?__Umul8_16+1)^(0+128),w
  9331     0183  00C2               	movwf	(___flmul@temp+1)^(0+128)
  9332     0184  0820               	movf	?__Umul8_16^(0+128),w
  9333     0185  00C1               	movwf	___flmul@temp^(0+128)
  9334     0186                     l7199:
  9335     0186  0841               	movf	___flmul@temp^(0+128),w
  9336     0187  07B8               	addwf	___flmul@grs^(0+128),f
  9337     0188  0842               	movf	(___flmul@temp+1)^(0+128),w
  9338     0189  3DB9               	addwfc	(___flmul@grs+1)^(0+128),f
  9339     018A  3000               	movlw	0
  9340     018B  3DBA               	addwfc	(___flmul@grs+2)^(0+128),f
  9341     018C  3DBB               	addwfc	(___flmul@grs+3)^(0+128),f
  9342     018D                     l7201:
  9343     018D  3008               	movlw	8
  9344     018E                     u9225:
  9345     018E  35B8               	lslf	___flmul@grs^(0+128),f
  9346     018F  0DB9               	rlf	(___flmul@grs+1)^(0+128),f
  9347     0190  0DBA               	rlf	(___flmul@grs+2)^(0+128),f
  9348     0191  0DBB               	rlf	(___flmul@grs+3)^(0+128),f
  9349     0192  0B89               	decfsz	9,f
  9350     0193  298E               	goto	u9225
  9351     0194  0829               	movf	___flmul@b^(0+128),w
  9352     0195  00A0               	movwf	__Umul8_16@multiplicand^(0+128)
  9353     0196  082D               	movf	___flmul@a^(0+128),w
  9354     0197  3190  207D  3180   	fcall	__Umul8_16
  9355     019A  0021               	movlb	1	; select bank1
  9356     019B  0821               	movf	(?__Umul8_16+1)^(0+128),w
  9357     019C  00C2               	movwf	(___flmul@temp+1)^(0+128)
  9358     019D  0820               	movf	?__Umul8_16^(0+128),w
  9359     019E  00C1               	movwf	___flmul@temp^(0+128)
  9360     019F                     l7203:
  9361     019F  0841               	movf	___flmul@temp^(0+128),w
  9362     01A0  07B8               	addwf	___flmul@grs^(0+128),f
  9363     01A1  0842               	movf	(___flmul@temp+1)^(0+128),w
  9364     01A2  3DB9               	addwfc	(___flmul@grs+1)^(0+128),f
  9365     01A3  3000               	movlw	0
  9366     01A4  3DBA               	addwfc	(___flmul@grs+2)^(0+128),f
  9367     01A5  3DBB               	addwfc	(___flmul@grs+3)^(0+128),f
  9368     01A6                     l7205:
  9369     01A6  082A               	movf	(___flmul@b^(0+128)+1),w
  9370     01A7  00A0               	movwf	__Umul8_16@multiplicand^(0+128)
  9371     01A8  082F               	movf	(___flmul@a^(0+128)+2),w
  9372     01A9  3190  207D  3180   	fcall	__Umul8_16
  9373     01AC  0021               	movlb	1	; select bank1
  9374     01AD  0821               	movf	(?__Umul8_16+1)^(0+128),w
  9375     01AE  00C2               	movwf	(___flmul@temp+1)^(0+128)
  9376     01AF  0820               	movf	?__Umul8_16^(0+128),w
  9377     01B0  00C1               	movwf	___flmul@temp^(0+128)
  9378     01B1  0841               	movf	___flmul@temp^(0+128),w
  9379     01B2  07BD               	addwf	___flmul@prod^(0+128),f
  9380     01B3  0842               	movf	(___flmul@temp+1)^(0+128),w
  9381     01B4  3DBE               	addwfc	(___flmul@prod+1)^(0+128),f
  9382     01B5  3000               	movlw	0
  9383     01B6  3DBF               	addwfc	(___flmul@prod+2)^(0+128),f
  9384     01B7  3DC0               	addwfc	(___flmul@prod+3)^(0+128),f
  9385     01B8                     l7207:
  9386     01B8  082B               	movf	(___flmul@b^(0+128)+2),w
  9387     01B9  00A0               	movwf	__Umul8_16@multiplicand^(0+128)
  9388     01BA  082E               	movf	(___flmul@a^(0+128)+1),w
  9389     01BB  3190  207D  3180   	fcall	__Umul8_16
  9390     01BE  0021               	movlb	1	; select bank1
  9391     01BF  0821               	movf	(?__Umul8_16+1)^(0+128),w
  9392     01C0  00C2               	movwf	(___flmul@temp+1)^(0+128)
  9393     01C1  0820               	movf	?__Umul8_16^(0+128),w
  9394     01C2  00C1               	movwf	___flmul@temp^(0+128)
  9395     01C3                     l7209:
  9396     01C3  0841               	movf	___flmul@temp^(0+128),w
  9397     01C4  07BD               	addwf	___flmul@prod^(0+128),f
  9398     01C5  0842               	movf	(___flmul@temp+1)^(0+128),w
  9399     01C6  3DBE               	addwfc	(___flmul@prod+1)^(0+128),f
  9400     01C7  3000               	movlw	0
  9401     01C8  3DBF               	addwfc	(___flmul@prod+2)^(0+128),f
  9402     01C9  3DC0               	addwfc	(___flmul@prod+3)^(0+128),f
  9403     01CA  082B               	movf	(___flmul@b^(0+128)+2),w
  9404     01CB  00A0               	movwf	__Umul8_16@multiplicand^(0+128)
  9405     01CC  082F               	movf	(___flmul@a^(0+128)+2),w
  9406     01CD  3190  207D  3180   	fcall	__Umul8_16
  9407     01D0  0021               	movlb	1	; select bank1
  9408     01D1  0821               	movf	(?__Umul8_16+1)^(0+128),w
  9409     01D2  00C2               	movwf	(___flmul@temp+1)^(0+128)
  9410     01D3  0820               	movf	?__Umul8_16^(0+128),w
  9411     01D4  00C1               	movwf	___flmul@temp^(0+128)
  9412     01D5                     l7211:
  9413     01D5  0841               	movf	___flmul@temp^(0+128),w
  9414     01D6  00B1               	movwf	??___flmul^(0+128)
  9415     01D7  0842               	movf	(___flmul@temp+1)^(0+128),w
  9416     01D8  00B2               	movwf	(??___flmul^(0+128)+1)
  9417     01D9  01B3               	clrf	(??___flmul^(0+128)+2)
  9418     01DA  01B4               	clrf	(??___flmul^(0+128)+3)
  9419     01DB  3008               	movlw	8
  9420     01DC                     u9235:
  9421     01DC  35B1               	lslf	??___flmul^(0+128),f
  9422     01DD  0DB2               	rlf	(??___flmul^(0+128)+1),f
  9423     01DE  0DB3               	rlf	(??___flmul^(0+128)+2),f
  9424     01DF  0DB4               	rlf	(??___flmul^(0+128)+3),f
  9425     01E0                     u9230:
  9426     01E0  0B89               	decfsz	9,f
  9427     01E1  29DC               	goto	u9235
  9428     01E2  0831               	movf	??___flmul^(0+128),w
  9429     01E3  07BD               	addwf	___flmul@prod^(0+128),f
  9430     01E4  0832               	movf	(??___flmul+1)^(0+128),w
  9431     01E5  3DBE               	addwfc	(___flmul@prod+1)^(0+128),f
  9432     01E6  0833               	movf	(??___flmul+2)^(0+128),w
  9433     01E7  3DBF               	addwfc	(___flmul@prod+2)^(0+128),f
  9434     01E8  0834               	movf	(??___flmul+3)^(0+128),w
  9435     01E9  3DC0               	addwfc	(___flmul@prod+3)^(0+128),f
  9436     01EA                     l7213:
  9437     01EA  0838               	movf	___flmul@grs^(0+128),w
  9438     01EB  00B1               	movwf	??___flmul^(0+128)
  9439     01EC  0839               	movf	(___flmul@grs+1)^(0+128),w
  9440     01ED  00B2               	movwf	(??___flmul^(0+128)+1)
  9441     01EE  083A               	movf	(___flmul@grs+2)^(0+128),w
  9442     01EF  00B3               	movwf	(??___flmul^(0+128)+2)
  9443     01F0  083B               	movf	(___flmul@grs+3)^(0+128),w
  9444     01F1  00B4               	movwf	(??___flmul^(0+128)+3)
  9445     01F2  3018               	movlw	24
  9446     01F3                     u9245:
  9447     01F3  36B4               	lsrf	(??___flmul^(0+128)+3),f
  9448     01F4  0CB3               	rrf	(??___flmul^(0+128)+2),f
  9449     01F5  0CB2               	rrf	(??___flmul^(0+128)+1),f
  9450     01F6  0CB1               	rrf	??___flmul^(0+128),f
  9451     01F7                     u9240:
  9452     01F7  0B89               	decfsz	9,f
  9453     01F8  29F3               	goto	u9245
  9454     01F9  0831               	movf	??___flmul^(0+128),w
  9455     01FA  07BD               	addwf	___flmul@prod^(0+128),f
  9456     01FB  0832               	movf	(??___flmul+1)^(0+128),w
  9457     01FC  3DBE               	addwfc	(___flmul@prod+1)^(0+128),f
  9458     01FD  0833               	movf	(??___flmul+2)^(0+128),w
  9459     01FE  3DBF               	addwfc	(___flmul@prod+2)^(0+128),f
  9460     01FF  0834               	movf	(??___flmul+3)^(0+128),w
  9461     0200  3DC0               	addwfc	(___flmul@prod+3)^(0+128),f
  9462     0201                     l7215:
  9463     0201  3008               	movlw	8
  9464     0202                     u9255:
  9465     0202  35B8               	lslf	___flmul@grs^(0+128),f
  9466     0203  0DB9               	rlf	(___flmul@grs+1)^(0+128),f
  9467     0204  0DBA               	rlf	(___flmul@grs+2)^(0+128),f
  9468     0205  0DBB               	rlf	(___flmul@grs+3)^(0+128),f
  9469     0206  0B89               	decfsz	9,f
  9470     0207  2A02               	goto	u9255
  9471     0208                     l7217:
  9472     0208  083C               	movf	___flmul@bexp^(0+128),w
  9473     0209  0737               	addwf	___flmul@aexp^(0+128),w
  9474     020A  00B1               	movwf	??___flmul^(0+128)
  9475     020B  01B2               	clrf	(??___flmul^(0+128)+1)
  9476     020C  0DB2               	rlf	(??___flmul+1)^(0+128),f
  9477     020D  0831               	movf	??___flmul^(0+128),w
  9478     020E  3E82               	addlw	130
  9479     020F  00C1               	movwf	___flmul@temp^(0+128)
  9480     0210  30FF               	movlw	255
  9481     0211  3D32               	addwfc	(??___flmul+1)^(0+128),w
  9482     0212  00C2               	movwf	(___flmul@temp+1)^(0+128)
  9483     0213  2A2B               	goto	l7229
  9484     0214                     l7219:
  9485     0214  3001               	movlw	1
  9486     0215                     u9265:
  9487     0215  35BD               	lslf	___flmul@prod^(0+128),f
  9488     0216  0DBE               	rlf	(___flmul@prod+1)^(0+128),f
  9489     0217  0DBF               	rlf	(___flmul@prod+2)^(0+128),f
  9490     0218  0DC0               	rlf	(___flmul@prod+3)^(0+128),f
  9491     0219  0B89               	decfsz	9,f
  9492     021A  2A15               	goto	u9265
  9493     021B                     l7221:
  9494     021B  1FBB               	btfss	(___flmul@grs+3)^(0+128),7
  9495     021C  2A1E               	goto	u9271
  9496     021D  2A1F               	goto	u9270
  9497     021E                     u9271:
  9498     021E  2A20               	goto	l7225
  9499     021F                     u9270:
  9500     021F                     l7223:
  9501     021F  143D               	bsf	___flmul@prod^(0+128),0
  9502     0220                     l7225:
  9503     0220  3001               	movlw	1
  9504     0221                     u9285:
  9505     0221  35B8               	lslf	___flmul@grs^(0+128),f
  9506     0222  0DB9               	rlf	(___flmul@grs+1)^(0+128),f
  9507     0223  0DBA               	rlf	(___flmul@grs+2)^(0+128),f
  9508     0224  0DBB               	rlf	(___flmul@grs+3)^(0+128),f
  9509     0225  0B89               	decfsz	9,f
  9510     0226  2A21               	goto	u9285
  9511     0227                     l7227:
  9512     0227  30FF               	movlw	255
  9513     0228  07C1               	addwf	___flmul@temp^(0+128),f
  9514     0229  30FF               	movlw	255
  9515     022A  3DC2               	addwfc	(___flmul@temp+1)^(0+128),f
  9516     022B                     l7229:
  9517     022B  1FBF               	btfss	(___flmul@prod+2)^(0+128),7
  9518     022C  2A2E               	goto	u9291
  9519     022D  2A2F               	goto	u9290
  9520     022E                     u9291:
  9521     022E  2A14               	goto	l7219
  9522     022F                     u9290:
  9523     022F                     l7231:
  9524     022F  01B7               	clrf	___flmul@aexp^(0+128)
  9525     0230                     l7233:
  9526     0230  1FBB               	btfss	(___flmul@grs+3)^(0+128),7
  9527     0231  2A33               	goto	u9301
  9528     0232  2A34               	goto	u9300
  9529     0233                     u9301:
  9530     0233  2A50               	goto	l7241
  9531     0234                     u9300:
  9532     0234                     l7235:
  9533     0234  30FF               	movlw	255
  9534     0235  0538               	andwf	___flmul@grs^(0+128),w
  9535     0236  00B1               	movwf	??___flmul^(0+128)
  9536     0237  30FF               	movlw	255
  9537     0238  0539               	andwf	(___flmul@grs+1)^(0+128),w
  9538     0239  00B2               	movwf	(??___flmul^(0+128)+1)
  9539     023A  30FF               	movlw	255
  9540     023B  053A               	andwf	(___flmul@grs+2)^(0+128),w
  9541     023C  00B3               	movwf	(??___flmul^(0+128)+2)
  9542     023D  307F               	movlw	127
  9543     023E  053B               	andwf	(___flmul@grs+3)^(0+128),w
  9544     023F  00B4               	movwf	(??___flmul^(0+128)+3)
  9545     0240  0834               	movf	(??___flmul+3)^(0+128),w
  9546     0241  0433               	iorwf	(??___flmul+2)^(0+128),w
  9547     0242  0432               	iorwf	(??___flmul+1)^(0+128),w
  9548     0243  0431               	iorwf	??___flmul^(0+128),w
  9549     0244  1903               	skipnz
  9550     0245  2A47               	goto	u9311
  9551     0246  2A48               	goto	u9310
  9552     0247                     u9311:
  9553     0247  2A4B               	goto	l1595
  9554     0248                     u9310:
  9555     0248                     l7237:
  9556     0248  3001               	movlw	1
  9557     0249  00B7               	movwf	___flmul@aexp^(0+128)
  9558     024A  2A50               	goto	l7241
  9559     024B                     l1595:
  9560     024B  1C3D               	btfss	___flmul@prod^(0+128),0
  9561     024C  2A4E               	goto	u9321
  9562     024D  2A4F               	goto	u9320
  9563     024E                     u9321:
  9564     024E  2A50               	goto	l7241
  9565     024F                     u9320:
  9566     024F  2A48               	goto	l7237
  9567     0250                     l7241:
  9568     0250  0837               	movf	___flmul@aexp^(0+128),w
  9569     0251  1903               	btfsc	3,2
  9570     0252  2A54               	goto	u9331
  9571     0253  2A55               	goto	u9330
  9572     0254                     u9331:
  9573     0254  2A7B               	goto	l7251
  9574     0255                     u9330:
  9575     0255                     l7243:
  9576     0255  3001               	movlw	1
  9577     0256  07BD               	addwf	___flmul@prod^(0+128),f
  9578     0257  3000               	movlw	0
  9579     0258  3DBE               	addwfc	(___flmul@prod+1)^(0+128),f
  9580     0259  3DBF               	addwfc	(___flmul@prod+2)^(0+128),f
  9581     025A  3DC0               	addwfc	(___flmul@prod+3)^(0+128),f
  9582     025B                     l7245:
  9583     025B  1C40               	btfss	(___flmul@prod+3)^(0+128),0
  9584     025C  2A5E               	goto	u9341
  9585     025D  2A5F               	goto	u9340
  9586     025E                     u9341:
  9587     025E  2A7B               	goto	l7251
  9588     025F                     u9340:
  9589     025F                     l7247:
  9590     025F  083D               	movf	___flmul@prod^(0+128),w
  9591     0260  00B1               	movwf	??___flmul^(0+128)
  9592     0261  083E               	movf	(___flmul@prod+1)^(0+128),w
  9593     0262  00B2               	movwf	(??___flmul^(0+128)+1)
  9594     0263  083F               	movf	(___flmul@prod+2)^(0+128),w
  9595     0264  00B3               	movwf	(??___flmul^(0+128)+2)
  9596     0265  0840               	movf	(___flmul@prod+3)^(0+128),w
  9597     0266  00B4               	movwf	(??___flmul^(0+128)+3)
  9598     0267  3001               	movlw	1
  9599     0268  00B5               	movwf	(??___flmul+4)^(0+128)
  9600     0269                     u9355:
  9601     0269  37B4               	asrf	(??___flmul^(0+128)+3),f
  9602     026A  0CB3               	rrf	(??___flmul^(0+128)+2),f
  9603     026B  0CB2               	rrf	(??___flmul^(0+128)+1),f
  9604     026C  0CB1               	rrf	??___flmul^(0+128),f
  9605     026D                     u9350:
  9606     026D  0BB5               	decfsz	(??___flmul+4)^(0+128),f
  9607     026E  2A69               	goto	u9355
  9608     026F  0834               	movf	(??___flmul+3)^(0+128),w
  9609     0270  00C0               	movwf	(___flmul@prod+3)^(0+128)
  9610     0271  0833               	movf	(??___flmul+2)^(0+128),w
  9611     0272  00BF               	movwf	(___flmul@prod+2)^(0+128)
  9612     0273  0832               	movf	(??___flmul+1)^(0+128),w
  9613     0274  00BE               	movwf	(___flmul@prod+1)^(0+128)
  9614     0275  0831               	movf	??___flmul^(0+128),w
  9615     0276  00BD               	movwf	___flmul@prod^(0+128)
  9616     0277                     l7249:
  9617     0277  3001               	movlw	1
  9618     0278  07C1               	addwf	___flmul@temp^(0+128),f
  9619     0279  3000               	movlw	0
  9620     027A  3DC2               	addwfc	(___flmul@temp+1)^(0+128),f
  9621     027B                     l7251:
  9622     027B  0842               	movf	(___flmul@temp+1)^(0+128),w
  9623     027C  3A80               	xorlw	128
  9624     027D  00B1               	movwf	??___flmul^(0+128)
  9625     027E  3080               	movlw	128
  9626     027F  0231               	subwf	??___flmul^(0+128),w
  9627     0280  1D03               	skipz
  9628     0281  2A84               	goto	u9365
  9629     0282  30FF               	movlw	255
  9630     0283  0241               	subwf	___flmul@temp^(0+128),w
  9631     0284                     u9365:
  9632     0284  1C03               	skipc
  9633     0285  2A87               	goto	u9361
  9634     0286  2A88               	goto	u9360
  9635     0287                     u9361:
  9636     0287  2A92               	goto	l7255
  9637     0288                     u9360:
  9638     0288                     l7253:
  9639     0288  307F               	movlw	127
  9640     0289  0021               	movlb	1	; select bank1
  9641     028A  00C0               	movwf	(___flmul@prod+3)^(0+128)
  9642     028B  3080               	movlw	128
  9643     028C  00BF               	movwf	(___flmul@prod+2)^(0+128)
  9644     028D  3000               	movlw	0
  9645     028E  00BE               	movwf	(___flmul@prod+1)^(0+128)
  9646     028F  3000               	movlw	0
  9647     0290  00BD               	movwf	___flmul@prod^(0+128)
  9648     0291  2AC3               	goto	l1601
  9649     0292                     l7255:
  9650     0292  0021               	movlb	1	; select bank1
  9651     0293  0842               	movf	(___flmul@temp+1)^(0+128),w
  9652     0294  3A80               	xorlw	128
  9653     0295  00B1               	movwf	??___flmul^(0+128)
  9654     0296  3080               	movlw	128
  9655     0297  0231               	subwf	??___flmul^(0+128),w
  9656     0298  1D03               	skipz
  9657     0299  2A9C               	goto	u9375
  9658     029A  3001               	movlw	1
  9659     029B  0241               	subwf	___flmul@temp^(0+128),w
  9660     029C                     u9375:
  9661     029C  1803               	skipnc
  9662     029D  2A9F               	goto	u9371
  9663     029E  2AA0               	goto	u9370
  9664     029F                     u9371:
  9665     029F  2AAB               	goto	l7261
  9666     02A0                     u9370:
  9667     02A0                     l7257:
  9668     02A0  3000               	movlw	0
  9669     02A1  0021               	movlb	1	; select bank1
  9670     02A2  00C0               	movwf	(___flmul@prod+3)^(0+128)
  9671     02A3  3000               	movlw	0
  9672     02A4  00BF               	movwf	(___flmul@prod+2)^(0+128)
  9673     02A5  3000               	movlw	0
  9674     02A6  00BE               	movwf	(___flmul@prod+1)^(0+128)
  9675     02A7  3000               	movlw	0
  9676     02A8  00BD               	movwf	___flmul@prod^(0+128)
  9677     02A9                     l7259:
  9678     02A9  01B6               	clrf	___flmul@sign^(0+128)
  9679     02AA  2AC3               	goto	l1601
  9680     02AB                     l7261:
  9681     02AB  0021               	movlb	1	; select bank1
  9682     02AC  0841               	movf	___flmul@temp^(0+128),w
  9683     02AD  00BC               	movwf	___flmul@bexp^(0+128)
  9684     02AE  30FF               	movlw	255
  9685     02AF  05BD               	andwf	___flmul@prod^(0+128),f
  9686     02B0  30FF               	movlw	255
  9687     02B1  05BE               	andwf	(___flmul@prod+1)^(0+128),f
  9688     02B2  307F               	movlw	127
  9689     02B3  05BF               	andwf	(___flmul@prod+2)^(0+128),f
  9690     02B4  3000               	movlw	0
  9691     02B5  05C0               	andwf	(___flmul@prod+3)^(0+128),f
  9692     02B6                     l7263:
  9693     02B6  1C3C               	btfss	___flmul@bexp^(0+128),0
  9694     02B7  2AB9               	goto	u9381
  9695     02B8  2ABA               	goto	u9380
  9696     02B9                     u9381:
  9697     02B9  2ABB               	goto	l7267
  9698     02BA                     u9380:
  9699     02BA                     l7265:
  9700     02BA  17BF               	bsf	(___flmul@prod^(0+128)+2),7
  9701     02BB                     l7267:
  9702     02BB  083C               	movf	___flmul@bexp^(0+128),w
  9703     02BC  00B1               	movwf	??___flmul^(0+128)
  9704     02BD  3001               	movlw	1
  9705     02BE                     u9395:
  9706     02BE  36B1               	lsrf	??___flmul^(0+128),f
  9707     02BF  0B89               	decfsz	9,f
  9708     02C0  2ABE               	goto	u9395
  9709     02C1  0831               	movf	??___flmul^(0+128),w
  9710     02C2  00C0               	movwf	(___flmul@prod^(0+128)+3)
  9711     02C3                     l1601:
  9712     02C3  0836               	movf	___flmul@sign^(0+128),w
  9713     02C4  04C0               	iorwf	(___flmul@prod^(0+128)+3),f
  9714     02C5                     l7269:
  9715     02C5  0840               	movf	(___flmul@prod+3)^(0+128),w
  9716     02C6  00AC               	movwf	(?___flmul+3)^(0+128)
  9717     02C7  083F               	movf	(___flmul@prod+2)^(0+128),w
  9718     02C8  00AB               	movwf	(?___flmul+2)^(0+128)
  9719     02C9  083E               	movf	(___flmul@prod+1)^(0+128),w
  9720     02CA  00AA               	movwf	(?___flmul+1)^(0+128)
  9721     02CB  083D               	movf	___flmul@prod^(0+128),w
  9722     02CC  00A9               	movwf	?___flmul^(0+128)
  9723     02CD                     l1589:
  9724     02CD  0008               	return
  9725     02CE                     __end_of___flmul:
  9726                           
  9727                           	psect	text5
  9728     107D                     __ptext5:	
  9729 ;; *************** function __Umul8_16 *****************
  9730 ;; Defined at:
  9731 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\Umul8_16.c"
  9732 ;; Parameters:    Size  Location     Type
  9733 ;;  multiplier      1    wreg     unsigned char 
  9734 ;;  multiplicand    1    0[BANK1 ] unsigned char 
  9735 ;; Auto vars:     Size  Location     Type
  9736 ;;  multiplier      1    8[BANK1 ] unsigned char 
  9737 ;;  word_mpld       2    6[BANK1 ] unsigned short 
  9738 ;;  product         2    4[BANK1 ] unsigned short 
  9739 ;; Return value:  Size  Location     Type
  9740 ;;                  2    0[BANK1 ] unsigned int 
  9741 ;; Registers used:
  9742 ;;		wreg, status,2, status,0
  9743 ;; Tracked objects:
  9744 ;;		On entry : 0/0
  9745 ;;		On exit  : 0/0
  9746 ;;		Unchanged: 0/0
  9747 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9748 ;;      Params:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0
  9749 ;;      Locals:         0       0       5       0       0       0       0       0       0       0       0       0       
      +0       0
  9750 ;;      Temps:          0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0
  9751 ;;      Totals:         0       0       9       0       0       0       0       0       0       0       0       0       
      +0       0
  9752 ;;Total ram usage:        9 bytes
  9753 ;; Hardware stack levels used: 1
  9754 ;; Hardware stack levels required when called: 5
  9755 ;; This function calls:
  9756 ;;		Nothing
  9757 ;; This function is called by:
  9758 ;;		___flmul
  9759 ;; This function uses a non-reentrant model
  9760 ;;
  9761                           
  9762     107D                     __Umul8_16:	
  9763                           ;psect for function __Umul8_16
  9764                           
  9765                           
  9766                           ;incstack = 0
  9767                           ; Regs used in __Umul8_16: [wreg+status,2+status,0]
  9768                           ;__Umul8_16@multiplier stored from wreg
  9769     107D  0021               	movlb	1	; select bank1
  9770     107E  00A8               	movwf	__Umul8_16@multiplier^(0+128)
  9771     107F                     l6709:
  9772     107F  01A4               	clrf	__Umul8_16@product^(0+128)
  9773     1080  01A5               	clrf	(__Umul8_16@product+1)^(0+128)
  9774     1081                     l6711:
  9775     1081  0820               	movf	__Umul8_16@multiplicand^(0+128),w
  9776     1082  00A2               	movwf	??__Umul8_16^(0+128)
  9777     1083  01A3               	clrf	(??__Umul8_16^(0+128)+1)
  9778     1084  0822               	movf	??__Umul8_16^(0+128),w
  9779     1085  00A6               	movwf	__Umul8_16@word_mpld^(0+128)
  9780     1086  0823               	movf	(??__Umul8_16+1)^(0+128),w
  9781     1087  00A7               	movwf	(__Umul8_16@word_mpld+1)^(0+128)
  9782     1088                     l6713:
  9783     1088  1C28               	btfss	__Umul8_16@multiplier^(0+128),0
  9784     1089  288B               	goto	u8261
  9785     108A  288C               	goto	u8260
  9786     108B                     u8261:
  9787     108B  2890               	goto	l1608
  9788     108C                     u8260:
  9789     108C                     l6715:
  9790     108C  0826               	movf	__Umul8_16@word_mpld^(0+128),w
  9791     108D  07A4               	addwf	__Umul8_16@product^(0+128),f
  9792     108E  0827               	movf	(__Umul8_16@word_mpld+1)^(0+128),w
  9793     108F  3DA5               	addwfc	(__Umul8_16@product+1)^(0+128),f
  9794     1090                     l1608:
  9795     1090  3001               	movlw	1
  9796     1091                     u8275:
  9797     1091  35A6               	lslf	__Umul8_16@word_mpld^(0+128),f
  9798     1092  0DA7               	rlf	(__Umul8_16@word_mpld+1)^(0+128),f
  9799     1093  0B89               	decfsz	9,f
  9800     1094  2891               	goto	u8275
  9801     1095  1003               	clrc
  9802     1096  0CA8               	rrf	__Umul8_16@multiplier^(0+128),f
  9803     1097                     l6717:
  9804     1097  0828               	movf	__Umul8_16@multiplier^(0+128),w
  9805     1098  1D03               	btfss	3,2
  9806     1099  289B               	goto	u8281
  9807     109A  289C               	goto	u8280
  9808     109B                     u8281:
  9809     109B  2888               	goto	l6713
  9810     109C                     u8280:
  9811     109C                     l6719:
  9812     109C  0825               	movf	(__Umul8_16@product+1)^(0+128),w
  9813     109D  00A1               	movwf	(?__Umul8_16+1)^(0+128)
  9814     109E  0824               	movf	__Umul8_16@product^(0+128),w
  9815     109F  00A0               	movwf	?__Umul8_16^(0+128)
  9816     10A0                     l1610:
  9817     10A0  0008               	return
  9818     10A1                     __end_of__Umul8_16:
  9819                           
  9820                           	psect	text6
  9821     0C50                     __ptext6:	
  9822 ;; *************** function ___fldiv *****************
  9823 ;; Defined at:
  9824 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\sprcdiv.c"
  9825 ;; Parameters:    Size  Location     Type
  9826 ;;  a               4    0[BANK1 ] unsigned int 
  9827 ;;  b               4    4[BANK1 ] unsigned int 
  9828 ;; Auto vars:     Size  Location     Type
  9829 ;;  grs             4   20[BANK1 ] unsigned long 
  9830 ;;  rem             4   13[BANK1 ] unsigned long 
  9831 ;;  new_exp         2   18[BANK1 ] short 
  9832 ;;  aexp            1   25[BANK1 ] unsigned char 
  9833 ;;  bexp            1   24[BANK1 ] unsigned char 
  9834 ;;  sign            1   17[BANK1 ] unsigned char 
  9835 ;; Return value:  Size  Location     Type
  9836 ;;                  4    0[BANK1 ] unsigned char 
  9837 ;; Registers used:
  9838 ;;		wreg, status,2, status,0
  9839 ;; Tracked objects:
  9840 ;;		On entry : 0/0
  9841 ;;		On exit  : 0/0
  9842 ;;		Unchanged: 0/0
  9843 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9844 ;;      Params:         0       0       8       0       0       0       0       0       0       0       0       0       
      +0       0
  9845 ;;      Locals:         0       0      13       0       0       0       0       0       0       0       0       0       
      +0       0
  9846 ;;      Temps:          0       0       5       0       0       0       0       0       0       0       0       0       
      +0       0
  9847 ;;      Totals:         0       0      26       0       0       0       0       0       0       0       0       0       
      +0       0
  9848 ;;Total ram usage:       26 bytes
  9849 ;; Hardware stack levels used: 1
  9850 ;; Hardware stack levels required when called: 5
  9851 ;; This function calls:
  9852 ;;		Nothing
  9853 ;; This function is called by:
  9854 ;;		_str2float
  9855 ;; This function uses a non-reentrant model
  9856 ;;
  9857                           
  9858     0C50                     ___fldiv:	
  9859                           ;psect for function ___fldiv
  9860                           
  9861     0C50                     l6993:	
  9862                           ;incstack = 0
  9863                           ; Regs used in ___fldiv: [wreg+status,2+status,0]
  9864                           
  9865     0C50  0021               	movlb	1	; select bank1
  9866     0C51  0827               	movf	(___fldiv@b^(0+128)+3),w
  9867     0C52  3980               	andlw	128
  9868     0C53  00B1               	movwf	___fldiv@sign^(0+128)
  9869     0C54                     l6995:
  9870     0C54  3527               	lslf	(___fldiv@b^(0+128)+3),w
  9871     0C55  00B8               	movwf	___fldiv@bexp^(0+128)
  9872     0C56                     l6997:
  9873     0C56  1FA6               	btfss	(___fldiv@b^(0+128)+2),7
  9874     0C57  2C59               	goto	u8831
  9875     0C58  2C5A               	goto	u8830
  9876     0C59                     u8831:
  9877     0C59  2C5B               	goto	l7001
  9878     0C5A                     u8830:
  9879     0C5A                     l6999:
  9880     0C5A  1438               	bsf	___fldiv@bexp^(0+128),0
  9881     0C5B                     l7001:
  9882     0C5B  0838               	movf	___fldiv@bexp^(0+128),w
  9883     0C5C  1903               	btfsc	3,2
  9884     0C5D  2C5F               	goto	u8841
  9885     0C5E  2C60               	goto	u8840
  9886     0C5F                     u8841:
  9887     0C5F  2C70               	goto	l7011
  9888     0C60                     u8840:
  9889     0C60                     l7003:
  9890     0C60  0A38               	incf	___fldiv@bexp^(0+128),w
  9891     0C61  1D03               	btfss	3,2
  9892     0C62  2C64               	goto	u8851
  9893     0C63  2C65               	goto	u8850
  9894     0C64                     u8851:
  9895     0C64  2C6D               	goto	l7007
  9896     0C65                     u8850:
  9897     0C65                     l7005:
  9898     0C65  3000               	movlw	0
  9899     0C66  00A7               	movwf	(___fldiv@b+3)^(0+128)
  9900     0C67  3000               	movlw	0
  9901     0C68  00A6               	movwf	(___fldiv@b+2)^(0+128)
  9902     0C69  3000               	movlw	0
  9903     0C6A  00A5               	movwf	(___fldiv@b+1)^(0+128)
  9904     0C6B  3000               	movlw	0
  9905     0C6C  00A4               	movwf	___fldiv@b^(0+128)
  9906     0C6D                     l7007:
  9907     0C6D  17A6               	bsf	(___fldiv@b^(0+128)+2),7
  9908     0C6E                     l7009:
  9909     0C6E  01A7               	clrf	(___fldiv@b^(0+128)+3)
  9910     0C6F  2C78               	goto	l7013
  9911     0C70                     l7011:
  9912     0C70  3000               	movlw	0
  9913     0C71  00A7               	movwf	(___fldiv@b+3)^(0+128)
  9914     0C72  3000               	movlw	0
  9915     0C73  00A6               	movwf	(___fldiv@b+2)^(0+128)
  9916     0C74  3000               	movlw	0
  9917     0C75  00A5               	movwf	(___fldiv@b+1)^(0+128)
  9918     0C76  3000               	movlw	0
  9919     0C77  00A4               	movwf	___fldiv@b^(0+128)
  9920     0C78                     l7013:
  9921     0C78  0823               	movf	(___fldiv@a^(0+128)+3),w
  9922     0C79  3980               	andlw	128
  9923     0C7A  06B1               	xorwf	___fldiv@sign^(0+128),f
  9924     0C7B                     l7015:
  9925     0C7B  3523               	lslf	(___fldiv@a^(0+128)+3),w
  9926     0C7C  00B9               	movwf	___fldiv@aexp^(0+128)
  9927     0C7D                     l7017:
  9928     0C7D  1FA2               	btfss	(___fldiv@a^(0+128)+2),7
  9929     0C7E  2C80               	goto	u8861
  9930     0C7F  2C81               	goto	u8860
  9931     0C80                     u8861:
  9932     0C80  2C82               	goto	l7021
  9933     0C81                     u8860:
  9934     0C81                     l7019:
  9935     0C81  1439               	bsf	___fldiv@aexp^(0+128),0
  9936     0C82                     l7021:
  9937     0C82  0839               	movf	___fldiv@aexp^(0+128),w
  9938     0C83  1903               	btfsc	3,2
  9939     0C84  2C86               	goto	u8871
  9940     0C85  2C87               	goto	u8870
  9941     0C86                     u8871:
  9942     0C86  2C97               	goto	l7031
  9943     0C87                     u8870:
  9944     0C87                     l7023:
  9945     0C87  0A39               	incf	___fldiv@aexp^(0+128),w
  9946     0C88  1D03               	btfss	3,2
  9947     0C89  2C8B               	goto	u8881
  9948     0C8A  2C8C               	goto	u8880
  9949     0C8B                     u8881:
  9950     0C8B  2C94               	goto	l7027
  9951     0C8C                     u8880:
  9952     0C8C                     l7025:
  9953     0C8C  3000               	movlw	0
  9954     0C8D  00A3               	movwf	(___fldiv@a+3)^(0+128)
  9955     0C8E  3000               	movlw	0
  9956     0C8F  00A2               	movwf	(___fldiv@a+2)^(0+128)
  9957     0C90  3000               	movlw	0
  9958     0C91  00A1               	movwf	(___fldiv@a+1)^(0+128)
  9959     0C92  3000               	movlw	0
  9960     0C93  00A0               	movwf	___fldiv@a^(0+128)
  9961     0C94                     l7027:
  9962     0C94  17A2               	bsf	(___fldiv@a^(0+128)+2),7
  9963     0C95                     l7029:
  9964     0C95  01A3               	clrf	(___fldiv@a^(0+128)+3)
  9965     0C96  2C9F               	goto	l1549
  9966     0C97                     l7031:
  9967     0C97  3000               	movlw	0
  9968     0C98  00A3               	movwf	(___fldiv@a+3)^(0+128)
  9969     0C99  3000               	movlw	0
  9970     0C9A  00A2               	movwf	(___fldiv@a+2)^(0+128)
  9971     0C9B  3000               	movlw	0
  9972     0C9C  00A1               	movwf	(___fldiv@a+1)^(0+128)
  9973     0C9D  3000               	movlw	0
  9974     0C9E  00A0               	movwf	___fldiv@a^(0+128)
  9975     0C9F                     l1549:
  9976     0C9F  0823               	movf	(___fldiv@a+3)^(0+128),w
  9977     0CA0  0422               	iorwf	(___fldiv@a+2)^(0+128),w
  9978     0CA1  0421               	iorwf	(___fldiv@a+1)^(0+128),w
  9979     0CA2  0420               	iorwf	___fldiv@a^(0+128),w
  9980     0CA3  1D03               	skipz
  9981     0CA4  2CA6               	goto	u8891
  9982     0CA5  2CA7               	goto	u8890
  9983     0CA6                     u8891:
  9984     0CA6  2CBE               	goto	l7041
  9985     0CA7                     u8890:
  9986     0CA7                     l7033:
  9987     0CA7  3000               	movlw	0
  9988     0CA8  00A7               	movwf	(___fldiv@b+3)^(0+128)
  9989     0CA9  3000               	movlw	0
  9990     0CAA  00A6               	movwf	(___fldiv@b+2)^(0+128)
  9991     0CAB  3000               	movlw	0
  9992     0CAC  00A5               	movwf	(___fldiv@b+1)^(0+128)
  9993     0CAD  3000               	movlw	0
  9994     0CAE  00A4               	movwf	___fldiv@b^(0+128)
  9995     0CAF  3080               	movlw	128
  9996     0CB0  04A6               	iorwf	(___fldiv@b^(0+128)+2),f
  9997     0CB1  307F               	movlw	127
  9998     0CB2  04A7               	iorwf	((___fldiv@b+1)^(0+128)+2),f
  9999     0CB3                     l7035:
 10000     0CB3  0831               	movf	___fldiv@sign^(0+128),w
 10001     0CB4  04A7               	iorwf	(___fldiv@b^(0+128)+3),f
 10002     0CB5                     l7037:
 10003     0CB5  0827               	movf	(___fldiv@b+3)^(0+128),w
 10004     0CB6  00A3               	movwf	(?___fldiv+3)^(0+128)
 10005     0CB7  0826               	movf	(___fldiv@b+2)^(0+128),w
 10006     0CB8  00A2               	movwf	(?___fldiv+2)^(0+128)
 10007     0CB9  0825               	movf	(___fldiv@b+1)^(0+128),w
 10008     0CBA  00A1               	movwf	(?___fldiv+1)^(0+128)
 10009     0CBB  0824               	movf	___fldiv@b^(0+128),w
 10010     0CBC  00A0               	movwf	?___fldiv^(0+128)
 10011     0CBD  2DF3               	goto	l1551
 10012     0CBE                     l7041:
 10013     0CBE  0838               	movf	___fldiv@bexp^(0+128),w
 10014     0CBF  1D03               	btfss	3,2
 10015     0CC0  2CC2               	goto	u8901
 10016     0CC1  2CC3               	goto	u8900
 10017     0CC2                     u8901:
 10018     0CC2  2CCC               	goto	l7047
 10019     0CC3                     u8900:
 10020     0CC3                     l7043:
 10021     0CC3  3000               	movlw	0
 10022     0CC4  00A3               	movwf	(?___fldiv+3)^(0+128)
 10023     0CC5  3000               	movlw	0
 10024     0CC6  00A2               	movwf	(?___fldiv+2)^(0+128)
 10025     0CC7  3000               	movlw	0
 10026     0CC8  00A1               	movwf	(?___fldiv+1)^(0+128)
 10027     0CC9  3000               	movlw	0
 10028     0CCA  00A0               	movwf	?___fldiv^(0+128)
 10029     0CCB  2DF3               	goto	l1551
 10030     0CCC                     l7047:
 10031     0CCC  0838               	movf	___fldiv@bexp^(0+128),w
 10032     0CCD  00A8               	movwf	??___fldiv^(0+128)
 10033     0CCE  01A9               	clrf	(??___fldiv^(0+128)+1)
 10034     0CCF  0829               	movf	(??___fldiv+1)^(0+128),w
 10035     0CD0  00AB               	movwf	((??___fldiv+2)^(0+128)+1)
 10036     0CD1  0839               	movf	___fldiv@aexp^(0+128),w
 10037     0CD2  0228               	subwf	??___fldiv^(0+128),w
 10038     0CD3  00AA               	movwf	(??___fldiv+2)^(0+128)
 10039     0CD4  1C03               	skipc
 10040     0CD5  03AB               	decf	((??___fldiv+2)^(0+128)+1),f
 10041     0CD6  082A               	movf	(??___fldiv+2)^(0+128),w
 10042     0CD7  3E7F               	addlw	127
 10043     0CD8  00B2               	movwf	___fldiv@new_exp^(0+128)
 10044     0CD9  3000               	movlw	0
 10045     0CDA  3D2B               	addwfc	(??___fldiv+3)^(0+128),w
 10046     0CDB  00B3               	movwf	(___fldiv@new_exp+1)^(0+128)
 10047     0CDC                     l7049:
 10048     0CDC  0827               	movf	(___fldiv@b+3)^(0+128),w
 10049     0CDD  00B0               	movwf	(___fldiv@rem+3)^(0+128)
 10050     0CDE  0826               	movf	(___fldiv@b+2)^(0+128),w
 10051     0CDF  00AF               	movwf	(___fldiv@rem+2)^(0+128)
 10052     0CE0  0825               	movf	(___fldiv@b+1)^(0+128),w
 10053     0CE1  00AE               	movwf	(___fldiv@rem+1)^(0+128)
 10054     0CE2  0824               	movf	___fldiv@b^(0+128),w
 10055     0CE3  00AD               	movwf	___fldiv@rem^(0+128)
 10056     0CE4                     l7051:
 10057     0CE4  3000               	movlw	0
 10058     0CE5  00A7               	movwf	(___fldiv@b+3)^(0+128)
 10059     0CE6  3000               	movlw	0
 10060     0CE7  00A6               	movwf	(___fldiv@b+2)^(0+128)
 10061     0CE8  3000               	movlw	0
 10062     0CE9  00A5               	movwf	(___fldiv@b+1)^(0+128)
 10063     0CEA  3000               	movlw	0
 10064     0CEB  00A4               	movwf	___fldiv@b^(0+128)
 10065     0CEC                     l7053:
 10066     0CEC  3000               	movlw	0
 10067     0CED  00B7               	movwf	(___fldiv@grs+3)^(0+128)
 10068     0CEE  3000               	movlw	0
 10069     0CEF  00B6               	movwf	(___fldiv@grs+2)^(0+128)
 10070     0CF0  3000               	movlw	0
 10071     0CF1  00B5               	movwf	(___fldiv@grs+1)^(0+128)
 10072     0CF2  3000               	movlw	0
 10073     0CF3  00B4               	movwf	___fldiv@grs^(0+128)
 10074     0CF4                     l7055:
 10075     0CF4  01B9               	clrf	___fldiv@aexp^(0+128)
 10076     0CF5  2D32               	goto	l7075
 10077     0CF6                     l7057:
 10078     0CF6  0839               	movf	___fldiv@aexp^(0+128),w
 10079     0CF7  1903               	btfsc	3,2
 10080     0CF8  2CFA               	goto	u8911
 10081     0CF9  2CFB               	goto	u8910
 10082     0CFA                     u8911:
 10083     0CFA  2D15               	goto	l7067
 10084     0CFB                     u8910:
 10085     0CFB                     l7059:
 10086     0CFB  3001               	movlw	1
 10087     0CFC                     u8925:
 10088     0CFC  35AD               	lslf	___fldiv@rem^(0+128),f
 10089     0CFD  0DAE               	rlf	(___fldiv@rem+1)^(0+128),f
 10090     0CFE  0DAF               	rlf	(___fldiv@rem+2)^(0+128),f
 10091     0CFF  0DB0               	rlf	(___fldiv@rem+3)^(0+128),f
 10092     0D00  0B89               	decfsz	9,f
 10093     0D01  2CFC               	goto	u8925
 10094     0D02  3001               	movlw	1
 10095     0D03                     u8935:
 10096     0D03  35A4               	lslf	___fldiv@b^(0+128),f
 10097     0D04  0DA5               	rlf	(___fldiv@b+1)^(0+128),f
 10098     0D05  0DA6               	rlf	(___fldiv@b+2)^(0+128),f
 10099     0D06  0DA7               	rlf	(___fldiv@b+3)^(0+128),f
 10100     0D07  0B89               	decfsz	9,f
 10101     0D08  2D03               	goto	u8935
 10102     0D09                     l7061:
 10103     0D09  1FB7               	btfss	(___fldiv@grs+3)^(0+128),7
 10104     0D0A  2D0C               	goto	u8941
 10105     0D0B  2D0D               	goto	u8940
 10106     0D0C                     u8941:
 10107     0D0C  2D0E               	goto	l7065
 10108     0D0D                     u8940:
 10109     0D0D                     l7063:
 10110     0D0D  1424               	bsf	___fldiv@b^(0+128),0
 10111     0D0E                     l7065:
 10112     0D0E  3001               	movlw	1
 10113     0D0F                     u8955:
 10114     0D0F  35B4               	lslf	___fldiv@grs^(0+128),f
 10115     0D10  0DB5               	rlf	(___fldiv@grs+1)^(0+128),f
 10116     0D11  0DB6               	rlf	(___fldiv@grs+2)^(0+128),f
 10117     0D12  0DB7               	rlf	(___fldiv@grs+3)^(0+128),f
 10118     0D13  0B89               	decfsz	9,f
 10119     0D14  2D0F               	goto	u8955
 10120     0D15                     l7067:
 10121     0D15  0823               	movf	(___fldiv@a+3)^(0+128),w
 10122     0D16  0230               	subwf	(___fldiv@rem+3)^(0+128),w
 10123     0D17  1D03               	skipz
 10124     0D18  2D23               	goto	u8965
 10125     0D19  0822               	movf	(___fldiv@a+2)^(0+128),w
 10126     0D1A  022F               	subwf	(___fldiv@rem+2)^(0+128),w
 10127     0D1B  1D03               	skipz
 10128     0D1C  2D23               	goto	u8965
 10129     0D1D  0821               	movf	(___fldiv@a+1)^(0+128),w
 10130     0D1E  022E               	subwf	(___fldiv@rem+1)^(0+128),w
 10131     0D1F  1D03               	skipz
 10132     0D20  2D23               	goto	u8965
 10133     0D21  0820               	movf	___fldiv@a^(0+128),w
 10134     0D22  022D               	subwf	___fldiv@rem^(0+128),w
 10135     0D23                     u8965:
 10136     0D23  1C03               	skipc
 10137     0D24  2D26               	goto	u8961
 10138     0D25  2D27               	goto	u8960
 10139     0D26                     u8961:
 10140     0D26  2D30               	goto	l7073
 10141     0D27                     u8960:
 10142     0D27                     l7069:
 10143     0D27  1737               	bsf	(___fldiv@grs^(0+128)+3),6
 10144     0D28                     l7071:
 10145     0D28  0820               	movf	___fldiv@a^(0+128),w
 10146     0D29  02AD               	subwf	___fldiv@rem^(0+128),f
 10147     0D2A  0821               	movf	(___fldiv@a+1)^(0+128),w
 10148     0D2B  3BAE               	subwfb	(___fldiv@rem+1)^(0+128),f
 10149     0D2C  0822               	movf	(___fldiv@a+2)^(0+128),w
 10150     0D2D  3BAF               	subwfb	(___fldiv@rem+2)^(0+128),f
 10151     0D2E  0823               	movf	(___fldiv@a+3)^(0+128),w
 10152     0D2F  3BB0               	subwfb	(___fldiv@rem+3)^(0+128),f
 10153     0D30                     l7073:
 10154     0D30  3001               	movlw	1
 10155     0D31  07B9               	addwf	___fldiv@aexp^(0+128),f
 10156     0D32                     l7075:
 10157     0D32  301A               	movlw	26
 10158     0D33  0239               	subwf	___fldiv@aexp^(0+128),w
 10159     0D34  1C03               	skipc
 10160     0D35  2D37               	goto	u8971
 10161     0D36  2D38               	goto	u8970
 10162     0D37                     u8971:
 10163     0D37  2CF6               	goto	l7057
 10164     0D38                     u8970:
 10165     0D38                     l7077:
 10166     0D38  0830               	movf	(___fldiv@rem+3)^(0+128),w
 10167     0D39  042F               	iorwf	(___fldiv@rem+2)^(0+128),w
 10168     0D3A  042E               	iorwf	(___fldiv@rem+1)^(0+128),w
 10169     0D3B  042D               	iorwf	___fldiv@rem^(0+128),w
 10170     0D3C  1903               	skipnz
 10171     0D3D  2D3F               	goto	u8981
 10172     0D3E  2D40               	goto	u8980
 10173     0D3F                     u8981:
 10174     0D3F  2D59               	goto	l7091
 10175     0D40                     u8980:
 10176     0D40                     l7079:
 10177     0D40  1434               	bsf	___fldiv@grs^(0+128),0
 10178     0D41  2D59               	goto	l7091
 10179     0D42                     l7081:
 10180     0D42  3001               	movlw	1
 10181     0D43                     u8995:
 10182     0D43  35A4               	lslf	___fldiv@b^(0+128),f
 10183     0D44  0DA5               	rlf	(___fldiv@b+1)^(0+128),f
 10184     0D45  0DA6               	rlf	(___fldiv@b+2)^(0+128),f
 10185     0D46  0DA7               	rlf	(___fldiv@b+3)^(0+128),f
 10186     0D47  0B89               	decfsz	9,f
 10187     0D48  2D43               	goto	u8995
 10188     0D49                     l7083:
 10189     0D49  1FB7               	btfss	(___fldiv@grs+3)^(0+128),7
 10190     0D4A  2D4C               	goto	u9001
 10191     0D4B  2D4D               	goto	u9000
 10192     0D4C                     u9001:
 10193     0D4C  2D4E               	goto	l7087
 10194     0D4D                     u9000:
 10195     0D4D                     l7085:
 10196     0D4D  1424               	bsf	___fldiv@b^(0+128),0
 10197     0D4E                     l7087:
 10198     0D4E  3001               	movlw	1
 10199     0D4F                     u9015:
 10200     0D4F  35B4               	lslf	___fldiv@grs^(0+128),f
 10201     0D50  0DB5               	rlf	(___fldiv@grs+1)^(0+128),f
 10202     0D51  0DB6               	rlf	(___fldiv@grs+2)^(0+128),f
 10203     0D52  0DB7               	rlf	(___fldiv@grs+3)^(0+128),f
 10204     0D53  0B89               	decfsz	9,f
 10205     0D54  2D4F               	goto	u9015
 10206     0D55                     l7089:
 10207     0D55  30FF               	movlw	255
 10208     0D56  07B2               	addwf	___fldiv@new_exp^(0+128),f
 10209     0D57  30FF               	movlw	255
 10210     0D58  3DB3               	addwfc	(___fldiv@new_exp+1)^(0+128),f
 10211     0D59                     l7091:
 10212     0D59  1FA6               	btfss	(___fldiv@b+2)^(0+128),7
 10213     0D5A  2D5C               	goto	u9021
 10214     0D5B  2D5D               	goto	u9020
 10215     0D5C                     u9021:
 10216     0D5C  2D42               	goto	l7081
 10217     0D5D                     u9020:
 10218     0D5D                     l7093:
 10219     0D5D  01B9               	clrf	___fldiv@aexp^(0+128)
 10220     0D5E                     l7095:
 10221     0D5E  1FB7               	btfss	(___fldiv@grs+3)^(0+128),7
 10222     0D5F  2D61               	goto	u9031
 10223     0D60  2D62               	goto	u9030
 10224     0D61                     u9031:
 10225     0D61  2D7E               	goto	l7103
 10226     0D62                     u9030:
 10227     0D62                     l7097:
 10228     0D62  30FF               	movlw	255
 10229     0D63  0534               	andwf	___fldiv@grs^(0+128),w
 10230     0D64  00A8               	movwf	??___fldiv^(0+128)
 10231     0D65  30FF               	movlw	255
 10232     0D66  0535               	andwf	(___fldiv@grs+1)^(0+128),w
 10233     0D67  00A9               	movwf	(??___fldiv^(0+128)+1)
 10234     0D68  30FF               	movlw	255
 10235     0D69  0536               	andwf	(___fldiv@grs+2)^(0+128),w
 10236     0D6A  00AA               	movwf	(??___fldiv^(0+128)+2)
 10237     0D6B  307F               	movlw	127
 10238     0D6C  0537               	andwf	(___fldiv@grs+3)^(0+128),w
 10239     0D6D  00AB               	movwf	(??___fldiv^(0+128)+3)
 10240     0D6E  082B               	movf	(??___fldiv+3)^(0+128),w
 10241     0D6F  042A               	iorwf	(??___fldiv+2)^(0+128),w
 10242     0D70  0429               	iorwf	(??___fldiv+1)^(0+128),w
 10243     0D71  0428               	iorwf	??___fldiv^(0+128),w
 10244     0D72  1903               	skipnz
 10245     0D73  2D75               	goto	u9041
 10246     0D74  2D76               	goto	u9040
 10247     0D75                     u9041:
 10248     0D75  2D79               	goto	l1565
 10249     0D76                     u9040:
 10250     0D76                     l7099:
 10251     0D76  3001               	movlw	1
 10252     0D77  00B9               	movwf	___fldiv@aexp^(0+128)
 10253     0D78  2D7E               	goto	l7103
 10254     0D79                     l1565:
 10255     0D79  1C24               	btfss	___fldiv@b^(0+128),0
 10256     0D7A  2D7C               	goto	u9051
 10257     0D7B  2D7D               	goto	u9050
 10258     0D7C                     u9051:
 10259     0D7C  2D7E               	goto	l7103
 10260     0D7D                     u9050:
 10261     0D7D  2D76               	goto	l7099
 10262     0D7E                     l7103:
 10263     0D7E  0839               	movf	___fldiv@aexp^(0+128),w
 10264     0D7F  1903               	btfsc	3,2
 10265     0D80  2D82               	goto	u9061
 10266     0D81  2D83               	goto	u9060
 10267     0D82                     u9061:
 10268     0D82  2DA9               	goto	l7113
 10269     0D83                     u9060:
 10270     0D83                     l7105:
 10271     0D83  3001               	movlw	1
 10272     0D84  07A4               	addwf	___fldiv@b^(0+128),f
 10273     0D85  3000               	movlw	0
 10274     0D86  3DA5               	addwfc	(___fldiv@b+1)^(0+128),f
 10275     0D87  3DA6               	addwfc	(___fldiv@b+2)^(0+128),f
 10276     0D88  3DA7               	addwfc	(___fldiv@b+3)^(0+128),f
 10277     0D89                     l7107:
 10278     0D89  1C27               	btfss	(___fldiv@b+3)^(0+128),0
 10279     0D8A  2D8C               	goto	u9071
 10280     0D8B  2D8D               	goto	u9070
 10281     0D8C                     u9071:
 10282     0D8C  2DA9               	goto	l7113
 10283     0D8D                     u9070:
 10284     0D8D                     l7109:
 10285     0D8D  0824               	movf	___fldiv@b^(0+128),w
 10286     0D8E  00A8               	movwf	??___fldiv^(0+128)
 10287     0D8F  0825               	movf	(___fldiv@b+1)^(0+128),w
 10288     0D90  00A9               	movwf	(??___fldiv^(0+128)+1)
 10289     0D91  0826               	movf	(___fldiv@b+2)^(0+128),w
 10290     0D92  00AA               	movwf	(??___fldiv^(0+128)+2)
 10291     0D93  0827               	movf	(___fldiv@b+3)^(0+128),w
 10292     0D94  00AB               	movwf	(??___fldiv^(0+128)+3)
 10293     0D95  3001               	movlw	1
 10294     0D96  00AC               	movwf	(??___fldiv+4)^(0+128)
 10295     0D97                     u9085:
 10296     0D97  37AB               	asrf	(??___fldiv^(0+128)+3),f
 10297     0D98  0CAA               	rrf	(??___fldiv^(0+128)+2),f
 10298     0D99  0CA9               	rrf	(??___fldiv^(0+128)+1),f
 10299     0D9A  0CA8               	rrf	??___fldiv^(0+128),f
 10300     0D9B                     u9080:
 10301     0D9B  0BAC               	decfsz	(??___fldiv+4)^(0+128),f
 10302     0D9C  2D97               	goto	u9085
 10303     0D9D  082B               	movf	(??___fldiv+3)^(0+128),w
 10304     0D9E  00A7               	movwf	(___fldiv@b+3)^(0+128)
 10305     0D9F  082A               	movf	(??___fldiv+2)^(0+128),w
 10306     0DA0  00A6               	movwf	(___fldiv@b+2)^(0+128)
 10307     0DA1  0829               	movf	(??___fldiv+1)^(0+128),w
 10308     0DA2  00A5               	movwf	(___fldiv@b+1)^(0+128)
 10309     0DA3  0828               	movf	??___fldiv^(0+128),w
 10310     0DA4  00A4               	movwf	___fldiv@b^(0+128)
 10311     0DA5                     l7111:
 10312     0DA5  3001               	movlw	1
 10313     0DA6  07B2               	addwf	___fldiv@new_exp^(0+128),f
 10314     0DA7  3000               	movlw	0
 10315     0DA8  3DB3               	addwfc	(___fldiv@new_exp+1)^(0+128),f
 10316     0DA9                     l7113:
 10317     0DA9  0833               	movf	(___fldiv@new_exp+1)^(0+128),w
 10318     0DAA  3A80               	xorlw	128
 10319     0DAB  00A8               	movwf	??___fldiv^(0+128)
 10320     0DAC  3080               	movlw	128
 10321     0DAD  0228               	subwf	??___fldiv^(0+128),w
 10322     0DAE  1D03               	skipz
 10323     0DAF  2DB2               	goto	u9095
 10324     0DB0  30FF               	movlw	255
 10325     0DB1  0232               	subwf	___fldiv@new_exp^(0+128),w
 10326     0DB2                     u9095:
 10327     0DB2  1C03               	skipc
 10328     0DB3  2DB5               	goto	u9091
 10329     0DB4  2DB6               	goto	u9090
 10330     0DB5                     u9091:
 10331     0DB5  2DC3               	goto	l1570
 10332     0DB6                     u9090:
 10333     0DB6                     l7115:
 10334     0DB6  30FF               	movlw	255
 10335     0DB7  0021               	movlb	1	; select bank1
 10336     0DB8  00B2               	movwf	___fldiv@new_exp^(0+128)
 10337     0DB9  3000               	movlw	0
 10338     0DBA  00B3               	movwf	(___fldiv@new_exp^(0+128)+1)
 10339     0DBB  3000               	movlw	0
 10340     0DBC  00A7               	movwf	(___fldiv@b+3)^(0+128)
 10341     0DBD  3000               	movlw	0
 10342     0DBE  00A6               	movwf	(___fldiv@b+2)^(0+128)
 10343     0DBF  3000               	movlw	0
 10344     0DC0  00A5               	movwf	(___fldiv@b+1)^(0+128)
 10345     0DC1  3000               	movlw	0
 10346     0DC2  00A4               	movwf	___fldiv@b^(0+128)
 10347     0DC3                     l1570:
 10348     0DC3  0021               	movlb	1	; select bank1
 10349     0DC4  0833               	movf	(___fldiv@new_exp+1)^(0+128),w
 10350     0DC5  3A80               	xorlw	128
 10351     0DC6  00A8               	movwf	??___fldiv^(0+128)
 10352     0DC7  3080               	movlw	128
 10353     0DC8  0228               	subwf	??___fldiv^(0+128),w
 10354     0DC9  1D03               	skipz
 10355     0DCA  2DCD               	goto	u9105
 10356     0DCB  3001               	movlw	1
 10357     0DCC  0232               	subwf	___fldiv@new_exp^(0+128),w
 10358     0DCD                     u9105:
 10359     0DCD  1803               	skipnc
 10360     0DCE  2DD0               	goto	u9101
 10361     0DCF  2DD1               	goto	u9100
 10362     0DD0                     u9101:
 10363     0DD0  2DDD               	goto	l1571
 10364     0DD1                     u9100:
 10365     0DD1                     l7117:
 10366     0DD1  0021               	movlb	1	; select bank1
 10367     0DD2  01B2               	clrf	___fldiv@new_exp^(0+128)
 10368     0DD3  01B3               	clrf	(___fldiv@new_exp+1)^(0+128)
 10369     0DD4                     l7119:
 10370     0DD4  3000               	movlw	0
 10371     0DD5  00A7               	movwf	(___fldiv@b+3)^(0+128)
 10372     0DD6  3000               	movlw	0
 10373     0DD7  00A6               	movwf	(___fldiv@b+2)^(0+128)
 10374     0DD8  3000               	movlw	0
 10375     0DD9  00A5               	movwf	(___fldiv@b+1)^(0+128)
 10376     0DDA  3000               	movlw	0
 10377     0DDB  00A4               	movwf	___fldiv@b^(0+128)
 10378     0DDC                     l7121:
 10379     0DDC  01B1               	clrf	___fldiv@sign^(0+128)
 10380     0DDD                     l1571:
 10381     0DDD  0021               	movlb	1	; select bank1
 10382     0DDE  0832               	movf	___fldiv@new_exp^(0+128),w
 10383     0DDF  00B8               	movwf	___fldiv@bexp^(0+128)
 10384     0DE0                     l7123:
 10385     0DE0  1C38               	btfss	___fldiv@bexp^(0+128),0
 10386     0DE1  2DE3               	goto	u9111
 10387     0DE2  2DE4               	goto	u9110
 10388     0DE3                     u9111:
 10389     0DE3  2DE6               	goto	l7127
 10390     0DE4                     u9110:
 10391     0DE4                     l7125:
 10392     0DE4  17A6               	bsf	(___fldiv@b^(0+128)+2),7
 10393     0DE5  2DE8               	goto	l1573
 10394     0DE6                     l7127:
 10395     0DE6  307F               	movlw	127
 10396     0DE7  05A6               	andwf	(___fldiv@b^(0+128)+2),f
 10397     0DE8                     l1573:
 10398     0DE8  0838               	movf	___fldiv@bexp^(0+128),w
 10399     0DE9  00A8               	movwf	??___fldiv^(0+128)
 10400     0DEA  3001               	movlw	1
 10401     0DEB                     u9125:
 10402     0DEB  36A8               	lsrf	??___fldiv^(0+128),f
 10403     0DEC  0B89               	decfsz	9,f
 10404     0DED  2DEB               	goto	u9125
 10405     0DEE  0828               	movf	??___fldiv^(0+128),w
 10406     0DEF  00A7               	movwf	(___fldiv@b^(0+128)+3)
 10407     0DF0  0831               	movf	___fldiv@sign^(0+128),w
 10408     0DF1  04A7               	iorwf	(___fldiv@b^(0+128)+3),f
 10409     0DF2  2CB5               	goto	l7037
 10410     0DF3                     l1551:
 10411     0DF3  0008               	return
 10412     0DF4                     __end_of___fldiv:
 10413                           
 10414                           	psect	text7
 10415     0509                     __ptext7:	
 10416 ;; *************** function ___fladd *****************
 10417 ;; Defined at:
 10418 ;;		line 10 in file "C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\sprcadd.c"
 10419 ;; Parameters:    Size  Location     Type
 10420 ;;  b               4   14[BANK1 ] unsigned char 
 10421 ;;  a               4   18[BANK1 ] unsigned char 
 10422 ;; Auto vars:     Size  Location     Type
 10423 ;;  grs             1   33[BANK1 ] unsigned char 
 10424 ;;  bexp            1   32[BANK1 ] unsigned char 
 10425 ;;  aexp            1   31[BANK1 ] unsigned char 
 10426 ;;  signs           1   30[BANK1 ] unsigned char 
 10427 ;; Return value:  Size  Location     Type
 10428 ;;                  4   14[BANK1 ] unsigned char 
 10429 ;; Registers used:
 10430 ;;		wreg, status,2, status,0
 10431 ;; Tracked objects:
 10432 ;;		On entry : 0/0
 10433 ;;		On exit  : 0/0
 10434 ;;		Unchanged: 0/0
 10435 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10436 ;;      Params:         0       0       8       0       0       0       0       0       0       0       0       0       
      +0       0
 10437 ;;      Locals:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0
 10438 ;;      Temps:          0       0       8       0       0       0       0       0       0       0       0       0       
      +0       0
 10439 ;;      Totals:         0       0      20       0       0       0       0       0       0       0       0       0       
      +0       0
 10440 ;;Total ram usage:       20 bytes
 10441 ;; Hardware stack levels used: 1
 10442 ;; Hardware stack levels required when called: 5
 10443 ;; This function calls:
 10444 ;;		Nothing
 10445 ;; This function is called by:
 10446 ;;		_str2float
 10447 ;;		_getLedNumber
 10448 ;; This function uses a non-reentrant model
 10449 ;;
 10450                           
 10451     0509                     ___fladd:	
 10452                           ;psect for function ___fladd
 10453                           
 10454     0509                     l6797:	
 10455                           ;incstack = 0
 10456                           ; Regs used in ___fladd: [wreg+status,2+status,0]
 10457                           
 10458     0509  0021               	movlb	1	; select bank1
 10459     050A  0831               	movf	(___fladd@b^(0+128)+3),w
 10460     050B  3980               	andlw	128
 10461     050C  00BE               	movwf	___fladd@signs^(0+128)
 10462     050D                     l6799:
 10463     050D  3531               	lslf	(___fladd@b^(0+128)+3),w
 10464     050E  00C0               	movwf	___fladd@bexp^(0+128)
 10465     050F                     l6801:
 10466     050F  1FB0               	btfss	(___fladd@b^(0+128)+2),7
 10467     0510  2D12               	goto	u8371
 10468     0511  2D13               	goto	u8370
 10469     0512                     u8371:
 10470     0512  2D14               	goto	l6805
 10471     0513                     u8370:
 10472     0513                     l6803:
 10473     0513  1440               	bsf	___fladd@bexp^(0+128),0
 10474     0514                     l6805:
 10475     0514  0840               	movf	___fladd@bexp^(0+128),w
 10476     0515  1903               	btfsc	3,2
 10477     0516  2D18               	goto	u8381
 10478     0517  2D19               	goto	u8380
 10479     0518                     u8381:
 10480     0518  2D29               	goto	l6815
 10481     0519                     u8380:
 10482     0519                     l6807:
 10483     0519  0A40               	incf	___fladd@bexp^(0+128),w
 10484     051A  1D03               	btfss	3,2
 10485     051B  2D1D               	goto	u8391
 10486     051C  2D1E               	goto	u8390
 10487     051D                     u8391:
 10488     051D  2D26               	goto	l6811
 10489     051E                     u8390:
 10490     051E                     l6809:
 10491     051E  3000               	movlw	0
 10492     051F  00B1               	movwf	(___fladd@b+3)^(0+128)
 10493     0520  3000               	movlw	0
 10494     0521  00B0               	movwf	(___fladd@b+2)^(0+128)
 10495     0522  3000               	movlw	0
 10496     0523  00AF               	movwf	(___fladd@b+1)^(0+128)
 10497     0524  3000               	movlw	0
 10498     0525  00AE               	movwf	___fladd@b^(0+128)
 10499     0526                     l6811:
 10500     0526  17B0               	bsf	(___fladd@b^(0+128)+2),7
 10501     0527                     l6813:
 10502     0527  01B1               	clrf	(___fladd@b^(0+128)+3)
 10503     0528  2D31               	goto	l6817
 10504     0529                     l6815:
 10505     0529  3000               	movlw	0
 10506     052A  00B1               	movwf	(___fladd@b+3)^(0+128)
 10507     052B  3000               	movlw	0
 10508     052C  00B0               	movwf	(___fladd@b+2)^(0+128)
 10509     052D  3000               	movlw	0
 10510     052E  00AF               	movwf	(___fladd@b+1)^(0+128)
 10511     052F  3000               	movlw	0
 10512     0530  00AE               	movwf	___fladd@b^(0+128)
 10513     0531                     l6817:
 10514     0531  0835               	movf	(___fladd@a^(0+128)+3),w
 10515     0532  3980               	andlw	128
 10516     0533  00BF               	movwf	___fladd@aexp^(0+128)
 10517     0534                     l6819:
 10518     0534  083F               	movf	___fladd@aexp^(0+128),w
 10519     0535  063E               	xorwf	___fladd@signs^(0+128),w
 10520     0536  1903               	skipnz
 10521     0537  2D39               	goto	u8401
 10522     0538  2D3A               	goto	u8400
 10523     0539                     u8401:
 10524     0539  2D3B               	goto	l6823
 10525     053A                     u8400:
 10526     053A                     l6821:
 10527     053A  173E               	bsf	___fladd@signs^(0+128),6
 10528     053B                     l6823:
 10529     053B  3535               	lslf	(___fladd@a^(0+128)+3),w
 10530     053C  00BF               	movwf	___fladd@aexp^(0+128)
 10531     053D                     l6825:
 10532     053D  1FB4               	btfss	(___fladd@a^(0+128)+2),7
 10533     053E  2D40               	goto	u8411
 10534     053F  2D41               	goto	u8410
 10535     0540                     u8411:
 10536     0540  2D42               	goto	l6829
 10537     0541                     u8410:
 10538     0541                     l6827:
 10539     0541  143F               	bsf	___fladd@aexp^(0+128),0
 10540     0542                     l6829:
 10541     0542  083F               	movf	___fladd@aexp^(0+128),w
 10542     0543  1903               	btfsc	3,2
 10543     0544  2D46               	goto	u8421
 10544     0545  2D47               	goto	u8420
 10545     0546                     u8421:
 10546     0546  2D57               	goto	l6839
 10547     0547                     u8420:
 10548     0547                     l6831:
 10549     0547  0A3F               	incf	___fladd@aexp^(0+128),w
 10550     0548  1D03               	btfss	3,2
 10551     0549  2D4B               	goto	u8431
 10552     054A  2D4C               	goto	u8430
 10553     054B                     u8431:
 10554     054B  2D54               	goto	l6835
 10555     054C                     u8430:
 10556     054C                     l6833:
 10557     054C  3000               	movlw	0
 10558     054D  00B5               	movwf	(___fladd@a+3)^(0+128)
 10559     054E  3000               	movlw	0
 10560     054F  00B4               	movwf	(___fladd@a+2)^(0+128)
 10561     0550  3000               	movlw	0
 10562     0551  00B3               	movwf	(___fladd@a+1)^(0+128)
 10563     0552  3000               	movlw	0
 10564     0553  00B2               	movwf	___fladd@a^(0+128)
 10565     0554                     l6835:
 10566     0554  17B4               	bsf	(___fladd@a^(0+128)+2),7
 10567     0555                     l6837:
 10568     0555  01B5               	clrf	(___fladd@a^(0+128)+3)
 10569     0556  2D5F               	goto	l1493
 10570     0557                     l6839:
 10571     0557  3000               	movlw	0
 10572     0558  00B5               	movwf	(___fladd@a+3)^(0+128)
 10573     0559  3000               	movlw	0
 10574     055A  00B4               	movwf	(___fladd@a+2)^(0+128)
 10575     055B  3000               	movlw	0
 10576     055C  00B3               	movwf	(___fladd@a+1)^(0+128)
 10577     055D  3000               	movlw	0
 10578     055E  00B2               	movwf	___fladd@a^(0+128)
 10579     055F                     l1493:
 10580     055F  0840               	movf	___fladd@bexp^(0+128),w
 10581     0560  023F               	subwf	___fladd@aexp^(0+128),w
 10582     0561  1803               	skipnc
 10583     0562  2D64               	goto	u8441
 10584     0563  2D65               	goto	u8440
 10585     0564                     u8441:
 10586     0564  2D89               	goto	l6875
 10587     0565                     u8440:
 10588     0565                     l6841:
 10589     0565  1F3E               	btfss	___fladd@signs^(0+128),6
 10590     0566  2D68               	goto	u8451
 10591     0567  2D69               	goto	u8450
 10592     0568                     u8451:
 10593     0568  2D6B               	goto	l6845
 10594     0569                     u8450:
 10595     0569                     l6843:
 10596     0569  3080               	movlw	128
 10597     056A  06BE               	xorwf	___fladd@signs^(0+128),f
 10598     056B                     l6845:
 10599     056B  0840               	movf	___fladd@bexp^(0+128),w
 10600     056C  00C1               	movwf	___fladd@grs^(0+128)
 10601     056D                     l6847:
 10602     056D  083F               	movf	___fladd@aexp^(0+128),w
 10603     056E  00C0               	movwf	___fladd@bexp^(0+128)
 10604     056F                     l6849:
 10605     056F  0841               	movf	___fladd@grs^(0+128),w
 10606     0570  00BF               	movwf	___fladd@aexp^(0+128)
 10607     0571                     l6851:
 10608     0571  082E               	movf	___fladd@b^(0+128),w
 10609     0572  00C1               	movwf	___fladd@grs^(0+128)
 10610     0573                     l6853:
 10611     0573  0832               	movf	___fladd@a^(0+128),w
 10612     0574  00AE               	movwf	___fladd@b^(0+128)
 10613     0575                     l6855:
 10614     0575  0841               	movf	___fladd@grs^(0+128),w
 10615     0576  00B2               	movwf	___fladd@a^(0+128)
 10616     0577                     l6857:
 10617     0577  082F               	movf	(___fladd@b^(0+128)+1),w
 10618     0578  00C1               	movwf	___fladd@grs^(0+128)
 10619     0579                     l6859:
 10620     0579  0833               	movf	(___fladd@a^(0+128)+1),w
 10621     057A  00AF               	movwf	(___fladd@b^(0+128)+1)
 10622     057B                     l6861:
 10623     057B  0841               	movf	___fladd@grs^(0+128),w
 10624     057C  00B3               	movwf	(___fladd@a^(0+128)+1)
 10625     057D                     l6863:
 10626     057D  0830               	movf	(___fladd@b^(0+128)+2),w
 10627     057E  00C1               	movwf	___fladd@grs^(0+128)
 10628     057F                     l6865:
 10629     057F  0834               	movf	(___fladd@a^(0+128)+2),w
 10630     0580  00B0               	movwf	(___fladd@b^(0+128)+2)
 10631     0581                     l6867:
 10632     0581  0841               	movf	___fladd@grs^(0+128),w
 10633     0582  00B4               	movwf	(___fladd@a^(0+128)+2)
 10634     0583                     l6869:
 10635     0583  0831               	movf	(___fladd@b^(0+128)+3),w
 10636     0584  00C1               	movwf	___fladd@grs^(0+128)
 10637     0585                     l6871:
 10638     0585  0835               	movf	(___fladd@a^(0+128)+3),w
 10639     0586  00B1               	movwf	(___fladd@b^(0+128)+3)
 10640     0587                     l6873:
 10641     0587  0841               	movf	___fladd@grs^(0+128),w
 10642     0588  00B5               	movwf	(___fladd@a^(0+128)+3)
 10643     0589                     l6875:
 10644     0589  01C1               	clrf	___fladd@grs^(0+128)
 10645     058A                     l6877:
 10646     058A  083F               	movf	___fladd@aexp^(0+128),w
 10647     058B  00B6               	movwf	??___fladd^(0+128)
 10648     058C  01B7               	clrf	(??___fladd^(0+128)+1)
 10649     058D  0837               	movf	(??___fladd+1)^(0+128),w
 10650     058E  00B9               	movwf	((??___fladd+2)^(0+128)+1)
 10651     058F  0840               	movf	___fladd@bexp^(0+128),w
 10652     0590  0236               	subwf	??___fladd^(0+128),w
 10653     0591  00B8               	movwf	(??___fladd+2)^(0+128)
 10654     0592  1C03               	skipc
 10655     0593  03B9               	decf	((??___fladd+2)^(0+128)+1),f
 10656     0594  0839               	movf	(??___fladd+3)^(0+128),w
 10657     0595  3A80               	xorlw	128
 10658     0596  00BA               	movwf	(??___fladd+4)^(0+128)
 10659     0597  3080               	movlw	128
 10660     0598  023A               	subwf	(??___fladd+4)^(0+128),w
 10661     0599  1D03               	skipz
 10662     059A  2D9D               	goto	u8465
 10663     059B  301A               	movlw	26
 10664     059C  0238               	subwf	(??___fladd+2)^(0+128),w
 10665     059D                     u8465:
 10666     059D  1C03               	skipc
 10667     059E  2DA0               	goto	u8461
 10668     059F  2DA1               	goto	u8460
 10669     05A0                     u8461:
 10670     05A0  2DD7               	goto	l6893
 10671     05A1                     u8460:
 10672     05A1                     l6879:
 10673     05A1  0021               	movlb	1	; select bank1
 10674     05A2  0831               	movf	(___fladd@b+3)^(0+128),w
 10675     05A3  0430               	iorwf	(___fladd@b+2)^(0+128),w
 10676     05A4  042F               	iorwf	(___fladd@b+1)^(0+128),w
 10677     05A5  042E               	iorwf	___fladd@b^(0+128),w
 10678     05A6  1D03               	skipz
 10679     05A7  2DA9               	goto	u8471
 10680     05A8  2DAB               	goto	u8470
 10681     05A9                     u8471:
 10682     05A9  3001               	movlw	1
 10683     05AA  2DAC               	goto	u8480
 10684     05AB                     u8470:
 10685     05AB  3000               	movlw	0
 10686     05AC                     u8480:
 10687     05AC  00C1               	movwf	___fladd@grs^(0+128)
 10688     05AD  3000               	movlw	0
 10689     05AE  00B1               	movwf	(___fladd@b+3)^(0+128)
 10690     05AF  3000               	movlw	0
 10691     05B0  00B0               	movwf	(___fladd@b+2)^(0+128)
 10692     05B1  3000               	movlw	0
 10693     05B2  00AF               	movwf	(___fladd@b+1)^(0+128)
 10694     05B3  3000               	movlw	0
 10695     05B4  00AE               	movwf	___fladd@b^(0+128)
 10696     05B5  083F               	movf	___fladd@aexp^(0+128),w
 10697     05B6  00C0               	movwf	___fladd@bexp^(0+128)
 10698     05B7  2DDE               	goto	l1497
 10699     05B8                     l1499:
 10700     05B8  1C41               	btfss	___fladd@grs^(0+128),0
 10701     05B9  2DBB               	goto	u8491
 10702     05BA  2DBC               	goto	u8490
 10703     05BB                     u8491:
 10704     05BB  2DC6               	goto	l6883
 10705     05BC                     u8490:
 10706     05BC                     l6881:
 10707     05BC  0841               	movf	___fladd@grs^(0+128),w
 10708     05BD  00B6               	movwf	??___fladd^(0+128)
 10709     05BE  3001               	movlw	1
 10710     05BF                     u8505:
 10711     05BF  36B6               	lsrf	??___fladd^(0+128),f
 10712     05C0  0B89               	decfsz	9,f
 10713     05C1  2DBF               	goto	u8505
 10714     05C2  0836               	movf	??___fladd^(0+128),w
 10715     05C3  3801               	iorlw	1
 10716     05C4  00C1               	movwf	___fladd@grs^(0+128)
 10717     05C5  2DC8               	goto	l6885
 10718     05C6                     l6883:
 10719     05C6  1003               	clrc
 10720     05C7  0CC1               	rrf	___fladd@grs^(0+128),f
 10721     05C8                     l6885:
 10722     05C8  1C2E               	btfss	___fladd@b^(0+128),0
 10723     05C9  2DCB               	goto	u8511
 10724     05CA  2DCC               	goto	u8510
 10725     05CB                     u8511:
 10726     05CB  2DCD               	goto	l6889
 10727     05CC                     u8510:
 10728     05CC                     l6887:
 10729     05CC  17C1               	bsf	___fladd@grs^(0+128),7
 10730     05CD                     l6889:
 10731     05CD  3001               	movlw	1
 10732     05CE  00B6               	movwf	??___fladd^(0+128)
 10733     05CF                     u8525:
 10734     05CF  37B1               	asrf	(___fladd@b+3)^(0+128),f
 10735     05D0  0CB0               	rrf	(___fladd@b+2)^(0+128),f
 10736     05D1  0CAF               	rrf	(___fladd@b+1)^(0+128),f
 10737     05D2  0CAE               	rrf	___fladd@b^(0+128),f
 10738     05D3  0BB6               	decfsz	(??___fladd^(0+128))& (0+127),f
 10739     05D4  2DCF               	goto	u8525
 10740     05D5                     l6891:
 10741     05D5  3001               	movlw	1
 10742     05D6  07C0               	addwf	___fladd@bexp^(0+128),f
 10743     05D7                     l6893:
 10744     05D7  0021               	movlb	1	; select bank1
 10745     05D8  083F               	movf	___fladd@aexp^(0+128),w
 10746     05D9  0240               	subwf	___fladd@bexp^(0+128),w
 10747     05DA  1C03               	skipc
 10748     05DB  2DDD               	goto	u8531
 10749     05DC  2DDE               	goto	u8530
 10750     05DD                     u8531:
 10751     05DD  2DB8               	goto	l1499
 10752     05DE                     u8530:
 10753     05DE                     l1497:
 10754     05DE  1B3E               	btfsc	___fladd@signs^(0+128),6
 10755     05DF  2DE1               	goto	u8541
 10756     05E0  2DE2               	goto	u8540
 10757     05E1                     u8541:
 10758     05E1  2E1C               	goto	l6919
 10759     05E2                     u8540:
 10760     05E2                     l6895:
 10761     05E2  0840               	movf	___fladd@bexp^(0+128),w
 10762     05E3  1D03               	btfss	3,2
 10763     05E4  2DE6               	goto	u8551
 10764     05E5  2DE7               	goto	u8550
 10765     05E6                     u8551:
 10766     05E6  2DF0               	goto	l6901
 10767     05E7                     u8550:
 10768     05E7                     l6897:
 10769     05E7  3000               	movlw	0
 10770     05E8  00B1               	movwf	(?___fladd+3)^(0+128)
 10771     05E9  3000               	movlw	0
 10772     05EA  00B0               	movwf	(?___fladd+2)^(0+128)
 10773     05EB  3000               	movlw	0
 10774     05EC  00AF               	movwf	(?___fladd+1)^(0+128)
 10775     05ED  3000               	movlw	0
 10776     05EE  00AE               	movwf	?___fladd^(0+128)
 10777     05EF  2F14               	goto	l1506
 10778     05F0                     l6901:
 10779     05F0  0832               	movf	___fladd@a^(0+128),w
 10780     05F1  07AE               	addwf	___fladd@b^(0+128),f
 10781     05F2  0833               	movf	(___fladd@a+1)^(0+128),w
 10782     05F3  3DAF               	addwfc	(___fladd@b+1)^(0+128),f
 10783     05F4  0834               	movf	(___fladd@a+2)^(0+128),w
 10784     05F5  3DB0               	addwfc	(___fladd@b+2)^(0+128),f
 10785     05F6  0835               	movf	(___fladd@a+3)^(0+128),w
 10786     05F7  3DB1               	addwfc	(___fladd@b+3)^(0+128),f
 10787     05F8                     l6903:
 10788     05F8  1C31               	btfss	(___fladd@b+3)^(0+128),0
 10789     05F9  2DFB               	goto	u8561
 10790     05FA  2DFC               	goto	u8560
 10791     05FB                     u8561:
 10792     05FB  2EA6               	goto	l6955
 10793     05FC                     u8560:
 10794     05FC                     l6905:
 10795     05FC  1C41               	btfss	___fladd@grs^(0+128),0
 10796     05FD  2DFF               	goto	u8571
 10797     05FE  2E00               	goto	u8570
 10798     05FF                     u8571:
 10799     05FF  2E0A               	goto	l6909
 10800     0600                     u8570:
 10801     0600                     l6907:
 10802     0600  0841               	movf	___fladd@grs^(0+128),w
 10803     0601  00B6               	movwf	??___fladd^(0+128)
 10804     0602  3001               	movlw	1
 10805     0603                     u8585:
 10806     0603  36B6               	lsrf	??___fladd^(0+128),f
 10807     0604  0B89               	decfsz	9,f
 10808     0605  2E03               	goto	u8585
 10809     0606  0836               	movf	??___fladd^(0+128),w
 10810     0607  3801               	iorlw	1
 10811     0608  00C1               	movwf	___fladd@grs^(0+128)
 10812     0609  2E0C               	goto	l6911
 10813     060A                     l6909:
 10814     060A  1003               	clrc
 10815     060B  0CC1               	rrf	___fladd@grs^(0+128),f
 10816     060C                     l6911:
 10817     060C  1C2E               	btfss	___fladd@b^(0+128),0
 10818     060D  2E0F               	goto	u8591
 10819     060E  2E10               	goto	u8590
 10820     060F                     u8591:
 10821     060F  2E11               	goto	l6915
 10822     0610                     u8590:
 10823     0610                     l6913:
 10824     0610  17C1               	bsf	___fladd@grs^(0+128),7
 10825     0611                     l6915:
 10826     0611  3001               	movlw	1
 10827     0612  00B6               	movwf	??___fladd^(0+128)
 10828     0613                     u8605:
 10829     0613  37B1               	asrf	(___fladd@b+3)^(0+128),f
 10830     0614  0CB0               	rrf	(___fladd@b+2)^(0+128),f
 10831     0615  0CAF               	rrf	(___fladd@b+1)^(0+128),f
 10832     0616  0CAE               	rrf	___fladd@b^(0+128),f
 10833     0617  0BB6               	decfsz	(??___fladd^(0+128))& (0+127),f
 10834     0618  2E13               	goto	u8605
 10835     0619                     l6917:
 10836     0619  3001               	movlw	1
 10837     061A  07C0               	addwf	___fladd@bexp^(0+128),f
 10838     061B  2EA6               	goto	l6955
 10839     061C                     l6919:
 10840     061C  0831               	movf	(___fladd@b+3)^(0+128),w
 10841     061D  3A80               	xorlw	128
 10842     061E  00B6               	movwf	??___fladd^(0+128)
 10843     061F  0835               	movf	(___fladd@a+3)^(0+128),w
 10844     0620  3A80               	xorlw	128
 10845     0621  0236               	subwf	??___fladd^(0+128),w
 10846     0622  1D03               	skipz
 10847     0623  2E2E               	goto	u8613
 10848     0624  0834               	movf	(___fladd@a+2)^(0+128),w
 10849     0625  0230               	subwf	(___fladd@b+2)^(0+128),w
 10850     0626  1D03               	skipz
 10851     0627  2E2E               	goto	u8613
 10852     0628  0833               	movf	(___fladd@a+1)^(0+128),w
 10853     0629  022F               	subwf	(___fladd@b+1)^(0+128),w
 10854     062A  1D03               	skipz
 10855     062B  2E2E               	goto	u8613
 10856     062C  0832               	movf	___fladd@a^(0+128),w
 10857     062D  022E               	subwf	___fladd@b^(0+128),w
 10858     062E                     u8613:
 10859     062E  1803               	skipnc
 10860     062F  2E31               	goto	u8611
 10861     0630  2E32               	goto	u8610
 10862     0631                     u8611:
 10863     0631  2E67               	goto	l6931
 10864     0632                     u8610:
 10865     0632                     l6921:
 10866     0632  30FF               	movlw	255
 10867     0633  00B6               	movwf	??___fladd^(0+128)
 10868     0634  30FF               	movlw	255
 10869     0635  00B7               	movwf	(??___fladd^(0+128)+1)
 10870     0636  30FF               	movlw	255
 10871     0637  00B8               	movwf	(??___fladd^(0+128)+2)
 10872     0638  30FF               	movlw	255
 10873     0639  00B9               	movwf	(??___fladd^(0+128)+3)
 10874     063A  082E               	movf	___fladd@b^(0+128),w
 10875     063B  0232               	subwf	___fladd@a^(0+128),w
 10876     063C  00BA               	movwf	(??___fladd+4)^(0+128)
 10877     063D  082F               	movf	(___fladd@b+1)^(0+128),w
 10878     063E  3B33               	subwfb	(___fladd@a+1)^(0+128),w
 10879     063F  00BB               	movwf	((??___fladd+4)^(0+128)+1)
 10880     0640  0830               	movf	(___fladd@b+2)^(0+128),w
 10881     0641  3B34               	subwfb	(___fladd@a+2)^(0+128),w
 10882     0642  00BC               	movwf	((??___fladd+4)^(0+128)+2)
 10883     0643  0831               	movf	(___fladd@b+3)^(0+128),w
 10884     0644  3B35               	subwfb	(___fladd@a+3)^(0+128),w
 10885     0645  00BD               	movwf	((??___fladd+4)^(0+128)+3)
 10886     0646  083A               	movf	(??___fladd+4)^(0+128),w
 10887     0647  07B6               	addwf	??___fladd^(0+128),f
 10888     0648  083B               	movf	(??___fladd+5)^(0+128),w
 10889     0649  3DB7               	addwfc	(??___fladd^(0+128)+1),f
 10890     064A  083C               	movf	(??___fladd+6)^(0+128),w
 10891     064B  3DB8               	addwfc	(??___fladd^(0+128)+2),f
 10892     064C  083D               	movf	(??___fladd+7)^(0+128),w
 10893     064D  3DB9               	addwfc	(??___fladd^(0+128)+3),f
 10894     064E  0839               	movf	(??___fladd+3)^(0+128),w
 10895     064F  00B1               	movwf	(___fladd@b+3)^(0+128)
 10896     0650  0838               	movf	(??___fladd+2)^(0+128),w
 10897     0651  00B0               	movwf	(___fladd@b+2)^(0+128)
 10898     0652  0837               	movf	(??___fladd+1)^(0+128),w
 10899     0653  00AF               	movwf	(___fladd@b+1)^(0+128)
 10900     0654  0836               	movf	??___fladd^(0+128),w
 10901     0655  00AE               	movwf	___fladd@b^(0+128)
 10902     0656                     l6923:
 10903     0656  3080               	movlw	128
 10904     0657  06BE               	xorwf	___fladd@signs^(0+128),f
 10905     0658                     l6925:
 10906     0658  0341               	decf	___fladd@grs^(0+128),w
 10907     0659  3AFF               	xorlw	255
 10908     065A  00C1               	movwf	___fladd@grs^(0+128)
 10909     065B                     l6927:
 10910     065B  0841               	movf	___fladd@grs^(0+128),w
 10911     065C  1D03               	btfss	3,2
 10912     065D  2E5F               	goto	u8621
 10913     065E  2E60               	goto	u8620
 10914     065F                     u8621:
 10915     065F  2E6F               	goto	l1514
 10916     0660                     u8620:
 10917     0660                     l6929:
 10918     0660  3001               	movlw	1
 10919     0661  07AE               	addwf	___fladd@b^(0+128),f
 10920     0662  3000               	movlw	0
 10921     0663  3DAF               	addwfc	(___fladd@b+1)^(0+128),f
 10922     0664  3DB0               	addwfc	(___fladd@b+2)^(0+128),f
 10923     0665  3DB1               	addwfc	(___fladd@b+3)^(0+128),f
 10924     0666  2E6F               	goto	l1514
 10925     0667                     l6931:
 10926     0667  0832               	movf	___fladd@a^(0+128),w
 10927     0668  02AE               	subwf	___fladd@b^(0+128),f
 10928     0669  0833               	movf	(___fladd@a+1)^(0+128),w
 10929     066A  3BAF               	subwfb	(___fladd@b+1)^(0+128),f
 10930     066B  0834               	movf	(___fladd@a+2)^(0+128),w
 10931     066C  3BB0               	subwfb	(___fladd@b+2)^(0+128),f
 10932     066D  0835               	movf	(___fladd@a+3)^(0+128),w
 10933     066E  3BB1               	subwfb	(___fladd@b+3)^(0+128),f
 10934     066F                     l1514:
 10935     066F  0831               	movf	(___fladd@b+3)^(0+128),w
 10936     0670  0430               	iorwf	(___fladd@b+2)^(0+128),w
 10937     0671  042F               	iorwf	(___fladd@b+1)^(0+128),w
 10938     0672  042E               	iorwf	___fladd@b^(0+128),w
 10939     0673  1D03               	skipz
 10940     0674  2E76               	goto	u8631
 10941     0675  2E77               	goto	u8630
 10942     0676                     u8631:
 10943     0676  2EA2               	goto	l6953
 10944     0677                     u8630:
 10945     0677                     l6933:
 10946     0677  0841               	movf	___fladd@grs^(0+128),w
 10947     0678  1D03               	btfss	3,2
 10948     0679  2E7B               	goto	u8641
 10949     067A  2E7C               	goto	u8640
 10950     067B                     u8641:
 10951     067B  2EA2               	goto	l6953
 10952     067C                     u8640:
 10953     067C                     l6935:
 10954     067C  3000               	movlw	0
 10955     067D  00B1               	movwf	(?___fladd+3)^(0+128)
 10956     067E  3000               	movlw	0
 10957     067F  00B0               	movwf	(?___fladd+2)^(0+128)
 10958     0680  3000               	movlw	0
 10959     0681  00AF               	movwf	(?___fladd+1)^(0+128)
 10960     0682  3000               	movlw	0
 10961     0683  00AE               	movwf	?___fladd^(0+128)
 10962     0684  2F14               	goto	l1506
 10963     0685                     l6939:
 10964     0685  3001               	movlw	1
 10965     0686                     u8655:
 10966     0686  35AE               	lslf	___fladd@b^(0+128),f
 10967     0687  0DAF               	rlf	(___fladd@b+1)^(0+128),f
 10968     0688  0DB0               	rlf	(___fladd@b+2)^(0+128),f
 10969     0689  0DB1               	rlf	(___fladd@b+3)^(0+128),f
 10970     068A  0B89               	decfsz	9,f
 10971     068B  2E86               	goto	u8655
 10972     068C                     l6941:
 10973     068C  1FC1               	btfss	___fladd@grs^(0+128),7
 10974     068D  2E8F               	goto	u8661
 10975     068E  2E90               	goto	u8660
 10976     068F                     u8661:
 10977     068F  2E91               	goto	l1518
 10978     0690                     u8660:
 10979     0690                     l6943:
 10980     0690  142E               	bsf	___fladd@b^(0+128),0
 10981     0691                     l1518:
 10982     0691  1C41               	btfss	___fladd@grs^(0+128),0
 10983     0692  2E94               	goto	u8671
 10984     0693  2E95               	goto	u8670
 10985     0694                     u8671:
 10986     0694  2E99               	goto	l6947
 10987     0695                     u8670:
 10988     0695                     l6945:
 10989     0695  1403               	setc
 10990     0696  0D41               	rlf	___fladd@grs^(0+128),w
 10991     0697  00C1               	movwf	___fladd@grs^(0+128)
 10992     0698  2E9B               	goto	l6949
 10993     0699                     l6947:
 10994     0699  1003               	clrc
 10995     069A  0DC1               	rlf	___fladd@grs^(0+128),f
 10996     069B                     l6949:
 10997     069B  0840               	movf	___fladd@bexp^(0+128),w
 10998     069C  1903               	btfsc	3,2
 10999     069D  2E9F               	goto	u8681
 11000     069E  2EA0               	goto	u8680
 11001     069F                     u8681:
 11002     069F  2EA2               	goto	l6953
 11003     06A0                     u8680:
 11004     06A0                     l6951:
 11005     06A0  3001               	movlw	1
 11006     06A1  02C0               	subwf	___fladd@bexp^(0+128),f
 11007     06A2                     l6953:
 11008     06A2  1FB0               	btfss	(___fladd@b+2)^(0+128),7
 11009     06A3  2EA5               	goto	u8691
 11010     06A4  2EA6               	goto	u8690
 11011     06A5                     u8691:
 11012     06A5  2E85               	goto	l6939
 11013     06A6                     u8690:
 11014     06A6                     l6955:
 11015     06A6  01BF               	clrf	___fladd@aexp^(0+128)
 11016     06A7                     l6957:
 11017     06A7  1FC1               	btfss	___fladd@grs^(0+128),7
 11018     06A8  2EAA               	goto	u8701
 11019     06A9  2EAB               	goto	u8700
 11020     06AA                     u8701:
 11021     06AA  2EB9               	goto	l6965
 11022     06AB                     u8700:
 11023     06AB                     l6959:
 11024     06AB  0841               	movf	___fladd@grs^(0+128),w
 11025     06AC  397F               	andlw	127
 11026     06AD  1903               	btfsc	3,2
 11027     06AE  2EB0               	goto	u8711
 11028     06AF  2EB1               	goto	u8710
 11029     06B0                     u8711:
 11030     06B0  2EB4               	goto	l1524
 11031     06B1                     u8710:
 11032     06B1                     l6961:
 11033     06B1  3001               	movlw	1
 11034     06B2  00BF               	movwf	___fladd@aexp^(0+128)
 11035     06B3  2EB9               	goto	l6965
 11036     06B4                     l1524:
 11037     06B4  1C2E               	btfss	___fladd@b^(0+128),0
 11038     06B5  2EB7               	goto	u8721
 11039     06B6  2EB8               	goto	u8720
 11040     06B7                     u8721:
 11041     06B7  2EB9               	goto	l6965
 11042     06B8                     u8720:
 11043     06B8  2EB1               	goto	l6961
 11044     06B9                     l6965:
 11045     06B9  083F               	movf	___fladd@aexp^(0+128),w
 11046     06BA  1903               	btfsc	3,2
 11047     06BB  2EBD               	goto	u8731
 11048     06BC  2EBE               	goto	u8730
 11049     06BD                     u8731:
 11050     06BD  2EE7               	goto	l1527
 11051     06BE                     u8730:
 11052     06BE                     l6967:
 11053     06BE  3001               	movlw	1
 11054     06BF  07AE               	addwf	___fladd@b^(0+128),f
 11055     06C0  3000               	movlw	0
 11056     06C1  3DAF               	addwfc	(___fladd@b+1)^(0+128),f
 11057     06C2  3DB0               	addwfc	(___fladd@b+2)^(0+128),f
 11058     06C3  3DB1               	addwfc	(___fladd@b+3)^(0+128),f
 11059     06C4                     l6969:
 11060     06C4  1C31               	btfss	(___fladd@b+3)^(0+128),0
 11061     06C5  2EC7               	goto	u8741
 11062     06C6  2EC8               	goto	u8740
 11063     06C7                     u8741:
 11064     06C7  2EE7               	goto	l1527
 11065     06C8                     u8740:
 11066     06C8                     l6971:
 11067     06C8  082E               	movf	___fladd@b^(0+128),w
 11068     06C9  00B6               	movwf	??___fladd^(0+128)
 11069     06CA  082F               	movf	(___fladd@b+1)^(0+128),w
 11070     06CB  00B7               	movwf	(??___fladd^(0+128)+1)
 11071     06CC  0830               	movf	(___fladd@b+2)^(0+128),w
 11072     06CD  00B8               	movwf	(??___fladd^(0+128)+2)
 11073     06CE  0831               	movf	(___fladd@b+3)^(0+128),w
 11074     06CF  00B9               	movwf	(??___fladd^(0+128)+3)
 11075     06D0  3001               	movlw	1
 11076     06D1  00BA               	movwf	(??___fladd+4)^(0+128)
 11077     06D2                     u8755:
 11078     06D2  37B9               	asrf	(??___fladd^(0+128)+3),f
 11079     06D3  0CB8               	rrf	(??___fladd^(0+128)+2),f
 11080     06D4  0CB7               	rrf	(??___fladd^(0+128)+1),f
 11081     06D5  0CB6               	rrf	??___fladd^(0+128),f
 11082     06D6                     u8750:
 11083     06D6  0BBA               	decfsz	(??___fladd+4)^(0+128),f
 11084     06D7  2ED2               	goto	u8755
 11085     06D8  0839               	movf	(??___fladd+3)^(0+128),w
 11086     06D9  00B1               	movwf	(___fladd@b+3)^(0+128)
 11087     06DA  0838               	movf	(??___fladd+2)^(0+128),w
 11088     06DB  00B0               	movwf	(___fladd@b+2)^(0+128)
 11089     06DC  0837               	movf	(??___fladd+1)^(0+128),w
 11090     06DD  00AF               	movwf	(___fladd@b+1)^(0+128)
 11091     06DE  0836               	movf	??___fladd^(0+128),w
 11092     06DF  00AE               	movwf	___fladd@b^(0+128)
 11093     06E0  0A40               	incf	___fladd@bexp^(0+128),w
 11094     06E1  1903               	btfsc	3,2
 11095     06E2  2EE4               	goto	u8761
 11096     06E3  2EE5               	goto	u8760
 11097     06E4                     u8761:
 11098     06E4  2EE7               	goto	l1527
 11099     06E5                     u8760:
 11100     06E5                     l6973:
 11101     06E5  3001               	movlw	1
 11102     06E6  07C0               	addwf	___fladd@bexp^(0+128),f
 11103     06E7                     l1527:
 11104     06E7  0A40               	incf	___fladd@bexp^(0+128),w
 11105     06E8  1903               	btfsc	3,2
 11106     06E9  2EEB               	goto	u8771
 11107     06EA  2EEC               	goto	u8770
 11108     06EB                     u8771:
 11109     06EB  2EF1               	goto	l6977
 11110     06EC                     u8770:
 11111     06EC                     l6975:
 11112     06EC  0840               	movf	___fladd@bexp^(0+128),w
 11113     06ED  1D03               	btfss	3,2
 11114     06EE  2EF0               	goto	u8781
 11115     06EF  2EF1               	goto	u8780
 11116     06F0                     u8781:
 11117     06F0  2EFF               	goto	l6983
 11118     06F1                     u8780:
 11119     06F1                     l6977:
 11120     06F1  3000               	movlw	0
 11121     06F2  00B1               	movwf	(___fladd@b+3)^(0+128)
 11122     06F3  3000               	movlw	0
 11123     06F4  00B0               	movwf	(___fladd@b+2)^(0+128)
 11124     06F5  3000               	movlw	0
 11125     06F6  00AF               	movwf	(___fladd@b+1)^(0+128)
 11126     06F7  3000               	movlw	0
 11127     06F8  00AE               	movwf	___fladd@b^(0+128)
 11128     06F9                     l6979:
 11129     06F9  0840               	movf	___fladd@bexp^(0+128),w
 11130     06FA  1D03               	btfss	3,2
 11131     06FB  2EFD               	goto	u8791
 11132     06FC  2EFE               	goto	u8790
 11133     06FD                     u8791:
 11134     06FD  2EFF               	goto	l6983
 11135     06FE                     u8790:
 11136     06FE                     l6981:
 11137     06FE  01BE               	clrf	___fladd@signs^(0+128)
 11138     06FF                     l6983:
 11139     06FF  1C40               	btfss	___fladd@bexp^(0+128),0
 11140     0700  2F02               	goto	u8801
 11141     0701  2F03               	goto	u8800
 11142     0702                     u8801:
 11143     0702  2F05               	goto	l6987
 11144     0703                     u8800:
 11145     0703                     l6985:
 11146     0703  17B0               	bsf	(___fladd@b^(0+128)+2),7
 11147     0704  2F07               	goto	l1535
 11148     0705                     l6987:
 11149     0705  307F               	movlw	127
 11150     0706  05B0               	andwf	(___fladd@b^(0+128)+2),f
 11151     0707                     l1535:
 11152     0707  0840               	movf	___fladd@bexp^(0+128),w
 11153     0708  00B6               	movwf	??___fladd^(0+128)
 11154     0709  3001               	movlw	1
 11155     070A                     u8815:
 11156     070A  36B6               	lsrf	??___fladd^(0+128),f
 11157     070B  0B89               	decfsz	9,f
 11158     070C  2F0A               	goto	u8815
 11159     070D  0836               	movf	??___fladd^(0+128),w
 11160     070E  00B1               	movwf	(___fladd@b^(0+128)+3)
 11161     070F                     l6989:
 11162     070F  1FBE               	btfss	___fladd@signs^(0+128),7
 11163     0710  2F12               	goto	u8821
 11164     0711  2F13               	goto	u8820
 11165     0712                     u8821:
 11166     0712  2F14               	goto	l1536
 11167     0713                     u8820:
 11168     0713                     l6991:
 11169     0713  17B1               	bsf	(___fladd@b^(0+128)+3),7
 11170     0714                     l1536:
 11171     0714                     l1506:
 11172     0714  0008               	return
 11173     0715                     __end_of___fladd:
 11174                           
 11175                           	psect	text8
 11176     1D3D                     __ptext8:	
 11177 ;; *************** function _setSetpoint *****************
 11178 ;; Defined at:
 11179 ;;		line 44 in file "controller.c"
 11180 ;; Parameters:    Size  Location     Type
 11181 ;;  new_setpoint    2   15[BANK1 ] unsigned short 
 11182 ;; Auto vars:     Size  Location     Type
 11183 ;;		None
 11184 ;; Return value:  Size  Location     Type
 11185 ;;                  1    wreg      void 
 11186 ;; Registers used:
 11187 ;;		wreg
 11188 ;; Tracked objects:
 11189 ;;		On entry : 0/0
 11190 ;;		On exit  : 0/0
 11191 ;;		Unchanged: 0/0
 11192 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 11193 ;;      Params:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0
 11194 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11195 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11196 ;;      Totals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0
 11197 ;;Total ram usage:        2 bytes
 11198 ;; Hardware stack levels used: 1
 11199 ;; Hardware stack levels required when called: 5
 11200 ;; This function calls:
 11201 ;;		Nothing
 11202 ;; This function is called by:
 11203 ;;		_main
 11204 ;;		_uartHandler
 11205 ;; This function uses a non-reentrant model
 11206 ;;
 11207                           
 11208     1D3D                     _setSetpoint:	
 11209                           ;psect for function _setSetpoint
 11210                           
 11211     1D3D                     l7479:	
 11212                           ;incstack = 0
 11213                           ; Regs used in _setSetpoint: [wreg]
 11214                           
 11215     1D3D  0021               	movlb	1	; select bank1
 11216     1D3E  0830               	movf	(setSetpoint@new_setpoint+1)^(0+128),w
 11217     1D3F  00EE               	movwf	(_setpoint+1)^(0+128)
 11218     1D40  082F               	movf	setSetpoint@new_setpoint^(0+128),w
 11219     1D41  00ED               	movwf	_setpoint^(0+128)
 11220     1D42                     l975:
 11221     1D42  0008               	return
 11222     1D43                     __end_of_setSetpoint:
 11223                           
 11224                           	psect	text9
 11225     1EAE                     __ptext9:	
 11226 ;; *************** function _setKp *****************
 11227 ;; Defined at:
 11228 ;;		line 46 in file "controller.c"
 11229 ;; Parameters:    Size  Location     Type
 11230 ;;  new_kp          4   47[BANK1 ] float 
 11231 ;; Auto vars:     Size  Location     Type
 11232 ;;		None
 11233 ;; Return value:  Size  Location     Type
 11234 ;;                  1    wreg      void 
 11235 ;; Registers used:
 11236 ;;		wreg
 11237 ;; Tracked objects:
 11238 ;;		On entry : 0/0
 11239 ;;		On exit  : 0/0
 11240 ;;		Unchanged: 0/0
 11241 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 11242 ;;      Params:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0
 11243 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11244 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11245 ;;      Totals:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0
 11246 ;;Total ram usage:        4 bytes
 11247 ;; Hardware stack levels used: 1
 11248 ;; Hardware stack levels required when called: 5
 11249 ;; This function calls:
 11250 ;;		Nothing
 11251 ;; This function is called by:
 11252 ;;		_uartHandler
 11253 ;; This function uses a non-reentrant model
 11254 ;;
 11255                           
 11256     1EAE                     _setKp:	
 11257                           ;psect for function _setKp
 11258                           
 11259     1EAE                     l7589:	
 11260                           ;incstack = 0
 11261                           ; Regs used in _setKp: [wreg]
 11262                           
 11263     1EAE  0021               	movlb	1	; select bank1
 11264     1EAF  0852               	movf	(setKp@new_kp+3)^(0+128),w
 11265     1EB0  0022               	movlb	2	; select bank2
 11266     1EB1  00DB               	movwf	(_kp+3)^(0+256)
 11267     1EB2  0021               	movlb	1	; select bank1
 11268     1EB3  0851               	movf	(setKp@new_kp+2)^(0+128),w
 11269     1EB4  0022               	movlb	2	; select bank2
 11270     1EB5  00DA               	movwf	(_kp+2)^(0+256)
 11271     1EB6  0021               	movlb	1	; select bank1
 11272     1EB7  0850               	movf	(setKp@new_kp+1)^(0+128),w
 11273     1EB8  0022               	movlb	2	; select bank2
 11274     1EB9  00D9               	movwf	(_kp+1)^(0+256)
 11275     1EBA  0021               	movlb	1	; select bank1
 11276     1EBB  084F               	movf	setKp@new_kp^(0+128),w
 11277     1EBC  0022               	movlb	2	; select bank2
 11278     1EBD  00D8               	movwf	_kp^(0+256)
 11279     1EBE                     l981:
 11280     1EBE  0008               	return
 11281     1EBF                     __end_of_setKp:
 11282                           
 11283                           	psect	text10
 11284     1E9D                     __ptext10:	
 11285 ;; *************** function _setKi *****************
 11286 ;; Defined at:
 11287 ;;		line 47 in file "controller.c"
 11288 ;; Parameters:    Size  Location     Type
 11289 ;;  new_ki          4   47[BANK1 ] float 
 11290 ;; Auto vars:     Size  Location     Type
 11291 ;;		None
 11292 ;; Return value:  Size  Location     Type
 11293 ;;                  1    wreg      void 
 11294 ;; Registers used:
 11295 ;;		wreg
 11296 ;; Tracked objects:
 11297 ;;		On entry : 0/0
 11298 ;;		On exit  : 0/0
 11299 ;;		Unchanged: 0/0
 11300 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 11301 ;;      Params:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0
 11302 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11303 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11304 ;;      Totals:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0
 11305 ;;Total ram usage:        4 bytes
 11306 ;; Hardware stack levels used: 1
 11307 ;; Hardware stack levels required when called: 5
 11308 ;; This function calls:
 11309 ;;		Nothing
 11310 ;; This function is called by:
 11311 ;;		_uartHandler
 11312 ;; This function uses a non-reentrant model
 11313 ;;
 11314                           
 11315     1E9D                     _setKi:	
 11316                           ;psect for function _setKi
 11317                           
 11318     1E9D                     l7591:	
 11319                           ;incstack = 0
 11320                           ; Regs used in _setKi: [wreg]
 11321                           
 11322     1E9D  0021               	movlb	1	; select bank1
 11323     1E9E  0852               	movf	(setKi@new_ki+3)^(0+128),w
 11324     1E9F  0022               	movlb	2	; select bank2
 11325     1EA0  00D7               	movwf	(_ki+3)^(0+256)
 11326     1EA1  0021               	movlb	1	; select bank1
 11327     1EA2  0851               	movf	(setKi@new_ki+2)^(0+128),w
 11328     1EA3  0022               	movlb	2	; select bank2
 11329     1EA4  00D6               	movwf	(_ki+2)^(0+256)
 11330     1EA5  0021               	movlb	1	; select bank1
 11331     1EA6  0850               	movf	(setKi@new_ki+1)^(0+128),w
 11332     1EA7  0022               	movlb	2	; select bank2
 11333     1EA8  00D5               	movwf	(_ki+1)^(0+256)
 11334     1EA9  0021               	movlb	1	; select bank1
 11335     1EAA  084F               	movf	setKi@new_ki^(0+128),w
 11336     1EAB  0022               	movlb	2	; select bank2
 11337     1EAC  00D4               	movwf	_ki^(0+256)
 11338     1EAD                     l984:
 11339     1EAD  0008               	return
 11340     1EAE                     __end_of_setKi:
 11341                           
 11342                           	psect	text11
 11343     1357                     __ptext11:	
 11344 ;; *************** function _readLine *****************
 11345 ;; Defined at:
 11346 ;;		line 49 in file "UART.c"
 11347 ;; Parameters:    Size  Location     Type
 11348 ;;		None
 11349 ;; Auto vars:     Size  Location     Type
 11350 ;;		None
 11351 ;; Return value:  Size  Location     Type
 11352 ;;                  1   73[BANK1 ] PTR unsigned char 
 11353 ;; Registers used:
 11354 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 11355 ;; Tracked objects:
 11356 ;;		On entry : 0/0
 11357 ;;		On exit  : 0/0
 11358 ;;		Unchanged: 0/0
 11359 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 11360 ;;      Params:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0
 11361 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11362 ;;      Temps:          0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0
 11363 ;;      Totals:         0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0
 11364 ;;Total ram usage:        3 bytes
 11365 ;; Hardware stack levels used: 1
 11366 ;; Hardware stack levels required when called: 14
 11367 ;; This function calls:
 11368 ;;		_EUSART_IsRxReady
 11369 ;;		_EUSART_Read
 11370 ;;		_printf
 11371 ;; This function is called by:
 11372 ;;		_uartHandler
 11373 ;; This function uses a non-reentrant model
 11374 ;;
 11375                           
 11376     1357                     _readLine:	
 11377                           ;psect for function _readLine
 11378                           
 11379     1357                     l905:	
 11380                           ;incstack = 0
 11381                           ; Regs used in _readLine: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 11382                           ;UART.c: 50:     static uint8_t index = 0;;UART.c: 51:     while (1) {
 11383                           
 11384     1357                     l7517:
 11385                           
 11386                           ;UART.c: 52:         if (!EUSART_IsRxReady()) {
 11387     1357  3188  2000  3193   	fcall	_EUSART_IsRxReady
 11388     135A  3A00               	xorlw	0
 11389     135B  1D03               	skipz
 11390     135C  2B5E               	goto	u9611
 11391     135D  2B5F               	goto	u9610
 11392     135E                     u9611:
 11393     135E  2B69               	goto	l7525
 11394     135F                     u9610:
 11395     135F                     l7519:
 11396                           
 11397                           ;UART.c: 53:             line[index] = 0;
 11398     135F  0020               	movlb	0	; select bank0
 11399     1360  0865               	movf	readLine@index,w
 11400     1361  3ED8               	addlw	(low (_line| (0+256)))& (0+255)
 11401     1362  0086               	movwf	6
 11402     1363  3001               	movlw	1	; select bank3/4
 11403     1364  0087               	movwf	7
 11404     1365  0181               	clrf	1
 11405     1366                     l7521:
 11406                           
 11407                           ;UART.c: 54:             return line + index;
 11408     1366  0865               	movf	readLine@index,w
 11409     1367  3ED8               	addlw	(low (_line| (0+256)))& (0+255)
 11410     1368  2BAF               	goto	l907
 11411     1369                     l7525:
 11412                           
 11413                           ;UART.c: 56:         if (index >= 20 - 1) {
 11414     1369  3013               	movlw	19
 11415     136A  0020               	movlb	0	; select bank0
 11416     136B  0265               	subwf	readLine@index,w
 11417     136C  1C03               	skipc
 11418     136D  2B6F               	goto	u9621
 11419     136E  2B70               	goto	u9620
 11420     136F                     u9621:
 11421     136F  2B8A               	goto	l7543
 11422     1370                     u9620:
 11423     1370  2B74               	goto	l7531
 11424     1371                     l7529:
 11425                           
 11426                           ;UART.c: 58:                 EUSART_Read();
 11427     1371  319F  27E0  3193   	fcall	_EUSART_Read
 11428     1374                     l7531:
 11429                           
 11430                           ;UART.c: 57:             while (EUSART_IsRxReady()) {
 11431     1374  3188  2000  3193   	fcall	_EUSART_IsRxReady
 11432     1377  3A00               	xorlw	0
 11433     1378  1D03               	skipz
 11434     1379  2B7B               	goto	u9631
 11435     137A  2B7C               	goto	u9630
 11436     137B                     u9631:
 11437     137B  2B71               	goto	l7529
 11438     137C                     u9630:
 11439     137C                     l7533:
 11440                           
 11441                           ;UART.c: 60:             printf("input buffer overflow\r\n");
 11442     137C  3065               	movlw	low (STR_3| (0+32768))
 11443     137D  0021               	movlb	1	; select bank1
 11444     137E  00E2               	movwf	printf@fmt^(0+128)
 11445     137F  3098               	movlw	high (STR_3| (0+32768))
 11446     1380  00E3               	movwf	(printf@fmt^(0+128)+1)
 11447     1381  319E  26D1  3193   	fcall	_printf
 11448     1384                     l7535:
 11449                           
 11450                           ;UART.c: 61:             index = 0;
 11451     1384  0020               	movlb	0	; select bank0
 11452     1385  01E5               	clrf	readLine@index
 11453     1386                     l7537:
 11454                           
 11455                           ;UART.c: 62:             line[index] = 0;
 11456     1386  0023               	movlb	3	; select bank3
 11457     1387  01D8               	clrf	_line^(0+384)
 11458     1388                     l7539:
 11459                           
 11460                           ;UART.c: 63:             return line;
 11461     1388  30D8               	movlw	(low (_line| (0+256)))& (0+255)
 11462     1389  2BAF               	goto	l907
 11463     138A                     l7543:
 11464                           
 11465                           ;UART.c: 66:         line[index] = EUSART_Read();
 11466     138A  319F  27E0  3193   	fcall	_EUSART_Read
 11467     138D  0021               	movlb	1	; select bank1
 11468     138E  00EB               	movwf	??_readLine^(0+128)
 11469     138F  0020               	movlb	0	; select bank0
 11470     1390  0865               	movf	readLine@index,w
 11471     1391  3ED8               	addlw	(low (_line| (0+256)))& (0+255)
 11472     1392  0086               	movwf	6
 11473     1393  3001               	movlw	1	; select bank3/4
 11474     1394  0087               	movwf	7
 11475     1395  0021               	movlb	1	; select bank1
 11476     1396  086B               	movf	??_readLine^(0+128),w
 11477     1397  0081               	movwf	1
 11478     1398                     l7545:
 11479                           
 11480                           ;UART.c: 67:         if (line[index] == '\n') {
 11481     1398  0020               	movlb	0	; select bank0
 11482     1399  0865               	movf	readLine@index,w
 11483     139A  3ED8               	addlw	(low (_line| (0+256)))& (0+255)
 11484     139B  0086               	movwf	6
 11485     139C  3001               	movlw	1	; select bank3/4
 11486     139D  0087               	movwf	7
 11487     139E  300A               	movlw	10
 11488     139F  0601               	xorwf	1,w
 11489     13A0  1D03               	btfss	3,2
 11490     13A1  2BA3               	goto	u9641
 11491     13A2  2BA4               	goto	u9640
 11492     13A3                     u9641:
 11493     13A3  2BAC               	goto	l7555
 11494     13A4                     u9640:
 11495     13A4                     l7547:
 11496                           
 11497                           ;UART.c: 68:             line[index + 1] = 0;
 11498     13A4  0865               	movf	readLine@index,w
 11499     13A5  3ED9               	addlw	(low ((_line| (0+256)+1)))& (0+255)
 11500     13A6  0086               	movwf	6
 11501     13A7  3001               	movlw	1	; select bank3/4
 11502     13A8  0087               	movwf	7
 11503     13A9  0181               	clrf	1
 11504     13AA                     l7549:
 11505                           
 11506                           ;UART.c: 69:             index = 0;
 11507     13AA  01E5               	clrf	readLine@index
 11508     13AB  2B88               	goto	l7539
 11509     13AC                     l7555:
 11510                           
 11511                           ;UART.c: 72:         index++;
 11512     13AC  3001               	movlw	1
 11513     13AD  07E5               	addwf	readLine@index,f
 11514     13AE  2B57               	goto	l905
 11515     13AF                     l907:
 11516     13AF  0008               	return
 11517     13B0                     __end_of_readLine:
 11518                           
 11519                           	psect	text12
 11520     1FE0                     __ptext12:	
 11521 ;; *************** function _EUSART_Read *****************
 11522 ;; Defined at:
 11523 ;;		line 288 in file "mcc_generated_files/uart/src/eusart.c"
 11524 ;; Parameters:    Size  Location     Type
 11525 ;;		None
 11526 ;; Auto vars:     Size  Location     Type
 11527 ;;  readValue       1    1[BANK1 ] unsigned char 
 11528 ;;  tempRxTail      1    0[BANK1 ] unsigned char 
 11529 ;; Return value:  Size  Location     Type
 11530 ;;                  1    wreg      unsigned char 
 11531 ;; Registers used:
 11532 ;;		wreg, fsr1l, fsr1h, status,2, status,0
 11533 ;; Tracked objects:
 11534 ;;		On entry : 0/0
 11535 ;;		On exit  : 0/0
 11536 ;;		Unchanged: 0/0
 11537 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 11538 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11539 ;;      Locals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0
 11540 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11541 ;;      Totals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0
 11542 ;;Total ram usage:        2 bytes
 11543 ;; Hardware stack levels used: 1
 11544 ;; Hardware stack levels required when called: 5
 11545 ;; This function calls:
 11546 ;;		Nothing
 11547 ;; This function is called by:
 11548 ;;		_readLine
 11549 ;;		_getch
 11550 ;; This function uses a non-reentrant model
 11551 ;;
 11552                           
 11553     1FE0                     _EUSART_Read:	
 11554                           ;psect for function _EUSART_Read
 11555                           
 11556     1FE0                     l6751:	
 11557                           ;incstack = 0
 11558                           ; Regs used in _EUSART_Read: [wreg+fsr1l+fsr1h+status,2+status,0]
 11559                           
 11560     1FE0                     l6753:
 11561                           
 11562                           ;mcc_generated_files/uart/src/eusart.c: 291:     uint8_t tempRxTail;;mcc_generated_files
      +                          /uart/src/eusart.c: 293:     readValue = eusartRxBuffer[eusartRxTail];
 11563     1FE0  0020               	movlb	0	; select bank0
 11564     1FE1  0868               	movf	_eusartRxTail,w
 11565     1FE2  3EB0               	addlw	(low (_eusartRxBuffer| (0+256)))& (0+255)
 11566     1FE3  0086               	movwf	6
 11567     1FE4  3001               	movlw	1	; select bank3/4
 11568     1FE5  0087               	movwf	7
 11569     1FE6  0801               	movf	1,w
 11570     1FE7  0021               	movlb	1	; select bank1
 11571     1FE8  00A1               	movwf	EUSART_Read@readValue^(0+128)
 11572     1FE9                     l6755:
 11573                           
 11574                           ;mcc_generated_files/uart/src/eusart.c: 295:     tempRxTail = (eusartRxTail + 1U) & ((8U
      +                          ) - 1U);
 11575     1FE9  0020               	movlb	0	; select bank0
 11576     1FEA  0868               	movf	_eusartRxTail,w	;volatile
 11577     1FEB  3E01               	addlw	1
 11578     1FEC  3907               	andlw	7
 11579     1FED  0021               	movlb	1	; select bank1
 11580     1FEE  00A0               	movwf	EUSART_Read@tempRxTail^(0+128)
 11581     1FEF                     l6757:
 11582                           
 11583                           ;mcc_generated_files/uart/src/eusart.c: 297:     eusartRxTail = tempRxTail;
 11584     1FEF  0820               	movf	EUSART_Read@tempRxTail^(0+128),w
 11585     1FF0  0020               	movlb	0	; select bank0
 11586     1FF1  00E8               	movwf	_eusartRxTail	;volatile
 11587     1FF2                     l6759:
 11588                           
 11589                           ;mcc_generated_files/uart/src/eusart.c: 299:     PIE1bits.RCIE = 0;
 11590     1FF2  0021               	movlb	1	; select bank1
 11591     1FF3  1291               	bcf	17,5	;volatile
 11592     1FF4                     l6761:
 11593                           
 11594                           ;mcc_generated_files/uart/src/eusart.c: 300:     if(0U != eusartRxCount)
 11595     1FF4  0020               	movlb	0	; select bank0
 11596     1FF5  0867               	movf	_eusartRxCount,w	;volatile
 11597     1FF6  1903               	btfsc	3,2
 11598     1FF7  2FF9               	goto	u8341
 11599     1FF8  2FFA               	goto	u8340
 11600     1FF9                     u8341:
 11601     1FF9  2FFC               	goto	l6765
 11602     1FFA                     u8340:
 11603     1FFA                     l6763:
 11604                           
 11605                           ;mcc_generated_files/uart/src/eusart.c: 301:     {;mcc_generated_files/uart/src/eusart.c
      +                          : 302:         eusartRxCount--;
 11606     1FFA  3001               	movlw	1
 11607     1FFB  02E7               	subwf	_eusartRxCount,f	;volatile
 11608     1FFC                     l6765:
 11609                           
 11610                           ;mcc_generated_files/uart/src/eusart.c: 304:     PIE1bits.RCIE = 1;
 11611     1FFC  0021               	movlb	1	; select bank1
 11612     1FFD  1691               	bsf	17,5	;volatile
 11613     1FFE                     l6767:
 11614                           
 11615                           ;mcc_generated_files/uart/src/eusart.c: 305:     return readValue;
 11616     1FFE  0821               	movf	EUSART_Read@readValue^(0+128),w
 11617     1FFF                     l725:
 11618     1FFF  0008               	return
 11619     2000                     __end_of_EUSART_Read:
 11620                           
 11621                           	psect	text13
 11622     0800                     __ptext13:	
 11623 ;; *************** function _EUSART_IsRxReady *****************
 11624 ;; Defined at:
 11625 ;;		line 267 in file "mcc_generated_files/uart/src/eusart.c"
 11626 ;; Parameters:    Size  Location     Type
 11627 ;;		None
 11628 ;; Auto vars:     Size  Location     Type
 11629 ;;		None
 11630 ;; Return value:  Size  Location     Type
 11631 ;;                  1    wreg      _Bool 
 11632 ;; Registers used:
 11633 ;;		wreg, status,2, status,0
 11634 ;; Tracked objects:
 11635 ;;		On entry : 0/0
 11636 ;;		On exit  : 0/0
 11637 ;;		Unchanged: 0/0
 11638 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 11639 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11640 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11641 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11642 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11643 ;;Total ram usage:        0 bytes
 11644 ;; Hardware stack levels used: 1
 11645 ;; Hardware stack levels required when called: 5
 11646 ;; This function calls:
 11647 ;;		Nothing
 11648 ;; This function is called by:
 11649 ;;		_readLine
 11650 ;;		_getch
 11651 ;; This function uses a non-reentrant model
 11652 ;;
 11653                           
 11654     0800                     _EUSART_IsRxReady:	
 11655                           ;psect for function _EUSART_IsRxReady
 11656                           
 11657     0800                     l6747:	
 11658                           ;incstack = 0
 11659                           ; Regs used in _EUSART_IsRxReady: [wreg+status,2+status,0]
 11660                           
 11661                           
 11662                           ;mcc_generated_files/uart/src/eusart.c: 269:     return (eusartRxCount ? 1 : 0);
 11663     0800  0020               	movlb	0	; select bank0
 11664     0801  0867               	movf	_eusartRxCount,w	;volatile
 11665     0802  1D03               	btfss	3,2
 11666     0803  2805               	goto	u8321
 11667     0804  2807               	goto	u8320
 11668     0805                     u8321:
 11669     0805  3001               	movlw	1
 11670     0806  2808               	goto	u8330
 11671     0807                     u8320:
 11672     0807  3000               	movlw	0
 11673     0808                     u8330:
 11674     0808                     l712:
 11675     0808  0008               	return
 11676     0809                     __end_of_EUSART_IsRxReady:
 11677                           
 11678                           	psect	text14
 11679     0809                     __ptext14:	
 11680 ;; *************** function _atoi *****************
 11681 ;; Defined at:
 11682 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\atoi.c"
 11683 ;; Parameters:    Size  Location     Type
 11684 ;;  s               1    8[BANK1 ] PTR const unsigned char 
 11685 ;;		 -> line(20), 
 11686 ;; Auto vars:     Size  Location     Type
 11687 ;;  n               2   13[BANK1 ] int 
 11688 ;;  neg             1   12[BANK1 ] _Bool 
 11689 ;; Return value:  Size  Location     Type
 11690 ;;                  2    8[BANK1 ] int 
 11691 ;; Registers used:
 11692 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 11693 ;; Tracked objects:
 11694 ;;		On entry : 0/0
 11695 ;;		On exit  : 0/0
 11696 ;;		Unchanged: 0/0
 11697 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 11698 ;;      Params:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0
 11699 ;;      Locals:         0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0
 11700 ;;      Temps:          0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0
 11701 ;;      Totals:         0       0       7       0       0       0       0       0       0       0       0       0       
      +0       0
 11702 ;;Total ram usage:        7 bytes
 11703 ;; Hardware stack levels used: 1
 11704 ;; Hardware stack levels required when called: 6
 11705 ;; This function calls:
 11706 ;;		___wmul
 11707 ;; This function is called by:
 11708 ;;		_uartHandler
 11709 ;; This function uses a non-reentrant model
 11710 ;;
 11711                           
 11712     0809                     _atoi:	
 11713                           ;psect for function _atoi
 11714                           
 11715     0809                     l7557:	
 11716                           ;incstack = 0
 11717                           ; Regs used in _atoi: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
 11718                           
 11719     0809  0021               	movlb	1	; select bank1
 11720     080A  01AD               	clrf	atoi@n^(0+128)
 11721     080B  01AE               	clrf	(atoi@n+1)^(0+128)
 11722     080C  01AC               	clrf	atoi@neg^(0+128)
 11723     080D  2810               	goto	l7561
 11724     080E                     l7559:
 11725     080E  3001               	movlw	1
 11726     080F  07A8               	addwf	atoi@s^(0+128),f
 11727     0810                     l7561:
 11728     0810  0828               	movf	atoi@s^(0+128),w
 11729     0811  0086               	movwf	6
 11730     0812  3001               	movlw	1	; select bank2/3
 11731     0813  0087               	movwf	7
 11732     0814  3020               	movlw	32
 11733     0815  0601               	xorwf	1,w
 11734     0816  1903               	btfsc	3,2
 11735     0817  2819               	goto	u9651
 11736     0818  281A               	goto	u9650
 11737     0819                     u9651:
 11738     0819  280E               	goto	l7559
 11739     081A                     u9650:
 11740     081A                     l7563:
 11741     081A  0828               	movf	atoi@s^(0+128),w
 11742     081B  0086               	movwf	6
 11743     081C  3001               	movlw	1	; select bank2/3
 11744     081D  0087               	movwf	7
 11745     081E  30F7               	movlw	247
 11746     081F  0701               	addwf	1,w
 11747     0820  00AA               	movwf	??_atoi^(0+128)
 11748     0821  3005               	movlw	5
 11749     0822  022A               	subwf	??_atoi^(0+128),w
 11750     0823  1C03               	skipc
 11751     0824  2826               	goto	u9661
 11752     0825  2827               	goto	u9660
 11753     0826                     u9661:
 11754     0826  280E               	goto	l7559
 11755     0827                     u9660:
 11756     0827                     l7565:
 11757     0827  0828               	movf	atoi@s^(0+128),w
 11758     0828  0086               	movwf	6
 11759     0829  3001               	movlw	1	; select bank2/3
 11760     082A  0087               	movwf	7
 11761     082B  302D               	movlw	45
 11762     082C  0601               	xorwf	1,w
 11763     082D  1D03               	btfss	3,2
 11764     082E  2830               	goto	u9671
 11765     082F  2831               	goto	u9670
 11766     0830                     u9671:
 11767     0830  2836               	goto	l7571
 11768     0831                     u9670:
 11769     0831                     l7567:
 11770     0831  3001               	movlw	1
 11771     0832  00AC               	movwf	atoi@neg^(0+128)
 11772     0833                     l7569:
 11773     0833  3001               	movlw	1
 11774     0834  07A8               	addwf	atoi@s^(0+128),f
 11775     0835  285F               	goto	l7579
 11776     0836                     l7571:
 11777     0836  0828               	movf	atoi@s^(0+128),w
 11778     0837  0086               	movwf	6
 11779     0838  3001               	movlw	1	; select bank2/3
 11780     0839  0087               	movwf	7
 11781     083A  302B               	movlw	43
 11782     083B  0601               	xorwf	1,w
 11783     083C  1D03               	btfss	3,2
 11784     083D  283F               	goto	u9681
 11785     083E  2840               	goto	u9680
 11786     083F                     u9681:
 11787     083F  285F               	goto	l7579
 11788     0840                     u9680:
 11789     0840  2833               	goto	l7569
 11790     0841                     l7575:
 11791     0841  0828               	movf	atoi@s^(0+128),w
 11792     0842  0086               	movwf	6
 11793     0843  3001               	movlw	1	; select bank2/3
 11794     0844  0087               	movwf	7
 11795     0845  082E               	movf	(atoi@n+1)^(0+128),w
 11796     0846  00A3               	movwf	(___wmul@multiplier+1)^(0+128)
 11797     0847  082D               	movf	atoi@n^(0+128),w
 11798     0848  00A2               	movwf	___wmul@multiplier^(0+128)
 11799     0849  300A               	movlw	10
 11800     084A  00A4               	movwf	___wmul@multiplicand^(0+128)
 11801     084B  3000               	movlw	0
 11802     084C  00A5               	movwf	(___wmul@multiplicand^(0+128)+1)
 11803     084D  319F  27C0  3188   	fcall	___wmul
 11804     0850  0021               	movlb	1	; select bank1
 11805     0851  0823               	movf	(?___wmul+1)^(0+128),w
 11806     0852  00AB               	movwf	(??_atoi^(0+128)+1)
 11807     0853  0801               	movf	1,w
 11808     0854  0222               	subwf	?___wmul^(0+128),w
 11809     0855  00AA               	movwf	??_atoi^(0+128)
 11810     0856  1C03               	skipc
 11811     0857  03AB               	decf	(??_atoi^(0+128)+1),f
 11812     0858  082A               	movf	??_atoi^(0+128),w
 11813     0859  3E30               	addlw	48
 11814     085A  00AD               	movwf	atoi@n^(0+128)
 11815     085B  3000               	movlw	0
 11816     085C  3D2B               	addwfc	(??_atoi+1)^(0+128),w
 11817     085D  00AE               	movwf	(atoi@n+1)^(0+128)
 11818     085E  2833               	goto	l7569
 11819     085F                     l7579:
 11820     085F  0828               	movf	atoi@s^(0+128),w
 11821     0860  0086               	movwf	6
 11822     0861  3001               	movlw	1	; select bank2/3
 11823     0862  0087               	movwf	7
 11824     0863  30D0               	movlw	208
 11825     0864  0701               	addwf	1,w
 11826     0865  00AA               	movwf	??_atoi^(0+128)
 11827     0866  300A               	movlw	10
 11828     0867  022A               	subwf	??_atoi^(0+128),w
 11829     0868  1C03               	skipc
 11830     0869  286B               	goto	u9691
 11831     086A  286C               	goto	u9690
 11832     086B                     u9691:
 11833     086B  2841               	goto	l7575
 11834     086C                     u9690:
 11835     086C                     l7581:
 11836     086C  082C               	movf	atoi@neg^(0+128),w
 11837     086D  1D03               	btfss	3,2
 11838     086E  2870               	goto	u9701
 11839     086F  2871               	goto	u9700
 11840     0870                     u9701:
 11841     0870  287D               	goto	l7585
 11842     0871                     u9700:
 11843     0871                     l7583:
 11844     0871  092D               	comf	atoi@n^(0+128),w
 11845     0872  00AA               	movwf	??_atoi^(0+128)
 11846     0873  092E               	comf	(atoi@n+1)^(0+128),w
 11847     0874  00AB               	movwf	(??_atoi^(0+128)+1)
 11848     0875  0AAA               	incf	??_atoi^(0+128),f
 11849     0876  1903               	skipnz
 11850     0877  0AAB               	incf	(??_atoi^(0+128)+1),f
 11851     0878  082A               	movf	??_atoi^(0+128),w
 11852     0879  00A8               	movwf	?_atoi^(0+128)
 11853     087A  082B               	movf	(??_atoi+1)^(0+128),w
 11854     087B  00A9               	movwf	(?_atoi+1)^(0+128)
 11855     087C  2881               	goto	l1664
 11856     087D                     l7585:
 11857     087D  082E               	movf	(atoi@n+1)^(0+128),w
 11858     087E  00A9               	movwf	(?_atoi+1)^(0+128)
 11859     087F  082D               	movf	atoi@n^(0+128),w
 11860     0880  00A8               	movwf	?_atoi^(0+128)
 11861     0881                     l1664:
 11862     0881  0008               	return
 11863     0882                     __end_of_atoi:
 11864                           
 11865                           	psect	text15
 11866     10A1                     __ptext15:	
 11867 ;; *************** function _sprintf *****************
 11868 ;; Defined at:
 11869 ;;		line 9 in file "C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\nf_sprintf.c"
 11870 ;; Parameters:    Size  Location     Type
 11871 ;;  s               1   66[BANK1 ] PTR unsigned char 
 11872 ;;		 -> main@str(20), 
 11873 ;;  fmt             2   67[BANK1 ] PTR const unsigned char 
 11874 ;;		 -> STR_1(14), 
 11875 ;; Auto vars:     Size  Location     Type
 11876 ;;  f              11    1[BANK2 ] struct _IO_FILE
 11877 ;;  ret             2    0        int 
 11878 ;;  ap              1    0[BANK2 ] PTR void [1]
 11879 ;;		 -> ?_printf(2), ?_sprintf(2), 
 11880 ;; Return value:  Size  Location     Type
 11881 ;;                  2   66[BANK1 ] int 
 11882 ;; Registers used:
 11883 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 11884 ;; Tracked objects:
 11885 ;;		On entry : 0/0
 11886 ;;		On exit  : 0/0
 11887 ;;		Unchanged: 0/0
 11888 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 11889 ;;      Params:         0       0       5       0       0       0       0       0       0       0       0       0       
      +0       0
 11890 ;;      Locals:         0       0       0      12       0       0       0       0       0       0       0       0       
      +0       0
 11891 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11892 ;;      Totals:         0       0       5      12       0       0       0       0       0       0       0       0       
      +0       0
 11893 ;;Total ram usage:       17 bytes
 11894 ;; Hardware stack levels used: 1
 11895 ;; Hardware stack levels required when called: 13
 11896 ;; This function calls:
 11897 ;;		_vfprintf
 11898 ;; This function is called by:
 11899 ;;		_main
 11900 ;; This function uses a non-reentrant model
 11901 ;;
 11902                           
 11903     10A1                     _sprintf:	
 11904                           ;psect for function _sprintf
 11905                           
 11906     10A1                     l7657:	
 11907                           ;incstack = 0
 11908                           ; Regs used in _sprintf: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 11909                           
 11910     10A1  30E5               	movlw	(low ((?_sprintf| 0+3)))& (0+255)
 11911     10A2  0022               	movlb	2	; select bank2
 11912     10A3  00BA               	movwf	sprintf@ap^(0+256)
 11913     10A4  0021               	movlb	1	; select bank1
 11914     10A5  0862               	movf	sprintf@s^(0+128),w
 11915     10A6  0022               	movlb	2	; select bank2
 11916     10A7  00BB               	movwf	sprintf@f^(0+256)
 11917     10A8  3002               	movlw	2
 11918     10A9  00BC               	movwf	(sprintf@f+1)^(0+256)
 11919     10AA                     l7659:
 11920     10AA  01BD               	clrf	(sprintf@f^(0+256)+2)
 11921     10AB  01BE               	clrf	((sprintf@f+1)^(0+256)+2)
 11922     10AC                     l7661:
 11923     10AC  01C4               	clrf	(sprintf@f^(0+256)+9)
 11924     10AD  01C5               	clrf	((sprintf@f+1)^(0+256)+9)
 11925     10AE                     l7663:
 11926     10AE  303B               	movlw	low sprintf@f
 11927     10AF  0021               	movlb	1	; select bank1
 11928     10B0  00D9               	movwf	vfprintf@fp^(0+128)
 11929     10B1  3001               	movlw	high sprintf@f
 11930     10B2  00DA               	movwf	(vfprintf@fp^(0+128)+1)
 11931     10B3  0864               	movf	(sprintf@fmt+1)^(0+128),w
 11932     10B4  00DC               	movwf	(vfprintf@fmt+1)^(0+128)
 11933     10B5  0863               	movf	sprintf@fmt^(0+128),w
 11934     10B6  00DB               	movwf	vfprintf@fmt^(0+128)
 11935     10B7  303A               	movlw	low sprintf@ap
 11936     10B8  00DD               	movwf	vfprintf@ap^(0+128)
 11937     10B9  3001               	movlw	high sprintf@ap
 11938     10BA  00DE               	movwf	(vfprintf@ap+1)^(0+128)
 11939     10BB  3187  27CE  3190   	fcall	_vfprintf
 11940     10BE                     l7665:
 11941     10BE  0021               	movlb	1	; select bank1
 11942     10BF  0862               	movf	sprintf@s^(0+128),w
 11943     10C0  0022               	movlb	2	; select bank2
 11944     10C1  073D               	addwf	(sprintf@f^(0+256)+2),w
 11945     10C2  0086               	movwf	6
 11946     10C3  3002               	movlw	2	; select bank4/5
 11947     10C4  0087               	movwf	7
 11948     10C5  0181               	clrf	1
 11949     10C6                     l1671:
 11950     10C6  0008               	return
 11951     10C7                     __end_of_sprintf:
 11952                           
 11953                           	psect	text16
 11954     1D99                     __ptext16:	
 11955 ;; *************** function _printOut *****************
 11956 ;; Defined at:
 11957 ;;		line 91 in file "UART.c"
 11958 ;; Parameters:    Size  Location     Type
 11959 ;;  str             1   73[BANK1 ] PTR unsigned char 
 11960 ;;		 -> main@str(20), 
 11961 ;; Auto vars:     Size  Location     Type
 11962 ;;		None
 11963 ;; Return value:  Size  Location     Type
 11964 ;;                  1    wreg      void 
 11965 ;; Registers used:
 11966 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 11967 ;; Tracked objects:
 11968 ;;		On entry : 0/0
 11969 ;;		On exit  : 0/0
 11970 ;;		Unchanged: 0/0
 11971 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 11972 ;;      Params:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0
 11973 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11974 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11975 ;;      Totals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0
 11976 ;;Total ram usage:        1 bytes
 11977 ;; Hardware stack levels used: 1
 11978 ;; Hardware stack levels required when called: 14
 11979 ;; This function calls:
 11980 ;;		_printf
 11981 ;; This function is called by:
 11982 ;;		_main
 11983 ;; This function uses a non-reentrant model
 11984 ;;
 11985                           
 11986     1D99                     _printOut:	
 11987                           ;psect for function _printOut
 11988                           
 11989     1D99                     l7669:	
 11990                           ;incstack = 0
 11991                           ; Regs used in _printOut: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 11992                           
 11993                           
 11994                           ;UART.c: 92:     printf(str);
 11995     1D99  0021               	movlb	1	; select bank1
 11996     1D9A  0869               	movf	printOut@str^(0+128),w
 11997     1D9B  00E2               	movwf	printf@fmt^(0+128)
 11998     1D9C  3002               	movlw	2
 11999     1D9D  00E3               	movwf	(printf@fmt+1)^(0+128)
 12000     1D9E  319E  26D1  319D   	fcall	_printf
 12001     1DA1                     l921:
 12002     1DA1  0008               	return
 12003     1DA2                     __end_of_printOut:
 12004                           
 12005                           	psect	text17
 12006     1FA1                     __ptext17:	
 12007 ;; *************** function _printLogs *****************
 12008 ;; Defined at:
 12009 ;;		line 76 in file "UART.c"
 12010 ;; Parameters:    Size  Location     Type
 12011 ;;		None
 12012 ;; Auto vars:     Size  Location     Type
 12013 ;;		None
 12014 ;; Return value:  Size  Location     Type
 12015 ;;                  1    wreg      void 
 12016 ;; Registers used:
 12017 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 12018 ;; Tracked objects:
 12019 ;;		On entry : 0/0
 12020 ;;		On exit  : 0/0
 12021 ;;		Unchanged: 0/0
 12022 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 12023 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12024 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12025 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12026 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12027 ;;Total ram usage:        0 bytes
 12028 ;; Hardware stack levels used: 1
 12029 ;; Hardware stack levels required when called: 14
 12030 ;; This function calls:
 12031 ;;		_getPomphoogte
 12032 ;;		_printf
 12033 ;; This function is called by:
 12034 ;;		_main
 12035 ;; This function uses a non-reentrant model
 12036 ;;
 12037                           
 12038     1FA1                     _printLogs:	
 12039                           ;psect for function _printLogs
 12040                           
 12041     1FA1                     l7653:	
 12042                           ;incstack = 0
 12043                           ; Regs used in _printLogs: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 12044                           
 12045                           
 12046                           ;UART.c: 78:     if (mustPrintLogs) {
 12047     1FA1  0020               	movlb	0	; select bank0
 12048     1FA2  086D               	movf	_mustPrintLogs,w
 12049     1FA3  1903               	btfsc	3,2
 12050     1FA4  2FA6               	goto	u9761
 12051     1FA5  2FA7               	goto	u9760
 12052     1FA6                     u9761:
 12053     1FA6  2FBF               	goto	l918
 12054     1FA7                     u9760:
 12055     1FA7                     l7655:
 12056                           
 12057                           ;UART.c: 86:         printf (", pomp: %u", getPomphoogte());
 12058     1FA7  30C5               	movlw	low (STR_4| (0+32768))
 12059     1FA8  0021               	movlb	1	; select bank1
 12060     1FA9  00E2               	movwf	printf@fmt^(0+128)
 12061     1FAA  3098               	movlw	high (STR_4| (0+32768))
 12062     1FAB  00E3               	movwf	(printf@fmt^(0+128)+1)
 12063     1FAC  319D  2587  319F   	fcall	_getPomphoogte
 12064     1FAF  0021               	movlb	1	; select bank1
 12065     1FB0  0821               	movf	(?_getPomphoogte+1)^(0+128),w
 12066     1FB1  00E5               	movwf	((?_printf+1)^(0+128)+2)
 12067     1FB2  0820               	movf	?_getPomphoogte^(0+128),w
 12068     1FB3  00E4               	movwf	(?_printf^(0+128)+2)
 12069     1FB4  319E  26D1  319F   	fcall	_printf
 12070                           
 12071                           ;UART.c: 87:         printf("\r\n");
 12072     1FB7  309A               	movlw	low ((STR_9+12)| (0+32768))
 12073     1FB8  0021               	movlb	1	; select bank1
 12074     1FB9  00E2               	movwf	printf@fmt^(0+128)
 12075     1FBA  3098               	movlw	high ((STR_9+12)| (0+32768))
 12076     1FBB  00E3               	movwf	(printf@fmt^(0+128)+1)
 12077     1FBC  319E  26D1  319F   	fcall	_printf
 12078     1FBF                     l918:
 12079     1FBF  0008               	return
 12080     1FC0                     __end_of_printLogs:
 12081                           
 12082                           	psect	text18
 12083     1ED1                     __ptext18:	
 12084 ;; *************** function _printf *****************
 12085 ;; Defined at:
 12086 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\printf.c"
 12087 ;; Parameters:    Size  Location     Type
 12088 ;;  fmt             2   66[BANK1 ] PTR const unsigned char 
 12089 ;;		 -> STR_10(17), STR_9(15), STR_8(13), STR_7(13), 
 12090 ;;		 -> STR_6(25), STR_5(3), STR_4(11), STR_3(24), 
 12091 ;;		 -> STR_2(8), main@str(20), 
 12092 ;; Auto vars:     Size  Location     Type
 12093 ;;  ret             2    0        int 
 12094 ;;  ap              1   72[BANK1 ] PTR void [1]
 12095 ;;		 -> ?_printf(2), ?_sprintf(2), 
 12096 ;; Return value:  Size  Location     Type
 12097 ;;                  2   66[BANK1 ] int 
 12098 ;; Registers used:
 12099 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 12100 ;; Tracked objects:
 12101 ;;		On entry : 0/0
 12102 ;;		On exit  : 0/0
 12103 ;;		Unchanged: 0/0
 12104 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 12105 ;;      Params:         0       0       6       0       0       0       0       0       0       0       0       0       
      +0       0
 12106 ;;      Locals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0
 12107 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12108 ;;      Totals:         0       0       7       0       0       0       0       0       0       0       0       0       
      +0       0
 12109 ;;Total ram usage:        7 bytes
 12110 ;; Hardware stack levels used: 1
 12111 ;; Hardware stack levels required when called: 13
 12112 ;; This function calls:
 12113 ;;		_vfprintf
 12114 ;; This function is called by:
 12115 ;;		_readLine
 12116 ;;		_printLogs
 12117 ;;		_printOut
 12118 ;;		_uartHandler
 12119 ;;		_printFloat
 12120 ;; This function uses a non-reentrant model
 12121 ;;
 12122                           
 12123     1ED1                     _printf:	
 12124                           ;psect for function _printf
 12125                           
 12126     1ED1                     l6771:	
 12127                           ;incstack = 0
 12128                           ; Regs used in _printf: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 12129                           
 12130     1ED1  30E4               	movlw	(low ((?_printf| 0+2)))& (0+255)
 12131     1ED2  0021               	movlb	1	; select bank1
 12132     1ED3  00E8               	movwf	printf@ap^(0+128)
 12133     1ED4                     l6773:
 12134     1ED4  3000               	movlw	0
 12135     1ED5  00D9               	movwf	vfprintf@fp^(0+128)
 12136     1ED6  00DA               	movwf	(vfprintf@fp+1)^(0+128)
 12137     1ED7  0863               	movf	(printf@fmt+1)^(0+128),w
 12138     1ED8  00DC               	movwf	(vfprintf@fmt+1)^(0+128)
 12139     1ED9  0862               	movf	printf@fmt^(0+128),w
 12140     1EDA  00DB               	movwf	vfprintf@fmt^(0+128)
 12141     1EDB  30E8               	movlw	low printf@ap
 12142     1EDC  00DD               	movwf	vfprintf@ap^(0+128)
 12143     1EDD  3000               	movlw	high printf@ap
 12144     1EDE  00DE               	movwf	(vfprintf@ap+1)^(0+128)
 12145     1EDF  3187  27CE  319E   	fcall	_vfprintf
 12146     1EE2                     l1797:
 12147     1EE2  0008               	return
 12148     1EE3                     __end_of_printf:
 12149                           
 12150                           	psect	text19
 12151     07CE                     __ptext19:	
 12152 ;; *************** function _vfprintf *****************
 12153 ;; Defined at:
 12154 ;;		line 1817 in file "C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c"
 12155 ;; Parameters:    Size  Location     Type
 12156 ;;  fp              2   57[BANK1 ] PTR struct _IO_FILE
 12157 ;;		 -> sprintf@f(11), NULL(0), 
 12158 ;;  fmt             2   59[BANK1 ] PTR const unsigned char 
 12159 ;;		 -> STR_10(17), STR_9(15), STR_8(13), STR_7(13), 
 12160 ;;		 -> STR_6(25), STR_5(3), STR_4(11), STR_3(24), 
 12161 ;;		 -> STR_2(8), STR_1(14), main@str(20), 
 12162 ;;  ap              2   61[BANK1 ] PTR PTR void 
 12163 ;;		 -> printf@ap(1), sprintf@ap(1), 
 12164 ;; Auto vars:     Size  Location     Type
 12165 ;;  cfmt            2   64[BANK1 ] PTR unsigned char 
 12166 ;;		 -> STR_10(17), STR_9(15), STR_8(13), STR_7(13), 
 12167 ;;		 -> STR_6(25), STR_5(3), STR_4(11), STR_3(24), 
 12168 ;;		 -> STR_2(8), STR_1(14), main@str(20), 
 12169 ;; Return value:  Size  Location     Type
 12170 ;;                  2   57[BANK1 ] int 
 12171 ;; Registers used:
 12172 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 12173 ;; Tracked objects:
 12174 ;;		On entry : 0/0
 12175 ;;		On exit  : 0/0
 12176 ;;		Unchanged: 0/0
 12177 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 12178 ;;      Params:         0       0       6       0       0       0       0       0       0       0       0       0       
      +0       0
 12179 ;;      Locals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0
 12180 ;;      Temps:          0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0
 12181 ;;      Totals:         0       0       9       0       0       0       0       0       0       0       0       0       
      +0       0
 12182 ;;Total ram usage:        9 bytes
 12183 ;; Hardware stack levels used: 1
 12184 ;; Hardware stack levels required when called: 12
 12185 ;; This function calls:
 12186 ;;		_vfpfcnvrt
 12187 ;; This function is called by:
 12188 ;;		_sprintf
 12189 ;;		_printf
 12190 ;; This function uses a non-reentrant model
 12191 ;;
 12192                           
 12193     07CE                     _vfprintf:	
 12194                           ;psect for function _vfprintf
 12195                           
 12196     07CE                     l6723:	
 12197                           ;incstack = 0
 12198                           ; Regs used in _vfprintf: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 12199                           
 12200                           
 12201                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1817: int vfprint
      +                          f(FILE *fp, const char *fmt, va_list ap);C:\Program Files\Microchip\xc8\v3.00\pic\source
      +                          s\c99\common\doprnt.c: 1818: {;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\comm
      +                          on\doprnt.c: 1820:     char *cfmt;;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\
      +                          common\doprnt.c: 1822:     cfmt = (char *)fmt;
 12202     07CE  0021               	movlb	1	; select bank1
 12203     07CF  085C               	movf	(vfprintf@fmt+1)^(0+128),w
 12204     07D0  00E1               	movwf	(vfprintf@cfmt+1)^(0+128)
 12205     07D1  085B               	movf	vfprintf@fmt^(0+128),w
 12206     07D2  00E0               	movwf	vfprintf@cfmt^(0+128)
 12207     07D3                     l6725:
 12208                           
 12209                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1824:     nout = 
      +                          0;
 12210     07D3  0022               	movlb	2	; select bank2
 12211     07D4  01AC               	clrf	_nout^(0+256)
 12212     07D5  01AD               	clrf	(_nout+1)^(0+256)
 12213                           
 12214                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1826:     while (
      +                          *cfmt) {
 12215     07D6  2FEC               	goto	l6729
 12216     07D7                     l6727:
 12217                           
 12218                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1828:         nou
      +                          t +=
 12219     07D7  085A               	movf	(vfprintf@fp+1)^(0+128),w
 12220     07D8  00CA               	movwf	(vfpfcnvrt@fp+1)^(0+128)
 12221     07D9  0859               	movf	vfprintf@fp^(0+128),w
 12222     07DA  00C9               	movwf	vfpfcnvrt@fp^(0+128)
 12223     07DB  30E0               	movlw	(low (vfprintf@cfmt| 0))& (0+255)
 12224     07DC  00CB               	movwf	vfpfcnvrt@fmt^(0+128)
 12225     07DD  085E               	movf	(vfprintf@ap+1)^(0+128),w
 12226     07DE  00CD               	movwf	(vfpfcnvrt@ap+1)^(0+128)
 12227     07DF  085D               	movf	vfprintf@ap^(0+128),w
 12228     07E0  00CC               	movwf	vfpfcnvrt@ap^(0+128)
 12229     07E1  318A  22DC  3187   	fcall	_vfpfcnvrt
 12230     07E4  0021               	movlb	1	; select bank1
 12231     07E5  0849               	movf	?_vfpfcnvrt^(0+128),w
 12232     07E6  0022               	movlb	2	; select bank2
 12233     07E7  07AC               	addwf	_nout^(0+256),f
 12234     07E8  0021               	movlb	1	; select bank1
 12235     07E9  084A               	movf	(?_vfpfcnvrt+1)^(0+128),w
 12236     07EA  0022               	movlb	2	; select bank2
 12237     07EB  3DAD               	addwfc	(_nout+1)^(0+256),f
 12238     07EC                     l6729:
 12239                           
 12240                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1826:     while (
      +                          *cfmt) {
 12241     07EC  0021               	movlb	1	; select bank1
 12242     07ED  0860               	movf	vfprintf@cfmt^(0+128),w
 12243     07EE  0084               	movwf	4
 12244     07EF  0861               	movf	(vfprintf@cfmt+1)^(0+128),w
 12245     07F0  0085               	movwf	5
 12246     07F1  0012               	moviw fsr0++
 12247     07F2  1D03               	btfss	3,2
 12248     07F3  2FF5               	goto	u8291
 12249     07F4  2FF6               	goto	u8290
 12250     07F5                     u8291:
 12251     07F5  2FD7               	goto	l6727
 12252     07F6                     u8290:
 12253     07F6                     l6731:
 12254                           
 12255                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1835:  return 0;
 12256     07F6  01D9               	clrf	?_vfprintf^(0+128)
 12257     07F7  01DA               	clrf	(?_vfprintf+1)^(0+128)
 12258     07F8                     l1763:
 12259     07F8  0008               	return
 12260     07F9                     __end_of_vfprintf:
 12261                           
 12262                           	psect	text20
 12263     0ADC                     __ptext20:	
 12264 ;; *************** function _vfpfcnvrt *****************
 12265 ;; Defined at:
 12266 ;;		line 1177 in file "C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c"
 12267 ;; Parameters:    Size  Location     Type
 12268 ;;  fp              2   41[BANK1 ] PTR struct _IO_FILE
 12269 ;;		 -> sprintf@f(11), NULL(0), 
 12270 ;;  fmt             1   43[BANK1 ] PTR PTR unsigned char 
 12271 ;;		 -> vfprintf@cfmt(2), 
 12272 ;;  ap              2   44[BANK1 ] PTR PTR void 
 12273 ;;		 -> printf@ap(1), sprintf@ap(1), 
 12274 ;; Auto vars:     Size  Location     Type
 12275 ;;  convarg         4   51[BANK1 ] struct .
 12276 ;;  cp              2   55[BANK1 ] PTR unsigned char 
 12277 ;;		 -> STR_10(17), STR_9(15), STR_8(13), STR_7(13), 
 12278 ;;		 -> STR_6(25), STR_5(3), STR_4(11), STR_3(24), 
 12279 ;;		 -> STR_2(8), STR_1(14), main@str(20), 
 12280 ;;  done            1   50[BANK1 ] _Bool 
 12281 ;;  c               1    0        unsigned char 
 12282 ;; Return value:  Size  Location     Type
 12283 ;;                  2   41[BANK1 ] int 
 12284 ;; Registers used:
 12285 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 12286 ;; Tracked objects:
 12287 ;;		On entry : 0/0
 12288 ;;		On exit  : 0/0
 12289 ;;		Unchanged: 0/0
 12290 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 12291 ;;      Params:         0       0       5       0       0       0       0       0       0       0       0       0       
      +0       0
 12292 ;;      Locals:         0       0       7       0       0       0       0       0       0       0       0       0       
      +0       0
 12293 ;;      Temps:          0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0
 12294 ;;      Totals:         0       0      16       0       0       0       0       0       0       0       0       0       
      +0       0
 12295 ;;Total ram usage:       16 bytes
 12296 ;; Hardware stack levels used: 1
 12297 ;; Hardware stack levels required when called: 11
 12298 ;; This function calls:
 12299 ;;		_dtoa
 12300 ;;		_fputc
 12301 ;;		_read_prec_or_width
 12302 ;;		_utoa
 12303 ;; This function is called by:
 12304 ;;		_vfprintf
 12305 ;; This function uses a non-reentrant model
 12306 ;;
 12307                           
 12308     0ADC                     _vfpfcnvrt:	
 12309                           ;psect for function _vfpfcnvrt
 12310                           
 12311     0ADC                     l6611:	
 12312                           ;incstack = 0
 12313                           ; Regs used in _vfpfcnvrt: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 12314                           
 12315                           
 12316                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1177: vfpfcnvrt(F
      +                          ILE *fp, char *fmt[], va_list ap);C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\c
      +                          ommon\doprnt.c: 1178: {;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\dopr
      +                          nt.c: 1179:     char c, *cp;;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common
      +                          \doprnt.c: 1180:     _Bool done;;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\co
      +                          mmon\doprnt.c: 1188:  } convarg;;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\co
      +                          mmon\doprnt.c: 1201:     if ((*fmt)[0] == '%') {
 12317     0ADC  0021               	movlb	1	; select bank1
 12318     0ADD  084B               	movf	vfpfcnvrt@fmt^(0+128),w
 12319     0ADE  0086               	movwf	6
 12320     0ADF  0187               	clrf	7
 12321     0AE0  3F40               	moviw [0]fsr1
 12322     0AE1  00CE               	movwf	??_vfpfcnvrt^(0+128)
 12323     0AE2  3F41               	moviw [1]fsr1
 12324     0AE3  00CF               	movwf	(??_vfpfcnvrt^(0+128)+1)
 12325     0AE4  084E               	movf	??_vfpfcnvrt^(0+128),w
 12326     0AE5  0084               	movwf	4
 12327     0AE6  084F               	movf	(??_vfpfcnvrt+1)^(0+128),w
 12328     0AE7  0085               	movwf	5
 12329     0AE8  0012               	moviw fsr0++
 12330     0AE9  3A25               	xorlw	37
 12331     0AEA  1D03               	btfss	3,2
 12332     0AEB  2AED               	goto	u8181
 12333     0AEC  2AEE               	goto	u8180
 12334     0AED                     u8181:
 12335     0AED  2C2C               	goto	l6691
 12336     0AEE                     u8180:
 12337     0AEE                     l6613:
 12338                           
 12339                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1202:         ++*
      +                          fmt;
 12340     0AEE  084B               	movf	vfpfcnvrt@fmt^(0+128),w
 12341     0AEF  0086               	movwf	6
 12342     0AF0  0187               	clrf	7
 12343     0AF1  3001               	movlw	1
 12344     0AF2  0781               	addwf	1,f
 12345     0AF3  3141               	addfsr 1,1
 12346     0AF4  1803               	skipnc
 12347     0AF5  0A81               	incf	1,f
 12348     0AF6                     l6615:
 12349                           
 12350                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1204:         fla
      +                          gs = width = 0;
 12351     0AF6  0020               	movlb	0	; select bank0
 12352     0AF7  01D5               	clrf	_width
 12353     0AF8  01D6               	clrf	_width+1
 12354     0AF9  3000               	movlw	0
 12355     0AFA  00E3               	movwf	_flags
 12356     0AFB                     l6617:
 12357                           
 12358                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1205:         pre
      +                          c = -1;
 12359     0AFB  30FF               	movlw	255
 12360     0AFC  0022               	movlb	2	; select bank2
 12361     0AFD  00AE               	movwf	_prec^(0+256)
 12362     0AFE  30FF               	movlw	255
 12363     0AFF  00AF               	movwf	(_prec^(0+256)+1)
 12364     0B00                     l6619:
 12365                           
 12366                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1209:         don
      +                          e = 0;
 12367     0B00  0021               	movlb	1	; select bank1
 12368     0B01  01D2               	clrf	vfpfcnvrt@done^(0+128)
 12369                           
 12370                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1210:         whi
      +                          le (!done) {
 12371     0B02  2B22               	goto	l6627
 12372     0B03                     l1741:	
 12373                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1219:            
      +                               case '0' :
 12374                           
 12375                           
 12376                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1220:            
      +                                   flags |= (1 << 1);
 12377     0B03  0020               	movlb	0	; select bank0
 12378     0B04  14E3               	bsf	_flags,1
 12379     0B05                     l6621:
 12380                           
 12381                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1221:            
      +                                   ++*fmt;
 12382     0B05  0021               	movlb	1	; select bank1
 12383     0B06  084B               	movf	vfpfcnvrt@fmt^(0+128),w
 12384     0B07  0086               	movwf	6
 12385     0B08  0187               	clrf	7
 12386     0B09  3001               	movlw	1
 12387     0B0A  0781               	addwf	1,f
 12388     0B0B  3141               	addfsr 1,1
 12389     0B0C  1803               	skipnc
 12390     0B0D  0A81               	incf	1,f
 12391                           
 12392                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1222:            
      +                                   break;
 12393     0B0E  2B22               	goto	l6627
 12394     0B0F                     l1743:	
 12395                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1242:            
      +                               default:
 12396                           
 12397                           
 12398                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1243:            
      +                                   done = 1;
 12399     0B0F  3001               	movlw	1
 12400     0B10  00D2               	movwf	vfpfcnvrt@done^(0+128)
 12401                           
 12402                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1244:            
      +                                   break;
 12403     0B11  2B22               	goto	l6627
 12404     0B12                     l6625:
 12405     0B12  084B               	movf	vfpfcnvrt@fmt^(0+128),w
 12406     0B13  0086               	movwf	6
 12407     0B14  0187               	clrf	7
 12408     0B15  3F40               	moviw [0]fsr1
 12409     0B16  00CE               	movwf	??_vfpfcnvrt^(0+128)
 12410     0B17  3F41               	moviw [1]fsr1
 12411     0B18  00CF               	movwf	(??_vfpfcnvrt^(0+128)+1)
 12412     0B19  084E               	movf	??_vfpfcnvrt^(0+128),w
 12413     0B1A  0084               	movwf	4
 12414     0B1B  084F               	movf	(??_vfpfcnvrt+1)^(0+128),w
 12415     0B1C  0085               	movwf	5
 12416     0B1D  0800               	movf	0,w	;code access
 12417                           
 12418                           ; Switch size 1, requested type "simple"
 12419                           ; Number of cases is 1, Range of values is 48 to 48
 12420                           ; switch strategies available:
 12421                           ; Name         Instructions Cycles
 12422                           ; simple_byte            4     3 (average)
 12423                           ; direct_byte           11     9 (fixed)
 12424                           ; jumptable            263     9 (fixed)
 12425                           ;	Chosen strategy is simple_byte
 12426     0B1E  3A30               	xorlw	48	; case 48
 12427     0B1F  1903               	skipnz
 12428     0B20  2B03               	goto	l1741
 12429     0B21  2B0F               	goto	l1743
 12430     0B22                     l6627:
 12431                           
 12432                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1210:         whi
      +                          le (!done) {
 12433     0B22  0852               	movf	vfpfcnvrt@done^(0+128),w
 12434     0B23  1903               	btfsc	3,2
 12435     0B24  2B26               	goto	u8191
 12436     0B25  2B27               	goto	u8190
 12437     0B26                     u8191:
 12438     0B26  2B12               	goto	l6625
 12439     0B27                     u8190:
 12440     0B27                     l6629:
 12441                           
 12442                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1256:   width = r
      +                          ead_prec_or_width(fmt, ap);
 12443     0B27  084B               	movf	vfpfcnvrt@fmt^(0+128),w
 12444     0B28  00A8               	movwf	read_prec_or_width@fmt^(0+128)
 12445     0B29  084D               	movf	(vfpfcnvrt@ap+1)^(0+128),w
 12446     0B2A  00AA               	movwf	(read_prec_or_width@ap+1)^(0+128)
 12447     0B2B  084C               	movf	vfpfcnvrt@ap^(0+128),w
 12448     0B2C  00A9               	movwf	read_prec_or_width@ap^(0+128)
 12449     0B2D  3194  240C  318A   	fcall	_read_prec_or_width
 12450     0B30  0021               	movlb	1	; select bank1
 12451     0B31  0829               	movf	(?_read_prec_or_width+1)^(0+128),w
 12452     0B32  0020               	movlb	0	; select bank0
 12453     0B33  00D6               	movwf	_width+1
 12454     0B34  0021               	movlb	1	; select bank1
 12455     0B35  0828               	movf	?_read_prec_or_width^(0+128),w
 12456     0B36  0020               	movlb	0	; select bank0
 12457     0B37  00D5               	movwf	_width
 12458     0B38                     l6631:
 12459                           
 12460                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1257:   if (width
      +                           < 0) {
 12461     0B38  1FD6               	btfss	_width+1,7
 12462     0B39  2B3B               	goto	u8201
 12463     0B3A  2B3C               	goto	u8200
 12464     0B3B                     u8201:
 12465     0B3B  2B42               	goto	l6637
 12466     0B3C                     u8200:
 12467     0B3C                     l6633:
 12468                           
 12469                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1258:    flags |=
      +                           (1 << 0);
 12470     0B3C  1463               	bsf	_flags,0
 12471     0B3D                     l6635:
 12472                           
 12473                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1259:    width = 
      +                          -width;
 12474     0B3D  09D5               	comf	_width,f
 12475     0B3E  09D6               	comf	_width+1,f
 12476     0B3F  0AD5               	incf	_width,f
 12477     0B40  1903               	skipnz
 12478     0B41  0AD6               	incf	_width+1,f
 12479     0B42                     l6637:
 12480                           
 12481                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1291:   cp = *fmt
      +                          ;
 12482     0B42  0021               	movlb	1	; select bank1
 12483     0B43  084B               	movf	vfpfcnvrt@fmt^(0+128),w
 12484     0B44  0086               	movwf	6
 12485     0B45  0187               	clrf	7
 12486     0B46  3F40               	moviw [0]fsr1
 12487     0B47  00D7               	movwf	vfpfcnvrt@cp^(0+128)
 12488     0B48  3F41               	moviw [1]fsr1
 12489     0B49  00D8               	movwf	(vfpfcnvrt@cp+1)^(0+128)
 12490     0B4A                     l6639:
 12491                           
 12492                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1361:   if (*cp =
      +                          = 'd' || *cp == 'i') {
 12493     0B4A  0857               	movf	vfpfcnvrt@cp^(0+128),w
 12494     0B4B  0084               	movwf	4
 12495     0B4C  0858               	movf	(vfpfcnvrt@cp+1)^(0+128),w
 12496     0B4D  0085               	movwf	5
 12497     0B4E  0012               	moviw fsr0++
 12498     0B4F  3A64               	xorlw	100
 12499     0B50  1903               	btfsc	3,2
 12500     0B51  2B53               	goto	u8211
 12501     0B52  2B54               	goto	u8210
 12502     0B53                     u8211:
 12503     0B53  2B5E               	goto	l6643
 12504     0B54                     u8210:
 12505     0B54                     l6641:
 12506     0B54  0857               	movf	vfpfcnvrt@cp^(0+128),w
 12507     0B55  0084               	movwf	4
 12508     0B56  0858               	movf	(vfpfcnvrt@cp+1)^(0+128),w
 12509     0B57  0085               	movwf	5
 12510     0B58  0012               	moviw fsr0++
 12511     0B59  3A69               	xorlw	105
 12512     0B5A  1D03               	btfss	3,2
 12513     0B5B  2B5D               	goto	u8221
 12514     0B5C  2B5E               	goto	u8220
 12515     0B5D                     u8221:
 12516     0B5D  2B89               	goto	l6651
 12517     0B5E                     u8220:
 12518     0B5E                     l6643:
 12519                           
 12520                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1404:    convarg.
      +                          sint = (vfpf_sint_t)(int)(*(int *)__va_arg(*(int **)ap, (int)0));
 12521     0B5E  084C               	movf	vfpfcnvrt@ap^(0+128),w
 12522     0B5F  0086               	movwf	6
 12523     0B60  084D               	movf	(vfpfcnvrt@ap+1)^(0+128),w
 12524     0B61  0087               	movwf	7
 12525     0B62  0801               	movf	1,w
 12526     0B63  0084               	movwf	4
 12527     0B64  0185               	clrf	5
 12528     0B65  3002               	movlw	2
 12529     0B66  0781               	addwf	1,f
 12530     0B67  3F00               	moviw [0]fsr0
 12531     0B68  00D3               	movwf	vfpfcnvrt@convarg^(0+128)
 12532     0B69  3F01               	moviw [1]fsr0
 12533     0B6A  00D4               	movwf	(vfpfcnvrt@convarg+1)^(0+128)
 12534     0B6B                     l6645:
 12535                           
 12536                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1406:    *fmt = c
      +                          p+1;
 12537     0B6B  0857               	movf	vfpfcnvrt@cp^(0+128),w
 12538     0B6C  3E01               	addlw	1
 12539     0B6D  00CE               	movwf	??_vfpfcnvrt^(0+128)
 12540     0B6E  3000               	movlw	0
 12541     0B6F  3D58               	addwfc	(vfpfcnvrt@cp+1)^(0+128),w
 12542     0B70  00CF               	movwf	(??_vfpfcnvrt+1)^(0+128)
 12543     0B71  084B               	movf	vfpfcnvrt@fmt^(0+128),w
 12544     0B72  0086               	movwf	6
 12545     0B73  0187               	clrf	7
 12546     0B74  084E               	movf	??_vfpfcnvrt^(0+128),w
 12547     0B75  3FC0               	movwi [0]fsr1
 12548     0B76  084F               	movf	(??_vfpfcnvrt+1)^(0+128),w
 12549     0B77  3FC1               	movwi [1]fsr1
 12550     0B78                     l6647:
 12551                           
 12552                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1432:    return (
      +                          int) dtoa(fp, convarg.sint);
 12553     0B78  084A               	movf	(vfpfcnvrt@fp+1)^(0+128),w
 12554     0B79  00BD               	movwf	(dtoa@fp+1)^(0+128)
 12555     0B7A  0849               	movf	vfpfcnvrt@fp^(0+128),w
 12556     0B7B  00BC               	movwf	dtoa@fp^(0+128)
 12557     0B7C  0854               	movf	(vfpfcnvrt@convarg+1)^(0+128),w
 12558     0B7D  00BF               	movwf	(dtoa@d+1)^(0+128)
 12559     0B7E  0853               	movf	vfpfcnvrt@convarg^(0+128),w
 12560     0B7F  00BE               	movwf	dtoa@d^(0+128)
 12561     0B80  3187  2715  318A   	fcall	_dtoa
 12562     0B83  0021               	movlb	1	; select bank1
 12563     0B84  083D               	movf	(?_dtoa+1)^(0+128),w
 12564     0B85  00CA               	movwf	(?_vfpfcnvrt+1)^(0+128)
 12565     0B86  083C               	movf	?_dtoa^(0+128),w
 12566     0B87  00C9               	movwf	?_vfpfcnvrt^(0+128)
 12567     0B88  2C4F               	goto	l1749
 12568     0B89                     l6651:
 12569     0B89  0857               	movf	vfpfcnvrt@cp^(0+128),w
 12570     0B8A  0084               	movwf	4
 12571     0B8B  0858               	movf	(vfpfcnvrt@cp+1)^(0+128),w
 12572     0B8C  0085               	movwf	5
 12573     0B8D  0012               	moviw fsr0++
 12574     0B8E  3A75               	xorlw	117
 12575     0B8F  1D03               	btfss	3,2
 12576     0B90  2B92               	goto	u8231
 12577     0B91  2B93               	goto	u8230
 12578     0B92                     u8231:
 12579     0B92  2BC8               	goto	l6665
 12580     0B93                     u8230:
 12581     0B93                     l6653:
 12582                           
 12583                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1452:     ) {;C:\
      +                          Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1495:    convarg.uint
      +                           = (vfpf_uint_t)(unsigned int)(*(unsigned int *)__va_arg(*(unsigned int **)ap, (unsigned
      +                           int)0));
 12584     0B93  084C               	movf	vfpfcnvrt@ap^(0+128),w
 12585     0B94  0086               	movwf	6
 12586     0B95  084D               	movf	(vfpfcnvrt@ap+1)^(0+128),w
 12587     0B96  0087               	movwf	7
 12588     0B97  0801               	movf	1,w
 12589     0B98  0084               	movwf	4
 12590     0B99  0185               	clrf	5
 12591     0B9A  3002               	movlw	2
 12592     0B9B  0781               	addwf	1,f
 12593     0B9C  3F00               	moviw [0]fsr0
 12594     0B9D  00D3               	movwf	vfpfcnvrt@convarg^(0+128)
 12595     0B9E  3F01               	moviw [1]fsr0
 12596     0B9F  00D4               	movwf	(vfpfcnvrt@convarg+1)^(0+128)
 12597     0BA0                     l6655:
 12598                           
 12599                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1497:    *fmt = c
      +                          p+1;
 12600     0BA0  0857               	movf	vfpfcnvrt@cp^(0+128),w
 12601     0BA1  3E01               	addlw	1
 12602     0BA2  00CE               	movwf	??_vfpfcnvrt^(0+128)
 12603     0BA3  3000               	movlw	0
 12604     0BA4  3D58               	addwfc	(vfpfcnvrt@cp+1)^(0+128),w
 12605     0BA5  00CF               	movwf	(??_vfpfcnvrt+1)^(0+128)
 12606     0BA6  084B               	movf	vfpfcnvrt@fmt^(0+128),w
 12607     0BA7  0086               	movwf	6
 12608     0BA8  0187               	clrf	7
 12609     0BA9  084E               	movf	??_vfpfcnvrt^(0+128),w
 12610     0BAA  3FC0               	movwi [0]fsr1
 12611     0BAB  084F               	movf	(??_vfpfcnvrt+1)^(0+128),w
 12612     0BAC  3FC1               	movwi [1]fsr1
 12613                           
 12614                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1498:    switch (
      +                          *cp) {
 12615     0BAD  2BBF               	goto	l6663
 12616     0BAE                     l6657:
 12617                           
 12618                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1542:      return
      +                           (int) utoa(fp, convarg.uint);
 12619     0BAE  084A               	movf	(vfpfcnvrt@fp+1)^(0+128),w
 12620     0BAF  00BD               	movwf	(utoa@fp+1)^(0+128)
 12621     0BB0  0849               	movf	vfpfcnvrt@fp^(0+128),w
 12622     0BB1  00BC               	movwf	utoa@fp^(0+128)
 12623     0BB2  0854               	movf	(vfpfcnvrt@convarg+1)^(0+128),w
 12624     0BB3  00BF               	movwf	(utoa@d+1)^(0+128)
 12625     0BB4  0853               	movf	vfpfcnvrt@convarg^(0+128),w
 12626     0BB5  00BE               	movwf	utoa@d^(0+128)
 12627     0BB6  3195  25A6  318A   	fcall	_utoa
 12628     0BB9  0021               	movlb	1	; select bank1
 12629     0BBA  083D               	movf	(?_utoa+1)^(0+128),w
 12630     0BBB  00CA               	movwf	(?_vfpfcnvrt+1)^(0+128)
 12631     0BBC  083C               	movf	?_utoa^(0+128),w
 12632     0BBD  00C9               	movwf	?_vfpfcnvrt^(0+128)
 12633     0BBE  2C4F               	goto	l1749
 12634     0BBF                     l6663:
 12635     0BBF  0857               	movf	vfpfcnvrt@cp^(0+128),w
 12636     0BC0  0084               	movwf	4
 12637     0BC1  0858               	movf	(vfpfcnvrt@cp+1)^(0+128),w
 12638     0BC2  0085               	movwf	5
 12639     0BC3  0800               	movf	0,w	;code access
 12640                           
 12641                           ; Switch size 1, requested type "simple"
 12642                           ; Number of cases is 1, Range of values is 117 to 117
 12643                           ; switch strategies available:
 12644                           ; Name         Instructions Cycles
 12645                           ; simple_byte            4     3 (average)
 12646                           ; direct_byte           11     9 (fixed)
 12647                           ; jumptable            263     9 (fixed)
 12648                           ;	Chosen strategy is simple_byte
 12649     0BC4  3A75               	xorlw	117	; case 117
 12650     0BC5  1903               	skipnz
 12651     0BC6  2BAE               	goto	l6657
 12652     0BC7  2BC8               	goto	l6665
 12653     0BC8                     l6665:
 12654                           
 12655                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1595:   if (*cp =
      +                          = 'n') {
 12656     0BC8  0857               	movf	vfpfcnvrt@cp^(0+128),w
 12657     0BC9  0084               	movwf	4
 12658     0BCA  0858               	movf	(vfpfcnvrt@cp+1)^(0+128),w
 12659     0BCB  0085               	movwf	5
 12660     0BCC  0012               	moviw fsr0++
 12661     0BCD  3A6E               	xorlw	110
 12662     0BCE  1D03               	btfss	3,2
 12663     0BCF  2BD1               	goto	u8241
 12664     0BD0  2BD2               	goto	u8240
 12665     0BD1                     u8241:
 12666     0BD1  2BF9               	goto	l6675
 12667     0BD2                     u8240:
 12668     0BD2                     l6667:
 12669                           
 12670                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1638:    *(*(int*
      +                           *)__va_arg(*(int* **)ap, (int*)0)) = (int) nout;
 12671     0BD2  084C               	movf	vfpfcnvrt@ap^(0+128),w
 12672     0BD3  0086               	movwf	6
 12673     0BD4  084D               	movf	(vfpfcnvrt@ap+1)^(0+128),w
 12674     0BD5  0087               	movwf	7
 12675     0BD6  0801               	movf	1,w
 12676     0BD7  0084               	movwf	4
 12677     0BD8  0185               	clrf	5
 12678     0BD9  3002               	movlw	2
 12679     0BDA  0781               	addwf	1,f
 12680     0BDB  3F00               	moviw [0]fsr0
 12681     0BDC  00CE               	movwf	??_vfpfcnvrt^(0+128)
 12682     0BDD  3F01               	moviw [1]fsr0
 12683     0BDE  00CF               	movwf	(??_vfpfcnvrt^(0+128)+1)
 12684     0BDF  084E               	movf	??_vfpfcnvrt^(0+128),w
 12685     0BE0  0086               	movwf	6
 12686     0BE1  084F               	movf	(??_vfpfcnvrt+1)^(0+128),w
 12687     0BE2  0087               	movwf	7
 12688     0BE3  0022               	movlb	2	; select bank2
 12689     0BE4  082C               	movf	_nout^(0+256),w
 12690     0BE5  3FC0               	movwi [0]fsr1
 12691     0BE6  082D               	movf	(_nout+1)^(0+256),w
 12692     0BE7  3FC1               	movwi [1]fsr1
 12693     0BE8                     l6669:
 12694                           
 12695                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1640:    *fmt = c
      +                          p+1;
 12696     0BE8  0021               	movlb	1	; select bank1
 12697     0BE9  0857               	movf	vfpfcnvrt@cp^(0+128),w
 12698     0BEA  3E01               	addlw	1
 12699     0BEB  00CE               	movwf	??_vfpfcnvrt^(0+128)
 12700     0BEC  3000               	movlw	0
 12701     0BED  3D58               	addwfc	(vfpfcnvrt@cp+1)^(0+128),w
 12702     0BEE  00CF               	movwf	(??_vfpfcnvrt+1)^(0+128)
 12703     0BEF  084B               	movf	vfpfcnvrt@fmt^(0+128),w
 12704     0BF0  0086               	movwf	6
 12705     0BF1  0187               	clrf	7
 12706     0BF2  084E               	movf	??_vfpfcnvrt^(0+128),w
 12707     0BF3  3FC0               	movwi [0]fsr1
 12708     0BF4  084F               	movf	(??_vfpfcnvrt+1)^(0+128),w
 12709     0BF5  3FC1               	movwi [1]fsr1
 12710     0BF6                     l6671:
 12711                           
 12712                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1641:    return (
      +                          int) 0;
 12713     0BF6  01C9               	clrf	?_vfpfcnvrt^(0+128)
 12714     0BF7  01CA               	clrf	(?_vfpfcnvrt+1)^(0+128)
 12715     0BF8  2C4F               	goto	l1749
 12716     0BF9                     l6675:
 12717                           
 12718                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1798:         if 
      +                          ((*fmt)[0] == '%') {
 12719     0BF9  084B               	movf	vfpfcnvrt@fmt^(0+128),w
 12720     0BFA  0086               	movwf	6
 12721     0BFB  0187               	clrf	7
 12722     0BFC  3F40               	moviw [0]fsr1
 12723     0BFD  00CE               	movwf	??_vfpfcnvrt^(0+128)
 12724     0BFE  3F41               	moviw [1]fsr1
 12725     0BFF  00CF               	movwf	(??_vfpfcnvrt^(0+128)+1)
 12726     0C00  084E               	movf	??_vfpfcnvrt^(0+128),w
 12727     0C01  0084               	movwf	4
 12728     0C02  084F               	movf	(??_vfpfcnvrt+1)^(0+128),w
 12729     0C03  0085               	movwf	5
 12730     0C04  0012               	moviw fsr0++
 12731     0C05  3A25               	xorlw	37
 12732     0C06  1D03               	btfss	3,2
 12733     0C07  2C09               	goto	u8251
 12734     0C08  2C0A               	goto	u8250
 12735     0C09                     u8251:
 12736     0C09  2C23               	goto	l6685
 12737     0C0A                     u8250:
 12738     0C0A                     l6677:
 12739                           
 12740                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1799:            
      +                           ++*fmt;
 12741     0C0A  084B               	movf	vfpfcnvrt@fmt^(0+128),w
 12742     0C0B  0086               	movwf	6
 12743     0C0C  0187               	clrf	7
 12744     0C0D  3001               	movlw	1
 12745     0C0E  0781               	addwf	1,f
 12746     0C0F  3141               	addfsr 1,1
 12747     0C10  1803               	skipnc
 12748     0C11  0A81               	incf	1,f
 12749     0C12                     l6679:
 12750                           
 12751                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1800:            
      +                           fputc((int)'%', fp);
 12752     0C12  3025               	movlw	37
 12753     0C13  00A3               	movwf	fputc@c^(0+128)
 12754     0C14  3000               	movlw	0
 12755     0C15  00A4               	movwf	(fputc@c^(0+128)+1)
 12756     0C16  084A               	movf	(vfpfcnvrt@fp+1)^(0+128),w
 12757     0C17  00A6               	movwf	(fputc@fp+1)^(0+128)
 12758     0C18  0849               	movf	vfpfcnvrt@fp^(0+128),w
 12759     0C19  00A5               	movwf	fputc@fp^(0+128)
 12760     0C1A  3194  2469  318A   	fcall	_fputc
 12761     0C1D                     l6681:
 12762                           
 12763                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1801:            
      +                           return (int) 1;
 12764     0C1D  3001               	movlw	1
 12765     0C1E  0021               	movlb	1	; select bank1
 12766     0C1F  00C9               	movwf	?_vfpfcnvrt^(0+128)
 12767     0C20  3000               	movlw	0
 12768     0C21  00CA               	movwf	(?_vfpfcnvrt^(0+128)+1)
 12769     0C22  2C4F               	goto	l1749
 12770     0C23                     l6685:
 12771                           
 12772                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1806:         ++*
      +                          fmt;
 12773     0C23  084B               	movf	vfpfcnvrt@fmt^(0+128),w
 12774     0C24  0086               	movwf	6
 12775     0C25  0187               	clrf	7
 12776     0C26  3001               	movlw	1
 12777     0C27  0781               	addwf	1,f
 12778     0C28  3141               	addfsr 1,1
 12779     0C29  1803               	skipnc
 12780     0C2A  0A81               	incf	1,f
 12781     0C2B  2BF6               	goto	l6671
 12782     0C2C                     l6691:
 12783                           
 12784                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1811:     fputc((
      +                          int)(*fmt)[0], fp);
 12785     0C2C  084B               	movf	vfpfcnvrt@fmt^(0+128),w
 12786     0C2D  0086               	movwf	6
 12787     0C2E  0187               	clrf	7
 12788     0C2F  3F40               	moviw [0]fsr1
 12789     0C30  00CE               	movwf	??_vfpfcnvrt^(0+128)
 12790     0C31  3F41               	moviw [1]fsr1
 12791     0C32  00CF               	movwf	(??_vfpfcnvrt^(0+128)+1)
 12792     0C33  084E               	movf	??_vfpfcnvrt^(0+128),w
 12793     0C34  0084               	movwf	4
 12794     0C35  084F               	movf	(??_vfpfcnvrt+1)^(0+128),w
 12795     0C36  0085               	movwf	5
 12796     0C37  0800               	movf	0,w	;code access
 12797     0C38  00D0               	movwf	(??_vfpfcnvrt+2)^(0+128)
 12798     0C39  01D1               	clrf	((??_vfpfcnvrt+2)^(0+128)+1)
 12799     0C3A  0850               	movf	(??_vfpfcnvrt+2)^(0+128),w
 12800     0C3B  00A3               	movwf	fputc@c^(0+128)
 12801     0C3C  0851               	movf	(??_vfpfcnvrt+3)^(0+128),w
 12802     0C3D  00A4               	movwf	(fputc@c+1)^(0+128)
 12803     0C3E  084A               	movf	(vfpfcnvrt@fp+1)^(0+128),w
 12804     0C3F  00A6               	movwf	(fputc@fp+1)^(0+128)
 12805     0C40  0849               	movf	vfpfcnvrt@fp^(0+128),w
 12806     0C41  00A5               	movwf	fputc@fp^(0+128)
 12807     0C42  3194  2469  318A   	fcall	_fputc
 12808     0C45                     l6693:
 12809                           
 12810                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1812:     ++*fmt;
 12811     0C45  0021               	movlb	1	; select bank1
 12812     0C46  084B               	movf	vfpfcnvrt@fmt^(0+128),w
 12813     0C47  0086               	movwf	6
 12814     0C48  0187               	clrf	7
 12815     0C49  3001               	movlw	1
 12816     0C4A  0781               	addwf	1,f
 12817     0C4B  3141               	addfsr 1,1
 12818     0C4C  1803               	skipnc
 12819     0C4D  0A81               	incf	1,f
 12820     0C4E  2C1D               	goto	l6681
 12821     0C4F                     l1749:
 12822     0C4F  0008               	return
 12823     0C50                     __end_of_vfpfcnvrt:
 12824                           
 12825                           	psect	text21
 12826     15A6                     __ptext21:	
 12827 ;; *************** function _utoa *****************
 12828 ;; Defined at:
 12829 ;;		line 1001 in file "C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c"
 12830 ;; Parameters:    Size  Location     Type
 12831 ;;  fp              2   28[BANK1 ] PTR struct _IO_FILE
 12832 ;;		 -> sprintf@f(11), NULL(0), 
 12833 ;;  d               2   30[BANK1 ] unsigned int 
 12834 ;; Auto vars:     Size  Location     Type
 12835 ;;  i               2   36[BANK1 ] int 
 12836 ;;  w               2   34[BANK1 ] int 
 12837 ;;  p               1   33[BANK1 ] _Bool 
 12838 ;; Return value:  Size  Location     Type
 12839 ;;                  2   28[BANK1 ] int 
 12840 ;; Registers used:
 12841 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 12842 ;; Tracked objects:
 12843 ;;		On entry : 0/0
 12844 ;;		On exit  : 0/0
 12845 ;;		Unchanged: 0/0
 12846 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 12847 ;;      Params:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0
 12848 ;;      Locals:         0       0       5       0       0       0       0       0       0       0       0       0       
      +0       0
 12849 ;;      Temps:          0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0
 12850 ;;      Totals:         0       0      10       0       0       0       0       0       0       0       0       0       
      +0       0
 12851 ;;Total ram usage:       10 bytes
 12852 ;; Hardware stack levels used: 1
 12853 ;; Hardware stack levels required when called: 10
 12854 ;; This function calls:
 12855 ;;		___lwdiv
 12856 ;;		___lwmod
 12857 ;;		_pad
 12858 ;; This function is called by:
 12859 ;;		_vfpfcnvrt
 12860 ;; This function uses a non-reentrant model
 12861 ;;
 12862                           
 12863     15A6                     _utoa:	
 12864                           ;psect for function _utoa
 12865                           
 12866     15A6                     l6557:	
 12867                           ;incstack = 0
 12868                           ; Regs used in _utoa: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 12869                           
 12870                           
 12871                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1001: static int 
      +                          utoa(FILE *fp, vfpf_uint_t d);C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\commo
      +                          n\doprnt.c: 1002: {;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c
      +                          : 1003:     int i, w;;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt
      +                          .c: 1007:  _Bool p = 1;
 12872     15A6  3001               	movlw	1
 12873     15A7  0021               	movlb	1	; select bank1
 12874     15A8  00C1               	movwf	utoa@p^(0+128)
 12875     15A9                     l6559:
 12876                           
 12877                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1019:     w = wid
      +                          th;
 12878     15A9  0020               	movlb	0	; select bank0
 12879     15AA  0856               	movf	_width+1,w
 12880     15AB  0021               	movlb	1	; select bank1
 12881     15AC  00C3               	movwf	(utoa@w+1)^(0+128)
 12882     15AD  0020               	movlb	0	; select bank0
 12883     15AE  0855               	movf	_width,w
 12884     15AF  0021               	movlb	1	; select bank1
 12885     15B0  00C2               	movwf	utoa@w^(0+128)
 12886                           
 12887                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1022:     i = siz
      +                          eof(dbuf) - 1;
 12888     15B1  301F               	movlw	31
 12889     15B2  00C4               	movwf	utoa@i^(0+128)
 12890     15B3  3000               	movlw	0
 12891     15B4  00C5               	movwf	(utoa@i^(0+128)+1)
 12892     15B5                     l6561:
 12893                           
 12894                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1023:     dbuf[i]
      +                           = '\0';
 12895     15B5  0023               	movlb	3	; select bank3
 12896     15B6  01D7               	clrf	(_dbuf^(0+384)+31)
 12897                           
 12898                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1024:     while (
      +                          i && (d != 0
 12899     15B7  2DE6               	goto	l6573
 12900     15B8                     l6563:
 12901                           
 12902                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1033:     )) {;C:
      +                          \Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1034:         --i;
 12903     15B8  30FF               	movlw	255
 12904     15B9  0021               	movlb	1	; select bank1
 12905     15BA  07C4               	addwf	utoa@i^(0+128),f
 12906     15BB  30FF               	movlw	255
 12907     15BC  3DC5               	addwfc	(utoa@i+1)^(0+128),f
 12908     15BD                     l6565:
 12909                           
 12910                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1035:         dbu
      +                          f[i] = '0' + (d % 10);
 12911     15BD  0844               	movf	utoa@i^(0+128),w
 12912     15BE  3EB8               	addlw	(low (_dbuf| (0+256)))& (0+255)
 12913     15BF  0086               	movwf	6
 12914     15C0  3001               	movlw	1	; select bank3/4
 12915     15C1  0087               	movwf	7
 12916     15C2  300A               	movlw	10
 12917     15C3  00A0               	movwf	___lwmod@divisor^(0+128)
 12918     15C4  3000               	movlw	0
 12919     15C5  00A1               	movwf	(___lwmod@divisor^(0+128)+1)
 12920     15C6  083F               	movf	(utoa@d+1)^(0+128),w
 12921     15C7  00A3               	movwf	(___lwmod@dividend+1)^(0+128)
 12922     15C8  083E               	movf	utoa@d^(0+128),w
 12923     15C9  00A2               	movwf	___lwmod@dividend^(0+128)
 12924     15CA  3190  20EF  3195   	fcall	___lwmod
 12925     15CD  0021               	movlb	1	; select bank1
 12926     15CE  0820               	movf	?___lwmod^(0+128),w
 12927     15CF  3E30               	addlw	48
 12928     15D0  0081               	movwf	1
 12929     15D1                     l6567:
 12930                           
 12931                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1039:   p = 0;
 12932     15D1  01C1               	clrf	utoa@p^(0+128)
 12933     15D2                     l6569:
 12934                           
 12935                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1041:         --w
      +                          ;
 12936     15D2  30FF               	movlw	255
 12937     15D3  07C2               	addwf	utoa@w^(0+128),f
 12938     15D4  30FF               	movlw	255
 12939     15D5  3DC3               	addwfc	(utoa@w+1)^(0+128),f
 12940     15D6                     l6571:
 12941                           
 12942                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1042:         d =
      +                           d / 10;
 12943     15D6  300A               	movlw	10
 12944     15D7  00A8               	movwf	___lwdiv@divisor^(0+128)
 12945     15D8  3000               	movlw	0
 12946     15D9  00A9               	movwf	(___lwdiv@divisor^(0+128)+1)
 12947     15DA  083F               	movf	(utoa@d+1)^(0+128),w
 12948     15DB  00AB               	movwf	(___lwdiv@dividend+1)^(0+128)
 12949     15DC  083E               	movf	utoa@d^(0+128),w
 12950     15DD  00AA               	movwf	___lwdiv@dividend^(0+128)
 12951     15DE  3191  2159  3195   	fcall	___lwdiv
 12952     15E1  0021               	movlb	1	; select bank1
 12953     15E2  0829               	movf	(?___lwdiv+1)^(0+128),w
 12954     15E3  00BF               	movwf	(utoa@d+1)^(0+128)
 12955     15E4  0828               	movf	?___lwdiv^(0+128),w
 12956     15E5  00BE               	movwf	utoa@d^(0+128)
 12957     15E6                     l6573:
 12958                           
 12959                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1024:     while (
      +                          i && (d != 0
 12960     15E6  0021               	movlb	1	; select bank1
 12961     15E7  0844               	movf	utoa@i^(0+128),w
 12962     15E8  0445               	iorwf	(utoa@i+1)^(0+128),w
 12963     15E9  1903               	btfsc	3,2
 12964     15EA  2DEC               	goto	u8101
 12965     15EB  2DED               	goto	u8100
 12966     15EC                     u8101:
 12967     15EC  2E0A               	goto	l6583
 12968     15ED                     u8100:
 12969     15ED                     l6575:
 12970     15ED  083E               	movf	utoa@d^(0+128),w
 12971     15EE  043F               	iorwf	(utoa@d+1)^(0+128),w
 12972     15EF  1D03               	btfss	3,2
 12973     15F0  2DF2               	goto	u8111
 12974     15F1  2DF3               	goto	u8110
 12975     15F2                     u8111:
 12976     15F2  2DB8               	goto	l6563
 12977     15F3                     u8110:
 12978     15F3                     l6577:
 12979     15F3  0841               	movf	utoa@p^(0+128),w
 12980     15F4  1D03               	btfss	3,2
 12981     15F5  2DF7               	goto	u8121
 12982     15F6  2DF8               	goto	u8120
 12983     15F7                     u8121:
 12984     15F7  2DB8               	goto	l6563
 12985     15F8                     u8120:
 12986     15F8                     l6579:
 12987     15F8  0843               	movf	(utoa@w+1)^(0+128),w
 12988     15F9  3A80               	xorlw	128
 12989     15FA  00C0               	movwf	??_utoa^(0+128)
 12990     15FB  3080               	movlw	128
 12991     15FC  0240               	subwf	??_utoa^(0+128),w
 12992     15FD  1D03               	skipz
 12993     15FE  2E01               	goto	u8135
 12994     15FF  3001               	movlw	1
 12995     1600  0242               	subwf	utoa@w^(0+128),w
 12996     1601                     u8135:
 12997     1601  1C03               	skipc
 12998     1602  2E04               	goto	u8131
 12999     1603  2E05               	goto	u8130
 13000     1604                     u8131:
 13001     1604  2E0A               	goto	l6583
 13002     1605                     u8130:
 13003     1605                     l6581:
 13004     1605  0020               	movlb	0	; select bank0
 13005     1606  18E3               	btfsc	_flags,1
 13006     1607  2E09               	goto	u8141
 13007     1608  2E0A               	goto	u8140
 13008     1609                     u8141:
 13009     1609  2DB8               	goto	l6563
 13010     160A                     u8140:
 13011     160A                     l6583:
 13012                           
 13013                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1046:     return 
      +                          (int) pad(fp, &dbuf[i], w);
 13014     160A  0021               	movlb	1	; select bank1
 13015     160B  083D               	movf	(utoa@fp+1)^(0+128),w
 13016     160C  00B5               	movwf	(pad@fp+1)^(0+128)
 13017     160D  083C               	movf	utoa@fp^(0+128),w
 13018     160E  00B4               	movwf	pad@fp^(0+128)
 13019     160F  0844               	movf	utoa@i^(0+128),w
 13020     1610  3EB8               	addlw	(low (_dbuf| (0+256)))& (0+255)
 13021     1611  00B6               	movwf	pad@buf^(0+128)
 13022     1612  0843               	movf	(utoa@w+1)^(0+128),w
 13023     1613  00B8               	movwf	(pad@p+1)^(0+128)
 13024     1614  0842               	movf	utoa@w^(0+128),w
 13025     1615  00B7               	movwf	pad@p^(0+128)
 13026     1616  3193  2302  3195   	fcall	_pad
 13027     1619  0021               	movlb	1	; select bank1
 13028     161A  0835               	movf	(?_pad+1)^(0+128),w
 13029     161B  00BD               	movwf	(?_utoa+1)^(0+128)
 13030     161C  0834               	movf	?_pad^(0+128),w
 13031     161D  00BC               	movwf	?_utoa^(0+128)
 13032     161E                     l1726:
 13033     161E  0008               	return
 13034     161F                     __end_of_utoa:
 13035                           
 13036                           	psect	text22
 13037     10EF                     __ptext22:	
 13038 ;; *************** function ___lwmod *****************
 13039 ;; Defined at:
 13040 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\lwmod.c"
 13041 ;; Parameters:    Size  Location     Type
 13042 ;;  divisor         2    0[BANK1 ] unsigned int 
 13043 ;;  dividend        2    2[BANK1 ] unsigned int 
 13044 ;; Auto vars:     Size  Location     Type
 13045 ;;  counter         1    4[BANK1 ] unsigned char 
 13046 ;; Return value:  Size  Location     Type
 13047 ;;                  2    0[BANK1 ] unsigned int 
 13048 ;; Registers used:
 13049 ;;		wreg, status,2, status,0
 13050 ;; Tracked objects:
 13051 ;;		On entry : 0/0
 13052 ;;		On exit  : 0/0
 13053 ;;		Unchanged: 0/0
 13054 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 13055 ;;      Params:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0
 13056 ;;      Locals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0
 13057 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13058 ;;      Totals:         0       0       5       0       0       0       0       0       0       0       0       0       
      +0       0
 13059 ;;Total ram usage:        5 bytes
 13060 ;; Hardware stack levels used: 1
 13061 ;; Hardware stack levels required when called: 5
 13062 ;; This function calls:
 13063 ;;		Nothing
 13064 ;; This function is called by:
 13065 ;;		_utoa
 13066 ;; This function uses a non-reentrant model
 13067 ;;
 13068                           
 13069     10EF                     ___lwmod:	
 13070                           ;psect for function ___lwmod
 13071                           
 13072     10EF                     l6461:	
 13073                           ;incstack = 0
 13074                           ; Regs used in ___lwmod: [wreg+status,2+status,0]
 13075                           
 13076     10EF  0021               	movlb	1	; select bank1
 13077     10F0  0820               	movf	___lwmod@divisor^(0+128),w
 13078     10F1  0421               	iorwf	(___lwmod@divisor+1)^(0+128),w
 13079     10F2  1903               	btfsc	3,2
 13080     10F3  28F5               	goto	u7891
 13081     10F4  28F6               	goto	u7890
 13082     10F5                     u7891:
 13083     10F5  291D               	goto	l6479
 13084     10F6                     u7890:
 13085     10F6                     l6463:
 13086     10F6  3001               	movlw	1
 13087     10F7  00A4               	movwf	___lwmod@counter^(0+128)
 13088     10F8  2900               	goto	l6469
 13089     10F9                     l6465:
 13090     10F9  3001               	movlw	1
 13091     10FA                     u7905:
 13092     10FA  35A0               	lslf	___lwmod@divisor^(0+128),f
 13093     10FB  0DA1               	rlf	(___lwmod@divisor+1)^(0+128),f
 13094     10FC  0B89               	decfsz	9,f
 13095     10FD  28FA               	goto	u7905
 13096     10FE                     l6467:
 13097     10FE  3001               	movlw	1
 13098     10FF  07A4               	addwf	___lwmod@counter^(0+128),f
 13099     1100                     l6469:
 13100     1100  1FA1               	btfss	(___lwmod@divisor+1)^(0+128),7
 13101     1101  2903               	goto	u7911
 13102     1102  2904               	goto	u7910
 13103     1103                     u7911:
 13104     1103  28F9               	goto	l6465
 13105     1104                     u7910:
 13106     1104                     l6471:
 13107     1104  0821               	movf	(___lwmod@divisor+1)^(0+128),w
 13108     1105  0223               	subwf	(___lwmod@dividend+1)^(0+128),w
 13109     1106  1D03               	skipz
 13110     1107  290A               	goto	u7925
 13111     1108  0820               	movf	___lwmod@divisor^(0+128),w
 13112     1109  0222               	subwf	___lwmod@dividend^(0+128),w
 13113     110A                     u7925:
 13114     110A  1C03               	skipc
 13115     110B  290D               	goto	u7921
 13116     110C  290E               	goto	u7920
 13117     110D                     u7921:
 13118     110D  2912               	goto	l6475
 13119     110E                     u7920:
 13120     110E                     l6473:
 13121     110E  0820               	movf	___lwmod@divisor^(0+128),w
 13122     110F  02A2               	subwf	___lwmod@dividend^(0+128),f
 13123     1110  0821               	movf	(___lwmod@divisor+1)^(0+128),w
 13124     1111  3BA3               	subwfb	(___lwmod@dividend+1)^(0+128),f
 13125     1112                     l6475:
 13126     1112  3001               	movlw	1
 13127     1113                     u7935:
 13128     1113  36A1               	lsrf	(___lwmod@divisor+1)^(0+128),f
 13129     1114  0CA0               	rrf	___lwmod@divisor^(0+128),f
 13130     1115  0B89               	decfsz	9,f
 13131     1116  2913               	goto	u7935
 13132     1117                     l6477:
 13133     1117  3001               	movlw	1
 13134     1118  02A4               	subwf	___lwmod@counter^(0+128),f
 13135     1119  1D03               	btfss	3,2
 13136     111A  291C               	goto	u7941
 13137     111B  291D               	goto	u7940
 13138     111C                     u7941:
 13139     111C  2904               	goto	l6471
 13140     111D                     u7940:
 13141     111D                     l6479:
 13142     111D  0823               	movf	(___lwmod@dividend+1)^(0+128),w
 13143     111E  00A1               	movwf	(?___lwmod+1)^(0+128)
 13144     111F  0822               	movf	___lwmod@dividend^(0+128),w
 13145     1120  00A0               	movwf	?___lwmod^(0+128)
 13146     1121                     l1482:
 13147     1121  0008               	return
 13148     1122                     __end_of___lwmod:
 13149                           
 13150                           	psect	text23
 13151     140C                     __ptext23:	
 13152 ;; *************** function _read_prec_or_width *****************
 13153 ;; Defined at:
 13154 ;;		line 1158 in file "C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c"
 13155 ;; Parameters:    Size  Location     Type
 13156 ;;  fmt             1    8[BANK1 ] PTR PTR const unsigned c
 13157 ;;		 -> vfprintf@cfmt(2), 
 13158 ;;  ap              2    9[BANK1 ] PTR PTR void [1]
 13159 ;;		 -> printf@ap(1), sprintf@ap(1), 
 13160 ;; Auto vars:     Size  Location     Type
 13161 ;;  c               1   14[BANK1 ] unsigned char 
 13162 ;;  n               2   15[BANK1 ] int 
 13163 ;; Return value:  Size  Location     Type
 13164 ;;                  2    8[BANK1 ] int 
 13165 ;; Registers used:
 13166 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 13167 ;; Tracked objects:
 13168 ;;		On entry : 0/0
 13169 ;;		On exit  : 0/0
 13170 ;;		Unchanged: 0/0
 13171 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 13172 ;;      Params:         0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0
 13173 ;;      Locals:         0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0
 13174 ;;      Temps:          0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0
 13175 ;;      Totals:         0       0       9       0       0       0       0       0       0       0       0       0       
      +0       0
 13176 ;;Total ram usage:        9 bytes
 13177 ;; Hardware stack levels used: 1
 13178 ;; Hardware stack levels required when called: 6
 13179 ;; This function calls:
 13180 ;;		___wmul
 13181 ;; This function is called by:
 13182 ;;		_vfpfcnvrt
 13183 ;; This function uses a non-reentrant model
 13184 ;;
 13185                           
 13186     140C                     _read_prec_or_width:	
 13187                           ;psect for function _read_prec_or_width
 13188                           
 13189     140C                     l6587:	
 13190                           ;incstack = 0
 13191                           ; Regs used in _read_prec_or_width: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 13192                           
 13193                           
 13194                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1159:     int n =
      +                           0;
 13195     140C  0021               	movlb	1	; select bank1
 13196     140D  01AF               	clrf	read_prec_or_width@n^(0+128)
 13197     140E  01B0               	clrf	(read_prec_or_width@n+1)^(0+128)
 13198     140F                     l6589:
 13199                           
 13200                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1160:     if ((*f
      +                          mt)[0] == '*') {
 13201     140F  0828               	movf	read_prec_or_width@fmt^(0+128),w
 13202     1410  0086               	movwf	6
 13203     1411  0187               	clrf	7
 13204     1412  3F40               	moviw [0]fsr1
 13205     1413  00AB               	movwf	??_read_prec_or_width^(0+128)
 13206     1414  3F41               	moviw [1]fsr1
 13207     1415  00AC               	movwf	(??_read_prec_or_width^(0+128)+1)
 13208     1416  082B               	movf	??_read_prec_or_width^(0+128),w
 13209     1417  0084               	movwf	4
 13210     1418  082C               	movf	(??_read_prec_or_width+1)^(0+128),w
 13211     1419  0085               	movwf	5
 13212     141A  0012               	moviw fsr0++
 13213     141B  3A2A               	xorlw	42
 13214     141C  1D03               	btfss	3,2
 13215     141D  2C1F               	goto	u8151
 13216     141E  2C20               	goto	u8150
 13217     141F                     u8151:
 13218     141F  2C50               	goto	l6599
 13219     1420                     u8150:
 13220     1420                     l6591:
 13221                           
 13222                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1161:         ++*
      +                          fmt;
 13223     1420  0828               	movf	read_prec_or_width@fmt^(0+128),w
 13224     1421  0086               	movwf	6
 13225     1422  0187               	clrf	7
 13226     1423  3001               	movlw	1
 13227     1424  0781               	addwf	1,f
 13228     1425  3141               	addfsr 1,1
 13229     1426  1803               	skipnc
 13230     1427  0A81               	incf	1,f
 13231     1428                     l6593:
 13232                           
 13233                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1162:         n =
      +                           (*(int *)__va_arg(*(int **)*ap, (int)0));
 13234     1428  0829               	movf	read_prec_or_width@ap^(0+128),w
 13235     1429  0086               	movwf	6
 13236     142A  082A               	movf	(read_prec_or_width@ap+1)^(0+128),w
 13237     142B  0087               	movwf	7
 13238     142C  0801               	movf	1,w
 13239     142D  0084               	movwf	4
 13240     142E  0185               	clrf	5
 13241     142F  3002               	movlw	2
 13242     1430  0781               	addwf	1,f
 13243     1431  3F00               	moviw [0]fsr0
 13244     1432  00AF               	movwf	read_prec_or_width@n^(0+128)
 13245     1433  3F01               	moviw [1]fsr0
 13246     1434  00B0               	movwf	(read_prec_or_width@n+1)^(0+128)
 13247                           
 13248                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1163:     } else 
      +                          {
 13249     1435  2C64               	goto	l6601
 13250     1436                     l6595:
 13251                           
 13252                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1166:            
      +                           n = n * 10 + c;
 13253     1436  0830               	movf	(read_prec_or_width@n+1)^(0+128),w
 13254     1437  00A3               	movwf	(___wmul@multiplier+1)^(0+128)
 13255     1438  082F               	movf	read_prec_or_width@n^(0+128),w
 13256     1439  00A2               	movwf	___wmul@multiplier^(0+128)
 13257     143A  300A               	movlw	10
 13258     143B  00A4               	movwf	___wmul@multiplicand^(0+128)
 13259     143C  3000               	movlw	0
 13260     143D  00A5               	movwf	(___wmul@multiplicand^(0+128)+1)
 13261     143E  319F  27C0  3194   	fcall	___wmul
 13262     1441  0021               	movlb	1	; select bank1
 13263     1442  082E               	movf	read_prec_or_width@c^(0+128),w
 13264     1443  0722               	addwf	?___wmul^(0+128),w
 13265     1444  00AF               	movwf	read_prec_or_width@n^(0+128)
 13266     1445  3000               	movlw	0
 13267     1446  3D23               	addwfc	(?___wmul+1)^(0+128),w
 13268     1447  00B0               	movwf	(read_prec_or_width@n+1)^(0+128)
 13269     1448                     l6597:
 13270                           
 13271                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1167:            
      +                           ++*fmt;
 13272     1448  0828               	movf	read_prec_or_width@fmt^(0+128),w
 13273     1449  0086               	movwf	6
 13274     144A  0187               	clrf	7
 13275     144B  3001               	movlw	1
 13276     144C  0781               	addwf	1,f
 13277     144D  3141               	addfsr 1,1
 13278     144E  1803               	skipnc
 13279     144F  0A81               	incf	1,f
 13280     1450                     l6599:
 13281                           
 13282                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1165:         whi
      +                          le ((c = ((unsigned)(*fmt)[0]) - '0') < 10) {
 13283     1450  0828               	movf	read_prec_or_width@fmt^(0+128),w
 13284     1451  0086               	movwf	6
 13285     1452  0187               	clrf	7
 13286     1453  3F40               	moviw [0]fsr1
 13287     1454  00AB               	movwf	??_read_prec_or_width^(0+128)
 13288     1455  3F41               	moviw [1]fsr1
 13289     1456  00AC               	movwf	(??_read_prec_or_width^(0+128)+1)
 13290     1457  082B               	movf	??_read_prec_or_width^(0+128),w
 13291     1458  0084               	movwf	4
 13292     1459  082C               	movf	(??_read_prec_or_width+1)^(0+128),w
 13293     145A  0085               	movwf	5
 13294     145B  0800               	movf	0,w	;code access
 13295     145C  3ED0               	addlw	208
 13296     145D  00AE               	movwf	read_prec_or_width@c^(0+128)
 13297     145E  300A               	movlw	10
 13298     145F  022E               	subwf	read_prec_or_width@c^(0+128),w
 13299     1460  1C03               	skipc
 13300     1461  2C63               	goto	u8161
 13301     1462  2C64               	goto	u8160
 13302     1463                     u8161:
 13303     1463  2C36               	goto	l6595
 13304     1464                     u8160:
 13305     1464                     l6601:
 13306                           
 13307                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1170:     return 
      +                          n;
 13308     1464  0830               	movf	(read_prec_or_width@n+1)^(0+128),w
 13309     1465  00A9               	movwf	(?_read_prec_or_width+1)^(0+128)
 13310     1466  082F               	movf	read_prec_or_width@n^(0+128),w
 13311     1467  00A8               	movwf	?_read_prec_or_width^(0+128)
 13312     1468                     l1734:
 13313     1468  0008               	return
 13314     1469                     __end_of_read_prec_or_width:
 13315                           
 13316                           	psect	text24
 13317     0715                     __ptext24:	
 13318 ;; *************** function _dtoa *****************
 13319 ;; Defined at:
 13320 ;;		line 513 in file "C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c"
 13321 ;; Parameters:    Size  Location     Type
 13322 ;;  fp              2   28[BANK1 ] PTR struct _IO_FILE
 13323 ;;		 -> sprintf@f(11), NULL(0), 
 13324 ;;  d               2   30[BANK1 ] int 
 13325 ;; Auto vars:     Size  Location     Type
 13326 ;;  i               2   39[BANK1 ] int 
 13327 ;;  w               2   36[BANK1 ] int 
 13328 ;;  s               1   38[BANK1 ] unsigned char 
 13329 ;;  p               1   35[BANK1 ] _Bool 
 13330 ;; Return value:  Size  Location     Type
 13331 ;;                  2   28[BANK1 ] int 
 13332 ;; Registers used:
 13333 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 13334 ;; Tracked objects:
 13335 ;;		On entry : 0/0
 13336 ;;		On exit  : 0/0
 13337 ;;		Unchanged: 0/0
 13338 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 13339 ;;      Params:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0
 13340 ;;      Locals:         0       0       8       0       0       0       0       0       0       0       0       0       
      +0       0
 13341 ;;      Temps:          0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0
 13342 ;;      Totals:         0       0      13       0       0       0       0       0       0       0       0       0       
      +0       0
 13343 ;;Total ram usage:       13 bytes
 13344 ;; Hardware stack levels used: 1
 13345 ;; Hardware stack levels required when called: 10
 13346 ;; This function calls:
 13347 ;;		___awdiv
 13348 ;;		___awmod
 13349 ;;		_abs
 13350 ;;		_pad
 13351 ;; This function is called by:
 13352 ;;		_vfpfcnvrt
 13353 ;; This function uses a non-reentrant model
 13354 ;;
 13355                           
 13356     0715                     _dtoa:	
 13357                           ;psect for function _dtoa
 13358                           
 13359     0715                     l6511:	
 13360                           ;incstack = 0
 13361                           ; Regs used in _dtoa: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 13362                           
 13363                           
 13364                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 513: static int d
      +                          toa(FILE *fp, vfpf_sint_t d);C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common
      +                          \doprnt.c: 514: {;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 
      +                          515:  char s;;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 516:
      +                               int i, w;;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 520
      +                          :  _Bool p = 1;
 13365     0715  3001               	movlw	1
 13366     0716  0021               	movlb	1	; select bank1
 13367     0717  00C3               	movwf	dtoa@p^(0+128)
 13368     0718                     l6513:
 13369                           
 13370                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 524:     s = d < 
      +                          0 ? 1 : 0;
 13371     0718  1BBF               	btfsc	(dtoa@d+1)^(0+128),7
 13372     0719  2F1B               	goto	u8001
 13373     071A  2F1D               	goto	u8000
 13374     071B                     u8001:
 13375     071B  3001               	movlw	1
 13376     071C  2F1E               	goto	u8010
 13377     071D                     u8000:
 13378     071D  3000               	movlw	0
 13379     071E                     u8010:
 13380     071E  00C6               	movwf	dtoa@s^(0+128)
 13381                           
 13382                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 535:     w = widt
      +                          h;
 13383     071F  0020               	movlb	0	; select bank0
 13384     0720  0856               	movf	_width+1,w
 13385     0721  0021               	movlb	1	; select bank1
 13386     0722  00C5               	movwf	(dtoa@w+1)^(0+128)
 13387     0723  0020               	movlb	0	; select bank0
 13388     0724  0855               	movf	_width,w
 13389     0725  0021               	movlb	1	; select bank1
 13390     0726  00C4               	movwf	dtoa@w^(0+128)
 13391     0727                     l6515:
 13392                           
 13393                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 536:     if (s
 13394     0727  0846               	movf	dtoa@s^(0+128),w
 13395     0728  1903               	btfsc	3,2
 13396     0729  2F2B               	goto	u8021
 13397     072A  2F2C               	goto	u8020
 13398     072B                     u8021:
 13399     072B  2F40               	goto	l1703
 13400     072C                     u8020:
 13401     072C                     l6517:
 13402                           
 13403                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 540:     ) {;C:\P
      +                          rogram Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 541:         --w;
 13404     072C  30FF               	movlw	255
 13405     072D  07C4               	addwf	dtoa@w^(0+128),f
 13406     072E  30FF               	movlw	255
 13407     072F  3DC5               	addwfc	(dtoa@w+1)^(0+128),f
 13408     0730                     l6519:
 13409                           
 13410                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 542:   s = s ? '-
      +                          ' : '+';
 13411     0730  0846               	movf	dtoa@s^(0+128),w
 13412     0731  1D03               	btfss	3,2
 13413     0732  2F34               	goto	u8031
 13414     0733  2F35               	goto	u8030
 13415     0734                     u8031:
 13416     0734  2F3A               	goto	l6523
 13417     0735                     u8030:
 13418     0735                     l6521:
 13419     0735  302B               	movlw	43
 13420     0736  00C1               	movwf	_dtoa$2147^(0+128)
 13421     0737  3000               	movlw	0
 13422     0738  00C2               	movwf	(_dtoa$2147^(0+128)+1)
 13423     0739  2F3E               	goto	l1707
 13424     073A                     l6523:
 13425     073A  302D               	movlw	45
 13426     073B  00C1               	movwf	_dtoa$2147^(0+128)
 13427     073C  3000               	movlw	0
 13428     073D  00C2               	movwf	(_dtoa$2147^(0+128)+1)
 13429     073E                     l1707:
 13430     073E  0841               	movf	_dtoa$2147^(0+128),w
 13431     073F  00C6               	movwf	dtoa@s^(0+128)
 13432     0740                     l1703:	
 13433                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 543:     }
 13434                           
 13435                           
 13436                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 552:     i = size
      +                          of(dbuf) - 1;
 13437     0740  301F               	movlw	31
 13438     0741  00C7               	movwf	dtoa@i^(0+128)
 13439     0742  3000               	movlw	0
 13440     0743  00C8               	movwf	(dtoa@i^(0+128)+1)
 13441     0744                     l6525:
 13442                           
 13443                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 553:     dbuf[i] 
      +                          = '\0';
 13444     0744  0023               	movlb	3	; select bank3
 13445     0745  01D7               	clrf	(_dbuf^(0+384)+31)
 13446                           
 13447                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 554:     while (!
      +                          (i < 1) && (d != 0
 13448     0746  2F7D               	goto	l6537
 13449     0747                     l6527:
 13450                           
 13451                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 563:     )) {;C:\
      +                          Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 564:         --i;
 13452     0747  30FF               	movlw	255
 13453     0748  0021               	movlb	1	; select bank1
 13454     0749  07C7               	addwf	dtoa@i^(0+128),f
 13455     074A  30FF               	movlw	255
 13456     074B  3DC8               	addwfc	(dtoa@i+1)^(0+128),f
 13457     074C                     l6529:
 13458                           
 13459                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 565:         dbuf
      +                          [i] = (char)((int)'0' + abs(d % 10));
 13460     074C  0847               	movf	dtoa@i^(0+128),w
 13461     074D  3EB8               	addlw	(low (_dbuf| (0+256)))& (0+255)
 13462     074E  0086               	movwf	6
 13463     074F  3001               	movlw	1	; select bank3/4
 13464     0750  0087               	movwf	7
 13465     0751  300A               	movlw	10
 13466     0752  00A0               	movwf	___awmod@divisor^(0+128)
 13467     0753  3000               	movlw	0
 13468     0754  00A1               	movwf	(___awmod@divisor^(0+128)+1)
 13469     0755  083F               	movf	(dtoa@d+1)^(0+128),w
 13470     0756  00A3               	movwf	(___awmod@dividend+1)^(0+128)
 13471     0757  083E               	movf	dtoa@d^(0+128),w
 13472     0758  00A2               	movwf	___awmod@dividend^(0+128)
 13473     0759  3192  22B0  3187   	fcall	___awmod
 13474     075C  0021               	movlb	1	; select bank1
 13475     075D  0821               	movf	(?___awmod+1)^(0+128),w
 13476     075E  00A7               	movwf	(abs@a+1)^(0+128)
 13477     075F  0820               	movf	?___awmod^(0+128),w
 13478     0760  00A6               	movwf	abs@a^(0+128)
 13479     0761  319E  26BF  3187   	fcall	_abs
 13480     0764  0021               	movlb	1	; select bank1
 13481     0765  0826               	movf	?_abs^(0+128),w
 13482     0766  3E30               	addlw	48
 13483     0767  0081               	movwf	1
 13484     0768                     l6531:
 13485                           
 13486                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 569:   p = 0;
 13487     0768  01C3               	clrf	dtoa@p^(0+128)
 13488     0769                     l6533:
 13489                           
 13490                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 571:         --w;
 13491     0769  30FF               	movlw	255
 13492     076A  07C4               	addwf	dtoa@w^(0+128),f
 13493     076B  30FF               	movlw	255
 13494     076C  3DC5               	addwfc	(dtoa@w+1)^(0+128),f
 13495     076D                     l6535:
 13496                           
 13497                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 572:         d = 
      +                          d / 10;
 13498     076D  300A               	movlw	10
 13499     076E  00A0               	movwf	___awdiv@divisor^(0+128)
 13500     076F  3000               	movlw	0
 13501     0770  00A1               	movwf	(___awdiv@divisor^(0+128)+1)
 13502     0771  083F               	movf	(dtoa@d+1)^(0+128),w
 13503     0772  00A3               	movwf	(___awdiv@dividend+1)^(0+128)
 13504     0773  083E               	movf	dtoa@d^(0+128),w
 13505     0774  00A2               	movwf	___awdiv@dividend^(0+128)
 13506     0775  3193  23B0  3187   	fcall	___awdiv
 13507     0778  0021               	movlb	1	; select bank1
 13508     0779  0821               	movf	(?___awdiv+1)^(0+128),w
 13509     077A  00BF               	movwf	(dtoa@d+1)^(0+128)
 13510     077B  0820               	movf	?___awdiv^(0+128),w
 13511     077C  00BE               	movwf	dtoa@d^(0+128)
 13512     077D                     l6537:
 13513                           
 13514                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 554:     while (!
      +                          (i < 1) && (d != 0
 13515     077D  0021               	movlb	1	; select bank1
 13516     077E  0848               	movf	(dtoa@i+1)^(0+128),w
 13517     077F  3A80               	xorlw	128
 13518     0780  00C0               	movwf	??_dtoa^(0+128)
 13519     0781  3080               	movlw	128
 13520     0782  0240               	subwf	??_dtoa^(0+128),w
 13521     0783  1D03               	skipz
 13522     0784  2F87               	goto	u8045
 13523     0785  3001               	movlw	1
 13524     0786  0247               	subwf	dtoa@i^(0+128),w
 13525     0787                     u8045:
 13526     0787  1C03               	skipc
 13527     0788  2F8A               	goto	u8041
 13528     0789  2F8B               	goto	u8040
 13529     078A                     u8041:
 13530     078A  2FA9               	goto	l6547
 13531     078B                     u8040:
 13532     078B                     l6539:
 13533     078B  0021               	movlb	1	; select bank1
 13534     078C  083E               	movf	dtoa@d^(0+128),w
 13535     078D  043F               	iorwf	(dtoa@d+1)^(0+128),w
 13536     078E  1D03               	btfss	3,2
 13537     078F  2F91               	goto	u8051
 13538     0790  2F92               	goto	u8050
 13539     0791                     u8051:
 13540     0791  2F47               	goto	l6527
 13541     0792                     u8050:
 13542     0792                     l6541:
 13543     0792  0843               	movf	dtoa@p^(0+128),w
 13544     0793  1D03               	btfss	3,2
 13545     0794  2F96               	goto	u8061
 13546     0795  2F97               	goto	u8060
 13547     0796                     u8061:
 13548     0796  2F47               	goto	l6527
 13549     0797                     u8060:
 13550     0797                     l6543:
 13551     0797  0845               	movf	(dtoa@w+1)^(0+128),w
 13552     0798  3A80               	xorlw	128
 13553     0799  00C0               	movwf	??_dtoa^(0+128)
 13554     079A  3080               	movlw	128
 13555     079B  0240               	subwf	??_dtoa^(0+128),w
 13556     079C  1D03               	skipz
 13557     079D  2FA0               	goto	u8075
 13558     079E  3001               	movlw	1
 13559     079F  0244               	subwf	dtoa@w^(0+128),w
 13560     07A0                     u8075:
 13561     07A0  1C03               	skipc
 13562     07A1  2FA3               	goto	u8071
 13563     07A2  2FA4               	goto	u8070
 13564     07A3                     u8071:
 13565     07A3  2FA9               	goto	l6547
 13566     07A4                     u8070:
 13567     07A4                     l6545:
 13568     07A4  0020               	movlb	0	; select bank0
 13569     07A5  18E3               	btfsc	_flags,1
 13570     07A6  2FA8               	goto	u8081
 13571     07A7  2FA9               	goto	u8080
 13572     07A8                     u8081:
 13573     07A8  2F47               	goto	l6527
 13574     07A9                     u8080:
 13575     07A9                     l6547:
 13576                           
 13577                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 576:     if (s !=
      +                           0) {
 13578     07A9  0021               	movlb	1	; select bank1
 13579     07AA  0846               	movf	dtoa@s^(0+128),w
 13580     07AB  1903               	btfsc	3,2
 13581     07AC  2FAE               	goto	u8091
 13582     07AD  2FAF               	goto	u8090
 13583     07AE                     u8091:
 13584     07AE  2FBA               	goto	l6553
 13585     07AF                     u8090:
 13586     07AF                     l6549:
 13587                           
 13588                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 577:         --i;
 13589     07AF  30FF               	movlw	255
 13590     07B0  07C7               	addwf	dtoa@i^(0+128),f
 13591     07B1  30FF               	movlw	255
 13592     07B2  3DC8               	addwfc	(dtoa@i+1)^(0+128),f
 13593     07B3                     l6551:
 13594                           
 13595                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 578:         dbuf
      +                          [i] = s;
 13596     07B3  0847               	movf	dtoa@i^(0+128),w
 13597     07B4  3EB8               	addlw	(low (_dbuf| (0+256)))& (0+255)
 13598     07B5  0086               	movwf	6
 13599     07B6  3001               	movlw	1	; select bank3/4
 13600     07B7  0087               	movwf	7
 13601     07B8  0846               	movf	dtoa@s^(0+128),w
 13602     07B9  0081               	movwf	1
 13603     07BA                     l6553:
 13604                           
 13605                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 582:     return (
      +                          int) pad(fp, &dbuf[i], w);
 13606     07BA  083D               	movf	(dtoa@fp+1)^(0+128),w
 13607     07BB  00B5               	movwf	(pad@fp+1)^(0+128)
 13608     07BC  083C               	movf	dtoa@fp^(0+128),w
 13609     07BD  00B4               	movwf	pad@fp^(0+128)
 13610     07BE  0847               	movf	dtoa@i^(0+128),w
 13611     07BF  3EB8               	addlw	(low (_dbuf| (0+256)))& (0+255)
 13612     07C0  00B6               	movwf	pad@buf^(0+128)
 13613     07C1  0845               	movf	(dtoa@w+1)^(0+128),w
 13614     07C2  00B8               	movwf	(pad@p+1)^(0+128)
 13615     07C3  0844               	movf	dtoa@w^(0+128),w
 13616     07C4  00B7               	movwf	pad@p^(0+128)
 13617     07C5  3193  2302  3187   	fcall	_pad
 13618     07C8  0021               	movlb	1	; select bank1
 13619     07C9  0835               	movf	(?_pad+1)^(0+128),w
 13620     07CA  00BD               	movwf	(?_dtoa+1)^(0+128)
 13621     07CB  0834               	movf	?_pad^(0+128),w
 13622     07CC  00BC               	movwf	?_dtoa^(0+128)
 13623     07CD                     l1716:
 13624     07CD  0008               	return
 13625     07CE                     __end_of_dtoa:
 13626                           
 13627                           	psect	text25
 13628     1302                     __ptext25:	
 13629 ;; *************** function _pad *****************
 13630 ;; Defined at:
 13631 ;;		line 193 in file "C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c"
 13632 ;; Parameters:    Size  Location     Type
 13633 ;;  fp              2   20[BANK1 ] PTR struct _IO_FILE
 13634 ;;		 -> sprintf@f(11), NULL(0), 
 13635 ;;  buf             1   22[BANK1 ] PTR unsigned char 
 13636 ;;		 -> dbuf(32), 
 13637 ;;  p               2   23[BANK1 ] int 
 13638 ;; Auto vars:     Size  Location     Type
 13639 ;;  i               2   26[BANK1 ] int 
 13640 ;; Return value:  Size  Location     Type
 13641 ;;                  2   20[BANK1 ] int 
 13642 ;; Registers used:
 13643 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 13644 ;; Tracked objects:
 13645 ;;		On entry : 0/0
 13646 ;;		On exit  : 0/0
 13647 ;;		Unchanged: 0/0
 13648 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 13649 ;;      Params:         0       0       5       0       0       0       0       0       0       0       0       0       
      +0       0
 13650 ;;      Locals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0
 13651 ;;      Temps:          0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0
 13652 ;;      Totals:         0       0       8       0       0       0       0       0       0       0       0       0       
      +0       0
 13653 ;;Total ram usage:        8 bytes
 13654 ;; Hardware stack levels used: 1
 13655 ;; Hardware stack levels required when called: 9
 13656 ;; This function calls:
 13657 ;;		_fputc
 13658 ;;		_fputs
 13659 ;;		_strlen
 13660 ;; This function is called by:
 13661 ;;		_dtoa
 13662 ;;		_utoa
 13663 ;; This function uses a non-reentrant model
 13664 ;;
 13665                           
 13666     1302                     _pad:	
 13667                           ;psect for function _pad
 13668                           
 13669     1302                     l6483:	
 13670                           ;incstack = 0
 13671                           ; Regs used in _pad: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 13672                           
 13673                           
 13674                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 193: static int p
      +                          ad(FILE *fp, char *buf, int p);C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\comm
      +                          on\doprnt.c: 194: {;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c
      +                          : 195:     int i;;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 
      +                          199:     if (flags & (1 << 0)) {
 13675     1302  0020               	movlb	0	; select bank0
 13676     1303  1C63               	btfss	_flags,0
 13677     1304  2B06               	goto	u7951
 13678     1305  2B07               	goto	u7950
 13679     1306                     u7951:
 13680     1306  2B11               	goto	l6487
 13681     1307                     u7950:
 13682     1307                     l6485:
 13683                           
 13684                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 200:         fput
      +                          s((const char *)buf, fp);
 13685     1307  0021               	movlb	1	; select bank1
 13686     1308  0836               	movf	pad@buf^(0+128),w
 13687     1309  00AC               	movwf	fputs@s^(0+128)
 13688     130A  0835               	movf	(pad@fp+1)^(0+128),w
 13689     130B  00AE               	movwf	(fputs@fp+1)^(0+128)
 13690     130C  0834               	movf	pad@fp^(0+128),w
 13691     130D  00AD               	movwf	fputs@fp^(0+128)
 13692     130E  3190  2059  3193   	fcall	_fputs
 13693     1311                     l6487:
 13694                           
 13695                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 205:  if (p < 0) 
      +                          {
 13696     1311  0021               	movlb	1	; select bank1
 13697     1312  1FB8               	btfss	(pad@p+1)^(0+128),7
 13698     1313  2B15               	goto	u7961
 13699     1314  2B16               	goto	u7960
 13700     1315                     u7961:
 13701     1315  2B18               	goto	l1695
 13702     1316                     u7960:
 13703     1316                     l6489:
 13704                           
 13705                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 206:   p = 0;
 13706     1316  01B7               	clrf	pad@p^(0+128)
 13707     1317  01B8               	clrf	(pad@p+1)^(0+128)
 13708     1318                     l1695:	
 13709                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 207:  }
 13710                           
 13711                           
 13712                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 208:     i = 0;
 13713     1318  01BA               	clrf	pad@i^(0+128)
 13714     1319  01BB               	clrf	(pad@i+1)^(0+128)
 13715                           
 13716                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 209:     while (i
      +                           < p) {
 13717     131A  2B2C               	goto	l6495
 13718     131B                     l6491:
 13719                           
 13720                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 210:         fput
      +                          c(' ', fp);
 13721     131B  3020               	movlw	32
 13722     131C  0021               	movlb	1	; select bank1
 13723     131D  00A3               	movwf	fputc@c^(0+128)
 13724     131E  3000               	movlw	0
 13725     131F  00A4               	movwf	(fputc@c^(0+128)+1)
 13726     1320  0835               	movf	(pad@fp+1)^(0+128),w
 13727     1321  00A6               	movwf	(fputc@fp+1)^(0+128)
 13728     1322  0834               	movf	pad@fp^(0+128),w
 13729     1323  00A5               	movwf	fputc@fp^(0+128)
 13730     1324  3194  2469  3193   	fcall	_fputc
 13731     1327                     l6493:
 13732                           
 13733                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 211:         ++i;
 13734     1327  3001               	movlw	1
 13735     1328  0021               	movlb	1	; select bank1
 13736     1329  07BA               	addwf	pad@i^(0+128),f
 13737     132A  3000               	movlw	0
 13738     132B  3DBB               	addwfc	(pad@i+1)^(0+128),f
 13739     132C                     l6495:
 13740                           
 13741                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 209:     while (i
      +                           < p) {
 13742     132C  083B               	movf	(pad@i+1)^(0+128),w
 13743     132D  3A80               	xorlw	128
 13744     132E  00B9               	movwf	??_pad^(0+128)
 13745     132F  0838               	movf	(pad@p+1)^(0+128),w
 13746     1330  3A80               	xorlw	128
 13747     1331  0239               	subwf	??_pad^(0+128),w
 13748     1332  1D03               	skipz
 13749     1333  2B36               	goto	u7975
 13750     1334  0837               	movf	pad@p^(0+128),w
 13751     1335  023A               	subwf	pad@i^(0+128),w
 13752     1336                     u7975:
 13753     1336  1C03               	skipc
 13754     1337  2B39               	goto	u7971
 13755     1338  2B3A               	goto	u7970
 13756     1339                     u7971:
 13757     1339  2B1B               	goto	l6491
 13758     133A                     u7970:
 13759     133A                     l1698:
 13760                           
 13761                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 216:     if (!(fl
      +                          ags & (1 << 0))) {
 13762     133A  0020               	movlb	0	; select bank0
 13763     133B  1863               	btfsc	_flags,0
 13764     133C  2B3E               	goto	u7981
 13765     133D  2B3F               	goto	u7980
 13766     133E                     u7981:
 13767     133E  2B49               	goto	l6499
 13768     133F                     u7980:
 13769     133F                     l6497:
 13770                           
 13771                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 218:         fput
      +                          s((const char *)buf, fp);
 13772     133F  0021               	movlb	1	; select bank1
 13773     1340  0836               	movf	pad@buf^(0+128),w
 13774     1341  00AC               	movwf	fputs@s^(0+128)
 13775     1342  0835               	movf	(pad@fp+1)^(0+128),w
 13776     1343  00AE               	movwf	(fputs@fp+1)^(0+128)
 13777     1344  0834               	movf	pad@fp^(0+128),w
 13778     1345  00AD               	movwf	fputs@fp^(0+128)
 13779     1346  3190  2059  3193   	fcall	_fputs
 13780     1349                     l6499:
 13781                           
 13782                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 224:     return (
      +                          int)(strlen(buf) + (size_t)p);
 13783     1349  0021               	movlb	1	; select bank1
 13784     134A  0836               	movf	pad@buf^(0+128),w
 13785     134B  00A0               	movwf	strlen@s^(0+128)
 13786     134C  319F  2723  3193   	fcall	_strlen
 13787     134F  0021               	movlb	1	; select bank1
 13788     1350  0837               	movf	pad@p^(0+128),w
 13789     1351  0720               	addwf	?_strlen^(0+128),w
 13790     1352  00B4               	movwf	?_pad^(0+128)
 13791     1353  0838               	movf	(pad@p+1)^(0+128),w
 13792     1354  3D21               	addwfc	(?_strlen+1)^(0+128),w
 13793     1355  00B5               	movwf	(?_pad+1)^(0+128)
 13794     1356                     l1700:
 13795     1356  0008               	return
 13796     1357                     __end_of_pad:
 13797                           
 13798                           	psect	text26
 13799     1F23                     __ptext26:	
 13800 ;; *************** function _strlen *****************
 13801 ;; Defined at:
 13802 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\strlen.c"
 13803 ;; Parameters:    Size  Location     Type
 13804 ;;  s               1    0[BANK1 ] PTR const unsigned char 
 13805 ;;		 -> dbuf(32), 
 13806 ;; Auto vars:     Size  Location     Type
 13807 ;;  a               1    2[BANK1 ] PTR const unsigned char 
 13808 ;;		 -> dbuf(32), 
 13809 ;; Return value:  Size  Location     Type
 13810 ;;                  2    0[BANK1 ] unsigned int 
 13811 ;; Registers used:
 13812 ;;		wreg, fsr1l, fsr1h, status,2, status,0
 13813 ;; Tracked objects:
 13814 ;;		On entry : 0/0
 13815 ;;		On exit  : 0/0
 13816 ;;		Unchanged: 0/0
 13817 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 13818 ;;      Params:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0
 13819 ;;      Locals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0
 13820 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13821 ;;      Totals:         0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0
 13822 ;;Total ram usage:        3 bytes
 13823 ;; Hardware stack levels used: 1
 13824 ;; Hardware stack levels required when called: 5
 13825 ;; This function calls:
 13826 ;;		Nothing
 13827 ;; This function is called by:
 13828 ;;		_pad
 13829 ;; This function uses a non-reentrant model
 13830 ;;
 13831                           
 13832     1F23                     _strlen:	
 13833                           ;psect for function _strlen
 13834                           
 13835     1F23                     l6329:	
 13836                           ;incstack = 0
 13837                           ; Regs used in _strlen: [wreg+fsr1l+fsr1h+status,2+status,0]
 13838                           
 13839     1F23  0021               	movlb	1	; select bank1
 13840     1F24  0820               	movf	strlen@s^(0+128),w
 13841     1F25  00A2               	movwf	strlen@a^(0+128)
 13842     1F26  2F29               	goto	l6333
 13843     1F27                     l6331:
 13844     1F27  3001               	movlw	1
 13845     1F28  07A0               	addwf	strlen@s^(0+128),f
 13846     1F29                     l6333:
 13847     1F29  0820               	movf	strlen@s^(0+128),w
 13848     1F2A  0086               	movwf	6
 13849     1F2B  3001               	movlw	1	; select bank2/3
 13850     1F2C  0087               	movwf	7
 13851     1F2D  0801               	movf	1,w
 13852     1F2E  1D03               	btfss	3,2
 13853     1F2F  2F31               	goto	u7581
 13854     1F30  2F32               	goto	u7580
 13855     1F31                     u7581:
 13856     1F31  2F27               	goto	l6331
 13857     1F32                     u7580:
 13858     1F32                     l6335:
 13859     1F32  0822               	movf	strlen@a^(0+128),w
 13860     1F33  0220               	subwf	strlen@s^(0+128),w
 13861     1F34  00A0               	movwf	?_strlen^(0+128)
 13862     1F35  01A1               	clrf	(?_strlen+1)^(0+128)
 13863     1F36  1BA0               	btfsc	?_strlen^(0+128),7
 13864     1F37  03A1               	decf	(?_strlen+1)^(0+128),f
 13865     1F38                     l1803:
 13866     1F38  0008               	return
 13867     1F39                     __end_of_strlen:
 13868                           
 13869                           	psect	text27
 13870     1059                     __ptext27:	
 13871 ;; *************** function _fputs *****************
 13872 ;; Defined at:
 13873 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\nf_fputs.c"
 13874 ;; Parameters:    Size  Location     Type
 13875 ;;  s               1   12[BANK1 ] PTR const unsigned char 
 13876 ;;		 -> dbuf(32), 
 13877 ;;  fp              2   13[BANK1 ] PTR struct _IO_FILE
 13878 ;;		 -> sprintf@f(11), NULL(0), 
 13879 ;; Auto vars:     Size  Location     Type
 13880 ;;  i               2   18[BANK1 ] int 
 13881 ;;  c               1   17[BANK1 ] unsigned char 
 13882 ;; Return value:  Size  Location     Type
 13883 ;;                  2   12[BANK1 ] int 
 13884 ;; Registers used:
 13885 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 13886 ;; Tracked objects:
 13887 ;;		On entry : 0/0
 13888 ;;		On exit  : 0/0
 13889 ;;		Unchanged: 0/0
 13890 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 13891 ;;      Params:         0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0
 13892 ;;      Locals:         0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0
 13893 ;;      Temps:          0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0
 13894 ;;      Totals:         0       0       8       0       0       0       0       0       0       0       0       0       
      +0       0
 13895 ;;Total ram usage:        8 bytes
 13896 ;; Hardware stack levels used: 1
 13897 ;; Hardware stack levels required when called: 8
 13898 ;; This function calls:
 13899 ;;		_fputc
 13900 ;; This function is called by:
 13901 ;;		_pad
 13902 ;; This function uses a non-reentrant model
 13903 ;;
 13904                           
 13905     1059                     _fputs:	
 13906                           ;psect for function _fputs
 13907                           
 13908     1059                     l6321:	
 13909                           ;incstack = 0
 13910                           ; Regs used in _fputs: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 13911                           
 13912     1059  0021               	movlb	1	; select bank1
 13913     105A  01B2               	clrf	fputs@i^(0+128)
 13914     105B  01B3               	clrf	(fputs@i+1)^(0+128)
 13915     105C  2870               	goto	l6327
 13916     105D                     l6323:
 13917     105D  0831               	movf	fputs@c^(0+128),w
 13918     105E  00AF               	movwf	??_fputs^(0+128)
 13919     105F  01B0               	clrf	(??_fputs^(0+128)+1)
 13920     1060  082F               	movf	??_fputs^(0+128),w
 13921     1061  00A3               	movwf	fputc@c^(0+128)
 13922     1062  0830               	movf	(??_fputs+1)^(0+128),w
 13923     1063  00A4               	movwf	(fputc@c+1)^(0+128)
 13924     1064  082E               	movf	(fputs@fp+1)^(0+128),w
 13925     1065  00A6               	movwf	(fputc@fp+1)^(0+128)
 13926     1066  082D               	movf	fputs@fp^(0+128),w
 13927     1067  00A5               	movwf	fputc@fp^(0+128)
 13928     1068  3194  2469  3190   	fcall	_fputc
 13929     106B                     l6325:
 13930     106B  3001               	movlw	1
 13931     106C  0021               	movlb	1	; select bank1
 13932     106D  07B2               	addwf	fputs@i^(0+128),f
 13933     106E  3000               	movlw	0
 13934     106F  3DB3               	addwfc	(fputs@i+1)^(0+128),f
 13935     1070                     l6327:
 13936     1070  082C               	movf	fputs@s^(0+128),w
 13937     1071  0732               	addwf	fputs@i^(0+128),w
 13938     1072  0086               	movwf	6
 13939     1073  3001               	movlw	1	; select bank2/3
 13940     1074  0087               	movwf	7
 13941     1075  0801               	movf	1,w
 13942     1076  00B1               	movwf	fputs@c^(0+128)
 13943     1077  0831               	movf	fputs@c^(0+128),w
 13944     1078  1D03               	btfss	3,2
 13945     1079  287B               	goto	u7571
 13946     107A  287C               	goto	u7570
 13947     107B                     u7571:
 13948     107B  285D               	goto	l6323
 13949     107C                     u7570:
 13950     107C                     l1790:
 13951     107C  0008               	return
 13952     107D                     __end_of_fputs:
 13953                           
 13954                           	psect	text28
 13955     1469                     __ptext28:	
 13956 ;; *************** function _fputc *****************
 13957 ;; Defined at:
 13958 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\nf_fputc.c"
 13959 ;; Parameters:    Size  Location     Type
 13960 ;;  c               2    3[BANK1 ] int 
 13961 ;;  fp              2    5[BANK1 ] PTR struct _IO_FILE
 13962 ;;		 -> sprintf@f(11), NULL(0), 
 13963 ;; Auto vars:     Size  Location     Type
 13964 ;;		None
 13965 ;; Return value:  Size  Location     Type
 13966 ;;                  2    3[BANK1 ] int 
 13967 ;; Registers used:
 13968 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 13969 ;; Tracked objects:
 13970 ;;		On entry : 0/0
 13971 ;;		On exit  : 0/0
 13972 ;;		Unchanged: 0/0
 13973 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 13974 ;;      Params:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0
 13975 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13976 ;;      Temps:          0       0       5       0       0       0       0       0       0       0       0       0       
      +0       0
 13977 ;;      Totals:         0       0       9       0       0       0       0       0       0       0       0       0       
      +0       0
 13978 ;;Total ram usage:        9 bytes
 13979 ;; Hardware stack levels used: 1
 13980 ;; Hardware stack levels required when called: 7
 13981 ;; This function calls:
 13982 ;;		_putch
 13983 ;; This function is called by:
 13984 ;;		_pad
 13985 ;;		_vfpfcnvrt
 13986 ;;		_fputs
 13987 ;; This function uses a non-reentrant model
 13988 ;;
 13989                           
 13990     1469                     _fputc:	
 13991                           ;psect for function _fputc
 13992                           
 13993     1469                     l6305:	
 13994                           ;incstack = 0
 13995                           ; Regs used in _fputc: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 13996                           
 13997     1469  0021               	movlb	1	; select bank1
 13998     146A  0825               	movf	fputc@fp^(0+128),w
 13999     146B  0426               	iorwf	(fputc@fp+1)^(0+128),w
 14000     146C  1903               	btfsc	3,2
 14001     146D  2C6F               	goto	u7531
 14002     146E  2C70               	goto	u7530
 14003     146F                     u7531:
 14004     146F  2C76               	goto	l6309
 14005     1470                     u7530:
 14006     1470                     l6307:
 14007     1470  0825               	movf	fputc@fp^(0+128),w
 14008     1471  0426               	iorwf	(fputc@fp+1)^(0+128),w
 14009     1472  1D03               	btfss	3,2
 14010     1473  2C75               	goto	u7541
 14011     1474  2C76               	goto	u7540
 14012     1475                     u7541:
 14013     1475  2C7B               	goto	l6311
 14014     1476                     u7540:
 14015     1476                     l6309:
 14016     1476  0823               	movf	fputc@c^(0+128),w
 14017     1477  319E  268C  3194   	fcall	_putch
 14018     147A  2CC6               	goto	l1782
 14019     147B                     l6311:
 14020     147B  0825               	movf	fputc@fp^(0+128),w
 14021     147C  0086               	movwf	6
 14022     147D  0826               	movf	(fputc@fp+1)^(0+128),w
 14023     147E  0087               	movwf	7
 14024     147F  3149               	addfsr 1,9
 14025     1480  0016               	moviw fsr1++
 14026     1481  0401               	iorwf	1,w
 14027     1482  1903               	btfsc	3,2
 14028     1483  2C85               	goto	u7551
 14029     1484  2C86               	goto	u7550
 14030     1485                     u7551:
 14031     1485  2CA6               	goto	l6315
 14032     1486                     u7550:
 14033     1486                     l6313:
 14034     1486  0825               	movf	fputc@fp^(0+128),w
 14035     1487  0086               	movwf	6
 14036     1488  0826               	movf	(fputc@fp+1)^(0+128),w
 14037     1489  0087               	movwf	7
 14038     148A  3149               	addfsr 1,9
 14039     148B  3F40               	moviw [0]fsr1
 14040     148C  00A7               	movwf	??_fputc^(0+128)
 14041     148D  3F41               	moviw [1]fsr1
 14042     148E  00A8               	movwf	(??_fputc^(0+128)+1)
 14043     148F  0825               	movf	fputc@fp^(0+128),w
 14044     1490  0086               	movwf	6
 14045     1491  0826               	movf	(fputc@fp+1)^(0+128),w
 14046     1492  0087               	movwf	7
 14047     1493  3142               	addfsr 1,2
 14048     1494  3F40               	moviw [0]fsr1
 14049     1495  00A9               	movwf	(??_fputc+2)^(0+128)
 14050     1496  3F41               	moviw [1]fsr1
 14051     1497  00AA               	movwf	((??_fputc+2)^(0+128)+1)
 14052     1498  082A               	movf	(??_fputc+3)^(0+128),w
 14053     1499  3A80               	xorlw	128
 14054     149A  00AB               	movwf	(??_fputc+4)^(0+128)
 14055     149B  0828               	movf	(??_fputc+1)^(0+128),w
 14056     149C  3A80               	xorlw	128
 14057     149D  022B               	subwf	(??_fputc+4)^(0+128),w
 14058     149E  1D03               	skipz
 14059     149F  2CA2               	goto	u7565
 14060     14A0  0827               	movf	??_fputc^(0+128),w
 14061     14A1  0229               	subwf	(??_fputc+2)^(0+128),w
 14062     14A2                     u7565:
 14063     14A2  1803               	skipnc
 14064     14A3  2CA5               	goto	u7561
 14065     14A4  2CA6               	goto	u7560
 14066     14A5                     u7561:
 14067     14A5  2CC6               	goto	l1782
 14068     14A6                     u7560:
 14069     14A6                     l6315:
 14070     14A6  0021               	movlb	1	; select bank1
 14071     14A7  0825               	movf	fputc@fp^(0+128),w
 14072     14A8  0086               	movwf	6
 14073     14A9  0826               	movf	(fputc@fp+1)^(0+128),w
 14074     14AA  0087               	movwf	7
 14075     14AB  3142               	addfsr 1,2
 14076     14AC  0825               	movf	fputc@fp^(0+128),w
 14077     14AD  0084               	movwf	4
 14078     14AE  0826               	movf	(fputc@fp+1)^(0+128),w
 14079     14AF  0085               	movwf	5
 14080     14B0  3F00               	moviw [0]fsr0
 14081     14B1  00A7               	movwf	??_fputc^(0+128)
 14082     14B2  3F01               	moviw [1]fsr0
 14083     14B3  00A8               	movwf	(??_fputc^(0+128)+1)
 14084     14B4  3F40               	moviw [0]fsr1
 14085     14B5  0727               	addwf	??_fputc^(0+128),w
 14086     14B6  0084               	movwf	4
 14087     14B7  3F41               	moviw [1]fsr1
 14088     14B8  3D28               	addwfc	(??_fputc+1)^(0+128),w
 14089     14B9  0085               	movwf	5
 14090     14BA  0823               	movf	fputc@c^(0+128),w
 14091     14BB  0080               	movwf	0
 14092     14BC                     l6317:
 14093     14BC  0825               	movf	fputc@fp^(0+128),w
 14094     14BD  0086               	movwf	6
 14095     14BE  0826               	movf	(fputc@fp+1)^(0+128),w
 14096     14BF  0087               	movwf	7
 14097     14C0  3142               	addfsr 1,2
 14098     14C1  3001               	movlw	1
 14099     14C2  0781               	addwf	1,f
 14100     14C3  3141               	addfsr 1,1
 14101     14C4  1803               	skipnc
 14102     14C5  0A81               	incf	1,f
 14103     14C6                     l1782:
 14104     14C6  0008               	return
 14105     14C7                     __end_of_fputc:
 14106                           
 14107                           	psect	text29
 14108     1E8C                     __ptext29:	
 14109 ;; *************** function _putch *****************
 14110 ;; Defined at:
 14111 ;;		line 409 in file "mcc_generated_files/uart/src/eusart.c"
 14112 ;; Parameters:    Size  Location     Type
 14113 ;;  txData          1    wreg     unsigned char 
 14114 ;; Auto vars:     Size  Location     Type
 14115 ;;  txData          1    2[BANK1 ] unsigned char 
 14116 ;; Return value:  Size  Location     Type
 14117 ;;                  1    wreg      void 
 14118 ;; Registers used:
 14119 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 14120 ;; Tracked objects:
 14121 ;;		On entry : 0/0
 14122 ;;		On exit  : 0/0
 14123 ;;		Unchanged: 0/0
 14124 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 14125 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14126 ;;      Locals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0
 14127 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14128 ;;      Totals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0
 14129 ;;Total ram usage:        1 bytes
 14130 ;; Hardware stack levels used: 1
 14131 ;; Hardware stack levels required when called: 6
 14132 ;; This function calls:
 14133 ;;		_EUSART_IsTxReady
 14134 ;;		_EUSART_Write
 14135 ;; This function is called by:
 14136 ;;		_fputc
 14137 ;; This function uses a non-reentrant model
 14138 ;;
 14139                           
 14140     1E8C                     _putch:	
 14141                           ;psect for function _putch
 14142                           
 14143                           
 14144                           ;incstack = 0
 14145                           ; Regs used in _putch: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
 14146                           ;putch@txData stored from wreg
 14147     1E8C  0021               	movlb	1	; select bank1
 14148     1E8D  00A2               	movwf	putch@txData^(0+128)
 14149     1E8E                     l6297:
 14150     1E8E                     l6299:	
 14151                           ;mcc_generated_files/uart/src/eusart.c: 409: void putch(char txData);mcc_generated_files
      +                          /uart/src/eusart.c: 410: {;mcc_generated_files/uart/src/eusart.c: 411:     while(!(EUSAR
      +                          T_IsTxReady()))
 14152                           
 14153                           
 14154                           ;mcc_generated_files/uart/src/eusart.c: 411:     while(!(EUSART_IsTxReady()))
 14155     1E8E  319D  2590  319E   	fcall	_EUSART_IsTxReady
 14156     1E91  3A00               	xorlw	0
 14157     1E92  1903               	skipnz
 14158     1E93  2E95               	goto	u7521
 14159     1E94  2E96               	goto	u7520
 14160     1E95                     u7521:
 14161     1E95  2E8E               	goto	l6299
 14162     1E96                     u7520:
 14163     1E96                     l6301:
 14164                           
 14165                           ;mcc_generated_files/uart/src/eusart.c: 415:     return EUSART_Write(txData);;	Return va
      +                          lue of _putch is never used
 14166     1E96  0021               	movlb	1	; select bank1
 14167     1E97  0822               	movf	putch@txData^(0+128),w
 14168     1E98  00A0               	movwf	EUSART_Write@txData^(0+128)
 14169     1E99  3190  20C7  319E   	fcall	_EUSART_Write
 14170     1E9C                     l760:
 14171     1E9C  0008               	return
 14172     1E9D                     __end_of_putch:
 14173                           
 14174                           	psect	text30
 14175     10C7                     __ptext30:	
 14176 ;; *************** function _EUSART_Write *****************
 14177 ;; Defined at:
 14178 ;;		line 353 in file "mcc_generated_files/uart/src/eusart.c"
 14179 ;; Parameters:    Size  Location     Type
 14180 ;;  txData          1    0[BANK1 ] unsigned char 
 14181 ;; Auto vars:     Size  Location     Type
 14182 ;;  tempTxHead      1    1[BANK1 ] unsigned char 
 14183 ;; Return value:  Size  Location     Type
 14184 ;;                  1    wreg      void 
 14185 ;; Registers used:
 14186 ;;		wreg, fsr1l, fsr1h, status,2, status,0
 14187 ;; Tracked objects:
 14188 ;;		On entry : 0/0
 14189 ;;		On exit  : 0/0
 14190 ;;		Unchanged: 0/0
 14191 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 14192 ;;      Params:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0
 14193 ;;      Locals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0
 14194 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14195 ;;      Totals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0
 14196 ;;Total ram usage:        2 bytes
 14197 ;; Hardware stack levels used: 1
 14198 ;; Hardware stack levels required when called: 5
 14199 ;; This function calls:
 14200 ;;		Nothing
 14201 ;; This function is called by:
 14202 ;;		_putch
 14203 ;; This function uses a non-reentrant model
 14204 ;;
 14205                           
 14206     10C7                     _EUSART_Write:	
 14207                           ;psect for function _EUSART_Write
 14208                           
 14209     10C7                     l6281:	
 14210                           ;incstack = 0
 14211                           ; Regs used in _EUSART_Write: [wreg+fsr1l+fsr1h+status,2+status,0]
 14212                           
 14213                           
 14214                           ;mcc_generated_files/uart/src/eusart.c: 353: void EUSART_Write(uint8_t txData);mcc_gener
      +                          ated_files/uart/src/eusart.c: 354: {;mcc_generated_files/uart/src/eusart.c: 355:     uin
      +                          t8_t tempTxHead;;mcc_generated_files/uart/src/eusart.c: 357:     if(0 == PIE1bits.TXIE)
 14215     10C7  0021               	movlb	1	; select bank1
 14216     10C8  1A11               	btfsc	17,4	;volatile
 14217     10C9  28CB               	goto	u7501
 14218     10CA  28CC               	goto	u7500
 14219     10CB                     u7501:
 14220     10CB  28D0               	goto	l6285
 14221     10CC                     u7500:
 14222     10CC                     l6283:
 14223                           
 14224                           ;mcc_generated_files/uart/src/eusart.c: 358:     {;mcc_generated_files/uart/src/eusart.c
      +                          : 359:         TX1REG = txData;
 14225     10CC  0820               	movf	EUSART_Write@txData^(0+128),w
 14226     10CD  0023               	movlb	3	; select bank3
 14227     10CE  009A               	movwf	26	;volatile
 14228                           
 14229                           ;mcc_generated_files/uart/src/eusart.c: 360:     }
 14230     10CF  28EC               	goto	l739
 14231     10D0                     l6285:
 14232     10D0  0020               	movlb	0	; select bank0
 14233     10D1  086A               	movf	_eusartTxBufferRemaining,w	;volatile
 14234     10D2  1903               	btfsc	3,2
 14235     10D3  28D5               	goto	u7511
 14236     10D4  28D6               	goto	u7510
 14237     10D5                     u7511:
 14238     10D5  28EC               	goto	l739
 14239     10D6                     u7510:
 14240     10D6                     l6287:
 14241                           
 14242                           ;mcc_generated_files/uart/src/eusart.c: 362:     {;mcc_generated_files/uart/src/eusart.c
      +                          : 363:        eusartTxBuffer[eusartTxHead] = txData;
 14243     10D6  086C               	movf	_eusartTxHead,w
 14244     10D7  3E20               	addlw	(low (_eusartTxBuffer| (0+256)))& (0+255)
 14245     10D8  0086               	movwf	6
 14246     10D9  3001               	movlw	1	; select bank2/3
 14247     10DA  0087               	movwf	7
 14248     10DB  0021               	movlb	1	; select bank1
 14249     10DC  0820               	movf	EUSART_Write@txData^(0+128),w
 14250     10DD  0081               	movwf	1
 14251     10DE                     l6289:
 14252                           
 14253                           ;mcc_generated_files/uart/src/eusart.c: 364:        tempTxHead = (eusartTxHead + 1U) & (
      +                          (8U) - 1U);
 14254     10DE  0020               	movlb	0	; select bank0
 14255     10DF  086C               	movf	_eusartTxHead,w	;volatile
 14256     10E0  3E01               	addlw	1
 14257     10E1  3907               	andlw	7
 14258     10E2  0021               	movlb	1	; select bank1
 14259     10E3  00A1               	movwf	EUSART_Write@tempTxHead^(0+128)
 14260     10E4                     l6291:
 14261                           
 14262                           ;mcc_generated_files/uart/src/eusart.c: 366:        eusartTxHead = tempTxHead;
 14263     10E4  0821               	movf	EUSART_Write@tempTxHead^(0+128),w
 14264     10E5  0020               	movlb	0	; select bank0
 14265     10E6  00EC               	movwf	_eusartTxHead	;volatile
 14266     10E7                     l6293:
 14267                           
 14268                           ;mcc_generated_files/uart/src/eusart.c: 367:        PIE1bits.TXIE = 0;
 14269     10E7  0021               	movlb	1	; select bank1
 14270     10E8  1211               	bcf	17,4	;volatile
 14271     10E9                     l6295:
 14272                           
 14273                           ;mcc_generated_files/uart/src/eusart.c: 368:        eusartTxBufferRemaining--;
 14274     10E9  3001               	movlw	1
 14275     10EA  0020               	movlb	0	; select bank0
 14276     10EB  02EA               	subwf	_eusartTxBufferRemaining,f	;volatile
 14277     10EC                     l739:	
 14278                           ;mcc_generated_files/uart/src/eusart.c: 369:     }
 14279                           
 14280                           
 14281                           ;mcc_generated_files/uart/src/eusart.c: 374:     PIE1bits.TXIE = 1;
 14282     10EC  0021               	movlb	1	; select bank1
 14283     10ED  1611               	bsf	17,4	;volatile
 14284     10EE                     l742:
 14285     10EE  0008               	return
 14286     10EF                     __end_of_EUSART_Write:
 14287                           
 14288                           	psect	text31
 14289     1D90                     __ptext31:	
 14290 ;; *************** function _EUSART_IsTxReady *****************
 14291 ;; Defined at:
 14292 ;;		line 272 in file "mcc_generated_files/uart/src/eusart.c"
 14293 ;; Parameters:    Size  Location     Type
 14294 ;;		None
 14295 ;; Auto vars:     Size  Location     Type
 14296 ;;		None
 14297 ;; Return value:  Size  Location     Type
 14298 ;;                  1    wreg      _Bool 
 14299 ;; Registers used:
 14300 ;;		wreg, status,2, status,0
 14301 ;; Tracked objects:
 14302 ;;		On entry : 0/0
 14303 ;;		On exit  : 0/0
 14304 ;;		Unchanged: 0/0
 14305 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 14306 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14307 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14308 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14309 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14310 ;;Total ram usage:        0 bytes
 14311 ;; Hardware stack levels used: 1
 14312 ;; Hardware stack levels required when called: 5
 14313 ;; This function calls:
 14314 ;;		Nothing
 14315 ;; This function is called by:
 14316 ;;		_putch
 14317 ;; This function uses a non-reentrant model
 14318 ;;
 14319                           
 14320     1D90                     _EUSART_IsTxReady:	
 14321                           ;psect for function _EUSART_IsTxReady
 14322                           
 14323     1D90                     l6277:	
 14324                           ;incstack = 0
 14325                           ; Regs used in _EUSART_IsTxReady: [wreg+status,2+status,0]
 14326                           
 14327                           
 14328                           ;mcc_generated_files/uart/src/eusart.c: 274:     return (eusartTxBufferRemaining ? 1 : 0
      +                          );
 14329     1D90  0020               	movlb	0	; select bank0
 14330     1D91  086A               	movf	_eusartTxBufferRemaining,w	;volatile
 14331     1D92  1D03               	btfss	3,2
 14332     1D93  2D95               	goto	u7481
 14333     1D94  2D97               	goto	u7480
 14334     1D95                     u7481:
 14335     1D95  3001               	movlw	1
 14336     1D96  2D98               	goto	u7490
 14337     1D97                     u7480:
 14338     1D97  3000               	movlw	0
 14339     1D98                     u7490:
 14340     1D98                     l715:
 14341     1D98  0008               	return
 14342     1D99                     __end_of_EUSART_IsTxReady:
 14343                           
 14344                           	psect	text32
 14345     1EBF                     __ptext32:	
 14346 ;; *************** function _abs *****************
 14347 ;; Defined at:
 14348 ;;		line 1 in file "C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\abs.c"
 14349 ;; Parameters:    Size  Location     Type
 14350 ;;  a               2    6[BANK1 ] int 
 14351 ;; Auto vars:     Size  Location     Type
 14352 ;;		None
 14353 ;; Return value:  Size  Location     Type
 14354 ;;                  2    6[BANK1 ] int 
 14355 ;; Registers used:
 14356 ;;		wreg, status,2, status,0
 14357 ;; Tracked objects:
 14358 ;;		On entry : 0/0
 14359 ;;		On exit  : 0/0
 14360 ;;		Unchanged: 0/0
 14361 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 14362 ;;      Params:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0
 14363 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14364 ;;      Temps:          0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0
 14365 ;;      Totals:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0
 14366 ;;Total ram usage:        4 bytes
 14367 ;; Hardware stack levels used: 1
 14368 ;; Hardware stack levels required when called: 5
 14369 ;; This function calls:
 14370 ;;		Nothing
 14371 ;; This function is called by:
 14372 ;;		_dtoa
 14373 ;; This function uses a non-reentrant model
 14374 ;;
 14375                           
 14376     1EBF                     _abs:	
 14377                           ;psect for function _abs
 14378                           
 14379     1EBF                     l6503:	
 14380                           ;incstack = 0
 14381                           ; Regs used in _abs: [wreg+status,2+status,0]
 14382                           
 14383     1EBF  0021               	movlb	1	; select bank1
 14384     1EC0  1BA7               	btfsc	(abs@a+1)^(0+128),7
 14385     1EC1  2EC3               	goto	u7991
 14386     1EC2  2EC4               	goto	u7990
 14387     1EC3                     u7991:
 14388     1EC3  2EC5               	goto	l6507
 14389     1EC4                     u7990:
 14390     1EC4                     l6505:
 14391     1EC4  2ED0               	goto	l1770
 14392     1EC5                     l6507:
 14393     1EC5  0926               	comf	abs@a^(0+128),w
 14394     1EC6  00A8               	movwf	??_abs^(0+128)
 14395     1EC7  0927               	comf	(abs@a+1)^(0+128),w
 14396     1EC8  00A9               	movwf	(??_abs^(0+128)+1)
 14397     1EC9  0AA8               	incf	??_abs^(0+128),f
 14398     1ECA  1903               	skipnz
 14399     1ECB  0AA9               	incf	(??_abs^(0+128)+1),f
 14400     1ECC  0828               	movf	??_abs^(0+128),w
 14401     1ECD  00A6               	movwf	?_abs^(0+128)
 14402     1ECE  0829               	movf	(??_abs+1)^(0+128),w
 14403     1ECF  00A7               	movwf	(?_abs+1)^(0+128)
 14404     1ED0                     l1770:
 14405     1ED0  0008               	return
 14406     1ED1                     __end_of_abs:
 14407                           
 14408                           	psect	text33
 14409     12B0                     __ptext33:	
 14410 ;; *************** function ___awmod *****************
 14411 ;; Defined at:
 14412 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\awmod.c"
 14413 ;; Parameters:    Size  Location     Type
 14414 ;;  divisor         2    0[BANK1 ] int 
 14415 ;;  dividend        2    2[BANK1 ] int 
 14416 ;; Auto vars:     Size  Location     Type
 14417 ;;  sign            1    5[BANK1 ] unsigned char 
 14418 ;;  counter         1    4[BANK1 ] unsigned char 
 14419 ;; Return value:  Size  Location     Type
 14420 ;;                  2    0[BANK1 ] int 
 14421 ;; Registers used:
 14422 ;;		wreg, status,2, status,0
 14423 ;; Tracked objects:
 14424 ;;		On entry : 0/0
 14425 ;;		On exit  : 0/0
 14426 ;;		Unchanged: 0/0
 14427 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 14428 ;;      Params:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0
 14429 ;;      Locals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0
 14430 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14431 ;;      Totals:         0       0       6       0       0       0       0       0       0       0       0       0       
      +0       0
 14432 ;;Total ram usage:        6 bytes
 14433 ;; Hardware stack levels used: 1
 14434 ;; Hardware stack levels required when called: 5
 14435 ;; This function calls:
 14436 ;;		Nothing
 14437 ;; This function is called by:
 14438 ;;		_dtoa
 14439 ;; This function uses a non-reentrant model
 14440 ;;
 14441                           
 14442     12B0                     ___awmod:	
 14443                           ;psect for function ___awmod
 14444                           
 14445     12B0                     l6397:	
 14446                           ;incstack = 0
 14447                           ; Regs used in ___awmod: [wreg+status,2+status,0]
 14448                           
 14449     12B0  0021               	movlb	1	; select bank1
 14450     12B1  01A5               	clrf	___awmod@sign^(0+128)
 14451     12B2                     l6399:
 14452     12B2  1FA3               	btfss	(___awmod@dividend+1)^(0+128),7
 14453     12B3  2AB5               	goto	u7731
 14454     12B4  2AB6               	goto	u7730
 14455     12B5                     u7731:
 14456     12B5  2ABD               	goto	l6405
 14457     12B6                     u7730:
 14458     12B6                     l6401:
 14459     12B6  09A2               	comf	___awmod@dividend^(0+128),f
 14460     12B7  09A3               	comf	(___awmod@dividend+1)^(0+128),f
 14461     12B8  0AA2               	incf	___awmod@dividend^(0+128),f
 14462     12B9  1903               	skipnz
 14463     12BA  0AA3               	incf	(___awmod@dividend+1)^(0+128),f
 14464     12BB                     l6403:
 14465     12BB  3001               	movlw	1
 14466     12BC  00A5               	movwf	___awmod@sign^(0+128)
 14467     12BD                     l6405:
 14468     12BD  1FA1               	btfss	(___awmod@divisor+1)^(0+128),7
 14469     12BE  2AC0               	goto	u7741
 14470     12BF  2AC1               	goto	u7740
 14471     12C0                     u7741:
 14472     12C0  2AC6               	goto	l6409
 14473     12C1                     u7740:
 14474     12C1                     l6407:
 14475     12C1  09A0               	comf	___awmod@divisor^(0+128),f
 14476     12C2  09A1               	comf	(___awmod@divisor+1)^(0+128),f
 14477     12C3  0AA0               	incf	___awmod@divisor^(0+128),f
 14478     12C4  1903               	skipnz
 14479     12C5  0AA1               	incf	(___awmod@divisor+1)^(0+128),f
 14480     12C6                     l6409:
 14481     12C6  0820               	movf	___awmod@divisor^(0+128),w
 14482     12C7  0421               	iorwf	(___awmod@divisor+1)^(0+128),w
 14483     12C8  1903               	btfsc	3,2
 14484     12C9  2ACB               	goto	u7751
 14485     12CA  2ACC               	goto	u7750
 14486     12CB                     u7751:
 14487     12CB  2AF3               	goto	l6427
 14488     12CC                     u7750:
 14489     12CC                     l6411:
 14490     12CC  3001               	movlw	1
 14491     12CD  00A4               	movwf	___awmod@counter^(0+128)
 14492     12CE  2AD6               	goto	l6417
 14493     12CF                     l6413:
 14494     12CF  3001               	movlw	1
 14495     12D0                     u7765:
 14496     12D0  35A0               	lslf	___awmod@divisor^(0+128),f
 14497     12D1  0DA1               	rlf	(___awmod@divisor+1)^(0+128),f
 14498     12D2  0B89               	decfsz	9,f
 14499     12D3  2AD0               	goto	u7765
 14500     12D4                     l6415:
 14501     12D4  3001               	movlw	1
 14502     12D5  07A4               	addwf	___awmod@counter^(0+128),f
 14503     12D6                     l6417:
 14504     12D6  1FA1               	btfss	(___awmod@divisor+1)^(0+128),7
 14505     12D7  2AD9               	goto	u7771
 14506     12D8  2ADA               	goto	u7770
 14507     12D9                     u7771:
 14508     12D9  2ACF               	goto	l6413
 14509     12DA                     u7770:
 14510     12DA                     l6419:
 14511     12DA  0821               	movf	(___awmod@divisor+1)^(0+128),w
 14512     12DB  0223               	subwf	(___awmod@dividend+1)^(0+128),w
 14513     12DC  1D03               	skipz
 14514     12DD  2AE0               	goto	u7785
 14515     12DE  0820               	movf	___awmod@divisor^(0+128),w
 14516     12DF  0222               	subwf	___awmod@dividend^(0+128),w
 14517     12E0                     u7785:
 14518     12E0  1C03               	skipc
 14519     12E1  2AE3               	goto	u7781
 14520     12E2  2AE4               	goto	u7780
 14521     12E3                     u7781:
 14522     12E3  2AE8               	goto	l6423
 14523     12E4                     u7780:
 14524     12E4                     l6421:
 14525     12E4  0820               	movf	___awmod@divisor^(0+128),w
 14526     12E5  02A2               	subwf	___awmod@dividend^(0+128),f
 14527     12E6  0821               	movf	(___awmod@divisor+1)^(0+128),w
 14528     12E7  3BA3               	subwfb	(___awmod@dividend+1)^(0+128),f
 14529     12E8                     l6423:
 14530     12E8  3001               	movlw	1
 14531     12E9                     u7795:
 14532     12E9  36A1               	lsrf	(___awmod@divisor+1)^(0+128),f
 14533     12EA  0CA0               	rrf	___awmod@divisor^(0+128),f
 14534     12EB  0B89               	decfsz	9,f
 14535     12EC  2AE9               	goto	u7795
 14536     12ED                     l6425:
 14537     12ED  3001               	movlw	1
 14538     12EE  02A4               	subwf	___awmod@counter^(0+128),f
 14539     12EF  1D03               	btfss	3,2
 14540     12F0  2AF2               	goto	u7801
 14541     12F1  2AF3               	goto	u7800
 14542     12F2                     u7801:
 14543     12F2  2ADA               	goto	l6419
 14544     12F3                     u7800:
 14545     12F3                     l6427:
 14546     12F3  0825               	movf	___awmod@sign^(0+128),w
 14547     12F4  1903               	btfsc	3,2
 14548     12F5  2AF7               	goto	u7811
 14549     12F6  2AF8               	goto	u7810
 14550     12F7                     u7811:
 14551     12F7  2AFD               	goto	l6431
 14552     12F8                     u7810:
 14553     12F8                     l6429:
 14554     12F8  09A2               	comf	___awmod@dividend^(0+128),f
 14555     12F9  09A3               	comf	(___awmod@dividend+1)^(0+128),f
 14556     12FA  0AA2               	incf	___awmod@dividend^(0+128),f
 14557     12FB  1903               	skipnz
 14558     12FC  0AA3               	incf	(___awmod@dividend+1)^(0+128),f
 14559     12FD                     l6431:
 14560     12FD  0823               	movf	(___awmod@dividend+1)^(0+128),w
 14561     12FE  00A1               	movwf	(?___awmod+1)^(0+128)
 14562     12FF  0822               	movf	___awmod@dividend^(0+128),w
 14563     1300  00A0               	movwf	?___awmod^(0+128)
 14564     1301                     l1358:
 14565     1301  0008               	return
 14566     1302                     __end_of___awmod:
 14567                           
 14568                           	psect	text34
 14569     13B0                     __ptext34:	
 14570 ;; *************** function ___awdiv *****************
 14571 ;; Defined at:
 14572 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\awdiv.c"
 14573 ;; Parameters:    Size  Location     Type
 14574 ;;  divisor         2    0[BANK1 ] int 
 14575 ;;  dividend        2    2[BANK1 ] int 
 14576 ;; Auto vars:     Size  Location     Type
 14577 ;;  quotient        2    6[BANK1 ] int 
 14578 ;;  sign            1    5[BANK1 ] unsigned char 
 14579 ;;  counter         1    4[BANK1 ] unsigned char 
 14580 ;; Return value:  Size  Location     Type
 14581 ;;                  2    0[BANK1 ] int 
 14582 ;; Registers used:
 14583 ;;		wreg, status,2, status,0
 14584 ;; Tracked objects:
 14585 ;;		On entry : 0/0
 14586 ;;		On exit  : 0/0
 14587 ;;		Unchanged: 0/0
 14588 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 14589 ;;      Params:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0
 14590 ;;      Locals:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0
 14591 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14592 ;;      Totals:         0       0       8       0       0       0       0       0       0       0       0       0       
      +0       0
 14593 ;;Total ram usage:        8 bytes
 14594 ;; Hardware stack levels used: 1
 14595 ;; Hardware stack levels required when called: 5
 14596 ;; This function calls:
 14597 ;;		Nothing
 14598 ;; This function is called by:
 14599 ;;		_dtoa
 14600 ;; This function uses a non-reentrant model
 14601 ;;
 14602                           
 14603     13B0                     ___awdiv:	
 14604                           ;psect for function ___awdiv
 14605                           
 14606     13B0                     l6353:	
 14607                           ;incstack = 0
 14608                           ; Regs used in ___awdiv: [wreg+status,2+status,0]
 14609                           
 14610     13B0  0021               	movlb	1	; select bank1
 14611     13B1  01A5               	clrf	___awdiv@sign^(0+128)
 14612     13B2                     l6355:
 14613     13B2  1FA1               	btfss	(___awdiv@divisor+1)^(0+128),7
 14614     13B3  2BB5               	goto	u7631
 14615     13B4  2BB6               	goto	u7630
 14616     13B5                     u7631:
 14617     13B5  2BBD               	goto	l6361
 14618     13B6                     u7630:
 14619     13B6                     l6357:
 14620     13B6  09A0               	comf	___awdiv@divisor^(0+128),f
 14621     13B7  09A1               	comf	(___awdiv@divisor+1)^(0+128),f
 14622     13B8  0AA0               	incf	___awdiv@divisor^(0+128),f
 14623     13B9  1903               	skipnz
 14624     13BA  0AA1               	incf	(___awdiv@divisor+1)^(0+128),f
 14625     13BB                     l6359:
 14626     13BB  3001               	movlw	1
 14627     13BC  00A5               	movwf	___awdiv@sign^(0+128)
 14628     13BD                     l6361:
 14629     13BD  1FA3               	btfss	(___awdiv@dividend+1)^(0+128),7
 14630     13BE  2BC0               	goto	u7641
 14631     13BF  2BC1               	goto	u7640
 14632     13C0                     u7641:
 14633     13C0  2BC8               	goto	l6367
 14634     13C1                     u7640:
 14635     13C1                     l6363:
 14636     13C1  09A2               	comf	___awdiv@dividend^(0+128),f
 14637     13C2  09A3               	comf	(___awdiv@dividend+1)^(0+128),f
 14638     13C3  0AA2               	incf	___awdiv@dividend^(0+128),f
 14639     13C4  1903               	skipnz
 14640     13C5  0AA3               	incf	(___awdiv@dividend+1)^(0+128),f
 14641     13C6                     l6365:
 14642     13C6  3001               	movlw	1
 14643     13C7  06A5               	xorwf	___awdiv@sign^(0+128),f
 14644     13C8                     l6367:
 14645     13C8  01A6               	clrf	___awdiv@quotient^(0+128)
 14646     13C9  01A7               	clrf	(___awdiv@quotient+1)^(0+128)
 14647     13CA                     l6369:
 14648     13CA  0820               	movf	___awdiv@divisor^(0+128),w
 14649     13CB  0421               	iorwf	(___awdiv@divisor+1)^(0+128),w
 14650     13CC  1903               	btfsc	3,2
 14651     13CD  2BCF               	goto	u7651
 14652     13CE  2BD0               	goto	u7650
 14653     13CF                     u7651:
 14654     13CF  2BFD               	goto	l6389
 14655     13D0                     u7650:
 14656     13D0                     l6371:
 14657     13D0  3001               	movlw	1
 14658     13D1  00A4               	movwf	___awdiv@counter^(0+128)
 14659     13D2  2BDA               	goto	l6377
 14660     13D3                     l6373:
 14661     13D3  3001               	movlw	1
 14662     13D4                     u7665:
 14663     13D4  35A0               	lslf	___awdiv@divisor^(0+128),f
 14664     13D5  0DA1               	rlf	(___awdiv@divisor+1)^(0+128),f
 14665     13D6  0B89               	decfsz	9,f
 14666     13D7  2BD4               	goto	u7665
 14667     13D8                     l6375:
 14668     13D8  3001               	movlw	1
 14669     13D9  07A4               	addwf	___awdiv@counter^(0+128),f
 14670     13DA                     l6377:
 14671     13DA  1FA1               	btfss	(___awdiv@divisor+1)^(0+128),7
 14672     13DB  2BDD               	goto	u7671
 14673     13DC  2BDE               	goto	u7670
 14674     13DD                     u7671:
 14675     13DD  2BD3               	goto	l6373
 14676     13DE                     u7670:
 14677     13DE                     l6379:
 14678     13DE  3001               	movlw	1
 14679     13DF                     u7685:
 14680     13DF  35A6               	lslf	___awdiv@quotient^(0+128),f
 14681     13E0  0DA7               	rlf	(___awdiv@quotient+1)^(0+128),f
 14682     13E1  0B89               	decfsz	9,f
 14683     13E2  2BDF               	goto	u7685
 14684     13E3  0821               	movf	(___awdiv@divisor+1)^(0+128),w
 14685     13E4  0223               	subwf	(___awdiv@dividend+1)^(0+128),w
 14686     13E5  1D03               	skipz
 14687     13E6  2BE9               	goto	u7695
 14688     13E7  0820               	movf	___awdiv@divisor^(0+128),w
 14689     13E8  0222               	subwf	___awdiv@dividend^(0+128),w
 14690     13E9                     u7695:
 14691     13E9  1C03               	skipc
 14692     13EA  2BEC               	goto	u7691
 14693     13EB  2BED               	goto	u7690
 14694     13EC                     u7691:
 14695     13EC  2BF2               	goto	l6385
 14696     13ED                     u7690:
 14697     13ED                     l6381:
 14698     13ED  0820               	movf	___awdiv@divisor^(0+128),w
 14699     13EE  02A2               	subwf	___awdiv@dividend^(0+128),f
 14700     13EF  0821               	movf	(___awdiv@divisor+1)^(0+128),w
 14701     13F0  3BA3               	subwfb	(___awdiv@dividend+1)^(0+128),f
 14702     13F1                     l6383:
 14703     13F1  1426               	bsf	___awdiv@quotient^(0+128),0
 14704     13F2                     l6385:
 14705     13F2  3001               	movlw	1
 14706     13F3                     u7705:
 14707     13F3  36A1               	lsrf	(___awdiv@divisor+1)^(0+128),f
 14708     13F4  0CA0               	rrf	___awdiv@divisor^(0+128),f
 14709     13F5  0B89               	decfsz	9,f
 14710     13F6  2BF3               	goto	u7705
 14711     13F7                     l6387:
 14712     13F7  3001               	movlw	1
 14713     13F8  02A4               	subwf	___awdiv@counter^(0+128),f
 14714     13F9  1D03               	btfss	3,2
 14715     13FA  2BFC               	goto	u7711
 14716     13FB  2BFD               	goto	u7710
 14717     13FC                     u7711:
 14718     13FC  2BDE               	goto	l6379
 14719     13FD                     u7710:
 14720     13FD                     l6389:
 14721     13FD  0825               	movf	___awdiv@sign^(0+128),w
 14722     13FE  1903               	btfsc	3,2
 14723     13FF  2C01               	goto	u7721
 14724     1400  2C02               	goto	u7720
 14725     1401                     u7721:
 14726     1401  2C07               	goto	l6393
 14727     1402                     u7720:
 14728     1402                     l6391:
 14729     1402  09A6               	comf	___awdiv@quotient^(0+128),f
 14730     1403  09A7               	comf	(___awdiv@quotient+1)^(0+128),f
 14731     1404  0AA6               	incf	___awdiv@quotient^(0+128),f
 14732     1405  1903               	skipnz
 14733     1406  0AA7               	incf	(___awdiv@quotient+1)^(0+128),f
 14734     1407                     l6393:
 14735     1407  0827               	movf	(___awdiv@quotient+1)^(0+128),w
 14736     1408  00A1               	movwf	(?___awdiv+1)^(0+128)
 14737     1409  0826               	movf	___awdiv@quotient^(0+128),w
 14738     140A  00A0               	movwf	?___awdiv^(0+128)
 14739     140B                     l1345:
 14740     140B  0008               	return
 14741     140C                     __end_of___awdiv:
 14742                           
 14743                           	psect	text35
 14744     1D87                     __ptext35:	
 14745 ;; *************** function _getPomphoogte *****************
 14746 ;; Defined at:
 14747 ;;		line 41 in file "adcMeasurements.c"
 14748 ;; Parameters:    Size  Location     Type
 14749 ;;		None
 14750 ;; Auto vars:     Size  Location     Type
 14751 ;;		None
 14752 ;; Return value:  Size  Location     Type
 14753 ;;                  2    0[BANK1 ] unsigned short 
 14754 ;; Registers used:
 14755 ;;		wreg
 14756 ;; Tracked objects:
 14757 ;;		On entry : 0/0
 14758 ;;		On exit  : 0/0
 14759 ;;		Unchanged: 0/0
 14760 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 14761 ;;      Params:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0
 14762 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14763 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14764 ;;      Totals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0
 14765 ;;Total ram usage:        2 bytes
 14766 ;; Hardware stack levels used: 1
 14767 ;; Hardware stack levels required when called: 5
 14768 ;; This function calls:
 14769 ;;		Nothing
 14770 ;; This function is called by:
 14771 ;;		_main
 14772 ;;		_printLogs
 14773 ;; This function uses a non-reentrant model
 14774 ;;
 14775                           
 14776     1D87                     _getPomphoogte:	
 14777                           ;psect for function _getPomphoogte
 14778                           
 14779     1D87                     l7475:	
 14780                           ;incstack = 0
 14781                           ; Regs used in _getPomphoogte: [wreg]
 14782                           
 14783                           
 14784                           ;adcMeasurements.c: 42:     return ADC_pomphoogte;
 14785     1D87  0020               	movlb	0	; select bank0
 14786     1D88  085A               	movf	_ADC_pomphoogte+1,w	;volatile
 14787     1D89  0021               	movlb	1	; select bank1
 14788     1D8A  00A1               	movwf	(?_getPomphoogte+1)^(0+128)
 14789     1D8B  0020               	movlb	0	; select bank0
 14790     1D8C  0859               	movf	_ADC_pomphoogte,w	;volatile
 14791     1D8D  0021               	movlb	1	; select bank1
 14792     1D8E  00A0               	movwf	?_getPomphoogte^(0+128)
 14793     1D8F                     l860:
 14794     1D8F  0008               	return
 14795     1D90                     __end_of_getPomphoogte:
 14796                           
 14797                           	psect	text36
 14798     1E02                     __ptext36:	
 14799 ;; *************** function _initLedstrip *****************
 14800 ;; Defined at:
 14801 ;;		line 121 in file "ledstrip.c"
 14802 ;; Parameters:    Size  Location     Type
 14803 ;;		None
 14804 ;; Auto vars:     Size  Location     Type
 14805 ;;		None
 14806 ;; Return value:  Size  Location     Type
 14807 ;;                  1    wreg      void 
 14808 ;; Registers used:
 14809 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
 14810 ;; Tracked objects:
 14811 ;;		On entry : 0/0
 14812 ;;		On exit  : 0/0
 14813 ;;		Unchanged: 0/0
 14814 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 14815 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14816 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14817 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14818 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14819 ;;Total ram usage:        0 bytes
 14820 ;; Hardware stack levels used: 1
 14821 ;; Hardware stack levels required when called: 7
 14822 ;; This function calls:
 14823 ;;		_SPI1_Open
 14824 ;;		_TMR6_PeriodMatchCallbackRegister
 14825 ;; This function is called by:
 14826 ;;		_main
 14827 ;; This function uses a non-reentrant model
 14828 ;;
 14829                           
 14830     1E02                     _initLedstrip:	
 14831                           ;psect for function _initLedstrip
 14832                           
 14833     1E02                     l7627:	
 14834                           ;incstack = 0
 14835                           ; Regs used in _initLedstrip: [wreg-fsr0h+status,2+status,0+pclath+cstack]
 14836                           
 14837                           
 14838                           ;ledstrip.c: 122:     SPI1_Open(HOST_CONFIG);
 14839     1E02  0021               	movlb	1	; select bank1
 14840     1E03  01A8               	clrf	SPI1_Open@spiConfigIndex^(0+128)
 14841     1E04  3195  2536  319E   	fcall	_SPI1_Open
 14842     1E07                     l7629:
 14843                           
 14844                           ;ledstrip.c: 123:     TMR6_PeriodMatchCallbackRegister(updateLedstripAnimation);
 14845     1E07  302D               	movlw	low _updateLedstripAnimation
 14846     1E08  0021               	movlb	1	; select bank1
 14847     1E09  00A0               	movwf	TMR6_PeriodMatchCallbackRegister@CallbackHandler^(0+128)
 14848     1E0A  301D               	movlw	high _updateLedstripAnimation
 14849     1E0B  00A1               	movwf	(TMR6_PeriodMatchCallbackRegister@CallbackHandler^(0+128)+1)
 14850     1E0C  319D  257E  319E   	fcall	_TMR6_PeriodMatchCallbackRegister
 14851     1E0F                     l1040:
 14852     1E0F  0008               	return
 14853     1E10                     __end_of_initLedstrip:
 14854                           
 14855                           	psect	text37
 14856     1D7E                     __ptext37:	
 14857 ;; *************** function _TMR6_PeriodMatchCallbackRegister *****************
 14858 ;; Defined at:
 14859 ;;		line 104 in file "mcc_generated_files/timer/src/tmr6.c"
 14860 ;; Parameters:    Size  Location     Type
 14861 ;;  CallbackHand    2    0[BANK1 ] PTR FTN()void 
 14862 ;;		 -> updateLedstripAnimation(1), 
 14863 ;; Auto vars:     Size  Location     Type
 14864 ;;		None
 14865 ;; Return value:  Size  Location     Type
 14866 ;;                  1    wreg      void 
 14867 ;; Registers used:
 14868 ;;		wreg
 14869 ;; Tracked objects:
 14870 ;;		On entry : 0/0
 14871 ;;		On exit  : 0/0
 14872 ;;		Unchanged: 0/0
 14873 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 14874 ;;      Params:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0
 14875 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14876 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14877 ;;      Totals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0
 14878 ;;Total ram usage:        2 bytes
 14879 ;; Hardware stack levels used: 1
 14880 ;; Hardware stack levels required when called: 5
 14881 ;; This function calls:
 14882 ;;		Nothing
 14883 ;; This function is called by:
 14884 ;;		_initLedstrip
 14885 ;; This function uses a non-reentrant model
 14886 ;;
 14887                           
 14888     1D7E                     _TMR6_PeriodMatchCallbackRegister:	
 14889                           ;psect for function _TMR6_PeriodMatchCallbackRegister
 14890                           
 14891     1D7E                     l7473:	
 14892                           ;incstack = 0
 14893                           ; Regs used in _TMR6_PeriodMatchCallbackRegister: [wreg]
 14894                           
 14895                           
 14896                           ;mcc_generated_files/timer/src/tmr6.c: 104: void TMR6_PeriodMatchCallbackRegister(void (
      +                          * CallbackHandler)(void));mcc_generated_files/timer/src/tmr6.c: 105: {;mcc_generated_fil
      +                          es/timer/src/tmr6.c: 106:    TMR6_PeriodMatchCallback = CallbackHandler;
 14897     1D7E  0021               	movlb	1	; select bank1
 14898     1D7F  0821               	movf	(TMR6_PeriodMatchCallbackRegister@CallbackHandler+1)^(0+128),w
 14899     1D80  0022               	movlb	2	; select bank2
 14900     1D81  00C9               	movwf	(_TMR6_PeriodMatchCallback+1)^(0+256)
 14901     1D82  0021               	movlb	1	; select bank1
 14902     1D83  0820               	movf	TMR6_PeriodMatchCallbackRegister@CallbackHandler^(0+128),w
 14903     1D84  0022               	movlb	2	; select bank2
 14904     1D85  00C8               	movwf	_TMR6_PeriodMatchCallback^(0+256)
 14905     1D86                     l543:
 14906     1D86  0008               	return
 14907     1D87                     __end_of_TMR6_PeriodMatchCallbackRegister:
 14908                           
 14909                           	psect	text38
 14910     1536                     __ptext38:	
 14911 ;; *************** function _SPI1_Open *****************
 14912 ;; Defined at:
 14913 ;;		line 81 in file "mcc_generated_files/spi/src/mssp1.c"
 14914 ;; Parameters:    Size  Location     Type
 14915 ;;  spiConfigInd    1    8[BANK1 ] unsigned char 
 14916 ;; Auto vars:     Size  Location     Type
 14917 ;;  returnValue     1    0        _Bool 
 14918 ;; Return value:  Size  Location     Type
 14919 ;;                  1    wreg      _Bool 
 14920 ;; Registers used:
 14921 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
 14922 ;; Tracked objects:
 14923 ;;		On entry : 0/0
 14924 ;;		On exit  : 0/0
 14925 ;;		Unchanged: 0/0
 14926 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 14927 ;;      Params:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0
 14928 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14929 ;;      Temps:          0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0
 14930 ;;      Totals:         0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0
 14931 ;;Total ram usage:        3 bytes
 14932 ;; Hardware stack levels used: 1
 14933 ;; Hardware stack levels required when called: 6
 14934 ;; This function calls:
 14935 ;;		___wmul
 14936 ;; This function is called by:
 14937 ;;		_initLedstrip
 14938 ;; This function uses a non-reentrant model
 14939 ;;
 14940                           
 14941     1536                     _SPI1_Open:	
 14942                           ;psect for function _SPI1_Open
 14943                           
 14944     1536                     l7341:	
 14945                           ;incstack = 0
 14946                           ; Regs used in _SPI1_Open: [wreg-fsr0h+status,2+status,0+pclath+cstack]
 14947                           
 14948     1536                     l7343:
 14949                           
 14950                           ;mcc_generated_files/spi/src/mssp1.c: 84:     if (SSP1CON1bits.SSPEN == 0)
 14951     1536  0024               	movlb	4	; select bank4
 14952     1537  1A95               	btfsc	21,5	;volatile
 14953     1538  2D3A               	goto	u9541
 14954     1539  2D3B               	goto	u9540
 14955     153A                     u9541:
 14956     153A  2DA5               	goto	l7351
 14957     153B                     u9540:
 14958     153B                     l7345:
 14959                           
 14960                           ;mcc_generated_files/spi/src/mssp1.c: 85:     {;mcc_generated_files/spi/src/mssp1.c: 86:
      +                                   SSP1STAT = spi1_configuration[spiConfigIndex].stat;
 14961     153B  0021               	movlb	1	; select bank1
 14962     153C  0828               	movf	SPI1_Open@spiConfigIndex^(0+128),w
 14963     153D  00A9               	movwf	??_SPI1_Open^(0+128)
 14964     153E  01AA               	clrf	(??_SPI1_Open^(0+128)+1)
 14965     153F  0829               	movf	??_SPI1_Open^(0+128),w
 14966     1540  00A2               	movwf	___wmul@multiplier^(0+128)
 14967     1541  082A               	movf	(??_SPI1_Open+1)^(0+128),w
 14968     1542  00A3               	movwf	(___wmul@multiplier+1)^(0+128)
 14969     1543  3005               	movlw	5
 14970     1544  00A4               	movwf	___wmul@multiplicand^(0+128)
 14971     1545  3000               	movlw	0
 14972     1546  00A5               	movwf	(___wmul@multiplicand^(0+128)+1)
 14973     1547  319F  27C0  3195   	fcall	___wmul
 14974     154A  30D0               	movlw	low _spi1_configuration
 14975     154B  0021               	movlb	1	; select bank1
 14976     154C  0722               	addwf	?___wmul^(0+128),w
 14977     154D  0084               	movwf	4
 14978     154E  3018               	movlw	high _spi1_configuration
 14979     154F  3D23               	addwfc	(?___wmul+1)^(0+128),w
 14980     1550  3880               	iorlw	128
 14981     1551  0085               	movwf	5
 14982     1552  0800               	movf	0,w	;code access
 14983     1553  0024               	movlb	4	; select bank4
 14984     1554  0094               	movwf	20	;volatile
 14985                           
 14986                           ;mcc_generated_files/spi/src/mssp1.c: 87:         SSP1CON1 = spi1_configuration[spiConfi
      +                          gIndex].con1;
 14987     1555  0021               	movlb	1	; select bank1
 14988     1556  0828               	movf	SPI1_Open@spiConfigIndex^(0+128),w
 14989     1557  00A9               	movwf	??_SPI1_Open^(0+128)
 14990     1558  01AA               	clrf	(??_SPI1_Open^(0+128)+1)
 14991     1559  0829               	movf	??_SPI1_Open^(0+128),w
 14992     155A  00A2               	movwf	___wmul@multiplier^(0+128)
 14993     155B  082A               	movf	(??_SPI1_Open+1)^(0+128),w
 14994     155C  00A3               	movwf	(___wmul@multiplier+1)^(0+128)
 14995     155D  3005               	movlw	5
 14996     155E  00A4               	movwf	___wmul@multiplicand^(0+128)
 14997     155F  3000               	movlw	0
 14998     1560  00A5               	movwf	(___wmul@multiplicand^(0+128)+1)
 14999     1561  319F  27C0  3195   	fcall	___wmul
 15000     1564  30D1               	movlw	low (_spi1_configuration+1)
 15001     1565  0021               	movlb	1	; select bank1
 15002     1566  0722               	addwf	?___wmul^(0+128),w
 15003     1567  0084               	movwf	4
 15004     1568  3018               	movlw	high (_spi1_configuration+1)
 15005     1569  3D23               	addwfc	(?___wmul+1)^(0+128),w
 15006     156A  3880               	iorlw	128
 15007     156B  0085               	movwf	5
 15008     156C  0800               	movf	0,w	;code access
 15009     156D  0024               	movlb	4	; select bank4
 15010     156E  0095               	movwf	21	;volatile
 15011                           
 15012                           ;mcc_generated_files/spi/src/mssp1.c: 88:         SSP1CON3 = spi1_configuration[spiConfi
      +                          gIndex].con3;
 15013     156F  0021               	movlb	1	; select bank1
 15014     1570  0828               	movf	SPI1_Open@spiConfigIndex^(0+128),w
 15015     1571  00A9               	movwf	??_SPI1_Open^(0+128)
 15016     1572  01AA               	clrf	(??_SPI1_Open^(0+128)+1)
 15017     1573  0829               	movf	??_SPI1_Open^(0+128),w
 15018     1574  00A2               	movwf	___wmul@multiplier^(0+128)
 15019     1575  082A               	movf	(??_SPI1_Open+1)^(0+128),w
 15020     1576  00A3               	movwf	(___wmul@multiplier+1)^(0+128)
 15021     1577  3005               	movlw	5
 15022     1578  00A4               	movwf	___wmul@multiplicand^(0+128)
 15023     1579  3000               	movlw	0
 15024     157A  00A5               	movwf	(___wmul@multiplicand^(0+128)+1)
 15025     157B  319F  27C0  3195   	fcall	___wmul
 15026     157E  30D2               	movlw	low (_spi1_configuration+2)
 15027     157F  0021               	movlb	1	; select bank1
 15028     1580  0722               	addwf	?___wmul^(0+128),w
 15029     1581  0084               	movwf	4
 15030     1582  3018               	movlw	high (_spi1_configuration+2)
 15031     1583  3D23               	addwfc	(?___wmul+1)^(0+128),w
 15032     1584  3880               	iorlw	128
 15033     1585  0085               	movwf	5
 15034     1586  0800               	movf	0,w	;code access
 15035     1587  0024               	movlb	4	; select bank4
 15036     1588  0097               	movwf	23	;volatile
 15037                           
 15038                           ;mcc_generated_files/spi/src/mssp1.c: 89:         SSP1ADD = spi1_configuration[spiConfig
      +                          Index].baud;
 15039     1589  0021               	movlb	1	; select bank1
 15040     158A  0828               	movf	SPI1_Open@spiConfigIndex^(0+128),w
 15041     158B  00A9               	movwf	??_SPI1_Open^(0+128)
 15042     158C  01AA               	clrf	(??_SPI1_Open^(0+128)+1)
 15043     158D  0829               	movf	??_SPI1_Open^(0+128),w
 15044     158E  00A2               	movwf	___wmul@multiplier^(0+128)
 15045     158F  082A               	movf	(??_SPI1_Open+1)^(0+128),w
 15046     1590  00A3               	movwf	(___wmul@multiplier+1)^(0+128)
 15047     1591  3005               	movlw	5
 15048     1592  00A4               	movwf	___wmul@multiplicand^(0+128)
 15049     1593  3000               	movlw	0
 15050     1594  00A5               	movwf	(___wmul@multiplicand^(0+128)+1)
 15051     1595  319F  27C0  3195   	fcall	___wmul
 15052     1598  30D3               	movlw	low (_spi1_configuration+3)
 15053     1599  0021               	movlb	1	; select bank1
 15054     159A  0722               	addwf	?___wmul^(0+128),w
 15055     159B  0084               	movwf	4
 15056     159C  3018               	movlw	high (_spi1_configuration+3)
 15057     159D  3D23               	addwfc	(?___wmul+1)^(0+128),w
 15058     159E  3880               	iorlw	128
 15059     159F  0085               	movwf	5
 15060     15A0  0800               	movf	0,w	;code access
 15061     15A1  0024               	movlb	4	; select bank4
 15062     15A2  0092               	movwf	18	;volatile
 15063     15A3                     l7347:
 15064                           
 15065                           ;mcc_generated_files/spi/src/mssp1.c: 91:         SSP1CON1bits.SSPEN = 1;
 15066     15A3  1695               	bsf	21,5	;volatile
 15067     15A4                     l7349:
 15068                           
 15069                           ;mcc_generated_files/spi/src/mssp1.c: 94:     }
 15070     15A4  2DA5               	goto	l141
 15071     15A5                     l7351:
 15072     15A5                     l141:
 15073     15A5  0008               	return
 15074     15A6                     __end_of_SPI1_Open:
 15075                           
 15076                           	psect	text39
 15077     1DF5                     __ptext39:	
 15078 ;; *************** function _initAdcMultiplexer *****************
 15079 ;; Defined at:
 15080 ;;		line 28 in file "adcMeasurements.c"
 15081 ;; Parameters:    Size  Location     Type
 15082 ;;		None
 15083 ;; Auto vars:     Size  Location     Type
 15084 ;;		None
 15085 ;; Return value:  Size  Location     Type
 15086 ;;                  1    wreg      void 
 15087 ;; Registers used:
 15088 ;;		wreg, status,2, status,0, pclath, cstack
 15089 ;; Tracked objects:
 15090 ;;		On entry : 0/0
 15091 ;;		On exit  : 0/0
 15092 ;;		Unchanged: 0/0
 15093 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 15094 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15095 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15096 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15097 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15098 ;;Total ram usage:        0 bytes
 15099 ;; Hardware stack levels used: 1
 15100 ;; Hardware stack levels required when called: 6
 15101 ;; This function calls:
 15102 ;;		_ADC_SelectChannel
 15103 ;;		_ADC_SetInterruptHandler
 15104 ;; This function is called by:
 15105 ;;		_main
 15106 ;; This function uses a non-reentrant model
 15107 ;;
 15108                           
 15109     1DF5                     _initAdcMultiplexer:	
 15110                           ;psect for function _initAdcMultiplexer
 15111                           
 15112     1DF5                     l7625:	
 15113                           ;incstack = 0
 15114                           ; Regs used in _initAdcMultiplexer: [wreg+status,2+status,0+pclath+cstack]
 15115                           
 15116                           
 15117                           ;adcMeasurements.c: 29:     ADC_SelectChannel(potentiometer);
 15118     1DF5  3010               	movlw	16
 15119     1DF6  319D  25DC  319D   	fcall	_ADC_SelectChannel
 15120                           
 15121                           ;adcMeasurements.c: 30:     ADC_SetInterruptHandler(adcConversionDoneHandler);
 15122     1DF9  3094               	movlw	low _adcConversionDoneHandler
 15123     1DFA  0021               	movlb	1	; select bank1
 15124     1DFB  00A0               	movwf	ADC_SetInterruptHandler@InterruptHandler^(0+128)
 15125     1DFC  3011               	movlw	high _adcConversionDoneHandler
 15126     1DFD  00A1               	movwf	(ADC_SetInterruptHandler@InterruptHandler^(0+128)+1)
 15127     1DFE  319D  2551  319D   	fcall	_ADC_SetInterruptHandler
 15128     1E01                     l851:
 15129     1E01  0008               	return
 15130     1E02                     __end_of_initAdcMultiplexer:
 15131                           
 15132                           	psect	text40
 15133     1DDC                     __ptext40:	
 15134 ;; *************** function _ADC_SelectChannel *****************
 15135 ;; Defined at:
 15136 ;;		line 82 in file "mcc_generated_files/adc/src/adc.c"
 15137 ;; Parameters:    Size  Location     Type
 15138 ;;  channel         1    wreg     enum E6663
 15139 ;; Auto vars:     Size  Location     Type
 15140 ;;  channel         1    1[BANK1 ] enum E6663
 15141 ;; Return value:  Size  Location     Type
 15142 ;;                  1    wreg      void 
 15143 ;; Registers used:
 15144 ;;		wreg, status,2, status,0
 15145 ;; Tracked objects:
 15146 ;;		On entry : 0/0
 15147 ;;		On exit  : 0/0
 15148 ;;		Unchanged: 0/0
 15149 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 15150 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15151 ;;      Locals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0
 15152 ;;      Temps:          0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0
 15153 ;;      Totals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0
 15154 ;;Total ram usage:        2 bytes
 15155 ;; Hardware stack levels used: 1
 15156 ;; Hardware stack levels required when called: 5
 15157 ;; This function calls:
 15158 ;;		Nothing
 15159 ;; This function is called by:
 15160 ;;		_initAdcMultiplexer
 15161 ;; This function uses a non-reentrant model
 15162 ;;
 15163                           
 15164     1DDC                     _ADC_SelectChannel:	
 15165                           ;psect for function _ADC_SelectChannel
 15166                           
 15167                           
 15168                           ;incstack = 0
 15169                           ; Regs used in _ADC_SelectChannel: [wreg+status,2+status,0]
 15170                           ;ADC_SelectChannel@channel stored from wreg
 15171     1DDC  0021               	movlb	1	; select bank1
 15172     1DDD  00A1               	movwf	ADC_SelectChannel@channel^(0+128)
 15173     1DDE                     l7327:
 15174                           
 15175                           ;mcc_generated_files/adc/src/adc.c: 82: void ADC_SelectChannel(adc_channel_t channel);mc
      +                          c_generated_files/adc/src/adc.c: 83: {;mcc_generated_files/adc/src/adc.c: 85:     ADCON0
      +                          bits.CHS = channel;
 15176     1DDE  0821               	movf	ADC_SelectChannel@channel^(0+128),w
 15177     1DDF  00A0               	movwf	??_ADC_SelectChannel^(0+128)
 15178     1DE0  0DA0               	rlf	??_ADC_SelectChannel^(0+128),f
 15179     1DE1  0DA0               	rlf	??_ADC_SelectChannel^(0+128),f
 15180     1DE2  081D               	movf	29,w	;volatile
 15181     1DE3  0620               	xorwf	??_ADC_SelectChannel^(0+128),w
 15182     1DE4  3903               	andlw	-253
 15183     1DE5  0620               	xorwf	??_ADC_SelectChannel^(0+128),w
 15184     1DE6  009D               	movwf	29	;volatile
 15185     1DE7                     l30:
 15186     1DE7  0008               	return
 15187     1DE8                     __end_of_ADC_SelectChannel:
 15188                           
 15189                           	psect	text41
 15190     1000                     __ptext41:	
 15191 ;; *************** function _TMR6_Tasks *****************
 15192 ;; Defined at:
 15193 ;;		line 124 in file "mcc_generated_files/timer/src/tmr6.c"
 15194 ;; Parameters:    Size  Location     Type
 15195 ;;		None
 15196 ;; Auto vars:     Size  Location     Type
 15197 ;;		None
 15198 ;; Return value:  Size  Location     Type
 15199 ;;                  1    wreg      void 
 15200 ;; Registers used:
 15201 ;;		wreg, status,2, status,0, pclath, cstack
 15202 ;; Tracked objects:
 15203 ;;		On entry : 0/0
 15204 ;;		On exit  : 0/0
 15205 ;;		Unchanged: 0/0
 15206 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 15207 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15208 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15209 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15210 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15211 ;;Total ram usage:        0 bytes
 15212 ;; Hardware stack levels used: 1
 15213 ;; Hardware stack levels required when called: 9
 15214 ;; This function calls:
 15215 ;;		NULL
 15216 ;;		_TMR6_DefaultPeriodMatchCallback
 15217 ;;		_updateLedstripAnimation
 15218 ;; This function is called by:
 15219 ;;		_main
 15220 ;; This function uses a non-reentrant model
 15221 ;;
 15222                           
 15223     1000                     _TMR6_Tasks:	
 15224                           ;psect for function _TMR6_Tasks
 15225                           
 15226     1000                     l7617:	
 15227                           ;incstack = 0
 15228                           ; Regs used in _TMR6_Tasks: [wreg+status,2+status,0+pclath+cstack]
 15229                           
 15230                           
 15231                           ;mcc_generated_files/timer/src/tmr6.c: 126:     if(1U == PIR2bits.TMR6IF)
 15232     1000  0020               	movlb	0	; select bank0
 15233     1001  1F92               	btfss	18,7	;volatile
 15234     1002  2804               	goto	u9721
 15235     1003  2805               	goto	u9720
 15236     1004                     u9721:
 15237     1004  2813               	goto	l557
 15238     1005                     u9720:
 15239     1005                     l7619:
 15240                           
 15241                           ;mcc_generated_files/timer/src/tmr6.c: 127:     {;mcc_generated_files/timer/src/tmr6.c: 
      +                          128:         if(((void*)0) != TMR6_PeriodMatchCallback)
 15242     1005  0022               	movlb	2	; select bank2
 15243     1006  0848               	movf	_TMR6_PeriodMatchCallback^(0+256),w
 15244     1007  0449               	iorwf	(_TMR6_PeriodMatchCallback+1)^(0+256),w
 15245     1008  1903               	btfsc	3,2
 15246     1009  280B               	goto	u9731
 15247     100A  280C               	goto	u9730
 15248     100B                     u9731:
 15249     100B  2811               	goto	l7623
 15250     100C                     u9730:
 15251     100C                     l7621:
 15252                           
 15253                           ;mcc_generated_files/timer/src/tmr6.c: 129:         {;mcc_generated_files/timer/src/tmr6
      +                          .c: 130:             TMR6_PeriodMatchCallback();
 15254     100C  0849               	movf	(_TMR6_PeriodMatchCallback+1)^(0+256),w
 15255     100D  008A               	movwf	10
 15256     100E  0848               	movf	_TMR6_PeriodMatchCallback^(0+256),w
 15257     100F  000A               	callw
 15258     1010  3190               	pagesel	$
 15259     1011                     l7623:
 15260                           
 15261                           ;mcc_generated_files/timer/src/tmr6.c: 132:         PIR2bits.TMR6IF = 0;
 15262     1011  0020               	movlb	0	; select bank0
 15263     1012  1392               	bcf	18,7	;volatile
 15264     1013                     l557:
 15265     1013  0008               	return
 15266     1014                     __end_of_TMR6_Tasks:
 15267                           
 15268                           	psect	text42
 15269     07FF                     __ptext42:	
 15270 ;; *************** function _TMR6_DefaultPeriodMatchCallback *****************
 15271 ;; Defined at:
 15272 ;;		line 109 in file "mcc_generated_files/timer/src/tmr6.c"
 15273 ;; Parameters:    Size  Location     Type
 15274 ;;		None
 15275 ;; Auto vars:     Size  Location     Type
 15276 ;;		None
 15277 ;; Return value:  Size  Location     Type
 15278 ;;                  1    wreg      void 
 15279 ;; Registers used:
 15280 ;;		None
 15281 ;; Tracked objects:
 15282 ;;		On entry : 0/0
 15283 ;;		On exit  : 0/0
 15284 ;;		Unchanged: 0/0
 15285 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 15286 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15287 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15288 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15289 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15290 ;;Total ram usage:        0 bytes
 15291 ;; Hardware stack levels used: 1
 15292 ;; Hardware stack levels required when called: 5
 15293 ;; This function calls:
 15294 ;;		Nothing
 15295 ;; This function is called by:
 15296 ;;		_TMR6_Initialize
 15297 ;;		_TMR6_Tasks
 15298 ;; This function uses a non-reentrant model
 15299 ;;
 15300                           
 15301     07FF                     _TMR6_DefaultPeriodMatchCallback:	
 15302                           ;psect for function _TMR6_DefaultPeriodMatchCallback
 15303                           
 15304     07FF                     l546:	
 15305                           ;incstack = 0
 15306                           ; Regs used in _TMR6_DefaultPeriodMatchCallback: []
 15307                           
 15308     07FF  0008               	return
 15309     0800                     __end_of_TMR6_DefaultPeriodMatchCallback:
 15310                           
 15311                           	psect	text43
 15312     1D2D                     __ptext43:	
 15313 ;; *************** function _updateLedstripAnimation *****************
 15314 ;; Defined at:
 15315 ;;		line 117 in file "ledstrip.c"
 15316 ;; Parameters:    Size  Location     Type
 15317 ;;		None
 15318 ;; Auto vars:     Size  Location     Type
 15319 ;;		None
 15320 ;; Return value:  Size  Location     Type
 15321 ;;                  1    wreg      void 
 15322 ;; Registers used:
 15323 ;;		wreg, status,2, status,0, pclath, cstack
 15324 ;; Tracked objects:
 15325 ;;		On entry : 0/0
 15326 ;;		On exit  : 0/0
 15327 ;;		Unchanged: 0/0
 15328 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 15329 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15330 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15331 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15332 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15333 ;;Total ram usage:        0 bytes
 15334 ;; Hardware stack levels used: 1
 15335 ;; Hardware stack levels required when called: 8
 15336 ;; This function calls:
 15337 ;;		_dutycycle_led_strip
 15338 ;; This function is called by:
 15339 ;;		_initLedstrip
 15340 ;;		_TMR6_Tasks
 15341 ;; This function uses a non-reentrant model
 15342 ;;
 15343                           
 15344     1D2D                     _updateLedstripAnimation:	
 15345                           ;psect for function _updateLedstripAnimation
 15346                           
 15347     1D2D                     l7593:	
 15348                           ;incstack = 0
 15349                           ; Regs used in _updateLedstripAnimation: [wreg+status,2+status,0+pclath+cstack]
 15350                           
 15351                           
 15352                           ;ledstrip.c: 118:     dutycycle_led_strip();
 15353     1D2D  3192  2216  319D   	fcall	_dutycycle_led_strip
 15354     1D30                     l1037:
 15355     1D30  0008               	return
 15356     1D31                     __end_of_updateLedstripAnimation:
 15357                           
 15358                           	psect	text44
 15359     1216                     __ptext44:	
 15360 ;; *************** function _dutycycle_led_strip *****************
 15361 ;; Defined at:
 15362 ;;		line 42 in file "ledstrip.c"
 15363 ;; Parameters:    Size  Location     Type
 15364 ;;		None
 15365 ;; Auto vars:     Size  Location     Type
 15366 ;;  led             1   16[BANK1 ] unsigned char 
 15367 ;;  target          1   15[BANK1 ] unsigned char 
 15368 ;; Return value:  Size  Location     Type
 15369 ;;                  1    wreg      void 
 15370 ;; Registers used:
 15371 ;;		wreg, status,2, status,0, pclath, cstack
 15372 ;; Tracked objects:
 15373 ;;		On entry : 0/0
 15374 ;;		On exit  : 0/0
 15375 ;;		Unchanged: 0/0
 15376 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 15377 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15378 ;;      Locals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0
 15379 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15380 ;;      Totals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0
 15381 ;;Total ram usage:        2 bytes
 15382 ;; Hardware stack levels used: 1
 15383 ;; Hardware stack levels required when called: 7
 15384 ;; This function calls:
 15385 ;;		___lwdiv
 15386 ;;		___wmul
 15387 ;;		_getDutycycle
 15388 ;;		_sendLedstripEndFrame
 15389 ;;		_sendLedstripFrame
 15390 ;;		_sendLedstripStartFrame
 15391 ;; This function is called by:
 15392 ;;		_updateLedstripAnimation
 15393 ;; This function uses a non-reentrant model
 15394 ;;
 15395                           
 15396     1216                     _dutycycle_led_strip:	
 15397                           ;psect for function _dutycycle_led_strip
 15398                           
 15399     1216                     l6777:	
 15400                           ;incstack = 0
 15401                           ; Regs used in _dutycycle_led_strip: [wreg+status,2+status,0+pclath+cstack]
 15402                           
 15403                           
 15404                           ;ledstrip.c: 43:     uint8_t target = (60 * getDutycycle()) / 1023;
 15405     1216  30FF               	movlw	255
 15406     1217  0021               	movlb	1	; select bank1
 15407     1218  00A8               	movwf	___lwdiv@divisor^(0+128)
 15408     1219  3003               	movlw	3
 15409     121A  00A9               	movwf	(___lwdiv@divisor^(0+128)+1)
 15410     121B  319D  2575  3192   	fcall	_getDutycycle
 15411     121E  0021               	movlb	1	; select bank1
 15412     121F  0821               	movf	(?_getDutycycle+1)^(0+128),w
 15413     1220  00A3               	movwf	(___wmul@multiplier+1)^(0+128)
 15414     1221  0820               	movf	?_getDutycycle^(0+128),w
 15415     1222  00A2               	movwf	___wmul@multiplier^(0+128)
 15416     1223  303C               	movlw	60
 15417     1224  00A4               	movwf	___wmul@multiplicand^(0+128)
 15418     1225  3000               	movlw	0
 15419     1226  00A5               	movwf	(___wmul@multiplicand^(0+128)+1)
 15420     1227  319F  27C0  3192   	fcall	___wmul
 15421     122A  0021               	movlb	1	; select bank1
 15422     122B  0823               	movf	(?___wmul+1)^(0+128),w
 15423     122C  00AB               	movwf	(___lwdiv@dividend+1)^(0+128)
 15424     122D  0822               	movf	?___wmul^(0+128),w
 15425     122E  00AA               	movwf	___lwdiv@dividend^(0+128)
 15426     122F  3191  2159  3192   	fcall	___lwdiv
 15427     1232  0021               	movlb	1	; select bank1
 15428     1233  0828               	movf	?___lwdiv^(0+128),w
 15429     1234  00AF               	movwf	dutycycle_led_strip@target^(0+128)
 15430                           
 15431                           ;ledstrip.c: 46:     sendLedstripStartFrame();
 15432     1235  319E  26F8  3192   	fcall	_sendLedstripStartFrame
 15433     1238                     l6779:
 15434                           
 15435                           ;ledstrip.c: 47:     for (uint8_t led = 0; led < 60; led++) {
 15436     1238  0021               	movlb	1	; select bank1
 15437     1239  01B0               	clrf	dutycycle_led_strip@led^(0+128)
 15438     123A                     l6785:
 15439                           
 15440                           ;ledstrip.c: 48:         if (led <= target) {
 15441     123A  0830               	movf	dutycycle_led_strip@led^(0+128),w
 15442     123B  022F               	subwf	dutycycle_led_strip@target^(0+128),w
 15443     123C  1C03               	skipc
 15444     123D  2A3F               	goto	u8351
 15445     123E  2A40               	goto	u8350
 15446     123F                     u8351:
 15447     123F  2A49               	goto	l6789
 15448     1240                     u8350:
 15449     1240                     l6787:
 15450                           
 15451                           ;ledstrip.c: 49:             sendLedstripFrame(0xFF, 0x00, 0x00, 0x05);
 15452     1240  01A1               	clrf	sendLedstripFrame@green^(0+128)
 15453     1241  01A2               	clrf	sendLedstripFrame@blue^(0+128)
 15454     1242  3005               	movlw	5
 15455     1243  00A3               	movwf	sendLedstripFrame@intensity^(0+128)
 15456     1244  30FF               	movlw	255
 15457     1245  319F  276A  3192   	fcall	_sendLedstripFrame
 15458                           
 15459                           ;ledstrip.c: 50:         } else {
 15460     1248  2A51               	goto	l6791
 15461     1249                     l6789:
 15462                           
 15463                           ;ledstrip.c: 51:             sendLedstripFrame(0x00, 0x00, 0x00, 0x05);
 15464     1249  01A1               	clrf	sendLedstripFrame@green^(0+128)
 15465     124A  01A2               	clrf	sendLedstripFrame@blue^(0+128)
 15466     124B  3005               	movlw	5
 15467     124C  00A3               	movwf	sendLedstripFrame@intensity^(0+128)
 15468     124D  3000               	movlw	0
 15469     124E  319F  276A  3192   	fcall	_sendLedstripFrame
 15470     1251                     l6791:
 15471                           
 15472                           ;ledstrip.c: 53:     }
 15473     1251  3001               	movlw	1
 15474     1252  0021               	movlb	1	; select bank1
 15475     1253  07B0               	addwf	dutycycle_led_strip@led^(0+128),f
 15476     1254                     l6793:
 15477     1254  303C               	movlw	60
 15478     1255  0230               	subwf	dutycycle_led_strip@led^(0+128),w
 15479     1256  1C03               	skipc
 15480     1257  2A59               	goto	u8361
 15481     1258  2A5A               	goto	u8360
 15482     1259                     u8361:
 15483     1259  2A3A               	goto	l6785
 15484     125A                     u8360:
 15485     125A                     l6795:
 15486                           
 15487                           ;ledstrip.c: 55:     sendLedstripEndFrame();
 15488     125A  319F  2751  3192   	fcall	_sendLedstripEndFrame
 15489     125D                     l1015:
 15490     125D  0008               	return
 15491     125E                     __end_of_dutycycle_led_strip:
 15492                           
 15493                           	psect	text45
 15494     1EF8                     __ptext45:	
 15495 ;; *************** function _sendLedstripStartFrame *****************
 15496 ;; Defined at:
 15497 ;;		line 6 in file "ledstrip.c"
 15498 ;; Parameters:    Size  Location     Type
 15499 ;;		None
 15500 ;; Auto vars:     Size  Location     Type
 15501 ;;		None
 15502 ;; Return value:  Size  Location     Type
 15503 ;;                  1    wreg      void 
 15504 ;; Registers used:
 15505 ;;		wreg, status,2, status,0, pclath, cstack
 15506 ;; Tracked objects:
 15507 ;;		On entry : 0/0
 15508 ;;		On exit  : 0/0
 15509 ;;		Unchanged: 0/0
 15510 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 15511 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15512 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15513 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15514 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15515 ;;Total ram usage:        0 bytes
 15516 ;; Hardware stack levels used: 1
 15517 ;; Hardware stack levels required when called: 6
 15518 ;; This function calls:
 15519 ;;		_SPI1_ByteExchange
 15520 ;; This function is called by:
 15521 ;;		_dutycycle_led_strip
 15522 ;;		_position_led_strip
 15523 ;; This function uses a non-reentrant model
 15524 ;;
 15525                           
 15526     1EF8                     _sendLedstripStartFrame:	
 15527                           ;psect for function _sendLedstripStartFrame
 15528                           
 15529     1EF8                     l6703:	
 15530                           ;incstack = 0
 15531                           ; Regs used in _sendLedstripStartFrame: [wreg+status,2+status,0+pclath+cstack]
 15532                           
 15533                           
 15534                           ;ledstrip.c: 8:     SPI1_ByteExchange(0x00);
 15535     1EF8  0021               	movlb	1	; select bank1
 15536     1EF9  01A0               	clrf	SPI1_ByteExchange@byteData^(0+128)
 15537     1EFA  319D  25E8  319E   	fcall	_SPI1_ByteExchange
 15538                           
 15539                           ;ledstrip.c: 9:     SPI1_ByteExchange(0x00);
 15540     1EFD  0021               	movlb	1	; select bank1
 15541     1EFE  01A0               	clrf	SPI1_ByteExchange@byteData^(0+128)
 15542     1EFF  319D  25E8  319E   	fcall	_SPI1_ByteExchange
 15543                           
 15544                           ;ledstrip.c: 10:     SPI1_ByteExchange(0x00);
 15545     1F02  0021               	movlb	1	; select bank1
 15546     1F03  01A0               	clrf	SPI1_ByteExchange@byteData^(0+128)
 15547     1F04  319D  25E8  319E   	fcall	_SPI1_ByteExchange
 15548                           
 15549                           ;ledstrip.c: 11:     SPI1_ByteExchange(0x00);
 15550     1F07  0021               	movlb	1	; select bank1
 15551     1F08  01A0               	clrf	SPI1_ByteExchange@byteData^(0+128)
 15552     1F09  319D  25E8  319E   	fcall	_SPI1_ByteExchange
 15553     1F0C                     l999:
 15554     1F0C  0008               	return
 15555     1F0D                     __end_of_sendLedstripStartFrame:
 15556                           
 15557                           	psect	text46
 15558     1F6A                     __ptext46:	
 15559 ;; *************** function _sendLedstripFrame *****************
 15560 ;; Defined at:
 15561 ;;		line 22 in file "ledstrip.c"
 15562 ;; Parameters:    Size  Location     Type
 15563 ;;  red             1    wreg     unsigned char 
 15564 ;;  green           1    1[BANK1 ] unsigned char 
 15565 ;;  blue            1    2[BANK1 ] unsigned char 
 15566 ;;  intensity       1    3[BANK1 ] unsigned char 
 15567 ;; Auto vars:     Size  Location     Type
 15568 ;;  red             1    4[BANK1 ] unsigned char 
 15569 ;; Return value:  Size  Location     Type
 15570 ;;                  1    wreg      void 
 15571 ;; Registers used:
 15572 ;;		wreg, status,2, status,0, pclath, cstack
 15573 ;; Tracked objects:
 15574 ;;		On entry : 0/0
 15575 ;;		On exit  : 0/0
 15576 ;;		Unchanged: 0/0
 15577 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 15578 ;;      Params:         0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0
 15579 ;;      Locals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0
 15580 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15581 ;;      Totals:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0
 15582 ;;Total ram usage:        4 bytes
 15583 ;; Hardware stack levels used: 1
 15584 ;; Hardware stack levels required when called: 6
 15585 ;; This function calls:
 15586 ;;		_SPI1_ByteExchange
 15587 ;; This function is called by:
 15588 ;;		_dutycycle_led_strip
 15589 ;;		_position_led_strip
 15590 ;; This function uses a non-reentrant model
 15591 ;;
 15592                           
 15593     1F6A                     _sendLedstripFrame:	
 15594                           ;psect for function _sendLedstripFrame
 15595                           
 15596                           
 15597                           ;incstack = 0
 15598                           ; Regs used in _sendLedstripFrame: [wreg+status,2+status,0+pclath+cstack]
 15599                           ;sendLedstripFrame@red stored from wreg
 15600     1F6A  0021               	movlb	1	; select bank1
 15601     1F6B  00A4               	movwf	sendLedstripFrame@red^(0+128)
 15602     1F6C                     l6707:
 15603                           
 15604                           ;ledstrip.c: 23:     SPI1_ByteExchange(0xE0 | intensity);
 15605     1F6C  0823               	movf	sendLedstripFrame@intensity^(0+128),w
 15606     1F6D  38E0               	iorlw	224
 15607     1F6E  00A0               	movwf	SPI1_ByteExchange@byteData^(0+128)
 15608     1F6F  319D  25E8  319F   	fcall	_SPI1_ByteExchange
 15609                           
 15610                           ;ledstrip.c: 25:     SPI1_ByteExchange(blue);
 15611     1F72  0021               	movlb	1	; select bank1
 15612     1F73  0822               	movf	sendLedstripFrame@blue^(0+128),w
 15613     1F74  00A0               	movwf	SPI1_ByteExchange@byteData^(0+128)
 15614     1F75  319D  25E8  319F   	fcall	_SPI1_ByteExchange
 15615                           
 15616                           ;ledstrip.c: 26:     SPI1_ByteExchange(green);
 15617     1F78  0021               	movlb	1	; select bank1
 15618     1F79  0821               	movf	sendLedstripFrame@green^(0+128),w
 15619     1F7A  00A0               	movwf	SPI1_ByteExchange@byteData^(0+128)
 15620     1F7B  319D  25E8  319F   	fcall	_SPI1_ByteExchange
 15621                           
 15622                           ;ledstrip.c: 27:     SPI1_ByteExchange(red);
 15623     1F7E  0021               	movlb	1	; select bank1
 15624     1F7F  0824               	movf	sendLedstripFrame@red^(0+128),w
 15625     1F80  00A0               	movwf	SPI1_ByteExchange@byteData^(0+128)
 15626     1F81  319D  25E8  319F   	fcall	_SPI1_ByteExchange
 15627     1F84                     l1005:
 15628     1F84  0008               	return
 15629     1F85                     __end_of_sendLedstripFrame:
 15630                           
 15631                           	psect	text47
 15632     1F51                     __ptext47:	
 15633 ;; *************** function _sendLedstripEndFrame *****************
 15634 ;; Defined at:
 15635 ;;		line 14 in file "ledstrip.c"
 15636 ;; Parameters:    Size  Location     Type
 15637 ;;		None
 15638 ;; Auto vars:     Size  Location     Type
 15639 ;;		None
 15640 ;; Return value:  Size  Location     Type
 15641 ;;                  1    wreg      void 
 15642 ;; Registers used:
 15643 ;;		wreg, status,2, status,0, pclath, cstack
 15644 ;; Tracked objects:
 15645 ;;		On entry : 0/0
 15646 ;;		On exit  : 0/0
 15647 ;;		Unchanged: 0/0
 15648 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 15649 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15650 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15651 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15652 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15653 ;;Total ram usage:        0 bytes
 15654 ;; Hardware stack levels used: 1
 15655 ;; Hardware stack levels required when called: 6
 15656 ;; This function calls:
 15657 ;;		_SPI1_ByteExchange
 15658 ;; This function is called by:
 15659 ;;		_dutycycle_led_strip
 15660 ;;		_position_led_strip
 15661 ;; This function uses a non-reentrant model
 15662 ;;
 15663                           
 15664     1F51                     _sendLedstripEndFrame:	
 15665                           ;psect for function _sendLedstripEndFrame
 15666                           
 15667     1F51                     l6705:	
 15668                           ;incstack = 0
 15669                           ; Regs used in _sendLedstripEndFrame: [wreg+status,2+status,0+pclath+cstack]
 15670                           
 15671                           
 15672                           ;ledstrip.c: 16:     SPI1_ByteExchange(0xFF);
 15673     1F51  30FF               	movlw	255
 15674     1F52  0021               	movlb	1	; select bank1
 15675     1F53  00A0               	movwf	SPI1_ByteExchange@byteData^(0+128)
 15676     1F54  319D  25E8  319F   	fcall	_SPI1_ByteExchange
 15677                           
 15678                           ;ledstrip.c: 17:     SPI1_ByteExchange(0xFF);
 15679     1F57  30FF               	movlw	255
 15680     1F58  0021               	movlb	1	; select bank1
 15681     1F59  00A0               	movwf	SPI1_ByteExchange@byteData^(0+128)
 15682     1F5A  319D  25E8  319F   	fcall	_SPI1_ByteExchange
 15683                           
 15684                           ;ledstrip.c: 18:     SPI1_ByteExchange(0xFF);
 15685     1F5D  30FF               	movlw	255
 15686     1F5E  0021               	movlb	1	; select bank1
 15687     1F5F  00A0               	movwf	SPI1_ByteExchange@byteData^(0+128)
 15688     1F60  319D  25E8  319F   	fcall	_SPI1_ByteExchange
 15689                           
 15690                           ;ledstrip.c: 19:     SPI1_ByteExchange(0xFF);
 15691     1F63  30FF               	movlw	255
 15692     1F64  0021               	movlb	1	; select bank1
 15693     1F65  00A0               	movwf	SPI1_ByteExchange@byteData^(0+128)
 15694     1F66  319D  25E8  319F   	fcall	_SPI1_ByteExchange
 15695     1F69                     l1002:
 15696     1F69  0008               	return
 15697     1F6A                     __end_of_sendLedstripEndFrame:
 15698                           
 15699                           	psect	text48
 15700     1DE8                     __ptext48:	
 15701 ;; *************** function _SPI1_ByteExchange *****************
 15702 ;; Defined at:
 15703 ;;		line 160 in file "mcc_generated_files/spi/src/mssp1.c"
 15704 ;; Parameters:    Size  Location     Type
 15705 ;;  byteData        1    0[BANK1 ] unsigned char 
 15706 ;; Auto vars:     Size  Location     Type
 15707 ;;		None
 15708 ;; Return value:  Size  Location     Type
 15709 ;;                  1    wreg      unsigned char 
 15710 ;; Registers used:
 15711 ;;		wreg
 15712 ;; Tracked objects:
 15713 ;;		On entry : 0/0
 15714 ;;		On exit  : 0/0
 15715 ;;		Unchanged: 0/0
 15716 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 15717 ;;      Params:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0
 15718 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15719 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15720 ;;      Totals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0
 15721 ;;Total ram usage:        1 bytes
 15722 ;; Hardware stack levels used: 1
 15723 ;; Hardware stack levels required when called: 5
 15724 ;; This function calls:
 15725 ;;		Nothing
 15726 ;; This function is called by:
 15727 ;;		_sendLedstripStartFrame
 15728 ;;		_sendLedstripEndFrame
 15729 ;;		_sendLedstripFrame
 15730 ;; This function uses a non-reentrant model
 15731 ;;
 15732                           
 15733     1DE8                     _SPI1_ByteExchange:	
 15734                           ;psect for function _SPI1_ByteExchange
 15735                           
 15736     1DE8                     l6605:	
 15737                           ;incstack = 0
 15738                           ; Regs used in _SPI1_ByteExchange: [wreg]
 15739                           
 15740                           
 15741                           ;mcc_generated_files/spi/src/mssp1.c: 160: uint8_t SPI1_ByteExchange(uint8_t byteData);m
      +                          cc_generated_files/spi/src/mssp1.c: 161: {;mcc_generated_files/spi/src/mssp1.c: 162:    
      +                           SSP1BUF = byteData;
 15742     1DE8  0021               	movlb	1	; select bank1
 15743     1DE9  0820               	movf	SPI1_ByteExchange@byteData^(0+128),w
 15744     1DEA  0024               	movlb	4	; select bank4
 15745     1DEB  0091               	movwf	17	;volatile
 15746     1DEC                     l174:	
 15747                           ;mcc_generated_files/spi/src/mssp1.c: 164:     {;mcc_generated_files/spi/src/mssp1.c: 16
      +                          6:     }
 15748                           
 15749                           
 15750                           ;mcc_generated_files/spi/src/mssp1.c: 163:     while (!PIR1bits.SSP1IF)
 15751     1DEC  0020               	movlb	0	; select bank0
 15752     1DED  1D91               	btfss	17,3	;volatile
 15753     1DEE  2DF0               	goto	u8171
 15754     1DEF  2DF1               	goto	u8170
 15755     1DF0                     u8171:
 15756     1DF0  2DEC               	goto	l174
 15757     1DF1                     u8170:
 15758     1DF1                     l176:
 15759                           
 15760                           ;mcc_generated_files/spi/src/mssp1.c: 167:     PIR1bits.SSP1IF = 0;
 15761     1DF1  1191               	bcf	17,3	;volatile
 15762     1DF2                     l6607:
 15763                           
 15764                           ;mcc_generated_files/spi/src/mssp1.c: 168:     return SSP1BUF;;	Return value of _SPI1_By
      +                          teExchange is never used
 15765     1DF2  0024               	movlb	4	; select bank4
 15766     1DF3  0811               	movf	17,w	;volatile
 15767     1DF4                     l177:
 15768     1DF4  0008               	return
 15769     1DF5                     __end_of_SPI1_ByteExchange:
 15770                           
 15771                           	psect	text49
 15772     1D75                     __ptext49:	
 15773 ;; *************** function _getDutycycle *****************
 15774 ;; Defined at:
 15775 ;;		line 39 in file "controller.c"
 15776 ;; Parameters:    Size  Location     Type
 15777 ;;		None
 15778 ;; Auto vars:     Size  Location     Type
 15779 ;;		None
 15780 ;; Return value:  Size  Location     Type
 15781 ;;                  2    0[BANK1 ] unsigned short 
 15782 ;; Registers used:
 15783 ;;		wreg
 15784 ;; Tracked objects:
 15785 ;;		On entry : 0/0
 15786 ;;		On exit  : 0/0
 15787 ;;		Unchanged: 0/0
 15788 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 15789 ;;      Params:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0
 15790 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15791 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15792 ;;      Totals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0
 15793 ;;Total ram usage:        2 bytes
 15794 ;; Hardware stack levels used: 1
 15795 ;; Hardware stack levels required when called: 5
 15796 ;; This function calls:
 15797 ;;		Nothing
 15798 ;; This function is called by:
 15799 ;;		_dutycycle_led_strip
 15800 ;; This function uses a non-reentrant model
 15801 ;;
 15802                           
 15803     1D75                     _getDutycycle:	
 15804                           ;psect for function _getDutycycle
 15805                           
 15806     1D75                     l6699:	
 15807                           ;incstack = 0
 15808                           ; Regs used in _getDutycycle: [wreg]
 15809                           
 15810     1D75  0020               	movlb	0	; select bank0
 15811     1D76  0858               	movf	_dutycycle+1,w
 15812     1D77  0021               	movlb	1	; select bank1
 15813     1D78  00A1               	movwf	(?_getDutycycle+1)^(0+128)
 15814     1D79  0020               	movlb	0	; select bank0
 15815     1D7A  0857               	movf	_dutycycle,w
 15816     1D7B  0021               	movlb	1	; select bank1
 15817     1D7C  00A0               	movwf	?_getDutycycle^(0+128)
 15818     1D7D                     l966:
 15819     1D7D  0008               	return
 15820     1D7E                     __end_of_getDutycycle:
 15821                           
 15822                           	psect	text50
 15823     1FC0                     __ptext50:	
 15824 ;; *************** function ___wmul *****************
 15825 ;; Defined at:
 15826 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\Umul16.c"
 15827 ;; Parameters:    Size  Location     Type
 15828 ;;  multiplier      2    2[BANK1 ] unsigned int 
 15829 ;;  multiplicand    2    4[BANK1 ] unsigned int 
 15830 ;; Auto vars:     Size  Location     Type
 15831 ;;  product         2    6[BANK1 ] unsigned int 
 15832 ;; Return value:  Size  Location     Type
 15833 ;;                  2    2[BANK1 ] unsigned int 
 15834 ;; Registers used:
 15835 ;;		wreg, status,2, status,0
 15836 ;; Tracked objects:
 15837 ;;		On entry : 0/0
 15838 ;;		On exit  : 0/0
 15839 ;;		Unchanged: 0/0
 15840 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 15841 ;;      Params:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0
 15842 ;;      Locals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0
 15843 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15844 ;;      Totals:         0       0       6       0       0       0       0       0       0       0       0       0       
      +0       0
 15845 ;;Total ram usage:        6 bytes
 15846 ;; Hardware stack levels used: 1
 15847 ;; Hardware stack levels required when called: 5
 15848 ;; This function calls:
 15849 ;;		Nothing
 15850 ;; This function is called by:
 15851 ;;		_SPI1_Open
 15852 ;;		_main
 15853 ;;		_dutycycle_led_strip
 15854 ;;		_atoi
 15855 ;;		_read_prec_or_width
 15856 ;; This function uses a non-reentrant model
 15857 ;;
 15858                           
 15859     1FC0                     ___wmul:	
 15860                           ;psect for function ___wmul
 15861                           
 15862     1FC0                     l6339:	
 15863                           ;incstack = 0
 15864                           ; Regs used in ___wmul: [wreg+status,2+status,0]
 15865                           
 15866     1FC0  0021               	movlb	1	; select bank1
 15867     1FC1  01A6               	clrf	___wmul@product^(0+128)
 15868     1FC2  01A7               	clrf	(___wmul@product+1)^(0+128)
 15869     1FC3                     l6341:
 15870     1FC3  1C22               	btfss	___wmul@multiplier^(0+128),0
 15871     1FC4  2FC6               	goto	u7591
 15872     1FC5  2FC7               	goto	u7590
 15873     1FC6                     u7591:
 15874     1FC6  2FCB               	goto	l1192
 15875     1FC7                     u7590:
 15876     1FC7                     l6343:
 15877     1FC7  0824               	movf	___wmul@multiplicand^(0+128),w
 15878     1FC8  07A6               	addwf	___wmul@product^(0+128),f
 15879     1FC9  0825               	movf	(___wmul@multiplicand+1)^(0+128),w
 15880     1FCA  3DA7               	addwfc	(___wmul@product+1)^(0+128),f
 15881     1FCB                     l1192:
 15882     1FCB  3001               	movlw	1
 15883     1FCC                     u7605:
 15884     1FCC  35A4               	lslf	___wmul@multiplicand^(0+128),f
 15885     1FCD  0DA5               	rlf	(___wmul@multiplicand+1)^(0+128),f
 15886     1FCE  0B89               	decfsz	9,f
 15887     1FCF  2FCC               	goto	u7605
 15888     1FD0                     l6345:
 15889     1FD0  3001               	movlw	1
 15890     1FD1                     u7615:
 15891     1FD1  36A3               	lsrf	(___wmul@multiplier+1)^(0+128),f
 15892     1FD2  0CA2               	rrf	___wmul@multiplier^(0+128),f
 15893     1FD3  0B89               	decfsz	9,f
 15894     1FD4  2FD1               	goto	u7615
 15895     1FD5                     l6347:
 15896     1FD5  0822               	movf	___wmul@multiplier^(0+128),w
 15897     1FD6  0423               	iorwf	(___wmul@multiplier+1)^(0+128),w
 15898     1FD7  1D03               	btfss	3,2
 15899     1FD8  2FDA               	goto	u7621
 15900     1FD9  2FDB               	goto	u7620
 15901     1FDA                     u7621:
 15902     1FDA  2FC3               	goto	l6341
 15903     1FDB                     u7620:
 15904     1FDB                     l6349:
 15905     1FDB  0827               	movf	(___wmul@product+1)^(0+128),w
 15906     1FDC  00A3               	movwf	(?___wmul+1)^(0+128)
 15907     1FDD  0826               	movf	___wmul@product^(0+128),w
 15908     1FDE  00A2               	movwf	?___wmul^(0+128)
 15909     1FDF                     l1194:
 15910     1FDF  0008               	return
 15911     1FE0                     __end_of___wmul:
 15912                           
 15913                           	psect	text51
 15914     1159                     __ptext51:	
 15915 ;; *************** function ___lwdiv *****************
 15916 ;; Defined at:
 15917 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\lwdiv.c"
 15918 ;; Parameters:    Size  Location     Type
 15919 ;;  divisor         2    8[BANK1 ] unsigned int 
 15920 ;;  dividend        2   10[BANK1 ] unsigned int 
 15921 ;; Auto vars:     Size  Location     Type
 15922 ;;  quotient        2   13[BANK1 ] unsigned int 
 15923 ;;  counter         1   12[BANK1 ] unsigned char 
 15924 ;; Return value:  Size  Location     Type
 15925 ;;                  2    8[BANK1 ] unsigned int 
 15926 ;; Registers used:
 15927 ;;		wreg, status,2, status,0
 15928 ;; Tracked objects:
 15929 ;;		On entry : 0/0
 15930 ;;		On exit  : 0/0
 15931 ;;		Unchanged: 0/0
 15932 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 15933 ;;      Params:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0
 15934 ;;      Locals:         0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0
 15935 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15936 ;;      Totals:         0       0       7       0       0       0       0       0       0       0       0       0       
      +0       0
 15937 ;;Total ram usage:        7 bytes
 15938 ;; Hardware stack levels used: 1
 15939 ;; Hardware stack levels required when called: 5
 15940 ;; This function calls:
 15941 ;;		Nothing
 15942 ;; This function is called by:
 15943 ;;		_dutycycle_led_strip
 15944 ;;		_utoa
 15945 ;; This function uses a non-reentrant model
 15946 ;;
 15947                           
 15948     1159                     ___lwdiv:	
 15949                           ;psect for function ___lwdiv
 15950                           
 15951     1159                     l6435:	
 15952                           ;incstack = 0
 15953                           ; Regs used in ___lwdiv: [wreg+status,2+status,0]
 15954                           
 15955     1159  0021               	movlb	1	; select bank1
 15956     115A  01AD               	clrf	___lwdiv@quotient^(0+128)
 15957     115B  01AE               	clrf	(___lwdiv@quotient+1)^(0+128)
 15958     115C                     l6437:
 15959     115C  0828               	movf	___lwdiv@divisor^(0+128),w
 15960     115D  0429               	iorwf	(___lwdiv@divisor+1)^(0+128),w
 15961     115E  1903               	btfsc	3,2
 15962     115F  2961               	goto	u7821
 15963     1160  2962               	goto	u7820
 15964     1161                     u7821:
 15965     1161  298F               	goto	l6457
 15966     1162                     u7820:
 15967     1162                     l6439:
 15968     1162  3001               	movlw	1
 15969     1163  00AC               	movwf	___lwdiv@counter^(0+128)
 15970     1164  296C               	goto	l6445
 15971     1165                     l6441:
 15972     1165  3001               	movlw	1
 15973     1166                     u7835:
 15974     1166  35A8               	lslf	___lwdiv@divisor^(0+128),f
 15975     1167  0DA9               	rlf	(___lwdiv@divisor+1)^(0+128),f
 15976     1168  0B89               	decfsz	9,f
 15977     1169  2966               	goto	u7835
 15978     116A                     l6443:
 15979     116A  3001               	movlw	1
 15980     116B  07AC               	addwf	___lwdiv@counter^(0+128),f
 15981     116C                     l6445:
 15982     116C  1FA9               	btfss	(___lwdiv@divisor+1)^(0+128),7
 15983     116D  296F               	goto	u7841
 15984     116E  2970               	goto	u7840
 15985     116F                     u7841:
 15986     116F  2965               	goto	l6441
 15987     1170                     u7840:
 15988     1170                     l6447:
 15989     1170  3001               	movlw	1
 15990     1171                     u7855:
 15991     1171  35AD               	lslf	___lwdiv@quotient^(0+128),f
 15992     1172  0DAE               	rlf	(___lwdiv@quotient+1)^(0+128),f
 15993     1173  0B89               	decfsz	9,f
 15994     1174  2971               	goto	u7855
 15995     1175  0829               	movf	(___lwdiv@divisor+1)^(0+128),w
 15996     1176  022B               	subwf	(___lwdiv@dividend+1)^(0+128),w
 15997     1177  1D03               	skipz
 15998     1178  297B               	goto	u7865
 15999     1179  0828               	movf	___lwdiv@divisor^(0+128),w
 16000     117A  022A               	subwf	___lwdiv@dividend^(0+128),w
 16001     117B                     u7865:
 16002     117B  1C03               	skipc
 16003     117C  297E               	goto	u7861
 16004     117D  297F               	goto	u7860
 16005     117E                     u7861:
 16006     117E  2984               	goto	l6453
 16007     117F                     u7860:
 16008     117F                     l6449:
 16009     117F  0828               	movf	___lwdiv@divisor^(0+128),w
 16010     1180  02AA               	subwf	___lwdiv@dividend^(0+128),f
 16011     1181  0829               	movf	(___lwdiv@divisor+1)^(0+128),w
 16012     1182  3BAB               	subwfb	(___lwdiv@dividend+1)^(0+128),f
 16013     1183                     l6451:
 16014     1183  142D               	bsf	___lwdiv@quotient^(0+128),0
 16015     1184                     l6453:
 16016     1184  3001               	movlw	1
 16017     1185                     u7875:
 16018     1185  36A9               	lsrf	(___lwdiv@divisor+1)^(0+128),f
 16019     1186  0CA8               	rrf	___lwdiv@divisor^(0+128),f
 16020     1187  0B89               	decfsz	9,f
 16021     1188  2985               	goto	u7875
 16022     1189                     l6455:
 16023     1189  3001               	movlw	1
 16024     118A  02AC               	subwf	___lwdiv@counter^(0+128),f
 16025     118B  1D03               	btfss	3,2
 16026     118C  298E               	goto	u7881
 16027     118D  298F               	goto	u7880
 16028     118E                     u7881:
 16029     118E  2970               	goto	l6447
 16030     118F                     u7880:
 16031     118F                     l6457:
 16032     118F  082E               	movf	(___lwdiv@quotient+1)^(0+128),w
 16033     1190  00A9               	movwf	(?___lwdiv+1)^(0+128)
 16034     1191  082D               	movf	___lwdiv@quotient^(0+128),w
 16035     1192  00A8               	movwf	?___lwdiv^(0+128)
 16036     1193                     l1472:
 16037     1193  0008               	return
 16038     1194                     __end_of___lwdiv:
 16039                           
 16040                           	psect	text52
 16041     1D6C                     __ptext52:	
 16042 ;; *************** function _TMR4_PeriodMatchCallbackRegister *****************
 16043 ;; Defined at:
 16044 ;;		line 124 in file "mcc_generated_files/timer/src/tmr4.c"
 16045 ;; Parameters:    Size  Location     Type
 16046 ;;  CallbackHand    2    0[BANK1 ] PTR FTN()void 
 16047 ;;		 -> controller(1), 
 16048 ;; Auto vars:     Size  Location     Type
 16049 ;;		None
 16050 ;; Return value:  Size  Location     Type
 16051 ;;                  1    wreg      void 
 16052 ;; Registers used:
 16053 ;;		wreg
 16054 ;; Tracked objects:
 16055 ;;		On entry : 0/0
 16056 ;;		On exit  : 0/0
 16057 ;;		Unchanged: 0/0
 16058 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 16059 ;;      Params:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0
 16060 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16061 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16062 ;;      Totals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0
 16063 ;;Total ram usage:        2 bytes
 16064 ;; Hardware stack levels used: 1
 16065 ;; Hardware stack levels required when called: 5
 16066 ;; This function calls:
 16067 ;;		Nothing
 16068 ;; This function is called by:
 16069 ;;		_main
 16070 ;; This function uses a non-reentrant model
 16071 ;;
 16072                           
 16073     1D6C                     _TMR4_PeriodMatchCallbackRegister:	
 16074                           ;psect for function _TMR4_PeriodMatchCallbackRegister
 16075                           
 16076     1D6C                     l7615:	
 16077                           ;incstack = 0
 16078                           ; Regs used in _TMR4_PeriodMatchCallbackRegister: [wreg]
 16079                           
 16080                           
 16081                           ;mcc_generated_files/timer/src/tmr4.c: 124: void TMR4_PeriodMatchCallbackRegister(void (
      +                          * CallbackHandler)(void));mcc_generated_files/timer/src/tmr4.c: 125: {;mcc_generated_fil
      +                          es/timer/src/tmr4.c: 126:    TMR4_PeriodMatchCallback = CallbackHandler;
 16082     1D6C  0021               	movlb	1	; select bank1
 16083     1D6D  0821               	movf	(TMR4_PeriodMatchCallbackRegister@CallbackHandler+1)^(0+128),w
 16084     1D6E  0022               	movlb	2	; select bank2
 16085     1D6F  00CB               	movwf	(_TMR4_PeriodMatchCallback+1)^(0+256)
 16086     1D70  0021               	movlb	1	; select bank1
 16087     1D71  0820               	movf	TMR4_PeriodMatchCallbackRegister@CallbackHandler^(0+128),w
 16088     1D72  0022               	movlb	2	; select bank2
 16089     1D73  00CA               	movwf	_TMR4_PeriodMatchCallback^(0+256)
 16090     1D74                     l494:
 16091     1D74  0008               	return
 16092     1D75                     __end_of_TMR4_PeriodMatchCallbackRegister:
 16093                           
 16094                           	psect	text53
 16095     1014                     __ptext53:	
 16096 ;; *************** function _SYSTEM_Initialize *****************
 16097 ;; Defined at:
 16098 ;;		line 39 in file "mcc_generated_files/system/src/system.c"
 16099 ;; Parameters:    Size  Location     Type
 16100 ;;		None
 16101 ;; Auto vars:     Size  Location     Type
 16102 ;;		None
 16103 ;; Return value:  Size  Location     Type
 16104 ;;                  1    wreg      void 
 16105 ;; Registers used:
 16106 ;;		wreg, status,2, status,0, pclath, cstack
 16107 ;; Tracked objects:
 16108 ;;		On entry : 0/0
 16109 ;;		On exit  : 0/0
 16110 ;;		Unchanged: 0/0
 16111 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 16112 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16113 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16114 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16115 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16116 ;;Total ram usage:        0 bytes
 16117 ;; Hardware stack levels used: 1
 16118 ;; Hardware stack levels required when called: 7
 16119 ;; This function calls:
 16120 ;;		_ADC_Initialize
 16121 ;;		_CLOCK_Initialize
 16122 ;;		_EUSART_Initialize
 16123 ;;		_INTERRUPT_Initialize
 16124 ;;		_PIN_MANAGER_Initialize
 16125 ;;		_PWM_buzzer_Initialize
 16126 ;;		_SPI1_Initialize
 16127 ;;		_TMR2_Initialize
 16128 ;;		_TMR4_Initialize
 16129 ;;		_TMR6_Initialize
 16130 ;;		_pwm_fan_Initialize
 16131 ;; This function is called by:
 16132 ;;		_main
 16133 ;; This function uses a non-reentrant model
 16134 ;;
 16135                           
 16136     1014                     _SYSTEM_Initialize:	
 16137                           ;psect for function _SYSTEM_Initialize
 16138                           
 16139     1014                     l7597:	
 16140                           ;incstack = 0
 16141                           ; Regs used in _SYSTEM_Initialize: [wreg+status,2+status,0+pclath+cstack]
 16142                           
 16143                           
 16144                           ;mcc_generated_files/system/src/system.c: 41:     CLOCK_Initialize();
 16145     1014  319D  255A  3190   	fcall	_CLOCK_Initialize
 16146                           
 16147                           ;mcc_generated_files/system/src/system.c: 42:     PIN_MANAGER_Initialize();
 16148     1017  3191  21D0  3190   	fcall	_PIN_MANAGER_Initialize
 16149     101A                     l7599:
 16150                           
 16151                           ;mcc_generated_files/system/src/system.c: 43:     TMR2_Initialize();
 16152     101A  319E  266A  3190   	fcall	_TMR2_Initialize
 16153     101D                     l7601:
 16154                           
 16155                           ;mcc_generated_files/system/src/system.c: 44:     TMR4_Initialize();
 16156     101D  319E  267B  3190   	fcall	_TMR4_Initialize
 16157     1020                     l7603:
 16158                           
 16159                           ;mcc_generated_files/system/src/system.c: 45:     TMR6_Initialize();
 16160     1020  319E  265B  3190   	fcall	_TMR6_Initialize
 16161     1023                     l7605:
 16162                           
 16163                           ;mcc_generated_files/system/src/system.c: 46:     ADC_Initialize();
 16164     1023  319F  270D  3190   	fcall	_ADC_Initialize
 16165     1026                     l7607:
 16166                           
 16167                           ;mcc_generated_files/system/src/system.c: 47:     EUSART_Initialize();
 16168     1026  3191  2122  3190   	fcall	_EUSART_Initialize
 16169     1029                     l7609:
 16170                           
 16171                           ;mcc_generated_files/system/src/system.c: 48:     PWM_buzzer_Initialize();
 16172     1029  319D  25C4  3190   	fcall	_PWM_buzzer_Initialize
 16173     102C                     l7611:
 16174                           
 16175                           ;mcc_generated_files/system/src/system.c: 49:     pwm_fan_Initialize();
 16176     102C  319D  25D0  3190   	fcall	_pwm_fan_Initialize
 16177     102F                     l7613:
 16178                           
 16179                           ;mcc_generated_files/system/src/system.c: 50:     SPI1_Initialize();
 16180     102F  319D  25A2  3190   	fcall	_SPI1_Initialize
 16181                           
 16182                           ;mcc_generated_files/system/src/system.c: 51:     INTERRUPT_Initialize();
 16183     1032  319D  25B8  3190   	fcall	_INTERRUPT_Initialize
 16184     1035                     l379:
 16185     1035  0008               	return
 16186     1036                     __end_of_SYSTEM_Initialize:
 16187                           
 16188                           	psect	text54
 16189     1DD0                     __ptext54:	
 16190 ;; *************** function _pwm_fan_Initialize *****************
 16191 ;; Defined at:
 16192 ;;		line 45 in file "mcc_generated_files/pwm/src/pwm5.c"
 16193 ;; Parameters:    Size  Location     Type
 16194 ;;		None
 16195 ;; Auto vars:     Size  Location     Type
 16196 ;;		None
 16197 ;; Return value:  Size  Location     Type
 16198 ;;                  1    wreg      void 
 16199 ;; Registers used:
 16200 ;;		wreg, status,2, status,0
 16201 ;; Tracked objects:
 16202 ;;		On entry : 0/0
 16203 ;;		On exit  : 0/0
 16204 ;;		Unchanged: 0/0
 16205 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 16206 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16207 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16208 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16209 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16210 ;;Total ram usage:        0 bytes
 16211 ;; Hardware stack levels used: 1
 16212 ;; Hardware stack levels required when called: 5
 16213 ;; This function calls:
 16214 ;;		Nothing
 16215 ;; This function is called by:
 16216 ;;		_SYSTEM_Initialize
 16217 ;; This function uses a non-reentrant model
 16218 ;;
 16219                           
 16220     1DD0                     _pwm_fan_Initialize:	
 16221                           ;psect for function _pwm_fan_Initialize
 16222                           
 16223     1DD0                     l7329:	
 16224                           ;incstack = 0
 16225                           ; Regs used in _pwm_fan_Initialize: [wreg+status,2+status,0]
 16226                           
 16227                           
 16228                           ;mcc_generated_files/pwm/src/pwm5.c: 50:     PWM5CON = 0x80;
 16229     1DD0  3080               	movlw	128
 16230     1DD1  002C               	movlb	12	; select bank12
 16231     1DD2  0099               	movwf	25	;volatile
 16232                           
 16233                           ;mcc_generated_files/pwm/src/pwm5.c: 54:     PWM5DCH = 0x7C;
 16234     1DD3  307C               	movlw	124
 16235     1DD4  0098               	movwf	24	;volatile
 16236                           
 16237                           ;mcc_generated_files/pwm/src/pwm5.c: 57:     PWM5DCL = 0xC0;
 16238     1DD5  30C0               	movlw	192
 16239     1DD6  0097               	movwf	23	;volatile
 16240     1DD7                     l7331:
 16241                           
 16242                           ;mcc_generated_files/pwm/src/pwm5.c: 61:     PWMTMRSbits.P5TSEL = 0x1;
 16243     1DD7  081F               	movf	31,w	;volatile
 16244     1DD8  39FC               	andlw	-4
 16245     1DD9  3801               	iorlw	1
 16246     1DDA  009F               	movwf	31	;volatile
 16247     1DDB                     l69:
 16248     1DDB  0008               	return
 16249     1DDC                     __end_of_pwm_fan_Initialize:
 16250                           
 16251                           	psect	text55
 16252     1E5B                     __ptext55:	
 16253 ;; *************** function _TMR6_Initialize *****************
 16254 ;; Defined at:
 16255 ;;		line 45 in file "mcc_generated_files/timer/src/tmr6.c"
 16256 ;; Parameters:    Size  Location     Type
 16257 ;;		None
 16258 ;; Auto vars:     Size  Location     Type
 16259 ;;		None
 16260 ;; Return value:  Size  Location     Type
 16261 ;;                  1    wreg      void 
 16262 ;; Registers used:
 16263 ;;		wreg, status,2
 16264 ;; Tracked objects:
 16265 ;;		On entry : 0/0
 16266 ;;		On exit  : 0/0
 16267 ;;		Unchanged: 0/0
 16268 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 16269 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16270 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16271 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16272 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16273 ;;Total ram usage:        0 bytes
 16274 ;; Hardware stack levels used: 1
 16275 ;; Hardware stack levels required when called: 5
 16276 ;; This function calls:
 16277 ;;		Nothing
 16278 ;; This function is called by:
 16279 ;;		_SYSTEM_Initialize
 16280 ;; This function uses a non-reentrant model
 16281 ;;
 16282                           
 16283     1E5B                     _TMR6_Initialize:	
 16284                           ;psect for function _TMR6_Initialize
 16285                           
 16286     1E5B                     l7427:	
 16287                           ;incstack = 0
 16288                           ; Regs used in _TMR6_Initialize: [wreg+status,2]
 16289                           
 16290                           
 16291                           ;mcc_generated_files/timer/src/tmr6.c: 48:     PR6 = 0xE;
 16292     1E5B  300E               	movlw	14
 16293     1E5C  0028               	movlb	8	; select bank8
 16294     1E5D  009D               	movwf	29	;volatile
 16295     1E5E                     l7429:
 16296                           
 16297                           ;mcc_generated_files/timer/src/tmr6.c: 49:     TMR6 = 0x0;
 16298     1E5E  019C               	clrf	28	;volatile
 16299     1E5F                     l7431:
 16300                           
 16301                           ;mcc_generated_files/timer/src/tmr6.c: 50:     TMR6_PeriodMatchCallback = TMR6_DefaultPe
      +                          riodMatchCallback;
 16302     1E5F  30FF               	movlw	low _TMR6_DefaultPeriodMatchCallback
 16303     1E60  0022               	movlb	2	; select bank2
 16304     1E61  00C8               	movwf	_TMR6_PeriodMatchCallback^(0+256)
 16305     1E62  3007               	movlw	high _TMR6_DefaultPeriodMatchCallback
 16306     1E63  00C9               	movwf	(_TMR6_PeriodMatchCallback^(0+256)+1)
 16307     1E64                     l7433:
 16308                           
 16309                           ;mcc_generated_files/timer/src/tmr6.c: 52:     PIR2bits.TMR6IF = 0;
 16310     1E64  0020               	movlb	0	; select bank0
 16311     1E65  1392               	bcf	18,7	;volatile
 16312     1E66                     l7435:
 16313                           
 16314                           ;mcc_generated_files/timer/src/tmr6.c: 53:     T6CON = (1 << 0x0)
 16315     1E66  301D               	movlw	29
 16316     1E67  0028               	movlb	8	; select bank8
 16317     1E68  009E               	movwf	30	;volatile
 16318     1E69                     l516:
 16319     1E69  0008               	return
 16320     1E6A                     __end_of_TMR6_Initialize:
 16321                           
 16322                           	psect	text56
 16323     1E7B                     __ptext56:	
 16324 ;; *************** function _TMR4_Initialize *****************
 16325 ;; Defined at:
 16326 ;;		line 45 in file "mcc_generated_files/timer/src/tmr4.c"
 16327 ;; Parameters:    Size  Location     Type
 16328 ;;		None
 16329 ;; Auto vars:     Size  Location     Type
 16330 ;;		None
 16331 ;; Return value:  Size  Location     Type
 16332 ;;                  1    wreg      void 
 16333 ;; Registers used:
 16334 ;;		wreg, status,2
 16335 ;; Tracked objects:
 16336 ;;		On entry : 0/0
 16337 ;;		On exit  : 0/0
 16338 ;;		Unchanged: 0/0
 16339 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 16340 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16341 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16342 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16343 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16344 ;;Total ram usage:        0 bytes
 16345 ;; Hardware stack levels used: 1
 16346 ;; Hardware stack levels required when called: 5
 16347 ;; This function calls:
 16348 ;;		Nothing
 16349 ;; This function is called by:
 16350 ;;		_SYSTEM_Initialize
 16351 ;; This function uses a non-reentrant model
 16352 ;;
 16353                           
 16354     1E7B                     _TMR4_Initialize:	
 16355                           ;psect for function _TMR4_Initialize
 16356                           
 16357     1E7B                     l7415:	
 16358                           ;incstack = 0
 16359                           ; Regs used in _TMR4_Initialize: [wreg+status,2]
 16360                           
 16361                           
 16362                           ;mcc_generated_files/timer/src/tmr4.c: 48:     PR4 = 0xF9;
 16363     1E7B  30F9               	movlw	249
 16364     1E7C  0028               	movlb	8	; select bank8
 16365     1E7D  0096               	movwf	22	;volatile
 16366     1E7E                     l7417:
 16367                           
 16368                           ;mcc_generated_files/timer/src/tmr4.c: 49:     TMR4 = 0x0;
 16369     1E7E  0195               	clrf	21	;volatile
 16370     1E7F                     l7419:
 16371                           
 16372                           ;mcc_generated_files/timer/src/tmr4.c: 50:     TMR4_PeriodMatchCallback = TMR4_DefaultPe
      +                          riodMatchCallback;
 16373     1E7F  3026               	movlw	low _TMR4_DefaultPeriodMatchCallback
 16374     1E80  0022               	movlb	2	; select bank2
 16375     1E81  00CA               	movwf	_TMR4_PeriodMatchCallback^(0+256)
 16376     1E82  301D               	movlw	high _TMR4_DefaultPeriodMatchCallback
 16377     1E83  00CB               	movwf	(_TMR4_PeriodMatchCallback^(0+256)+1)
 16378     1E84                     l7421:
 16379                           
 16380                           ;mcc_generated_files/timer/src/tmr4.c: 52:     PIR2bits.TMR4IF = 0;
 16381     1E84  0020               	movlb	0	; select bank0
 16382     1E85  1092               	bcf	18,1	;volatile
 16383     1E86                     l7423:
 16384                           
 16385                           ;mcc_generated_files/timer/src/tmr4.c: 53:     PIE2bits.TMR4IE = 1;
 16386     1E86  0021               	movlb	1	; select bank1
 16387     1E87  1492               	bsf	18,1	;volatile
 16388     1E88                     l7425:
 16389                           
 16390                           ;mcc_generated_files/timer/src/tmr4.c: 54:     T4CON = (3 << 0x0)
 16391     1E88  3077               	movlw	119
 16392     1E89  0028               	movlb	8	; select bank8
 16393     1E8A  0097               	movwf	23	;volatile
 16394     1E8B                     l457:
 16395     1E8B  0008               	return
 16396     1E8C                     __end_of_TMR4_Initialize:
 16397                           
 16398                           	psect	text57
 16399     1E6A                     __ptext57:	
 16400 ;; *************** function _TMR2_Initialize *****************
 16401 ;; Defined at:
 16402 ;;		line 45 in file "mcc_generated_files/timer/src/tmr2.c"
 16403 ;; Parameters:    Size  Location     Type
 16404 ;;		None
 16405 ;; Auto vars:     Size  Location     Type
 16406 ;;		None
 16407 ;; Return value:  Size  Location     Type
 16408 ;;                  1    wreg      void 
 16409 ;; Registers used:
 16410 ;;		wreg, status,2
 16411 ;; Tracked objects:
 16412 ;;		On entry : 0/0
 16413 ;;		On exit  : 0/0
 16414 ;;		Unchanged: 0/0
 16415 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 16416 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16417 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16418 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16419 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16420 ;;Total ram usage:        0 bytes
 16421 ;; Hardware stack levels used: 1
 16422 ;; Hardware stack levels required when called: 5
 16423 ;; This function calls:
 16424 ;;		Nothing
 16425 ;; This function is called by:
 16426 ;;		_SYSTEM_Initialize
 16427 ;; This function uses a non-reentrant model
 16428 ;;
 16429                           
 16430     1E6A                     _TMR2_Initialize:	
 16431                           ;psect for function _TMR2_Initialize
 16432                           
 16433     1E6A                     l7403:	
 16434                           ;incstack = 0
 16435                           ; Regs used in _TMR2_Initialize: [wreg+status,2]
 16436                           
 16437                           
 16438                           ;mcc_generated_files/timer/src/tmr2.c: 48:     PR2 = 0xF9;
 16439     1E6A  30F9               	movlw	249
 16440     1E6B  0020               	movlb	0	; select bank0
 16441     1E6C  009E               	movwf	30	;volatile
 16442     1E6D                     l7405:
 16443                           
 16444                           ;mcc_generated_files/timer/src/tmr2.c: 49:     TMR2 = 0x0;
 16445     1E6D  019D               	clrf	29	;volatile
 16446     1E6E                     l7407:
 16447                           
 16448                           ;mcc_generated_files/timer/src/tmr2.c: 50:     TMR2_PeriodMatchCallback = TMR2_DefaultPe
      +                          riodMatchCallback;
 16449     1E6E  3025               	movlw	low _TMR2_DefaultPeriodMatchCallback
 16450     1E6F  0022               	movlb	2	; select bank2
 16451     1E70  00CC               	movwf	_TMR2_PeriodMatchCallback^(0+256)
 16452     1E71  301D               	movlw	high _TMR2_DefaultPeriodMatchCallback
 16453     1E72  00CD               	movwf	(_TMR2_PeriodMatchCallback^(0+256)+1)
 16454     1E73                     l7409:
 16455                           
 16456                           ;mcc_generated_files/timer/src/tmr2.c: 52:     PIR1bits.TMR2IF = 0;
 16457     1E73  0020               	movlb	0	; select bank0
 16458     1E74  1091               	bcf	17,1	;volatile
 16459     1E75                     l7411:
 16460                           
 16461                           ;mcc_generated_files/timer/src/tmr2.c: 53:     PIE1bits.TMR2IE = 1;
 16462     1E75  0021               	movlb	1	; select bank1
 16463     1E76  1491               	bsf	17,1	;volatile
 16464     1E77                     l7413:
 16465                           
 16466                           ;mcc_generated_files/timer/src/tmr2.c: 54:     T2CON = (2 << 0x0)
 16467     1E77  301E               	movlw	30
 16468     1E78  0020               	movlb	0	; select bank0
 16469     1E79  009F               	movwf	31	;volatile
 16470     1E7A                     l398:
 16471     1E7A  0008               	return
 16472     1E7B                     __end_of_TMR2_Initialize:
 16473                           
 16474                           	psect	text58
 16475     1DA2                     __ptext58:	
 16476 ;; *************** function _SPI1_Initialize *****************
 16477 ;; Defined at:
 16478 ;;		line 60 in file "mcc_generated_files/spi/src/mssp1.c"
 16479 ;; Parameters:    Size  Location     Type
 16480 ;;		None
 16481 ;; Auto vars:     Size  Location     Type
 16482 ;;		None
 16483 ;; Return value:  Size  Location     Type
 16484 ;;                  1    wreg      void 
 16485 ;; Registers used:
 16486 ;;		status,2
 16487 ;; Tracked objects:
 16488 ;;		On entry : 0/0
 16489 ;;		On exit  : 0/0
 16490 ;;		Unchanged: 0/0
 16491 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 16492 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16493 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16494 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16495 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16496 ;;Total ram usage:        0 bytes
 16497 ;; Hardware stack levels used: 1
 16498 ;; Hardware stack levels required when called: 5
 16499 ;; This function calls:
 16500 ;;		Nothing
 16501 ;; This function is called by:
 16502 ;;		_SYSTEM_Initialize
 16503 ;; This function uses a non-reentrant model
 16504 ;;
 16505                           
 16506     1DA2                     _SPI1_Initialize:	
 16507                           ;psect for function _SPI1_Initialize
 16508                           
 16509     1DA2                     l7337:	
 16510                           ;incstack = 0
 16511                           ; Regs used in _SPI1_Initialize: [status,2]
 16512                           
 16513                           
 16514                           ;mcc_generated_files/spi/src/mssp1.c: 63:     PIE1bits.SSP1IE = 0;
 16515     1DA2  0021               	movlb	1	; select bank1
 16516     1DA3  1191               	bcf	17,3	;volatile
 16517                           
 16518                           ;mcc_generated_files/spi/src/mssp1.c: 64:     PIR1bits.SSP1IF = 0;
 16519     1DA4  0020               	movlb	0	; select bank0
 16520     1DA5  1191               	bcf	17,3	;volatile
 16521     1DA6                     l7339:
 16522                           
 16523                           ;mcc_generated_files/spi/src/mssp1.c: 66:     SSP1STAT = 0x00;
 16524     1DA6  0024               	movlb	4	; select bank4
 16525     1DA7  0194               	clrf	20	;volatile
 16526                           
 16527                           ;mcc_generated_files/spi/src/mssp1.c: 67:     SSP1CON1 = 0x00;
 16528     1DA8  0195               	clrf	21	;volatile
 16529                           
 16530                           ;mcc_generated_files/spi/src/mssp1.c: 68:     SSP1CON3 = 0x00;
 16531     1DA9  0197               	clrf	23	;volatile
 16532                           
 16533                           ;mcc_generated_files/spi/src/mssp1.c: 69:     SSP1ADD = 0x00;
 16534     1DAA  0192               	clrf	18	;volatile
 16535     1DAB                     l133:
 16536     1DAB  0008               	return
 16537     1DAC                     __end_of_SPI1_Initialize:
 16538                           
 16539                           	psect	text59
 16540     1DC4                     __ptext59:	
 16541 ;; *************** function _PWM_buzzer_Initialize *****************
 16542 ;; Defined at:
 16543 ;;		line 45 in file "mcc_generated_files/pwm/src/pwm6.c"
 16544 ;; Parameters:    Size  Location     Type
 16545 ;;		None
 16546 ;; Auto vars:     Size  Location     Type
 16547 ;;		None
 16548 ;; Return value:  Size  Location     Type
 16549 ;;                  1    wreg      void 
 16550 ;; Registers used:
 16551 ;;		wreg, status,2, status,0
 16552 ;; Tracked objects:
 16553 ;;		On entry : 0/0
 16554 ;;		On exit  : 0/0
 16555 ;;		Unchanged: 0/0
 16556 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 16557 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16558 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16559 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16560 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16561 ;;Total ram usage:        0 bytes
 16562 ;; Hardware stack levels used: 1
 16563 ;; Hardware stack levels required when called: 5
 16564 ;; This function calls:
 16565 ;;		Nothing
 16566 ;; This function is called by:
 16567 ;;		_SYSTEM_Initialize
 16568 ;; This function uses a non-reentrant model
 16569 ;;
 16570                           
 16571     1DC4                     _PWM_buzzer_Initialize:	
 16572                           ;psect for function _PWM_buzzer_Initialize
 16573                           
 16574     1DC4                     l7333:	
 16575                           ;incstack = 0
 16576                           ; Regs used in _PWM_buzzer_Initialize: [wreg+status,2+status,0]
 16577                           
 16578                           
 16579                           ;mcc_generated_files/pwm/src/pwm6.c: 50:     PWM6CON = 0x80;
 16580     1DC4  3080               	movlw	128
 16581     1DC5  002C               	movlb	12	; select bank12
 16582     1DC6  009C               	movwf	28	;volatile
 16583                           
 16584                           ;mcc_generated_files/pwm/src/pwm6.c: 53:     PWM6DCH = 0x7C;
 16585     1DC7  307C               	movlw	124
 16586     1DC8  009B               	movwf	27	;volatile
 16587                           
 16588                           ;mcc_generated_files/pwm/src/pwm6.c: 56:     PWM6DCL = 0xC0;
 16589     1DC9  30C0               	movlw	192
 16590     1DCA  009A               	movwf	26	;volatile
 16591     1DCB                     l7335:
 16592                           
 16593                           ;mcc_generated_files/pwm/src/pwm6.c: 60:     PWMTMRSbits.P6TSEL = 0x1;
 16594     1DCB  081F               	movf	31,w	;volatile
 16595     1DCC  39F3               	andlw	-13
 16596     1DCD  3804               	iorlw	4
 16597     1DCE  009F               	movwf	31	;volatile
 16598     1DCF                     l83:
 16599     1DCF  0008               	return
 16600     1DD0                     __end_of_PWM_buzzer_Initialize:
 16601                           
 16602                           	psect	text60
 16603     11D0                     __ptext60:	
 16604 ;; *************** function _PIN_MANAGER_Initialize *****************
 16605 ;; Defined at:
 16606 ;;		line 38 in file "mcc_generated_files/system/src/pins.c"
 16607 ;; Parameters:    Size  Location     Type
 16608 ;;		None
 16609 ;; Auto vars:     Size  Location     Type
 16610 ;;		None
 16611 ;; Return value:  Size  Location     Type
 16612 ;;                  1    wreg      void 
 16613 ;; Registers used:
 16614 ;;		status,2
 16615 ;; Tracked objects:
 16616 ;;		On entry : 0/0
 16617 ;;		On exit  : 0/0
 16618 ;;		Unchanged: 0/0
 16619 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 16620 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16621 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16622 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16623 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16624 ;;Total ram usage:        0 bytes
 16625 ;; Hardware stack levels used: 1
 16626 ;; Hardware stack levels required when called: 5
 16627 ;; This function calls:
 16628 ;;		Nothing
 16629 ;; This function is called by:
 16630 ;;		_SYSTEM_Initialize
 16631 ;; This function uses a non-reentrant model
 16632 ;;
 16633                           
 16634     11D0                     _PIN_MANAGER_Initialize:	
 16635                           ;psect for function _PIN_MANAGER_Initialize
 16636                           
 16637     11D0                     l7363:	
 16638                           ;incstack = 0
 16639                           ; Regs used in _PIN_MANAGER_Initialize: [status,2]
 16640                           
 16641                           
 16642                           ;mcc_generated_files/system/src/pins.c: 43:     LATA = 0x0;
 16643     11D0  0022               	movlb	2	; select bank2
 16644     11D1  018C               	clrf	12	;volatile
 16645                           
 16646                           ;mcc_generated_files/system/src/pins.c: 44:     LATB = 0x0;
 16647     11D2  018D               	clrf	13	;volatile
 16648                           
 16649                           ;mcc_generated_files/system/src/pins.c: 45:     LATC = 0x0;
 16650     11D3  018E               	clrf	14	;volatile
 16651     11D4                     l7365:
 16652                           
 16653                           ;mcc_generated_files/system/src/pins.c: 50:     TRISA = 0x19;
 16654     11D4  3019               	movlw	25
 16655     11D5  0021               	movlb	1	; select bank1
 16656     11D6  008C               	movwf	12	;volatile
 16657     11D7                     l7367:
 16658                           
 16659                           ;mcc_generated_files/system/src/pins.c: 51:     TRISB = 0x20;
 16660     11D7  3020               	movlw	32
 16661     11D8  008D               	movwf	13	;volatile
 16662     11D9                     l7369:
 16663                           
 16664                           ;mcc_generated_files/system/src/pins.c: 52:     TRISC = 0x1F;
 16665     11D9  301F               	movlw	31
 16666     11DA  008E               	movwf	14	;volatile
 16667     11DB                     l7371:
 16668                           
 16669                           ;mcc_generated_files/system/src/pins.c: 57:     ANSELA = 0x10;
 16670     11DB  3010               	movlw	16
 16671     11DC  0023               	movlb	3	; select bank3
 16672     11DD  008C               	movwf	12	;volatile
 16673     11DE                     l7373:
 16674                           
 16675                           ;mcc_generated_files/system/src/pins.c: 58:     ANSELB = 0x80;
 16676     11DE  3080               	movlw	128
 16677     11DF  008D               	movwf	13	;volatile
 16678     11E0                     l7375:
 16679                           
 16680                           ;mcc_generated_files/system/src/pins.c: 59:     ANSELC = 0xBF;
 16681     11E0  30BF               	movlw	191
 16682     11E1  008E               	movwf	14	;volatile
 16683                           
 16684                           ;mcc_generated_files/system/src/pins.c: 64:     WPUA = 0x0;
 16685     11E2  0024               	movlb	4	; select bank4
 16686     11E3  018C               	clrf	12	;volatile
 16687                           
 16688                           ;mcc_generated_files/system/src/pins.c: 65:     WPUB = 0x0;
 16689     11E4  018D               	clrf	13	;volatile
 16690                           
 16691                           ;mcc_generated_files/system/src/pins.c: 66:     WPUC = 0x0;
 16692     11E5  018E               	clrf	14	;volatile
 16693                           
 16694                           ;mcc_generated_files/system/src/pins.c: 72:     ODCONA = 0x0;
 16695     11E6  0025               	movlb	5	; select bank5
 16696     11E7  018C               	clrf	12	;volatile
 16697                           
 16698                           ;mcc_generated_files/system/src/pins.c: 73:     ODCONB = 0x0;
 16699     11E8  018D               	clrf	13	;volatile
 16700                           
 16701                           ;mcc_generated_files/system/src/pins.c: 74:     ODCONC = 0x0;
 16702     11E9  018E               	clrf	14	;volatile
 16703     11EA                     l7377:
 16704                           
 16705                           ;mcc_generated_files/system/src/pins.c: 78:     SLRCONA = 0x37;
 16706     11EA  3037               	movlw	55
 16707     11EB  0026               	movlb	6	; select bank6
 16708     11EC  008C               	movwf	12	;volatile
 16709     11ED                     l7379:
 16710                           
 16711                           ;mcc_generated_files/system/src/pins.c: 79:     SLRCONB = 0xF0;
 16712     11ED  30F0               	movlw	240
 16713     11EE  008D               	movwf	13	;volatile
 16714     11EF                     l7381:
 16715                           
 16716                           ;mcc_generated_files/system/src/pins.c: 80:     SLRCONC = 0xFF;
 16717     11EF  30FF               	movlw	255
 16718     11F0  008E               	movwf	14	;volatile
 16719     11F1                     l7383:
 16720                           
 16721                           ;mcc_generated_files/system/src/pins.c: 84:     INLVLA = 0x3F;
 16722     11F1  303F               	movlw	63
 16723     11F2  0027               	movlb	7	; select bank7
 16724     11F3  008C               	movwf	12	;volatile
 16725     11F4                     l7385:
 16726                           
 16727                           ;mcc_generated_files/system/src/pins.c: 85:     INLVLB = 0xF0;
 16728     11F4  30F0               	movlw	240
 16729     11F5  008D               	movwf	13	;volatile
 16730     11F6                     l7387:
 16731                           
 16732                           ;mcc_generated_files/system/src/pins.c: 86:     INLVLC = 0xFF;
 16733     11F6  30FF               	movlw	255
 16734     11F7  008E               	movwf	14	;volatile
 16735                           
 16736                           ;mcc_generated_files/system/src/pins.c: 91:     SSP1DATPPS = 0x0;
 16737     11F8  003C               	movlb	28	; select bank28
 16738     11F9  01A1               	clrf	33	;volatile
 16739     11FA                     l7389:
 16740                           
 16741                           ;mcc_generated_files/system/src/pins.c: 92:     RXPPS = 0xD;
 16742     11FA  300D               	movlw	13
 16743     11FB  00A4               	movwf	36	;volatile
 16744     11FC                     l7391:
 16745                           
 16746                           ;mcc_generated_files/system/src/pins.c: 93:     RB4PPS = 25;
 16747     11FC  3019               	movlw	25
 16748     11FD  003D               	movlb	29	; select bank29
 16749     11FE  009C               	movwf	28	;volatile
 16750     11FF                     l7393:
 16751                           
 16752                           ;mcc_generated_files/system/src/pins.c: 94:     RC5PPS = 2;
 16753     11FF  3002               	movlw	2
 16754     1200  00A5               	movwf	37	;volatile
 16755     1201                     l7395:
 16756                           
 16757                           ;mcc_generated_files/system/src/pins.c: 95:     RC7PPS = 3;
 16758     1201  3003               	movlw	3
 16759     1202  00A7               	movwf	39	;volatile
 16760     1203                     l7397:
 16761                           
 16762                           ;mcc_generated_files/system/src/pins.c: 96:     RB7PPS = 20;
 16763     1203  3014               	movlw	20
 16764     1204  009F               	movwf	31	;volatile
 16765     1205                     l7399:
 16766                           
 16767                           ;mcc_generated_files/system/src/pins.c: 97:     SSP1CLKPPS = 0xE;
 16768     1205  300E               	movlw	14
 16769     1206  003C               	movlb	28	; select bank28
 16770     1207  00A0               	movwf	32	;volatile
 16771     1208                     l7401:
 16772                           
 16773                           ;mcc_generated_files/system/src/pins.c: 98:     RB6PPS = 24;
 16774     1208  3018               	movlw	24
 16775     1209  003D               	movlb	29	; select bank29
 16776     120A  009E               	movwf	30	;volatile
 16777                           
 16778                           ;mcc_generated_files/system/src/pins.c: 107:     IOCAP = 0x0;
 16779     120B  0027               	movlb	7	; select bank7
 16780     120C  0191               	clrf	17	;volatile
 16781                           
 16782                           ;mcc_generated_files/system/src/pins.c: 108:     IOCAN = 0x0;
 16783     120D  0192               	clrf	18	;volatile
 16784                           
 16785                           ;mcc_generated_files/system/src/pins.c: 109:     IOCAF = 0x0;
 16786     120E  0193               	clrf	19	;volatile
 16787                           
 16788                           ;mcc_generated_files/system/src/pins.c: 110:     IOCBP = 0x0;
 16789     120F  0194               	clrf	20	;volatile
 16790                           
 16791                           ;mcc_generated_files/system/src/pins.c: 111:     IOCBN = 0x0;
 16792     1210  0195               	clrf	21	;volatile
 16793                           
 16794                           ;mcc_generated_files/system/src/pins.c: 112:     IOCBF = 0x0;
 16795     1211  0196               	clrf	22	;volatile
 16796                           
 16797                           ;mcc_generated_files/system/src/pins.c: 113:     IOCCP = 0x0;
 16798     1212  0197               	clrf	23	;volatile
 16799                           
 16800                           ;mcc_generated_files/system/src/pins.c: 114:     IOCCN = 0x0;
 16801     1213  0198               	clrf	24	;volatile
 16802                           
 16803                           ;mcc_generated_files/system/src/pins.c: 115:     IOCCF = 0x0;
 16804     1214  0199               	clrf	25	;volatile
 16805     1215                     l351:
 16806     1215  0008               	return
 16807     1216                     __end_of_PIN_MANAGER_Initialize:
 16808                           
 16809                           	psect	text61
 16810     1DB8                     __ptext61:	
 16811 ;; *************** function _INTERRUPT_Initialize *****************
 16812 ;; Defined at:
 16813 ;;		line 40 in file "mcc_generated_files/system/src/interrupt.c"
 16814 ;; Parameters:    Size  Location     Type
 16815 ;;		None
 16816 ;; Auto vars:     Size  Location     Type
 16817 ;;		None
 16818 ;; Return value:  Size  Location     Type
 16819 ;;                  1    wreg      void 
 16820 ;; Registers used:
 16821 ;;		wreg, status,2, status,0, pclath, cstack
 16822 ;; Tracked objects:
 16823 ;;		On entry : 0/0
 16824 ;;		On exit  : 0/0
 16825 ;;		Unchanged: 0/0
 16826 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 16827 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16828 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16829 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16830 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16831 ;;Total ram usage:        0 bytes
 16832 ;; Hardware stack levels used: 1
 16833 ;; Hardware stack levels required when called: 6
 16834 ;; This function calls:
 16835 ;;		_INT_SetInterruptHandler
 16836 ;; This function is called by:
 16837 ;;		_SYSTEM_Initialize
 16838 ;; This function uses a non-reentrant model
 16839 ;;
 16840                           
 16841     1DB8                     _INTERRUPT_Initialize:	
 16842                           ;psect for function _INTERRUPT_Initialize
 16843                           
 16844     1DB8                     l7355:	
 16845                           ;incstack = 0
 16846                           ; Regs used in _INTERRUPT_Initialize: [wreg+status,2+status,0+pclath+cstack]
 16847                           
 16848                           
 16849                           ;mcc_generated_files/system/src/interrupt.c: 44:     (PIR0bits.INTF = 0);
 16850     1DB8  0020               	movlb	0	; select bank0
 16851     1DB9  1010               	bcf	16,0	;volatile
 16852                           
 16853                           ;mcc_generated_files/system/src/interrupt.c: 45:     (INTCONbits.INTEDG = 1);
 16854     1DBA  140B               	bsf	11,0	;volatile
 16855     1DBB                     l7357:
 16856                           
 16857                           ;mcc_generated_files/system/src/interrupt.c: 47:     INT_SetInterruptHandler(INT_Default
      +                          InterruptHandler);
 16858     1DBB  3000               	movlw	0
 16859     1DBC  0021               	movlb	1	; select bank1
 16860     1DBD  00A0               	movwf	INT_SetInterruptHandler@InterruptHandler^(0+128)
 16861     1DBE  3000               	movlw	0
 16862     1DBF  00A1               	movwf	(INT_SetInterruptHandler@InterruptHandler^(0+128)+1)
 16863     1DC0  319D  2563  319D   	fcall	_INT_SetInterruptHandler
 16864     1DC3                     l227:
 16865     1DC3  0008               	return
 16866     1DC4                     __end_of_INTERRUPT_Initialize:
 16867                           
 16868                           	psect	text62
 16869     1D63                     __ptext62:	
 16870 ;; *************** function _INT_SetInterruptHandler *****************
 16871 ;; Defined at:
 16872 ;;		line 113 in file "mcc_generated_files/system/src/interrupt.c"
 16873 ;; Parameters:    Size  Location     Type
 16874 ;;  InterruptHan    2    0[BANK1 ] PTR FTN()void 
 16875 ;;		 -> INT_DefaultInterruptHandler(1), 
 16876 ;; Auto vars:     Size  Location     Type
 16877 ;;		None
 16878 ;; Return value:  Size  Location     Type
 16879 ;;                  1    wreg      void 
 16880 ;; Registers used:
 16881 ;;		wreg
 16882 ;; Tracked objects:
 16883 ;;		On entry : 0/0
 16884 ;;		On exit  : 0/0
 16885 ;;		Unchanged: 0/0
 16886 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 16887 ;;      Params:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0
 16888 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16889 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16890 ;;      Totals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0
 16891 ;;Total ram usage:        2 bytes
 16892 ;; Hardware stack levels used: 1
 16893 ;; Hardware stack levels required when called: 5
 16894 ;; This function calls:
 16895 ;;		Nothing
 16896 ;; This function is called by:
 16897 ;;		_INTERRUPT_Initialize
 16898 ;; This function uses a non-reentrant model
 16899 ;;
 16900                           
 16901     1D63                     _INT_SetInterruptHandler:	
 16902                           ;psect for function _INT_SetInterruptHandler
 16903                           
 16904     1D63                     l6737:	
 16905                           ;incstack = 0
 16906                           ; Regs used in _INT_SetInterruptHandler: [wreg]
 16907                           
 16908                           
 16909                           ;mcc_generated_files/system/src/interrupt.c: 114:     INT_InterruptHandler = InterruptHa
      +                          ndler;
 16910     1D63  0021               	movlb	1	; select bank1
 16911     1D64  0821               	movf	(INT_SetInterruptHandler@InterruptHandler+1)^(0+128),w
 16912     1D65  0020               	movlb	0	; select bank0
 16913     1D66  00E2               	movwf	_INT_InterruptHandler+1
 16914     1D67  0021               	movlb	1	; select bank1
 16915     1D68  0820               	movf	INT_SetInterruptHandler@InterruptHandler^(0+128),w
 16916     1D69  0020               	movlb	0	; select bank0
 16917     1D6A  00E1               	movwf	_INT_InterruptHandler
 16918     1D6B                     l254:
 16919     1D6B  0008               	return
 16920     1D6C                     __end_of_INT_SetInterruptHandler:
 16921                           
 16922                           	psect	text63
 16923     1122                     __ptext63:	
 16924 ;; *************** function _EUSART_Initialize *****************
 16925 ;; Defined at:
 16926 ;;		line 131 in file "mcc_generated_files/uart/src/eusart.c"
 16927 ;; Parameters:    Size  Location     Type
 16928 ;;		None
 16929 ;; Auto vars:     Size  Location     Type
 16930 ;;		None
 16931 ;; Return value:  Size  Location     Type
 16932 ;;                  1    wreg      void 
 16933 ;; Registers used:
 16934 ;;		wreg, status,2, status,0, pclath, cstack
 16935 ;; Tracked objects:
 16936 ;;		On entry : 0/0
 16937 ;;		On exit  : 0/0
 16938 ;;		Unchanged: 0/0
 16939 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 16940 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16941 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16942 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16943 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16944 ;;Total ram usage:        0 bytes
 16945 ;; Hardware stack levels used: 1
 16946 ;; Hardware stack levels required when called: 6
 16947 ;; This function calls:
 16948 ;;		_EUSART_FramingErrorCallbackRegister
 16949 ;;		_EUSART_OverrunErrorCallbackRegister
 16950 ;; This function is called by:
 16951 ;;		_SYSTEM_Initialize
 16952 ;; This function uses a non-reentrant model
 16953 ;;
 16954                           
 16955     1122                     _EUSART_Initialize:	
 16956                           ;psect for function _EUSART_Initialize
 16957                           
 16958     1122                     l7437:	
 16959                           ;incstack = 0
 16960                           ; Regs used in _EUSART_Initialize: [wreg+status,2+status,0+pclath+cstack]
 16961                           
 16962                           
 16963                           ;mcc_generated_files/uart/src/eusart.c: 133:     PIE1bits.RCIE = 0;
 16964     1122  0021               	movlb	1	; select bank1
 16965     1123  1291               	bcf	17,5	;volatile
 16966     1124                     l7439:
 16967                           
 16968                           ;mcc_generated_files/uart/src/eusart.c: 134:      EUSART_RxInterruptHandler = EUSART_Rec
      +                          eiveISR;
 16969     1124  305E               	movlw	low _EUSART_ReceiveISR
 16970     1125  0022               	movlb	2	; select bank2
 16971     1126  00CE               	movwf	_EUSART_RxInterruptHandler^(0+256)
 16972     1127  3012               	movlw	high _EUSART_ReceiveISR
 16973     1128  00CF               	movwf	(_EUSART_RxInterruptHandler^(0+256)+1)
 16974     1129                     l7441:
 16975                           
 16976                           ;mcc_generated_files/uart/src/eusart.c: 136:     PIE1bits.TXIE = 0;
 16977     1129  0021               	movlb	1	; select bank1
 16978     112A  1211               	bcf	17,4	;volatile
 16979                           
 16980                           ;mcc_generated_files/uart/src/eusart.c: 137:     EUSART_TxInterruptHandler = EUSART_Tran
      +                          smitISR;
 16981     112B  3085               	movlw	low _EUSART_TransmitISR
 16982     112C  0022               	movlb	2	; select bank2
 16983     112D  00D0               	movwf	_EUSART_TxInterruptHandler^(0+256)
 16984     112E  301F               	movlw	high _EUSART_TransmitISR
 16985     112F  00D1               	movwf	(_EUSART_TxInterruptHandler^(0+256)+1)
 16986     1130                     l7443:
 16987                           
 16988                           ;mcc_generated_files/uart/src/eusart.c: 142:     BAUD1CON = 0x48;
 16989     1130  3048               	movlw	72
 16990     1131  0023               	movlb	3	; select bank3
 16991     1132  009F               	movwf	31	;volatile
 16992     1133                     l7445:
 16993                           
 16994                           ;mcc_generated_files/uart/src/eusart.c: 144:     RC1STA = 0x90;
 16995     1133  3090               	movlw	144
 16996     1134  009D               	movwf	29	;volatile
 16997     1135                     l7447:
 16998                           
 16999                           ;mcc_generated_files/uart/src/eusart.c: 146:     TX1STA = 0x26;
 17000     1135  3026               	movlw	38
 17001     1136  009E               	movwf	30	;volatile
 17002     1137                     l7449:
 17003                           
 17004                           ;mcc_generated_files/uart/src/eusart.c: 148:     SP1BRGL = 0x40;
 17005     1137  3040               	movlw	64
 17006     1138  009B               	movwf	27	;volatile
 17007     1139                     l7451:
 17008                           
 17009                           ;mcc_generated_files/uart/src/eusart.c: 150:     SP1BRGH = 0x3;
 17010     1139  3003               	movlw	3
 17011     113A  009C               	movwf	28	;volatile
 17012     113B                     l7453:
 17013                           
 17014                           ;mcc_generated_files/uart/src/eusart.c: 152:     EUSART_FramingErrorCallbackRegister(EUS
      +                          ART_DefaultFramingErrorCallback);
 17015     113B  3024               	movlw	low _EUSART_DefaultFramingErrorCallback
 17016     113C  0021               	movlb	1	; select bank1
 17017     113D  00A0               	movwf	EUSART_FramingErrorCallbackRegister@callbackHandler^(0+128)
 17018     113E  301D               	movlw	high _EUSART_DefaultFramingErrorCallback
 17019     113F  00A1               	movwf	(EUSART_FramingErrorCallbackRegister@callbackHandler^(0+128)+1)
 17020     1140  319E  263D  3191   	fcall	_EUSART_FramingErrorCallbackRegister
 17021     1143                     l7455:
 17022                           
 17023                           ;mcc_generated_files/uart/src/eusart.c: 153:     EUSART_OverrunErrorCallbackRegister(EUS
      +                          ART_DefaultOverrunErrorCallback);
 17024     1143  3029               	movlw	low _EUSART_DefaultOverrunErrorCallback
 17025     1144  0021               	movlb	1	; select bank1
 17026     1145  00A0               	movwf	EUSART_OverrunErrorCallbackRegister@callbackHandler^(0+128)
 17027     1146  301D               	movlw	high _EUSART_DefaultOverrunErrorCallback
 17028     1147  00A1               	movwf	(EUSART_OverrunErrorCallbackRegister@callbackHandler^(0+128)+1)
 17029     1148  319E  264C  3191   	fcall	_EUSART_OverrunErrorCallbackRegister
 17030     114B                     l7457:
 17031                           
 17032                           ;mcc_generated_files/uart/src/eusart.c: 154:     eusartRxLastError.status = 0;
 17033     114B  0022               	movlb	2	; select bank2
 17034     114C  01B8               	clrf	_eusartRxLastError^(0+256)	;volatile
 17035     114D  01B9               	clrf	(_eusartRxLastError+1)^(0+256)	;volatile
 17036     114E                     l7459:
 17037                           
 17038                           ;mcc_generated_files/uart/src/eusart.c: 156:     eusartTxHead = 0;
 17039     114E  0020               	movlb	0	; select bank0
 17040     114F  01EC               	clrf	_eusartTxHead	;volatile
 17041     1150                     l7461:
 17042                           
 17043                           ;mcc_generated_files/uart/src/eusart.c: 157:     eusartTxTail = 0;
 17044     1150  01EB               	clrf	_eusartTxTail	;volatile
 17045     1151                     l7463:
 17046                           
 17047                           ;mcc_generated_files/uart/src/eusart.c: 158:     eusartTxBufferRemaining = sizeof(eusart
      +                          TxBuffer);
 17048     1151  3008               	movlw	8
 17049     1152  00EA               	movwf	_eusartTxBufferRemaining	;volatile
 17050     1153                     l7465:
 17051                           
 17052                           ;mcc_generated_files/uart/src/eusart.c: 160:     eusartRxHead = 0;
 17053     1153  01E9               	clrf	_eusartRxHead	;volatile
 17054     1154                     l7467:
 17055                           
 17056                           ;mcc_generated_files/uart/src/eusart.c: 161:     eusartRxTail = 0;
 17057     1154  01E8               	clrf	_eusartRxTail	;volatile
 17058     1155                     l7469:
 17059                           
 17060                           ;mcc_generated_files/uart/src/eusart.c: 162:     eusartRxCount = 0;
 17061     1155  01E7               	clrf	_eusartRxCount	;volatile
 17062     1156                     l7471:
 17063                           
 17064                           ;mcc_generated_files/uart/src/eusart.c: 164:     PIE1bits.RCIE = 1;
 17065     1156  0021               	movlb	1	; select bank1
 17066     1157  1691               	bsf	17,5	;volatile
 17067     1158                     l656:
 17068     1158  0008               	return
 17069     1159                     __end_of_EUSART_Initialize:
 17070                           
 17071                           	psect	text64
 17072     1E4C                     __ptext64:	
 17073 ;; *************** function _EUSART_OverrunErrorCallbackRegister *****************
 17074 ;; Defined at:
 17075 ;;		line 438 in file "mcc_generated_files/uart/src/eusart.c"
 17076 ;; Parameters:    Size  Location     Type
 17077 ;;  callbackHand    2    0[BANK1 ] PTR FTN()void 
 17078 ;;		 -> EUSART_DefaultOverrunErrorCallback(1), 
 17079 ;; Auto vars:     Size  Location     Type
 17080 ;;		None
 17081 ;; Return value:  Size  Location     Type
 17082 ;;                  1    wreg      void 
 17083 ;; Registers used:
 17084 ;;		wreg, status,2, status,0
 17085 ;; Tracked objects:
 17086 ;;		On entry : 0/0
 17087 ;;		On exit  : 0/0
 17088 ;;		Unchanged: 0/0
 17089 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 17090 ;;      Params:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0
 17091 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17092 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17093 ;;      Totals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0
 17094 ;;Total ram usage:        2 bytes
 17095 ;; Hardware stack levels used: 1
 17096 ;; Hardware stack levels required when called: 5
 17097 ;; This function calls:
 17098 ;;		Nothing
 17099 ;; This function is called by:
 17100 ;;		_EUSART_Initialize
 17101 ;; This function uses a non-reentrant model
 17102 ;;
 17103                           
 17104     1E4C                     _EUSART_OverrunErrorCallbackRegister:	
 17105                           ;psect for function _EUSART_OverrunErrorCallbackRegister
 17106                           
 17107     1E4C                     l6743:	
 17108                           ;incstack = 0
 17109                           ; Regs used in _EUSART_OverrunErrorCallbackRegister: [wreg+status,2+status,0]
 17110                           
 17111                           
 17112                           ;mcc_generated_files/uart/src/eusart.c: 438: void EUSART_OverrunErrorCallbackRegister(vo
      +                          id (* callbackHandler)(void));mcc_generated_files/uart/src/eusart.c: 439: {;mcc_generate
      +                          d_files/uart/src/eusart.c: 440:     if(((void*)0) != callbackHandler)
 17113     1E4C  0021               	movlb	1	; select bank1
 17114     1E4D  0820               	movf	EUSART_OverrunErrorCallbackRegister@callbackHandler^(0+128),w
 17115     1E4E  0421               	iorwf	(EUSART_OverrunErrorCallbackRegister@callbackHandler+1)^(0+128),w
 17116     1E4F  1903               	btfsc	3,2
 17117     1E50  2E52               	goto	u8311
 17118     1E51  2E53               	goto	u8310
 17119     1E52                     u8311:
 17120     1E52  2E5A               	goto	l774
 17121     1E53                     u8310:
 17122     1E53                     l6745:
 17123                           
 17124                           ;mcc_generated_files/uart/src/eusart.c: 441:     {;mcc_generated_files/uart/src/eusart.c
      +                          : 442:         EUSART_OverrunErrorHandler = callbackHandler;
 17125     1E53  0821               	movf	(EUSART_OverrunErrorCallbackRegister@callbackHandler+1)^(0+128),w
 17126     1E54  0020               	movlb	0	; select bank0
 17127     1E55  00DE               	movwf	_EUSART_OverrunErrorHandler+1
 17128     1E56  0021               	movlb	1	; select bank1
 17129     1E57  0820               	movf	EUSART_OverrunErrorCallbackRegister@callbackHandler^(0+128),w
 17130     1E58  0020               	movlb	0	; select bank0
 17131     1E59  00DD               	movwf	_EUSART_OverrunErrorHandler
 17132     1E5A                     l774:
 17133     1E5A  0008               	return
 17134     1E5B                     __end_of_EUSART_OverrunErrorCallbackRegister:
 17135                           
 17136                           	psect	text65
 17137     1E3D                     __ptext65:	
 17138 ;; *************** function _EUSART_FramingErrorCallbackRegister *****************
 17139 ;; Defined at:
 17140 ;;		line 430 in file "mcc_generated_files/uart/src/eusart.c"
 17141 ;; Parameters:    Size  Location     Type
 17142 ;;  callbackHand    2    0[BANK1 ] PTR FTN()void 
 17143 ;;		 -> EUSART_DefaultFramingErrorCallback(1), 
 17144 ;; Auto vars:     Size  Location     Type
 17145 ;;		None
 17146 ;; Return value:  Size  Location     Type
 17147 ;;                  1    wreg      void 
 17148 ;; Registers used:
 17149 ;;		wreg, status,2, status,0
 17150 ;; Tracked objects:
 17151 ;;		On entry : 0/0
 17152 ;;		On exit  : 0/0
 17153 ;;		Unchanged: 0/0
 17154 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 17155 ;;      Params:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0
 17156 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17157 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17158 ;;      Totals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0
 17159 ;;Total ram usage:        2 bytes
 17160 ;; Hardware stack levels used: 1
 17161 ;; Hardware stack levels required when called: 5
 17162 ;; This function calls:
 17163 ;;		Nothing
 17164 ;; This function is called by:
 17165 ;;		_EUSART_Initialize
 17166 ;; This function uses a non-reentrant model
 17167 ;;
 17168                           
 17169     1E3D                     _EUSART_FramingErrorCallbackRegister:	
 17170                           ;psect for function _EUSART_FramingErrorCallbackRegister
 17171                           
 17172     1E3D                     l6739:	
 17173                           ;incstack = 0
 17174                           ; Regs used in _EUSART_FramingErrorCallbackRegister: [wreg+status,2+status,0]
 17175                           
 17176                           
 17177                           ;mcc_generated_files/uart/src/eusart.c: 430: void EUSART_FramingErrorCallbackRegister(vo
      +                          id (* callbackHandler)(void));mcc_generated_files/uart/src/eusart.c: 431: {;mcc_generate
      +                          d_files/uart/src/eusart.c: 432:     if(((void*)0) != callbackHandler)
 17178     1E3D  0021               	movlb	1	; select bank1
 17179     1E3E  0820               	movf	EUSART_FramingErrorCallbackRegister@callbackHandler^(0+128),w
 17180     1E3F  0421               	iorwf	(EUSART_FramingErrorCallbackRegister@callbackHandler+1)^(0+128),w
 17181     1E40  1903               	btfsc	3,2
 17182     1E41  2E43               	goto	u8301
 17183     1E42  2E44               	goto	u8300
 17184     1E43                     u8301:
 17185     1E43  2E4B               	goto	l770
 17186     1E44                     u8300:
 17187     1E44                     l6741:
 17188                           
 17189                           ;mcc_generated_files/uart/src/eusart.c: 433:     {;mcc_generated_files/uart/src/eusart.c
      +                          : 434:         EUSART_FramingErrorHandler = callbackHandler;
 17190     1E44  0821               	movf	(EUSART_FramingErrorCallbackRegister@callbackHandler+1)^(0+128),w
 17191     1E45  0020               	movlb	0	; select bank0
 17192     1E46  00E0               	movwf	_EUSART_FramingErrorHandler+1
 17193     1E47  0021               	movlb	1	; select bank1
 17194     1E48  0820               	movf	EUSART_FramingErrorCallbackRegister@callbackHandler^(0+128),w
 17195     1E49  0020               	movlb	0	; select bank0
 17196     1E4A  00DF               	movwf	_EUSART_FramingErrorHandler
 17197     1E4B                     l770:
 17198     1E4B  0008               	return
 17199     1E4C                     __end_of_EUSART_FramingErrorCallbackRegister:
 17200                           
 17201                           	psect	text66
 17202     1D5A                     __ptext66:	
 17203 ;; *************** function _CLOCK_Initialize *****************
 17204 ;; Defined at:
 17205 ;;		line 39 in file "mcc_generated_files/system/src/clock.c"
 17206 ;; Parameters:    Size  Location     Type
 17207 ;;		None
 17208 ;; Auto vars:     Size  Location     Type
 17209 ;;		None
 17210 ;; Return value:  Size  Location     Type
 17211 ;;                  1    wreg      void 
 17212 ;; Registers used:
 17213 ;;		status,2
 17214 ;; Tracked objects:
 17215 ;;		On entry : 0/0
 17216 ;;		On exit  : 0/0
 17217 ;;		Unchanged: 0/0
 17218 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 17219 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17220 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17221 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17222 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17223 ;;Total ram usage:        0 bytes
 17224 ;; Hardware stack levels used: 1
 17225 ;; Hardware stack levels required when called: 5
 17226 ;; This function calls:
 17227 ;;		Nothing
 17228 ;; This function is called by:
 17229 ;;		_SYSTEM_Initialize
 17230 ;; This function uses a non-reentrant model
 17231 ;;
 17232                           
 17233     1D5A                     _CLOCK_Initialize:	
 17234                           ;psect for function _CLOCK_Initialize
 17235                           
 17236     1D5A                     l7359:	
 17237                           ;incstack = 0
 17238                           ; Regs used in _CLOCK_Initialize: [status,2]
 17239                           
 17240                           
 17241                           ;mcc_generated_files/system/src/clock.c: 42:     OSCCON1 = (0 << 0x0)
 17242     1D5A  0032               	movlb	18	; select bank18
 17243     1D5B  0199               	clrf	25	;volatile
 17244                           
 17245                           ;mcc_generated_files/system/src/clock.c: 44:     OSCCON3 = (0 << 0x6)
 17246     1D5C  019B               	clrf	27	;volatile
 17247                           
 17248                           ;mcc_generated_files/system/src/clock.c: 46:     OSCEN = (0 << 0x7)
 17249     1D5D  019D               	clrf	29	;volatile
 17250     1D5E                     l7361:
 17251                           
 17252                           ;mcc_generated_files/system/src/clock.c: 51:     OSCFRQ = (6 << 0x0);
 17253     1D5E  3006               	movlw	6
 17254     1D5F  009F               	movwf	31	;volatile
 17255                           
 17256                           ;mcc_generated_files/system/src/clock.c: 52:     OSCSTAT1 =
 17257     1D60  019E               	clrf	30	;volatile
 17258     1D61  019C               	clrf	28	;volatile
 17259     1D62                     l272:
 17260     1D62  0008               	return
 17261     1D63                     __end_of_CLOCK_Initialize:
 17262                           
 17263                           	psect	text67
 17264     1F0D                     __ptext67:	
 17265 ;; *************** function _ADC_Initialize *****************
 17266 ;; Defined at:
 17267 ;;		line 55 in file "mcc_generated_files/adc/src/adc.c"
 17268 ;; Parameters:    Size  Location     Type
 17269 ;;		None
 17270 ;; Auto vars:     Size  Location     Type
 17271 ;;		None
 17272 ;; Return value:  Size  Location     Type
 17273 ;;                  1    wreg      void 
 17274 ;; Registers used:
 17275 ;;		wreg, status,2, status,0, pclath, cstack
 17276 ;; Tracked objects:
 17277 ;;		On entry : 0/0
 17278 ;;		On exit  : 0/0
 17279 ;;		Unchanged: 0/0
 17280 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 17281 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17282 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17283 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17284 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17285 ;;Total ram usage:        0 bytes
 17286 ;; Hardware stack levels used: 1
 17287 ;; Hardware stack levels required when called: 6
 17288 ;; This function calls:
 17289 ;;		_ADC_SetInterruptHandler
 17290 ;; This function is called by:
 17291 ;;		_SYSTEM_Initialize
 17292 ;; This function uses a non-reentrant model
 17293 ;;
 17294                           
 17295     1F0D                     _ADC_Initialize:	
 17296                           ;psect for function _ADC_Initialize
 17297                           
 17298     1F0D                     l7313:	
 17299                           ;incstack = 0
 17300                           ; Regs used in _ADC_Initialize: [wreg+status,2+status,0+pclath+cstack]
 17301                           
 17302                           
 17303                           ;mcc_generated_files/adc/src/adc.c: 58:     ADCON1 = 0xA0;
 17304     1F0D  30A0               	movlw	160
 17305     1F0E  0021               	movlb	1	; select bank1
 17306     1F0F  009E               	movwf	30	;volatile
 17307     1F10                     l7315:
 17308                           
 17309                           ;mcc_generated_files/adc/src/adc.c: 61:     ADRESL = 0x0;
 17310     1F10  019B               	clrf	27	;volatile
 17311                           
 17312                           ;mcc_generated_files/adc/src/adc.c: 64:     ADRESH = 0x0;
 17313     1F11  019C               	clrf	28	;volatile
 17314     1F12                     l7317:
 17315                           
 17316                           ;mcc_generated_files/adc/src/adc.c: 67:     ADACT = 0x5;
 17317     1F12  3005               	movlw	5
 17318     1F13  009F               	movwf	31	;volatile
 17319     1F14                     l7319:
 17320                           
 17321                           ;mcc_generated_files/adc/src/adc.c: 70:     ADCON0 = 0x1;
 17322     1F14  3001               	movlw	1
 17323     1F15  009D               	movwf	29	;volatile
 17324     1F16                     l7321:
 17325                           
 17326                           ;mcc_generated_files/adc/src/adc.c: 73:     PIR1bits.ADIF = 0;
 17327     1F16  0020               	movlb	0	; select bank0
 17328     1F17  1311               	bcf	17,6	;volatile
 17329     1F18                     l7323:
 17330                           
 17331                           ;mcc_generated_files/adc/src/adc.c: 76:     ADC_SetInterruptHandler(ADC_DefaultInterrupt
      +                          Handler);
 17332     1F18  3023               	movlw	low _ADC_DefaultInterruptHandler
 17333     1F19  0021               	movlb	1	; select bank1
 17334     1F1A  00A0               	movwf	ADC_SetInterruptHandler@InterruptHandler^(0+128)
 17335     1F1B  301D               	movlw	high _ADC_DefaultInterruptHandler
 17336     1F1C  00A1               	movwf	(ADC_SetInterruptHandler@InterruptHandler^(0+128)+1)
 17337     1F1D  319D  2551  319F   	fcall	_ADC_SetInterruptHandler
 17338     1F20                     l7325:
 17339                           
 17340                           ;mcc_generated_files/adc/src/adc.c: 79:     PIE1bits.ADIE = 1;
 17341     1F20  0021               	movlb	1	; select bank1
 17342     1F21  1711               	bsf	17,6	;volatile
 17343     1F22                     l27:
 17344     1F22  0008               	return
 17345     1F23                     __end_of_ADC_Initialize:
 17346                           
 17347                           	psect	text68
 17348     1D51                     __ptext68:	
 17349 ;; *************** function _ADC_SetInterruptHandler *****************
 17350 ;; Defined at:
 17351 ;;		line 145 in file "mcc_generated_files/adc/src/adc.c"
 17352 ;; Parameters:    Size  Location     Type
 17353 ;;  InterruptHan    2    0[BANK1 ] PTR FTN()void 
 17354 ;;		 -> adcConversionDoneHandler(1), ADC_DefaultInterruptHandler(1), 
 17355 ;; Auto vars:     Size  Location     Type
 17356 ;;		None
 17357 ;; Return value:  Size  Location     Type
 17358 ;;                  1    wreg      void 
 17359 ;; Registers used:
 17360 ;;		wreg
 17361 ;; Tracked objects:
 17362 ;;		On entry : 0/0
 17363 ;;		On exit  : 0/0
 17364 ;;		Unchanged: 0/0
 17365 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 17366 ;;      Params:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0
 17367 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17368 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17369 ;;      Totals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0
 17370 ;;Total ram usage:        2 bytes
 17371 ;; Hardware stack levels used: 1
 17372 ;; Hardware stack levels required when called: 5
 17373 ;; This function calls:
 17374 ;;		Nothing
 17375 ;; This function is called by:
 17376 ;;		_ADC_Initialize
 17377 ;;		_initAdcMultiplexer
 17378 ;; This function uses a non-reentrant model
 17379 ;;
 17380                           
 17381     1D51                     _ADC_SetInterruptHandler:	
 17382                           ;psect for function _ADC_SetInterruptHandler
 17383                           
 17384     1D51                     l6735:	
 17385                           ;incstack = 0
 17386                           ; Regs used in _ADC_SetInterruptHandler: [wreg]
 17387                           
 17388                           
 17389                           ;mcc_generated_files/adc/src/adc.c: 145: void ADC_SetInterruptHandler(void (* InterruptH
      +                          andler)(void));mcc_generated_files/adc/src/adc.c: 146: {;mcc_generated_files/adc/src/adc
      +                          .c: 147:     ADC_InterruptHandler = InterruptHandler;
 17390     1D51  0021               	movlb	1	; select bank1
 17391     1D52  0821               	movf	(ADC_SetInterruptHandler@InterruptHandler+1)^(0+128),w
 17392     1D53  0022               	movlb	2	; select bank2
 17393     1D54  00D3               	movwf	(_ADC_InterruptHandler+1)^(0+256)
 17394     1D55  0021               	movlb	1	; select bank1
 17395     1D56  0820               	movf	ADC_SetInterruptHandler@InterruptHandler^(0+128),w
 17396     1D57  0022               	movlb	2	; select bank2
 17397     1D58  00D2               	movwf	_ADC_InterruptHandler^(0+256)
 17398     1D59                     l55:
 17399     1D59  0008               	return
 17400     1D5A                     __end_of_ADC_SetInterruptHandler:
 17401                           
 17402                           	psect	text69
 17403     1F39                     __ptext69:	
 17404 ;; *************** function _PWM_buzzer_LoadDutyValue *****************
 17405 ;; Defined at:
 17406 ;;		line 63 in file "mcc_generated_files/pwm/src/pwm6.c"
 17407 ;; Parameters:    Size  Location     Type
 17408 ;;  dutyValue       2    0[BANK1 ] unsigned short 
 17409 ;; Auto vars:     Size  Location     Type
 17410 ;;		None
 17411 ;; Return value:  Size  Location     Type
 17412 ;;                  1    wreg      void 
 17413 ;; Registers used:
 17414 ;;		wreg, status,2, status,0
 17415 ;; Tracked objects:
 17416 ;;		On entry : 0/0
 17417 ;;		On exit  : 0/0
 17418 ;;		Unchanged: 0/0
 17419 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 17420 ;;      Params:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0
 17421 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17422 ;;      Temps:          0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0
 17423 ;;      Totals:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0
 17424 ;;Total ram usage:        4 bytes
 17425 ;; Hardware stack levels used: 1
 17426 ;; Hardware stack levels required when called: 5
 17427 ;; This function calls:
 17428 ;;		Nothing
 17429 ;; This function is called by:
 17430 ;;		_main
 17431 ;; This function uses a non-reentrant model
 17432 ;;
 17433                           
 17434     1F39                     _PWM_buzzer_LoadDutyValue:	
 17435                           ;psect for function _PWM_buzzer_LoadDutyValue
 17436                           
 17437     1F39                     l7595:	
 17438                           ;incstack = 0
 17439                           ; Regs used in _PWM_buzzer_LoadDutyValue: [wreg+status,2+status,0]
 17440                           
 17441                           
 17442                           ;mcc_generated_files/pwm/src/pwm6.c: 63:  void PWM_buzzer_LoadDutyValue(uint16_t dutyVal
      +                          ue);mcc_generated_files/pwm/src/pwm6.c: 64:  {;mcc_generated_files/pwm/src/pwm6.c: 66:  
      +                              PWM6DCH = (uint8_t) ((dutyValue & 0x03FCu) >> 2);
 17443     1F39  0021               	movlb	1	; select bank1
 17444     1F3A  0821               	movf	(PWM_buzzer_LoadDutyValue@dutyValue+1)^(0+128),w
 17445     1F3B  00A3               	movwf	(??_PWM_buzzer_LoadDutyValue^(0+128)+1)
 17446     1F3C  0820               	movf	PWM_buzzer_LoadDutyValue@dutyValue^(0+128),w
 17447     1F3D  00A2               	movwf	??_PWM_buzzer_LoadDutyValue^(0+128)
 17448     1F3E  36A3               	lsrf	(??_PWM_buzzer_LoadDutyValue^(0+128)+1),f
 17449     1F3F  0CA2               	rrf	??_PWM_buzzer_LoadDutyValue^(0+128),f
 17450     1F40  36A3               	lsrf	(??_PWM_buzzer_LoadDutyValue^(0+128)+1),f
 17451     1F41  0CA2               	rrf	??_PWM_buzzer_LoadDutyValue^(0+128),f
 17452     1F42  0822               	movf	??_PWM_buzzer_LoadDutyValue^(0+128),w
 17453     1F43  002C               	movlb	12	; select bank12
 17454     1F44  009B               	movwf	27	;volatile
 17455                           
 17456                           ;mcc_generated_files/pwm/src/pwm6.c: 69:      PWM6DCL = (uint8_t) ((dutyValue & 0x0003u)
      +                           << 6);
 17457     1F45  0021               	movlb	1	; select bank1
 17458     1F46  0820               	movf	PWM_buzzer_LoadDutyValue@dutyValue^(0+128),w
 17459     1F47  3903               	andlw	3
 17460     1F48  00A2               	movwf	??_PWM_buzzer_LoadDutyValue^(0+128)
 17461     1F49  3006               	movlw	6
 17462     1F4A                     u9715:
 17463     1F4A  35A2               	lslf	??_PWM_buzzer_LoadDutyValue^(0+128),f
 17464     1F4B  0B89               	decfsz	9,f
 17465     1F4C  2F4A               	goto	u9715
 17466     1F4D  0822               	movf	??_PWM_buzzer_LoadDutyValue^(0+128),w
 17467     1F4E  002C               	movlb	12	; select bank12
 17468     1F4F  009A               	movwf	26	;volatile
 17469     1F50                     l86:
 17470     1F50  0008               	return
 17471     1F51                     __end_of_PWM_buzzer_LoadDutyValue:
 17472                           
 17473                           	psect	intentry
 17474     0004                     __pintentry:	
 17475 ;; *************** function _INTERRUPT_InterruptManager *****************
 17476 ;; Defined at:
 17477 ;;		line 59 in file "mcc_generated_files/system/src/interrupt.c"
 17478 ;; Parameters:    Size  Location     Type
 17479 ;;		None
 17480 ;; Auto vars:     Size  Location     Type
 17481 ;;		None
 17482 ;; Return value:  Size  Location     Type
 17483 ;;                  1    wreg      void 
 17484 ;; Registers used:
 17485 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 17486 ;; Tracked objects:
 17487 ;;		On entry : 0/0
 17488 ;;		On exit  : 0/0
 17489 ;;		Unchanged: 0/0
 17490 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 17491 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17492 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17493 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17494 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17495 ;;Total ram usage:        0 bytes
 17496 ;; Hardware stack levels used: 1
 17497 ;; Hardware stack levels required when called: 4
 17498 ;; This function calls:
 17499 ;;		NULL
 17500 ;;		_ADC_ISR
 17501 ;;		_EUSART_ReceiveISR
 17502 ;;		_EUSART_TransmitISR
 17503 ;;		_TMR2_ISR
 17504 ;;		_TMR4_ISR
 17505 ;; This function is called by:
 17506 ;;		Interrupt level 1
 17507 ;; This function uses a non-reentrant model
 17508 ;;
 17509                           
 17510     0004                     _INTERRUPT_InterruptManager:
 17511                           
 17512                           ;incstack = 0
 17513     0004  147E               	bsf	int$flags,0	;set compiler interrupt flag (level 1)
 17514                           
 17515                           ; Regs used in _INTERRUPT_InterruptManager: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 17516     0005  3180               	pagesel	$
 17517     0006                     i1l6103:
 17518                           
 17519                           ;mcc_generated_files/system/src/interrupt.c: 62:     if(INTCONbits.PEIE == 1)
 17520     0006  1F0B               	btfss	11,6	;volatile
 17521     0007  2809               	goto	u723_21
 17522     0008  280A               	goto	u723_20
 17523     0009                     u723_21:
 17524     0009  2856               	goto	i1l244
 17525     000A                     u723_20:
 17526     000A                     i1l6105:
 17527                           
 17528                           ;mcc_generated_files/system/src/interrupt.c: 63:     {;mcc_generated_files/system/src/in
      +                          terrupt.c: 64:         if(PIE1bits.TXIE == 1 && PIR1bits.TXIF == 1)
 17529     000A  0021               	movlb	1	; select bank1
 17530     000B  1E11               	btfss	17,4	;volatile
 17531     000C  280E               	goto	u724_21
 17532     000D  280F               	goto	u724_20
 17533     000E                     u724_21:
 17534     000E  281B               	goto	i1l233
 17535     000F                     u724_20:
 17536     000F                     i1l6107:
 17537     000F  0020               	movlb	0	; select bank0
 17538     0010  1E11               	btfss	17,4	;volatile
 17539     0011  2813               	goto	u725_21
 17540     0012  2814               	goto	u725_20
 17541     0013                     u725_21:
 17542     0013  281B               	goto	i1l233
 17543     0014                     u725_20:
 17544     0014                     i1l6109:
 17545                           
 17546                           ;mcc_generated_files/system/src/interrupt.c: 65:         {;mcc_generated_files/system/sr
      +                          c/interrupt.c: 66:             EUSART_TxInterruptHandler();
 17547     0014  0022               	movlb	2	; select bank2
 17548     0015  0851               	movf	(_EUSART_TxInterruptHandler+1)^(0+256),w
 17549     0016  008A               	movwf	10
 17550     0017  0850               	movf	_EUSART_TxInterruptHandler^(0+256),w
 17551     0018  000A               	callw
 17552     0019  3180               	pagesel	$
 17553                           
 17554                           ;mcc_generated_files/system/src/interrupt.c: 67:         }
 17555     001A  2856               	goto	i1l244
 17556     001B                     i1l233:	
 17557                           ;mcc_generated_files/system/src/interrupt.c: 68:         else if(PIE1bits.RCIE == 1 && P
      +                          IR1bits.RCIF == 1)
 17558                           
 17559     001B  0021               	movlb	1	; select bank1
 17560     001C  1E91               	btfss	17,5	;volatile
 17561     001D  281F               	goto	u726_21
 17562     001E  2820               	goto	u726_20
 17563     001F                     u726_21:
 17564     001F  282C               	goto	i1l235
 17565     0020                     u726_20:
 17566     0020                     i1l6111:
 17567     0020  0020               	movlb	0	; select bank0
 17568     0021  1E91               	btfss	17,5	;volatile
 17569     0022  2824               	goto	u727_21
 17570     0023  2825               	goto	u727_20
 17571     0024                     u727_21:
 17572     0024  282C               	goto	i1l235
 17573     0025                     u727_20:
 17574     0025                     i1l6113:
 17575                           
 17576                           ;mcc_generated_files/system/src/interrupt.c: 69:         {;mcc_generated_files/system/sr
      +                          c/interrupt.c: 70:             EUSART_RxInterruptHandler();
 17577     0025  0022               	movlb	2	; select bank2
 17578     0026  084F               	movf	(_EUSART_RxInterruptHandler+1)^(0+256),w
 17579     0027  008A               	movwf	10
 17580     0028  084E               	movf	_EUSART_RxInterruptHandler^(0+256),w
 17581     0029  000A               	callw
 17582     002A  3180               	pagesel	$
 17583                           
 17584                           ;mcc_generated_files/system/src/interrupt.c: 71:         }
 17585     002B  2856               	goto	i1l244
 17586     002C                     i1l235:	
 17587                           ;mcc_generated_files/system/src/interrupt.c: 72:         else if(PIE2bits.TMR4IE == 1 &&
      +                           PIR2bits.TMR4IF == 1)
 17588                           
 17589     002C  0021               	movlb	1	; select bank1
 17590     002D  1C92               	btfss	18,1	;volatile
 17591     002E  2830               	goto	u728_21
 17592     002F  2831               	goto	u728_20
 17593     0030                     u728_21:
 17594     0030  283A               	goto	i1l237
 17595     0031                     u728_20:
 17596     0031                     i1l6115:
 17597     0031  0020               	movlb	0	; select bank0
 17598     0032  1C92               	btfss	18,1	;volatile
 17599     0033  2835               	goto	u729_21
 17600     0034  2836               	goto	u729_20
 17601     0035                     u729_21:
 17602     0035  283A               	goto	i1l237
 17603     0036                     u729_20:
 17604     0036                     i1l6117:
 17605                           
 17606                           ;mcc_generated_files/system/src/interrupt.c: 73:         {;mcc_generated_files/system/sr
      +                          c/interrupt.c: 74:             TMR4_ISR();
 17607     0036  319E  262E  3180   	fcall	_TMR4_ISR
 17608                           
 17609                           ;mcc_generated_files/system/src/interrupt.c: 75:         }
 17610     0039  2856               	goto	i1l244
 17611     003A                     i1l237:	
 17612                           ;mcc_generated_files/system/src/interrupt.c: 76:         else if(PIE1bits.TMR2IE == 1 &&
      +                           PIR1bits.TMR2IF == 1)
 17613                           
 17614     003A  0021               	movlb	1	; select bank1
 17615     003B  1C91               	btfss	17,1	;volatile
 17616     003C  283E               	goto	u730_21
 17617     003D  283F               	goto	u730_20
 17618     003E                     u730_21:
 17619     003E  2848               	goto	i1l239
 17620     003F                     u730_20:
 17621     003F                     i1l6119:
 17622     003F  0020               	movlb	0	; select bank0
 17623     0040  1C91               	btfss	17,1	;volatile
 17624     0041  2843               	goto	u731_21
 17625     0042  2844               	goto	u731_20
 17626     0043                     u731_21:
 17627     0043  2848               	goto	i1l239
 17628     0044                     u731_20:
 17629     0044                     i1l6121:
 17630                           
 17631                           ;mcc_generated_files/system/src/interrupt.c: 77:         {;mcc_generated_files/system/sr
      +                          c/interrupt.c: 78:             TMR2_ISR();
 17632     0044  319E  261F  3180   	fcall	_TMR2_ISR
 17633                           
 17634                           ;mcc_generated_files/system/src/interrupt.c: 79:         }
 17635     0047  2856               	goto	i1l244
 17636     0048                     i1l239:	
 17637                           ;mcc_generated_files/system/src/interrupt.c: 80:         else if(PIE1bits.ADIE == 1 && P
      +                          IR1bits.ADIF == 1)
 17638                           
 17639     0048  0021               	movlb	1	; select bank1
 17640     0049  1F11               	btfss	17,6	;volatile
 17641     004A  284C               	goto	u732_21
 17642     004B  284D               	goto	u732_20
 17643     004C                     u732_21:
 17644     004C  2856               	goto	i1l238
 17645     004D                     u732_20:
 17646     004D                     i1l6123:
 17647     004D  0020               	movlb	0	; select bank0
 17648     004E  1F11               	btfss	17,6	;volatile
 17649     004F  2851               	goto	u733_21
 17650     0050  2852               	goto	u733_20
 17651     0051                     u733_21:
 17652     0051  2856               	goto	i1l238
 17653     0052                     u733_20:
 17654     0052                     i1l6125:
 17655                           
 17656                           ;mcc_generated_files/system/src/interrupt.c: 81:         {;mcc_generated_files/system/sr
      +                          c/interrupt.c: 82:             ADC_ISR();
 17657     0052  319E  2610  3180   	fcall	_ADC_ISR
 17658                           
 17659                           ;mcc_generated_files/system/src/interrupt.c: 83:         }
 17660     0055  2856               	goto	i1l244
 17661     0056                     i1l238:
 17662     0056                     i1l244:
 17663     0056  107E               	bcf	int$flags,0	;clear compiler interrupt flag (level 1)
 17664     0057  0009               	retfie
 17665     0058                     __end_of_INTERRUPT_InterruptManager:
 17666                           
 17667                           	psect	text71
 17668     1E2E                     __ptext71:	
 17669 ;; *************** function _TMR4_ISR *****************
 17670 ;; Defined at:
 17671 ;;		line 114 in file "mcc_generated_files/timer/src/tmr4.c"
 17672 ;; Parameters:    Size  Location     Type
 17673 ;;		None
 17674 ;; Auto vars:     Size  Location     Type
 17675 ;;		None
 17676 ;; Return value:  Size  Location     Type
 17677 ;;                  1    wreg      void 
 17678 ;; Registers used:
 17679 ;;		wreg, status,2, status,0, pclath, cstack
 17680 ;; Tracked objects:
 17681 ;;		On entry : 0/0
 17682 ;;		On exit  : 0/0
 17683 ;;		Unchanged: 0/0
 17684 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 17685 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17686 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17687 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17688 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17689 ;;Total ram usage:        0 bytes
 17690 ;; Hardware stack levels used: 1
 17691 ;; Hardware stack levels required when called: 3
 17692 ;; This function calls:
 17693 ;;		NULL
 17694 ;;		_TMR4_DefaultPeriodMatchCallback
 17695 ;;		_controller
 17696 ;; This function is called by:
 17697 ;;		_INTERRUPT_InterruptManager
 17698 ;; This function uses a non-reentrant model
 17699 ;;
 17700                           
 17701     1E2E                     _TMR4_ISR:	
 17702                           ;psect for function _TMR4_ISR
 17703                           
 17704     1E2E                     i1l5963:	
 17705                           ;incstack = 0
 17706                           ; Regs used in _TMR4_ISR: [wreg+status,2+status,0+pclath+cstack]
 17707                           
 17708                           
 17709                           ;mcc_generated_files/timer/src/tmr4.c: 117:     if(((void*)0) != TMR4_PeriodMatchCallbac
      +                          k)
 17710     1E2E  0022               	movlb	2	; select bank2
 17711     1E2F  084A               	movf	_TMR4_PeriodMatchCallback^(0+256),w
 17712     1E30  044B               	iorwf	(_TMR4_PeriodMatchCallback+1)^(0+256),w
 17713     1E31  1903               	btfsc	3,2
 17714     1E32  2E34               	goto	u710_21
 17715     1E33  2E35               	goto	u710_20
 17716     1E34                     u710_21:
 17717     1E34  2E3A               	goto	i1l5967
 17718     1E35                     u710_20:
 17719     1E35                     i1l5965:
 17720                           
 17721                           ;mcc_generated_files/timer/src/tmr4.c: 118:     {;mcc_generated_files/timer/src/tmr4.c: 
      +                          119:         TMR4_PeriodMatchCallback();
 17722     1E35  084B               	movf	(_TMR4_PeriodMatchCallback+1)^(0+256),w
 17723     1E36  008A               	movwf	10
 17724     1E37  084A               	movf	_TMR4_PeriodMatchCallback^(0+256),w
 17725     1E38  000A               	callw
 17726     1E39  319E               	pagesel	$
 17727     1E3A                     i1l5967:
 17728                           
 17729                           ;mcc_generated_files/timer/src/tmr4.c: 121:     PIR2bits.TMR4IF = 0;
 17730     1E3A  0020               	movlb	0	; select bank0
 17731     1E3B  1092               	bcf	18,1	;volatile
 17732     1E3C                     i1l491:
 17733     1E3C  0008               	return
 17734     1E3D                     __end_of_TMR4_ISR:
 17735                           
 17736                           	psect	text72
 17737     1D26                     __ptext72:	
 17738 ;; *************** function _TMR4_DefaultPeriodMatchCallback *****************
 17739 ;; Defined at:
 17740 ;;		line 129 in file "mcc_generated_files/timer/src/tmr4.c"
 17741 ;; Parameters:    Size  Location     Type
 17742 ;;		None
 17743 ;; Auto vars:     Size  Location     Type
 17744 ;;		None
 17745 ;; Return value:  Size  Location     Type
 17746 ;;                  1    wreg      void 
 17747 ;; Registers used:
 17748 ;;		None
 17749 ;; Tracked objects:
 17750 ;;		On entry : 0/0
 17751 ;;		On exit  : 0/0
 17752 ;;		Unchanged: 0/0
 17753 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 17754 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17755 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17756 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17757 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17758 ;;Total ram usage:        0 bytes
 17759 ;; Hardware stack levels used: 1
 17760 ;; This function calls:
 17761 ;;		Nothing
 17762 ;; This function is called by:
 17763 ;;		_TMR4_Initialize
 17764 ;;		_TMR4_ISR
 17765 ;; This function uses a non-reentrant model
 17766 ;;
 17767                           
 17768     1D26                     _TMR4_DefaultPeriodMatchCallback:	
 17769                           ;psect for function _TMR4_DefaultPeriodMatchCallback
 17770                           
 17771     1D26                     i1l497:	
 17772                           ;incstack = 0
 17773                           ; Regs used in _TMR4_DefaultPeriodMatchCallback: []
 17774                           
 17775     1D26  0008               	return
 17776     1D27                     __end_of_TMR4_DefaultPeriodMatchCallback:
 17777                           
 17778                           	psect	text73
 17779     09D2                     __ptext73:	
 17780 ;; *************** function _controller *****************
 17781 ;; Defined at:
 17782 ;;		line 13 in file "controller.c"
 17783 ;; Parameters:    Size  Location     Type
 17784 ;;		None
 17785 ;; Auto vars:     Size  Location     Type
 17786 ;;  error           2   51[BANK0 ] short 
 17787 ;;  I               2   49[BANK0 ] short 
 17788 ;;  P               2   47[BANK0 ] short 
 17789 ;; Return value:  Size  Location     Type
 17790 ;;                  1    wreg      void 
 17791 ;; Registers used:
 17792 ;;		wreg, status,2, status,0, pclath, cstack
 17793 ;; Tracked objects:
 17794 ;;		On entry : 0/0
 17795 ;;		On exit  : 0/0
 17796 ;;		Unchanged: 0/0
 17797 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 17798 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17799 ;;      Locals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17800 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17801 ;;      Totals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17802 ;;Total ram usage:        7 bytes
 17803 ;; Hardware stack levels used: 1
 17804 ;; Hardware stack levels required when called: 2
 17805 ;; This function calls:
 17806 ;;		___fltol
 17807 ;;		_getHoogtesensor
 17808 ;;		_pwm_fan_LoadDutyValue
 17809 ;;		i1___fladd
 17810 ;;		i1___flmul
 17811 ;;		i1___xxtofl
 17812 ;; This function is called by:
 17813 ;;		_main
 17814 ;;		_TMR4_ISR
 17815 ;; This function uses a non-reentrant model
 17816 ;;
 17817                           
 17818     09D2                     _controller:	
 17819                           ;psect for function _controller
 17820                           
 17821     09D2                     i1l5925:	
 17822                           ;incstack = 0
 17823                           ; Regs used in _controller: [wreg+status,2+status,0+pclath+cstack]
 17824                           
 17825                           
 17826                           ;controller.c: 14:     hoogte_bal = getHoogtesensor();
 17827     09D2  319D  2537  3189   	fcall	_getHoogtesensor
 17828     09D5  0871               	movf	?_getHoogtesensor+1,w
 17829     09D6  0022               	movlb	2	; select bank2
 17830     09D7  00B1               	movwf	(_hoogte_bal+1)^(0+256)
 17831     09D8  0870               	movf	?_getHoogtesensor,w
 17832     09D9  00B0               	movwf	_hoogte_bal^(0+256)
 17833     09DA                     i1l5927:
 17834                           
 17835                           ;controller.c: 17:     int16_t error = setpoint - hoogte_bal;
 17836     09DA  0830               	movf	_hoogte_bal^(0+256),w
 17837     09DB  0021               	movlb	1	; select bank1
 17838     09DC  026D               	subwf	_setpoint^(0+128),w
 17839     09DD  0020               	movlb	0	; select bank0
 17840     09DE  00D3               	movwf	controller@error
 17841     09DF  0022               	movlb	2	; select bank2
 17842     09E0  0831               	movf	(_hoogte_bal+1)^(0+256),w
 17843     09E1  0021               	movlb	1	; select bank1
 17844     09E2  3B6E               	subwfb	(_setpoint+1)^(0+128),w
 17845     09E3  0020               	movlb	0	; select bank0
 17846     09E4  00D4               	movwf	controller@error+1
 17847     09E5                     i1l5929:
 17848                           
 17849                           ;controller.c: 19:     integraal += error * 0.002;
 17850     09E5  0853               	movf	controller@error,w
 17851     09E6  00F0               	movwf	i1___xxtofl@val
 17852     09E7  0854               	movf	controller@error+1,w
 17853     09E8  00F1               	movwf	i1___xxtofl@val+1
 17854     09E9  0D89               	rlf	9,f
 17855     09EA  3B89               	subwfb	9,f
 17856     09EB  0989               	comf	9,f
 17857     09EC  00F2               	movwf	i1___xxtofl@val+2
 17858     09ED  00F3               	movwf	i1___xxtofl@val+3
 17859     09EE  3001               	movlw	1
 17860     09EF  3197  275C  3189   	fcall	i1___xxtofl
 17861     09F2  0873               	movf	?i1___xxtofl+3,w
 17862     09F3  0020               	movlb	0	; select bank0
 17863     09F4  00A7               	movwf	i1___flmul@a+3
 17864     09F5  0872               	movf	?i1___xxtofl+2,w
 17865     09F6  00A6               	movwf	i1___flmul@a+2
 17866     09F7  0871               	movf	?i1___xxtofl+1,w
 17867     09F8  00A5               	movwf	i1___flmul@a+1
 17868     09F9  0870               	movf	?i1___xxtofl,w
 17869     09FA  00A4               	movwf	i1___flmul@a
 17870     09FB  303B               	movlw	59
 17871     09FC  00A3               	movwf	i1___flmul@b+3
 17872     09FD  3003               	movlw	3
 17873     09FE  00A2               	movwf	i1___flmul@b+2
 17874     09FF  3012               	movlw	18
 17875     0A00  00A1               	movwf	i1___flmul@b+1
 17876     0A01  306F               	movlw	111
 17877     0A02  00A0               	movwf	i1___flmul@b
 17878     0A03  3182  22CE  3189   	fcall	i1___flmul
 17879     0A06  0020               	movlb	0	; select bank0
 17880     0A07  0823               	movf	?i1___flmul+3,w
 17881     0A08  00BD               	movwf	i1___fladd@b+3
 17882     0A09  0822               	movf	?i1___flmul+2,w
 17883     0A0A  00BC               	movwf	i1___fladd@b+2
 17884     0A0B  0821               	movf	?i1___flmul+1,w
 17885     0A0C  00BB               	movwf	i1___fladd@b+1
 17886     0A0D  0820               	movf	?i1___flmul,w
 17887     0A0E  00BA               	movwf	i1___fladd@b
 17888     0A0F  0022               	movlb	2	; select bank2
 17889     0A10  082B               	movf	(_integraal+3)^(0+256),w
 17890     0A11  0020               	movlb	0	; select bank0
 17891     0A12  00C1               	movwf	i1___fladd@a+3
 17892     0A13  0022               	movlb	2	; select bank2
 17893     0A14  082A               	movf	(_integraal+2)^(0+256),w
 17894     0A15  0020               	movlb	0	; select bank0
 17895     0A16  00C0               	movwf	i1___fladd@a+2
 17896     0A17  0022               	movlb	2	; select bank2
 17897     0A18  0829               	movf	(_integraal+1)^(0+256),w
 17898     0A19  0020               	movlb	0	; select bank0
 17899     0A1A  00BF               	movwf	i1___fladd@a+1
 17900     0A1B  0022               	movlb	2	; select bank2
 17901     0A1C  0828               	movf	_integraal^(0+256),w
 17902     0A1D  0020               	movlb	0	; select bank0
 17903     0A1E  00BE               	movwf	i1___fladd@a
 17904     0A1F  318D  25F4  3189   	fcall	i1___fladd
 17905     0A22  0020               	movlb	0	; select bank0
 17906     0A23  083D               	movf	?i1___fladd+3,w
 17907     0A24  0022               	movlb	2	; select bank2
 17908     0A25  00AB               	movwf	(_integraal+3)^(0+256)
 17909     0A26  0020               	movlb	0	; select bank0
 17910     0A27  083C               	movf	?i1___fladd+2,w
 17911     0A28  0022               	movlb	2	; select bank2
 17912     0A29  00AA               	movwf	(_integraal+2)^(0+256)
 17913     0A2A  0020               	movlb	0	; select bank0
 17914     0A2B  083B               	movf	?i1___fladd+1,w
 17915     0A2C  0022               	movlb	2	; select bank2
 17916     0A2D  00A9               	movwf	(_integraal+1)^(0+256)
 17917     0A2E  0020               	movlb	0	; select bank0
 17918     0A2F  083A               	movf	?i1___fladd,w
 17919     0A30  0022               	movlb	2	; select bank2
 17920     0A31  00A8               	movwf	_integraal^(0+256)
 17921     0A32                     i1l5931:
 17922                           
 17923                           ;controller.c: 21:     int16_t P = kp * error;
 17924     0A32  0020               	movlb	0	; select bank0
 17925     0A33  0853               	movf	controller@error,w
 17926     0A34  00F0               	movwf	i1___xxtofl@val
 17927     0A35  0854               	movf	controller@error+1,w
 17928     0A36  00F1               	movwf	i1___xxtofl@val+1
 17929     0A37  0D89               	rlf	9,f
 17930     0A38  3B89               	subwfb	9,f
 17931     0A39  0989               	comf	9,f
 17932     0A3A  00F2               	movwf	i1___xxtofl@val+2
 17933     0A3B  00F3               	movwf	i1___xxtofl@val+3
 17934     0A3C  3001               	movlw	1
 17935     0A3D  3197  275C  3189   	fcall	i1___xxtofl
 17936     0A40  0873               	movf	?i1___xxtofl+3,w
 17937     0A41  0020               	movlb	0	; select bank0
 17938     0A42  00A7               	movwf	i1___flmul@a+3
 17939     0A43  0872               	movf	?i1___xxtofl+2,w
 17940     0A44  00A6               	movwf	i1___flmul@a+2
 17941     0A45  0871               	movf	?i1___xxtofl+1,w
 17942     0A46  00A5               	movwf	i1___flmul@a+1
 17943     0A47  0870               	movf	?i1___xxtofl,w
 17944     0A48  00A4               	movwf	i1___flmul@a
 17945     0A49  0022               	movlb	2	; select bank2
 17946     0A4A  085B               	movf	(_kp+3)^(0+256),w
 17947     0A4B  0020               	movlb	0	; select bank0
 17948     0A4C  00A3               	movwf	i1___flmul@b+3
 17949     0A4D  0022               	movlb	2	; select bank2
 17950     0A4E  085A               	movf	(_kp+2)^(0+256),w
 17951     0A4F  0020               	movlb	0	; select bank0
 17952     0A50  00A2               	movwf	i1___flmul@b+2
 17953     0A51  0022               	movlb	2	; select bank2
 17954     0A52  0859               	movf	(_kp+1)^(0+256),w
 17955     0A53  0020               	movlb	0	; select bank0
 17956     0A54  00A1               	movwf	i1___flmul@b+1
 17957     0A55  0022               	movlb	2	; select bank2
 17958     0A56  0858               	movf	_kp^(0+256),w
 17959     0A57  0020               	movlb	0	; select bank0
 17960     0A58  00A0               	movwf	i1___flmul@b
 17961     0A59  3182  22CE  3189   	fcall	i1___flmul
 17962     0A5C  0020               	movlb	0	; select bank0
 17963     0A5D  0823               	movf	?i1___flmul+3,w
 17964     0A5E  00BD               	movwf	___fltol@f1+3
 17965     0A5F  0822               	movf	?i1___flmul+2,w
 17966     0A60  00BC               	movwf	___fltol@f1+2
 17967     0A61  0821               	movf	?i1___flmul+1,w
 17968     0A62  00BB               	movwf	___fltol@f1+1
 17969     0A63  0820               	movf	?i1___flmul,w
 17970     0A64  00BA               	movwf	___fltol@f1
 17971     0A65  3194  24C7  3189   	fcall	___fltol
 17972     0A68  0020               	movlb	0	; select bank0
 17973     0A69  083B               	movf	?___fltol+1,w
 17974     0A6A  00D0               	movwf	controller@P+1
 17975     0A6B  083A               	movf	?___fltol,w
 17976     0A6C  00CF               	movwf	controller@P
 17977     0A6D                     i1l5933:
 17978                           
 17979                           ;controller.c: 22:     int16_t I = ki * integraal;
 17980     0A6D  0022               	movlb	2	; select bank2
 17981     0A6E  0857               	movf	(_ki+3)^(0+256),w
 17982     0A6F  0020               	movlb	0	; select bank0
 17983     0A70  00A7               	movwf	i1___flmul@a+3
 17984     0A71  0022               	movlb	2	; select bank2
 17985     0A72  0856               	movf	(_ki+2)^(0+256),w
 17986     0A73  0020               	movlb	0	; select bank0
 17987     0A74  00A6               	movwf	i1___flmul@a+2
 17988     0A75  0022               	movlb	2	; select bank2
 17989     0A76  0855               	movf	(_ki+1)^(0+256),w
 17990     0A77  0020               	movlb	0	; select bank0
 17991     0A78  00A5               	movwf	i1___flmul@a+1
 17992     0A79  0022               	movlb	2	; select bank2
 17993     0A7A  0854               	movf	_ki^(0+256),w
 17994     0A7B  0020               	movlb	0	; select bank0
 17995     0A7C  00A4               	movwf	i1___flmul@a
 17996     0A7D  0022               	movlb	2	; select bank2
 17997     0A7E  082B               	movf	(_integraal+3)^(0+256),w
 17998     0A7F  0020               	movlb	0	; select bank0
 17999     0A80  00A3               	movwf	i1___flmul@b+3
 18000     0A81  0022               	movlb	2	; select bank2
 18001     0A82  082A               	movf	(_integraal+2)^(0+256),w
 18002     0A83  0020               	movlb	0	; select bank0
 18003     0A84  00A2               	movwf	i1___flmul@b+2
 18004     0A85  0022               	movlb	2	; select bank2
 18005     0A86  0829               	movf	(_integraal+1)^(0+256),w
 18006     0A87  0020               	movlb	0	; select bank0
 18007     0A88  00A1               	movwf	i1___flmul@b+1
 18008     0A89  0022               	movlb	2	; select bank2
 18009     0A8A  0828               	movf	_integraal^(0+256),w
 18010     0A8B  0020               	movlb	0	; select bank0
 18011     0A8C  00A0               	movwf	i1___flmul@b
 18012     0A8D  3182  22CE  3189   	fcall	i1___flmul
 18013     0A90  0020               	movlb	0	; select bank0
 18014     0A91  0823               	movf	?i1___flmul+3,w
 18015     0A92  00BD               	movwf	___fltol@f1+3
 18016     0A93  0822               	movf	?i1___flmul+2,w
 18017     0A94  00BC               	movwf	___fltol@f1+2
 18018     0A95  0821               	movf	?i1___flmul+1,w
 18019     0A96  00BB               	movwf	___fltol@f1+1
 18020     0A97  0820               	movf	?i1___flmul,w
 18021     0A98  00BA               	movwf	___fltol@f1
 18022     0A99  3194  24C7  3189   	fcall	___fltol
 18023     0A9C  0020               	movlb	0	; select bank0
 18024     0A9D  083B               	movf	?___fltol+1,w
 18025     0A9E  00D2               	movwf	controller@I+1
 18026     0A9F  083A               	movf	?___fltol,w
 18027     0AA0  00D1               	movwf	controller@I
 18028     0AA1                     i1l5935:
 18029                           
 18030                           ;controller.c: 24:     dutycycle = P + I;
 18031     0AA1  0851               	movf	controller@I,w
 18032     0AA2  074F               	addwf	controller@P,w
 18033     0AA3  00D7               	movwf	_dutycycle
 18034     0AA4  0852               	movf	controller@I+1,w
 18035     0AA5  3D50               	addwfc	controller@P+1,w
 18036     0AA6  00D8               	movwf	_dutycycle+1
 18037     0AA7                     i1l5937:
 18038                           
 18039                           ;controller.c: 26:     if (dutycycle > 1023 && error > 0) {
 18040     0AA7  3004               	movlw	4
 18041     0AA8  0258               	subwf	_dutycycle+1,w
 18042     0AA9  3000               	movlw	0
 18043     0AAA  1903               	skipnz
 18044     0AAB  0257               	subwf	_dutycycle,w
 18045     0AAC  1C03               	skipc
 18046     0AAD  2AAF               	goto	u704_21
 18047     0AAE  2AB0               	goto	u704_20
 18048     0AAF                     u704_21:
 18049     0AAF  2AC3               	goto	i1l5943
 18050     0AB0                     u704_20:
 18051     0AB0                     i1l5939:
 18052     0AB0  0854               	movf	controller@error+1,w
 18053     0AB1  3A80               	xorlw	128
 18054     0AB2  00CE               	movwf	??_controller
 18055     0AB3  3080               	movlw	128
 18056     0AB4  024E               	subwf	??_controller,w
 18057     0AB5  1D03               	skipz
 18058     0AB6  2AB9               	goto	u705_25
 18059     0AB7  3001               	movlw	1
 18060     0AB8  0253               	subwf	controller@error,w
 18061     0AB9                     u705_25:
 18062     0AB9  1C03               	skipc
 18063     0ABA  2ABC               	goto	u705_21
 18064     0ABB  2ABD               	goto	u705_20
 18065     0ABC                     u705_21:
 18066     0ABC  2AC3               	goto	i1l5943
 18067     0ABD                     u705_20:
 18068     0ABD                     i1l5941:
 18069                           
 18070                           ;controller.c: 27:         dutycycle = 1023;
 18071     0ABD  30FF               	movlw	255
 18072     0ABE  0020               	movlb	0	; select bank0
 18073     0ABF  00D7               	movwf	_dutycycle
 18074     0AC0  3003               	movlw	3
 18075     0AC1  00D8               	movwf	_dutycycle+1
 18076                           
 18077                           ;controller.c: 28:     } else if (dutycycle > 1023 && error < 0) {
 18078     0AC2  2AD4               	goto	i1l5951
 18079     0AC3                     i1l5943:
 18080     0AC3  3004               	movlw	4
 18081     0AC4  0020               	movlb	0	; select bank0
 18082     0AC5  0258               	subwf	_dutycycle+1,w
 18083     0AC6  3000               	movlw	0
 18084     0AC7  1903               	skipnz
 18085     0AC8  0257               	subwf	_dutycycle,w
 18086     0AC9  1C03               	skipc
 18087     0ACA  2ACC               	goto	u706_21
 18088     0ACB  2ACD               	goto	u706_20
 18089     0ACC                     u706_21:
 18090     0ACC  2AD4               	goto	i1l958
 18091     0ACD                     u706_20:
 18092     0ACD                     i1l5945:
 18093     0ACD  1FD4               	btfss	controller@error+1,7
 18094     0ACE  2AD0               	goto	u707_21
 18095     0ACF  2AD1               	goto	u707_20
 18096     0AD0                     u707_21:
 18097     0AD0  2AD4               	goto	i1l958
 18098     0AD1                     u707_20:
 18099     0AD1                     i1l5947:
 18100                           
 18101                           ;controller.c: 29:         dutycycle = 0;
 18102     0AD1  01D7               	clrf	_dutycycle
 18103     0AD2  01D8               	clrf	_dutycycle+1
 18104                           
 18105                           ;controller.c: 30:     } else if (dutycycle < 0) {
 18106     0AD3  2AD4               	goto	i1l5951
 18107     0AD4                     i1l958:
 18108     0AD4                     i1l5951:
 18109                           
 18110                           ;controller.c: 34:     pwm_fan_LoadDutyValue(dutycycle);
 18111     0AD4  0858               	movf	_dutycycle+1,w
 18112     0AD5  00F1               	movwf	pwm_fan_LoadDutyValue@dutyValue+1
 18113     0AD6  0857               	movf	_dutycycle,w
 18114     0AD7  00F0               	movwf	pwm_fan_LoadDutyValue@dutyValue
 18115     0AD8  319E  26E3  3189   	fcall	_pwm_fan_LoadDutyValue
 18116     0ADB                     i1l960:
 18117     0ADB  0008               	return
 18118     0ADC                     __end_of_controller:
 18119                           
 18120                           	psect	text74
 18121     175C                     __ptext74:	
 18122 ;; *************** function i1___xxtofl *****************
 18123 ;; Defined at:
 18124 ;;		line 10 in file "C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\xxtofl.c"
 18125 ;; Parameters:    Size  Location     Type
 18126 ;;  sign            1    wreg     unsigned char 
 18127 ;;  val             4    0[COMMON] long 
 18128 ;; Auto vars:     Size  Location     Type
 18129 ;;  sign            1    8[COMMON] unsigned char 
 18130 ;;  arg             4   10[COMMON] unsigned long 
 18131 ;;  exp             1    9[COMMON] unsigned char 
 18132 ;; Return value:  Size  Location     Type
 18133 ;;                  4    0[COMMON] unsigned char 
 18134 ;; Registers used:
 18135 ;;		wreg, status,2, status,0
 18136 ;; Tracked objects:
 18137 ;;		On entry : 0/0
 18138 ;;		On exit  : 0/0
 18139 ;;		Unchanged: 0/0
 18140 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 18141 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18142 ;;      Locals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18143 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18144 ;;      Totals:        14       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18145 ;;Total ram usage:       14 bytes
 18146 ;; Hardware stack levels used: 1
 18147 ;; This function calls:
 18148 ;;		Nothing
 18149 ;; This function is called by:
 18150 ;;		_controller
 18151 ;; This function uses a non-reentrant model
 18152 ;;
 18153                           
 18154     175C                     i1___xxtofl:	
 18155                           ;psect for function i1___xxtofl
 18156                           
 18157                           
 18158                           ;incstack = 0
 18159                           ; Regs used in i1___xxtofl: [wreg+status,2+status,0]
 18160                           ;i1___xxtofl@sign stored from wreg
 18161     175C  00F8               	movwf	i1___xxtofl@sign
 18162     175D                     i1l5579:
 18163     175D  0878               	movf	i1___xxtofl@sign,w
 18164     175E  1903               	btfsc	3,2
 18165     175F  2F61               	goto	u673_21
 18166     1760  2F62               	goto	u673_20
 18167     1761                     u673_21:
 18168     1761  2F76               	goto	i1l5585
 18169     1762                     u673_20:
 18170     1762                     i1l5581:
 18171     1762  1FF3               	btfss	i1___xxtofl@val+3,7
 18172     1763  2F65               	goto	u674_21
 18173     1764  2F66               	goto	u674_20
 18174     1765                     u674_21:
 18175     1765  2F76               	goto	i1l5585
 18176     1766                     u674_20:
 18177     1766                     i1l5583:
 18178     1766  0970               	comf	i1___xxtofl@val,w
 18179     1767  00FA               	movwf	i1___xxtofl@arg
 18180     1768  0971               	comf	i1___xxtofl@val+1,w
 18181     1769  00FB               	movwf	i1___xxtofl@arg+1
 18182     176A  0972               	comf	i1___xxtofl@val+2,w
 18183     176B  00FC               	movwf	i1___xxtofl@arg+2
 18184     176C  0973               	comf	i1___xxtofl@val+3,w
 18185     176D  00FD               	movwf	i1___xxtofl@arg+3
 18186     176E  0AFA               	incf	i1___xxtofl@arg,f
 18187     176F  1903               	skipnz
 18188     1770  0AFB               	incf	i1___xxtofl@arg+1,f
 18189     1771  1903               	skipnz
 18190     1772  0AFC               	incf	i1___xxtofl@arg+2,f
 18191     1773  1903               	skipnz
 18192     1774  0AFD               	incf	i1___xxtofl@arg+3,f
 18193     1775  2F7E               	goto	i1l1633
 18194     1776                     i1l5585:
 18195     1776  0873               	movf	i1___xxtofl@val+3,w
 18196     1777  00FD               	movwf	i1___xxtofl@arg+3
 18197     1778  0872               	movf	i1___xxtofl@val+2,w
 18198     1779  00FC               	movwf	i1___xxtofl@arg+2
 18199     177A  0871               	movf	i1___xxtofl@val+1,w
 18200     177B  00FB               	movwf	i1___xxtofl@arg+1
 18201     177C  0870               	movf	i1___xxtofl@val,w
 18202     177D  00FA               	movwf	i1___xxtofl@arg
 18203     177E                     i1l1633:
 18204     177E  0873               	movf	i1___xxtofl@val+3,w
 18205     177F  0472               	iorwf	i1___xxtofl@val+2,w
 18206     1780  0471               	iorwf	i1___xxtofl@val+1,w
 18207     1781  0470               	iorwf	i1___xxtofl@val,w
 18208     1782  1D03               	skipz
 18209     1783  2F85               	goto	u675_21
 18210     1784  2F86               	goto	u675_20
 18211     1785                     u675_21:
 18212     1785  2F8F               	goto	i1l1634
 18213     1786                     u675_20:
 18214     1786                     i1l5587:
 18215     1786  3000               	movlw	0
 18216     1787  00F3               	movwf	?i1___xxtofl+3
 18217     1788  3000               	movlw	0
 18218     1789  00F2               	movwf	?i1___xxtofl+2
 18219     178A  3000               	movlw	0
 18220     178B  00F1               	movwf	?i1___xxtofl+1
 18221     178C  3000               	movlw	0
 18222     178D  00F0               	movwf	?i1___xxtofl
 18223     178E  2FFF               	goto	i1l1635
 18224     178F                     i1l1634:
 18225     178F  3096               	movlw	150
 18226     1790  00F9               	movwf	i1___xxtofl@exp
 18227     1791  2F9B               	goto	i1l5593
 18228     1792                     i1l5591:
 18229     1792  3001               	movlw	1
 18230     1793  07F9               	addwf	i1___xxtofl@exp,f
 18231     1794  3001               	movlw	1
 18232     1795                     u676_25:
 18233     1795  36FD               	lsrf	i1___xxtofl@arg+3,f
 18234     1796  0CFC               	rrf	i1___xxtofl@arg+2,f
 18235     1797  0CFB               	rrf	i1___xxtofl@arg+1,f
 18236     1798  0CFA               	rrf	i1___xxtofl@arg,f
 18237     1799  0B89               	decfsz	9,f
 18238     179A  2F95               	goto	u676_25
 18239     179B                     i1l5593:
 18240     179B  30FE               	movlw	254
 18241     179C  057D               	andwf	i1___xxtofl@arg+3,w
 18242     179D  1D03               	btfss	3,2
 18243     179E  2FA0               	goto	u677_21
 18244     179F  2FA1               	goto	u677_20
 18245     17A0                     u677_21:
 18246     17A0  2F92               	goto	i1l5591
 18247     17A1                     u677_20:
 18248     17A1  2FB1               	goto	i1l5597
 18249     17A2                     i1l5595:
 18250     17A2  3001               	movlw	1
 18251     17A3  07F9               	addwf	i1___xxtofl@exp,f
 18252     17A4  3001               	movlw	1
 18253     17A5  07FA               	addwf	i1___xxtofl@arg,f
 18254     17A6  3000               	movlw	0
 18255     17A7  3DFB               	addwfc	i1___xxtofl@arg+1,f
 18256     17A8  3DFC               	addwfc	i1___xxtofl@arg+2,f
 18257     17A9  3DFD               	addwfc	i1___xxtofl@arg+3,f
 18258     17AA  3001               	movlw	1
 18259     17AB                     u678_25:
 18260     17AB  36FD               	lsrf	i1___xxtofl@arg+3,f
 18261     17AC  0CFC               	rrf	i1___xxtofl@arg+2,f
 18262     17AD  0CFB               	rrf	i1___xxtofl@arg+1,f
 18263     17AE  0CFA               	rrf	i1___xxtofl@arg,f
 18264     17AF  0B89               	decfsz	9,f
 18265     17B0  2FAB               	goto	u678_25
 18266     17B1                     i1l5597:
 18267     17B1  30FF               	movlw	255
 18268     17B2  057D               	andwf	i1___xxtofl@arg+3,w
 18269     17B3  1D03               	btfss	3,2
 18270     17B4  2FB6               	goto	u679_21
 18271     17B5  2FB7               	goto	u679_20
 18272     17B6                     u679_21:
 18273     17B6  2FA2               	goto	i1l5595
 18274     17B7                     u679_20:
 18275     17B7  2FC1               	goto	i1l5601
 18276     17B8                     i1l5599:
 18277     17B8  3001               	movlw	1
 18278     17B9  02F9               	subwf	i1___xxtofl@exp,f
 18279     17BA  3001               	movlw	1
 18280     17BB                     u680_25:
 18281     17BB  35FA               	lslf	i1___xxtofl@arg,f
 18282     17BC  0DFB               	rlf	i1___xxtofl@arg+1,f
 18283     17BD  0DFC               	rlf	i1___xxtofl@arg+2,f
 18284     17BE  0DFD               	rlf	i1___xxtofl@arg+3,f
 18285     17BF  0B89               	decfsz	9,f
 18286     17C0  2FBB               	goto	u680_25
 18287     17C1                     i1l5601:
 18288     17C1  1BFC               	btfsc	i1___xxtofl@arg+2,7
 18289     17C2  2FC4               	goto	u681_21
 18290     17C3  2FC5               	goto	u681_20
 18291     17C4                     u681_21:
 18292     17C4  2FCB               	goto	i1l1646
 18293     17C5                     u681_20:
 18294     17C5                     i1l5603:
 18295     17C5  3002               	movlw	2
 18296     17C6  0279               	subwf	i1___xxtofl@exp,w
 18297     17C7  1803               	skipnc
 18298     17C8  2FCA               	goto	u682_21
 18299     17C9  2FCB               	goto	u682_20
 18300     17CA                     u682_21:
 18301     17CA  2FB8               	goto	i1l5599
 18302     17CB                     u682_20:
 18303     17CB                     i1l1646:
 18304     17CB  1879               	btfsc	i1___xxtofl@exp,0
 18305     17CC  2FCE               	goto	u683_21
 18306     17CD  2FCF               	goto	u683_20
 18307     17CE                     u683_21:
 18308     17CE  2FD7               	goto	i1l1647
 18309     17CF                     u683_20:
 18310     17CF                     i1l5605:
 18311     17CF  30FF               	movlw	255
 18312     17D0  05FA               	andwf	i1___xxtofl@arg,f
 18313     17D1  30FF               	movlw	255
 18314     17D2  05FB               	andwf	i1___xxtofl@arg+1,f
 18315     17D3  307F               	movlw	127
 18316     17D4  05FC               	andwf	i1___xxtofl@arg+2,f
 18317     17D5  30FF               	movlw	255
 18318     17D6  05FD               	andwf	i1___xxtofl@arg+3,f
 18319     17D7                     i1l1647:
 18320     17D7  1003               	clrc
 18321     17D8  0CF9               	rrf	i1___xxtofl@exp,f
 18322     17D9                     i1l5607:
 18323     17D9  0879               	movf	i1___xxtofl@exp,w
 18324     17DA  00F4               	movwf	??i1___xxtofl
 18325     17DB  01F5               	clrf	??i1___xxtofl+1
 18326     17DC  01F6               	clrf	??i1___xxtofl+2
 18327     17DD  01F7               	clrf	??i1___xxtofl+3
 18328     17DE  3018               	movlw	24
 18329     17DF                     u684_25:
 18330     17DF  35F4               	lslf	??i1___xxtofl,f
 18331     17E0  0DF5               	rlf	??i1___xxtofl+1,f
 18332     17E1  0DF6               	rlf	??i1___xxtofl+2,f
 18333     17E2  0DF7               	rlf	??i1___xxtofl+3,f
 18334     17E3                     u684_20:
 18335     17E3  0B89               	decfsz	9,f
 18336     17E4  2FDF               	goto	u684_25
 18337     17E5  0874               	movf	??i1___xxtofl,w
 18338     17E6  04FA               	iorwf	i1___xxtofl@arg,f
 18339     17E7  0875               	movf	??i1___xxtofl+1,w
 18340     17E8  04FB               	iorwf	i1___xxtofl@arg+1,f
 18341     17E9  0876               	movf	??i1___xxtofl+2,w
 18342     17EA  04FC               	iorwf	i1___xxtofl@arg+2,f
 18343     17EB  0877               	movf	??i1___xxtofl+3,w
 18344     17EC  04FD               	iorwf	i1___xxtofl@arg+3,f
 18345     17ED                     i1l5609:
 18346     17ED  0878               	movf	i1___xxtofl@sign,w
 18347     17EE  1903               	btfsc	3,2
 18348     17EF  2FF1               	goto	u685_21
 18349     17F0  2FF2               	goto	u685_20
 18350     17F1                     u685_21:
 18351     17F1  2FF7               	goto	i1l5615
 18352     17F2                     u685_20:
 18353     17F2                     i1l5611:
 18354     17F2  1FF3               	btfss	i1___xxtofl@val+3,7
 18355     17F3  2FF5               	goto	u686_21
 18356     17F4  2FF6               	goto	u686_20
 18357     17F5                     u686_21:
 18358     17F5  2FF7               	goto	i1l5615
 18359     17F6                     u686_20:
 18360     17F6                     i1l5613:
 18361     17F6  17FD               	bsf	i1___xxtofl@arg+3,7
 18362     17F7                     i1l5615:
 18363     17F7  087D               	movf	i1___xxtofl@arg+3,w
 18364     17F8  00F3               	movwf	?i1___xxtofl+3
 18365     17F9  087C               	movf	i1___xxtofl@arg+2,w
 18366     17FA  00F2               	movwf	?i1___xxtofl+2
 18367     17FB  087B               	movf	i1___xxtofl@arg+1,w
 18368     17FC  00F1               	movwf	?i1___xxtofl+1
 18369     17FD  087A               	movf	i1___xxtofl@arg,w
 18370     17FE  00F0               	movwf	?i1___xxtofl
 18371     17FF                     i1l1635:
 18372     17FF  0008               	return
 18373     1800                     __end_ofi1___xxtofl:
 18374                           
 18375                           	psect	text75
 18376     02CE                     __ptext75:	
 18377 ;; *************** function i1___flmul *****************
 18378 ;; Defined at:
 18379 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\sprcmul.c"
 18380 ;; Parameters:    Size  Location     Type
 18381 ;;  b               4    0[BANK0 ] unsigned char 
 18382 ;;  a               4    4[BANK0 ] unsigned char 
 18383 ;; Auto vars:     Size  Location     Type
 18384 ;;  prod            4   20[BANK0 ] struct .
 18385 ;;  grs             4   14[BANK0 ] unsigned long 
 18386 ;;  temp            2   24[BANK0 ] struct .
 18387 ;;  bexp            1   19[BANK0 ] unsigned char 
 18388 ;;  aexp            1   18[BANK0 ] unsigned char 
 18389 ;;  sign            1   13[BANK0 ] unsigned char 
 18390 ;; Return value:  Size  Location     Type
 18391 ;;                  4    0[BANK0 ] unsigned char 
 18392 ;; Registers used:
 18393 ;;		wreg, status,2, status,0, pclath, cstack
 18394 ;; Tracked objects:
 18395 ;;		On entry : 0/0
 18396 ;;		On exit  : 0/0
 18397 ;;		Unchanged: 0/0
 18398 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 18399 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18400 ;;      Locals:         0      13       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18401 ;;      Temps:          0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18402 ;;      Totals:         0      26       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18403 ;;Total ram usage:       26 bytes
 18404 ;; Hardware stack levels used: 1
 18405 ;; Hardware stack levels required when called: 1
 18406 ;; This function calls:
 18407 ;;		i1__Umul8_16
 18408 ;; This function is called by:
 18409 ;;		_controller
 18410 ;; This function uses a non-reentrant model
 18411 ;;
 18412                           
 18413     02CE                     i1___flmul:	
 18414                           ;psect for function i1___flmul
 18415                           
 18416     02CE                     i1l5439:	
 18417                           ;incstack = 0
 18418                           ; Regs used in i1___flmul: [wreg+status,2+status,0+pclath+cstack]
 18419                           
 18420     02CE  0020               	movlb	0	; select bank0
 18421     02CF  0823               	movf	i1___flmul@b+3,w
 18422     02D0  3980               	andlw	128
 18423     02D1  00AD               	movwf	i1___flmul@sign
 18424     02D2                     i1l5441:
 18425     02D2  3523               	lslf	i1___flmul@b+3,w
 18426     02D3  00B3               	movwf	i1___flmul@bexp
 18427     02D4                     i1l5443:
 18428     02D4  1FA2               	btfss	i1___flmul@b+2,7
 18429     02D5  2AD7               	goto	u646_21
 18430     02D6  2AD8               	goto	u646_20
 18431     02D7                     u646_21:
 18432     02D7  2AD9               	goto	i1l5447
 18433     02D8                     u646_20:
 18434     02D8                     i1l5445:
 18435     02D8  1433               	bsf	i1___flmul@bexp,0
 18436     02D9                     i1l5447:
 18437     02D9  0833               	movf	i1___flmul@bexp,w
 18438     02DA  1903               	btfsc	3,2
 18439     02DB  2ADD               	goto	u647_21
 18440     02DC  2ADE               	goto	u647_20
 18441     02DD                     u647_21:
 18442     02DD  2AED               	goto	i1l5455
 18443     02DE                     u647_20:
 18444     02DE                     i1l5449:
 18445     02DE  0A33               	incf	i1___flmul@bexp,w
 18446     02DF  1D03               	btfss	3,2
 18447     02E0  2AE2               	goto	u648_21
 18448     02E1  2AE3               	goto	u648_20
 18449     02E2                     u648_21:
 18450     02E2  2AEB               	goto	i1l5453
 18451     02E3                     u648_20:
 18452     02E3                     i1l5451:
 18453     02E3  3000               	movlw	0
 18454     02E4  00A3               	movwf	i1___flmul@b+3
 18455     02E5  3000               	movlw	0
 18456     02E6  00A2               	movwf	i1___flmul@b+2
 18457     02E7  3000               	movlw	0
 18458     02E8  00A1               	movwf	i1___flmul@b+1
 18459     02E9  3000               	movlw	0
 18460     02EA  00A0               	movwf	i1___flmul@b
 18461     02EB                     i1l5453:
 18462     02EB  17A2               	bsf	i1___flmul@b+2,7
 18463     02EC  2AF5               	goto	i1l5457
 18464     02ED                     i1l5455:
 18465     02ED  3000               	movlw	0
 18466     02EE  00A3               	movwf	i1___flmul@b+3
 18467     02EF  3000               	movlw	0
 18468     02F0  00A2               	movwf	i1___flmul@b+2
 18469     02F1  3000               	movlw	0
 18470     02F2  00A1               	movwf	i1___flmul@b+1
 18471     02F3  3000               	movlw	0
 18472     02F4  00A0               	movwf	i1___flmul@b
 18473     02F5                     i1l5457:
 18474     02F5  0827               	movf	i1___flmul@a+3,w
 18475     02F6  3980               	andlw	128
 18476     02F7  06AD               	xorwf	i1___flmul@sign,f
 18477     02F8                     i1l5459:
 18478     02F8  3527               	lslf	i1___flmul@a+3,w
 18479     02F9  00B2               	movwf	i1___flmul@aexp
 18480     02FA                     i1l5461:
 18481     02FA  1FA6               	btfss	i1___flmul@a+2,7
 18482     02FB  2AFD               	goto	u649_21
 18483     02FC  2AFE               	goto	u649_20
 18484     02FD                     u649_21:
 18485     02FD  2AFF               	goto	i1l5465
 18486     02FE                     u649_20:
 18487     02FE                     i1l5463:
 18488     02FE  1432               	bsf	i1___flmul@aexp,0
 18489     02FF                     i1l5465:
 18490     02FF  0832               	movf	i1___flmul@aexp,w
 18491     0300  1903               	btfsc	3,2
 18492     0301  2B03               	goto	u650_21
 18493     0302  2B04               	goto	u650_20
 18494     0303                     u650_21:
 18495     0303  2B13               	goto	i1l5473
 18496     0304                     u650_20:
 18497     0304                     i1l5467:
 18498     0304  0A32               	incf	i1___flmul@aexp,w
 18499     0305  1D03               	btfss	3,2
 18500     0306  2B08               	goto	u651_21
 18501     0307  2B09               	goto	u651_20
 18502     0308                     u651_21:
 18503     0308  2B11               	goto	i1l5471
 18504     0309                     u651_20:
 18505     0309                     i1l5469:
 18506     0309  3000               	movlw	0
 18507     030A  00A7               	movwf	i1___flmul@a+3
 18508     030B  3000               	movlw	0
 18509     030C  00A6               	movwf	i1___flmul@a+2
 18510     030D  3000               	movlw	0
 18511     030E  00A5               	movwf	i1___flmul@a+1
 18512     030F  3000               	movlw	0
 18513     0310  00A4               	movwf	i1___flmul@a
 18514     0311                     i1l5471:
 18515     0311  17A6               	bsf	i1___flmul@a+2,7
 18516     0312  2B1B               	goto	i1l5475
 18517     0313                     i1l5473:
 18518     0313  3000               	movlw	0
 18519     0314  00A7               	movwf	i1___flmul@a+3
 18520     0315  3000               	movlw	0
 18521     0316  00A6               	movwf	i1___flmul@a+2
 18522     0317  3000               	movlw	0
 18523     0318  00A5               	movwf	i1___flmul@a+1
 18524     0319  3000               	movlw	0
 18525     031A  00A4               	movwf	i1___flmul@a
 18526     031B                     i1l5475:
 18527     031B  0832               	movf	i1___flmul@aexp,w
 18528     031C  1903               	btfsc	3,2
 18529     031D  2B1F               	goto	u652_21
 18530     031E  2B20               	goto	u652_20
 18531     031F                     u652_21:
 18532     031F  2B25               	goto	i1l5479
 18533     0320                     u652_20:
 18534     0320                     i1l5477:
 18535     0320  0833               	movf	i1___flmul@bexp,w
 18536     0321  1D03               	btfss	3,2
 18537     0322  2B24               	goto	u653_21
 18538     0323  2B25               	goto	u653_20
 18539     0324                     u653_21:
 18540     0324  2B2E               	goto	i1l5483
 18541     0325                     u653_20:
 18542     0325                     i1l5479:
 18543     0325  3000               	movlw	0
 18544     0326  00A3               	movwf	?i1___flmul+3
 18545     0327  3000               	movlw	0
 18546     0328  00A2               	movwf	?i1___flmul+2
 18547     0329  3000               	movlw	0
 18548     032A  00A1               	movwf	?i1___flmul+1
 18549     032B  3000               	movlw	0
 18550     032C  00A0               	movwf	?i1___flmul
 18551     032D  2D08               	goto	i1l1589
 18552     032E                     i1l5483:
 18553     032E  0820               	movf	i1___flmul@b,w
 18554     032F  00F0               	movwf	i1__Umul8_16@multiplicand
 18555     0330  0826               	movf	i1___flmul@a+2,w
 18556     0331  3190  2036  3182   	fcall	i1__Umul8_16
 18557     0334  0871               	movf	?i1__Umul8_16+1,w
 18558     0335  0020               	movlb	0	; select bank0
 18559     0336  00B9               	movwf	i1___flmul@temp+1
 18560     0337  0870               	movf	?i1__Umul8_16,w
 18561     0338  00B8               	movwf	i1___flmul@temp
 18562     0339                     i1l5485:
 18563     0339  0838               	movf	i1___flmul@temp,w
 18564     033A  00A8               	movwf	??i1___flmul
 18565     033B  01A9               	clrf	??i1___flmul+1
 18566     033C  01AA               	clrf	??i1___flmul+2
 18567     033D  01AB               	clrf	??i1___flmul+3
 18568     033E  082B               	movf	??i1___flmul+3,w
 18569     033F  00B1               	movwf	i1___flmul@grs+3
 18570     0340  082A               	movf	??i1___flmul+2,w
 18571     0341  00B0               	movwf	i1___flmul@grs+2
 18572     0342  0829               	movf	??i1___flmul+1,w
 18573     0343  00AF               	movwf	i1___flmul@grs+1
 18574     0344  0828               	movf	??i1___flmul,w
 18575     0345  00AE               	movwf	i1___flmul@grs
 18576     0346                     i1l5487:
 18577     0346  0839               	movf	i1___flmul@temp+1,w
 18578     0347  00A8               	movwf	??i1___flmul
 18579     0348  01A9               	clrf	??i1___flmul+1
 18580     0349  01AA               	clrf	??i1___flmul+2
 18581     034A  01AB               	clrf	??i1___flmul+3
 18582     034B  082B               	movf	??i1___flmul+3,w
 18583     034C  00B7               	movwf	i1___flmul@prod+3
 18584     034D  082A               	movf	??i1___flmul+2,w
 18585     034E  00B6               	movwf	i1___flmul@prod+2
 18586     034F  0829               	movf	??i1___flmul+1,w
 18587     0350  00B5               	movwf	i1___flmul@prod+1
 18588     0351  0828               	movf	??i1___flmul,w
 18589     0352  00B4               	movwf	i1___flmul@prod
 18590     0353  0821               	movf	i1___flmul@b+1,w
 18591     0354  00F0               	movwf	i1__Umul8_16@multiplicand
 18592     0355  0825               	movf	i1___flmul@a+1,w
 18593     0356  3190  2036  3182   	fcall	i1__Umul8_16
 18594     0359  0871               	movf	?i1__Umul8_16+1,w
 18595     035A  0020               	movlb	0	; select bank0
 18596     035B  00B9               	movwf	i1___flmul@temp+1
 18597     035C  0870               	movf	?i1__Umul8_16,w
 18598     035D  00B8               	movwf	i1___flmul@temp
 18599     035E                     i1l5489:
 18600     035E  0838               	movf	i1___flmul@temp,w
 18601     035F  00A8               	movwf	??i1___flmul
 18602     0360  01A9               	clrf	??i1___flmul+1
 18603     0361  01AA               	clrf	??i1___flmul+2
 18604     0362  01AB               	clrf	??i1___flmul+3
 18605     0363  0828               	movf	??i1___flmul,w
 18606     0364  07AE               	addwf	i1___flmul@grs,f
 18607     0365  0829               	movf	??i1___flmul+1,w
 18608     0366  3DAF               	addwfc	i1___flmul@grs+1,f
 18609     0367  082A               	movf	??i1___flmul+2,w
 18610     0368  3DB0               	addwfc	i1___flmul@grs+2,f
 18611     0369  082B               	movf	??i1___flmul+3,w
 18612     036A  3DB1               	addwfc	i1___flmul@grs+3,f
 18613     036B                     i1l5491:
 18614     036B  0839               	movf	i1___flmul@temp+1,w
 18615     036C  00A8               	movwf	??i1___flmul
 18616     036D  01A9               	clrf	??i1___flmul+1
 18617     036E  01AA               	clrf	??i1___flmul+2
 18618     036F  01AB               	clrf	??i1___flmul+3
 18619     0370  0828               	movf	??i1___flmul,w
 18620     0371  07B4               	addwf	i1___flmul@prod,f
 18621     0372  0829               	movf	??i1___flmul+1,w
 18622     0373  3DB5               	addwfc	i1___flmul@prod+1,f
 18623     0374  082A               	movf	??i1___flmul+2,w
 18624     0375  3DB6               	addwfc	i1___flmul@prod+2,f
 18625     0376  082B               	movf	??i1___flmul+3,w
 18626     0377  3DB7               	addwfc	i1___flmul@prod+3,f
 18627     0378  0822               	movf	i1___flmul@b+2,w
 18628     0379  00F0               	movwf	i1__Umul8_16@multiplicand
 18629     037A  0824               	movf	i1___flmul@a,w
 18630     037B  3190  2036  3182   	fcall	i1__Umul8_16
 18631     037E  0871               	movf	?i1__Umul8_16+1,w
 18632     037F  0020               	movlb	0	; select bank0
 18633     0380  00B9               	movwf	i1___flmul@temp+1
 18634     0381  0870               	movf	?i1__Umul8_16,w
 18635     0382  00B8               	movwf	i1___flmul@temp
 18636     0383                     i1l5493:
 18637     0383  0838               	movf	i1___flmul@temp,w
 18638     0384  00A8               	movwf	??i1___flmul
 18639     0385  01A9               	clrf	??i1___flmul+1
 18640     0386  01AA               	clrf	??i1___flmul+2
 18641     0387  01AB               	clrf	??i1___flmul+3
 18642     0388  0828               	movf	??i1___flmul,w
 18643     0389  07AE               	addwf	i1___flmul@grs,f
 18644     038A  0829               	movf	??i1___flmul+1,w
 18645     038B  3DAF               	addwfc	i1___flmul@grs+1,f
 18646     038C  082A               	movf	??i1___flmul+2,w
 18647     038D  3DB0               	addwfc	i1___flmul@grs+2,f
 18648     038E  082B               	movf	??i1___flmul+3,w
 18649     038F  3DB1               	addwfc	i1___flmul@grs+3,f
 18650     0390                     i1l5495:
 18651     0390  0839               	movf	i1___flmul@temp+1,w
 18652     0391  00A8               	movwf	??i1___flmul
 18653     0392  01A9               	clrf	??i1___flmul+1
 18654     0393  01AA               	clrf	??i1___flmul+2
 18655     0394  01AB               	clrf	??i1___flmul+3
 18656     0395  0828               	movf	??i1___flmul,w
 18657     0396  07B4               	addwf	i1___flmul@prod,f
 18658     0397  0829               	movf	??i1___flmul+1,w
 18659     0398  3DB5               	addwfc	i1___flmul@prod+1,f
 18660     0399  082A               	movf	??i1___flmul+2,w
 18661     039A  3DB6               	addwfc	i1___flmul@prod+2,f
 18662     039B  082B               	movf	??i1___flmul+3,w
 18663     039C  3DB7               	addwfc	i1___flmul@prod+3,f
 18664     039D                     i1l5497:
 18665     039D  3008               	movlw	8
 18666     039E                     u654_25:
 18667     039E  35AE               	lslf	i1___flmul@grs,f
 18668     039F  0DAF               	rlf	i1___flmul@grs+1,f
 18669     03A0  0DB0               	rlf	i1___flmul@grs+2,f
 18670     03A1  0DB1               	rlf	i1___flmul@grs+3,f
 18671     03A2  0B89               	decfsz	9,f
 18672     03A3  2B9E               	goto	u654_25
 18673     03A4                     i1l5499:
 18674     03A4  0821               	movf	i1___flmul@b+1,w
 18675     03A5  00F0               	movwf	i1__Umul8_16@multiplicand
 18676     03A6  0824               	movf	i1___flmul@a,w
 18677     03A7  3190  2036  3182   	fcall	i1__Umul8_16
 18678     03AA  0871               	movf	?i1__Umul8_16+1,w
 18679     03AB  0020               	movlb	0	; select bank0
 18680     03AC  00B9               	movwf	i1___flmul@temp+1
 18681     03AD  0870               	movf	?i1__Umul8_16,w
 18682     03AE  00B8               	movwf	i1___flmul@temp
 18683     03AF                     i1l5501:
 18684     03AF  0838               	movf	i1___flmul@temp,w
 18685     03B0  07AE               	addwf	i1___flmul@grs,f
 18686     03B1  0839               	movf	i1___flmul@temp+1,w
 18687     03B2  3DAF               	addwfc	i1___flmul@grs+1,f
 18688     03B3  3000               	movlw	0
 18689     03B4  3DB0               	addwfc	i1___flmul@grs+2,f
 18690     03B5  3DB1               	addwfc	i1___flmul@grs+3,f
 18691     03B6                     i1l5503:
 18692     03B6  0820               	movf	i1___flmul@b,w
 18693     03B7  00F0               	movwf	i1__Umul8_16@multiplicand
 18694     03B8  0825               	movf	i1___flmul@a+1,w
 18695     03B9  3190  2036  3182   	fcall	i1__Umul8_16
 18696     03BC  0871               	movf	?i1__Umul8_16+1,w
 18697     03BD  0020               	movlb	0	; select bank0
 18698     03BE  00B9               	movwf	i1___flmul@temp+1
 18699     03BF  0870               	movf	?i1__Umul8_16,w
 18700     03C0  00B8               	movwf	i1___flmul@temp
 18701     03C1                     i1l5505:
 18702     03C1  0838               	movf	i1___flmul@temp,w
 18703     03C2  07AE               	addwf	i1___flmul@grs,f
 18704     03C3  0839               	movf	i1___flmul@temp+1,w
 18705     03C4  3DAF               	addwfc	i1___flmul@grs+1,f
 18706     03C5  3000               	movlw	0
 18707     03C6  3DB0               	addwfc	i1___flmul@grs+2,f
 18708     03C7  3DB1               	addwfc	i1___flmul@grs+3,f
 18709     03C8                     i1l5507:
 18710     03C8  3008               	movlw	8
 18711     03C9                     u655_25:
 18712     03C9  35AE               	lslf	i1___flmul@grs,f
 18713     03CA  0DAF               	rlf	i1___flmul@grs+1,f
 18714     03CB  0DB0               	rlf	i1___flmul@grs+2,f
 18715     03CC  0DB1               	rlf	i1___flmul@grs+3,f
 18716     03CD  0B89               	decfsz	9,f
 18717     03CE  2BC9               	goto	u655_25
 18718     03CF  0820               	movf	i1___flmul@b,w
 18719     03D0  00F0               	movwf	i1__Umul8_16@multiplicand
 18720     03D1  0824               	movf	i1___flmul@a,w
 18721     03D2  3190  2036  3182   	fcall	i1__Umul8_16
 18722     03D5  0871               	movf	?i1__Umul8_16+1,w
 18723     03D6  0020               	movlb	0	; select bank0
 18724     03D7  00B9               	movwf	i1___flmul@temp+1
 18725     03D8  0870               	movf	?i1__Umul8_16,w
 18726     03D9  00B8               	movwf	i1___flmul@temp
 18727     03DA                     i1l5509:
 18728     03DA  0838               	movf	i1___flmul@temp,w
 18729     03DB  07AE               	addwf	i1___flmul@grs,f
 18730     03DC  0839               	movf	i1___flmul@temp+1,w
 18731     03DD  3DAF               	addwfc	i1___flmul@grs+1,f
 18732     03DE  3000               	movlw	0
 18733     03DF  3DB0               	addwfc	i1___flmul@grs+2,f
 18734     03E0  3DB1               	addwfc	i1___flmul@grs+3,f
 18735     03E1                     i1l5511:
 18736     03E1  0821               	movf	i1___flmul@b+1,w
 18737     03E2  00F0               	movwf	i1__Umul8_16@multiplicand
 18738     03E3  0826               	movf	i1___flmul@a+2,w
 18739     03E4  3190  2036  3182   	fcall	i1__Umul8_16
 18740     03E7  0871               	movf	?i1__Umul8_16+1,w
 18741     03E8  0020               	movlb	0	; select bank0
 18742     03E9  00B9               	movwf	i1___flmul@temp+1
 18743     03EA  0870               	movf	?i1__Umul8_16,w
 18744     03EB  00B8               	movwf	i1___flmul@temp
 18745     03EC  0838               	movf	i1___flmul@temp,w
 18746     03ED  07B4               	addwf	i1___flmul@prod,f
 18747     03EE  0839               	movf	i1___flmul@temp+1,w
 18748     03EF  3DB5               	addwfc	i1___flmul@prod+1,f
 18749     03F0  3000               	movlw	0
 18750     03F1  3DB6               	addwfc	i1___flmul@prod+2,f
 18751     03F2  3DB7               	addwfc	i1___flmul@prod+3,f
 18752     03F3                     i1l5513:
 18753     03F3  0822               	movf	i1___flmul@b+2,w
 18754     03F4  00F0               	movwf	i1__Umul8_16@multiplicand
 18755     03F5  0825               	movf	i1___flmul@a+1,w
 18756     03F6  3190  2036  3182   	fcall	i1__Umul8_16
 18757     03F9  0871               	movf	?i1__Umul8_16+1,w
 18758     03FA  0020               	movlb	0	; select bank0
 18759     03FB  00B9               	movwf	i1___flmul@temp+1
 18760     03FC  0870               	movf	?i1__Umul8_16,w
 18761     03FD  00B8               	movwf	i1___flmul@temp
 18762     03FE                     i1l5515:
 18763     03FE  0838               	movf	i1___flmul@temp,w
 18764     03FF  07B4               	addwf	i1___flmul@prod,f
 18765     0400  0839               	movf	i1___flmul@temp+1,w
 18766     0401  3DB5               	addwfc	i1___flmul@prod+1,f
 18767     0402  3000               	movlw	0
 18768     0403  3DB6               	addwfc	i1___flmul@prod+2,f
 18769     0404  3DB7               	addwfc	i1___flmul@prod+3,f
 18770     0405  0822               	movf	i1___flmul@b+2,w
 18771     0406  00F0               	movwf	i1__Umul8_16@multiplicand
 18772     0407  0826               	movf	i1___flmul@a+2,w
 18773     0408  3190  2036  3182   	fcall	i1__Umul8_16
 18774     040B  0871               	movf	?i1__Umul8_16+1,w
 18775     040C  0020               	movlb	0	; select bank0
 18776     040D  00B9               	movwf	i1___flmul@temp+1
 18777     040E  0870               	movf	?i1__Umul8_16,w
 18778     040F  00B8               	movwf	i1___flmul@temp
 18779     0410                     i1l5517:
 18780     0410  0838               	movf	i1___flmul@temp,w
 18781     0411  00A8               	movwf	??i1___flmul
 18782     0412  0839               	movf	i1___flmul@temp+1,w
 18783     0413  00A9               	movwf	??i1___flmul+1
 18784     0414  01AA               	clrf	??i1___flmul+2
 18785     0415  01AB               	clrf	??i1___flmul+3
 18786     0416  3008               	movlw	8
 18787     0417                     u656_25:
 18788     0417  35A8               	lslf	??i1___flmul,f
 18789     0418  0DA9               	rlf	??i1___flmul+1,f
 18790     0419  0DAA               	rlf	??i1___flmul+2,f
 18791     041A  0DAB               	rlf	??i1___flmul+3,f
 18792     041B                     u656_20:
 18793     041B  0B89               	decfsz	9,f
 18794     041C  2C17               	goto	u656_25
 18795     041D  0828               	movf	??i1___flmul,w
 18796     041E  07B4               	addwf	i1___flmul@prod,f
 18797     041F  0829               	movf	??i1___flmul+1,w
 18798     0420  3DB5               	addwfc	i1___flmul@prod+1,f
 18799     0421  082A               	movf	??i1___flmul+2,w
 18800     0422  3DB6               	addwfc	i1___flmul@prod+2,f
 18801     0423  082B               	movf	??i1___flmul+3,w
 18802     0424  3DB7               	addwfc	i1___flmul@prod+3,f
 18803     0425                     i1l5519:
 18804     0425  082E               	movf	i1___flmul@grs,w
 18805     0426  00A8               	movwf	??i1___flmul
 18806     0427  082F               	movf	i1___flmul@grs+1,w
 18807     0428  00A9               	movwf	??i1___flmul+1
 18808     0429  0830               	movf	i1___flmul@grs+2,w
 18809     042A  00AA               	movwf	??i1___flmul+2
 18810     042B  0831               	movf	i1___flmul@grs+3,w
 18811     042C  00AB               	movwf	??i1___flmul+3
 18812     042D  3018               	movlw	24
 18813     042E                     u657_25:
 18814     042E  36AB               	lsrf	??i1___flmul+3,f
 18815     042F  0CAA               	rrf	??i1___flmul+2,f
 18816     0430  0CA9               	rrf	??i1___flmul+1,f
 18817     0431  0CA8               	rrf	??i1___flmul,f
 18818     0432                     u657_20:
 18819     0432  0B89               	decfsz	9,f
 18820     0433  2C2E               	goto	u657_25
 18821     0434  0828               	movf	??i1___flmul,w
 18822     0435  07B4               	addwf	i1___flmul@prod,f
 18823     0436  0829               	movf	??i1___flmul+1,w
 18824     0437  3DB5               	addwfc	i1___flmul@prod+1,f
 18825     0438  082A               	movf	??i1___flmul+2,w
 18826     0439  3DB6               	addwfc	i1___flmul@prod+2,f
 18827     043A  082B               	movf	??i1___flmul+3,w
 18828     043B  3DB7               	addwfc	i1___flmul@prod+3,f
 18829     043C                     i1l5521:
 18830     043C  3008               	movlw	8
 18831     043D                     u658_25:
 18832     043D  35AE               	lslf	i1___flmul@grs,f
 18833     043E  0DAF               	rlf	i1___flmul@grs+1,f
 18834     043F  0DB0               	rlf	i1___flmul@grs+2,f
 18835     0440  0DB1               	rlf	i1___flmul@grs+3,f
 18836     0441  0B89               	decfsz	9,f
 18837     0442  2C3D               	goto	u658_25
 18838     0443                     i1l5523:
 18839     0443  0833               	movf	i1___flmul@bexp,w
 18840     0444  0732               	addwf	i1___flmul@aexp,w
 18841     0445  00A8               	movwf	??i1___flmul
 18842     0446  01A9               	clrf	??i1___flmul+1
 18843     0447  0DA9               	rlf	??i1___flmul+1,f
 18844     0448  0828               	movf	??i1___flmul,w
 18845     0449  3E82               	addlw	130
 18846     044A  00B8               	movwf	i1___flmul@temp
 18847     044B  30FF               	movlw	255
 18848     044C  3D29               	addwfc	??i1___flmul+1,w
 18849     044D  00B9               	movwf	i1___flmul@temp+1
 18850     044E  2C66               	goto	i1l5535
 18851     044F                     i1l5525:
 18852     044F  3001               	movlw	1
 18853     0450                     u659_25:
 18854     0450  35B4               	lslf	i1___flmul@prod,f
 18855     0451  0DB5               	rlf	i1___flmul@prod+1,f
 18856     0452  0DB6               	rlf	i1___flmul@prod+2,f
 18857     0453  0DB7               	rlf	i1___flmul@prod+3,f
 18858     0454  0B89               	decfsz	9,f
 18859     0455  2C50               	goto	u659_25
 18860     0456                     i1l5527:
 18861     0456  1FB1               	btfss	i1___flmul@grs+3,7
 18862     0457  2C59               	goto	u660_21
 18863     0458  2C5A               	goto	u660_20
 18864     0459                     u660_21:
 18865     0459  2C5B               	goto	i1l5531
 18866     045A                     u660_20:
 18867     045A                     i1l5529:
 18868     045A  1434               	bsf	i1___flmul@prod,0
 18869     045B                     i1l5531:
 18870     045B  3001               	movlw	1
 18871     045C                     u661_25:
 18872     045C  35AE               	lslf	i1___flmul@grs,f
 18873     045D  0DAF               	rlf	i1___flmul@grs+1,f
 18874     045E  0DB0               	rlf	i1___flmul@grs+2,f
 18875     045F  0DB1               	rlf	i1___flmul@grs+3,f
 18876     0460  0B89               	decfsz	9,f
 18877     0461  2C5C               	goto	u661_25
 18878     0462                     i1l5533:
 18879     0462  30FF               	movlw	255
 18880     0463  07B8               	addwf	i1___flmul@temp,f
 18881     0464  30FF               	movlw	255
 18882     0465  3DB9               	addwfc	i1___flmul@temp+1,f
 18883     0466                     i1l5535:
 18884     0466  1FB6               	btfss	i1___flmul@prod+2,7
 18885     0467  2C69               	goto	u662_21
 18886     0468  2C6A               	goto	u662_20
 18887     0469                     u662_21:
 18888     0469  2C4F               	goto	i1l5525
 18889     046A                     u662_20:
 18890     046A                     i1l5537:
 18891     046A  01B2               	clrf	i1___flmul@aexp
 18892     046B                     i1l5539:
 18893     046B  1FB1               	btfss	i1___flmul@grs+3,7
 18894     046C  2C6E               	goto	u663_21
 18895     046D  2C6F               	goto	u663_20
 18896     046E                     u663_21:
 18897     046E  2C8B               	goto	i1l5547
 18898     046F                     u663_20:
 18899     046F                     i1l5541:
 18900     046F  30FF               	movlw	255
 18901     0470  052E               	andwf	i1___flmul@grs,w
 18902     0471  00A8               	movwf	??i1___flmul
 18903     0472  30FF               	movlw	255
 18904     0473  052F               	andwf	i1___flmul@grs+1,w
 18905     0474  00A9               	movwf	??i1___flmul+1
 18906     0475  30FF               	movlw	255
 18907     0476  0530               	andwf	i1___flmul@grs+2,w
 18908     0477  00AA               	movwf	??i1___flmul+2
 18909     0478  307F               	movlw	127
 18910     0479  0531               	andwf	i1___flmul@grs+3,w
 18911     047A  00AB               	movwf	??i1___flmul+3
 18912     047B  082B               	movf	??i1___flmul+3,w
 18913     047C  042A               	iorwf	??i1___flmul+2,w
 18914     047D  0429               	iorwf	??i1___flmul+1,w
 18915     047E  0428               	iorwf	??i1___flmul,w
 18916     047F  1903               	skipnz
 18917     0480  2C82               	goto	u664_21
 18918     0481  2C83               	goto	u664_20
 18919     0482                     u664_21:
 18920     0482  2C86               	goto	i1l1595
 18921     0483                     u664_20:
 18922     0483                     i1l5543:
 18923     0483  3001               	movlw	1
 18924     0484  00B2               	movwf	i1___flmul@aexp
 18925     0485  2C8B               	goto	i1l5547
 18926     0486                     i1l1595:
 18927     0486  1C34               	btfss	i1___flmul@prod,0
 18928     0487  2C89               	goto	u665_21
 18929     0488  2C8A               	goto	u665_20
 18930     0489                     u665_21:
 18931     0489  2C8B               	goto	i1l5547
 18932     048A                     u665_20:
 18933     048A  2C83               	goto	i1l5543
 18934     048B                     i1l5547:
 18935     048B  0832               	movf	i1___flmul@aexp,w
 18936     048C  1903               	btfsc	3,2
 18937     048D  2C8F               	goto	u666_21
 18938     048E  2C90               	goto	u666_20
 18939     048F                     u666_21:
 18940     048F  2CB6               	goto	i1l5557
 18941     0490                     u666_20:
 18942     0490                     i1l5549:
 18943     0490  3001               	movlw	1
 18944     0491  07B4               	addwf	i1___flmul@prod,f
 18945     0492  3000               	movlw	0
 18946     0493  3DB5               	addwfc	i1___flmul@prod+1,f
 18947     0494  3DB6               	addwfc	i1___flmul@prod+2,f
 18948     0495  3DB7               	addwfc	i1___flmul@prod+3,f
 18949     0496                     i1l5551:
 18950     0496  1C37               	btfss	i1___flmul@prod+3,0
 18951     0497  2C99               	goto	u667_21
 18952     0498  2C9A               	goto	u667_20
 18953     0499                     u667_21:
 18954     0499  2CB6               	goto	i1l5557
 18955     049A                     u667_20:
 18956     049A                     i1l5553:
 18957     049A  0834               	movf	i1___flmul@prod,w
 18958     049B  00A8               	movwf	??i1___flmul
 18959     049C  0835               	movf	i1___flmul@prod+1,w
 18960     049D  00A9               	movwf	??i1___flmul+1
 18961     049E  0836               	movf	i1___flmul@prod+2,w
 18962     049F  00AA               	movwf	??i1___flmul+2
 18963     04A0  0837               	movf	i1___flmul@prod+3,w
 18964     04A1  00AB               	movwf	??i1___flmul+3
 18965     04A2  3001               	movlw	1
 18966     04A3  00AC               	movwf	??i1___flmul+4
 18967     04A4                     u668_25:
 18968     04A4  37AB               	asrf	??i1___flmul+3,f
 18969     04A5  0CAA               	rrf	??i1___flmul+2,f
 18970     04A6  0CA9               	rrf	??i1___flmul+1,f
 18971     04A7  0CA8               	rrf	??i1___flmul,f
 18972     04A8                     u668_20:
 18973     04A8  0BAC               	decfsz	??i1___flmul+4,f
 18974     04A9  2CA4               	goto	u668_25
 18975     04AA  082B               	movf	??i1___flmul+3,w
 18976     04AB  00B7               	movwf	i1___flmul@prod+3
 18977     04AC  082A               	movf	??i1___flmul+2,w
 18978     04AD  00B6               	movwf	i1___flmul@prod+2
 18979     04AE  0829               	movf	??i1___flmul+1,w
 18980     04AF  00B5               	movwf	i1___flmul@prod+1
 18981     04B0  0828               	movf	??i1___flmul,w
 18982     04B1  00B4               	movwf	i1___flmul@prod
 18983     04B2                     i1l5555:
 18984     04B2  3001               	movlw	1
 18985     04B3  07B8               	addwf	i1___flmul@temp,f
 18986     04B4  3000               	movlw	0
 18987     04B5  3DB9               	addwfc	i1___flmul@temp+1,f
 18988     04B6                     i1l5557:
 18989     04B6  0839               	movf	i1___flmul@temp+1,w
 18990     04B7  3A80               	xorlw	128
 18991     04B8  00A8               	movwf	??i1___flmul
 18992     04B9  3080               	movlw	128
 18993     04BA  0228               	subwf	??i1___flmul,w
 18994     04BB  1D03               	skipz
 18995     04BC  2CBF               	goto	u669_25
 18996     04BD  30FF               	movlw	255
 18997     04BE  0238               	subwf	i1___flmul@temp,w
 18998     04BF                     u669_25:
 18999     04BF  1C03               	skipc
 19000     04C0  2CC2               	goto	u669_21
 19001     04C1  2CC3               	goto	u669_20
 19002     04C2                     u669_21:
 19003     04C2  2CCD               	goto	i1l5561
 19004     04C3                     u669_20:
 19005     04C3                     i1l5559:
 19006     04C3  307F               	movlw	127
 19007     04C4  0020               	movlb	0	; select bank0
 19008     04C5  00B7               	movwf	i1___flmul@prod+3
 19009     04C6  3080               	movlw	128
 19010     04C7  00B6               	movwf	i1___flmul@prod+2
 19011     04C8  3000               	movlw	0
 19012     04C9  00B5               	movwf	i1___flmul@prod+1
 19013     04CA  3000               	movlw	0
 19014     04CB  00B4               	movwf	i1___flmul@prod
 19015     04CC  2CFE               	goto	i1l1601
 19016     04CD                     i1l5561:
 19017     04CD  0020               	movlb	0	; select bank0
 19018     04CE  0839               	movf	i1___flmul@temp+1,w
 19019     04CF  3A80               	xorlw	128
 19020     04D0  00A8               	movwf	??i1___flmul
 19021     04D1  3080               	movlw	128
 19022     04D2  0228               	subwf	??i1___flmul,w
 19023     04D3  1D03               	skipz
 19024     04D4  2CD7               	goto	u670_25
 19025     04D5  3001               	movlw	1
 19026     04D6  0238               	subwf	i1___flmul@temp,w
 19027     04D7                     u670_25:
 19028     04D7  1803               	skipnc
 19029     04D8  2CDA               	goto	u670_21
 19030     04D9  2CDB               	goto	u670_20
 19031     04DA                     u670_21:
 19032     04DA  2CE6               	goto	i1l5567
 19033     04DB                     u670_20:
 19034     04DB                     i1l5563:
 19035     04DB  3000               	movlw	0
 19036     04DC  0020               	movlb	0	; select bank0
 19037     04DD  00B7               	movwf	i1___flmul@prod+3
 19038     04DE  3000               	movlw	0
 19039     04DF  00B6               	movwf	i1___flmul@prod+2
 19040     04E0  3000               	movlw	0
 19041     04E1  00B5               	movwf	i1___flmul@prod+1
 19042     04E2  3000               	movlw	0
 19043     04E3  00B4               	movwf	i1___flmul@prod
 19044     04E4                     i1l5565:
 19045     04E4  01AD               	clrf	i1___flmul@sign
 19046     04E5  2CFE               	goto	i1l1601
 19047     04E6                     i1l5567:
 19048     04E6  0020               	movlb	0	; select bank0
 19049     04E7  0838               	movf	i1___flmul@temp,w
 19050     04E8  00B3               	movwf	i1___flmul@bexp
 19051     04E9  30FF               	movlw	255
 19052     04EA  05B4               	andwf	i1___flmul@prod,f
 19053     04EB  30FF               	movlw	255
 19054     04EC  05B5               	andwf	i1___flmul@prod+1,f
 19055     04ED  307F               	movlw	127
 19056     04EE  05B6               	andwf	i1___flmul@prod+2,f
 19057     04EF  3000               	movlw	0
 19058     04F0  05B7               	andwf	i1___flmul@prod+3,f
 19059     04F1                     i1l5569:
 19060     04F1  1C33               	btfss	i1___flmul@bexp,0
 19061     04F2  2CF4               	goto	u671_21
 19062     04F3  2CF5               	goto	u671_20
 19063     04F4                     u671_21:
 19064     04F4  2CF6               	goto	i1l5573
 19065     04F5                     u671_20:
 19066     04F5                     i1l5571:
 19067     04F5  17B6               	bsf	i1___flmul@prod+2,7
 19068     04F6                     i1l5573:
 19069     04F6  0833               	movf	i1___flmul@bexp,w
 19070     04F7  00A8               	movwf	??i1___flmul
 19071     04F8  3001               	movlw	1
 19072     04F9                     u672_25:
 19073     04F9  36A8               	lsrf	??i1___flmul,f
 19074     04FA  0B89               	decfsz	9,f
 19075     04FB  2CF9               	goto	u672_25
 19076     04FC  0828               	movf	??i1___flmul,w
 19077     04FD  00B7               	movwf	i1___flmul@prod+3
 19078     04FE                     i1l1601:
 19079     04FE  082D               	movf	i1___flmul@sign,w
 19080     04FF  04B7               	iorwf	i1___flmul@prod+3,f
 19081     0500                     i1l5575:
 19082     0500  0837               	movf	i1___flmul@prod+3,w
 19083     0501  00A3               	movwf	?i1___flmul+3
 19084     0502  0836               	movf	i1___flmul@prod+2,w
 19085     0503  00A2               	movwf	?i1___flmul+2
 19086     0504  0835               	movf	i1___flmul@prod+1,w
 19087     0505  00A1               	movwf	?i1___flmul+1
 19088     0506  0834               	movf	i1___flmul@prod,w
 19089     0507  00A0               	movwf	?i1___flmul
 19090     0508                     i1l1589:
 19091     0508  0008               	return
 19092     0509                     __end_ofi1___flmul:
 19093                           
 19094                           	psect	text76
 19095     1036                     __ptext76:	
 19096 ;; *************** function i1__Umul8_16 *****************
 19097 ;; Defined at:
 19098 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\Umul8_16.c"
 19099 ;; Parameters:    Size  Location     Type
 19100 ;;  multiplier      1    wreg     unsigned char 
 19101 ;;  multiplicand    1    0[COMMON] unsigned char 
 19102 ;; Auto vars:     Size  Location     Type
 19103 ;;  multiplier      1    8[COMMON] unsigned char 
 19104 ;;  word_mpld       2    6[COMMON] unsigned short 
 19105 ;;  product         2    4[COMMON] unsigned short 
 19106 ;; Return value:  Size  Location     Type
 19107 ;;                  2    0[COMMON] unsigned int 
 19108 ;; Registers used:
 19109 ;;		wreg, status,2, status,0
 19110 ;; Tracked objects:
 19111 ;;		On entry : 0/0
 19112 ;;		On exit  : 0/0
 19113 ;;		Unchanged: 0/0
 19114 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 19115 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 19116 ;;      Locals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 19117 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 19118 ;;      Totals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 19119 ;;Total ram usage:        9 bytes
 19120 ;; Hardware stack levels used: 1
 19121 ;; This function calls:
 19122 ;;		Nothing
 19123 ;; This function is called by:
 19124 ;;		i1___flmul
 19125 ;; This function uses a non-reentrant model
 19126 ;;
 19127                           
 19128     1036                     i1__Umul8_16:	
 19129                           ;psect for function i1__Umul8_16
 19130                           
 19131                           
 19132                           ;incstack = 0
 19133                           ; Regs used in i1__Umul8_16: [wreg+status,2+status,0]
 19134                           ;i1__Umul8_16@multiplier stored from wreg
 19135     1036  00F8               	movwf	i1__Umul8_16@multiplier
 19136     1037                     i1l4603:
 19137     1037  01F4               	clrf	i1__Umul8_16@product
 19138     1038  01F5               	clrf	i1__Umul8_16@product+1
 19139     1039                     i1l4605:
 19140     1039  0870               	movf	i1__Umul8_16@multiplicand,w
 19141     103A  00F2               	movwf	??i1__Umul8_16
 19142     103B  01F3               	clrf	??i1__Umul8_16+1
 19143     103C  0872               	movf	??i1__Umul8_16,w
 19144     103D  00F6               	movwf	i1__Umul8_16@word_mpld
 19145     103E  0873               	movf	??i1__Umul8_16+1,w
 19146     103F  00F7               	movwf	i1__Umul8_16@word_mpld+1
 19147     1040                     i1l4607:
 19148     1040  1C78               	btfss	i1__Umul8_16@multiplier,0
 19149     1041  2843               	goto	u462_21
 19150     1042  2844               	goto	u462_20
 19151     1043                     u462_21:
 19152     1043  2848               	goto	i1l1608
 19153     1044                     u462_20:
 19154     1044                     i1l4609:
 19155     1044  0876               	movf	i1__Umul8_16@word_mpld,w
 19156     1045  07F4               	addwf	i1__Umul8_16@product,f
 19157     1046  0877               	movf	i1__Umul8_16@word_mpld+1,w
 19158     1047  3DF5               	addwfc	i1__Umul8_16@product+1,f
 19159     1048                     i1l1608:
 19160     1048  3001               	movlw	1
 19161     1049                     u463_25:
 19162     1049  35F6               	lslf	i1__Umul8_16@word_mpld,f
 19163     104A  0DF7               	rlf	i1__Umul8_16@word_mpld+1,f
 19164     104B  0B89               	decfsz	9,f
 19165     104C  2849               	goto	u463_25
 19166     104D  1003               	clrc
 19167     104E  0CF8               	rrf	i1__Umul8_16@multiplier,f
 19168     104F                     i1l4611:
 19169     104F  0878               	movf	i1__Umul8_16@multiplier,w
 19170     1050  1D03               	btfss	3,2
 19171     1051  2853               	goto	u464_21
 19172     1052  2854               	goto	u464_20
 19173     1053                     u464_21:
 19174     1053  2840               	goto	i1l4607
 19175     1054                     u464_20:
 19176     1054                     i1l4613:
 19177     1054  0875               	movf	i1__Umul8_16@product+1,w
 19178     1055  00F1               	movwf	?i1__Umul8_16+1
 19179     1056  0874               	movf	i1__Umul8_16@product,w
 19180     1057  00F0               	movwf	?i1__Umul8_16
 19181     1058                     i1l1610:
 19182     1058  0008               	return
 19183     1059                     __end_ofi1__Umul8_16:
 19184                           
 19185                           	psect	text77
 19186     0DF4                     __ptext77:	
 19187 ;; *************** function i1___fladd *****************
 19188 ;; Defined at:
 19189 ;;		line 10 in file "C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\sprcadd.c"
 19190 ;; Parameters:    Size  Location     Type
 19191 ;;  b               4   26[BANK0 ] unsigned int 
 19192 ;;  a               4   30[BANK0 ] unsigned int 
 19193 ;; Auto vars:     Size  Location     Type
 19194 ;;  grs             1   45[BANK0 ] unsigned char 
 19195 ;;  bexp            1   44[BANK0 ] unsigned char 
 19196 ;;  aexp            1   43[BANK0 ] unsigned char 
 19197 ;;  signs           1   42[BANK0 ] unsigned char 
 19198 ;; Return value:  Size  Location     Type
 19199 ;;                  4   26[BANK0 ] unsigned char 
 19200 ;; Registers used:
 19201 ;;		wreg, status,2, status,0
 19202 ;; Tracked objects:
 19203 ;;		On entry : 0/0
 19204 ;;		On exit  : 0/0
 19205 ;;		Unchanged: 0/0
 19206 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 19207 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0
 19208 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
 19209 ;;      Temps:          0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0
 19210 ;;      Totals:         0      20       0       0       0       0       0       0       0       0       0       0       
      +0       0
 19211 ;;Total ram usage:       20 bytes
 19212 ;; Hardware stack levels used: 1
 19213 ;; This function calls:
 19214 ;;		Nothing
 19215 ;; This function is called by:
 19216 ;;		_controller
 19217 ;; This function uses a non-reentrant model
 19218 ;;
 19219                           
 19220     0DF4                     i1___fladd:	
 19221                           ;psect for function i1___fladd
 19222                           
 19223     0DF4                     i1l5243:	
 19224                           ;incstack = 0
 19225                           ; Regs used in i1___fladd: [wreg+status,2+status,0]
 19226                           
 19227     0DF4  0020               	movlb	0	; select bank0
 19228     0DF5  083D               	movf	i1___fladd@b+3,w
 19229     0DF6  3980               	andlw	128
 19230     0DF7  00CA               	movwf	i1___fladd@signs
 19231     0DF8                     i1l5245:
 19232     0DF8  353D               	lslf	i1___fladd@b+3,w
 19233     0DF9  00CC               	movwf	i1___fladd@bexp
 19234     0DFA                     i1l5247:
 19235     0DFA  1FBC               	btfss	i1___fladd@b+2,7
 19236     0DFB  2DFD               	goto	u600_21
 19237     0DFC  2DFE               	goto	u600_20
 19238     0DFD                     u600_21:
 19239     0DFD  2DFF               	goto	i1l5251
 19240     0DFE                     u600_20:
 19241     0DFE                     i1l5249:
 19242     0DFE  144C               	bsf	i1___fladd@bexp,0
 19243     0DFF                     i1l5251:
 19244     0DFF  084C               	movf	i1___fladd@bexp,w
 19245     0E00  1903               	btfsc	3,2
 19246     0E01  2E03               	goto	u601_21
 19247     0E02  2E04               	goto	u601_20
 19248     0E03                     u601_21:
 19249     0E03  2E14               	goto	i1l5261
 19250     0E04                     u601_20:
 19251     0E04                     i1l5253:
 19252     0E04  0A4C               	incf	i1___fladd@bexp,w
 19253     0E05  1D03               	btfss	3,2
 19254     0E06  2E08               	goto	u602_21
 19255     0E07  2E09               	goto	u602_20
 19256     0E08                     u602_21:
 19257     0E08  2E11               	goto	i1l5257
 19258     0E09                     u602_20:
 19259     0E09                     i1l5255:
 19260     0E09  3000               	movlw	0
 19261     0E0A  00BD               	movwf	i1___fladd@b+3
 19262     0E0B  3000               	movlw	0
 19263     0E0C  00BC               	movwf	i1___fladd@b+2
 19264     0E0D  3000               	movlw	0
 19265     0E0E  00BB               	movwf	i1___fladd@b+1
 19266     0E0F  3000               	movlw	0
 19267     0E10  00BA               	movwf	i1___fladd@b
 19268     0E11                     i1l5257:
 19269     0E11  17BC               	bsf	i1___fladd@b+2,7
 19270     0E12                     i1l5259:
 19271     0E12  01BD               	clrf	i1___fladd@b+3
 19272     0E13  2E1C               	goto	i1l5263
 19273     0E14                     i1l5261:
 19274     0E14  3000               	movlw	0
 19275     0E15  00BD               	movwf	i1___fladd@b+3
 19276     0E16  3000               	movlw	0
 19277     0E17  00BC               	movwf	i1___fladd@b+2
 19278     0E18  3000               	movlw	0
 19279     0E19  00BB               	movwf	i1___fladd@b+1
 19280     0E1A  3000               	movlw	0
 19281     0E1B  00BA               	movwf	i1___fladd@b
 19282     0E1C                     i1l5263:
 19283     0E1C  0841               	movf	i1___fladd@a+3,w
 19284     0E1D  3980               	andlw	128
 19285     0E1E  00CB               	movwf	i1___fladd@aexp
 19286     0E1F                     i1l5265:
 19287     0E1F  084B               	movf	i1___fladd@aexp,w
 19288     0E20  064A               	xorwf	i1___fladd@signs,w
 19289     0E21  1903               	skipnz
 19290     0E22  2E24               	goto	u603_21
 19291     0E23  2E25               	goto	u603_20
 19292     0E24                     u603_21:
 19293     0E24  2E26               	goto	i1l5269
 19294     0E25                     u603_20:
 19295     0E25                     i1l5267:
 19296     0E25  174A               	bsf	i1___fladd@signs,6
 19297     0E26                     i1l5269:
 19298     0E26  3541               	lslf	i1___fladd@a+3,w
 19299     0E27  00CB               	movwf	i1___fladd@aexp
 19300     0E28                     i1l5271:
 19301     0E28  1FC0               	btfss	i1___fladd@a+2,7
 19302     0E29  2E2B               	goto	u604_21
 19303     0E2A  2E2C               	goto	u604_20
 19304     0E2B                     u604_21:
 19305     0E2B  2E2D               	goto	i1l5275
 19306     0E2C                     u604_20:
 19307     0E2C                     i1l5273:
 19308     0E2C  144B               	bsf	i1___fladd@aexp,0
 19309     0E2D                     i1l5275:
 19310     0E2D  084B               	movf	i1___fladd@aexp,w
 19311     0E2E  1903               	btfsc	3,2
 19312     0E2F  2E31               	goto	u605_21
 19313     0E30  2E32               	goto	u605_20
 19314     0E31                     u605_21:
 19315     0E31  2E42               	goto	i1l5285
 19316     0E32                     u605_20:
 19317     0E32                     i1l5277:
 19318     0E32  0A4B               	incf	i1___fladd@aexp,w
 19319     0E33  1D03               	btfss	3,2
 19320     0E34  2E36               	goto	u606_21
 19321     0E35  2E37               	goto	u606_20
 19322     0E36                     u606_21:
 19323     0E36  2E3F               	goto	i1l5281
 19324     0E37                     u606_20:
 19325     0E37                     i1l5279:
 19326     0E37  3000               	movlw	0
 19327     0E38  00C1               	movwf	i1___fladd@a+3
 19328     0E39  3000               	movlw	0
 19329     0E3A  00C0               	movwf	i1___fladd@a+2
 19330     0E3B  3000               	movlw	0
 19331     0E3C  00BF               	movwf	i1___fladd@a+1
 19332     0E3D  3000               	movlw	0
 19333     0E3E  00BE               	movwf	i1___fladd@a
 19334     0E3F                     i1l5281:
 19335     0E3F  17C0               	bsf	i1___fladd@a+2,7
 19336     0E40                     i1l5283:
 19337     0E40  01C1               	clrf	i1___fladd@a+3
 19338     0E41  2E4A               	goto	i1l1493
 19339     0E42                     i1l5285:
 19340     0E42  3000               	movlw	0
 19341     0E43  00C1               	movwf	i1___fladd@a+3
 19342     0E44  3000               	movlw	0
 19343     0E45  00C0               	movwf	i1___fladd@a+2
 19344     0E46  3000               	movlw	0
 19345     0E47  00BF               	movwf	i1___fladd@a+1
 19346     0E48  3000               	movlw	0
 19347     0E49  00BE               	movwf	i1___fladd@a
 19348     0E4A                     i1l1493:
 19349     0E4A  084C               	movf	i1___fladd@bexp,w
 19350     0E4B  024B               	subwf	i1___fladd@aexp,w
 19351     0E4C  1803               	skipnc
 19352     0E4D  2E4F               	goto	u607_21
 19353     0E4E  2E50               	goto	u607_20
 19354     0E4F                     u607_21:
 19355     0E4F  2E74               	goto	i1l5321
 19356     0E50                     u607_20:
 19357     0E50                     i1l5287:
 19358     0E50  1F4A               	btfss	i1___fladd@signs,6
 19359     0E51  2E53               	goto	u608_21
 19360     0E52  2E54               	goto	u608_20
 19361     0E53                     u608_21:
 19362     0E53  2E56               	goto	i1l5291
 19363     0E54                     u608_20:
 19364     0E54                     i1l5289:
 19365     0E54  3080               	movlw	128
 19366     0E55  06CA               	xorwf	i1___fladd@signs,f
 19367     0E56                     i1l5291:
 19368     0E56  084C               	movf	i1___fladd@bexp,w
 19369     0E57  00CD               	movwf	i1___fladd@grs
 19370     0E58                     i1l5293:
 19371     0E58  084B               	movf	i1___fladd@aexp,w
 19372     0E59  00CC               	movwf	i1___fladd@bexp
 19373     0E5A                     i1l5295:
 19374     0E5A  084D               	movf	i1___fladd@grs,w
 19375     0E5B  00CB               	movwf	i1___fladd@aexp
 19376     0E5C                     i1l5297:
 19377     0E5C  083A               	movf	i1___fladd@b,w
 19378     0E5D  00CD               	movwf	i1___fladd@grs
 19379     0E5E                     i1l5299:
 19380     0E5E  083E               	movf	i1___fladd@a,w
 19381     0E5F  00BA               	movwf	i1___fladd@b
 19382     0E60                     i1l5301:
 19383     0E60  084D               	movf	i1___fladd@grs,w
 19384     0E61  00BE               	movwf	i1___fladd@a
 19385     0E62                     i1l5303:
 19386     0E62  083B               	movf	i1___fladd@b+1,w
 19387     0E63  00CD               	movwf	i1___fladd@grs
 19388     0E64                     i1l5305:
 19389     0E64  083F               	movf	i1___fladd@a+1,w
 19390     0E65  00BB               	movwf	i1___fladd@b+1
 19391     0E66                     i1l5307:
 19392     0E66  084D               	movf	i1___fladd@grs,w
 19393     0E67  00BF               	movwf	i1___fladd@a+1
 19394     0E68                     i1l5309:
 19395     0E68  083C               	movf	i1___fladd@b+2,w
 19396     0E69  00CD               	movwf	i1___fladd@grs
 19397     0E6A                     i1l5311:
 19398     0E6A  0840               	movf	i1___fladd@a+2,w
 19399     0E6B  00BC               	movwf	i1___fladd@b+2
 19400     0E6C                     i1l5313:
 19401     0E6C  084D               	movf	i1___fladd@grs,w
 19402     0E6D  00C0               	movwf	i1___fladd@a+2
 19403     0E6E                     i1l5315:
 19404     0E6E  083D               	movf	i1___fladd@b+3,w
 19405     0E6F  00CD               	movwf	i1___fladd@grs
 19406     0E70                     i1l5317:
 19407     0E70  0841               	movf	i1___fladd@a+3,w
 19408     0E71  00BD               	movwf	i1___fladd@b+3
 19409     0E72                     i1l5319:
 19410     0E72  084D               	movf	i1___fladd@grs,w
 19411     0E73  00C1               	movwf	i1___fladd@a+3
 19412     0E74                     i1l5321:
 19413     0E74  01CD               	clrf	i1___fladd@grs
 19414     0E75                     i1l5323:
 19415     0E75  084B               	movf	i1___fladd@aexp,w
 19416     0E76  00C2               	movwf	??i1___fladd
 19417     0E77  01C3               	clrf	??i1___fladd+1
 19418     0E78  0843               	movf	??i1___fladd+1,w
 19419     0E79  00C5               	movwf	??i1___fladd+3
 19420     0E7A  084C               	movf	i1___fladd@bexp,w
 19421     0E7B  0242               	subwf	??i1___fladd,w
 19422     0E7C  00C4               	movwf	??i1___fladd+2
 19423     0E7D  1C03               	skipc
 19424     0E7E  03C5               	decf	??i1___fladd+3,f
 19425     0E7F  0845               	movf	??i1___fladd+3,w
 19426     0E80  3A80               	xorlw	128
 19427     0E81  00C6               	movwf	??i1___fladd+4
 19428     0E82  3080               	movlw	128
 19429     0E83  0246               	subwf	??i1___fladd+4,w
 19430     0E84  1D03               	skipz
 19431     0E85  2E88               	goto	u609_25
 19432     0E86  301A               	movlw	26
 19433     0E87  0244               	subwf	??i1___fladd+2,w
 19434     0E88                     u609_25:
 19435     0E88  1C03               	skipc
 19436     0E89  2E8B               	goto	u609_21
 19437     0E8A  2E8C               	goto	u609_20
 19438     0E8B                     u609_21:
 19439     0E8B  2EC2               	goto	i1l5339
 19440     0E8C                     u609_20:
 19441     0E8C                     i1l5325:
 19442     0E8C  0020               	movlb	0	; select bank0
 19443     0E8D  083D               	movf	i1___fladd@b+3,w
 19444     0E8E  043C               	iorwf	i1___fladd@b+2,w
 19445     0E8F  043B               	iorwf	i1___fladd@b+1,w
 19446     0E90  043A               	iorwf	i1___fladd@b,w
 19447     0E91  1D03               	skipz
 19448     0E92  2E94               	goto	u610_21
 19449     0E93  2E96               	goto	u610_20
 19450     0E94                     u610_21:
 19451     0E94  3001               	movlw	1
 19452     0E95  2E97               	goto	u611_20
 19453     0E96                     u610_20:
 19454     0E96  3000               	movlw	0
 19455     0E97                     u611_20:
 19456     0E97  00CD               	movwf	i1___fladd@grs
 19457     0E98  3000               	movlw	0
 19458     0E99  00BD               	movwf	i1___fladd@b+3
 19459     0E9A  3000               	movlw	0
 19460     0E9B  00BC               	movwf	i1___fladd@b+2
 19461     0E9C  3000               	movlw	0
 19462     0E9D  00BB               	movwf	i1___fladd@b+1
 19463     0E9E  3000               	movlw	0
 19464     0E9F  00BA               	movwf	i1___fladd@b
 19465     0EA0  084B               	movf	i1___fladd@aexp,w
 19466     0EA1  00CC               	movwf	i1___fladd@bexp
 19467     0EA2  2EC9               	goto	i1l1497
 19468     0EA3                     i1l1499:
 19469     0EA3  1C4D               	btfss	i1___fladd@grs,0
 19470     0EA4  2EA6               	goto	u612_21
 19471     0EA5  2EA7               	goto	u612_20
 19472     0EA6                     u612_21:
 19473     0EA6  2EB1               	goto	i1l5329
 19474     0EA7                     u612_20:
 19475     0EA7                     i1l5327:
 19476     0EA7  084D               	movf	i1___fladd@grs,w
 19477     0EA8  00C2               	movwf	??i1___fladd
 19478     0EA9  3001               	movlw	1
 19479     0EAA                     u613_25:
 19480     0EAA  36C2               	lsrf	??i1___fladd,f
 19481     0EAB  0B89               	decfsz	9,f
 19482     0EAC  2EAA               	goto	u613_25
 19483     0EAD  0842               	movf	??i1___fladd,w
 19484     0EAE  3801               	iorlw	1
 19485     0EAF  00CD               	movwf	i1___fladd@grs
 19486     0EB0  2EB3               	goto	i1l5331
 19487     0EB1                     i1l5329:
 19488     0EB1  1003               	clrc
 19489     0EB2  0CCD               	rrf	i1___fladd@grs,f
 19490     0EB3                     i1l5331:
 19491     0EB3  1C3A               	btfss	i1___fladd@b,0
 19492     0EB4  2EB6               	goto	u614_21
 19493     0EB5  2EB7               	goto	u614_20
 19494     0EB6                     u614_21:
 19495     0EB6  2EB8               	goto	i1l5335
 19496     0EB7                     u614_20:
 19497     0EB7                     i1l5333:
 19498     0EB7  17CD               	bsf	i1___fladd@grs,7
 19499     0EB8                     i1l5335:
 19500     0EB8  3001               	movlw	1
 19501     0EB9  00C2               	movwf	??i1___fladd
 19502     0EBA                     u615_25:
 19503     0EBA  37BD               	asrf	i1___fladd@b+3,f
 19504     0EBB  0CBC               	rrf	i1___fladd@b+2,f
 19505     0EBC  0CBB               	rrf	i1___fladd@b+1,f
 19506     0EBD  0CBA               	rrf	i1___fladd@b,f
 19507     0EBE  0BC2               	decfsz	??i1___fladd& (0+127),f
 19508     0EBF  2EBA               	goto	u615_25
 19509     0EC0                     i1l5337:
 19510     0EC0  3001               	movlw	1
 19511     0EC1  07CC               	addwf	i1___fladd@bexp,f
 19512     0EC2                     i1l5339:
 19513     0EC2  0020               	movlb	0	; select bank0
 19514     0EC3  084B               	movf	i1___fladd@aexp,w
 19515     0EC4  024C               	subwf	i1___fladd@bexp,w
 19516     0EC5  1C03               	skipc
 19517     0EC6  2EC8               	goto	u616_21
 19518     0EC7  2EC9               	goto	u616_20
 19519     0EC8                     u616_21:
 19520     0EC8  2EA3               	goto	i1l1499
 19521     0EC9                     u616_20:
 19522     0EC9                     i1l1497:
 19523     0EC9  1B4A               	btfsc	i1___fladd@signs,6
 19524     0ECA  2ECC               	goto	u617_21
 19525     0ECB  2ECD               	goto	u617_20
 19526     0ECC                     u617_21:
 19527     0ECC  2F07               	goto	i1l5365
 19528     0ECD                     u617_20:
 19529     0ECD                     i1l5341:
 19530     0ECD  084C               	movf	i1___fladd@bexp,w
 19531     0ECE  1D03               	btfss	3,2
 19532     0ECF  2ED1               	goto	u618_21
 19533     0ED0  2ED2               	goto	u618_20
 19534     0ED1                     u618_21:
 19535     0ED1  2EDB               	goto	i1l5347
 19536     0ED2                     u618_20:
 19537     0ED2                     i1l5343:
 19538     0ED2  3000               	movlw	0
 19539     0ED3  00BD               	movwf	?i1___fladd+3
 19540     0ED4  3000               	movlw	0
 19541     0ED5  00BC               	movwf	?i1___fladd+2
 19542     0ED6  3000               	movlw	0
 19543     0ED7  00BB               	movwf	?i1___fladd+1
 19544     0ED8  3000               	movlw	0
 19545     0ED9  00BA               	movwf	?i1___fladd
 19546     0EDA  2FFF               	goto	i1l1506
 19547     0EDB                     i1l5347:
 19548     0EDB  083E               	movf	i1___fladd@a,w
 19549     0EDC  07BA               	addwf	i1___fladd@b,f
 19550     0EDD  083F               	movf	i1___fladd@a+1,w
 19551     0EDE  3DBB               	addwfc	i1___fladd@b+1,f
 19552     0EDF  0840               	movf	i1___fladd@a+2,w
 19553     0EE0  3DBC               	addwfc	i1___fladd@b+2,f
 19554     0EE1  0841               	movf	i1___fladd@a+3,w
 19555     0EE2  3DBD               	addwfc	i1___fladd@b+3,f
 19556     0EE3                     i1l5349:
 19557     0EE3  1C3D               	btfss	i1___fladd@b+3,0
 19558     0EE4  2EE6               	goto	u619_21
 19559     0EE5  2EE7               	goto	u619_20
 19560     0EE6                     u619_21:
 19561     0EE6  2F91               	goto	i1l5401
 19562     0EE7                     u619_20:
 19563     0EE7                     i1l5351:
 19564     0EE7  1C4D               	btfss	i1___fladd@grs,0
 19565     0EE8  2EEA               	goto	u620_21
 19566     0EE9  2EEB               	goto	u620_20
 19567     0EEA                     u620_21:
 19568     0EEA  2EF5               	goto	i1l5355
 19569     0EEB                     u620_20:
 19570     0EEB                     i1l5353:
 19571     0EEB  084D               	movf	i1___fladd@grs,w
 19572     0EEC  00C2               	movwf	??i1___fladd
 19573     0EED  3001               	movlw	1
 19574     0EEE                     u621_25:
 19575     0EEE  36C2               	lsrf	??i1___fladd,f
 19576     0EEF  0B89               	decfsz	9,f
 19577     0EF0  2EEE               	goto	u621_25
 19578     0EF1  0842               	movf	??i1___fladd,w
 19579     0EF2  3801               	iorlw	1
 19580     0EF3  00CD               	movwf	i1___fladd@grs
 19581     0EF4  2EF7               	goto	i1l5357
 19582     0EF5                     i1l5355:
 19583     0EF5  1003               	clrc
 19584     0EF6  0CCD               	rrf	i1___fladd@grs,f
 19585     0EF7                     i1l5357:
 19586     0EF7  1C3A               	btfss	i1___fladd@b,0
 19587     0EF8  2EFA               	goto	u622_21
 19588     0EF9  2EFB               	goto	u622_20
 19589     0EFA                     u622_21:
 19590     0EFA  2EFC               	goto	i1l5361
 19591     0EFB                     u622_20:
 19592     0EFB                     i1l5359:
 19593     0EFB  17CD               	bsf	i1___fladd@grs,7
 19594     0EFC                     i1l5361:
 19595     0EFC  3001               	movlw	1
 19596     0EFD  00C2               	movwf	??i1___fladd
 19597     0EFE                     u623_25:
 19598     0EFE  37BD               	asrf	i1___fladd@b+3,f
 19599     0EFF  0CBC               	rrf	i1___fladd@b+2,f
 19600     0F00  0CBB               	rrf	i1___fladd@b+1,f
 19601     0F01  0CBA               	rrf	i1___fladd@b,f
 19602     0F02  0BC2               	decfsz	??i1___fladd& (0+127),f
 19603     0F03  2EFE               	goto	u623_25
 19604     0F04                     i1l5363:
 19605     0F04  3001               	movlw	1
 19606     0F05  07CC               	addwf	i1___fladd@bexp,f
 19607     0F06  2F91               	goto	i1l5401
 19608     0F07                     i1l5365:
 19609     0F07  083D               	movf	i1___fladd@b+3,w
 19610     0F08  3A80               	xorlw	128
 19611     0F09  00C2               	movwf	??i1___fladd
 19612     0F0A  0841               	movf	i1___fladd@a+3,w
 19613     0F0B  3A80               	xorlw	128
 19614     0F0C  0242               	subwf	??i1___fladd,w
 19615     0F0D  1D03               	skipz
 19616     0F0E  2F19               	goto	u624_23
 19617     0F0F  0840               	movf	i1___fladd@a+2,w
 19618     0F10  023C               	subwf	i1___fladd@b+2,w
 19619     0F11  1D03               	skipz
 19620     0F12  2F19               	goto	u624_23
 19621     0F13  083F               	movf	i1___fladd@a+1,w
 19622     0F14  023B               	subwf	i1___fladd@b+1,w
 19623     0F15  1D03               	skipz
 19624     0F16  2F19               	goto	u624_23
 19625     0F17  083E               	movf	i1___fladd@a,w
 19626     0F18  023A               	subwf	i1___fladd@b,w
 19627     0F19                     u624_23:
 19628     0F19  1803               	skipnc
 19629     0F1A  2F1C               	goto	u624_21
 19630     0F1B  2F1D               	goto	u624_20
 19631     0F1C                     u624_21:
 19632     0F1C  2F52               	goto	i1l5377
 19633     0F1D                     u624_20:
 19634     0F1D                     i1l5367:
 19635     0F1D  30FF               	movlw	255
 19636     0F1E  00C2               	movwf	??i1___fladd
 19637     0F1F  30FF               	movlw	255
 19638     0F20  00C3               	movwf	??i1___fladd+1
 19639     0F21  30FF               	movlw	255
 19640     0F22  00C4               	movwf	??i1___fladd+2
 19641     0F23  30FF               	movlw	255
 19642     0F24  00C5               	movwf	??i1___fladd+3
 19643     0F25  083A               	movf	i1___fladd@b,w
 19644     0F26  023E               	subwf	i1___fladd@a,w
 19645     0F27  00C6               	movwf	??i1___fladd+4
 19646     0F28  083B               	movf	i1___fladd@b+1,w
 19647     0F29  3B3F               	subwfb	i1___fladd@a+1,w
 19648     0F2A  00C7               	movwf	??i1___fladd+5
 19649     0F2B  083C               	movf	i1___fladd@b+2,w
 19650     0F2C  3B40               	subwfb	i1___fladd@a+2,w
 19651     0F2D  00C8               	movwf	??i1___fladd+6
 19652     0F2E  083D               	movf	i1___fladd@b+3,w
 19653     0F2F  3B41               	subwfb	i1___fladd@a+3,w
 19654     0F30  00C9               	movwf	??i1___fladd+7
 19655     0F31  0846               	movf	??i1___fladd+4,w
 19656     0F32  07C2               	addwf	??i1___fladd,f
 19657     0F33  0847               	movf	??i1___fladd+5,w
 19658     0F34  3DC3               	addwfc	??i1___fladd+1,f
 19659     0F35  0848               	movf	??i1___fladd+6,w
 19660     0F36  3DC4               	addwfc	??i1___fladd+2,f
 19661     0F37  0849               	movf	??i1___fladd+7,w
 19662     0F38  3DC5               	addwfc	??i1___fladd+3,f
 19663     0F39  0845               	movf	??i1___fladd+3,w
 19664     0F3A  00BD               	movwf	i1___fladd@b+3
 19665     0F3B  0844               	movf	??i1___fladd+2,w
 19666     0F3C  00BC               	movwf	i1___fladd@b+2
 19667     0F3D  0843               	movf	??i1___fladd+1,w
 19668     0F3E  00BB               	movwf	i1___fladd@b+1
 19669     0F3F  0842               	movf	??i1___fladd,w
 19670     0F40  00BA               	movwf	i1___fladd@b
 19671     0F41                     i1l5369:
 19672     0F41  3080               	movlw	128
 19673     0F42  06CA               	xorwf	i1___fladd@signs,f
 19674     0F43                     i1l5371:
 19675     0F43  034D               	decf	i1___fladd@grs,w
 19676     0F44  3AFF               	xorlw	255
 19677     0F45  00CD               	movwf	i1___fladd@grs
 19678     0F46                     i1l5373:
 19679     0F46  084D               	movf	i1___fladd@grs,w
 19680     0F47  1D03               	btfss	3,2
 19681     0F48  2F4A               	goto	u625_21
 19682     0F49  2F4B               	goto	u625_20
 19683     0F4A                     u625_21:
 19684     0F4A  2F5A               	goto	i1l1514
 19685     0F4B                     u625_20:
 19686     0F4B                     i1l5375:
 19687     0F4B  3001               	movlw	1
 19688     0F4C  07BA               	addwf	i1___fladd@b,f
 19689     0F4D  3000               	movlw	0
 19690     0F4E  3DBB               	addwfc	i1___fladd@b+1,f
 19691     0F4F  3DBC               	addwfc	i1___fladd@b+2,f
 19692     0F50  3DBD               	addwfc	i1___fladd@b+3,f
 19693     0F51  2F5A               	goto	i1l1514
 19694     0F52                     i1l5377:
 19695     0F52  083E               	movf	i1___fladd@a,w
 19696     0F53  02BA               	subwf	i1___fladd@b,f
 19697     0F54  083F               	movf	i1___fladd@a+1,w
 19698     0F55  3BBB               	subwfb	i1___fladd@b+1,f
 19699     0F56  0840               	movf	i1___fladd@a+2,w
 19700     0F57  3BBC               	subwfb	i1___fladd@b+2,f
 19701     0F58  0841               	movf	i1___fladd@a+3,w
 19702     0F59  3BBD               	subwfb	i1___fladd@b+3,f
 19703     0F5A                     i1l1514:
 19704     0F5A  083D               	movf	i1___fladd@b+3,w
 19705     0F5B  043C               	iorwf	i1___fladd@b+2,w
 19706     0F5C  043B               	iorwf	i1___fladd@b+1,w
 19707     0F5D  043A               	iorwf	i1___fladd@b,w
 19708     0F5E  1D03               	skipz
 19709     0F5F  2F61               	goto	u626_21
 19710     0F60  2F62               	goto	u626_20
 19711     0F61                     u626_21:
 19712     0F61  2F8D               	goto	i1l5399
 19713     0F62                     u626_20:
 19714     0F62                     i1l5379:
 19715     0F62  084D               	movf	i1___fladd@grs,w
 19716     0F63  1D03               	btfss	3,2
 19717     0F64  2F66               	goto	u627_21
 19718     0F65  2F67               	goto	u627_20
 19719     0F66                     u627_21:
 19720     0F66  2F8D               	goto	i1l5399
 19721     0F67                     u627_20:
 19722     0F67                     i1l5381:
 19723     0F67  3000               	movlw	0
 19724     0F68  00BD               	movwf	?i1___fladd+3
 19725     0F69  3000               	movlw	0
 19726     0F6A  00BC               	movwf	?i1___fladd+2
 19727     0F6B  3000               	movlw	0
 19728     0F6C  00BB               	movwf	?i1___fladd+1
 19729     0F6D  3000               	movlw	0
 19730     0F6E  00BA               	movwf	?i1___fladd
 19731     0F6F  2FFF               	goto	i1l1506
 19732     0F70                     i1l5385:
 19733     0F70  3001               	movlw	1
 19734     0F71                     u628_25:
 19735     0F71  35BA               	lslf	i1___fladd@b,f
 19736     0F72  0DBB               	rlf	i1___fladd@b+1,f
 19737     0F73  0DBC               	rlf	i1___fladd@b+2,f
 19738     0F74  0DBD               	rlf	i1___fladd@b+3,f
 19739     0F75  0B89               	decfsz	9,f
 19740     0F76  2F71               	goto	u628_25
 19741     0F77                     i1l5387:
 19742     0F77  1FCD               	btfss	i1___fladd@grs,7
 19743     0F78  2F7A               	goto	u629_21
 19744     0F79  2F7B               	goto	u629_20
 19745     0F7A                     u629_21:
 19746     0F7A  2F7C               	goto	i1l1518
 19747     0F7B                     u629_20:
 19748     0F7B                     i1l5389:
 19749     0F7B  143A               	bsf	i1___fladd@b,0
 19750     0F7C                     i1l1518:
 19751     0F7C  1C4D               	btfss	i1___fladd@grs,0
 19752     0F7D  2F7F               	goto	u630_21
 19753     0F7E  2F80               	goto	u630_20
 19754     0F7F                     u630_21:
 19755     0F7F  2F84               	goto	i1l5393
 19756     0F80                     u630_20:
 19757     0F80                     i1l5391:
 19758     0F80  1403               	setc
 19759     0F81  0D4D               	rlf	i1___fladd@grs,w
 19760     0F82  00CD               	movwf	i1___fladd@grs
 19761     0F83  2F86               	goto	i1l5395
 19762     0F84                     i1l5393:
 19763     0F84  1003               	clrc
 19764     0F85  0DCD               	rlf	i1___fladd@grs,f
 19765     0F86                     i1l5395:
 19766     0F86  084C               	movf	i1___fladd@bexp,w
 19767     0F87  1903               	btfsc	3,2
 19768     0F88  2F8A               	goto	u631_21
 19769     0F89  2F8B               	goto	u631_20
 19770     0F8A                     u631_21:
 19771     0F8A  2F8D               	goto	i1l5399
 19772     0F8B                     u631_20:
 19773     0F8B                     i1l5397:
 19774     0F8B  3001               	movlw	1
 19775     0F8C  02CC               	subwf	i1___fladd@bexp,f
 19776     0F8D                     i1l5399:
 19777     0F8D  1FBC               	btfss	i1___fladd@b+2,7
 19778     0F8E  2F90               	goto	u632_21
 19779     0F8F  2F91               	goto	u632_20
 19780     0F90                     u632_21:
 19781     0F90  2F70               	goto	i1l5385
 19782     0F91                     u632_20:
 19783     0F91                     i1l5401:
 19784     0F91  01CB               	clrf	i1___fladd@aexp
 19785     0F92                     i1l5403:
 19786     0F92  1FCD               	btfss	i1___fladd@grs,7
 19787     0F93  2F95               	goto	u633_21
 19788     0F94  2F96               	goto	u633_20
 19789     0F95                     u633_21:
 19790     0F95  2FA4               	goto	i1l5411
 19791     0F96                     u633_20:
 19792     0F96                     i1l5405:
 19793     0F96  084D               	movf	i1___fladd@grs,w
 19794     0F97  397F               	andlw	127
 19795     0F98  1903               	btfsc	3,2
 19796     0F99  2F9B               	goto	u634_21
 19797     0F9A  2F9C               	goto	u634_20
 19798     0F9B                     u634_21:
 19799     0F9B  2F9F               	goto	i1l1524
 19800     0F9C                     u634_20:
 19801     0F9C                     i1l5407:
 19802     0F9C  3001               	movlw	1
 19803     0F9D  00CB               	movwf	i1___fladd@aexp
 19804     0F9E  2FA4               	goto	i1l5411
 19805     0F9F                     i1l1524:
 19806     0F9F  1C3A               	btfss	i1___fladd@b,0
 19807     0FA0  2FA2               	goto	u635_21
 19808     0FA1  2FA3               	goto	u635_20
 19809     0FA2                     u635_21:
 19810     0FA2  2FA4               	goto	i1l5411
 19811     0FA3                     u635_20:
 19812     0FA3  2F9C               	goto	i1l5407
 19813     0FA4                     i1l5411:
 19814     0FA4  084B               	movf	i1___fladd@aexp,w
 19815     0FA5  1903               	btfsc	3,2
 19816     0FA6  2FA8               	goto	u636_21
 19817     0FA7  2FA9               	goto	u636_20
 19818     0FA8                     u636_21:
 19819     0FA8  2FD2               	goto	i1l1527
 19820     0FA9                     u636_20:
 19821     0FA9                     i1l5413:
 19822     0FA9  3001               	movlw	1
 19823     0FAA  07BA               	addwf	i1___fladd@b,f
 19824     0FAB  3000               	movlw	0
 19825     0FAC  3DBB               	addwfc	i1___fladd@b+1,f
 19826     0FAD  3DBC               	addwfc	i1___fladd@b+2,f
 19827     0FAE  3DBD               	addwfc	i1___fladd@b+3,f
 19828     0FAF                     i1l5415:
 19829     0FAF  1C3D               	btfss	i1___fladd@b+3,0
 19830     0FB0  2FB2               	goto	u637_21
 19831     0FB1  2FB3               	goto	u637_20
 19832     0FB2                     u637_21:
 19833     0FB2  2FD2               	goto	i1l1527
 19834     0FB3                     u637_20:
 19835     0FB3                     i1l5417:
 19836     0FB3  083A               	movf	i1___fladd@b,w
 19837     0FB4  00C2               	movwf	??i1___fladd
 19838     0FB5  083B               	movf	i1___fladd@b+1,w
 19839     0FB6  00C3               	movwf	??i1___fladd+1
 19840     0FB7  083C               	movf	i1___fladd@b+2,w
 19841     0FB8  00C4               	movwf	??i1___fladd+2
 19842     0FB9  083D               	movf	i1___fladd@b+3,w
 19843     0FBA  00C5               	movwf	??i1___fladd+3
 19844     0FBB  3001               	movlw	1
 19845     0FBC  00C6               	movwf	??i1___fladd+4
 19846     0FBD                     u638_25:
 19847     0FBD  37C5               	asrf	??i1___fladd+3,f
 19848     0FBE  0CC4               	rrf	??i1___fladd+2,f
 19849     0FBF  0CC3               	rrf	??i1___fladd+1,f
 19850     0FC0  0CC2               	rrf	??i1___fladd,f
 19851     0FC1                     u638_20:
 19852     0FC1  0BC6               	decfsz	??i1___fladd+4,f
 19853     0FC2  2FBD               	goto	u638_25
 19854     0FC3  0845               	movf	??i1___fladd+3,w
 19855     0FC4  00BD               	movwf	i1___fladd@b+3
 19856     0FC5  0844               	movf	??i1___fladd+2,w
 19857     0FC6  00BC               	movwf	i1___fladd@b+2
 19858     0FC7  0843               	movf	??i1___fladd+1,w
 19859     0FC8  00BB               	movwf	i1___fladd@b+1
 19860     0FC9  0842               	movf	??i1___fladd,w
 19861     0FCA  00BA               	movwf	i1___fladd@b
 19862     0FCB  0A4C               	incf	i1___fladd@bexp,w
 19863     0FCC  1903               	btfsc	3,2
 19864     0FCD  2FCF               	goto	u639_21
 19865     0FCE  2FD0               	goto	u639_20
 19866     0FCF                     u639_21:
 19867     0FCF  2FD2               	goto	i1l1527
 19868     0FD0                     u639_20:
 19869     0FD0                     i1l5419:
 19870     0FD0  3001               	movlw	1
 19871     0FD1  07CC               	addwf	i1___fladd@bexp,f
 19872     0FD2                     i1l1527:
 19873     0FD2  0A4C               	incf	i1___fladd@bexp,w
 19874     0FD3  1903               	btfsc	3,2
 19875     0FD4  2FD6               	goto	u640_21
 19876     0FD5  2FD7               	goto	u640_20
 19877     0FD6                     u640_21:
 19878     0FD6  2FDC               	goto	i1l5423
 19879     0FD7                     u640_20:
 19880     0FD7                     i1l5421:
 19881     0FD7  084C               	movf	i1___fladd@bexp,w
 19882     0FD8  1D03               	btfss	3,2
 19883     0FD9  2FDB               	goto	u641_21
 19884     0FDA  2FDC               	goto	u641_20
 19885     0FDB                     u641_21:
 19886     0FDB  2FEA               	goto	i1l5429
 19887     0FDC                     u641_20:
 19888     0FDC                     i1l5423:
 19889     0FDC  3000               	movlw	0
 19890     0FDD  00BD               	movwf	i1___fladd@b+3
 19891     0FDE  3000               	movlw	0
 19892     0FDF  00BC               	movwf	i1___fladd@b+2
 19893     0FE0  3000               	movlw	0
 19894     0FE1  00BB               	movwf	i1___fladd@b+1
 19895     0FE2  3000               	movlw	0
 19896     0FE3  00BA               	movwf	i1___fladd@b
 19897     0FE4                     i1l5425:
 19898     0FE4  084C               	movf	i1___fladd@bexp,w
 19899     0FE5  1D03               	btfss	3,2
 19900     0FE6  2FE8               	goto	u642_21
 19901     0FE7  2FE9               	goto	u642_20
 19902     0FE8                     u642_21:
 19903     0FE8  2FEA               	goto	i1l5429
 19904     0FE9                     u642_20:
 19905     0FE9                     i1l5427:
 19906     0FE9  01CA               	clrf	i1___fladd@signs
 19907     0FEA                     i1l5429:
 19908     0FEA  1C4C               	btfss	i1___fladd@bexp,0
 19909     0FEB  2FED               	goto	u643_21
 19910     0FEC  2FEE               	goto	u643_20
 19911     0FED                     u643_21:
 19912     0FED  2FF0               	goto	i1l5433
 19913     0FEE                     u643_20:
 19914     0FEE                     i1l5431:
 19915     0FEE  17BC               	bsf	i1___fladd@b+2,7
 19916     0FEF  2FF2               	goto	i1l1535
 19917     0FF0                     i1l5433:
 19918     0FF0  307F               	movlw	127
 19919     0FF1  05BC               	andwf	i1___fladd@b+2,f
 19920     0FF2                     i1l1535:
 19921     0FF2  084C               	movf	i1___fladd@bexp,w
 19922     0FF3  00C2               	movwf	??i1___fladd
 19923     0FF4  3001               	movlw	1
 19924     0FF5                     u644_25:
 19925     0FF5  36C2               	lsrf	??i1___fladd,f
 19926     0FF6  0B89               	decfsz	9,f
 19927     0FF7  2FF5               	goto	u644_25
 19928     0FF8  0842               	movf	??i1___fladd,w
 19929     0FF9  00BD               	movwf	i1___fladd@b+3
 19930     0FFA                     i1l5435:
 19931     0FFA  1FCA               	btfss	i1___fladd@signs,7
 19932     0FFB  2FFD               	goto	u645_21
 19933     0FFC  2FFE               	goto	u645_20
 19934     0FFD                     u645_21:
 19935     0FFD  2FFF               	goto	i1l1536
 19936     0FFE                     u645_20:
 19937     0FFE                     i1l5437:
 19938     0FFE  17BD               	bsf	i1___fladd@b+3,7
 19939     0FFF                     i1l1536:
 19940     0FFF                     i1l1506:
 19941     0FFF  0008               	return
 19942     1000                     __end_ofi1___fladd:
 19943                           
 19944                           	psect	text78
 19945     1EE3                     __ptext78:	
 19946 ;; *************** function _pwm_fan_LoadDutyValue *****************
 19947 ;; Defined at:
 19948 ;;		line 64 in file "mcc_generated_files/pwm/src/pwm5.c"
 19949 ;; Parameters:    Size  Location     Type
 19950 ;;  dutyValue       2    0[COMMON] unsigned short 
 19951 ;; Auto vars:     Size  Location     Type
 19952 ;;		None
 19953 ;; Return value:  Size  Location     Type
 19954 ;;                  1    wreg      void 
 19955 ;; Registers used:
 19956 ;;		wreg, status,2, status,0
 19957 ;; Tracked objects:
 19958 ;;		On entry : 0/0
 19959 ;;		On exit  : 0/0
 19960 ;;		Unchanged: 0/0
 19961 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 19962 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 19963 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 19964 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 19965 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 19966 ;;Total ram usage:        4 bytes
 19967 ;; Hardware stack levels used: 1
 19968 ;; This function calls:
 19969 ;;		Nothing
 19970 ;; This function is called by:
 19971 ;;		_controller
 19972 ;; This function uses a non-reentrant model
 19973 ;;
 19974                           
 19975     1EE3                     _pwm_fan_LoadDutyValue:	
 19976                           ;psect for function _pwm_fan_LoadDutyValue
 19977                           
 19978     1EE3                     i1l4623:	
 19979                           ;incstack = 0
 19980                           ; Regs used in _pwm_fan_LoadDutyValue: [wreg+status,2+status,0]
 19981                           
 19982                           
 19983                           ;mcc_generated_files/pwm/src/pwm5.c: 64:  void pwm_fan_LoadDutyValue(uint16_t dutyValue)
      +                          ;mcc_generated_files/pwm/src/pwm5.c: 65:  {;mcc_generated_files/pwm/src/pwm5.c: 67:     
      +                           PWM5DCH = (uint8_t) ((dutyValue & 0x03FCu) >> 2);
 19984     1EE3  0871               	movf	pwm_fan_LoadDutyValue@dutyValue+1,w
 19985     1EE4  00F3               	movwf	??_pwm_fan_LoadDutyValue+1
 19986     1EE5  0870               	movf	pwm_fan_LoadDutyValue@dutyValue,w
 19987     1EE6  00F2               	movwf	??_pwm_fan_LoadDutyValue
 19988     1EE7  36F3               	lsrf	??_pwm_fan_LoadDutyValue+1,f
 19989     1EE8  0CF2               	rrf	??_pwm_fan_LoadDutyValue,f
 19990     1EE9  36F3               	lsrf	??_pwm_fan_LoadDutyValue+1,f
 19991     1EEA  0CF2               	rrf	??_pwm_fan_LoadDutyValue,f
 19992     1EEB  0872               	movf	??_pwm_fan_LoadDutyValue,w
 19993     1EEC  002C               	movlb	12	; select bank12
 19994     1EED  0098               	movwf	24	;volatile
 19995                           
 19996                           ;mcc_generated_files/pwm/src/pwm5.c: 70:      PWM5DCL = (uint8_t) ((dutyValue & 0x0003u)
      +                           << 6);
 19997     1EEE  0870               	movf	pwm_fan_LoadDutyValue@dutyValue,w
 19998     1EEF  3903               	andlw	3
 19999     1EF0  00F2               	movwf	??_pwm_fan_LoadDutyValue
 20000     1EF1  3006               	movlw	6
 20001     1EF2                     u465_25:
 20002     1EF2  35F2               	lslf	??_pwm_fan_LoadDutyValue,f
 20003     1EF3  0B89               	decfsz	9,f
 20004     1EF4  2EF2               	goto	u465_25
 20005     1EF5  0872               	movf	??_pwm_fan_LoadDutyValue,w
 20006     1EF6  0097               	movwf	23	;volatile
 20007     1EF7                     i1l72:
 20008     1EF7  0008               	return
 20009     1EF8                     __end_of_pwm_fan_LoadDutyValue:
 20010                           
 20011                           	psect	text79
 20012     1D37                     __ptext79:	
 20013 ;; *************** function _getHoogtesensor *****************
 20014 ;; Defined at:
 20015 ;;		line 37 in file "adcMeasurements.c"
 20016 ;; Parameters:    Size  Location     Type
 20017 ;;		None
 20018 ;; Auto vars:     Size  Location     Type
 20019 ;;		None
 20020 ;; Return value:  Size  Location     Type
 20021 ;;                  2    0[COMMON] unsigned short 
 20022 ;; Registers used:
 20023 ;;		wreg
 20024 ;; Tracked objects:
 20025 ;;		On entry : 0/0
 20026 ;;		On exit  : 0/0
 20027 ;;		Unchanged: 0/0
 20028 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 20029 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 20030 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 20031 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 20032 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 20033 ;;Total ram usage:        2 bytes
 20034 ;; Hardware stack levels used: 1
 20035 ;; This function calls:
 20036 ;;		Nothing
 20037 ;; This function is called by:
 20038 ;;		_controller
 20039 ;;		_position_led_strip
 20040 ;; This function uses a non-reentrant model
 20041 ;;
 20042                           
 20043     1D37                     _getHoogtesensor:	
 20044                           ;psect for function _getHoogtesensor
 20045                           
 20046     1D37                     i1l4659:	
 20047                           ;incstack = 0
 20048                           ; Regs used in _getHoogtesensor: [wreg]
 20049                           
 20050                           
 20051                           ;adcMeasurements.c: 38:     return ADC_hoogtesensor;
 20052     1D37  0020               	movlb	0	; select bank0
 20053     1D38  085C               	movf	_ADC_hoogtesensor+1,w	;volatile
 20054     1D39  00F1               	movwf	?_getHoogtesensor+1
 20055     1D3A  085B               	movf	_ADC_hoogtesensor,w	;volatile
 20056     1D3B  00F0               	movwf	?_getHoogtesensor
 20057     1D3C                     i1l857:
 20058     1D3C  0008               	return
 20059     1D3D                     __end_of_getHoogtesensor:
 20060                           
 20061                           	psect	text80
 20062     14C7                     __ptext80:	
 20063 ;; *************** function ___fltol *****************
 20064 ;; Defined at:
 20065 ;;		line 43 in file "C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\fltol.c"
 20066 ;; Parameters:    Size  Location     Type
 20067 ;;  f1              4   26[BANK0 ] unsigned short 
 20068 ;; Auto vars:     Size  Location     Type
 20069 ;;  exp1            1   35[BANK0 ] unsigned char 
 20070 ;;  sign1           1   34[BANK0 ] unsigned char 
 20071 ;; Return value:  Size  Location     Type
 20072 ;;                  4   26[BANK0 ] long 
 20073 ;; Registers used:
 20074 ;;		wreg, status,2, status,0
 20075 ;; Tracked objects:
 20076 ;;		On entry : 0/0
 20077 ;;		On exit  : 0/0
 20078 ;;		Unchanged: 0/0
 20079 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 20080 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
 20081 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 20082 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
 20083 ;;      Totals:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0
 20084 ;;Total ram usage:       10 bytes
 20085 ;; Hardware stack levels used: 1
 20086 ;; This function calls:
 20087 ;;		Nothing
 20088 ;; This function is called by:
 20089 ;;		_controller
 20090 ;;		_printFloat
 20091 ;;		_getLedNumber
 20092 ;; This function uses a non-reentrant model
 20093 ;;
 20094                           
 20095     14C7                     ___fltol:	
 20096                           ;psect for function ___fltol
 20097                           
 20098     14C7                     i1l4689:	
 20099                           ;incstack = 0
 20100                           ; Regs used in ___fltol: [wreg+status,2+status,0]
 20101                           
 20102     14C7  1003               	clrc
 20103     14C8  0020               	movlb	0	; select bank0
 20104     14C9  0D3C               	rlf	___fltol@f1+2,w
 20105     14CA  0D3D               	rlf	___fltol@f1+3,w
 20106     14CB  00C3               	movwf	___fltol@exp1
 20107     14CC  0843               	movf	___fltol@exp1,w
 20108     14CD  1D03               	btfss	3,2
 20109     14CE  2CD0               	goto	u473_21
 20110     14CF  2CD1               	goto	u473_20
 20111     14D0                     u473_21:
 20112     14D0  2CDA               	goto	i1l4695
 20113     14D1                     u473_20:
 20114     14D1                     i1l4691:
 20115     14D1  3000               	movlw	0
 20116     14D2  00BD               	movwf	?___fltol+3
 20117     14D3  3000               	movlw	0
 20118     14D4  00BC               	movwf	?___fltol+2
 20119     14D5  3000               	movlw	0
 20120     14D6  00BB               	movwf	?___fltol+1
 20121     14D7  3000               	movlw	0
 20122     14D8  00BA               	movwf	?___fltol
 20123     14D9  2D35               	goto	i1l1386
 20124     14DA                     i1l4695:
 20125     14DA  083A               	movf	___fltol@f1,w
 20126     14DB  00BE               	movwf	??___fltol
 20127     14DC  083B               	movf	___fltol@f1+1,w
 20128     14DD  00BF               	movwf	??___fltol+1
 20129     14DE  083C               	movf	___fltol@f1+2,w
 20130     14DF  00C0               	movwf	??___fltol+2
 20131     14E0  083D               	movf	___fltol@f1+3,w
 20132     14E1  00C1               	movwf	??___fltol+3
 20133     14E2  301F               	movlw	31
 20134     14E3                     u474_25:
 20135     14E3  36C1               	lsrf	??___fltol+3,f
 20136     14E4  0CC0               	rrf	??___fltol+2,f
 20137     14E5  0CBF               	rrf	??___fltol+1,f
 20138     14E6  0CBE               	rrf	??___fltol,f
 20139     14E7                     u474_20:
 20140     14E7  0B89               	decfsz	9,f
 20141     14E8  2CE3               	goto	u474_25
 20142     14E9  083E               	movf	??___fltol,w
 20143     14EA  00C2               	movwf	___fltol@sign1
 20144     14EB                     i1l4697:
 20145     14EB  17BC               	bsf	___fltol@f1+2,7
 20146     14EC                     i1l4699:
 20147     14EC  30FF               	movlw	255
 20148     14ED  05BA               	andwf	___fltol@f1,f
 20149     14EE  30FF               	movlw	255
 20150     14EF  05BB               	andwf	___fltol@f1+1,f
 20151     14F0  30FF               	movlw	255
 20152     14F1  05BC               	andwf	___fltol@f1+2,f
 20153     14F2  3000               	movlw	0
 20154     14F3  05BD               	andwf	___fltol@f1+3,f
 20155     14F4                     i1l4701:
 20156     14F4  3096               	movlw	150
 20157     14F5  02C3               	subwf	___fltol@exp1,f
 20158     14F6                     i1l4703:
 20159     14F6  1FC3               	btfss	___fltol@exp1,7
 20160     14F7  2CF9               	goto	u475_21
 20161     14F8  2CFA               	goto	u475_20
 20162     14F9                     u475_21:
 20163     14F9  2D10               	goto	i1l4713
 20164     14FA                     u475_20:
 20165     14FA                     i1l4705:
 20166     14FA  0843               	movf	___fltol@exp1,w
 20167     14FB  3A80               	xorlw	128
 20168     14FC  3E97               	addlw	151
 20169     14FD  1803               	skipnc
 20170     14FE  2D00               	goto	u476_21
 20171     14FF  2D01               	goto	u476_20
 20172     1500                     u476_21:
 20173     1500  2D02               	goto	i1l4711
 20174     1501                     u476_20:
 20175     1501  2CD1               	goto	i1l4691
 20176     1502                     i1l4711:
 20177     1502  3001               	movlw	1
 20178     1503                     u477_25:
 20179     1503  36BD               	lsrf	___fltol@f1+3,f
 20180     1504  0CBC               	rrf	___fltol@f1+2,f
 20181     1505  0CBB               	rrf	___fltol@f1+1,f
 20182     1506  0CBA               	rrf	___fltol@f1,f
 20183     1507  0B89               	decfsz	9,f
 20184     1508  2D03               	goto	u477_25
 20185     1509  3001               	movlw	1
 20186     150A  07C3               	addwf	___fltol@exp1,f
 20187     150B  1D03               	btfss	3,2
 20188     150C  2D0E               	goto	u478_21
 20189     150D  2D0F               	goto	u478_20
 20190     150E                     u478_21:
 20191     150E  2D02               	goto	i1l4711
 20192     150F                     u478_20:
 20193     150F  2D25               	goto	i1l4721
 20194     1510                     i1l4713:
 20195     1510  3020               	movlw	32
 20196     1511  0243               	subwf	___fltol@exp1,w
 20197     1512  1C03               	skipc
 20198     1513  2D15               	goto	u479_21
 20199     1514  2D16               	goto	u479_20
 20200     1515                     u479_21:
 20201     1515  2D20               	goto	i1l1393
 20202     1516                     u479_20:
 20203     1516  2CD1               	goto	i1l4691
 20204     1517                     i1l4719:
 20205     1517  3001               	movlw	1
 20206     1518                     u480_25:
 20207     1518  35BA               	lslf	___fltol@f1,f
 20208     1519  0DBB               	rlf	___fltol@f1+1,f
 20209     151A  0DBC               	rlf	___fltol@f1+2,f
 20210     151B  0DBD               	rlf	___fltol@f1+3,f
 20211     151C  0B89               	decfsz	9,f
 20212     151D  2D18               	goto	u480_25
 20213     151E  3001               	movlw	1
 20214     151F  02C3               	subwf	___fltol@exp1,f
 20215     1520                     i1l1393:
 20216     1520  0843               	movf	___fltol@exp1,w
 20217     1521  1D03               	btfss	3,2
 20218     1522  2D24               	goto	u481_21
 20219     1523  2D25               	goto	u481_20
 20220     1524                     u481_21:
 20221     1524  2D17               	goto	i1l4719
 20222     1525                     u481_20:
 20223     1525                     i1l4721:
 20224     1525  0842               	movf	___fltol@sign1,w
 20225     1526  1903               	btfsc	3,2
 20226     1527  2D29               	goto	u482_21
 20227     1528  2D2A               	goto	u482_20
 20228     1529                     u482_21:
 20229     1529  2D35               	goto	i1l1396
 20230     152A                     u482_20:
 20231     152A                     i1l4723:
 20232     152A  09BA               	comf	___fltol@f1,f
 20233     152B  09BB               	comf	___fltol@f1+1,f
 20234     152C  09BC               	comf	___fltol@f1+2,f
 20235     152D  09BD               	comf	___fltol@f1+3,f
 20236     152E  0ABA               	incf	___fltol@f1,f
 20237     152F  1903               	skipnz
 20238     1530  0ABB               	incf	___fltol@f1+1,f
 20239     1531  1903               	skipnz
 20240     1532  0ABC               	incf	___fltol@f1+2,f
 20241     1533  1903               	skipnz
 20242     1534  0ABD               	incf	___fltol@f1+3,f
 20243     1535                     i1l1396:
 20244     1535                     i1l1386:
 20245     1535  0008               	return
 20246     1536                     __end_of___fltol:
 20247                           
 20248                           	psect	text81
 20249     1E1F                     __ptext81:	
 20250 ;; *************** function _TMR2_ISR *****************
 20251 ;; Defined at:
 20252 ;;		line 114 in file "mcc_generated_files/timer/src/tmr2.c"
 20253 ;; Parameters:    Size  Location     Type
 20254 ;;		None
 20255 ;; Auto vars:     Size  Location     Type
 20256 ;;		None
 20257 ;; Return value:  Size  Location     Type
 20258 ;;                  1    wreg      void 
 20259 ;; Registers used:
 20260 ;;		wreg, status,2, status,0, pclath, cstack
 20261 ;; Tracked objects:
 20262 ;;		On entry : 0/0
 20263 ;;		On exit  : 0/0
 20264 ;;		Unchanged: 0/0
 20265 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 20266 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 20267 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 20268 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 20269 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 20270 ;;Total ram usage:        0 bytes
 20271 ;; Hardware stack levels used: 1
 20272 ;; Hardware stack levels required when called: 1
 20273 ;; This function calls:
 20274 ;;		NULL
 20275 ;;		_TMR2_DefaultPeriodMatchCallback
 20276 ;; This function is called by:
 20277 ;;		_INTERRUPT_InterruptManager
 20278 ;; This function uses a non-reentrant model
 20279 ;;
 20280                           
 20281     1E1F                     _TMR2_ISR:	
 20282                           ;psect for function _TMR2_ISR
 20283                           
 20284     1E1F                     i1l5969:	
 20285                           ;incstack = 0
 20286                           ; Regs used in _TMR2_ISR: [wreg+status,2+status,0+pclath+cstack]
 20287                           
 20288                           
 20289                           ;mcc_generated_files/timer/src/tmr2.c: 117:     if(((void*)0) != TMR2_PeriodMatchCallbac
      +                          k)
 20290     1E1F  0022               	movlb	2	; select bank2
 20291     1E20  084C               	movf	_TMR2_PeriodMatchCallback^(0+256),w
 20292     1E21  044D               	iorwf	(_TMR2_PeriodMatchCallback+1)^(0+256),w
 20293     1E22  1903               	btfsc	3,2
 20294     1E23  2E25               	goto	u711_21
 20295     1E24  2E26               	goto	u711_20
 20296     1E25                     u711_21:
 20297     1E25  2E2B               	goto	i1l5973
 20298     1E26                     u711_20:
 20299     1E26                     i1l5971:
 20300                           
 20301                           ;mcc_generated_files/timer/src/tmr2.c: 118:     {;mcc_generated_files/timer/src/tmr2.c: 
      +                          119:         TMR2_PeriodMatchCallback();
 20302     1E26  084D               	movf	(_TMR2_PeriodMatchCallback+1)^(0+256),w
 20303     1E27  008A               	movwf	10
 20304     1E28  084C               	movf	_TMR2_PeriodMatchCallback^(0+256),w
 20305     1E29  000A               	callw
 20306     1E2A  319E               	pagesel	$
 20307     1E2B                     i1l5973:
 20308                           
 20309                           ;mcc_generated_files/timer/src/tmr2.c: 121:     PIR1bits.TMR2IF = 0;
 20310     1E2B  0020               	movlb	0	; select bank0
 20311     1E2C  1091               	bcf	17,1	;volatile
 20312     1E2D                     i1l432:
 20313     1E2D  0008               	return
 20314     1E2E                     __end_of_TMR2_ISR:
 20315                           
 20316                           	psect	text82
 20317     1D25                     __ptext82:	
 20318 ;; *************** function _TMR2_DefaultPeriodMatchCallback *****************
 20319 ;; Defined at:
 20320 ;;		line 129 in file "mcc_generated_files/timer/src/tmr2.c"
 20321 ;; Parameters:    Size  Location     Type
 20322 ;;		None
 20323 ;; Auto vars:     Size  Location     Type
 20324 ;;		None
 20325 ;; Return value:  Size  Location     Type
 20326 ;;                  1    wreg      void 
 20327 ;; Registers used:
 20328 ;;		None
 20329 ;; Tracked objects:
 20330 ;;		On entry : 0/0
 20331 ;;		On exit  : 0/0
 20332 ;;		Unchanged: 0/0
 20333 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 20334 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 20335 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 20336 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 20337 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 20338 ;;Total ram usage:        0 bytes
 20339 ;; Hardware stack levels used: 1
 20340 ;; This function calls:
 20341 ;;		Nothing
 20342 ;; This function is called by:
 20343 ;;		_TMR2_Initialize
 20344 ;;		_TMR2_ISR
 20345 ;; This function uses a non-reentrant model
 20346 ;;
 20347                           
 20348     1D25                     _TMR2_DefaultPeriodMatchCallback:	
 20349                           ;psect for function _TMR2_DefaultPeriodMatchCallback
 20350                           
 20351     1D25                     i1l438:	
 20352                           ;incstack = 0
 20353                           ; Regs used in _TMR2_DefaultPeriodMatchCallback: []
 20354                           
 20355     1D25  0008               	return
 20356     1D26                     __end_of_TMR2_DefaultPeriodMatchCallback:
 20357                           
 20358                           	psect	text83
 20359     1F85                     __ptext83:	
 20360 ;; *************** function _EUSART_TransmitISR *****************
 20361 ;; Defined at:
 20362 ;;		line 377 in file "mcc_generated_files/uart/src/eusart.c"
 20363 ;; Parameters:    Size  Location     Type
 20364 ;;		None
 20365 ;; Auto vars:     Size  Location     Type
 20366 ;;  tempTxTail      1    0[COMMON] unsigned char 
 20367 ;; Return value:  Size  Location     Type
 20368 ;;                  1    wreg      void 
 20369 ;; Registers used:
 20370 ;;		wreg, fsr1l, fsr1h, status,2, status,0
 20371 ;; Tracked objects:
 20372 ;;		On entry : 0/0
 20373 ;;		On exit  : 0/0
 20374 ;;		Unchanged: 0/0
 20375 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 20376 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 20377 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 20378 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 20379 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 20380 ;;Total ram usage:        1 bytes
 20381 ;; Hardware stack levels used: 1
 20382 ;; This function calls:
 20383 ;;		Nothing
 20384 ;; This function is called by:
 20385 ;;		_EUSART_Initialize
 20386 ;;		_INTERRUPT_InterruptManager
 20387 ;; This function uses a non-reentrant model
 20388 ;;
 20389                           
 20390     1F85                     _EUSART_TransmitISR:	
 20391                           ;psect for function _EUSART_TransmitISR
 20392                           
 20393     1F85                     i1l6037:	
 20394                           ;incstack = 0
 20395                           ; Regs used in _EUSART_TransmitISR: [wreg+fsr1l+fsr1h+status,2+status,0]
 20396                           
 20397                           
 20398                           ;mcc_generated_files/uart/src/eusart.c: 379:     uint8_t tempTxTail;;mcc_generated_files
      +                          /uart/src/eusart.c: 381:     if(sizeof(eusartTxBuffer) > eusartTxBufferRemaining)
 20399     1F85  3008               	movlw	8
 20400     1F86  0020               	movlb	0	; select bank0
 20401     1F87  026A               	subwf	_eusartTxBufferRemaining,w	;volatile
 20402     1F88  1803               	skipnc
 20403     1F89  2F8B               	goto	u719_21
 20404     1F8A  2F8C               	goto	u719_20
 20405     1F8B                     u719_21:
 20406     1F8B  2F9E               	goto	i1l745
 20407     1F8C                     u719_20:
 20408     1F8C                     i1l6039:
 20409                           
 20410                           ;mcc_generated_files/uart/src/eusart.c: 382:     {;mcc_generated_files/uart/src/eusart.c
      +                          : 383:        TX1REG = eusartTxBuffer[eusartTxTail];
 20411     1F8C  086B               	movf	_eusartTxTail,w
 20412     1F8D  3E20               	addlw	(low (_eusartTxBuffer| (0+256)))& (0+255)
 20413     1F8E  0086               	movwf	6
 20414     1F8F  3001               	movlw	1	; select bank2/3
 20415     1F90  0087               	movwf	7
 20416     1F91  0801               	movf	1,w
 20417     1F92  0023               	movlb	3	; select bank3
 20418     1F93  009A               	movwf	26	;volatile
 20419     1F94                     i1l6041:
 20420                           
 20421                           ;mcc_generated_files/uart/src/eusart.c: 384:        tempTxTail = (eusartTxTail + 1U) & (
      +                          (8U) - 1U);
 20422     1F94  0020               	movlb	0	; select bank0
 20423     1F95  086B               	movf	_eusartTxTail,w	;volatile
 20424     1F96  3E01               	addlw	1
 20425     1F97  3907               	andlw	7
 20426     1F98  00F0               	movwf	EUSART_TransmitISR@tempTxTail
 20427     1F99                     i1l6043:
 20428                           
 20429                           ;mcc_generated_files/uart/src/eusart.c: 386:        eusartTxTail = tempTxTail;
 20430     1F99  0870               	movf	EUSART_TransmitISR@tempTxTail,w
 20431     1F9A  00EB               	movwf	_eusartTxTail	;volatile
 20432     1F9B                     i1l6045:
 20433                           
 20434                           ;mcc_generated_files/uart/src/eusart.c: 387:        eusartTxBufferRemaining++;
 20435     1F9B  3001               	movlw	1
 20436     1F9C  07EA               	addwf	_eusartTxBufferRemaining,f	;volatile
 20437                           
 20438                           ;mcc_generated_files/uart/src/eusart.c: 388:     }
 20439     1F9D  2FA0               	goto	i1l748
 20440     1F9E                     i1l745:	
 20441                           ;mcc_generated_files/uart/src/eusart.c: 389:     else
 20442                           
 20443                           
 20444                           ;mcc_generated_files/uart/src/eusart.c: 390:     {;mcc_generated_files/uart/src/eusart.c
      +                          : 391:         PIE1bits.TXIE = 0;
 20445     1F9E  0021               	movlb	1	; select bank1
 20446     1F9F  1211               	bcf	17,4	;volatile
 20447     1FA0                     i1l748:
 20448     1FA0  0008               	return
 20449     1FA1                     __end_of_EUSART_TransmitISR:
 20450                           
 20451                           	psect	text84
 20452     125E                     __ptext84:	
 20453 ;; *************** function _EUSART_ReceiveISR *****************
 20454 ;; Defined at:
 20455 ;;		line 308 in file "mcc_generated_files/uart/src/eusart.c"
 20456 ;; Parameters:    Size  Location     Type
 20457 ;;		None
 20458 ;; Auto vars:     Size  Location     Type
 20459 ;;  tempRxHead      1    1[COMMON] unsigned char 
 20460 ;;  regValue        1    0[COMMON] unsigned char 
 20461 ;; Return value:  Size  Location     Type
 20462 ;;                  1    wreg      void 
 20463 ;; Registers used:
 20464 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 20465 ;; Tracked objects:
 20466 ;;		On entry : 0/0
 20467 ;;		On exit  : 0/0
 20468 ;;		Unchanged: 0/0
 20469 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 20470 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 20471 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 20472 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 20473 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 20474 ;;Total ram usage:        2 bytes
 20475 ;; Hardware stack levels used: 1
 20476 ;; Hardware stack levels required when called: 1
 20477 ;; This function calls:
 20478 ;;		NULL
 20479 ;;		_EUSART_DefaultFramingErrorCallback
 20480 ;;		_EUSART_DefaultOverrunErrorCallback
 20481 ;; This function is called by:
 20482 ;;		_EUSART_Initialize
 20483 ;;		_INTERRUPT_InterruptManager
 20484 ;; This function uses a non-reentrant model
 20485 ;;
 20486                           
 20487     125E                     _EUSART_ReceiveISR:	
 20488                           ;psect for function _EUSART_ReceiveISR
 20489                           
 20490     125E                     i1l6003:	
 20491                           ;incstack = 0
 20492                           ; Regs used in _EUSART_ReceiveISR: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
 20493                           
 20494                           
 20495                           ;mcc_generated_files/uart/src/eusart.c: 310:     uint8_t regValue;;mcc_generated_files/u
      +                          art/src/eusart.c: 311:  uint8_t tempRxHead;;mcc_generated_files/uart/src/eusart.c: 314: 
      +                              eusartRxStatusBuffer[eusartRxHead].status = 0;
 20496     125E  0020               	movlb	0	; select bank0
 20497     125F  3569               	lslf	_eusartRxHead,w	;volatile
 20498     1260  3EA0               	addlw	(low (_eusartRxStatusBuffer| (0+256)))& (0+255)
 20499     1261  0086               	movwf	6
 20500     1262  3001               	movlw	1	; select bank3/4
 20501     1263  0087               	movwf	7
 20502     1264  3000               	movlw	0
 20503     1265  3FC0               	movwi [0]fsr1
 20504     1266  3FC1               	movwi [1]fsr1
 20505     1267                     i1l6005:
 20506                           
 20507                           ;mcc_generated_files/uart/src/eusart.c: 316:     if(1 == RC1STAbits.OERR)
 20508     1267  0023               	movlb	3	; select bank3
 20509     1268  1C9D               	btfss	29,1	;volatile
 20510     1269  2A6B               	goto	u714_21
 20511     126A  2A6C               	goto	u714_20
 20512     126B                     u714_21:
 20513     126B  2A7E               	goto	i1l6013
 20514     126C                     u714_20:
 20515     126C                     i1l6007:
 20516                           
 20517                           ;mcc_generated_files/uart/src/eusart.c: 317:     {;mcc_generated_files/uart/src/eusart.c
      +                          : 318:         eusartRxStatusBuffer[eusartRxHead].oerr = 1;
 20518     126C  0020               	movlb	0	; select bank0
 20519     126D  3569               	lslf	_eusartRxHead,w	;volatile
 20520     126E  3EA0               	addlw	(low (_eusartRxStatusBuffer| (0+256)))& (0+255)
 20521     126F  0086               	movwf	6
 20522     1270  3001               	movlw	1	; select bank3/4
 20523     1271  0087               	movwf	7
 20524     1272  1501               	bsf	1,2
 20525     1273                     i1l6009:
 20526                           
 20527                           ;mcc_generated_files/uart/src/eusart.c: 319:         if(((void*)0) != EUSART_OverrunErro
      +                          rHandler)
 20528     1273  085D               	movf	_EUSART_OverrunErrorHandler,w
 20529     1274  045E               	iorwf	_EUSART_OverrunErrorHandler+1,w
 20530     1275  1903               	btfsc	3,2
 20531     1276  2A78               	goto	u715_21
 20532     1277  2A79               	goto	u715_20
 20533     1278                     u715_21:
 20534     1278  2A7E               	goto	i1l6013
 20535     1279                     u715_20:
 20536     1279                     i1l6011:
 20537                           
 20538                           ;mcc_generated_files/uart/src/eusart.c: 320:         {;mcc_generated_files/uart/src/eusa
      +                          rt.c: 321:             EUSART_OverrunErrorHandler();
 20539     1279  085E               	movf	_EUSART_OverrunErrorHandler+1,w
 20540     127A  008A               	movwf	10
 20541     127B  085D               	movf	_EUSART_OverrunErrorHandler,w
 20542     127C  000A               	callw
 20543     127D  3192               	pagesel	$
 20544     127E                     i1l6013:
 20545                           
 20546                           ;mcc_generated_files/uart/src/eusart.c: 324:     if(1 == RC1STAbits.FERR)
 20547     127E  0023               	movlb	3	; select bank3
 20548     127F  1D1D               	btfss	29,2	;volatile
 20549     1280  2A82               	goto	u716_21
 20550     1281  2A83               	goto	u716_20
 20551     1282                     u716_21:
 20552     1282  2A95               	goto	i1l6021
 20553     1283                     u716_20:
 20554     1283                     i1l6015:
 20555                           
 20556                           ;mcc_generated_files/uart/src/eusart.c: 325:     {;mcc_generated_files/uart/src/eusart.c
      +                          : 326:         eusartRxStatusBuffer[eusartRxHead].ferr = 1;
 20557     1283  0020               	movlb	0	; select bank0
 20558     1284  3569               	lslf	_eusartRxHead,w	;volatile
 20559     1285  3EA0               	addlw	(low (_eusartRxStatusBuffer| (0+256)))& (0+255)
 20560     1286  0086               	movwf	6
 20561     1287  3001               	movlw	1	; select bank3/4
 20562     1288  0087               	movwf	7
 20563     1289  1481               	bsf	1,1
 20564     128A                     i1l6017:
 20565                           
 20566                           ;mcc_generated_files/uart/src/eusart.c: 327:         if(((void*)0) != EUSART_FramingErro
      +                          rHandler)
 20567     128A  085F               	movf	_EUSART_FramingErrorHandler,w
 20568     128B  0460               	iorwf	_EUSART_FramingErrorHandler+1,w
 20569     128C  1903               	btfsc	3,2
 20570     128D  2A8F               	goto	u717_21
 20571     128E  2A90               	goto	u717_20
 20572     128F                     u717_21:
 20573     128F  2A95               	goto	i1l6021
 20574     1290                     u717_20:
 20575     1290                     i1l6019:
 20576                           
 20577                           ;mcc_generated_files/uart/src/eusart.c: 328:         {;mcc_generated_files/uart/src/eusa
      +                          rt.c: 329:             EUSART_FramingErrorHandler();
 20578     1290  0860               	movf	_EUSART_FramingErrorHandler+1,w
 20579     1291  008A               	movwf	10
 20580     1292  085F               	movf	_EUSART_FramingErrorHandler,w
 20581     1293  000A               	callw
 20582     1294  3192               	pagesel	$
 20583     1295                     i1l6021:
 20584                           
 20585                           ;mcc_generated_files/uart/src/eusart.c: 333:     regValue = RC1REG;
 20586     1295  0023               	movlb	3	; select bank3
 20587     1296  0819               	movf	25,w	;volatile
 20588     1297  00F0               	movwf	EUSART_ReceiveISR@regValue
 20589     1298                     i1l6023:
 20590                           
 20591                           ;mcc_generated_files/uart/src/eusart.c: 335:     tempRxHead = (eusartRxHead + 1U) & ((8U
      +                          ) - 1U);
 20592     1298  0020               	movlb	0	; select bank0
 20593     1299  0869               	movf	_eusartRxHead,w	;volatile
 20594     129A  3E01               	addlw	1
 20595     129B  3907               	andlw	7
 20596     129C  00F1               	movwf	EUSART_ReceiveISR@tempRxHead
 20597     129D                     i1l6025:
 20598                           
 20599                           ;mcc_generated_files/uart/src/eusart.c: 336:     if (tempRxHead == eusartRxTail)
 20600     129D  0871               	movf	EUSART_ReceiveISR@tempRxHead,w
 20601     129E  0668               	xorwf	_eusartRxTail,w	;volatile
 20602     129F  1D03               	skipz
 20603     12A0  2AA2               	goto	u718_21
 20604     12A1  2AA3               	goto	u718_20
 20605     12A2                     u718_21:
 20606     12A2  2AA4               	goto	i1l6029
 20607     12A3                     u718_20:
 20608     12A3  2AAF               	goto	i1l735
 20609     12A4                     i1l6029:
 20610                           
 20611                           ;mcc_generated_files/uart/src/eusart.c: 341:     {;mcc_generated_files/uart/src/eusart.c
      +                          : 342:         eusartRxBuffer[eusartRxHead] = regValue;
 20612     12A4  0869               	movf	_eusartRxHead,w
 20613     12A5  3EB0               	addlw	(low (_eusartRxBuffer| (0+256)))& (0+255)
 20614     12A6  0086               	movwf	6
 20615     12A7  3001               	movlw	1	; select bank3/4
 20616     12A8  0087               	movwf	7
 20617     12A9  0870               	movf	EUSART_ReceiveISR@regValue,w
 20618     12AA  0081               	movwf	1
 20619     12AB                     i1l6031:
 20620                           
 20621                           ;mcc_generated_files/uart/src/eusart.c: 343:   eusartRxHead = tempRxHead;
 20622     12AB  0871               	movf	EUSART_ReceiveISR@tempRxHead,w
 20623     12AC  00E9               	movwf	_eusartRxHead	;volatile
 20624     12AD                     i1l6033:
 20625                           
 20626                           ;mcc_generated_files/uart/src/eusart.c: 344:   eusartRxCount++;
 20627     12AD  3001               	movlw	1
 20628     12AE  07E7               	addwf	_eusartRxCount,f	;volatile
 20629     12AF                     i1l735:
 20630     12AF  0008               	return
 20631     12B0                     __end_of_EUSART_ReceiveISR:
 20632                           
 20633                           	psect	text85
 20634     1D29                     __ptext85:	
 20635 ;; *************** function _EUSART_DefaultOverrunErrorCallback *****************
 20636 ;; Defined at:
 20637 ;;		line 423 in file "mcc_generated_files/uart/src/eusart.c"
 20638 ;; Parameters:    Size  Location     Type
 20639 ;;		None
 20640 ;; Auto vars:     Size  Location     Type
 20641 ;;		None
 20642 ;; Return value:  Size  Location     Type
 20643 ;;                  1    wreg      void 
 20644 ;; Registers used:
 20645 ;;		None
 20646 ;; Tracked objects:
 20647 ;;		On entry : 0/0
 20648 ;;		On exit  : 0/0
 20649 ;;		Unchanged: 0/0
 20650 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 20651 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 20652 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 20653 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 20654 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 20655 ;;Total ram usage:        0 bytes
 20656 ;; Hardware stack levels used: 1
 20657 ;; This function calls:
 20658 ;;		Nothing
 20659 ;; This function is called by:
 20660 ;;		_EUSART_Initialize
 20661 ;;		_EUSART_ReceiveISR
 20662 ;; This function uses a non-reentrant model
 20663 ;;
 20664                           
 20665     1D29                     _EUSART_DefaultOverrunErrorCallback:	
 20666                           ;psect for function _EUSART_DefaultOverrunErrorCallback
 20667                           
 20668     1D29                     i1l5781:	
 20669                           ;incstack = 0
 20670                           ; Regs used in _EUSART_DefaultOverrunErrorCallback: []
 20671                           
 20672                           
 20673                           ;mcc_generated_files/uart/src/eusart.c: 426:     RC1STAbits.CREN = 0;
 20674     1D29  0023               	movlb	3	; select bank3
 20675     1D2A  121D               	bcf	29,4	;volatile
 20676                           
 20677                           ;mcc_generated_files/uart/src/eusart.c: 427:     RC1STAbits.CREN = 1;
 20678     1D2B  161D               	bsf	29,4	;volatile
 20679     1D2C                     i1l766:
 20680     1D2C  0008               	return
 20681     1D2D                     __end_of_EUSART_DefaultOverrunErrorCallback:
 20682                           
 20683                           	psect	text86
 20684     1D24                     __ptext86:	
 20685 ;; *************** function _EUSART_DefaultFramingErrorCallback *****************
 20686 ;; Defined at:
 20687 ;;		line 418 in file "mcc_generated_files/uart/src/eusart.c"
 20688 ;; Parameters:    Size  Location     Type
 20689 ;;		None
 20690 ;; Auto vars:     Size  Location     Type
 20691 ;;		None
 20692 ;; Return value:  Size  Location     Type
 20693 ;;                  1    wreg      void 
 20694 ;; Registers used:
 20695 ;;		None
 20696 ;; Tracked objects:
 20697 ;;		On entry : 0/0
 20698 ;;		On exit  : 0/0
 20699 ;;		Unchanged: 0/0
 20700 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 20701 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 20702 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 20703 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 20704 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 20705 ;;Total ram usage:        0 bytes
 20706 ;; Hardware stack levels used: 1
 20707 ;; This function calls:
 20708 ;;		Nothing
 20709 ;; This function is called by:
 20710 ;;		_EUSART_Initialize
 20711 ;;		_EUSART_ReceiveISR
 20712 ;; This function uses a non-reentrant model
 20713 ;;
 20714                           
 20715     1D24                     _EUSART_DefaultFramingErrorCallback:	
 20716                           ;psect for function _EUSART_DefaultFramingErrorCallback
 20717                           
 20718     1D24                     i1l763:	
 20719                           ;incstack = 0
 20720                           ; Regs used in _EUSART_DefaultFramingErrorCallback: []
 20721                           
 20722     1D24  0008               	return
 20723     1D25                     __end_of_EUSART_DefaultFramingErrorCallback:
 20724                           
 20725                           	psect	text87
 20726     1E10                     __ptext87:	
 20727 ;; *************** function _ADC_ISR *****************
 20728 ;; Defined at:
 20729 ;;		line 134 in file "mcc_generated_files/adc/src/adc.c"
 20730 ;; Parameters:    Size  Location     Type
 20731 ;;		None
 20732 ;; Auto vars:     Size  Location     Type
 20733 ;;		None
 20734 ;; Return value:  Size  Location     Type
 20735 ;;                  1    wreg      void 
 20736 ;; Registers used:
 20737 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
 20738 ;; Tracked objects:
 20739 ;;		On entry : 0/0
 20740 ;;		On exit  : 0/0
 20741 ;;		Unchanged: 0/0
 20742 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 20743 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 20744 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 20745 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 20746 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 20747 ;;Total ram usage:        0 bytes
 20748 ;; Hardware stack levels used: 1
 20749 ;; Hardware stack levels required when called: 2
 20750 ;; This function calls:
 20751 ;;		NULL
 20752 ;;		_ADC_DefaultInterruptHandler
 20753 ;;		_adcConversionDoneHandler
 20754 ;; This function is called by:
 20755 ;;		_INTERRUPT_InterruptManager
 20756 ;; This function uses a non-reentrant model
 20757 ;;
 20758                           
 20759     1E10                     _ADC_ISR:	
 20760                           ;psect for function _ADC_ISR
 20761                           
 20762     1E10                     i1l5955:	
 20763                           ;incstack = 0
 20764                           ; Regs used in _ADC_ISR: [wreg-fsr0h+status,2+status,0+pclath+cstack]
 20765                           
 20766                           
 20767                           ;mcc_generated_files/adc/src/adc.c: 137:     PIR1bits.ADIF = 0;
 20768     1E10  0020               	movlb	0	; select bank0
 20769     1E11  1311               	bcf	17,6	;volatile
 20770     1E12                     i1l5957:
 20771                           
 20772                           ;mcc_generated_files/adc/src/adc.c: 139:  if(ADC_InterruptHandler)
 20773     1E12  0022               	movlb	2	; select bank2
 20774     1E13  0852               	movf	_ADC_InterruptHandler^(0+256),w
 20775     1E14  0453               	iorwf	(_ADC_InterruptHandler+1)^(0+256),w
 20776     1E15  1903               	btfsc	3,2
 20777     1E16  2E18               	goto	u708_21
 20778     1E17  2E19               	goto	u708_20
 20779     1E18                     u708_21:
 20780     1E18  2E1E               	goto	i1l52
 20781     1E19                     u708_20:
 20782     1E19                     i1l5959:
 20783                           
 20784                           ;mcc_generated_files/adc/src/adc.c: 140:     {;mcc_generated_files/adc/src/adc.c: 141:  
      +                                 ADC_InterruptHandler();
 20785     1E19  0853               	movf	(_ADC_InterruptHandler+1)^(0+256),w
 20786     1E1A  008A               	movwf	10
 20787     1E1B  0852               	movf	_ADC_InterruptHandler^(0+256),w
 20788     1E1C  000A               	callw
 20789     1E1D  319E               	pagesel	$
 20790     1E1E                     i1l52:
 20791     1E1E  0008               	return
 20792     1E1F                     __end_of_ADC_ISR:
 20793                           
 20794                           	psect	text88
 20795     1D23                     __ptext88:	
 20796 ;; *************** function _ADC_DefaultInterruptHandler *****************
 20797 ;; Defined at:
 20798 ;;		line 150 in file "mcc_generated_files/adc/src/adc.c"
 20799 ;; Parameters:    Size  Location     Type
 20800 ;;		None
 20801 ;; Auto vars:     Size  Location     Type
 20802 ;;		None
 20803 ;; Return value:  Size  Location     Type
 20804 ;;                  1    wreg      void 
 20805 ;; Registers used:
 20806 ;;		None
 20807 ;; Tracked objects:
 20808 ;;		On entry : 0/0
 20809 ;;		On exit  : 0/0
 20810 ;;		Unchanged: 0/0
 20811 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 20812 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 20813 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 20814 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 20815 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 20816 ;;Total ram usage:        0 bytes
 20817 ;; Hardware stack levels used: 1
 20818 ;; This function calls:
 20819 ;;		Nothing
 20820 ;; This function is called by:
 20821 ;;		_ADC_Initialize
 20822 ;;		_ADC_ISR
 20823 ;; This function uses a non-reentrant model
 20824 ;;
 20825                           
 20826     1D23                     _ADC_DefaultInterruptHandler:	
 20827                           ;psect for function _ADC_DefaultInterruptHandler
 20828                           
 20829     1D23                     i1l58:	
 20830                           ;incstack = 0
 20831                           ; Regs used in _ADC_DefaultInterruptHandler: []
 20832                           
 20833     1D23  0008               	return
 20834     1D24                     __end_of_ADC_DefaultInterruptHandler:
 20835                           
 20836                           	psect	text89
 20837     1194                     __ptext89:	
 20838 ;; *************** function _adcConversionDoneHandler *****************
 20839 ;; Defined at:
 20840 ;;		line 5 in file "adcMeasurements.c"
 20841 ;; Parameters:    Size  Location     Type
 20842 ;;		None
 20843 ;; Auto vars:     Size  Location     Type
 20844 ;;		None
 20845 ;; Return value:  Size  Location     Type
 20846 ;;                  1    wreg      void 
 20847 ;; Registers used:
 20848 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
 20849 ;; Tracked objects:
 20850 ;;		On entry : 0/0
 20851 ;;		On exit  : 0/0
 20852 ;;		Unchanged: 0/0
 20853 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 20854 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 20855 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 20856 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 20857 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 20858 ;;Total ram usage:        2 bytes
 20859 ;; Hardware stack levels used: 1
 20860 ;; Hardware stack levels required when called: 1
 20861 ;; This function calls:
 20862 ;;		_ADC_GetConversionResult
 20863 ;;		i1_ADC_SelectChannel
 20864 ;; This function is called by:
 20865 ;;		_initAdcMultiplexer
 20866 ;;		_ADC_ISR
 20867 ;; This function uses a non-reentrant model
 20868 ;;
 20869                           
 20870     1194                     _adcConversionDoneHandler:	
 20871                           ;psect for function _adcConversionDoneHandler
 20872                           
 20873     1194                     i1l5789:	
 20874                           ;incstack = 0
 20875                           ; Regs used in _adcConversionDoneHandler: [wreg-fsr0h+status,2+status,0+pclath+cstack]
 20876                           
 20877                           
 20878                           ;adcMeasurements.c: 10:     static adc_channel_t new_channel = potentiometer;;adcMeasure
      +                          ments.c: 11:     switch (new_channel) {
 20879     1194  29B7               	goto	i1l5805
 20880     1195                     i1l5791:
 20881                           
 20882                           ;adcMeasurements.c: 13:             ADC_potentiometer = ADC_GetConversionResult();
 20883     1195  319D  2531  3191   	fcall	_ADC_GetConversionResult
 20884     1198  0871               	movf	?_ADC_GetConversionResult+1,w
 20885     1199  0022               	movlb	2	; select bank2
 20886     119A  00B3               	movwf	(_ADC_potentiometer+1)^(0+256)	;volatile
 20887     119B  0870               	movf	?_ADC_GetConversionResult,w
 20888     119C  00B2               	movwf	_ADC_potentiometer^(0+256)	;volatile
 20889     119D                     i1l5793:
 20890                           
 20891                           ;adcMeasurements.c: 14:             new_channel = hoogtesensor;
 20892     119D  3012               	movlw	18
 20893     119E  0020               	movlb	0	; select bank0
 20894     119F  00EE               	movwf	adcConversionDoneHandler@new_channel
 20895                           
 20896                           ;adcMeasurements.c: 15:             break;
 20897     11A0  29CB               	goto	i1l5807
 20898     11A1                     i1l5795:
 20899                           
 20900                           ;adcMeasurements.c: 17:             ADC_hoogtesensor = ADC_GetConversionResult();
 20901     11A1  319D  2531  3191   	fcall	_ADC_GetConversionResult
 20902     11A4  0871               	movf	?_ADC_GetConversionResult+1,w
 20903     11A5  0020               	movlb	0	; select bank0
 20904     11A6  00DC               	movwf	_ADC_hoogtesensor+1	;volatile
 20905     11A7  0870               	movf	?_ADC_GetConversionResult,w
 20906     11A8  00DB               	movwf	_ADC_hoogtesensor	;volatile
 20907     11A9                     i1l5797:
 20908                           
 20909                           ;adcMeasurements.c: 18:             new_channel = pomphoogte;
 20910     11A9  3013               	movlw	19
 20911     11AA  00EE               	movwf	adcConversionDoneHandler@new_channel
 20912                           
 20913                           ;adcMeasurements.c: 19:             break;
 20914     11AB  29CB               	goto	i1l5807
 20915     11AC                     i1l5799:
 20916                           
 20917                           ;adcMeasurements.c: 21:             ADC_pomphoogte = ADC_GetConversionResult();
 20918     11AC  319D  2531  3191   	fcall	_ADC_GetConversionResult
 20919     11AF  0871               	movf	?_ADC_GetConversionResult+1,w
 20920     11B0  0020               	movlb	0	; select bank0
 20921     11B1  00DA               	movwf	_ADC_pomphoogte+1	;volatile
 20922     11B2  0870               	movf	?_ADC_GetConversionResult,w
 20923     11B3  00D9               	movwf	_ADC_pomphoogte	;volatile
 20924     11B4                     i1l5801:
 20925                           
 20926                           ;adcMeasurements.c: 22:             new_channel = potentiometer;
 20927     11B4  3010               	movlw	16
 20928     11B5  00EE               	movwf	adcConversionDoneHandler@new_channel
 20929                           
 20930                           ;adcMeasurements.c: 23:             break;
 20931     11B6  29CB               	goto	i1l5807
 20932     11B7                     i1l5805:
 20933     11B7  0020               	movlb	0	; select bank0
 20934     11B8  086E               	movf	adcConversionDoneHandler@new_channel,w
 20935     11B9  00F2               	movwf	??_adcConversionDoneHandler
 20936     11BA  01F3               	clrf	??_adcConversionDoneHandler+1
 20937                           
 20938                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 20939                           ; Switch size 1, requested type "simple"
 20940                           ; Number of cases is 1, Range of values is 0 to 0
 20941                           ; switch strategies available:
 20942                           ; Name         Instructions Cycles
 20943                           ; simple_byte            4     3 (average)
 20944                           ; direct_byte            8     6 (fixed)
 20945                           ; jumptable            260     6 (fixed)
 20946                           ;	Chosen strategy is simple_byte
 20947     11BB  0873               	movf	??_adcConversionDoneHandler+1,w
 20948     11BC  3A00               	xorlw	0	; case 0
 20949     11BD  1903               	skipnz
 20950     11BE  29C0               	goto	i1l7801
 20951     11BF  29CB               	goto	i1l5807
 20952     11C0                     i1l7801:
 20953                           
 20954                           ; Switch size 1, requested type "simple"
 20955                           ; Number of cases is 3, Range of values is 16 to 19
 20956                           ; switch strategies available:
 20957                           ; Name         Instructions Cycles
 20958                           ; simple_byte           10     6 (average)
 20959                           ; direct_byte           17     9 (fixed)
 20960                           ; jumptable            263     9 (fixed)
 20961                           ;	Chosen strategy is simple_byte
 20962     11C0  0872               	movf	??_adcConversionDoneHandler,w
 20963     11C1  3A10               	xorlw	16	; case 16
 20964     11C2  1903               	skipnz
 20965     11C3  2995               	goto	i1l5791
 20966     11C4  3A02               	xorlw	2	; case 18
 20967     11C5  1903               	skipnz
 20968     11C6  29A1               	goto	i1l5795
 20969     11C7  3A01               	xorlw	1	; case 19
 20970     11C8  1903               	skipnz
 20971     11C9  29AC               	goto	i1l5799
 20972     11CA  29CB               	goto	i1l5807
 20973     11CB                     i1l5807:
 20974                           
 20975                           ;adcMeasurements.c: 25:     ADC_SelectChannel(new_channel);
 20976     11CB  086E               	movf	adcConversionDoneHandler@new_channel,w
 20977     11CC  319D  25AC  3191   	fcall	i1_ADC_SelectChannel
 20978     11CF                     i1l848:
 20979     11CF  0008               	return
 20980     11D0                     __end_of_adcConversionDoneHandler:
 20981                           
 20982                           	psect	text90
 20983     1DAC                     __ptext90:	
 20984 ;; *************** function i1_ADC_SelectChannel *****************
 20985 ;; Defined at:
 20986 ;;		line 82 in file "mcc_generated_files/adc/src/adc.c"
 20987 ;; Parameters:    Size  Location     Type
 20988 ;;  channel         1    wreg     enum E6663
 20989 ;; Auto vars:     Size  Location     Type
 20990 ;;  channel         1    1[COMMON] enum E6663
 20991 ;; Return value:  Size  Location     Type
 20992 ;;                  1    wreg      void 
 20993 ;; Registers used:
 20994 ;;		wreg, status,2, status,0
 20995 ;; Tracked objects:
 20996 ;;		On entry : 0/0
 20997 ;;		On exit  : 0/0
 20998 ;;		Unchanged: 0/0
 20999 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 21000 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 21001 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 21002 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 21003 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 21004 ;;Total ram usage:        2 bytes
 21005 ;; Hardware stack levels used: 1
 21006 ;; This function calls:
 21007 ;;		Nothing
 21008 ;; This function is called by:
 21009 ;;		_adcConversionDoneHandler
 21010 ;; This function uses a non-reentrant model
 21011 ;;
 21012                           
 21013     1DAC                     i1_ADC_SelectChannel:	
 21014                           ;psect for function i1_ADC_SelectChannel
 21015                           
 21016                           
 21017                           ;incstack = 0
 21018                           ; Regs used in i1_ADC_SelectChannel: [wreg+status,2+status,0]
 21019                           ;i1ADC_SelectChannel@channel stored from wreg
 21020     1DAC  00F1               	movwf	i1ADC_SelectChannel@channel
 21021     1DAD                     i1l5241:
 21022                           
 21023                           ;mcc_generated_files/adc/src/adc.c: 82: void ADC_SelectChannel(adc_channel_t channel);mc
      +                          c_generated_files/adc/src/adc.c: 83: {;mcc_generated_files/adc/src/adc.c: 85:     ADCON0
      +                          bits.CHS = channel;
 21024     1DAD  0871               	movf	i1ADC_SelectChannel@channel,w
 21025     1DAE  00F0               	movwf	??i1_ADC_SelectChannel
 21026     1DAF  0DF0               	rlf	??i1_ADC_SelectChannel,f
 21027     1DB0  0DF0               	rlf	??i1_ADC_SelectChannel,f
 21028     1DB1  0021               	movlb	1	; select bank1
 21029     1DB2  081D               	movf	29,w	;volatile
 21030     1DB3  0670               	xorwf	??i1_ADC_SelectChannel,w
 21031     1DB4  3903               	andlw	-253
 21032     1DB5  0670               	xorwf	??i1_ADC_SelectChannel,w
 21033     1DB6  009D               	movwf	29	;volatile
 21034     1DB7                     i1l30:
 21035     1DB7  0008               	return
 21036     1DB8                     __end_ofi1_ADC_SelectChannel:
 21037                           
 21038                           	psect	text91
 21039     1D31                     __ptext91:	
 21040 ;; *************** function _ADC_GetConversionResult *****************
 21041 ;; Defined at:
 21042 ;;		line 100 in file "mcc_generated_files/adc/src/adc.c"
 21043 ;; Parameters:    Size  Location     Type
 21044 ;;		None
 21045 ;; Auto vars:     Size  Location     Type
 21046 ;;		None
 21047 ;; Return value:  Size  Location     Type
 21048 ;;                  2    0[COMMON] unsigned short 
 21049 ;; Registers used:
 21050 ;;		wreg
 21051 ;; Tracked objects:
 21052 ;;		On entry : 0/0
 21053 ;;		On exit  : 0/0
 21054 ;;		Unchanged: 0/0
 21055 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 21056 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 21057 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 21058 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 21059 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 21060 ;;Total ram usage:        2 bytes
 21061 ;; Hardware stack levels used: 1
 21062 ;; This function calls:
 21063 ;;		Nothing
 21064 ;; This function is called by:
 21065 ;;		_adcConversionDoneHandler
 21066 ;; This function uses a non-reentrant model
 21067 ;;
 21068                           
 21069     1D31                     _ADC_GetConversionResult:	
 21070                           ;psect for function _ADC_GetConversionResult
 21071                           
 21072     1D31                     i1l4619:	
 21073                           ;incstack = 0
 21074                           ; Regs used in _ADC_GetConversionResult: [wreg]
 21075                           
 21076                           
 21077                           ;mcc_generated_files/adc/src/adc.c: 103:     return ((adc_result_t)((ADRESH << 8) + ADRE
      +                          SL));
 21078     1D31  0021               	movlb	1	; select bank1
 21079     1D32  081C               	movf	28,w	;volatile
 21080     1D33  00F1               	movwf	?_ADC_GetConversionResult+1
 21081     1D34  081B               	movf	27,w	;volatile
 21082     1D35  00F0               	movwf	?_ADC_GetConversionResult
 21083     1D36                     i1l39:
 21084     1D36  0008               	return
 21085     1D37                     __end_of_ADC_GetConversionResult:
 21086     0002                     ___latbits      equ	2
 21087     007E                     btemp           set	126	;btemp
 21088     007E                     int$flags       set	126
 21089     007E                     wtemp0          set	126
 21090                           
 21091                           	psect	config
 21092                           
 21093                           ;Config register CONFIG1 @ 0x8007
 21094                           ;	FEXTOSC External Oscillator mode Selection bits
 21095                           ;	FEXTOSC = OFF, Oscillator not enabled
 21096                           ;	Power-up default value for COSC bits
 21097                           ;	RSTOSC = HFINT32, HFINTOSC with 2x PLL (32MHz)
 21098                           ;	Clock Out Enable bit
 21099                           ;	CLKOUTEN = OFF, CLKOUT function is disabled; I/O or oscillator function on OSC2
 21100                           ;	Clock Switch Enable bit
 21101                           ;	CSWEN = ON, Writing to NOSC and NDIV is allowed
 21102                           ;	Fail-Safe Clock Monitor Enable
 21103                           ;	FCMEN = ON, Fail-Safe Clock Monitor is enabled
 21104     8007                     	org	32775
 21105     8007  3F8C               	dw	16268
 21106                           
 21107                           ;Config register CONFIG2 @ 0x8008
 21108                           ;	Master Clear Enable bit
 21109                           ;	MCLRE = ON, MCLR/VPP pin function is MCLR; Weak pull-up enabled
 21110                           ;	Power-up Timer Enable bit
 21111                           ;	PWRTE = OFF, PWRT disabled
 21112                           ;	Watchdog Timer Enable bits
 21113                           ;	WDTE = OFF, WDT disabled; SWDTEN is ignored
 21114                           ;	Low-power BOR enable bit
 21115                           ;	LPBOREN = OFF, ULPBOR disabled
 21116                           ;	Brown-out Reset Enable bits
 21117                           ;	BOREN = ON, Brown-out Reset enabled, SBOREN bit ignored
 21118                           ;	Brown-out Reset Voltage selection bit
 21119                           ;	BORV = LOW, Brown-out voltage (Vbor) set to 2.45V
 21120                           ;	PPSLOCK bit One-Way Set Enable bit
 21121                           ;	PPS1WAY = ON, The PPSLOCK bit can be cleared and set only once; PPS registers remain l
      +                          ocked after one clear/set cycle
 21122                           ;	Stack Overflow/Underflow Reset Enable bit
 21123                           ;	STVREN = ON, Stack Overflow or Underflow will cause a Reset
 21124                           ;	Debugger enable bit
 21125                           ;	DEBUG = 0x1, unprogrammed default
 21126     8008                     	org	32776
 21127     8008  3FF3               	dw	16371
 21128                           
 21129                           ;Config register CONFIG3 @ 0x8009
 21130                           ;	User NVM self-write protection bits
 21131                           ;	WRT = OFF, Write protection off
 21132                           ;	Low Voltage Programming Enable bit
 21133                           ;	LVP = ON, Low Voltage programming enabled. MCLR/VPP pin function is MCLR. MCLRE config
      +                          uration bit is ignored.
 21134     8009                     	org	32777
 21135     8009  3FFF               	dw	16383
 21136                           
 21137                           ;Config register CONFIG4 @ 0x800A
 21138                           ;	User NVM Program Memory Code Protection bit
 21139                           ;	CP = OFF, User NVM code protection disabled
 21140                           ;	Data NVM Memory Code Protection bit
 21141                           ;	CPD = OFF, Data NVM code protection disabled
 21142     800A                     	org	32778
 21143     800A  3FFF               	dw	16383

Data Sizes:
    Strings     140
    Constant    86
    Data        12
    BSS         126
    Persistent  44
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     14      14
    BANK0            80     53      79
    BANK1            80     77      79
    BANK2            80     14      60
    BANK3            80      0      76
    BANK4            80     21      21
    BANK5            80      0       0
    BANK6            80      0       0
    BANK7            80      0       0
    BANK8            80      0       0
    BANK9            80      0       0
    BANK10           80      0       0
    BANK11           80      0       0
    BANK12           48      0       0

Pointer List with Targets:

    ADC_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> ADC_DefaultInterruptHandler(), adcConversionDoneHandler(), NULL(), 

    ADC_SetInterruptHandler@InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> ADC_DefaultInterruptHandler(), adcConversionDoneHandler(), 

    atoi@s	PTR const unsigned char  size(1) Largest target is 20
		 -> line(BANK3[20]), 

    dtoa@fp	PTR struct _IO_FILE size(2) Largest target is 11
		 -> sprintf@f(BANK2[11]), NULL(NULL[0]), 

    EUSART_FramingErrorCallbackRegister@callbackHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART_DefaultFramingErrorCallback(), 

    EUSART_FramingErrorHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART_DefaultFramingErrorCallback(), NULL(), 

    EUSART_OverrunErrorCallbackRegister@callbackHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART_DefaultOverrunErrorCallback(), 

    EUSART_OverrunErrorHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART_DefaultOverrunErrorCallback(), NULL(), 

    EUSART_RxCompleteInterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> NULL(), 

    EUSART_RxInterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART_ReceiveISR(), NULL(), 

    EUSART_TxCompleteInterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> NULL(), 

    EUSART_TxInterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART_TransmitISR(), NULL(), 

    f$.$buffer	PTR unsigned char  size(2) Largest target is 20
		 -> main@str(BANK4[20]), 

    f$.$source	PTR const unsigned char  size(2) Largest target is 0

    fputc@fp	PTR struct _IO_FILE size(2) Largest target is 11
		 -> sprintf@f(BANK2[11]), NULL(NULL[0]), 

    fputc@fp$.$buffer	PTR unsigned char  size(2) Largest target is 20
		 -> main@str(BANK4[20]), 

    fputc@fp$.$source	PTR const unsigned char  size(2) Largest target is 0

    fputs@fp	PTR struct _IO_FILE size(2) Largest target is 11
		 -> sprintf@f(BANK2[11]), NULL(NULL[0]), 

    fputs@s	PTR const unsigned char  size(1) Largest target is 32
		 -> dbuf(BANK3[32]), 

    INT_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> INT_DefaultInterruptHandler(), NULL(), 

    INT_SetInterruptHandler@InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> INT_DefaultInterruptHandler(), 

    ledstrip$BufferExchange	PTR FTN(PTR void ,unsigned int ,)void  size(2) Largest target is 1
		 -> SPI1_BufferExchange(), 

    ledstrip$BufferRead	PTR FTN(PTR void ,unsigned int ,)void  size(2) Largest target is 1
		 -> SPI1_BufferRead(), 

    ledstrip$BufferWrite	PTR FTN(PTR void ,unsigned int ,)void  size(2) Largest target is 1
		 -> SPI1_BufferWrite(), 

    ledstrip$ByteExchange	PTR FTN(unsigned char ,)unsigned char  size(2) Largest target is 1
		 -> SPI1_ByteExchange(), 

    ledstrip$ByteRead	PTR FTN()unsigned char  size(2) Largest target is 1
		 -> SPI1_ByteRead(), 

    ledstrip$ByteWrite	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> SPI1_ByteWrite(), 

    ledstrip$Close	PTR FTN()void  size(2) Largest target is 1
		 -> SPI1_Close(), 

    ledstrip$Deinitialize	PTR FTN()void  size(2) Largest target is 1
		 -> SPI1_Deinitialize(), 

    ledstrip$Initialize	PTR FTN()void  size(2) Largest target is 1
		 -> SPI1_Initialize(), 

    ledstrip$IsRxReady	PTR FTN()_Bool  size(2) Largest target is 1
		 -> SPI1_IsRxReady(), 

    ledstrip$IsTxReady	PTR FTN()_Bool  size(2) Largest target is 1
		 -> SPI1_IsTxReady(), 

    ledstrip$Open	PTR FTN(unsigned char ,)_Bool  size(2) Largest target is 1
		 -> SPI1_Open(), 

    ledstrip$RxCompleteCallbackRegister	PTR FTN(PTR FTN()void ,)void  size(2) Largest target is 1
		 -> NULL(), 

    ledstrip$TxCompleteCallbackRegister	PTR FTN(PTR FTN()void ,)void  size(2) Largest target is 1
		 -> NULL(), 

    pad@buf	PTR unsigned char  size(1) Largest target is 32
		 -> dbuf(BANK3[32]), 

    pad@fp	PTR struct _IO_FILE size(2) Largest target is 11
		 -> sprintf@f(BANK2[11]), NULL(NULL[0]), 

    printf@ap	PTR void [1] size(1) Largest target is 2
		 -> ?_printf(BANK1[2]), ?_sprintf(BANK1[2]), 

    printf@fmt	PTR const unsigned char  size(2) Largest target is 25
		 -> main@str(BANK4[20]), STR_10(CODE[17]), STR_2(CODE[8]), STR_3(CODE[24]), 
		 -> STR_4(CODE[11]), STR_5(CODE[3]), STR_6(CODE[25]), STR_7(CODE[13]), 
		 -> STR_8(CODE[13]), STR_9(CODE[15]), 

    printOut@str	PTR unsigned char  size(1) Largest target is 20
		 -> main@str(BANK4[20]), 

    read_prec_or_width@ap	PTR PTR void [1] size(2) Largest target is 1
		 -> printf@ap(BANK1[1]), sprintf@ap(BANK2[1]), 

    read_prec_or_width@fmt	PTR PTR const unsigned char  size(1) Largest target is 2
		 -> vfprintf@cfmt(BANK1[2]), 

    S2062$buffer	PTR unsigned char  size(2) Largest target is 20
		 -> main@str(BANK4[20]), 

    S2062$source	PTR const unsigned char  size(2) Largest target is 0

    S242$4$0	PTR void  size(2) Largest target is 0

    S242$5$0	PTR void  size(2) Largest target is 0

    S242$6$0	PTR void  size(2) Largest target is 0

    S242SPI_INTERFACE$BufferExchange	PTR FTN(PTR void ,unsigned int ,)void  size(2) Largest target is 1
		 -> SPI1_BufferExchange(), 

    S242SPI_INTERFACE$BufferRead	PTR FTN(PTR void ,unsigned int ,)void  size(2) Largest target is 1
		 -> SPI1_BufferRead(), 

    S242SPI_INTERFACE$BufferWrite	PTR FTN(PTR void ,unsigned int ,)void  size(2) Largest target is 1
		 -> SPI1_BufferWrite(), 

    S242SPI_INTERFACE$ByteExchange	PTR FTN(unsigned char ,)unsigned char  size(2) Largest target is 1
		 -> SPI1_ByteExchange(), 

    S242SPI_INTERFACE$ByteRead	PTR FTN()unsigned char  size(2) Largest target is 1
		 -> SPI1_ByteRead(), 

    S242SPI_INTERFACE$ByteWrite	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> SPI1_ByteWrite(), 

    S242SPI_INTERFACE$Close	PTR FTN()void  size(2) Largest target is 1
		 -> SPI1_Close(), 

    S242SPI_INTERFACE$Deinitialize	PTR FTN()void  size(2) Largest target is 1
		 -> SPI1_Deinitialize(), 

    S242SPI_INTERFACE$Initialize	PTR FTN()void  size(2) Largest target is 1
		 -> SPI1_Initialize(), 

    S242SPI_INTERFACE$IsRxReady	PTR FTN()_Bool  size(2) Largest target is 1
		 -> SPI1_IsRxReady(), 

    S242SPI_INTERFACE$IsTxReady	PTR FTN()_Bool  size(2) Largest target is 1
		 -> SPI1_IsTxReady(), 

    S242SPI_INTERFACE$Open	PTR FTN(unsigned char ,)_Bool  size(2) Largest target is 1
		 -> SPI1_Open(), 

    S242SPI_INTERFACE$RxCompleteCallbackRegister	PTR FTN(PTR FTN()void ,)void  size(2) Largest target is 1
		 -> NULL(), 

    S242SPI_INTERFACE$TxCompleteCallbackRegister	PTR FTN(PTR FTN()void ,)void  size(2) Largest target is 1
		 -> NULL(), 

    S997$17$0	PTR FTN()void  size(2) Largest target is 0

    S997$18$0	PTR FTN()void  size(2) Largest target is 0

    S997$20$0	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART_DefaultFramingErrorCallback(), 

    S997$21$0	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART_DefaultOverrunErrorCallback(), 

    S997$AutoBaudEventEnableGet	PTR FTN()_Bool  size(2) Largest target is 1
		 -> NULL(), 

    S997$AutoBaudQuery	PTR FTN()_Bool  size(2) Largest target is 1
		 -> EUSART_AutoBaudQuery(), 

    S997$AutoBaudSet	PTR FTN(_Bool ,)void  size(2) Largest target is 1
		 -> EUSART_AutoBaudSet(), 

    S997$BaudRateGet	PTR FTN()unsigned long  size(2) Largest target is 1
		 -> NULL(), 

    S997$BaudRateSet	PTR FTN(unsigned long ,)void  size(2) Largest target is 1
		 -> NULL(), 

    S997$BRGCountGet	PTR FTN()unsigned long  size(2) Largest target is 1
		 -> NULL(), 

    S997$BRGCountSet	PTR FTN(unsigned long ,)void  size(2) Largest target is 1
		 -> NULL(), 

    S997$Deinitialize	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART_Deinitialize(), 

    S997$ErrorGet	PTR FTN()unsigned int  size(2) Largest target is 2
		 -> EUSART_ErrorGet(), 

    S997$EventCallbackRegister	PTR FTN(PTR FTN()void ,)void  size(2) Largest target is 1
		 -> NULL(), 

    S997$FramingErrorCallbackRegister	PTR FTN(PTR FTN()void ,)void  size(2) Largest target is 1
		 -> EUSART_FramingErrorCallbackRegister(), 

    S997$Initialize	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART_Initialize(), 

    S997$IsRxReady	PTR FTN()_Bool  size(2) Largest target is 1
		 -> EUSART_IsRxReady(), 

    S997$IsTxDone	PTR FTN()_Bool  size(2) Largest target is 1
		 -> EUSART_IsTxDone(), 

    S997$IsTxReady	PTR FTN()_Bool  size(2) Largest target is 1
		 -> EUSART_IsTxReady(), 

    S997$OverrunErrorCallbackRegister	PTR FTN(PTR FTN()void ,)void  size(2) Largest target is 1
		 -> EUSART_OverrunErrorCallbackRegister(), 

    S997$ParityErrorCallbackRegister	PTR FTN(PTR FTN()void ,)void  size(2) Largest target is 1
		 -> NULL(), 

    S997$Read	PTR FTN()unsigned char  size(2) Largest target is 1
		 -> EUSART_Read(), 

    S997$RxCompleteCallbackRegister	PTR FTN(PTR FTN()void ,)void  size(2) Largest target is 1
		 -> EUSART_RxCompleteCallbackRegister(), 

    S997$TransmitDisable	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART_TransmitDisable(), 

    S997$TransmitEnable	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART_TransmitEnable(), 

    S997$TxCollisionCallbackRegister	PTR FTN(PTR FTN()void ,)void  size(2) Largest target is 1
		 -> NULL(), 

    S997$TxCompleteCallbackRegister	PTR FTN(PTR FTN()void ,)void  size(2) Largest target is 1
		 -> EUSART_TxCompleteCallbackRegister(), 

    S997$Write	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> EUSART_Write(), 

    sp__readLine	PTR unsigned char  size(1) Largest target is 20
		 -> line(BANK3[20]), 

    sprintf@ap	PTR void [1] size(1) Largest target is 2
		 -> ?_printf(BANK1[2]), ?_sprintf(BANK1[2]), 

    sprintf@fmt	PTR const unsigned char  size(2) Largest target is 14
		 -> STR_1(CODE[14]), 

    sprintf@s	PTR unsigned char  size(1) Largest target is 20
		 -> main@str(BANK4[20]), 

    str2float@str	PTR unsigned char  size(1) Largest target is 20
		 -> line(BANK3[20]), 

    strlen@a	PTR const unsigned char  size(1) Largest target is 32
		 -> dbuf(BANK3[32]), 

    strlen@s	PTR const unsigned char  size(1) Largest target is 32
		 -> dbuf(BANK3[32]), 

    TMR2_PeriodMatchCallback	PTR FTN()void  size(2) Largest target is 1
		 -> TMR2_DefaultPeriodMatchCallback(), NULL(), 

    TMR4_PeriodMatchCallback	PTR FTN()void  size(2) Largest target is 1
		 -> controller(), TMR4_DefaultPeriodMatchCallback(), NULL(), 

    TMR4_PeriodMatchCallbackRegister@CallbackHandler	PTR FTN()void  size(2) Largest target is 1
		 -> controller(), 

    TMR6_PeriodMatchCallback	PTR FTN()void  size(2) Largest target is 1
		 -> TMR6_DefaultPeriodMatchCallback(), updateLedstripAnimation(), NULL(), 

    TMR6_PeriodMatchCallbackRegister@CallbackHandler	PTR FTN()void  size(2) Largest target is 1
		 -> updateLedstripAnimation(), 

    UART1$AutoBaudEventEnableGet	PTR FTN()_Bool  size(2) Largest target is 1
		 -> NULL(), 

    UART1$AutoBaudQuery	PTR FTN()_Bool  size(2) Largest target is 1
		 -> EUSART_AutoBaudQuery(), 

    UART1$AutoBaudSet	PTR FTN(_Bool ,)void  size(2) Largest target is 1
		 -> EUSART_AutoBaudSet(), 

    UART1$BaudRateGet	PTR FTN()unsigned long  size(2) Largest target is 1
		 -> NULL(), 

    UART1$BaudRateSet	PTR FTN(unsigned long ,)void  size(2) Largest target is 1
		 -> NULL(), 

    UART1$BRGCountGet	PTR FTN()unsigned long  size(2) Largest target is 1
		 -> NULL(), 

    UART1$BRGCountSet	PTR FTN(unsigned long ,)void  size(2) Largest target is 1
		 -> NULL(), 

    UART1$Deinitialize	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART_Deinitialize(), 

    UART1$ErrorGet	PTR FTN()unsigned int  size(2) Largest target is 2
		 -> EUSART_ErrorGet(), 

    UART1$EventCallbackRegister	PTR FTN(PTR FTN()void ,)void  size(2) Largest target is 1
		 -> NULL(), 

    UART1$FramingErrorCallbackRegister	PTR FTN(PTR FTN()void ,)void  size(2) Largest target is 1
		 -> EUSART_FramingErrorCallbackRegister(), 

    UART1$Initialize	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART_Initialize(), 

    UART1$IsRxReady	PTR FTN()_Bool  size(2) Largest target is 1
		 -> EUSART_IsRxReady(), 

    UART1$IsTxDone	PTR FTN()_Bool  size(2) Largest target is 1
		 -> EUSART_IsTxDone(), 

    UART1$IsTxReady	PTR FTN()_Bool  size(2) Largest target is 1
		 -> EUSART_IsTxReady(), 

    UART1$OverrunErrorCallbackRegister	PTR FTN(PTR FTN()void ,)void  size(2) Largest target is 1
		 -> EUSART_OverrunErrorCallbackRegister(), 

    UART1$ParityErrorCallbackRegister	PTR FTN(PTR FTN()void ,)void  size(2) Largest target is 1
		 -> NULL(), 

    UART1$Read	PTR FTN()unsigned char  size(2) Largest target is 1
		 -> EUSART_Read(), 

    UART1$RxCompleteCallbackRegister	PTR FTN(PTR FTN()void ,)void  size(2) Largest target is 1
		 -> EUSART_RxCompleteCallbackRegister(), 

    UART1$TransmitDisable	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART_TransmitDisable(), 

    UART1$TransmitEnable	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART_TransmitEnable(), 

    UART1$TxCollisionCallbackRegister	PTR FTN(PTR FTN()void ,)void  size(2) Largest target is 1
		 -> NULL(), 

    UART1$TxCompleteCallbackRegister	PTR FTN(PTR FTN()void ,)void  size(2) Largest target is 1
		 -> EUSART_TxCompleteCallbackRegister(), 

    UART1$Write	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> EUSART_Write(), 

    uartHandler@str	PTR unsigned char  size(1) Largest target is 20
		 -> line(BANK3[20]), 

    utoa@fp	PTR struct _IO_FILE size(2) Largest target is 11
		 -> sprintf@f(BANK2[11]), NULL(NULL[0]), 

    vfpfcnvrt@ap	PTR PTR void  size(2) Largest target is 1
		 -> printf@ap(BANK1[1]), sprintf@ap(BANK2[1]), 

    vfpfcnvrt@cp	PTR unsigned char  size(2) Largest target is 25
		 -> main@str(BANK4[20]), STR_1(CODE[14]), STR_10(CODE[17]), STR_2(CODE[8]), 
		 -> STR_3(CODE[24]), STR_4(CODE[11]), STR_5(CODE[3]), STR_6(CODE[25]), 
		 -> STR_7(CODE[13]), STR_8(CODE[13]), STR_9(CODE[15]), 

    vfpfcnvrt@fmt	PTR PTR unsigned char  size(1) Largest target is 2
		 -> vfprintf@cfmt(BANK1[2]), 

    vfpfcnvrt@fp	PTR struct _IO_FILE size(2) Largest target is 11
		 -> sprintf@f(BANK2[11]), NULL(NULL[0]), 

    vfprintf@ap	PTR PTR void  size(2) Largest target is 1
		 -> printf@ap(BANK1[1]), sprintf@ap(BANK2[1]), 

    vfprintf@cfmt	PTR unsigned char  size(2) Largest target is 25
		 -> main@str(BANK4[20]), STR_1(CODE[14]), STR_10(CODE[17]), STR_2(CODE[8]), 
		 -> STR_3(CODE[24]), STR_4(CODE[11]), STR_5(CODE[3]), STR_6(CODE[25]), 
		 -> STR_7(CODE[13]), STR_8(CODE[13]), STR_9(CODE[15]), 

    vfprintf@fmt	PTR const unsigned char  size(2) Largest target is 25
		 -> main@str(BANK4[20]), STR_1(CODE[14]), STR_10(CODE[17]), STR_2(CODE[8]), 
		 -> STR_3(CODE[24]), STR_4(CODE[11]), STR_5(CODE[3]), STR_6(CODE[25]), 
		 -> STR_7(CODE[13]), STR_8(CODE[13]), STR_9(CODE[15]), 

    vfprintf@fp	PTR struct _IO_FILE size(2) Largest target is 11
		 -> sprintf@f(BANK2[11]), NULL(NULL[0]), 


Critical Paths under _main in COMMON

    None.

Critical Paths under _INTERRUPT_InterruptManager in COMMON

    _controller->i1___xxtofl
    i1___flmul->i1___xxtofl
    i1___fladd->i1___xxtofl
    ___fltol->i1___xxtofl
    _ADC_ISR->_adcConversionDoneHandler
    _adcConversionDoneHandler->_ADC_GetConversionResult
    _adcConversionDoneHandler->i1_ADC_SelectChannel

Critical Paths under _main in BANK0

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK0

    _TMR4_ISR->_controller
    _controller->i1___fladd
    i1___fladd->i1___flmul
    ___fltol->i1___flmul

Critical Paths under _main in BANK1

    _main->_uartHandler
    _uartHandler->_readLine
    _str2float->___flmul
    ___flmul->__Umul8_16
    ___fladd->___xxtofl
    _setSetpoint->_atoi
    _setKp->_str2float
    _setKi->_str2float
    _readLine->_printf
    _atoi->___wmul
    _sprintf->_vfprintf
    _printOut->_printf
    _printLogs->_printf
    _printf->_vfprintf
    _vfprintf->_vfpfcnvrt
    _vfpfcnvrt->_dtoa
    _utoa->_pad
    _read_prec_or_width->___wmul
    _dtoa->_pad
    _pad->_fputs
    _fputs->_fputc
    _fputc->_putch
    _putch->_EUSART_Write
    _abs->___awmod
    _initLedstrip->_SPI1_Open
    _SPI1_Open->___wmul
    _initAdcMultiplexer->_ADC_SelectChannel
    _initAdcMultiplexer->_ADC_SetInterruptHandler
    _updateLedstripAnimation->_dutycycle_led_strip
    _dutycycle_led_strip->___lwdiv
    _sendLedstripStartFrame->_SPI1_ByteExchange
    _sendLedstripFrame->_SPI1_ByteExchange
    _sendLedstripEndFrame->_SPI1_ByteExchange
    ___wmul->_getDutycycle
    ___lwdiv->___wmul
    _INTERRUPT_Initialize->_INT_SetInterruptHandler
    _EUSART_Initialize->_EUSART_FramingErrorCallbackRegister
    _EUSART_Initialize->_EUSART_OverrunErrorCallbackRegister
    _ADC_Initialize->_ADC_SetInterruptHandler

Critical Paths under _INTERRUPT_InterruptManager in BANK1

    None.

Critical Paths under _main in BANK2

    _main->_sprintf

Critical Paths under _INTERRUPT_InterruptManager in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK12

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                23    23      0   51300
                                             12 BANK2      2     2      0
                                              0 BANK4     21    21      0
           _PWM_buzzer_LoadDutyValue
                  _SYSTEM_Initialize
   _TMR4_PeriodMatchCallbackRegister
                         _TMR6_Tasks
                             ___wmul
                      _getPomphoogte
                 _initAdcMultiplexer
                       _initLedstrip
                          _printLogs
                           _printOut
                        _setSetpoint
                            _sprintf
                        _uartHandler
 ---------------------------------------------------------------------------------
 (1) _uartHandler                                          1     1      0   24926
                                             76 BANK1      1     1      0
                               _atoi
                             _printf
                           _readLine
                              _setKi
                              _setKp
                        _setSetpoint
                          _str2float
 ---------------------------------------------------------------------------------
 (2) _str2float                                           12     8      4    8048
                                             35 BANK1     12     8      4
                            ___fladd
                            ___fldiv
                            ___flmul
                           ___xxtofl
 ---------------------------------------------------------------------------------
 (3) ___xxtofl                                            14    10      4     517
                                              0 BANK1     14    10      4
 ---------------------------------------------------------------------------------
 (3) ___flmul                                             26    18      8    2443
                                              9 BANK1     26    18      8
                          __Umul8_16
 ---------------------------------------------------------------------------------
 (4) __Umul8_16                                            9     7      2     232
                                              0 BANK1      9     7      2
 ---------------------------------------------------------------------------------
 (3) ___fldiv                                             26    18      8    1689
                                              0 BANK1     26    18      8
 ---------------------------------------------------------------------------------
 (3) ___fladd                                             20    12      8    2954
                                             14 BANK1     20    12      8
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (2) _setSetpoint                                          2     0      2      37
                                             15 BANK1      2     0      2
                             ___wmul (ARG)
                               _atoi (ARG)
 ---------------------------------------------------------------------------------
 (2) _setKp                                                4     0      4      34
                                             47 BANK1      4     0      4
                          _str2float (ARG)
 ---------------------------------------------------------------------------------
 (2) _setKi                                                4     0      4      34
                                             47 BANK1      4     0      4
                          _str2float (ARG)
 ---------------------------------------------------------------------------------
 (2) _readLine                                             3     1      2    8081
                                             73 BANK1      3     1      2
                   _EUSART_IsRxReady
                        _EUSART_Read
                             _printf
 ---------------------------------------------------------------------------------
 (3) _EUSART_Read                                          2     2      0      71
                                              0 BANK1      2     2      0
 ---------------------------------------------------------------------------------
 (3) _EUSART_IsRxReady                                     0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _atoi                                                 7     5      2     524
                                              8 BANK1      7     5      2
                             ___wmul
 ---------------------------------------------------------------------------------
 (1) _sprintf                                             19    14      5    8211
                                             66 BANK1      5     0      5
                                              0 BANK2     12    12      0
                           _vfprintf
 ---------------------------------------------------------------------------------
 (1) _printOut                                             1     0      1    8044
                                             73 BANK1      1     0      1
                             _printf
 ---------------------------------------------------------------------------------
 (1) _printLogs                                            0     0      0    8010
                      _getPomphoogte
                             _printf
 ---------------------------------------------------------------------------------
 (3) _printf                                               9     3      6    8010
                                             66 BANK1      7     1      6
                               _atoi (ARG)
                      _getPomphoogte (ARG)
                           _vfprintf
 ---------------------------------------------------------------------------------
 (4) _vfprintf                                             9     3      6    7881
                                             57 BANK1      9     3      6
                          _vfpfcnvrt
 ---------------------------------------------------------------------------------
 (5) _vfpfcnvrt                                           17    12      5    7624
                                             41 BANK1     16    11      5
                               _dtoa
                              _fputc
                 _read_prec_or_width
                               _utoa
 ---------------------------------------------------------------------------------
 (6) _utoa                                                10     6      4    2455
                                             28 BANK1     10     6      4
                            ___lwdiv
                            ___lwmod
                                _pad
 ---------------------------------------------------------------------------------
 (7) ___lwmod                                              5     1      4     238
                                              0 BANK1      5     1      4
 ---------------------------------------------------------------------------------
 (6) _read_prec_or_width                                   9     6      3     450
                                              8 BANK1      9     6      3
                             ___wmul
 ---------------------------------------------------------------------------------
 (6) _dtoa                                                13     9      4    3185
                                             28 BANK1     13     9      4
                            ___awdiv
                            ___awmod
                                _abs
                                _pad
 ---------------------------------------------------------------------------------
 (7) _pad                                                  8     3      5    1596
                                             20 BANK1      8     3      5
                              _fputc
                              _fputs
                             _strlen
 ---------------------------------------------------------------------------------
 (8) _strlen                                               3     1      2     133
                                              0 BANK1      3     1      2
 ---------------------------------------------------------------------------------
 (8) _fputs                                                8     5      3     639
                                             12 BANK1      8     5      3
                              _fputc
 ---------------------------------------------------------------------------------
 (9) _fputc                                                9     5      4     487
                                              3 BANK1      9     5      4
                              _putch
 ---------------------------------------------------------------------------------
 (10) _putch                                               1     1      0     146
                                              2 BANK1      1     1      0
                   _EUSART_IsTxReady
                       _EUSART_Write
 ---------------------------------------------------------------------------------
 (11) _EUSART_Write                                        2     1      1      99
                                              0 BANK1      2     1      1
 ---------------------------------------------------------------------------------
 (11) _EUSART_IsTxReady                                    0     0      0       0
 ---------------------------------------------------------------------------------
 (7) _abs                                                  4     2      2      96
                                              6 BANK1      4     2      2
                            ___awmod (ARG)
 ---------------------------------------------------------------------------------
 (7) ___awmod                                              6     2      4     439
                                              0 BANK1      6     2      4
 ---------------------------------------------------------------------------------
 (7) ___awdiv                                              8     4      4     451
                                              0 BANK1      8     4      4
 ---------------------------------------------------------------------------------
 (2) _getPomphoogte                                        2     0      2       0
                                              0 BANK1      2     0      2
 ---------------------------------------------------------------------------------
 (1) _initLedstrip                                         0     0      0     361
                          _SPI1_Open
   _TMR6_PeriodMatchCallbackRegister
 ---------------------------------------------------------------------------------
 (2) _TMR6_PeriodMatchCallbackRegister                     2     0      2      34
                                              0 BANK1      2     0      2
 ---------------------------------------------------------------------------------
 (2) _SPI1_Open                                            4     3      1     327
                                              8 BANK1      3     2      1
                             ___wmul
 ---------------------------------------------------------------------------------
 (1) _initAdcMultiplexer                                   0     0      0      84
                  _ADC_SelectChannel
            _ADC_SetInterruptHandler
 ---------------------------------------------------------------------------------
 (2) _ADC_SelectChannel                                    2     2      0      47
                                              0 BANK1      2     2      0
 ---------------------------------------------------------------------------------
 (1) _TMR6_Tasks                                           0     0      0     956
                                NULL *
    _TMR6_DefaultPeriodMatchCallback *
            _updateLedstripAnimation *
 ---------------------------------------------------------------------------------
 (2) _updateLedstripAnimation                              0     0      0     956
                _dutycycle_led_strip
 ---------------------------------------------------------------------------------
 (3) _dutycycle_led_strip                                  2     2      0     956
                                             15 BANK1      2     2      0
                            ___lwdiv
                             ___wmul
                       _getDutycycle
               _sendLedstripEndFrame
                  _sendLedstripFrame
             _sendLedstripStartFrame
 ---------------------------------------------------------------------------------
 (4) _sendLedstripStartFrame                               0     0      0      67
                  _SPI1_ByteExchange
 ---------------------------------------------------------------------------------
 (4) _sendLedstripFrame                                    4     1      3     252
                                              1 BANK1      4     1      3
                  _SPI1_ByteExchange
 ---------------------------------------------------------------------------------
 (4) _sendLedstripEndFrame                                 0     0      0      67
                  _SPI1_ByteExchange
 ---------------------------------------------------------------------------------
 (5) _SPI1_ByteExchange                                    1     0      1      67
                                              0 BANK1      1     0      1
 ---------------------------------------------------------------------------------
 (4) _getDutycycle                                         2     0      2       0
                                              0 BANK1      2     0      2
 ---------------------------------------------------------------------------------
 (7) ___wmul                                               6     2      4     184
                                              2 BANK1      6     2      4
                       _getDutycycle (ARG)
 ---------------------------------------------------------------------------------
 (7) ___lwdiv                                              7     3      4     253
                                              8 BANK1      7     3      4
                             ___wmul (ARG)
                       _getDutycycle (ARG)
 ---------------------------------------------------------------------------------
 (2) _TMR6_DefaultPeriodMatchCallback                      0     0      0       0
 ---------------------------------------------------------------------------------
 (14) NULL(Fake)                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _TMR4_PeriodMatchCallbackRegister                     2     0      2      34
                                              0 BANK1      2     0      2
 ---------------------------------------------------------------------------------
 (1) _SYSTEM_Initialize                                    0     0      0     201
                     _ADC_Initialize
                   _CLOCK_Initialize
                  _EUSART_Initialize
               _INTERRUPT_Initialize
             _PIN_MANAGER_Initialize
              _PWM_buzzer_Initialize
                    _SPI1_Initialize
                    _TMR2_Initialize
                    _TMR4_Initialize
                    _TMR6_Initialize
                 _pwm_fan_Initialize
 ---------------------------------------------------------------------------------
 (2) _pwm_fan_Initialize                                   0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _TMR6_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _TMR4_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _TMR2_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _SPI1_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _PWM_buzzer_Initialize                                0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _PIN_MANAGER_Initialize                               0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _INTERRUPT_Initialize                                 0     0      0      34
            _INT_SetInterruptHandler
 ---------------------------------------------------------------------------------
 (3) _INT_SetInterruptHandler                              2     0      2      34
                                              0 BANK1      2     0      2
 ---------------------------------------------------------------------------------
 (2) _EUSART_Initialize                                    0     0      0     130
_EUSART_FramingErrorCallbackRegister
_EUSART_OverrunErrorCallbackRegister
 ---------------------------------------------------------------------------------
 (3) _EUSART_OverrunErrorCallbackRegister                  2     0      2      65
                                              0 BANK1      2     0      2
 ---------------------------------------------------------------------------------
 (3) _EUSART_FramingErrorCallbackRegister                  2     0      2      65
                                              0 BANK1      2     0      2
 ---------------------------------------------------------------------------------
 (2) _CLOCK_Initialize                                     0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _ADC_Initialize                                       0     0      0      37
            _ADC_SetInterruptHandler
 ---------------------------------------------------------------------------------
 (2) _ADC_SetInterruptHandler                              2     0      2      37
                                              0 BANK1      2     0      2
 ---------------------------------------------------------------------------------
 (1) _PWM_buzzer_LoadDutyValue                             4     2      2      68
                                              0 BANK1      4     2      2
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 14
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (12) _INTERRUPT_InterruptManager                          0     0      0    4469
                                NULL *
                            _ADC_ISR
                  _EUSART_ReceiveISR *
                 _EUSART_TransmitISR *
                           _TMR2_ISR
                           _TMR4_ISR
 ---------------------------------------------------------------------------------
 (13) _TMR4_ISR                                            0     0      0    4349
                                NULL *
    _TMR4_DefaultPeriodMatchCallback *
                         _controller *
 ---------------------------------------------------------------------------------
 (14) _controller                                          7     7      0    4349
                                             46 BANK0      7     7      0
                            ___fltol
                    _getHoogtesensor
              _pwm_fan_LoadDutyValue
                          i1___fladd
                          i1___flmul
                         i1___xxtofl
 ---------------------------------------------------------------------------------
 (15) i1___xxtofl                                         14    10      4     338
                                              0 COMMON    14    10      4
 ---------------------------------------------------------------------------------
 (15) i1___flmul                                          26    18      8    1611
                                              0 BANK0     26    18      8
                        i1__Umul8_16
                         i1___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (16) i1__Umul8_16                                         9     7      2     139
                                              0 COMMON     9     7      2
 ---------------------------------------------------------------------------------
 (15) i1___fladd                                          20    12      8    1986
                                             26 BANK0     20    12      8
                          i1___flmul (ARG)
                         i1___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (15) _pwm_fan_LoadDutyValue                               4     2      2      45
                                              0 COMMON     4     2      2
 ---------------------------------------------------------------------------------
 (15) _getHoogtesensor                                     2     0      2       0
                                              0 COMMON     2     0      2
 ---------------------------------------------------------------------------------
 (15) ___fltol                                            10     6      4     234
                                             26 BANK0     10     6      4
                          i1___flmul (ARG)
                         i1___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (14) _TMR4_DefaultPeriodMatchCallback                     0     0      0       0
 ---------------------------------------------------------------------------------
 (13) _TMR2_ISR                                            0     0      0       0
                                NULL *
    _TMR2_DefaultPeriodMatchCallback *
 ---------------------------------------------------------------------------------
 (14) _TMR2_DefaultPeriodMatchCallback                     0     0      0       0
 ---------------------------------------------------------------------------------
 (13) _EUSART_TransmitISR                                  1     1      0      23
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (13) _EUSART_ReceiveISR                                   2     2      0      68
                                              0 COMMON     2     2      0
                                NULL *
 _EUSART_DefaultFramingErrorCallback *
 _EUSART_DefaultOverrunErrorCallback *
 ---------------------------------------------------------------------------------
 (14) _EUSART_DefaultOverrunErrorCallback                  0     0      0       0
 ---------------------------------------------------------------------------------
 (14) _EUSART_DefaultFramingErrorCallback                  0     0      0       0
 ---------------------------------------------------------------------------------
 (13) _ADC_ISR                                             0     0      0      29
                                NULL *
        _ADC_DefaultInterruptHandler *
           _adcConversionDoneHandler *
 ---------------------------------------------------------------------------------
 (14) _adcConversionDoneHandler                            2     2      0      29
                                              2 COMMON     2     2      0
            _ADC_GetConversionResult
                i1_ADC_SelectChannel
 ---------------------------------------------------------------------------------
 (15) i1_ADC_SelectChannel                                 2     2      0      29
                                              0 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 (15) _ADC_GetConversionResult                             2     0      2       0
                                              0 COMMON     2     0      2
 ---------------------------------------------------------------------------------
 (14) _ADC_DefaultInterruptHandler                         0     0      0       0
 ---------------------------------------------------------------------------------
 (14) NULL(Fake)                                           0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 16
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _PWM_buzzer_LoadDutyValue
   _SYSTEM_Initialize
     _ADC_Initialize
       _ADC_SetInterruptHandler
     _CLOCK_Initialize
     _EUSART_Initialize
       _EUSART_FramingErrorCallbackRegister
       _EUSART_OverrunErrorCallbackRegister
     _INTERRUPT_Initialize
       _INT_SetInterruptHandler
     _PIN_MANAGER_Initialize
     _PWM_buzzer_Initialize
     _SPI1_Initialize
     _TMR2_Initialize
     _TMR4_Initialize
     _TMR6_Initialize
     _pwm_fan_Initialize
   _TMR4_PeriodMatchCallbackRegister
   _TMR6_Tasks
     NULL(Fake) *
     _TMR6_DefaultPeriodMatchCallback *
     _updateLedstripAnimation *
       _dutycycle_led_strip
         ___lwdiv
           ___wmul (ARG)
             _getDutycycle (ARG)
           _getDutycycle (ARG)
         ___wmul
         _getDutycycle
         _sendLedstripEndFrame
           _SPI1_ByteExchange
         _sendLedstripFrame
           _SPI1_ByteExchange
         _sendLedstripStartFrame
           _SPI1_ByteExchange
   ___wmul
   _getPomphoogte
   _initAdcMultiplexer
     _ADC_SelectChannel
     _ADC_SetInterruptHandler
   _initLedstrip
     _SPI1_Open
       ___wmul
     _TMR6_PeriodMatchCallbackRegister
   _printLogs
     _getPomphoogte
     _printf
       _atoi (ARG)
         ___wmul
       _getPomphoogte (ARG)
       _vfprintf (ARG)
         _vfpfcnvrt
           _dtoa
             ___awdiv
             ___awmod
             _abs
               ___awmod (ARG)
             _pad
               _fputc
                 _putch
                   _EUSART_IsTxReady
                   _EUSART_Write
               _fputs
                 _fputc
               _strlen
           _fputc
           _read_prec_or_width
             ___wmul
           _utoa
             ___lwdiv
             ___lwmod
             _pad
   _printOut
     _printf
   _setSetpoint
     ___wmul (ARG)
     _atoi (ARG)
   _sprintf
     _vfprintf
   _uartHandler
     _atoi
     _printf
     _readLine
       _EUSART_IsRxReady
       _EUSART_Read
       _printf
     _setKi
       _str2float (ARG)
         ___fladd
           ___xxtofl (ARG)
         ___fldiv
         ___flmul
           __Umul8_16
         ___xxtofl
     _setKp
       _str2float (ARG)
     _setSetpoint
     _str2float

 _INTERRUPT_InterruptManager (ROOT)
   NULL(Fake) *
   _ADC_ISR *
     NULL(Fake) *
     _ADC_DefaultInterruptHandler *
     _adcConversionDoneHandler *
       _ADC_GetConversionResult
       i1_ADC_SelectChannel
   _EUSART_ReceiveISR *
     NULL(Fake) *
     _EUSART_DefaultFramingErrorCallback *
     _EUSART_DefaultOverrunErrorCallback *
   _EUSART_TransmitISR *
   _TMR2_ISR *
     NULL(Fake) *
     _TMR2_DefaultPeriodMatchCallback *
   _TMR4_ISR *
     NULL(Fake) *
     _TMR4_DefaultPeriodMatchCallback *
     _controller *
       ___fltol
         i1___flmul (ARG)
           i1__Umul8_16
           i1___xxtofl (ARG)
         i1___xxtofl (ARG)
       _getHoogtesensor
       _pwm_fan_LoadDutyValue
       i1___fladd
         i1___flmul (ARG)
         i1___xxtofl (ARG)
       i1___flmul
       i1___xxtofl

Address spaces:
Name               Size   Autos  Total    Usage
BITCOMMON           14      0       0      0.0%
BITBANK0            80      0       0      0.0%
BITBANK1            80      0       0      0.0%
BITBANK2            80      0       0      0.0%
BITBANK3            80      0       0      0.0%
BITBANK4            80      0       0      0.0%
BITBANK5            80      0       0      0.0%
BITBANK6            80      0       0      0.0%
BITBANK7            80      0       0      0.0%
BITBANK8            80      0       0      0.0%
BITBANK9            80      0       0      0.0%
BITBANK10           80      0       0      0.0%
BITBANK11           80      0       0      0.0%
BITBANK12           48      0       0      0.0%
BIGRAM            1008      0       0      0.0%
COMMON              14     14      14    100.0%
BANK0               80     53      79     98.8%
BANK1               80     77      79     98.8%
BANK2               80     14      60     75.0%
BANK3               80      0      76     95.0%
BANK4               80     21      21     26.2%
BANK5               80      0       0      0.0%
BANK6               80      0       0      0.0%
BANK7               80      0       0      0.0%
BANK8               80      0       0      0.0%
BANK9               80      0       0      0.0%
BANK10              80      0       0      0.0%
BANK11              80      0       0      0.0%
BANK12              48      0       0      0.0%
STACK                0      0       0      0.0%
DATA                 0      0     328      0.0%


Microchip Technology PIC Macro Assembler V3.00 build 20241204225717 
Symbol Table                                                                                   Wed Mar 12 11:49:11 2025

           __end_of_TMR4_DefaultPeriodMatchCallback 1D27                   ??_TMR4_DefaultPeriodMatchCallback 0070  
                  ?_TMR4_DefaultPeriodMatchCallback 0070                     _TMR4_DefaultPeriodMatchCallback 1D26  
                                 _SPI1_ByteExchange 1DE8                          __end_of_pwm_fan_Initialize 1DDC  
                                      ___fldiv@aexp 00B9                                        ___fldiv@bexp 00B8  
                                       i1___fladd@a 003E                                         i1___fladd@b 003A  
                                      ___fldiv@sign 00B1                                                  l30 1DE7  
                                                l27 1F22                                                  l55 1D59  
                                                l83 1DCF                                                  l69 1DDB  
                                                l86 1F50                                  ?_SPI1_ByteExchange 00A0  
                                      ___awdiv@sign 00A5                             ??_PWM_buzzer_Initialize 00A0  
       __end_of_EUSART_OverrunErrorCallbackRegister 1E5B               ??_EUSART_OverrunErrorCallbackRegister 00A2  
              ?_EUSART_OverrunErrorCallbackRegister 00A0                 _EUSART_OverrunErrorCallbackRegister 1E4C  
                                       i1___flmul@a 0024                                                  _ki 0154  
                                       i1___flmul@b 0020                                                  _kp 0158  
                               ___wmul@multiplicand 00A4                                 __Umul8_16@word_mpld 00A6  
                                   ??_getPomphoogte 00A2                                          i1___xxtofl 175C  
                                               l133 1DAB                                                 l141 15A5  
                         dutycycle_led_strip@target 00AF                                                 l227 1DC3  
                                               l254 1D6B                                                 l174 1DEC  
                                               l351 1215                                                 l272 1D62  
                                               l176 1DF1                                                 l177 1DF4  
                                               l516 1E69                                                 l543 1D86  
                                               l712 0808                                                 l457 1E8B  
                                               l546 07FF                                                 l379 1035  
                                               l715 1D98                                                 l900 09D1  
                                               l557 1013                                                 l725 1FFF  
                                               l398 1E7A                                                 l494 1D74  
                                               l742 10EE                                                 l656 1158  
                                               l760 1E9C                                                 l921 1DA1  
                                               l905 1357                                                 l770 1E4B  
                                               l851 1E01                                                 l739 10EC  
                                               l907 13AF                                                 l860 1D8F  
                                               l774 1E5A                                                 l918 1FBF  
                                               l936 16B8                                                 l891 099A  
                                               l981 1EBE                                                 l966 1D7D  
                                               l975 1D42                                                 l984 1EAD  
                                               l999 1F0C                                                 _PR2 001E  
                                               _PR4 0416                                                 _PR6 041D  
                                               _abs 1EBF                                                 _pad 1302  
                                   __end_of_ADC_ISR 1E1F                     __end_of_ADC_SetInterruptHandler 1D5A  
                               ??_SPI1_ByteExchange 00A1                                        ___awmod@sign 00A5  
                                   _TMR2_Initialize 1E6A                        __end_of_sendLedstripEndFrame 1F6A  
                                               wreg 0009                                       i1___fladd@grs 004D  
                                      ___flmul@aexp 00B7                                        ___flmul@bexp 00BC  
                      ?_ADC_DefaultInterruptHandler 0070                                        ___flmul@sign 00B6  
                                      ___flmul@temp 00C1                                        ___flmul@prod 00BD  
                               i1_ADC_SelectChannel 1DAC                                        ?_EUSART_Read 0070  
                                      _BAUD1CONbits 019F                                        ___fltol@exp1 0043  
                                              l1002 1F69                                                l1005 1F84  
                                              l1015 125D                                                l1040 1E0F  
                                              ?_abs 00A6                                                l1037 1D30  
                                              l1192 1FCB                                                l1345 140B  
                                              l1601 02C3                                                l1194 1FDF  
                                              l1514 066F                                                l1506 0714  
                                              l1610 10A0                                                l1700 1356  
                                              l1524 06B4                                                l1358 1301  
                                              l1518 0691                                                l1703 0740  
                                              l1535 0707                                                l1527 06E7  
                                              l1551 0DF3                                                l1472 1193  
                                              l1536 0714                                                l1608 1090  
                                              l1633 08A5                                                l1482 1121  
                                              l1570 0DC3                                                l1634 08B6  
                                              l1803 1F38                                                l1707 073E  
                                              l1571 0DDD                                                l1635 0926  
                                              l1716 07CD                                                l1741 0B03  
                                              l1493 055F                                                l1573 0DE8  
                                              l1565 0D79                                                l1549 0C9F  
                                              l1734 1468                                                l1726 161E  
                                              l1646 08F2                                                l1743 0B0F  
                                              l1671 10C6                                                l1647 08FE  
                                              l1664 0881                                                l1497 05DE  
                                              l1770 1ED0                                                l1763 07F8  
                                              l1499 05B8                                                l1595 024B  
                                              l1749 0C4F                                                l1589 02CD  
                                              l1782 14C6                                                l1790 107C  
                                              l1695 1318                                                l7001 0C5B  
                                              l1698 133A                                                l7003 0C60  
                                              l7011 0C70                                                l6301 1E96  
                                              l1797 1EE2                                                l7021 0C82  
                                              l7013 0C78                                                l7005 0C65  
                                              ?_pad 00B4                                                l6311 147B  
                                              l7111 0DA5                                                l7103 0D7E  
                                              l7023 0C87                                                l7031 0C97  
                                              l7015 0C7B                                                l7007 0C6D  
                                              l6401 12B6                                                l6313 1486  
                                              l6305 1469                                                l6321 1059  
                                              l7121 0DDC                                                l7105 0D83  
                                              l7113 0DA9                                                l7033 0CA7  
                                              l7041 0CBE                                                l7025 0C8C  
                                              l7017 0C7D                                                l7009 0C6E  
                                              l7201 018D                                                l6411 12CC  
                                              l6403 12BB                                                l6315 14A6  
                                              l6307 1470                                                l6323 105D  
                                              l6331 1F27                                                l7123 0DE0  
                                              l7115 0DB6                                                l7107 0D89  
                                              l7051 0CE4                                                l7043 0CC3  
                                              l7035 0CB3                                                l7027 0C94  
                                              l7019 0C81                                                l7211 01D5  
                                              l7203 019F                                                l6341 1FC3  
                                              l6421 12E4                                                l6413 12CF  
                                              l6405 12BD                                                l6317 14BC  
                                              l6309 1476                                                l6325 106B  
                                              l6333 1F29                                                l7125 0DE4  
                                              l7117 0DD1                                                l7109 0D8D  
                                              l7061 0D09                                                l7053 0CEC  
                                              l7037 0CB5                                                l7029 0C95  
                                              l7221 021B                                                l7213 01EA  
                                              l7205 01A6                                                l7141 009E  
                                              l7133 0093                                                l7301 0900  
                                              l6343 1FC7                                                l6431 12FD  
                                              l6423 12E8                                                l6415 12D4  
                                              l6407 12C1                                                l6503 1EBF  
                                              l6327 1070                                                l6335 1F32  
                                              l6511 0715                                                l7127 0DE6  
                                              l7119 0DD4                                                l7071 0D28  
                                              l7063 0D0D                                                l7055 0CF4  
                                              l7047 0CCC                                                l7231 022F  
                                              l7223 021F                                                l7215 0201  
                                              l7207 01B8                                                l7151 00BA  
                                              l7143 00A3                                                l7135 0097  
                                              l7303 0914                                                l7321 1F16  
                                              l7313 1F0D                                                l7401 1208  
                                              l6441 1165                                                l6345 1FD0  
                                              l6361 13BD                                                l6353 13B0  
                                              l6425 12ED                                                l6417 12D6  
                                              l6409 12C6                                                l6505 1EC4  
                                              l6281 10C7                                                l6329 1F23  
                                              l6521 0735                                                l6513 0718  
                                              l6601 1464                                                l7081 0D42  
                                              l7073 0D30                                                l7065 0D0E  
                                              l7057 0CF6                                                l7049 0CDC  
                                              l7241 0250                                                l7233 0230  
                                              l7225 0220                                                l7217 0208  
                                              l7209 01C3                                                l7161 00C9  
                                              l7153 00BD                                                l7145 00A8  
                                              l7137 0099                                                l7305 0919  
                                              l7323 1F18                                                l7315 1F10  
                                              l7411 1E75                                                l7403 1E6A  
                                              l7331 1DD7                                                l6451 1183  
                                              l6443 116A                                                l6435 1159  
                                              l6347 1FD5                                                l6339 1FC0  
                                              l6371 13D0                                                l6363 13C1  
                                              l6355 13B2                                                l6419 12DA  
                                              l6427 12F3                                                l6507 1EC5  
                                              l6291 10E4                                                l6283 10CC  
                                              l6531 0768                                                l6523 073A  
                                              l6515 0727                                                l6611 0ADC  
                                              l7083 0D49                                                l7091 0D59  
                                              l7059 0CFB                                                l7067 0D15  
                                              l7075 0D32                                                l7243 0255  
                                              l7251 027B                                                l7235 0234  
                                              l7227 0227                                                l7219 0214  
                                              l7171 00E5                                                l7163 00CE  
                                              l7155 00BF                                                l7147 00B0  
                                              l7139 009D                                                l7307 091D  
                                              l7325 1F20                                                l7317 1F12  
                                              l7333 1DC4                                                l7413 1E77  
                                              l7405 1E6D                                                l7421 1E84  
                                              l6453 1184                                                l6445 116C  
                                              l6437 115C                                                l6349 1FDB  
                                              l6605 1DE8                                                l7341 1536  
                                              l6381 13ED                                                l6373 13D3  
                                              l6365 13C6                                                l6357 13B6  
                                              l6429 12F8                                                l6277 1D90  
                                              l6293 10E7                                                l6285 10D0  
                                              l6541 0792                                                l6533 0769  
                                              l6525 0744                                                l6517 072C  
                                              l6461 10EF                                                l6621 0B05  
                                              l6613 0AEE                                                l7093 0D5D  
                                              l7085 0D4D                                                l7077 0D38  
                                              l7069 0D27                                                l7261 02AB  
                                              l7253 0288                                                l7245 025B  
                                              l7237 0248                                                l7229 022B  
                                              l7181 010B                                                l7173 00EA  
                                              l7165 00D6                                                l7157 00C3  
                                              l7149 00B2                                                l7309 091E  
                                              l7501 099C                                                l7319 1F14  
                                              l7335 1DCB                                                l7407 1E6E  
                                              l7423 1E86                                                l7415 1E7B  
                                              l7431 1E5F                                                l6455 1189  
                                              l6447 1170                                                l6439 1162  
                                              l6607 1DF2                                                l6703 1EF8  
                                              l7327 1DDE                                                l7351 15A5  
                                              l7343 1536                                                l6391 1402  
                                              l6383 13F1                                                l6375 13D8  
                                              l6367 13C8                                                l6359 13BB  
                                              l6295 10E9                                                l6287 10D6  
                                              l6551 07B3                                                l6543 0797  
                                              l6535 076D                                                l6527 0747  
                                              l6519 0730                                                l6471 1104  
                                              l6463 10F6                                                l6631 0B38  
                                              l6615 0AF6                                                l7095 0D5E  
                                              l7087 0D4E                                                l7079 0D40  
                                              l6711 1081                                                l7263 02B6  
                                              l7255 0292                                                l7247 025F  
                                              l7191 0162                                                l7183 0123  
                                              l7167 00D8                                                l7159 00C4  
                                              l7511 09C3                                                l7503 099E  
                                              l7361 1D5E                                                l7441 1129  
                                              l7337 1DA2                                                l7409 1E73  
                                              l7425 1E88                                                l7417 1E7E  
                                              l7433 1E64                                                l7329 1DD0  
                                              l7601 101D                                                l6449 117F  
                                              l6457 118F                                                l6705 1F51  
                                              l7345 153B                                                l6393 1407  
                                              l6385 13F2                                                l6377 13DA  
                                              l6369 13CA                                                l6289 10DE  
                                              l6297 1E8E                                                l6553 07BA  
                                              l6545 07A4                                                l6529 074C  
                                              l6537 077D                                                l6473 110E  
                                              l6465 10F9                                                l6561 15B5  
                                              l6641 0B54                                                l6633 0B3C  
                                              l6625 0B12                                                l6617 0AFB  
                                              l7521 1366                                                l6801 050F  
                                              l7097 0D62                                                l7089 0D55  
                                              l6713 1088                                                l7265 02BA  
                                              l7257 02A0                                                l7249 0277  
                                              l7193 0169                                                l7185 0130  
                                              l7177 00F3                                                l7169 00E0  
                                              l7281 08AD                                                l7273 0884  
                                              l7513 09C9                                                l7505 09A0  
                                              l7451 1139                                                l7443 1130  
                                              l7355 1DB8                                                l7371 11DB  
                                              l7363 11D0                                                l7339 1DA6  
                                              l7419 1E7F                                                l7435 1E66  
                                              l7427 1E5B                                                l7611 102C  
                                              l7603 1020                                                l6707 1F6C  
                                              l7347 15A3                                                l6387 13F7  
                                              l6379 13DE                                                l6299 1E8E  
                                              l6491 131B                                                l6483 1302  
                                              l6539 078B                                                l6547 07A9  
                                              l6475 1112                                                l6467 10FE  
                                              l6571 15D6                                                l6563 15B8  
                                              l6651 0B89                                                l6643 0B5E  
                                              l6635 0B3D                                                l6627 0B22  
                                              l6619 0B00                                                l6731 07F6  
                                              l6723 07CE                                                l7531 1374  
                                              l6811 0526                                                l6803 0513  
                                              l7099 0D76                                                l6715 108C  
                                              l7267 02BB                                                l7259 02A9  
                                              l7195 0174                                                l7187 0148  
                                              l7179 00FE                                                l7291 08D8  
                                              l7275 0889                                                l7507 09BC  
                                              l6741 1E44                                                l7461 1150  
                                              l7453 113B                                                l7445 1133  
                                              l7437 1122                                                l7357 1DBB  
                                              l7381 11EF                                                l7373 11DE  
                                              l7365 11D4                                                l7429 1E5E  
                                              l7613 102F                                                l7605 1023  
                                              l7621 100C                                                l7349 15A4  
                                              l6389 13FD                                                l6397 12B0  
                                              l6493 1327                                                l6485 1307  
                                              l6549 07AF                                                l6477 1117  
                                              l6469 1100                                                l6581 1605  
                                              l6565 15BD                                                l6573 15E6  
                                              l6557 15A6                                                l6653 0B93  
                                              l6645 0B6B                                                l6637 0B42  
                                              l6629 0B27                                                l6725 07D3  
                                              l7533 137C                                                l7525 1369  
                                              l7517 1357                                                l6901 05F0  
                                              l6821 053A                                                l6813 0527  
                                              l6805 0514                                                l6717 1097  
                                              l6709 107F                                                l7269 02C5  
                                              l7197 017B                                                l7189 0155  
                                              l7293 08DF                                                l7285 08B9  
                                              l7277 088D                                                l7509 09BE  
                                              l7701 16EB                                                l6735 1D51  
                                              l7359 1D5A                                                l6743 1E4C  
                                              l7471 1156                                                l7463 1151  
                                              l7455 1143                                                l7447 1135  
                                              l7439 1124                                                l7391 11FC  
                                              l7383 11F1                                                l7375 11E0  
                                              l7367 11D7                                                l7607 1026  
                                              l7615 1D6C                                                l7623 1011  
                                              l6399 12B2                                                l6495 132C  
                                              l6487 1311                                                l6591 1420  
                                              l6479 111D                                                l6575 15ED  
                                              l6583 160A                                                l6567 15D1  
                                              l6559 15A9                                                l6671 0BF6  
                                              l6663 0BBF                                                l6655 0BA0  
                                              l6647 0B78                                                l6639 0B4A  
                                              l6727 07D7                                                l6751 1FE0  
                                              l7535 1384                                                l7543 138A  
                                              l7519 135F                                                l6911 060C  
                                              l6903 05F8                                                l6831 0547  
                                              l6823 053B                                                l6807 0519  
                                              l6815 0529                                                l6719 109C  
                                              l7199 0186                                                l7295 08E8  
                                              l7287 08C2                                                l7279 089D  
                                              l7631 161F                                                l7711 170F  
                                              l7703 16EE                                                l6745 1E53  
                                              l7465 1153                                                l7457 114B  
                                              l7449 1137                                                l6737 1D63  
                                              l7393 11FF                                                l7385 11F4  
                                              l7377 11EA                                                l7369 11D9  
                                              l7609 1029                                                l7617 1000  
                                              l7625 1DF5                                                l7473 1D7E  
                                              l6497 133F                                                l6489 1316  
                                              l6593 1428                                                l6577 15F3  
                                              l6569 15D2                                                l6681 0C1D  
                                              l6657 0BAE                                                l6665 0BC8  
                                              l6729 07EC                                                l7561 0810  
                                              l6761 1FF4                                                l6753 1FE0  
                                              l7545 1398                                                l7537 1386  
                                              l7529 1371                                                l6921 0632  
                                              l6913 0610                                                l6905 05FC  
                                              l6841 0565                                                l6833 054C  
                                              l6825 053D                                                l6817 0531  
                                              l6809 051E                                                l7297 08EC  
                                              l7289 08C9                                                l7481 0927  
                                              l7641 1662                                                l7633 1625  
                                              l7721 1750                                                l7713 1711  
                                              l7705 16F1                                                l6739 1E3D  
                                              l7467 1154                                                l7459 114E  
                                              l7395 1201                                                l7387 11F6  
                                              l7379 11ED                                                l7619 1005  
                                              l7627 1E02                                                l7475 1D87  
                                              l6499 1349                                                l6595 1436  
                                              l6587 140C                                                l6579 15F8  
                                              l6667 0BD2                                                l6675 0BF9  
                                              l6691 0C2C                                                l6771 1ED1  
                                              l7571 0836                                                l7563 081A  
                                              l6747 0800                                                l6763 1FFA  
                                              l6755 1FE9                                                l7547 13A4  
                                              l7555 13AC                                                l7539 1388  
                                              l6923 0656                                                l6931 0667  
                                              l6915 0611                                                l6907 0600  
                                              l6851 0571                                                l6843 0569  
                                              l6835 0554                                                l6827 0541  
                                              l6819 0534                                                l7299 08F6  
                                              l7491 093F                                                l7483 0930  
                                              l7643 1674                                                l7635 1633  
                                              l7651 1697                                                l7723 1756  
                                              l7715 171A                                                l7707 16FA  
                                              l7469 1155                                                l7397 1203  
                                              l7389 11FA                                                l7629 1E07  
                                              l6597 1448                                                l6589 140F  
                                              l6693 0C45                                                l6677 0C0A  
                                              l6685 0C23                                                l6669 0BE8  
                                              l6773 1ED4                                                l7653 1FA1  
                                              l7661 10AC                                                l7581 086C  
                                              l7565 0827                                                l7557 0809  
                                              l6765 1FFC                                                l6757 1FEF  
                                              l7549 13AA                                                l6941 068C  
                                              l6933 0677                                                l6925 0658  
                                              l6917 0619                                                l6909 060A  
                                              l6861 057B                                                l6853 0573  
                                              l6845 056B                                                l6837 0555  
                                              l6829 0542                                                l7493 0945  
                                              l7485 0931                                                l7645 167D  
                                              l7637 1647                                                l7717 171D  
                                              l7709 1702                                                l7399 1205  
                                              l6791 1251                                                l6599 1450  
                                              l6679 0C12                                                l7655 1FA7  
                                              l7663 10AE                                                l7583 0871  
                                              l7575 0841                                                l7567 0831  
                                              l7559 080E                                                l6767 1FFE  
                                              l6759 1FF2                                                l7591 1E9D  
                                              l7479 1D3D                                                l6951 06A0  
                                              l6943 0690                                                l6935 067C  
                                              l6927 065B                                                l6919 061C  
                                              l6871 0585                                                l6863 057D  
                                              l6855 0575                                                l6847 056D  
                                              l6839 0557                                                l7495 098B  
                                              l7487 0937                                                l7647 1686  
                                              l7639 1659                                                l7719 173A  
                                              l6793 1254                                                l6785 123A  
                                              l6777 1216                                                l7593 1D2D  
                                              l7665 10BE                                                l7657 10A1  
                                              l7585 087D                                                l7569 0833  
                                              l6961 06B1                                                l6945 0695  
                                              l6953 06A2                                                l6929 0660  
                                              l6881 05BC                                                l6873 0587  
                                              l6865 057F                                                l6857 0577  
                                              l6849 056F                                                l7497 098E  
                                              l7489 0939                                                l7649 168F  
                                              l7595 1F39                                                l6699 1D75  
                                              l6795 125A                                                l6787 1240  
                                              l6779 1238                                                l7659 10AA  
                                              l7579 085F                                                l6971 06C8  
                                              l6947 0699                                                l6939 0685  
                                              l6955 06A6                                                l6891 05D5  
                                              l6883 05C6                                                l6867 0581  
                                              l6859 0579                                                l6875 0589  
                                              l7499 0994                                                l7691 16CC  
                                              l7683 16B9                                                l7597 1014  
                                              l6789 1249                                                l7669 1D99  
                                              l7589 1EAE                                                l6981 06FE  
                                              l6973 06E5                                                l6965 06B9  
                                              l6957 06A7                                                l6949 069B  
                                              l6885 05C8                                                l6893 05D7  
                                              l6877 058A                                                l6869 0583  
                                              l6797 0509                                                l7693 16CE  
                                              l7685 16BC                                                l7599 101A  
                                              l6991 0713                                                l6983 06FF  
                                              l6975 06EC                                                l6967 06BE  
                                              l6959 06AB                                                l6895 05E2  
                                              l6887 05CC                                                l6879 05A1  
                                              l6799 050D                                                l7695 16D1  
                                              l7687 16BD                                                l6985 0703  
                                              l6977 06F1                                                l6969 06C4  
                                              l6897 05E7                                                l6889 05CD  
                                              l6993 0C50                                                l7697 16D7  
                                              l7689 16C9                                                l6987 0705  
                                              l6979 06F9                                                l6995 0C54  
                                              l7699 16E4                                                l6989 070F  
                                              l6997 0C56                                                l6999 0C5A  
                                              STR_1 189D                                                STR_2 18DA  
                                              STR_3 1865                                                STR_4 18C5  
                                              STR_5 189A                                                STR_6 184C  
                                              STR_7 18B8                                                STR_8 18AB  
                                              STR_9 188E                                                _LATA 010C  
                                              _LATB 010D                                                _LATC 010E  
                                       main@counter 0234                                                i1l30 1DB7  
                                              u8000 071D                                                u8001 071B  
                                              u8010 071E                                                i1l52 1E1E  
                                              u8020 072C                                                u8100 15ED  
                                              u8021 072B                                                u8101 15EC  
                                              u8030 0735                                                u8110 15F3  
                                              i1l39 1D36                                                u8031 0734  
                                              u8111 15F2                                                i1l72 1EF7  
                                              u8040 078B                                                u8120 15F8  
                                              u8200 0B3C                                                u9000 0D4D  
                                              u8041 078A                                                u8121 15F7  
                                              u8201 0B3B                                                u9001 0D4C  
                                              i1l58 1D23                                                u8050 0792  
                                              u8130 1605                                                u8210 0B54  
                                              u8051 0791                                                u8131 1604  
                                              u8211 0B53                                                u8300 1E44  
                                              u7500 10CC                                                u8060 0797  
                                              u8140 160A                                                u8220 0B5E  
                                              u9100 0DD1                                                u9020 0D5D  
                                              u8301 1E43                                                u7501 10CB  
                                              u8061 0796                                                u8045 0787  
                                              u8141 1609                                                u8221 0B5D  
                                              u9101 0DD0                                                u9021 0D5C  
                                              u8310 1E53                                                u7510 10D6  
                                              u8070 07A4                                                u8150 1420  
                                              u8230 0B93                                                u9110 0DE4  
                                              u9030 0D62                                                u8311 1E52  
                                              u7511 10D5                                                u8071 07A3  
                                              u8151 141F                                                u8135 1601  
                                              u8231 0B92                                                u9111 0DE3  
                                              u9031 0D61                                                u9015 0D4F  
                                              u7520 1E96                                                u8080 07A9  
                                              u8160 1464                                                u8240 0BD2  
                                              u8320 0807                                                u8400 053A  
                                              u9040 0D76                                                u9200 00EA  
                                              u7521 1E95                                                u8081 07A8  
                                              u8161 1463                                                u8241 0BD1  
                                              u8321 0805                                                u8401 0539  
                                              u9105 0DCD                                                u9041 0D75  
                                              u9201 00E9                                                u8170 1DF1  
                                              u7530 1470                                                u8090 07AF  
                                              u8250 0C0A                                                u8330 0808  
                                              u8410 0541                                                u9050 0D7D  
                                              u9130 009D                                                u8171 1DF0  
                                              u7531 146F                                                u8091 07AE  
                                              u8075 07A0                                                u8251 0C09  
                                              u8411 0540                                                u9051 0D7C  
                                              u9131 009C                                                u7620 1FDB  
                                              u7540 1476                                                u8180 0AEE  
                                              u8340 1FFA                                                u8420 0547  
                                              u9060 0D83                                                u8260 108C  
                                              u9300 0234                                                u9140 00A3  
                                              u7621 1FDA                                                u7605 1FCC  
                                              u7541 1475                                                u8181 0AED  
                                              u8341 1FF9                                                u8421 0546  
                                              u9125 0DEB                                                u9061 0D82  
                                              u8261 108B                                                u9301 0233  
                                              u9141 00A2                                                u8350 1240  
                                              u7710 13FD                                                u7630 13B6  
                                              u7550 1486                                                u8190 0B27  
                                              u8510 05CC                                                u8430 054C  
                                              u9070 0D8D                                                u9310 0248  
                                              u9230 01E0                                                u9150 00A8  
                                              u7615 1FD1                                                u8351 123F  
                                              u7711 13FC                                                u7631 13B5  
                                              u7551 1485                                                u8191 0B26  
                                              u8511 05CB                                                u8431 054B  
                                              u9071 0D8C                                                u9311 0247  
                                              u9215 0163                                                u9151 00A7  
                                              u8360 125A                                                u7720 1402  
                                              u7640 13C1                                                u7800 12F3  
                                              u7480 1D97                                                u7560 14A6  
                                              u8440 0565                                                u9080 0D9B  
                                              u8280 109C                                                u9320 024F  
                                              u9240 01F7                                                u9160 00C3  
                                              u9400 0889                                                u8361 1259  
                                              u7721 1401                                                u7705 13F3  
                                              u7641 13C0                                                u7801 12F2  
                                              u7481 1D95                                                u7561 14A5  
                                              u8505 05BF                                                u8441 0564  
                                              u8281 109B                                                u9321 024E  
                                              u9225 018E                                                u9161 00C2  
                                              u9401 0888                                                u7650 13D0  
                                              u7810 12F8                                                u7730 12B6  
                                              u7490 1D98                                                u7570 107C  
                                              u8290 07F6                                                u8610 0632  
                                              u8530 05DE                                                u8450 0569  
                                              u8370 0513                                                u9090 0DB6  
                                              u9330 0255                                                u9170 00C9  
                                              u9410 088D                                                u7651 13CF  
                                              u7811 12F7                                                u7731 12B5  
                                              u7571 107B                                                u8291 07F5  
                                              u8611 0631                                                u8531 05DD  
                                              u8451 0568                                                u8371 0512  
                                              u9091 0DB5                                                u8275 1091  
                                              u9331 0254                                                u9235 01DC  
                                              u9171 00C8                                                u9411 088C  
                                              u7820 1162                                                u7740 12C1  
                                              u7580 1F32                                                u8700 06AB  
                                              u8620 0660                                                u8540 05E2  
                                              u8460 05A1                                                u8380 0519  
                                              u9340 025F                                                u9180 00CE  
                                              u9500 08F6                                                u9420 08AD  
                                              u7821 1161                                                u7741 12C0  
                                              u7565 14A2                                                u7581 1F31  
                                              u8701 06AA                                                u8621 065F  
                                              u8613 062E                                                u8605 0613  
                                              u8541 05E1                                                u8525 05CF  
                                              u8461 05A0                                                u8381 0518  
                                              u9085 0D97                                                u9341 025E  
                                              u9245 01F3                                                u9181 00CD  
                                              u9501 08F5                                                u9421 08AC  
                                              u7590 1FC7                                                u7670 13DE  
                                              u7750 12CC                                                u7910 1104  
                                              u8710 06B1                                                u8630 0677  
                                              u8550 05E7                                                u8470 05AB  
                                              u8390 051E                                                u9350 026D  
                                              u9270 021F                                                u9190 00E5  
                                              u9510 090A                                                u7591 1FC6  
                                              u7671 13DD                                                u7751 12CB  
                                              u7911 1103                                                u8711 06B0  
                                              u8631 0676                                                u8551 05E6  
                                              u8471 05A9                                                u8391 051D  
                                              u9095 0DB2                                                u9271 021E  
                                              u9255 0202                                                u9191 00E4  
                                              u7840 1170                                                u7920 110E  
                                              u8800 0703                                                u8720 06B8  
                                              u8640 067C                                                u8560 05FC  
                                              u8480 05AC                                                u9360 0288  
                                              u9520 0919                                                u9440 08C8  
                                              u9600 09C9                                                u7841 116F  
                                              u7665 13D4                                                u7921 110D  
                                              u7905 10FA                                                u8801 0702  
                                              u8721 06B7                                                u8641 067B  
                                              u8561 05FB                                                u8465 059D  
                                              u9361 0287                                                u9265 0215  
                                              u9521 0918                                                u9441 08C7  
                                              u9601 09C8                                                u7690 13ED  
                                              u7770 12DA                                                u9610 135F  
                                              u8730 06BE                                                u8570 0600  
                                              u8490 05BC                                                u9370 02A0  
                                              u9290 022F                                                u9530 091D  
                                              u7835 1166                                                u7691 13EC  
                                              u7771 12D9                                                u9611 135E  
                                              u8731 06BD                                                u8571 05FF  
                                              u8491 05BB                                                u9371 029F  
                                              u9355 0269                                                u9291 022E  
                                              u9531 091C                                                u9515 0906  
                                              u9435 08BC                                                u7860 117F  
                                              u9540 153B                                                u7780 12E4  
                                              u7940 111D                                                u9700 0871  
                                              u9620 1370                                                u8820 0713  
                                              u8740 06C8                                                u8660 0690  
                                              u8900 0CC3                                                u9380 02BA  
                                              u9460 08DE                                                u7861 117E  
                                              u9541 153A                                                u7685 13DF  
                                              u7781 12E3                                                u7765 12D0  
                                              u7941 111C                                                u7925 110A  
                                              u9701 0870                                                u9621 136F  
                                              u8821 0712                                                u8741 06C7  
                                              u8661 068F                                                u8901 0CC2  
                                              u9381 02B9                                                u9365 0284  
                                              u9285 0221                                                u9461 08DD  
                                              u7950 1307                                                u9630 137C  
                                              u8750 06D6                                                u8670 0695  
                                              u8590 0610                                                u8910 0CFB  
                                              u8830 0C5A                                                u9550 093F  
                                              u7855 1171                                                u7695 13E9  
                                              u7951 1306                                                u7935 1113  
                                              u9631 137B                                                u8815 070A  
                                              u8671 0694                                                u8655 0686  
                                              u8591 060F                                                u8911 0CFA  
                                              u8831 0C59                                                u9375 029C  
                                              u9455 08D2                                                u9551 093E  
                                              u7880 118F                                                u9720 1005  
                                              u7960 1316                                                u9640 13A4  
                                              u8760 06E5                                                u8680 06A0  
                                              u8840 0C60                                                u9480 08EC  
                                              u9560 0945                                                u9800 170F  
                                              u7881 118E                                                u7865 117B  
                                              u9721 1004                                                u7785 12E0  
                                              u7961 1315                                                u9641 13A3  
                                              u8761 06E4                                                u8681 069F  
                                              u8585 0603                                                u8841 0C5F  
                                              u9481 08EB                                                u9561 0944  
                                              u9801 170E                                                u9730 100C  
                                              u7970 133A                                                u7890 10F6  
                                              u9650 081A                                                u8770 06EC  
                                              u8690 06A6                                                u8850 0C65  
                                              u9490 08F2                                                u9570 0994  
                                              u9715 1F4A                                                u7875 1185  
                                              u9731 100B                                                u7795 12E9  
                                              u7971 1339                                                u7891 10F5  
                                              u9651 0819                                                u8771 06EB  
                                              u8755 06D2                                                u8691 06A5  
                                              u8851 0C64                                                u9395 02BE  
                                              u9491 08F1                                                u9475 08E2  
                                              u9571 0993                                                u7980 133F  
                                              u9660 0827                                                u8780 06F1  
                                              u8940 0D0D                                                u8860 0C81  
                                              u9580 099A                                                u9740 1684  
                                              u7981 133E                                                u9661 0826  
                                              u8781 06F0                                                u8941 0D0C  
                                              u8925 0CFC                                                u8861 0C80  
                                              u9581 0999                                                u9741 1682  
                                              u7990 1EC4                                                u9670 0831  
                                              u8790 06FE                                                u8870 0C87  
                                              u9590 09C3                                                u9750 1685  
                                              u7991 1EC3                                                u7975 1336  
                                              u9671 0830                                                u8791 06FD  
                                              u8935 0D03                                                u8871 0C86  
                                              u9591 09C2                                                u9760 1FA7  
                                              u9680 0840                                                u8960 0D27  
                                              u8880 0C8C                                                u9761 1FA6  
                                              u9681 083F                                                u8961 0D26  
                                              u8881 0C8B                                                u9690 086C  
                                              u8970 0D38                                                u8890 0CA7  
                                              u9691 086B                                                u8971 0D37  
                                              u8955 0D0F                                                u8891 0CA6  
                                              u8980 0D40                                                u9780 16D7  
                                              u8981 0D3F                                                u8965 0D23  
                                              u9781 16D6                                                u9790 16E4  
                                              u9791 16E3                                                _TMR2 001D  
                                              u8995 0D43                                                _TMR4 0415  
                                              _TMR6 041C                                                u9887 16F5  
                                              u9897 1715                                                _WPUA 020C  
                                              _WPUB 020D                                                _WPUC 020E  
                         EUSART_ReceiveISR@regValue 0070                                     _getHoogtesensor 1D37  
                                              abs@a 00A6                                                _dbuf 01B8  
                                              _atoi 0809                                                _main 16B9  
                                              _dtoa 0715                                                _line 01D8  
                                     i1___flmul@grs 002E                                                _prec 012E  
                                              _nout 012C                                                pad@i 00BA  
                                              pad@p 00B7                                                fsr0h 0005  
                                              fsr1h 0007                                                indf0 0000  
                                              fsr0l 0004                                                indf1 0001  
                                              fsr1l 0006                                                btemp 007E  
                                              _utoa 15A6                         _INT_DefaultInterruptHandler 0000  
                  __end_of_adcConversionDoneHandler 11D0                                      i1___fladd@aexp 004B  
                                    i1___fladd@bexp 004C                                                start 0058  
        __end_of_EUSART_DefaultOverrunErrorCallback 1D2D                ??_EUSART_DefaultOverrunErrorCallback 0070  
               ?_EUSART_DefaultOverrunErrorCallback 0070                  _EUSART_DefaultOverrunErrorCallback 1D29  
                                   ___fldiv@new_exp 00B2                           __end_of_SPI1_ByteExchange 1DF5  
                   __end_of_INT_SetInterruptHandler 1D6C                                ?i1_ADC_SelectChannel 0070  
                                             ??_abs 00A8                                               ??_pad 00B9  
                                     ?_EUSART_Write 00A0                                       ___fltol@sign1 0042  
                                             _ADACT 009F                                               ?_atoi 00A8  
                                   __end_of___fladd 0715                                               ?_main 0070  
                                             ?_dtoa 00BC                                     __end_of___fldiv 0DF4  
                                   __end_of___awdiv 140C                                               STR_10 187D  
                                   __end_of___awmod 1302                                     __end_of___flmul 02CE  
                                   __end_of___fltol 1536                                               ?_utoa 00BC  
                                   ___awdiv@divisor 00A0                                               _T2CON 001F  
                                             _T4CON 0417                                               _IOCAF 0393  
                                             _IOCBF 0396                                               _IOCCF 0399  
                                             _IOCAN 0392                                               _IOCAP 0391  
                                             _IOCBN 0395                                               _T6CON 041E  
                                             _IOCBP 0394                                               _IOCCN 0398  
                                             _IOCCP 0397                                     __end_of___lwdiv 1194  
                                             i1l233 001B                                               i1l235 002C  
                                             i1l244 0056                                               i1l237 003A  
                                             i1l238 0056                                               i1l239 0048  
                                             i1l432 1E2D                                     __end_of___lwmod 1122  
                                             i1l438 1D25                                               i1l491 1E3C  
                                             i1l735 12AF                                               i1l745 1F9E  
                                             i1l497 1D26                                               i1l763 1D24  
                                             i1l748 1FA0                                               i1l766 1D2C  
                                             i1l848 11CF                                               i1l960 0ADB  
                                             i1l857 1D3C                                               i1l958 0AD4  
                                   ___awdiv@counter 00A4                                               _OSCEN 091D  
                                             _UART1 1800                                        vfpfcnvrt@fmt 00CB  
                                             _TRISA 008C                                               _TRISB 008D  
                                             _TRISC 008E                                               _RXPPS 0E24  
                                   _TMR4_Initialize 1E7B                                    __end_of_TMR2_ISR 1E2E  
                                  __end_of_TMR4_ISR 1E3D                                               _flags 0063  
                                _EUSART_TransmitISR 1F85                                      i1___flmul@aexp 0032  
                               read_prec_or_width@c 00AE                                      i1___flmul@bexp 0033  
                               read_prec_or_width@n 00AF                                               _fputc 1469  
                                             _fputs 1059                                               _setKi 1E9D  
                                             _setKp 1EAE                                         ?_TMR6_Tasks 0070  
                                    i1___flmul@sign 002D                                      i1___flmul@temp 0038  
                                    i1___flmul@prod 0034                                               atoi@n 00AD  
                                             pad@fp 00B4                                               atoi@s 00A8  
                                             _width 0055                                               _putch 1E8C  
                                             dtoa@d 00BE                                               dtoa@i 00C7  
                                             dtoa@p 00C3                                               dtoa@s 00C6  
                                             dtoa@w 00C4                                               pclath 000A  
                                             utoa@d 00BE                                               utoa@i 00C4  
                                             utoa@p 00C1                                               utoa@w 00C2  
                                             status 0003                                               wtemp0 007E  
                                   __end_of_sprintf 10C7                                 ?_EUSART_TransmitISR 0070  
                                   i1___fladd@signs 004A                                         controller@I 0051  
                                       controller@P 004F                               ??i1_ADC_SelectChannel 0070  
                                   __initialization 005A                                        __end_of_atoi 0882  
                                      __end_of_main 175C                                        __end_of_dtoa 07CE  
                                      __end_of_utoa 161F                                       ?_initLedstrip 0070  
                        ??_PWM_buzzer_LoadDutyValue 00A2                                      ??_EUSART_Write 00A1  
                 _EUSART_TxCompleteInterruptHandler 0136                             __end_of_TMR2_Initialize 1E7B  
                                         ??_ADC_ISR 0074                         ?_INTERRUPT_InterruptManager 0070  
                                            ??_atoi 00AA                                ??_EUSART_TransmitISR 0070  
                                            ??_main 0146                                              ??_dtoa 00C0  
                                       ?i1___xxtofl 0070                                __end_of_getDutycycle 1D7E  
                                            ??_utoa 00C0                             setSetpoint@new_setpoint 00AF  
                        __end_of_read_prec_or_width 1469                   PWM_buzzer_LoadDutyValue@dutyValue 00A0  
                                   _TMR6_Initialize 1E5B  EUSART_OverrunErrorCallbackRegister@callbackHandler 00A0  
EUSART_FramingErrorCallbackRegister@callbackHandler 00A0                             __end_of_getHoogtesensor 1D3D  
                                            _ADCON0 009D                                              _ADCON1 009E  
                        _EUSART_OverrunErrorHandler 005D                                              ?_fputc 00A3  
                                            ?_fputs 00AC                                              _ADRESH 009C  
                                            _ADRESL 009B                                              ?_setKi 00CF  
                                            ?_setKp 00CF                                    ___awdiv@dividend 00A2  
                                            _ANSELA 018C                                              ?_putch 0070  
                                            _ANSELB 018D                                              _ANSELC 018E  
                                      ?_setSetpoint 00AF                                              _RC1REG 0199  
                                            _RC1STA 019D                                              _RB4PPS 0E9C  
                                            _RB6PPS 0E9E                                              _RC5PPS 0EA5  
                                            _RB7PPS 0E9F                                              i1l1601 04FE  
                                            _ODCONA 028C                                              i1l1514 0F5A  
                                            i1l1506 0FFF                                              i1l1610 1058  
                                            _ODCONB 028D                                              _ODCONC 028E  
                                            i1l1524 0F9F                                              i1l1518 0F7C  
                                            i1l1535 0FF2                                              i1l1527 0FD2  
                                            i1l1536 0FFF                                              i1l1608 1048  
                                            i1l1393 1520                                              i1l1633 177E  
                                            i1l1386 1535                                              i1l1634 178F  
                                            i1l1635 17FF                                              _RC7PPS 0EA7  
                                            i1l1396 1535                                              i1l1493 0E4A  
                                            i1l1646 17CB                                              i1l1647 17D7  
                                            i1l1497 0EC9                                              i1l6011 1279  
                                            i1l6003 125E                                              i1l1499 0EA3  
                                            i1l1595 0486                                              i1l6021 1295  
                                            i1l6013 127E                                              i1l6005 1267  
                                            i1l5301 0E60                                              i1l1589 0508  
                                            i1l6031 12AB                                              i1l6023 1298  
                                            i1l6015 1283                                              i1l6007 126C  
                                            i1l5311 0E6A                                              i1l5303 0E62  
                                            i1l6111 0020                                              i1l6103 0006  
                                            i1l5241 1DAD                                              i1l6033 12AD  
                                            i1l6025 129D                                              i1l6017 128A  
                                            i1l6009 1273                                              i1l6041 1F94  
                                            i1l5401 0F91                                              i1l5313 0E6C  
                                            i1l5305 0E64                                              i1l5321 0E74  
                                            i1l6121 0044                                              i1l6113 0025  
                                            i1l6105 000A                                              i1l6019 1290  
                                            i1l6043 1F99                                              i1l5411 0FA4  
                                            i1l5403 0F92                                              i1l5331 0EB3  
                                            i1l5323 0E75                                              i1l5315 0E6E  
                                            i1l5307 0E66                                              i1l5251 0DFF  
                                            i1l5243 0DF4                                              i1l4611 104F  
                                            i1l4603 1037                                              i1l6123 004D  
                                            i1l6115 0031                                              i1l6107 000F  
                                            i1l6029 12A4                                              i1l6045 1F9B  
                                            i1l6037 1F85                                              i1l4701 14F4  
                                            i1l5421 0FD7                                              i1l5413 0FA9  
                                            i1l5405 0F96                                              i1l5341 0ECD  
                                            i1l5333 0EB7                                              i1l5325 0E8C  
                                            i1l5317 0E70                                              i1l5309 0E68  
                                            i1l5253 0E04                                              i1l5261 0E14  
                                            i1l5245 0DF8                                              i1l4613 1054  
                                            i1l4605 1039                                              i1l5501 03AF  
                                            i1l6125 0052                                              i1l6117 0036  
                                            i1l6109 0014                                              i1l6039 1F8C  
                                            i1l4711 1502                                              i1l4703 14F6  
                                            i1l4623 1EE3                                              i1l5431 0FEE  
                                            i1l5423 0FDC                                              i1l5415 0FAF  
                                            i1l5407 0F9C                                              i1l5351 0EE7  
                                            i1l5343 0ED2                                              i1l5335 0EB8  
                                            i1l5327 0EA7                                              i1l5319 0E72  
                                            i1l5271 0E28                                              i1l5263 0E1C  
                                            i1l5255 0E09                                              i1l5247 0DFA  
                                            i1l4607 1040                                              i1l5511 03E1  
                                            i1l5503 03B6                                              i1l6119 003F  
                                            i1l4721 1525                                              i1l4705 14FA  
                                            i1l4713 1510                                              i1l5433 0FF0  
                                            i1l5425 0FE4                                              i1l5417 0FB3  
                                            i1l5361 0EFC                                              i1l5353 0EEB  
                                            i1l5337 0EC0                                              i1l5329 0EB1  
                                            i1l5281 0E3F                                              i1l5273 0E2C  
                                            i1l5265 0E1F                                              i1l5257 0E11  
                                            i1l5249 0DFE                                              i1l4609 1044  
                                            i1l5521 043C                                              i1l5513 03F3  
                                            i1l5505 03C1                                              i1l5441 02D2  
                                            i1l5601 17C1                                              i1l4619 1D31  
                                            i1l4723 152A                                              i1l5435 0FFA  
                                            i1l5427 0FE9                                              i1l5419 0FD0  
                                            i1l5371 0F43                                              i1l5363 0F04  
                                            i1l5355 0EF5                                              i1l5347 0EDB  
                                            i1l5339 0EC2                                              i1l5291 0E56  
                                            i1l5283 0E40                                              i1l5275 0E2D  
                                            i1l5267 0E25                                              i1l5259 0E12  
                                            i1l5531 045B                                              i1l5523 0443  
                                            i1l5515 03FE                                              i1l5507 03C8  
                                            i1l5451 02E3                                              i1l5443 02D4  
                                            i1l5611 17F2                                              i1l5603 17C5  
                                            i1l5437 0FFE                                              i1l5429 0FEA  
                                            i1l5381 0F67                                              i1l5373 0F46  
                                            i1l5357 0EF7                                              i1l5349 0EE3  
                                            i1l5365 0F07                                              i1l5293 0E58  
                                            i1l5277 0E32                                              i1l5285 0E42  
                                            i1l5269 0E26                                              i1l5541 046F  
                                            i1l5533 0462                                              i1l5525 044F  
                                            i1l5517 0410                                              i1l5509 03DA  
                                            i1l5461 02FA                                              i1l5453 02EB  
                                            i1l5445 02D8                                              i1l5613 17F6  
                                            i1l5605 17CF                                              i1l4719 1517  
                                            i1l5391 0F80                                              i1l5375 0F4B  
                                            i1l5367 0F1D                                              i1l5359 0EFB  
                                            i1l5295 0E5A                                              i1l5287 0E50  
                                            i1l5279 0E37                                              i1l5551 0496  
                                            i1l5543 0483                                              i1l5527 0456  
                                            i1l5535 0466                                              i1l5519 0425  
                                            i1l5471 0311                                              i1l5463 02FE  
                                            i1l5455 02ED                                              i1l5447 02D9  
                                            i1l5439 02CE                                              i1l5615 17F7  
                                            i1l5607 17D9                                              i1l5801 11B4  
                                            i1l5393 0F84                                              i1l5385 0F70  
                                            i1l5369 0F41                                              i1l5377 0F52  
                                            i1l5297 0E5C                                              i1l5289 0E54  
                                            i1l5561 04CD                                              i1l5553 049A  
                                            i1l5537 046A                                              i1l5529 045A  
                                            i1l5473 0313                                              i1l5465 02FF  
                                            i1l5457 02F5                                              i1l5449 02DE  
                                            i1l5609 17ED                                              i1l4691 14D1  
                                            i1l4659 1D37                                              i1l5395 0F86  
                                            i1l5387 0F77                                              i1l5379 0F62  
                                            i1l5299 0E5E                                              i1l5571 04F5  
                                            i1l5563 04DB                                              i1l5555 04B2  
                                            i1l5547 048B                                              i1l5539 046B  
                                            i1l5491 036B                                              i1l5483 032E  
                                            i1l5475 031B                                              i1l5467 0304  
                                            i1l5459 02F8                                              i1l5805 11B7  
                                            i1l5397 0F8B                                              i1l5389 0F7B  
                                            i1l5573 04F6                                              i1l5565 04E4  
                                            i1l5549 0490                                              i1l5557 04B6  
                                            i1l5493 0383                                              i1l5485 0339  
                                            i1l5477 0320                                              i1l5469 0309  
                                            i1l5581 1762                                              i1l5807 11CB  
                                            i1l4695 14DA                                              i1l5399 0F8D  
                                            i1l5575 0500                                              i1l5567 04E6  
                                            i1l5559 04C3                                              i1l5495 0390  
                                            i1l5487 0346                                              i1l5479 0325  
                                            i1l5591 1792                                              i1l5583 1766  
                                            i1l4697 14EB                                              i1l4689 14C7  
                                            i1l5569 04F1                                              i1l5497 039D  
                                            i1l5489 035E                                              i1l5593 179B  
                                            i1l5585 1776                                              i1l4699 14EC  
                                            i1l5499 03A4                                              i1l5595 17A2  
                                            i1l5587 1786                                              i1l5579 175D  
                                            i1l5931 0A32                                              i1l5781 1D29  
                                            i1l5597 17B1                                              i1l5941 0ABD  
                                            i1l5933 0A6D                                              i1l5925 09D2  
                                            i1l5791 1195                                              i1l5599 17B8  
                                            i1l5951 0AD4                                              i1l5943 0AC3  
                                            i1l5935 0AA1                                              i1l5927 09DA  
                                            i1l7801 11C0                                              i1l5793 119D  
                                            i1l5945 0ACD                                              i1l5937 0AA7  
                                            i1l5929 09E5                                              i1l5795 11A1  
                                            i1l5955 1E10                                              i1l5971 1E26  
                                            i1l5947 0AD1                                              i1l5939 0AB0  
                                            i1l5963 1E2E                                              i1l5797 11A9  
                                            i1l5789 1194                                              i1l5957 1E12  
                                            i1l5973 1E2B                                              i1l5965 1E35  
                                            i1l5799 11AC                                              i1l5959 1E19  
                                            i1l5967 1E3A                                              i1l5969 1E1F  
                                            _INLVLA 038C                                              _INLVLB 038D  
                                            _INLVLC 038E                                              u600_20 0DFE  
                                            u600_21 0DFD                                              u601_20 0E04  
                                            u601_21 0E03                                              u610_20 0E96  
                                            u602_20 0E09                                              u610_21 0E94  
                                            u602_21 0E08                                              u611_20 0E97  
                                            u603_20 0E25                                              u603_21 0E24  
                                            u620_20 0EEB                                              u612_20 0EA7  
                                            u604_20 0E2C                                              u620_21 0EEA  
                                            u612_21 0EA6                                              u604_21 0E2B  
                                            u605_20 0E32                                              u605_21 0E31  
                                            u621_25 0EEE                                              u613_25 0EAA  
                                            u630_20 0F80                                              u622_20 0EFB  
                                            u614_20 0EB7                                              u606_20 0E37  
                                            u462_20 1044                                              u710_20 1E35  
                                            u630_21 0F7F                                              u622_21 0EFA  
                                            u614_21 0EB6                                              u606_21 0E36  
                                            u462_21 1043                                              u710_21 1E34  
                                            u711_20 1E26                                              u631_20 0F8B  
                                            u607_20 0E50                                              u711_21 1E25  
                                            u631_21 0F8A                                              u607_21 0E4F  
                                            u623_25 0EFE                                              u615_25 0EBA  
                                            u463_25 1049                                              u640_20 0FD7  
                                            u632_20 0F91                                              u624_20 0F1D  
                                            u616_20 0EC9                                              u608_20 0E54  
                                            u464_20 1054                                              u704_20 0AB0  
                                            u640_21 0FD6                                              u632_21 0F90  
                                            u624_21 0F1C                                              u616_21 0EC8  
                                            u608_21 0E53                                              u464_21 1053  
                                            u704_21 0AAF                                              u624_23 0F19  
                                            u480_25 1518                                              u481_20 1525  
                                            u473_20 14D1                                              u641_20 0FDC  
                                            u633_20 0F96                                              u625_20 0F4B  
                                            u617_20 0ECD                                              u609_20 0E8C  
                                            u705_20 0ABD                                              u481_21 1524  
                                            u473_21 14D0                                              u641_21 0FDB  
                                            u633_21 0F95                                              u625_21 0F4A  
                                            u617_21 0ECC                                              u609_21 0E8B  
                                            u705_21 0ABC                                              u465_25 1EF2  
                                            u609_25 0E88                                              u705_25 0AB9  
                                            u714_20 126C                                              u482_20 152A  
                                            u474_20 14E7                                              u642_20 0FE9  
                                            u634_20 0F9C                                              u626_20 0F62  
                                            u618_20 0ED2                                              u650_20 0304  
                                            u706_20 0ACD                                              u730_20 003F  
                                            u714_21 126B                                              u482_21 1529  
                                            u642_21 0FE8                                              u634_21 0F9B  
                                            u626_21 0F61                                              u618_21 0ED1  
                                            u650_21 0303                                              u706_21 0ACC  
                                            u730_21 003E                                              u474_25 14E3  
                                            u715_20 1279                                              u475_20 14FA  
                                            u643_20 0FEE                                              u635_20 0FA3  
                                            u627_20 0F67                                              u619_20 0EE7  
                                            u651_20 0309                                              u707_20 0AD1  
                                            u731_20 0044                                              u723_20 000A  
                                            u715_21 1278                                              u475_21 14F9  
                                            u643_21 0FED                                              u635_21 0FA2  
                                            u627_21 0F66                                              u619_21 0EE6  
                                            u651_21 0308                                              u707_21 0AD0  
                                            u731_21 0043                                              u723_21 0009  
                                            u708_20 1E19                                              u716_20 1283  
                                            u476_20 1501                                              u636_20 0FA9  
                                            u660_20 045A                                              u652_20 0320  
                                            u732_20 004D                                              u724_20 000F  
                                            u708_21 1E18                                              u716_21 1282  
                                            u476_21 1500                                              u636_21 0FA8  
                                            u660_21 0459                                              u652_21 031F  
                                            u732_21 004C                                              u724_21 000E  
                                            u644_25 0FF5                                              u628_25 0F71  
                                            _OSCFRQ 091F                                              u717_20 1290  
                                            u645_20 0FFE                                              u637_20 0FB3  
                                            u629_20 0F7B                                              u653_20 0325  
                                            u733_20 0052                                              u725_20 0014  
                                            u717_21 128F                                              u645_21 0FFD  
                                            u637_21 0FB2                                              u629_21 0F7A  
                                            u653_21 0324                                              u733_21 0051  
                                            u725_21 0013                                              u477_25 1503  
                                            u661_25 045C                                              u718_20 12A3  
                                            u478_20 150F                                              u638_20 0FC1  
                                            u670_20 04DB                                              u662_20 046A  
                                            u646_20 02D8                                              u726_20 0020  
                                            u718_21 12A2                                              u478_21 150E  
                                            u670_21 04DA                                              u662_21 0469  
                                            u646_21 02D7                                              u726_21 001F  
                                            u638_25 0FBD                                              u670_25 04D7  
                                            u654_25 039E                                              u719_20 1F8C  
                                            u479_20 1516                                              u639_20 0FD0  
                                            u671_20 04F5                                              u663_20 046F  
                                            u647_20 02DE                                              u727_20 0025  
                                            u719_21 1F8B                                              u479_21 1515  
                                            u639_21 0FCF                                              u671_21 04F4  
                                            u663_21 046E                                              u647_21 02DD  
                                            u727_21 0024                                              u655_25 03C9  
                                            u664_20 0483                                              u656_20 041B  
                                            u648_20 02E3                                              u728_20 0031  
                                            u664_21 0482                                              u648_21 02E2  
                                            u728_21 0030                                              u672_25 04F9  
                                            u656_25 0417                                              u680_25 17BB  
                                     vfpfcnvrt@done 00D2                                              u665_20 048A  
                                            u657_20 0432                                              u649_20 02FE  
                                            u681_20 17C5                                              u673_20 1762  
                                            u729_20 0036                                              u665_21 0489  
                                            u649_21 02FD                                              u681_21 17C4  
                                            u673_21 1761                                              u729_21 0035  
                                            u657_25 042E                                              u666_20 0490  
                                            u682_20 17CB                                              u674_20 1766  
                                            u666_21 048F                                              u682_21 17CA  
                                            u674_21 1765                                              u658_25 043D  
                                            u667_20 049A                                              u683_20 17CF  
                                            u675_20 1786                                              u667_21 0499  
                                            u683_21 17CE                                              u675_21 1785  
                                            u659_25 0450                                              u668_20 04A8  
                                            u684_20 17E3                                              u668_25 04A4  
                                            u684_25 17DF                                              u676_25 1795  
                                            u669_20 04C3                                              u685_20 17F2  
                                            u677_20 17A1                                              u669_21 04C2  
                                            u685_21 17F1                                              u677_21 17A0  
                                            u669_25 04BF                                              u686_20 17F6  
                                            u686_21 17F5                                              u678_25 17AB  
                                            u679_20 17B7                                              u679_21 17B6  
                                            _TX1REG 019A                                              _TX1STA 019E  
                                  __end_of___xxtofl 0927                                        ?_uartHandler 0070  
                                 __end_of_SPI1_Open 15A6                                _sendLedstripEndFrame 1F51  
                                 _ADC_potentiometer 0132                                        vfprintf@cfmt 00E0  
                                    ??_initLedstrip 00AB                                           ??___fladd 00B6  
                                            ___wmul 1FC0                             _updateLedstripAnimation 1D2D  
                                         ??___fldiv 00A8                                           ??___awdiv 00A4  
                                         ??___awmod 00A4                                           ??___flmul 00B1  
                                         ??___fltol 003E                                           ??___lwdiv 00AC  
                                         ??___lwmod 00A4                                    __end_of_ledstrip 184C  
                                  __end_of_readLine 13B0                                read_prec_or_width@ap 00A9  
                           __end_of_TMR4_Initialize 1E8C                                    ___awdiv@quotient 00A6  
                                 ?_EUSART_IsRxReady 0070                                     ___awmod@divisor 00A0  
                                 ?_EUSART_IsTxReady 0070                                     ___awmod@counter 00A4  
                                            _printf 1ED1                                              pad@buf 00B6  
                                 ?_CLOCK_Initialize 0070                                              dtoa@fp 00BC  
                                            _strlen 1F23                                   __end_ofi1___fladd 1000  
                                ??_EUSART_IsRxReady 00A0                                   __end_ofi1___flmul 0509  
                                            fputc@c 00A3                                  ??_EUSART_IsTxReady 00A0  
                                            fputs@c 00B1                                              fputs@i 00B2  
                                            fputs@s 00AC                           ?_adcConversionDoneHandler 0070  
                                ??_CLOCK_Initialize 00A0                          str2float@decimal_separator 00C7  
                                  __end_of_printOut 1DA2                             ?_sendLedstripStartFrame 0070  
                       EUSART_ReceiveISR@tempRxHead 0071                                    __end_of_vfprintf 07F9  
                             _pwm_fan_LoadDutyValue 1EE3                                              utoa@fp 00BC  
           INT_SetInterruptHandler@InterruptHandler 00A0             ADC_SetInterruptHandler@InterruptHandler 00A0  
                                         ??_sprintf 00E7                                      _SPI1_IsRxReady 0000  
                                    _SPI1_IsTxReady 0000                                        ___xxtofl@arg 00AA  
                                      ___xxtofl@exp 00A9                                   _SYSTEM_Initialize 1014  
                                      ___xxtofl@val 00A0                             __end_of__initialization 008F  
                                    _SPI1_ByteWrite 0000                                  ?_SYSTEM_Initialize 0070  
                                        ___fltol@f1 003A                                        ?i1__Umul8_16 0070  
                                     __end_of_UART1 1830                               ?_sendLedstripEndFrame 0070  
                                    __pcstackCOMMON 0070                                        __pidataBANK0 0002  
                                      __pidataBANK1 1D27                                        __pidataBANK2 1D49  
                               ??_SYSTEM_Initialize 00A2                                           ?_TMR2_ISR 0070  
                                         ?_TMR4_ISR 0070                                       __end_of_fputc 14C7  
                                     __end_of_fputs 107D                                   ??_SPI1_Initialize 00A0  
                                     __end_of_setKi 1EAE                                       __end_of_setKp 1EBF  
                                     __end_of_putch 1E9D                                    ?_TMR2_Initialize 0070  
                           __end_of_TMR6_Initialize 1E6A                       __end_of_PWM_buzzer_Initialize 1DD0  
                           _ADC_GetConversionResult 1D31                                  _spi1_configuration 18D0  
                    __end_of_sendLedstripStartFrame 1F0D                                _eusartRxStatusBuffer 01A0  
                                  _ADC_hoogtesensor 005B                                  _pwm_fan_Initialize 1DD0  
                                  ?_getHoogtesensor 0070                                         setKi@new_ki 00CF  
                                           ??_fputc 00A7                           __end_of_SYSTEM_Initialize 1036  
                                           ??_fputs 00AF                                             ??_setKi 00D3  
                                           ??_setKp 00D3                                             ??_putch 00A2  
                                        __pbssBANK0 0055                                          __pbssBANK2 0120  
                                        __pbssBANK3 01A0                                 ?_pwm_fan_Initialize 0070  
                              __end_of_EUSART_Write 10EF                                         setKp@new_kp 00CF  
                                    i1___xxtofl@arg 007A                                      i1___xxtofl@exp 0079  
                                    i1___xxtofl@val 0070                           ??_updateLedstripAnimation 00B1  
                                 __end_of__Umul8_16 10A1                            _TMR6_PeriodMatchCallback 0148  
                                        __pmaintext 16B9                                             ?___wmul 00A2  
                                        ??_TMR2_ISR 0070                                          ??_TMR4_ISR 007E  
                                        __pintentry 0004                                _EUSART_AutoBaudQuery 0000  
                              ??_pwm_fan_Initialize 00A0                                             _ADC_ISR 1E10  
                                  ?_TMR4_Initialize 0070                                             ?_printf 00E2  
                                           ?_strlen 00A0                                     _EUSART_IsTxDone 0000  
                                     _eusartRxCount 0067                   _EUSART_RxCompleteCallbackRegister 0000  
                             __end_of_getPomphoogte 1D90                                           ?___xxtofl 00A0  
                                   _EUSART_ErrorGet 0000                                             _SP1BRGH 019C  
                                           _SP1BRGL 019B                                             _OSCCON1 0919  
                                           _OSCCON3 091B                                 i1__Umul8_16@product 0074  
                            ?_pwm_fan_LoadDutyValue 0070                                             _OSCTUNE 091E  
                                           _PWM5DCH 0618                                             _PWM5DCL 0617  
                                           _PWM6DCH 061B                                             _PWM6DCL 061A  
                                           _PWM5CON 0619                                             _PWM6CON 061C  
                        sendLedstripFrame@intensity 00A3                                             _SSP1ADD 0212  
                                           _SLRCONA 030C                                             _SLRCONB 030D  
                                           _SLRCONC 030E                                             _SSP1BUF 0211  
                                      ??_TMR6_Tasks 00B1                                __end_of_initLedstrip 1E10  
                               _dutycycle_led_strip 1216                                           ?_readLine 00E9  
                                      _getDutycycle 1D75                                          _controller 09D2  
                             EUSART_Read@tempRxTail 00A0                              ??_sendLedstripEndFrame 00A1  
                              _ADC_InterruptHandler 0152                             _ADC_SetInterruptHandler 1D51  
                                         ?_printOut 00E9                                             ___fladd 0509  
                                           ___fldiv 0C50                                             ___awdiv 13B0  
                                           ___awmod 12B0                                             ___flmul 0093  
                                           ___fltol 14C7                 adcConversionDoneHandler@new_channel 006E  
                                    uartHandler@str 00EC                                             ___lwdiv 1159  
                                           ___lwmod 10EF                                           ?_vfprintf 00D9  
                         ??_ADC_GetConversionResult 0072                                          _hoogte_bal 0130  
                              ?_dutycycle_led_strip 0070                                    ?_TMR6_Initialize 0070  
                                __end_of_TMR6_Tasks 1014                                        ??i1___xxtofl 0074  
                                           __ptext1 161F                                             __ptext2 0927  
                                           __ptext3 0882                                             __ptext4 0093  
                                           __ptext5 107D                                             __ptext6 0C50  
                                           __ptext7 0509                                             __ptext8 1D3D  
                                           __ptext9 1EAE                                           _T2CONbits 001F  
                             read_prec_or_width@fmt 00A8                     __end_of_updateLedstripAnimation 1D31  
                                        ??___xxtofl 00A4                              dutycycle_led_strip@led 00B0  
                                  ___awmod@dividend 00A2                                             _buzzing 0066  
                                         _T4CONbits 0417                            ??_PIN_MANAGER_Initialize 00A0  
                           _INT_SetInterruptHandler 1D63                                           _T6CONbits 041E  
                                           atoi@neg 00AC                                             _sprintf 10A1  
                                           clrloop0 1D44                                             main@str 0220  
                              end_of_initialization 008F                                             fputc@fp 00A5  
                       __end_ofi1_ADC_SelectChannel 1DB8                                          ??_readLine 00EB  
                                           init_ram 07F9                                             fputs@fp 00AD  
                                           initloop 07FA                                  _read_prec_or_width 140C  
                                 _EUSART_Initialize 1122                                   __end_of_str2float 09D2  
                                __end_ofi1___xxtofl 1800                                   __end_of_printLogs 1FC0  
           __end_of_TMR6_DefaultPeriodMatchCallback 0800                    ?_TMR6_DefaultPeriodMatchCallback 0070  
                 ??_TMR6_DefaultPeriodMatchCallback 00A0                     _TMR6_DefaultPeriodMatchCallback 07FF  
                                ?_EUSART_Initialize 0070                                   __end_of_vfpfcnvrt 0C50  
                                   _SPI1_BufferRead 0000                                   _EUSART_ReceiveISR 125E  
                               ?_read_prec_or_width 00A8                                          ??_printOut 00EA  
                                  vfpfcnvrt@convarg 00D3                                          ??_vfprintf 00DF  
                                ?_EUSART_ReceiveISR 0070                                           _SPI1_Open 1536  
                             ??_dutycycle_led_strip 00AF                                             strlen@a 00A2  
                                           strlen@s 00A0                                 ??_EUSART_Initialize 00A2  
                             i1__Umul8_16@word_mpld 0076                                 _SPI1_BufferExchange 0000  
                                       ___fladd@grs 00C1                                 ??_EUSART_ReceiveISR 0070  
               __end_of_ADC_DefaultInterruptHandler 1D24                         _ADC_DefaultInterruptHandler 1D23  
                                     ___xxtofl@sign 00A8     TMR6_PeriodMatchCallbackRegister@CallbackHandler 00A0  
   TMR4_PeriodMatchCallbackRegister@CallbackHandler 00A0            __end_of_TMR6_PeriodMatchCallbackRegister 1D87  
                ??_TMR6_PeriodMatchCallbackRegister 00A2                   ?_TMR6_PeriodMatchCallbackRegister 00A0  
                  _TMR6_PeriodMatchCallbackRegister 1D7E                                           i1___fladd 0DF4  
                              ??_read_prec_or_width 00AB                                           i1___flmul 02CE  
                                       ___fldiv@grs 00B4                                         ___fldiv@rem 00AD  
                               _EUSART_Deinitialize 0000                          __end_of_initAdcMultiplexer 1E02  
                         ?_PWM_buzzer_LoadDutyValue 00A0                                         ___flmul@grs 00B8  
                         __end_of_EUSART_Initialize 1159                       ??_ADC_DefaultInterruptHandler 0070  
                         ??_ADC_SetInterruptHandler 00A2                                         printOut@str 00E9  
                                   _SPI1_Initialize 1DA2                                         ?_controller 0070  
                         __end_of_EUSART_ReceiveISR 12B0             __end_of_TMR2_DefaultPeriodMatchCallback 1D26  
                 ??_TMR2_DefaultPeriodMatchCallback 0070                    ?_TMR2_DefaultPeriodMatchCallback 0070  
                   _TMR2_DefaultPeriodMatchCallback 1D25                        __end_of_INTERRUPT_Initialize 1DC4  
                                        ?_SPI1_Open 00A8                                         vfpfcnvrt@ap 00CC  
                                       vfpfcnvrt@cp 00D7                                         vfpfcnvrt@fp 00C9  
                                    __end_of___wmul 1FE0                                 str2float@multiplier 00C8  
                                      _EUSART_Write 10C7                                      _ADC_Initialize 1F0D  
                         ??_INT_SetInterruptHandler 00A2                                      __end_of_printf 1EE3  
                                    __end_of_strlen 1F39                                 start_initialization 005A  
                                       __end_of_abs 1ED1                                          ?i1___fladd 003A  
                                       __end_of_pad 1357                                          ?i1___flmul 0020  
                                     ??_EUSART_Read 00A0            __end_of_TMR4_PeriodMatchCallbackRegister 1D75  
                ??_TMR4_PeriodMatchCallbackRegister 00A2                   ?_TMR4_PeriodMatchCallbackRegister 00A0  
                  _TMR4_PeriodMatchCallbackRegister 1D6C                                         putch@txData 00A2  
                         _EUSART_RxInterruptHandler 014E                                     str2float@number 00CA  
                                       vfprintf@fmt 00DB                          _EUSART_FramingErrorHandler 005F  
                                          ??___wmul 00A6                              __end_of_ADC_Initialize 1F23  
                                         __Umul8_16 107D                                        _initLedstrip 1E02  
                                       __pdataBANK0 006D                                         __pdataBANK1 00ED  
                                       __pdataBANK2 0154                                            ?_ADC_ISR 0070  
                          _adcConversionDoneHandler 1194                                            ??_printf 00E8  
                                          ??_strlen 00A2                             ??_pwm_fan_LoadDutyValue 0072  
                                         ___fladd@a 00B2                                           ___fladd@b 00AE  
                                     _SPI1_ByteRead 0000                                           ___fldiv@a 00A0  
                                         ___fldiv@b 00A4                                           ___flmul@a 00AD  
                                         ___flmul@b 00A9                               _PWM_buzzer_Initialize 1DC4  
                                         ___latbits 0002                                       __pcstackBANK0 0020  
                                     __pcstackBANK1 00A0                                       __pcstackBANK2 013A  
                                     __pcstackBANK4 0220                             __end_of_SPI1_Initialize 1DAC  
                                   i1___xxtofl@sign 0078                                   _sendLedstripFrame 1F6A  
                               __end_of_EUSART_Read 2000                              EUSART_Write@tempTxHead 00A1  
                                      _is_on_target 0064                                           __pnvBANK2 0148  
                                ?_sendLedstripFrame 00A1                                    ___lwdiv@dividend 00AA  
                            _PIN_MANAGER_Initialize 11D0                                           _dtoa$2147 00C1  
                          _TMR4_PeriodMatchCallback 014A                                EUSART_Read@readValue 00A1  
                                 _ADC_SelectChannel 1DDC                            i1__Umul8_16@multiplicand 0070  
                                          ?___fladd 00AE                                            ?___fldiv 00A0  
                                          ?___awdiv 00A0                                            ?___awmod 00A0  
                                          ?___flmul 00A9                                            ?___fltol 003A  
                               ??_sendLedstripFrame 00A4                                          ?__Umul8_16 00A0  
                                          ?___lwdiv 00A8                                         ??_SPI1_Open 00A9  
                                          ?___lwmod 00A0                                     ?_ADC_Initialize 0070  
                                      _eusartRxHead 0069                                  ?_ADC_SelectChannel 0070  
                                      _eusartTxHead 006C                                        _eusartRxTail 0068  
                                      _eusartTxTail 006B                        ??_INTERRUPT_InterruptManager 007E  
                      EUSART_TransmitISR@tempTxTail 0070                             _eusartTxBufferRemaining 006A  
                                          _BAUD1CON 019F                              _EUSART_TransmitDisable 0000  
                               ??_ADC_SelectChannel 00A0                                         ??i1___fladd 0042  
                                       ??i1___flmul 0028                                    ___lwdiv@quotient 00AD  
                                          ?_sprintf 00E2                                       ??_setSetpoint 00B1  
                         __end_of_sendLedstripFrame 1F85                                    _EUSART_IsRxReady 0800  
                              _INTERRUPT_Initialize 1DB8                                           _integraal 0128  
                                  _EUSART_IsTxReady 1D90                                      _eusartRxBuffer 01B0  
                                  _CLOCK_Initialize 1D5A                                           _dutycycle 0057  
                          ?_updateLedstripAnimation 0070                                      _eusartTxBuffer 0120  
                                    ___wmul@product 00A6                                           clear_ram0 1D43  
                                          _PIE1bits 0091                   _EUSART_TxCompleteCallbackRegister 0000  
                                          _PIE2bits 0092                                   _eusartRxLastError 0138  
                                     ??_uartHandler 00EC                           __end_of_ADC_SelectChannel 1DE8  
                                          _PIR0bits 0010                                            _PIR1bits 0011  
                                          _PIR2bits 0012                                            _OSCSTAT1 091C  
                                        str2float@i 00C9                                           _str2float 0927  
                                          _SSP1CON1 0215                                            _SSP1CON3 0217  
                                          _TMR2_ISR 1E1F                                            _TMR4_ISR 1E2E  
                                          _SSP1STAT 0214                                           _printLogs 1FA1  
                          ??_sendLedstripStartFrame 00A1                                           _vfpfcnvrt 0ADC  
                  __end_of_PWM_buzzer_LoadDutyValue 1F51                                          _ADCON0bits 009D  
                                 _SPI1_Deinitialize 0000                                   ___wmul@multiplier 00A2  
                          ADC_SelectChannel@channel 00A1                              ?_PWM_buzzer_Initialize 0070  
                                     readLine@index 0065                                         _EUSART_Read 1FE0  
                                  ?_SPI1_Initialize 0070                               ?_INTERRUPT_Initialize 0070  
                 _EUSART_RxCompleteInterruptHandler 0134                                   ??_TMR2_Initialize 00A0  
                                      ??_controller 004E                                       ??i1__Umul8_16 0072  
                               __end_of_setSetpoint 1D43                                      str2float@digit 00CE  
                                _initAdcMultiplexer 1DF5                         __end_of_dutycycle_led_strip 125E  
                                        vfprintf@ap 00DD                                          vfprintf@fp 00D9  
                          ?_ADC_GetConversionResult 0070                                          ?_str2float 00C3  
                        i1ADC_SelectChannel@channel 0071                                   ??_getHoogtesensor 0072  
                                       ??__Umul8_16 00A2                                          ?_printLogs 0070  
                               __end_of_uartHandler 16B9                          __end_of_EUSART_TransmitISR 1FA1  
                               ?_initAdcMultiplexer 0070                                          ?_vfpfcnvrt 00C9  
                                        sprintf@fmt 00E3                                            ___xxtofl 0882  
                                __end_of_controller 0ADC                                       _getPomphoogte 1D87  
                                   ___lwdiv@divisor 00A8                                  _EUSART_AutoBaudSet 0000  
                                   ___lwdiv@counter 00AC                                            __ptext10 1E9D  
                                          __ptext11 1357                                            __ptext20 0ADC  
                                          __ptext12 1FE0                                            __ptext21 15A6  
                                          __ptext13 0800                                            __ptext30 10C7  
                                          __ptext22 10EF                                            __ptext14 0809  
                                          __ptext31 1D90                                            __ptext23 140C  
                                          __ptext15 10A1                                            __ptext40 1DDC  
                                          __ptext32 1EBF                                            __ptext24 0715  
                                          __ptext16 1D99                                            __ptext41 1000  
                                          __ptext33 12B0                                            __ptext25 1302  
                                          __ptext17 1FA1                                            __ptext50 1FC0  
                                          __ptext42 07FF                                            __ptext34 13B0  
                                          __ptext26 1F23                                            __ptext18 1ED1  
                                          __ptext51 1159                                            __ptext43 1D2D  
                                          __ptext35 1D87                                            __ptext27 1059  
                                          __ptext19 07CE                                            __ptext60 11D0  
                                          __ptext52 1D6C                                            __ptext44 1216  
                                          __ptext36 1E02                                            __ptext28 1469  
                                          __ptext61 1DB8                                            __ptext53 1014  
                                          __ptext45 1EF8                                            __ptext37 1D7E  
                                          __ptext29 1E8C                                            __ptext62 1D63  
                                          __ptext54 1DD0                                            __ptext46 1F6A  
                                          __ptext38 1536                                            __ptext71 1E2E  
                                          __ptext63 1122                                            __ptext55 1E5B  
                                          __ptext47 1F51                                            __ptext39 1DF5  
                                          __ptext80 14C7                                            __ptext72 1D26  
                                          __ptext64 1E4C                                            __ptext56 1E7B  
                                          __ptext48 1DE8                                            __ptext81 1E1F  
                                          __ptext73 09D2                                            __ptext65 1E3D  
                                          __ptext57 1E6A                                            __ptext49 1D75  
                                          __ptext90 1DAC                                            __ptext82 1D25  
                                          __ptext74 175C                                            __ptext66 1D5A  
                                          __ptext58 1DA2                                            __ptext91 1D31  
                                          __ptext83 1F85                                            __ptext75 02CE  
                                          __ptext67 1F0D                                            __ptext59 1DC4  
                                          __ptext84 125E                                            __ptext76 1036  
                                          __ptext68 1D51                                            __ptext85 1D29  
                                          __ptext77 0DF4                                            __ptext69 1F39  
                                          __ptext86 1D24                                            __ptext78 1EE3  
                                          __ptext87 1E10                                            __ptext79 1D37  
                                          __ptext88 1D23                                            __ptext89 1194  
                                      _SSP1CON1bits 0215                                ??_initAdcMultiplexer 00A2  
                             _EUSART_TransmitEnable 0000                                            _ledstrip 1830  
                                          _readLine 1357                                   ??_TMR4_Initialize 00A0  
                        ??_adcConversionDoneHandler 0072                                          _RC1STAbits 019D  
                                          _setpoint 00ED                                            _printOut 1D99  
                                          int$flags 007E                                 __end_ofi1__Umul8_16 1059  
                                          _vfprintf 07CE                  __end_of_INTERRUPT_InterruptManager 0058  
                        _INTERRUPT_InterruptManager 0004         __end_of_EUSART_FramingErrorCallbackRegister 1E4C  
             ??_EUSART_FramingErrorCallbackRegister 00A2                ?_EUSART_FramingErrorCallbackRegister 00A0  
               _EUSART_FramingErrorCallbackRegister 1E3D                                           printf@fmt 00E2  
                    pwm_fan_LoadDutyValue@dutyValue 0070                                      _ADC_pomphoogte 0059  
                                    ?_getPomphoogte 00A0                                          _INTCONbits 000B  
                     __end_of_pwm_fan_LoadDutyValue 1EF8                            _PWM_buzzer_LoadDutyValue 1F39  
                              _INT_InterruptHandler 0061                                      __pstringtext10 18B8  
                                    __pstringtext11 18C5                                      __pstringtext12 18DA  
                                    __pstringtext13 0000                              ??_INTERRUPT_Initialize 00A2  
                          ?_ADC_SetInterruptHandler 00A0                                         _setSetpoint 1D3D  
                                          intlevel1 0000                                           sprintf@ap 013A  
                            i1__Umul8_16@multiplier 0078                                    ___lwmod@dividend 00A2  
                         _EUSART_TxInterruptHandler 0150                             ?_PIN_MANAGER_Initialize 0070  
                                     ?_getDutycycle 00A0                                   ??_TMR6_Initialize 00A0  
                         SPI1_ByteExchange@byteData 00A0          __end_of_EUSART_DefaultFramingErrorCallback 1D25  
              ??_EUSART_DefaultFramingErrorCallback 0070                 ?_EUSART_DefaultFramingErrorCallback 0070  
                _EUSART_DefaultFramingErrorCallback 1D24                     __end_of_ADC_GetConversionResult 1D37  
                                  ??_ADC_Initialize 00A2                                         _uartHandler 161F  
                                       ??_str2float 00C7                                       _mustPrintLogs 006D  
                                          printf@ap 00E8                                    _SPI1_BufferWrite 0000  
                                       ??_printLogs 00E9                            ?_INT_SetInterruptHandler 00A0  
                          __end_of_EUSART_IsRxReady 0809                                         ??_vfpfcnvrt 00CE  
                          __end_of_EUSART_IsTxReady 1D99                                        str2float@str 00C3  
                          __end_of_CLOCK_Initialize 1D63                                       __pstringtext1 1800  
                                     __pstringtext2 1830                                       __pstringtext3 18D0  
                                     __pstringtext4 184C                                       __pstringtext5 1865  
                                     __pstringtext6 187D                                       __pstringtext7 188E  
                                     __pstringtext8 189D                                       __pstringtext9 18AB  
                                        _SPI1_Close 0000                              __Umul8_16@multiplicand 00A0  
                                          sprintf@f 013B                                            sprintf@s 00E2  
                                        _SSP1DATPPS 0E21                                          _SSP1CLKPPS 0E20  
                                   ___lwmod@divisor 00A0                                     ___lwmod@counter 00A4  
                                        _TX1STAbits 019E                              sendLedstripFrame@green 00A1  
                                     ___fladd@signs 00BE                                     controller@error 0053  
                                        _TMR6_Tasks 1000                                  EUSART_Write@txData 00A0  
                            _sendLedstripStartFrame 1EF8                      __end_of_PIN_MANAGER_Initialize 1216  
                                    ??_getDutycycle 00A2                                         _PWMTMRSbits 061F  
                                      ___fladd@aexp 00BF                                        ___fladd@bexp 00C0  
                             sendLedstripFrame@blue 00A2                                __Umul8_16@multiplier 00A8  
                           SPI1_Open@spiConfigIndex 00A8                                sendLedstripFrame@red 00A4  
                                       i1__Umul8_16 1036                            _TMR2_PeriodMatchCallback 014C  
                        __end_of_spi1_configuration 18DA                                   __Umul8_16@product 00A4  
