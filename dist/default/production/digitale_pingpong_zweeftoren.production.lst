

Microchip MPLAB XC8 Assembler V3.00 build 20241204225717 
                                                                                               Wed Mar 12 16:43:25 2025

Microchip MPLAB XC8 C Compiler v3.00 (Free license) build 20241204225717 Og1 
     1                           	processor	16F18345
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	idataBANK0,global,class=CODE,space=0,delta=2,noexec
     5                           	psect	idataBANK1,global,class=CODE,space=0,delta=2,noexec
     6                           	psect	idataBANK2,global,class=CODE,space=0,delta=2,noexec
     7                           	psect	stringtext1,global,class=STRCODE,space=0,delta=2,noexec
     8                           	psect	stringtext2,global,class=STRCODE,space=0,delta=2,noexec
     9                           	psect	stringtext3,global,class=STRCODE,space=0,delta=2,noexec
    10                           	psect	nvBANK2,global,class=BANK2,space=1,delta=1,noexec
    11                           	psect	stringtext4,global,class=STRCODE,space=0,delta=2,noexec
    12                           	psect	stringtext5,global,class=STRCODE,space=0,delta=2,noexec
    13                           	psect	stringtext6,global,class=STRCODE,space=0,delta=2,noexec
    14                           	psect	stringtext7,global,class=STRCODE,space=0,delta=2,noexec
    15                           	psect	stringtext8,global,class=STRCODE,space=0,delta=2,noexec
    16                           	psect	stringtext9,global,class=STRCODE,space=0,delta=2,noexec
    17                           	psect	stringtext10,global,class=STRCODE,space=0,delta=2,noexec
    18                           	psect	stringtext11,global,class=STRCODE,space=0,delta=2,noexec
    19                           	psect	stringtext12,global,class=STRCODE,space=0,delta=2,noexec
    20                           	psect	stringtext13,global,class=STRCODE,space=0,delta=2,noexec
    21                           	psect	cinit,global,class=CODE,space=0,merge=1,delta=2
    22                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,noexec
    23                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,noexec
    24                           	psect	dataBANK1,global,class=BANK1,space=1,delta=1,noexec
    25                           	psect	bssBANK2,global,class=BANK2,space=1,delta=1,noexec
    26                           	psect	dataBANK2,global,class=BANK2,space=1,delta=1,noexec
    27                           	psect	bssBANK3,global,class=BANK3,space=1,delta=1,noexec
    28                           	psect	inittext,global,class=CODE,space=0,delta=2
    29                           	psect	clrtext,global,class=CODE,space=0,delta=2
    30                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1,noexec
    31                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
    32                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    33                           	psect	maintext,global,class=CODE,space=0,merge=1,split=1,delta=2
    34                           	psect	text1,local,class=CODE,space=0,merge=1,delta=2
    35                           	psect	text2,local,class=CODE,space=0,merge=1,delta=2
    36                           	psect	text3,local,class=CODE,space=0,merge=1,delta=2,group=2
    37                           	psect	text4,local,class=CODE,space=0,merge=1,delta=2,group=2
    38                           	psect	text5,local,class=CODE,space=0,merge=1,delta=2,group=2
    39                           	psect	text6,local,class=CODE,space=0,merge=1,delta=2,group=2
    40                           	psect	text7,local,class=CODE,space=0,merge=1,delta=2,group=2
    41                           	psect	text8,local,class=CODE,space=0,merge=1,delta=2
    42                           	psect	text9,local,class=CODE,space=0,merge=1,delta=2
    43                           	psect	text10,local,class=CODE,space=0,merge=1,delta=2
    44                           	psect	text11,local,class=CODE,space=0,merge=1,delta=2
    45                           	psect	text12,local,class=CODE,space=0,merge=1,delta=2
    46                           	psect	text13,local,class=CODE,space=0,merge=1,delta=2,group=3
    47                           	psect	text14,local,class=CODE,space=0,merge=1,delta=2
    48                           	psect	text15,local,class=CODE,space=0,merge=1,delta=2,group=3
    49                           	psect	text16,local,class=CODE,space=0,merge=1,delta=2,group=1
    50                           	psect	text17,local,class=CODE,space=0,merge=1,delta=2,group=1
    51                           	psect	text18,local,class=CODE,space=0,merge=1,delta=2,group=1
    52                           	psect	text19,local,class=CODE,space=0,merge=1,delta=2,group=2
    53                           	psect	text20,local,class=CODE,space=0,merge=1,delta=2,group=1
    54                           	psect	text21,local,class=CODE,space=0,merge=1,delta=2,group=1
    55                           	psect	text22,local,class=CODE,space=0,merge=1,delta=2,group=1
    56                           	psect	text23,local,class=CODE,space=0,merge=1,delta=2,group=3
    57                           	psect	text24,local,class=CODE,space=0,merge=1,delta=2,group=3
    58                           	psect	text25,local,class=CODE,space=0,merge=1,delta=2,group=3
    59                           	psect	text26,local,class=CODE,space=0,merge=1,delta=2
    60                           	psect	text27,local,class=CODE,space=0,merge=1,delta=2
    61                           	psect	text28,local,class=CODE,space=0,merge=1,delta=2
    62                           	psect	text29,local,class=CODE,space=0,merge=1,delta=2,group=3
    63                           	psect	text30,local,class=CODE,space=0,merge=1,delta=2,group=2
    64                           	psect	text31,local,class=CODE,space=0,merge=1,delta=2,group=2
    65                           	psect	text32,local,class=CODE,space=0,merge=1,delta=2
    66                           	psect	text33,local,class=CODE,space=0,merge=1,delta=2
    67                           	psect	text34,local,class=CODE,space=0,merge=1,delta=2
    68                           	psect	text35,local,class=CODE,space=0,merge=1,delta=2
    69                           	psect	text36,local,class=CODE,space=0,merge=1,delta=2
    70                           	psect	text37,local,class=CODE,space=0,merge=1,delta=2
    71                           	psect	text38,local,class=CODE,space=0,merge=1,delta=2
    72                           	psect	text39,local,class=CODE,space=0,merge=1,delta=2
    73                           	psect	text40,local,class=CODE,space=0,merge=1,delta=2
    74                           	psect	text41,local,class=CODE,space=0,merge=1,delta=2
    75                           	psect	text42,local,class=CODE,space=0,merge=1,delta=2
    76                           	psect	text43,local,class=CODE,space=0,merge=1,delta=2
    77                           	psect	text44,local,class=CODE,space=0,merge=1,delta=2
    78                           	psect	text45,local,class=CODE,space=0,merge=1,delta=2
    79                           	psect	text46,local,class=CODE,space=0,merge=1,delta=2
    80                           	psect	text47,local,class=CODE,space=0,merge=1,delta=2
    81                           	psect	text48,local,class=CODE,space=0,merge=1,delta=2
    82                           	psect	text49,local,class=CODE,space=0,merge=1,delta=2
    83                           	psect	text50,local,class=CODE,space=0,merge=1,delta=2,group=2
    84                           	psect	text51,local,class=CODE,space=0,merge=1,delta=2,group=2
    85                           	psect	text52,local,class=CODE,space=0,merge=1,delta=2
    86                           	psect	text53,local,class=CODE,space=0,merge=1,delta=2
    87                           	psect	text54,local,class=CODE,space=0,merge=1,delta=2
    88                           	psect	text55,local,class=CODE,space=0,merge=1,delta=2
    89                           	psect	text56,local,class=CODE,space=0,merge=1,delta=2
    90                           	psect	text57,local,class=CODE,space=0,merge=1,delta=2
    91                           	psect	text58,local,class=CODE,space=0,merge=1,delta=2
    92                           	psect	text59,local,class=CODE,space=0,merge=1,delta=2
    93                           	psect	text60,local,class=CODE,space=0,merge=1,delta=2
    94                           	psect	text61,local,class=CODE,space=0,merge=1,delta=2
    95                           	psect	text62,local,class=CODE,space=0,merge=1,delta=2
    96                           	psect	text63,local,class=CODE,space=0,merge=1,delta=2
    97                           	psect	text64,local,class=CODE,space=0,merge=1,delta=2
    98                           	psect	text65,local,class=CODE,space=0,merge=1,delta=2
    99                           	psect	text66,local,class=CODE,space=0,merge=1,delta=2
   100                           	psect	text67,local,class=CODE,space=0,merge=1,delta=2
   101                           	psect	text68,local,class=CODE,space=0,merge=1,delta=2
   102                           	psect	intentry,global,class=CODE,space=0,delta=2
   103                           	psect	text70,local,class=CODE,space=0,merge=1,delta=2
   104                           	psect	text71,local,class=CODE,space=0,merge=1,delta=2
   105                           	psect	text72,local,class=CODE,space=0,merge=1,delta=2
   106                           	psect	text73,local,class=CODE,space=0,merge=1,delta=2
   107                           	psect	text74,local,class=CODE,space=0,merge=1,delta=2
   108                           	psect	text75,local,class=CODE,space=0,merge=1,delta=2
   109                           	psect	text76,local,class=CODE,space=0,merge=1,delta=2
   110                           	psect	text77,local,class=CODE,space=0,merge=1,delta=2
   111                           	psect	text78,local,class=CODE,space=0,merge=1,delta=2
   112                           	psect	text79,local,class=CODE,space=0,merge=1,delta=2,group=2
   113                           	psect	text80,local,class=CODE,space=0,merge=1,delta=2
   114                           	psect	text81,local,class=CODE,space=0,merge=1,delta=2
   115                           	psect	text82,local,class=CODE,space=0,merge=1,delta=2
   116                           	psect	text83,local,class=CODE,space=0,merge=1,delta=2
   117                           	psect	text84,local,class=CODE,space=0,merge=1,delta=2
   118                           	psect	text85,local,class=CODE,space=0,merge=1,delta=2
   119                           	psect	text86,local,class=CODE,space=0,merge=1,delta=2
   120                           	psect	text87,local,class=CODE,space=0,merge=1,delta=2
   121                           	psect	text88,local,class=CODE,space=0,merge=1,delta=2
   122                           	psect	text89,local,class=CODE,space=0,merge=1,delta=2
   123                           	psect	text90,local,class=CODE,space=0,merge=1,delta=2
   124                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
   125                           	dabs	1,0x7E,2
   126     0000                     
   127                           ; Generated 11/01/2024 GMT
   128                           ; 
   129                           ; Copyright © 2024, Microchip Technology Inc. and its subsidiaries ("Microchip")
   130                           ; All rights reserved.
   131                           ; 
   132                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
   133                           ; 
   134                           ; Redistribution and use in source and binary forms, with or without modification, are
   135                           ; permitted provided that the following conditions are met:
   136                           ; 
   137                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
   138                           ;        conditions and the following disclaimer.
   139                           ; 
   140                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
   141                           ;        of conditions and the following disclaimer in the documentation and/or other
   142                           ;        materials provided with the distribution. Publication is not required when
   143                           ;        this file is used in an embedded application.
   144                           ; 
   145                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
   146                           ;        software without specific prior written permission.
   147                           ; 
   148                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
   149                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
   150                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
   151                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
   152                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
   153                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
   154                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
   155                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
   156                           ; 
   157                           ; 
   158                           ; Code-generator required, PIC16F18345 Definitions
   159                           ; 
   160                           ; SFR Addresses
   161     0008                     bsr             equ	8
   162     0005                     fsr0h           equ	5
   163     0004                     fsr0l           equ	4
   164     0007                     fsr1h           equ	7
   165     0006                     fsr1l           equ	6
   166     0000                     indf            equ	0
   167     0000                     indf0           equ	0
   168     0001                     indf1           equ	1
   169     000B                     intcon          equ	11
   170     0002                     pc              equ	2
   171     0002                     pcl             equ	2
   172     000A                     pclath          equ	10
   173     0003                     status          equ	3
   174     0009                     wreg            equ	9
   175     0000                     INDF0           equ	0	;# 
   176     0001                     INDF1           equ	1	;# 
   177     0002                     PCL             equ	2	;# 
   178     0003                     STATUS          equ	3	;# 
   179     0004                     FSR0L           equ	4	;# 
   180     0005                     FSR0H           equ	5	;# 
   181     0006                     FSR1L           equ	6	;# 
   182     0007                     FSR1H           equ	7	;# 
   183     0008                     BSR             equ	8	;# 
   184     0009                     WREG            equ	9	;# 
   185     000A                     PCLATH          equ	10	;# 
   186     000B                     INTCON          equ	11	;# 
   187     000C                     PORTA           equ	12	;# 
   188     000D                     PORTB           equ	13	;# 
   189     000E                     PORTC           equ	14	;# 
   190     0010                     PIR0            equ	16	;# 
   191     0011                     PIR1            equ	17	;# 
   192     0012                     PIR2            equ	18	;# 
   193     0013                     PIR3            equ	19	;# 
   194     0014                     PIR4            equ	20	;# 
   195     0015                     TMR0L           equ	21	;# 
   196     0015                     TMR0            equ	21	;# 
   197     0016                     TMR0H           equ	22	;# 
   198     0016                     PR0             equ	22	;# 
   199     0017                     T0CON0          equ	23	;# 
   200     0018                     T0CON1          equ	24	;# 
   201     0019                     TMR1            equ	25	;# 
   202     0019                     TMR1L           equ	25	;# 
   203     001A                     TMR1H           equ	26	;# 
   204     001B                     T1CON           equ	27	;# 
   205     001C                     T1GCON          equ	28	;# 
   206     001D                     TMR2            equ	29	;# 
   207     001E                     PR2             equ	30	;# 
   208     001F                     T2CON           equ	31	;# 
   209     008C                     TRISA           equ	140	;# 
   210     008D                     TRISB           equ	141	;# 
   211     008E                     TRISC           equ	142	;# 
   212     0090                     PIE0            equ	144	;# 
   213     0091                     PIE1            equ	145	;# 
   214     0092                     PIE2            equ	146	;# 
   215     0093                     PIE3            equ	147	;# 
   216     0094                     PIE4            equ	148	;# 
   217     0097                     WDTCON          equ	151	;# 
   218     009B                     ADRES           equ	155	;# 
   219     009B                     ADRESL          equ	155	;# 
   220     009C                     ADRESH          equ	156	;# 
   221     009D                     ADCON0          equ	157	;# 
   222     009E                     ADCON1          equ	158	;# 
   223     009F                     ADACT           equ	159	;# 
   224     010C                     LATA            equ	268	;# 
   225     010D                     LATB            equ	269	;# 
   226     010E                     LATC            equ	270	;# 
   227     0111                     CM1CON0         equ	273	;# 
   228     0112                     CM1CON1         equ	274	;# 
   229     0113                     CM2CON0         equ	275	;# 
   230     0114                     CM2CON1         equ	276	;# 
   231     0115                     CMOUT           equ	277	;# 
   232     0116                     BORCON          equ	278	;# 
   233     0117                     FVRCON          equ	279	;# 
   234     0118                     DACCON0         equ	280	;# 
   235     0119                     DACCON1         equ	281	;# 
   236     018C                     ANSELA          equ	396	;# 
   237     018D                     ANSELB          equ	397	;# 
   238     018E                     ANSELC          equ	398	;# 
   239     0197                     VREGCON         equ	407	;# 
   240     0199                     RC1REG          equ	409	;# 
   241     0199                     RCREG           equ	409	;# 
   242     0199                     RCREG1          equ	409	;# 
   243     019A                     TX1REG          equ	410	;# 
   244     019A                     TXREG1          equ	410	;# 
   245     019A                     TXREG           equ	410	;# 
   246     019B                     SP1BRG          equ	411	;# 
   247     019B                     SPBRG           equ	411	;# 
   248     019B                     SP1BRGL         equ	411	;# 
   249     019B                     SPBRG1          equ	411	;# 
   250     019B                     SPBRGL          equ	411	;# 
   251     019C                     SP1BRGH         equ	412	;# 
   252     019C                     SPBRGH          equ	412	;# 
   253     019C                     SPBRGH1         equ	412	;# 
   254     019D                     RC1STA          equ	413	;# 
   255     019D                     RCSTA1          equ	413	;# 
   256     019D                     RCSTA           equ	413	;# 
   257     019E                     TX1STA          equ	414	;# 
   258     019E                     TXSTA1          equ	414	;# 
   259     019E                     TXSTA           equ	414	;# 
   260     019F                     BAUD1CON        equ	415	;# 
   261     019F                     BAUDCON1        equ	415	;# 
   262     019F                     BAUDCTL1        equ	415	;# 
   263     019F                     BAUDCON         equ	415	;# 
   264     019F                     BAUDCTL         equ	415	;# 
   265     020C                     WPUA            equ	524	;# 
   266     020D                     WPUB            equ	525	;# 
   267     020E                     WPUC            equ	526	;# 
   268     0211                     SSP1BUF         equ	529	;# 
   269     0211                     SSPBUF          equ	529	;# 
   270     0212                     SSP1ADD         equ	530	;# 
   271     0212                     SSPADD          equ	530	;# 
   272     0213                     SSP1MSK         equ	531	;# 
   273     0213                     SSPMSK          equ	531	;# 
   274     0214                     SSP1STAT        equ	532	;# 
   275     0214                     SSPSTAT         equ	532	;# 
   276     0215                     SSP1CON1        equ	533	;# 
   277     0215                     SSPCON          equ	533	;# 
   278     0215                     SSPCON1         equ	533	;# 
   279     0215                     SSP1CON         equ	533	;# 
   280     0216                     SSP1CON2        equ	534	;# 
   281     0216                     SSPCON2         equ	534	;# 
   282     0217                     SSP1CON3        equ	535	;# 
   283     0217                     SSPCON3         equ	535	;# 
   284     0219                     SSP2BUF         equ	537	;# 
   285     021A                     SSP2ADD         equ	538	;# 
   286     021B                     SSP2MSK         equ	539	;# 
   287     021C                     SSP2STAT        equ	540	;# 
   288     021D                     SSP2CON1        equ	541	;# 
   289     021D                     SSP2CON         equ	541	;# 
   290     021E                     SSP2CON2        equ	542	;# 
   291     021F                     SSP2CON3        equ	543	;# 
   292     028C                     ODCONA          equ	652	;# 
   293     028D                     ODCONB          equ	653	;# 
   294     028E                     ODCONC          equ	654	;# 
   295     0291                     CCPR1           equ	657	;# 
   296     0291                     CCPR1L          equ	657	;# 
   297     0292                     CCPR1H          equ	658	;# 
   298     0293                     CCP1CON         equ	659	;# 
   299     0294                     CCP1CAP         equ	660	;# 
   300     0295                     CCPR2           equ	661	;# 
   301     0295                     CCPR2L          equ	661	;# 
   302     0296                     CCPR2H          equ	662	;# 
   303     0297                     CCP2CON         equ	663	;# 
   304     0298                     CCP2CAP         equ	664	;# 
   305     029F                     CCPTMRS         equ	671	;# 
   306     030C                     SLRCONA         equ	780	;# 
   307     030D                     SLRCONB         equ	781	;# 
   308     030E                     SLRCONC         equ	782	;# 
   309     0311                     CCPR3           equ	785	;# 
   310     0311                     CCPR3L          equ	785	;# 
   311     0312                     CCPR3H          equ	786	;# 
   312     0313                     CCP3CON         equ	787	;# 
   313     0314                     CCP3CAP         equ	788	;# 
   314     0315                     CCPR4           equ	789	;# 
   315     0315                     CCPR4L          equ	789	;# 
   316     0316                     CCPR4H          equ	790	;# 
   317     0317                     CCP4CON         equ	791	;# 
   318     0318                     CCP4CAP         equ	792	;# 
   319     038C                     INLVLA          equ	908	;# 
   320     038D                     INLVLB          equ	909	;# 
   321     038E                     INLVLC          equ	910	;# 
   322     0391                     IOCAP           equ	913	;# 
   323     0392                     IOCAN           equ	914	;# 
   324     0393                     IOCAF           equ	915	;# 
   325     0394                     IOCBP           equ	916	;# 
   326     0395                     IOCBN           equ	917	;# 
   327     0396                     IOCBF           equ	918	;# 
   328     0397                     IOCCP           equ	919	;# 
   329     0398                     IOCCN           equ	920	;# 
   330     0399                     IOCCF           equ	921	;# 
   331     039A                     CLKRCON         equ	922	;# 
   332     039C                     MDCON           equ	924	;# 
   333     039D                     MDSRC           equ	925	;# 
   334     039E                     MDCARH          equ	926	;# 
   335     039F                     MDCARL          equ	927	;# 
   336     0411                     TMR3            equ	1041	;# 
   337     0411                     TMR3L           equ	1041	;# 
   338     0412                     TMR3H           equ	1042	;# 
   339     0413                     T3CON           equ	1043	;# 
   340     0414                     T3GCON          equ	1044	;# 
   341     0415                     TMR4            equ	1045	;# 
   342     0416                     PR4             equ	1046	;# 
   343     0417                     T4CON           equ	1047	;# 
   344     0418                     TMR5            equ	1048	;# 
   345     0418                     TMR5L           equ	1048	;# 
   346     0419                     TMR5H           equ	1049	;# 
   347     041A                     T5CON           equ	1050	;# 
   348     041B                     T5GCON          equ	1051	;# 
   349     041C                     TMR6            equ	1052	;# 
   350     041D                     PR6             equ	1053	;# 
   351     041E                     T6CON           equ	1054	;# 
   352     041F                     CCDCON          equ	1055	;# 
   353     0498                     NCO1ACC         equ	1176	;# 
   354     0498                     NCO1ACCL        equ	1176	;# 
   355     0499                     NCO1ACCH        equ	1177	;# 
   356     049A                     NCO1ACCU        equ	1178	;# 
   357     049B                     NCO1INC         equ	1179	;# 
   358     049B                     NCO1INCL        equ	1179	;# 
   359     049C                     NCO1INCH        equ	1180	;# 
   360     049D                     NCO1INCU        equ	1181	;# 
   361     049E                     NCO1CON         equ	1182	;# 
   362     049F                     NCO1CLK         equ	1183	;# 
   363     0617                     PWM5DCL         equ	1559	;# 
   364     0618                     PWM5DCH         equ	1560	;# 
   365     0619                     PWM5CON         equ	1561	;# 
   366     0619                     PWM5CON0        equ	1561	;# 
   367     061A                     PWM6DCL         equ	1562	;# 
   368     061B                     PWM6DCH         equ	1563	;# 
   369     061C                     PWM6CON         equ	1564	;# 
   370     061C                     PWM6CON0        equ	1564	;# 
   371     061F                     PWMTMRS         equ	1567	;# 
   372     0691                     CWG1CLKCON      equ	1681	;# 
   373     0692                     CWG1DAT         equ	1682	;# 
   374     0693                     CWG1DBR         equ	1683	;# 
   375     0694                     CWG1DBF         equ	1684	;# 
   376     0695                     CWG1CON0        equ	1685	;# 
   377     0696                     CWG1CON1        equ	1686	;# 
   378     0697                     CWG1AS0         equ	1687	;# 
   379     0698                     CWG1AS1         equ	1688	;# 
   380     0699                     CWG1STR         equ	1689	;# 
   381     0711                     CWG2CLKCON      equ	1809	;# 
   382     0712                     CWG2DAT         equ	1810	;# 
   383     0713                     CWG2DBR         equ	1811	;# 
   384     0714                     CWG2DBF         equ	1812	;# 
   385     0715                     CWG2CON0        equ	1813	;# 
   386     0716                     CWG2CON1        equ	1814	;# 
   387     0717                     CWG2AS0         equ	1815	;# 
   388     0718                     CWG2AS1         equ	1816	;# 
   389     0719                     CWG2STR         equ	1817	;# 
   390     0891                     NVMADR          equ	2193	;# 
   391     0891                     EEADR           equ	2193	;# 
   392     0891                     PMADR           equ	2193	;# 
   393     0891                     NVMADRL         equ	2193	;# 
   394     0891                     EEADRL          equ	2193	;# 
   395     0891                     PMADRL          equ	2193	;# 
   396     0892                     NVMADRH         equ	2194	;# 
   397     0892                     EEADRH          equ	2194	;# 
   398     0892                     PMADRH          equ	2194	;# 
   399     0893                     NVMDAT          equ	2195	;# 
   400     0893                     EEDAT           equ	2195	;# 
   401     0893                     PMDAT           equ	2195	;# 
   402     0893                     NVMDATL         equ	2195	;# 
   403     0893                     EEDATL          equ	2195	;# 
   404     0893                     PMDATL          equ	2195	;# 
   405     0894                     NVMDATH         equ	2196	;# 
   406     0894                     EEDATH          equ	2196	;# 
   407     0894                     PMDATH          equ	2196	;# 
   408     0895                     NVMCON1         equ	2197	;# 
   409     0895                     EECON1          equ	2197	;# 
   410     0895                     PMCON1          equ	2197	;# 
   411     0896                     NVMCON2         equ	2198	;# 
   412     0896                     EECON2          equ	2198	;# 
   413     0896                     PMCON2          equ	2198	;# 
   414     089B                     PCON0           equ	2203	;# 
   415     0911                     PMD0            equ	2321	;# 
   416     0912                     PMD1            equ	2322	;# 
   417     0913                     PMD2            equ	2323	;# 
   418     0914                     PMD3            equ	2324	;# 
   419     0915                     PMD4            equ	2325	;# 
   420     0916                     PMD5            equ	2326	;# 
   421     0918                     CPUDOZE         equ	2328	;# 
   422     0919                     OSCCON1         equ	2329	;# 
   423     091A                     OSCCON2         equ	2330	;# 
   424     091B                     OSCCON3         equ	2331	;# 
   425     091C                     OSCSTAT1        equ	2332	;# 
   426     091D                     OSCEN           equ	2333	;# 
   427     091E                     OSCTUNE         equ	2334	;# 
   428     091F                     OSCFRQ          equ	2335	;# 
   429     0E0F                     PPSLOCK         equ	3599	;# 
   430     0E10                     INTPPS          equ	3600	;# 
   431     0E11                     T0CKIPPS        equ	3601	;# 
   432     0E12                     T1CKIPPS        equ	3602	;# 
   433     0E13                     T1GPPS          equ	3603	;# 
   434     0E14                     CCP1PPS         equ	3604	;# 
   435     0E15                     CCP2PPS         equ	3605	;# 
   436     0E16                     CCP3PPS         equ	3606	;# 
   437     0E17                     CCP4PPS         equ	3607	;# 
   438     0E18                     CWG1PPS         equ	3608	;# 
   439     0E19                     CWG2PPS         equ	3609	;# 
   440     0E1A                     MDCIN1PPS       equ	3610	;# 
   441     0E1B                     MDCIN2PPS       equ	3611	;# 
   442     0E1C                     MDMINPPS        equ	3612	;# 
   443     0E1D                     SSP2CLKPPS      equ	3613	;# 
   444     0E1E                     SSP2DATPPS      equ	3614	;# 
   445     0E1F                     SSP2SSPPS       equ	3615	;# 
   446     0E20                     SSP1CLKPPS      equ	3616	;# 
   447     0E21                     SSP1DATPPS      equ	3617	;# 
   448     0E22                     SSP1SSPPS       equ	3618	;# 
   449     0E24                     RXPPS           equ	3620	;# 
   450     0E25                     TXPPS           equ	3621	;# 
   451     0E28                     CLCIN0PPS       equ	3624	;# 
   452     0E29                     CLCIN1PPS       equ	3625	;# 
   453     0E2A                     CLCIN2PPS       equ	3626	;# 
   454     0E2B                     CLCIN3PPS       equ	3627	;# 
   455     0E2C                     T3CKIPPS        equ	3628	;# 
   456     0E2D                     T3GPPS          equ	3629	;# 
   457     0E2E                     T5CKIPPS        equ	3630	;# 
   458     0E2F                     T5GPPS          equ	3631	;# 
   459     0E90                     RA0PPS          equ	3728	;# 
   460     0E91                     RA1PPS          equ	3729	;# 
   461     0E92                     RA2PPS          equ	3730	;# 
   462     0E94                     RA4PPS          equ	3732	;# 
   463     0E95                     RA5PPS          equ	3733	;# 
   464     0E9C                     RB4PPS          equ	3740	;# 
   465     0E9D                     RB5PPS          equ	3741	;# 
   466     0E9E                     RB6PPS          equ	3742	;# 
   467     0E9F                     RB7PPS          equ	3743	;# 
   468     0EA0                     RC0PPS          equ	3744	;# 
   469     0EA1                     RC1PPS          equ	3745	;# 
   470     0EA2                     RC2PPS          equ	3746	;# 
   471     0EA3                     RC3PPS          equ	3747	;# 
   472     0EA4                     RC4PPS          equ	3748	;# 
   473     0EA5                     RC5PPS          equ	3749	;# 
   474     0EA6                     RC6PPS          equ	3750	;# 
   475     0EA7                     RC7PPS          equ	3751	;# 
   476     0F0F                     CLCDATA         equ	3855	;# 
   477     0F10                     CLC1CON         equ	3856	;# 
   478     0F11                     CLC1POL         equ	3857	;# 
   479     0F12                     CLC1SEL0        equ	3858	;# 
   480     0F13                     CLC1SEL1        equ	3859	;# 
   481     0F14                     CLC1SEL2        equ	3860	;# 
   482     0F15                     CLC1SEL3        equ	3861	;# 
   483     0F16                     CLC1GLS0        equ	3862	;# 
   484     0F17                     CLC1GLS1        equ	3863	;# 
   485     0F18                     CLC1GLS2        equ	3864	;# 
   486     0F19                     CLC1GLS3        equ	3865	;# 
   487     0F1A                     CLC2CON         equ	3866	;# 
   488     0F1B                     CLC2POL         equ	3867	;# 
   489     0F1C                     CLC2SEL0        equ	3868	;# 
   490     0F1D                     CLC2SEL1        equ	3869	;# 
   491     0F1E                     CLC2SEL2        equ	3870	;# 
   492     0F1F                     CLC2SEL3        equ	3871	;# 
   493     0F20                     CLC2GLS0        equ	3872	;# 
   494     0F21                     CLC2GLS1        equ	3873	;# 
   495     0F22                     CLC2GLS2        equ	3874	;# 
   496     0F23                     CLC2GLS3        equ	3875	;# 
   497     0F24                     CLC3CON         equ	3876	;# 
   498     0F25                     CLC3POL         equ	3877	;# 
   499     0F26                     CLC3SEL0        equ	3878	;# 
   500     0F27                     CLC3SEL1        equ	3879	;# 
   501     0F28                     CLC3SEL2        equ	3880	;# 
   502     0F29                     CLC3SEL3        equ	3881	;# 
   503     0F2A                     CLC3GLS0        equ	3882	;# 
   504     0F2B                     CLC3GLS1        equ	3883	;# 
   505     0F2C                     CLC3GLS2        equ	3884	;# 
   506     0F2D                     CLC3GLS3        equ	3885	;# 
   507     0F2E                     CLC4CON         equ	3886	;# 
   508     0F2F                     CLC4POL         equ	3887	;# 
   509     0F30                     CLC4SEL0        equ	3888	;# 
   510     0F31                     CLC4SEL1        equ	3889	;# 
   511     0F32                     CLC4SEL2        equ	3890	;# 
   512     0F33                     CLC4SEL3        equ	3891	;# 
   513     0F34                     CLC4GLS0        equ	3892	;# 
   514     0F35                     CLC4GLS1        equ	3893	;# 
   515     0F36                     CLC4GLS2        equ	3894	;# 
   516     0F37                     CLC4GLS3        equ	3895	;# 
   517     0FE4                     STATUS_SHAD     equ	4068	;# 
   518     0FE5                     WREG_SHAD       equ	4069	;# 
   519     0FE6                     BSR_SHAD        equ	4070	;# 
   520     0FE7                     PCLATH_SHAD     equ	4071	;# 
   521     0FE8                     FSR0L_SHAD      equ	4072	;# 
   522     0FE9                     FSR0H_SHAD      equ	4073	;# 
   523     0FEA                     FSR1L_SHAD      equ	4074	;# 
   524     0FEB                     FSR1H_SHAD      equ	4075	;# 
   525     0FED                     STKPTR          equ	4077	;# 
   526     0FEE                     TOSL            equ	4078	;# 
   527     0FEF                     TOSH            equ	4079	;# 
   528     0000                     INDF0           equ	0	;# 
   529     0001                     INDF1           equ	1	;# 
   530     0002                     PCL             equ	2	;# 
   531     0003                     STATUS          equ	3	;# 
   532     0004                     FSR0L           equ	4	;# 
   533     0005                     FSR0H           equ	5	;# 
   534     0006                     FSR1L           equ	6	;# 
   535     0007                     FSR1H           equ	7	;# 
   536     0008                     BSR             equ	8	;# 
   537     0009                     WREG            equ	9	;# 
   538     000A                     PCLATH          equ	10	;# 
   539     000B                     INTCON          equ	11	;# 
   540     000C                     PORTA           equ	12	;# 
   541     000D                     PORTB           equ	13	;# 
   542     000E                     PORTC           equ	14	;# 
   543     0010                     PIR0            equ	16	;# 
   544     0011                     PIR1            equ	17	;# 
   545     0012                     PIR2            equ	18	;# 
   546     0013                     PIR3            equ	19	;# 
   547     0014                     PIR4            equ	20	;# 
   548     0015                     TMR0L           equ	21	;# 
   549     0015                     TMR0            equ	21	;# 
   550     0016                     TMR0H           equ	22	;# 
   551     0016                     PR0             equ	22	;# 
   552     0017                     T0CON0          equ	23	;# 
   553     0018                     T0CON1          equ	24	;# 
   554     0019                     TMR1            equ	25	;# 
   555     0019                     TMR1L           equ	25	;# 
   556     001A                     TMR1H           equ	26	;# 
   557     001B                     T1CON           equ	27	;# 
   558     001C                     T1GCON          equ	28	;# 
   559     001D                     TMR2            equ	29	;# 
   560     001E                     PR2             equ	30	;# 
   561     001F                     T2CON           equ	31	;# 
   562     008C                     TRISA           equ	140	;# 
   563     008D                     TRISB           equ	141	;# 
   564     008E                     TRISC           equ	142	;# 
   565     0090                     PIE0            equ	144	;# 
   566     0091                     PIE1            equ	145	;# 
   567     0092                     PIE2            equ	146	;# 
   568     0093                     PIE3            equ	147	;# 
   569     0094                     PIE4            equ	148	;# 
   570     0097                     WDTCON          equ	151	;# 
   571     009B                     ADRES           equ	155	;# 
   572     009B                     ADRESL          equ	155	;# 
   573     009C                     ADRESH          equ	156	;# 
   574     009D                     ADCON0          equ	157	;# 
   575     009E                     ADCON1          equ	158	;# 
   576     009F                     ADACT           equ	159	;# 
   577     010C                     LATA            equ	268	;# 
   578     010D                     LATB            equ	269	;# 
   579     010E                     LATC            equ	270	;# 
   580     0111                     CM1CON0         equ	273	;# 
   581     0112                     CM1CON1         equ	274	;# 
   582     0113                     CM2CON0         equ	275	;# 
   583     0114                     CM2CON1         equ	276	;# 
   584     0115                     CMOUT           equ	277	;# 
   585     0116                     BORCON          equ	278	;# 
   586     0117                     FVRCON          equ	279	;# 
   587     0118                     DACCON0         equ	280	;# 
   588     0119                     DACCON1         equ	281	;# 
   589     018C                     ANSELA          equ	396	;# 
   590     018D                     ANSELB          equ	397	;# 
   591     018E                     ANSELC          equ	398	;# 
   592     0197                     VREGCON         equ	407	;# 
   593     0199                     RC1REG          equ	409	;# 
   594     0199                     RCREG           equ	409	;# 
   595     0199                     RCREG1          equ	409	;# 
   596     019A                     TX1REG          equ	410	;# 
   597     019A                     TXREG1          equ	410	;# 
   598     019A                     TXREG           equ	410	;# 
   599     019B                     SP1BRG          equ	411	;# 
   600     019B                     SPBRG           equ	411	;# 
   601     019B                     SP1BRGL         equ	411	;# 
   602     019B                     SPBRG1          equ	411	;# 
   603     019B                     SPBRGL          equ	411	;# 
   604     019C                     SP1BRGH         equ	412	;# 
   605     019C                     SPBRGH          equ	412	;# 
   606     019C                     SPBRGH1         equ	412	;# 
   607     019D                     RC1STA          equ	413	;# 
   608     019D                     RCSTA1          equ	413	;# 
   609     019D                     RCSTA           equ	413	;# 
   610     019E                     TX1STA          equ	414	;# 
   611     019E                     TXSTA1          equ	414	;# 
   612     019E                     TXSTA           equ	414	;# 
   613     019F                     BAUD1CON        equ	415	;# 
   614     019F                     BAUDCON1        equ	415	;# 
   615     019F                     BAUDCTL1        equ	415	;# 
   616     019F                     BAUDCON         equ	415	;# 
   617     019F                     BAUDCTL         equ	415	;# 
   618     020C                     WPUA            equ	524	;# 
   619     020D                     WPUB            equ	525	;# 
   620     020E                     WPUC            equ	526	;# 
   621     0211                     SSP1BUF         equ	529	;# 
   622     0211                     SSPBUF          equ	529	;# 
   623     0212                     SSP1ADD         equ	530	;# 
   624     0212                     SSPADD          equ	530	;# 
   625     0213                     SSP1MSK         equ	531	;# 
   626     0213                     SSPMSK          equ	531	;# 
   627     0214                     SSP1STAT        equ	532	;# 
   628     0214                     SSPSTAT         equ	532	;# 
   629     0215                     SSP1CON1        equ	533	;# 
   630     0215                     SSPCON          equ	533	;# 
   631     0215                     SSPCON1         equ	533	;# 
   632     0215                     SSP1CON         equ	533	;# 
   633     0216                     SSP1CON2        equ	534	;# 
   634     0216                     SSPCON2         equ	534	;# 
   635     0217                     SSP1CON3        equ	535	;# 
   636     0217                     SSPCON3         equ	535	;# 
   637     0219                     SSP2BUF         equ	537	;# 
   638     021A                     SSP2ADD         equ	538	;# 
   639     021B                     SSP2MSK         equ	539	;# 
   640     021C                     SSP2STAT        equ	540	;# 
   641     021D                     SSP2CON1        equ	541	;# 
   642     021D                     SSP2CON         equ	541	;# 
   643     021E                     SSP2CON2        equ	542	;# 
   644     021F                     SSP2CON3        equ	543	;# 
   645     028C                     ODCONA          equ	652	;# 
   646     028D                     ODCONB          equ	653	;# 
   647     028E                     ODCONC          equ	654	;# 
   648     0291                     CCPR1           equ	657	;# 
   649     0291                     CCPR1L          equ	657	;# 
   650     0292                     CCPR1H          equ	658	;# 
   651     0293                     CCP1CON         equ	659	;# 
   652     0294                     CCP1CAP         equ	660	;# 
   653     0295                     CCPR2           equ	661	;# 
   654     0295                     CCPR2L          equ	661	;# 
   655     0296                     CCPR2H          equ	662	;# 
   656     0297                     CCP2CON         equ	663	;# 
   657     0298                     CCP2CAP         equ	664	;# 
   658     029F                     CCPTMRS         equ	671	;# 
   659     030C                     SLRCONA         equ	780	;# 
   660     030D                     SLRCONB         equ	781	;# 
   661     030E                     SLRCONC         equ	782	;# 
   662     0311                     CCPR3           equ	785	;# 
   663     0311                     CCPR3L          equ	785	;# 
   664     0312                     CCPR3H          equ	786	;# 
   665     0313                     CCP3CON         equ	787	;# 
   666     0314                     CCP3CAP         equ	788	;# 
   667     0315                     CCPR4           equ	789	;# 
   668     0315                     CCPR4L          equ	789	;# 
   669     0316                     CCPR4H          equ	790	;# 
   670     0317                     CCP4CON         equ	791	;# 
   671     0318                     CCP4CAP         equ	792	;# 
   672     038C                     INLVLA          equ	908	;# 
   673     038D                     INLVLB          equ	909	;# 
   674     038E                     INLVLC          equ	910	;# 
   675     0391                     IOCAP           equ	913	;# 
   676     0392                     IOCAN           equ	914	;# 
   677     0393                     IOCAF           equ	915	;# 
   678     0394                     IOCBP           equ	916	;# 
   679     0395                     IOCBN           equ	917	;# 
   680     0396                     IOCBF           equ	918	;# 
   681     0397                     IOCCP           equ	919	;# 
   682     0398                     IOCCN           equ	920	;# 
   683     0399                     IOCCF           equ	921	;# 
   684     039A                     CLKRCON         equ	922	;# 
   685     039C                     MDCON           equ	924	;# 
   686     039D                     MDSRC           equ	925	;# 
   687     039E                     MDCARH          equ	926	;# 
   688     039F                     MDCARL          equ	927	;# 
   689     0411                     TMR3            equ	1041	;# 
   690     0411                     TMR3L           equ	1041	;# 
   691     0412                     TMR3H           equ	1042	;# 
   692     0413                     T3CON           equ	1043	;# 
   693     0414                     T3GCON          equ	1044	;# 
   694     0415                     TMR4            equ	1045	;# 
   695     0416                     PR4             equ	1046	;# 
   696     0417                     T4CON           equ	1047	;# 
   697     0418                     TMR5            equ	1048	;# 
   698     0418                     TMR5L           equ	1048	;# 
   699     0419                     TMR5H           equ	1049	;# 
   700     041A                     T5CON           equ	1050	;# 
   701     041B                     T5GCON          equ	1051	;# 
   702     041C                     TMR6            equ	1052	;# 
   703     041D                     PR6             equ	1053	;# 
   704     041E                     T6CON           equ	1054	;# 
   705     041F                     CCDCON          equ	1055	;# 
   706     0498                     NCO1ACC         equ	1176	;# 
   707     0498                     NCO1ACCL        equ	1176	;# 
   708     0499                     NCO1ACCH        equ	1177	;# 
   709     049A                     NCO1ACCU        equ	1178	;# 
   710     049B                     NCO1INC         equ	1179	;# 
   711     049B                     NCO1INCL        equ	1179	;# 
   712     049C                     NCO1INCH        equ	1180	;# 
   713     049D                     NCO1INCU        equ	1181	;# 
   714     049E                     NCO1CON         equ	1182	;# 
   715     049F                     NCO1CLK         equ	1183	;# 
   716     0617                     PWM5DCL         equ	1559	;# 
   717     0618                     PWM5DCH         equ	1560	;# 
   718     0619                     PWM5CON         equ	1561	;# 
   719     0619                     PWM5CON0        equ	1561	;# 
   720     061A                     PWM6DCL         equ	1562	;# 
   721     061B                     PWM6DCH         equ	1563	;# 
   722     061C                     PWM6CON         equ	1564	;# 
   723     061C                     PWM6CON0        equ	1564	;# 
   724     061F                     PWMTMRS         equ	1567	;# 
   725     0691                     CWG1CLKCON      equ	1681	;# 
   726     0692                     CWG1DAT         equ	1682	;# 
   727     0693                     CWG1DBR         equ	1683	;# 
   728     0694                     CWG1DBF         equ	1684	;# 
   729     0695                     CWG1CON0        equ	1685	;# 
   730     0696                     CWG1CON1        equ	1686	;# 
   731     0697                     CWG1AS0         equ	1687	;# 
   732     0698                     CWG1AS1         equ	1688	;# 
   733     0699                     CWG1STR         equ	1689	;# 
   734     0711                     CWG2CLKCON      equ	1809	;# 
   735     0712                     CWG2DAT         equ	1810	;# 
   736     0713                     CWG2DBR         equ	1811	;# 
   737     0714                     CWG2DBF         equ	1812	;# 
   738     0715                     CWG2CON0        equ	1813	;# 
   739     0716                     CWG2CON1        equ	1814	;# 
   740     0717                     CWG2AS0         equ	1815	;# 
   741     0718                     CWG2AS1         equ	1816	;# 
   742     0719                     CWG2STR         equ	1817	;# 
   743     0891                     NVMADR          equ	2193	;# 
   744     0891                     EEADR           equ	2193	;# 
   745     0891                     PMADR           equ	2193	;# 
   746     0891                     NVMADRL         equ	2193	;# 
   747     0891                     EEADRL          equ	2193	;# 
   748     0891                     PMADRL          equ	2193	;# 
   749     0892                     NVMADRH         equ	2194	;# 
   750     0892                     EEADRH          equ	2194	;# 
   751     0892                     PMADRH          equ	2194	;# 
   752     0893                     NVMDAT          equ	2195	;# 
   753     0893                     EEDAT           equ	2195	;# 
   754     0893                     PMDAT           equ	2195	;# 
   755     0893                     NVMDATL         equ	2195	;# 
   756     0893                     EEDATL          equ	2195	;# 
   757     0893                     PMDATL          equ	2195	;# 
   758     0894                     NVMDATH         equ	2196	;# 
   759     0894                     EEDATH          equ	2196	;# 
   760     0894                     PMDATH          equ	2196	;# 
   761     0895                     NVMCON1         equ	2197	;# 
   762     0895                     EECON1          equ	2197	;# 
   763     0895                     PMCON1          equ	2197	;# 
   764     0896                     NVMCON2         equ	2198	;# 
   765     0896                     EECON2          equ	2198	;# 
   766     0896                     PMCON2          equ	2198	;# 
   767     089B                     PCON0           equ	2203	;# 
   768     0911                     PMD0            equ	2321	;# 
   769     0912                     PMD1            equ	2322	;# 
   770     0913                     PMD2            equ	2323	;# 
   771     0914                     PMD3            equ	2324	;# 
   772     0915                     PMD4            equ	2325	;# 
   773     0916                     PMD5            equ	2326	;# 
   774     0918                     CPUDOZE         equ	2328	;# 
   775     0919                     OSCCON1         equ	2329	;# 
   776     091A                     OSCCON2         equ	2330	;# 
   777     091B                     OSCCON3         equ	2331	;# 
   778     091C                     OSCSTAT1        equ	2332	;# 
   779     091D                     OSCEN           equ	2333	;# 
   780     091E                     OSCTUNE         equ	2334	;# 
   781     091F                     OSCFRQ          equ	2335	;# 
   782     0E0F                     PPSLOCK         equ	3599	;# 
   783     0E10                     INTPPS          equ	3600	;# 
   784     0E11                     T0CKIPPS        equ	3601	;# 
   785     0E12                     T1CKIPPS        equ	3602	;# 
   786     0E13                     T1GPPS          equ	3603	;# 
   787     0E14                     CCP1PPS         equ	3604	;# 
   788     0E15                     CCP2PPS         equ	3605	;# 
   789     0E16                     CCP3PPS         equ	3606	;# 
   790     0E17                     CCP4PPS         equ	3607	;# 
   791     0E18                     CWG1PPS         equ	3608	;# 
   792     0E19                     CWG2PPS         equ	3609	;# 
   793     0E1A                     MDCIN1PPS       equ	3610	;# 
   794     0E1B                     MDCIN2PPS       equ	3611	;# 
   795     0E1C                     MDMINPPS        equ	3612	;# 
   796     0E1D                     SSP2CLKPPS      equ	3613	;# 
   797     0E1E                     SSP2DATPPS      equ	3614	;# 
   798     0E1F                     SSP2SSPPS       equ	3615	;# 
   799     0E20                     SSP1CLKPPS      equ	3616	;# 
   800     0E21                     SSP1DATPPS      equ	3617	;# 
   801     0E22                     SSP1SSPPS       equ	3618	;# 
   802     0E24                     RXPPS           equ	3620	;# 
   803     0E25                     TXPPS           equ	3621	;# 
   804     0E28                     CLCIN0PPS       equ	3624	;# 
   805     0E29                     CLCIN1PPS       equ	3625	;# 
   806     0E2A                     CLCIN2PPS       equ	3626	;# 
   807     0E2B                     CLCIN3PPS       equ	3627	;# 
   808     0E2C                     T3CKIPPS        equ	3628	;# 
   809     0E2D                     T3GPPS          equ	3629	;# 
   810     0E2E                     T5CKIPPS        equ	3630	;# 
   811     0E2F                     T5GPPS          equ	3631	;# 
   812     0E90                     RA0PPS          equ	3728	;# 
   813     0E91                     RA1PPS          equ	3729	;# 
   814     0E92                     RA2PPS          equ	3730	;# 
   815     0E94                     RA4PPS          equ	3732	;# 
   816     0E95                     RA5PPS          equ	3733	;# 
   817     0E9C                     RB4PPS          equ	3740	;# 
   818     0E9D                     RB5PPS          equ	3741	;# 
   819     0E9E                     RB6PPS          equ	3742	;# 
   820     0E9F                     RB7PPS          equ	3743	;# 
   821     0EA0                     RC0PPS          equ	3744	;# 
   822     0EA1                     RC1PPS          equ	3745	;# 
   823     0EA2                     RC2PPS          equ	3746	;# 
   824     0EA3                     RC3PPS          equ	3747	;# 
   825     0EA4                     RC4PPS          equ	3748	;# 
   826     0EA5                     RC5PPS          equ	3749	;# 
   827     0EA6                     RC6PPS          equ	3750	;# 
   828     0EA7                     RC7PPS          equ	3751	;# 
   829     0F0F                     CLCDATA         equ	3855	;# 
   830     0F10                     CLC1CON         equ	3856	;# 
   831     0F11                     CLC1POL         equ	3857	;# 
   832     0F12                     CLC1SEL0        equ	3858	;# 
   833     0F13                     CLC1SEL1        equ	3859	;# 
   834     0F14                     CLC1SEL2        equ	3860	;# 
   835     0F15                     CLC1SEL3        equ	3861	;# 
   836     0F16                     CLC1GLS0        equ	3862	;# 
   837     0F17                     CLC1GLS1        equ	3863	;# 
   838     0F18                     CLC1GLS2        equ	3864	;# 
   839     0F19                     CLC1GLS3        equ	3865	;# 
   840     0F1A                     CLC2CON         equ	3866	;# 
   841     0F1B                     CLC2POL         equ	3867	;# 
   842     0F1C                     CLC2SEL0        equ	3868	;# 
   843     0F1D                     CLC2SEL1        equ	3869	;# 
   844     0F1E                     CLC2SEL2        equ	3870	;# 
   845     0F1F                     CLC2SEL3        equ	3871	;# 
   846     0F20                     CLC2GLS0        equ	3872	;# 
   847     0F21                     CLC2GLS1        equ	3873	;# 
   848     0F22                     CLC2GLS2        equ	3874	;# 
   849     0F23                     CLC2GLS3        equ	3875	;# 
   850     0F24                     CLC3CON         equ	3876	;# 
   851     0F25                     CLC3POL         equ	3877	;# 
   852     0F26                     CLC3SEL0        equ	3878	;# 
   853     0F27                     CLC3SEL1        equ	3879	;# 
   854     0F28                     CLC3SEL2        equ	3880	;# 
   855     0F29                     CLC3SEL3        equ	3881	;# 
   856     0F2A                     CLC3GLS0        equ	3882	;# 
   857     0F2B                     CLC3GLS1        equ	3883	;# 
   858     0F2C                     CLC3GLS2        equ	3884	;# 
   859     0F2D                     CLC3GLS3        equ	3885	;# 
   860     0F2E                     CLC4CON         equ	3886	;# 
   861     0F2F                     CLC4POL         equ	3887	;# 
   862     0F30                     CLC4SEL0        equ	3888	;# 
   863     0F31                     CLC4SEL1        equ	3889	;# 
   864     0F32                     CLC4SEL2        equ	3890	;# 
   865     0F33                     CLC4SEL3        equ	3891	;# 
   866     0F34                     CLC4GLS0        equ	3892	;# 
   867     0F35                     CLC4GLS1        equ	3893	;# 
   868     0F36                     CLC4GLS2        equ	3894	;# 
   869     0F37                     CLC4GLS3        equ	3895	;# 
   870     0FE4                     STATUS_SHAD     equ	4068	;# 
   871     0FE5                     WREG_SHAD       equ	4069	;# 
   872     0FE6                     BSR_SHAD        equ	4070	;# 
   873     0FE7                     PCLATH_SHAD     equ	4071	;# 
   874     0FE8                     FSR0L_SHAD      equ	4072	;# 
   875     0FE9                     FSR0H_SHAD      equ	4073	;# 
   876     0FEA                     FSR1L_SHAD      equ	4074	;# 
   877     0FEB                     FSR1H_SHAD      equ	4075	;# 
   878     0FED                     STKPTR          equ	4077	;# 
   879     0FEE                     TOSL            equ	4078	;# 
   880     0FEF                     TOSH            equ	4079	;# 
   881     0000                     INDF0           equ	0	;# 
   882     0001                     INDF1           equ	1	;# 
   883     0002                     PCL             equ	2	;# 
   884     0003                     STATUS          equ	3	;# 
   885     0004                     FSR0L           equ	4	;# 
   886     0005                     FSR0H           equ	5	;# 
   887     0006                     FSR1L           equ	6	;# 
   888     0007                     FSR1H           equ	7	;# 
   889     0008                     BSR             equ	8	;# 
   890     0009                     WREG            equ	9	;# 
   891     000A                     PCLATH          equ	10	;# 
   892     000B                     INTCON          equ	11	;# 
   893     000C                     PORTA           equ	12	;# 
   894     000D                     PORTB           equ	13	;# 
   895     000E                     PORTC           equ	14	;# 
   896     0010                     PIR0            equ	16	;# 
   897     0011                     PIR1            equ	17	;# 
   898     0012                     PIR2            equ	18	;# 
   899     0013                     PIR3            equ	19	;# 
   900     0014                     PIR4            equ	20	;# 
   901     0015                     TMR0L           equ	21	;# 
   902     0015                     TMR0            equ	21	;# 
   903     0016                     TMR0H           equ	22	;# 
   904     0016                     PR0             equ	22	;# 
   905     0017                     T0CON0          equ	23	;# 
   906     0018                     T0CON1          equ	24	;# 
   907     0019                     TMR1            equ	25	;# 
   908     0019                     TMR1L           equ	25	;# 
   909     001A                     TMR1H           equ	26	;# 
   910     001B                     T1CON           equ	27	;# 
   911     001C                     T1GCON          equ	28	;# 
   912     001D                     TMR2            equ	29	;# 
   913     001E                     PR2             equ	30	;# 
   914     001F                     T2CON           equ	31	;# 
   915     008C                     TRISA           equ	140	;# 
   916     008D                     TRISB           equ	141	;# 
   917     008E                     TRISC           equ	142	;# 
   918     0090                     PIE0            equ	144	;# 
   919     0091                     PIE1            equ	145	;# 
   920     0092                     PIE2            equ	146	;# 
   921     0093                     PIE3            equ	147	;# 
   922     0094                     PIE4            equ	148	;# 
   923     0097                     WDTCON          equ	151	;# 
   924     009B                     ADRES           equ	155	;# 
   925     009B                     ADRESL          equ	155	;# 
   926     009C                     ADRESH          equ	156	;# 
   927     009D                     ADCON0          equ	157	;# 
   928     009E                     ADCON1          equ	158	;# 
   929     009F                     ADACT           equ	159	;# 
   930     010C                     LATA            equ	268	;# 
   931     010D                     LATB            equ	269	;# 
   932     010E                     LATC            equ	270	;# 
   933     0111                     CM1CON0         equ	273	;# 
   934     0112                     CM1CON1         equ	274	;# 
   935     0113                     CM2CON0         equ	275	;# 
   936     0114                     CM2CON1         equ	276	;# 
   937     0115                     CMOUT           equ	277	;# 
   938     0116                     BORCON          equ	278	;# 
   939     0117                     FVRCON          equ	279	;# 
   940     0118                     DACCON0         equ	280	;# 
   941     0119                     DACCON1         equ	281	;# 
   942     018C                     ANSELA          equ	396	;# 
   943     018D                     ANSELB          equ	397	;# 
   944     018E                     ANSELC          equ	398	;# 
   945     0197                     VREGCON         equ	407	;# 
   946     0199                     RC1REG          equ	409	;# 
   947     0199                     RCREG           equ	409	;# 
   948     0199                     RCREG1          equ	409	;# 
   949     019A                     TX1REG          equ	410	;# 
   950     019A                     TXREG1          equ	410	;# 
   951     019A                     TXREG           equ	410	;# 
   952     019B                     SP1BRG          equ	411	;# 
   953     019B                     SPBRG           equ	411	;# 
   954     019B                     SP1BRGL         equ	411	;# 
   955     019B                     SPBRG1          equ	411	;# 
   956     019B                     SPBRGL          equ	411	;# 
   957     019C                     SP1BRGH         equ	412	;# 
   958     019C                     SPBRGH          equ	412	;# 
   959     019C                     SPBRGH1         equ	412	;# 
   960     019D                     RC1STA          equ	413	;# 
   961     019D                     RCSTA1          equ	413	;# 
   962     019D                     RCSTA           equ	413	;# 
   963     019E                     TX1STA          equ	414	;# 
   964     019E                     TXSTA1          equ	414	;# 
   965     019E                     TXSTA           equ	414	;# 
   966     019F                     BAUD1CON        equ	415	;# 
   967     019F                     BAUDCON1        equ	415	;# 
   968     019F                     BAUDCTL1        equ	415	;# 
   969     019F                     BAUDCON         equ	415	;# 
   970     019F                     BAUDCTL         equ	415	;# 
   971     020C                     WPUA            equ	524	;# 
   972     020D                     WPUB            equ	525	;# 
   973     020E                     WPUC            equ	526	;# 
   974     0211                     SSP1BUF         equ	529	;# 
   975     0211                     SSPBUF          equ	529	;# 
   976     0212                     SSP1ADD         equ	530	;# 
   977     0212                     SSPADD          equ	530	;# 
   978     0213                     SSP1MSK         equ	531	;# 
   979     0213                     SSPMSK          equ	531	;# 
   980     0214                     SSP1STAT        equ	532	;# 
   981     0214                     SSPSTAT         equ	532	;# 
   982     0215                     SSP1CON1        equ	533	;# 
   983     0215                     SSPCON          equ	533	;# 
   984     0215                     SSPCON1         equ	533	;# 
   985     0215                     SSP1CON         equ	533	;# 
   986     0216                     SSP1CON2        equ	534	;# 
   987     0216                     SSPCON2         equ	534	;# 
   988     0217                     SSP1CON3        equ	535	;# 
   989     0217                     SSPCON3         equ	535	;# 
   990     0219                     SSP2BUF         equ	537	;# 
   991     021A                     SSP2ADD         equ	538	;# 
   992     021B                     SSP2MSK         equ	539	;# 
   993     021C                     SSP2STAT        equ	540	;# 
   994     021D                     SSP2CON1        equ	541	;# 
   995     021D                     SSP2CON         equ	541	;# 
   996     021E                     SSP2CON2        equ	542	;# 
   997     021F                     SSP2CON3        equ	543	;# 
   998     028C                     ODCONA          equ	652	;# 
   999     028D                     ODCONB          equ	653	;# 
  1000     028E                     ODCONC          equ	654	;# 
  1001     0291                     CCPR1           equ	657	;# 
  1002     0291                     CCPR1L          equ	657	;# 
  1003     0292                     CCPR1H          equ	658	;# 
  1004     0293                     CCP1CON         equ	659	;# 
  1005     0294                     CCP1CAP         equ	660	;# 
  1006     0295                     CCPR2           equ	661	;# 
  1007     0295                     CCPR2L          equ	661	;# 
  1008     0296                     CCPR2H          equ	662	;# 
  1009     0297                     CCP2CON         equ	663	;# 
  1010     0298                     CCP2CAP         equ	664	;# 
  1011     029F                     CCPTMRS         equ	671	;# 
  1012     030C                     SLRCONA         equ	780	;# 
  1013     030D                     SLRCONB         equ	781	;# 
  1014     030E                     SLRCONC         equ	782	;# 
  1015     0311                     CCPR3           equ	785	;# 
  1016     0311                     CCPR3L          equ	785	;# 
  1017     0312                     CCPR3H          equ	786	;# 
  1018     0313                     CCP3CON         equ	787	;# 
  1019     0314                     CCP3CAP         equ	788	;# 
  1020     0315                     CCPR4           equ	789	;# 
  1021     0315                     CCPR4L          equ	789	;# 
  1022     0316                     CCPR4H          equ	790	;# 
  1023     0317                     CCP4CON         equ	791	;# 
  1024     0318                     CCP4CAP         equ	792	;# 
  1025     038C                     INLVLA          equ	908	;# 
  1026     038D                     INLVLB          equ	909	;# 
  1027     038E                     INLVLC          equ	910	;# 
  1028     0391                     IOCAP           equ	913	;# 
  1029     0392                     IOCAN           equ	914	;# 
  1030     0393                     IOCAF           equ	915	;# 
  1031     0394                     IOCBP           equ	916	;# 
  1032     0395                     IOCBN           equ	917	;# 
  1033     0396                     IOCBF           equ	918	;# 
  1034     0397                     IOCCP           equ	919	;# 
  1035     0398                     IOCCN           equ	920	;# 
  1036     0399                     IOCCF           equ	921	;# 
  1037     039A                     CLKRCON         equ	922	;# 
  1038     039C                     MDCON           equ	924	;# 
  1039     039D                     MDSRC           equ	925	;# 
  1040     039E                     MDCARH          equ	926	;# 
  1041     039F                     MDCARL          equ	927	;# 
  1042     0411                     TMR3            equ	1041	;# 
  1043     0411                     TMR3L           equ	1041	;# 
  1044     0412                     TMR3H           equ	1042	;# 
  1045     0413                     T3CON           equ	1043	;# 
  1046     0414                     T3GCON          equ	1044	;# 
  1047     0415                     TMR4            equ	1045	;# 
  1048     0416                     PR4             equ	1046	;# 
  1049     0417                     T4CON           equ	1047	;# 
  1050     0418                     TMR5            equ	1048	;# 
  1051     0418                     TMR5L           equ	1048	;# 
  1052     0419                     TMR5H           equ	1049	;# 
  1053     041A                     T5CON           equ	1050	;# 
  1054     041B                     T5GCON          equ	1051	;# 
  1055     041C                     TMR6            equ	1052	;# 
  1056     041D                     PR6             equ	1053	;# 
  1057     041E                     T6CON           equ	1054	;# 
  1058     041F                     CCDCON          equ	1055	;# 
  1059     0498                     NCO1ACC         equ	1176	;# 
  1060     0498                     NCO1ACCL        equ	1176	;# 
  1061     0499                     NCO1ACCH        equ	1177	;# 
  1062     049A                     NCO1ACCU        equ	1178	;# 
  1063     049B                     NCO1INC         equ	1179	;# 
  1064     049B                     NCO1INCL        equ	1179	;# 
  1065     049C                     NCO1INCH        equ	1180	;# 
  1066     049D                     NCO1INCU        equ	1181	;# 
  1067     049E                     NCO1CON         equ	1182	;# 
  1068     049F                     NCO1CLK         equ	1183	;# 
  1069     0617                     PWM5DCL         equ	1559	;# 
  1070     0618                     PWM5DCH         equ	1560	;# 
  1071     0619                     PWM5CON         equ	1561	;# 
  1072     0619                     PWM5CON0        equ	1561	;# 
  1073     061A                     PWM6DCL         equ	1562	;# 
  1074     061B                     PWM6DCH         equ	1563	;# 
  1075     061C                     PWM6CON         equ	1564	;# 
  1076     061C                     PWM6CON0        equ	1564	;# 
  1077     061F                     PWMTMRS         equ	1567	;# 
  1078     0691                     CWG1CLKCON      equ	1681	;# 
  1079     0692                     CWG1DAT         equ	1682	;# 
  1080     0693                     CWG1DBR         equ	1683	;# 
  1081     0694                     CWG1DBF         equ	1684	;# 
  1082     0695                     CWG1CON0        equ	1685	;# 
  1083     0696                     CWG1CON1        equ	1686	;# 
  1084     0697                     CWG1AS0         equ	1687	;# 
  1085     0698                     CWG1AS1         equ	1688	;# 
  1086     0699                     CWG1STR         equ	1689	;# 
  1087     0711                     CWG2CLKCON      equ	1809	;# 
  1088     0712                     CWG2DAT         equ	1810	;# 
  1089     0713                     CWG2DBR         equ	1811	;# 
  1090     0714                     CWG2DBF         equ	1812	;# 
  1091     0715                     CWG2CON0        equ	1813	;# 
  1092     0716                     CWG2CON1        equ	1814	;# 
  1093     0717                     CWG2AS0         equ	1815	;# 
  1094     0718                     CWG2AS1         equ	1816	;# 
  1095     0719                     CWG2STR         equ	1817	;# 
  1096     0891                     NVMADR          equ	2193	;# 
  1097     0891                     EEADR           equ	2193	;# 
  1098     0891                     PMADR           equ	2193	;# 
  1099     0891                     NVMADRL         equ	2193	;# 
  1100     0891                     EEADRL          equ	2193	;# 
  1101     0891                     PMADRL          equ	2193	;# 
  1102     0892                     NVMADRH         equ	2194	;# 
  1103     0892                     EEADRH          equ	2194	;# 
  1104     0892                     PMADRH          equ	2194	;# 
  1105     0893                     NVMDAT          equ	2195	;# 
  1106     0893                     EEDAT           equ	2195	;# 
  1107     0893                     PMDAT           equ	2195	;# 
  1108     0893                     NVMDATL         equ	2195	;# 
  1109     0893                     EEDATL          equ	2195	;# 
  1110     0893                     PMDATL          equ	2195	;# 
  1111     0894                     NVMDATH         equ	2196	;# 
  1112     0894                     EEDATH          equ	2196	;# 
  1113     0894                     PMDATH          equ	2196	;# 
  1114     0895                     NVMCON1         equ	2197	;# 
  1115     0895                     EECON1          equ	2197	;# 
  1116     0895                     PMCON1          equ	2197	;# 
  1117     0896                     NVMCON2         equ	2198	;# 
  1118     0896                     EECON2          equ	2198	;# 
  1119     0896                     PMCON2          equ	2198	;# 
  1120     089B                     PCON0           equ	2203	;# 
  1121     0911                     PMD0            equ	2321	;# 
  1122     0912                     PMD1            equ	2322	;# 
  1123     0913                     PMD2            equ	2323	;# 
  1124     0914                     PMD3            equ	2324	;# 
  1125     0915                     PMD4            equ	2325	;# 
  1126     0916                     PMD5            equ	2326	;# 
  1127     0918                     CPUDOZE         equ	2328	;# 
  1128     0919                     OSCCON1         equ	2329	;# 
  1129     091A                     OSCCON2         equ	2330	;# 
  1130     091B                     OSCCON3         equ	2331	;# 
  1131     091C                     OSCSTAT1        equ	2332	;# 
  1132     091D                     OSCEN           equ	2333	;# 
  1133     091E                     OSCTUNE         equ	2334	;# 
  1134     091F                     OSCFRQ          equ	2335	;# 
  1135     0E0F                     PPSLOCK         equ	3599	;# 
  1136     0E10                     INTPPS          equ	3600	;# 
  1137     0E11                     T0CKIPPS        equ	3601	;# 
  1138     0E12                     T1CKIPPS        equ	3602	;# 
  1139     0E13                     T1GPPS          equ	3603	;# 
  1140     0E14                     CCP1PPS         equ	3604	;# 
  1141     0E15                     CCP2PPS         equ	3605	;# 
  1142     0E16                     CCP3PPS         equ	3606	;# 
  1143     0E17                     CCP4PPS         equ	3607	;# 
  1144     0E18                     CWG1PPS         equ	3608	;# 
  1145     0E19                     CWG2PPS         equ	3609	;# 
  1146     0E1A                     MDCIN1PPS       equ	3610	;# 
  1147     0E1B                     MDCIN2PPS       equ	3611	;# 
  1148     0E1C                     MDMINPPS        equ	3612	;# 
  1149     0E1D                     SSP2CLKPPS      equ	3613	;# 
  1150     0E1E                     SSP2DATPPS      equ	3614	;# 
  1151     0E1F                     SSP2SSPPS       equ	3615	;# 
  1152     0E20                     SSP1CLKPPS      equ	3616	;# 
  1153     0E21                     SSP1DATPPS      equ	3617	;# 
  1154     0E22                     SSP1SSPPS       equ	3618	;# 
  1155     0E24                     RXPPS           equ	3620	;# 
  1156     0E25                     TXPPS           equ	3621	;# 
  1157     0E28                     CLCIN0PPS       equ	3624	;# 
  1158     0E29                     CLCIN1PPS       equ	3625	;# 
  1159     0E2A                     CLCIN2PPS       equ	3626	;# 
  1160     0E2B                     CLCIN3PPS       equ	3627	;# 
  1161     0E2C                     T3CKIPPS        equ	3628	;# 
  1162     0E2D                     T3GPPS          equ	3629	;# 
  1163     0E2E                     T5CKIPPS        equ	3630	;# 
  1164     0E2F                     T5GPPS          equ	3631	;# 
  1165     0E90                     RA0PPS          equ	3728	;# 
  1166     0E91                     RA1PPS          equ	3729	;# 
  1167     0E92                     RA2PPS          equ	3730	;# 
  1168     0E94                     RA4PPS          equ	3732	;# 
  1169     0E95                     RA5PPS          equ	3733	;# 
  1170     0E9C                     RB4PPS          equ	3740	;# 
  1171     0E9D                     RB5PPS          equ	3741	;# 
  1172     0E9E                     RB6PPS          equ	3742	;# 
  1173     0E9F                     RB7PPS          equ	3743	;# 
  1174     0EA0                     RC0PPS          equ	3744	;# 
  1175     0EA1                     RC1PPS          equ	3745	;# 
  1176     0EA2                     RC2PPS          equ	3746	;# 
  1177     0EA3                     RC3PPS          equ	3747	;# 
  1178     0EA4                     RC4PPS          equ	3748	;# 
  1179     0EA5                     RC5PPS          equ	3749	;# 
  1180     0EA6                     RC6PPS          equ	3750	;# 
  1181     0EA7                     RC7PPS          equ	3751	;# 
  1182     0F0F                     CLCDATA         equ	3855	;# 
  1183     0F10                     CLC1CON         equ	3856	;# 
  1184     0F11                     CLC1POL         equ	3857	;# 
  1185     0F12                     CLC1SEL0        equ	3858	;# 
  1186     0F13                     CLC1SEL1        equ	3859	;# 
  1187     0F14                     CLC1SEL2        equ	3860	;# 
  1188     0F15                     CLC1SEL3        equ	3861	;# 
  1189     0F16                     CLC1GLS0        equ	3862	;# 
  1190     0F17                     CLC1GLS1        equ	3863	;# 
  1191     0F18                     CLC1GLS2        equ	3864	;# 
  1192     0F19                     CLC1GLS3        equ	3865	;# 
  1193     0F1A                     CLC2CON         equ	3866	;# 
  1194     0F1B                     CLC2POL         equ	3867	;# 
  1195     0F1C                     CLC2SEL0        equ	3868	;# 
  1196     0F1D                     CLC2SEL1        equ	3869	;# 
  1197     0F1E                     CLC2SEL2        equ	3870	;# 
  1198     0F1F                     CLC2SEL3        equ	3871	;# 
  1199     0F20                     CLC2GLS0        equ	3872	;# 
  1200     0F21                     CLC2GLS1        equ	3873	;# 
  1201     0F22                     CLC2GLS2        equ	3874	;# 
  1202     0F23                     CLC2GLS3        equ	3875	;# 
  1203     0F24                     CLC3CON         equ	3876	;# 
  1204     0F25                     CLC3POL         equ	3877	;# 
  1205     0F26                     CLC3SEL0        equ	3878	;# 
  1206     0F27                     CLC3SEL1        equ	3879	;# 
  1207     0F28                     CLC3SEL2        equ	3880	;# 
  1208     0F29                     CLC3SEL3        equ	3881	;# 
  1209     0F2A                     CLC3GLS0        equ	3882	;# 
  1210     0F2B                     CLC3GLS1        equ	3883	;# 
  1211     0F2C                     CLC3GLS2        equ	3884	;# 
  1212     0F2D                     CLC3GLS3        equ	3885	;# 
  1213     0F2E                     CLC4CON         equ	3886	;# 
  1214     0F2F                     CLC4POL         equ	3887	;# 
  1215     0F30                     CLC4SEL0        equ	3888	;# 
  1216     0F31                     CLC4SEL1        equ	3889	;# 
  1217     0F32                     CLC4SEL2        equ	3890	;# 
  1218     0F33                     CLC4SEL3        equ	3891	;# 
  1219     0F34                     CLC4GLS0        equ	3892	;# 
  1220     0F35                     CLC4GLS1        equ	3893	;# 
  1221     0F36                     CLC4GLS2        equ	3894	;# 
  1222     0F37                     CLC4GLS3        equ	3895	;# 
  1223     0FE4                     STATUS_SHAD     equ	4068	;# 
  1224     0FE5                     WREG_SHAD       equ	4069	;# 
  1225     0FE6                     BSR_SHAD        equ	4070	;# 
  1226     0FE7                     PCLATH_SHAD     equ	4071	;# 
  1227     0FE8                     FSR0L_SHAD      equ	4072	;# 
  1228     0FE9                     FSR0H_SHAD      equ	4073	;# 
  1229     0FEA                     FSR1L_SHAD      equ	4074	;# 
  1230     0FEB                     FSR1H_SHAD      equ	4075	;# 
  1231     0FED                     STKPTR          equ	4077	;# 
  1232     0FEE                     TOSL            equ	4078	;# 
  1233     0FEF                     TOSH            equ	4079	;# 
  1234     0000                     INDF0           equ	0	;# 
  1235     0001                     INDF1           equ	1	;# 
  1236     0002                     PCL             equ	2	;# 
  1237     0003                     STATUS          equ	3	;# 
  1238     0004                     FSR0L           equ	4	;# 
  1239     0005                     FSR0H           equ	5	;# 
  1240     0006                     FSR1L           equ	6	;# 
  1241     0007                     FSR1H           equ	7	;# 
  1242     0008                     BSR             equ	8	;# 
  1243     0009                     WREG            equ	9	;# 
  1244     000A                     PCLATH          equ	10	;# 
  1245     000B                     INTCON          equ	11	;# 
  1246     000C                     PORTA           equ	12	;# 
  1247     000D                     PORTB           equ	13	;# 
  1248     000E                     PORTC           equ	14	;# 
  1249     0010                     PIR0            equ	16	;# 
  1250     0011                     PIR1            equ	17	;# 
  1251     0012                     PIR2            equ	18	;# 
  1252     0013                     PIR3            equ	19	;# 
  1253     0014                     PIR4            equ	20	;# 
  1254     0015                     TMR0L           equ	21	;# 
  1255     0015                     TMR0            equ	21	;# 
  1256     0016                     TMR0H           equ	22	;# 
  1257     0016                     PR0             equ	22	;# 
  1258     0017                     T0CON0          equ	23	;# 
  1259     0018                     T0CON1          equ	24	;# 
  1260     0019                     TMR1            equ	25	;# 
  1261     0019                     TMR1L           equ	25	;# 
  1262     001A                     TMR1H           equ	26	;# 
  1263     001B                     T1CON           equ	27	;# 
  1264     001C                     T1GCON          equ	28	;# 
  1265     001D                     TMR2            equ	29	;# 
  1266     001E                     PR2             equ	30	;# 
  1267     001F                     T2CON           equ	31	;# 
  1268     008C                     TRISA           equ	140	;# 
  1269     008D                     TRISB           equ	141	;# 
  1270     008E                     TRISC           equ	142	;# 
  1271     0090                     PIE0            equ	144	;# 
  1272     0091                     PIE1            equ	145	;# 
  1273     0092                     PIE2            equ	146	;# 
  1274     0093                     PIE3            equ	147	;# 
  1275     0094                     PIE4            equ	148	;# 
  1276     0097                     WDTCON          equ	151	;# 
  1277     009B                     ADRES           equ	155	;# 
  1278     009B                     ADRESL          equ	155	;# 
  1279     009C                     ADRESH          equ	156	;# 
  1280     009D                     ADCON0          equ	157	;# 
  1281     009E                     ADCON1          equ	158	;# 
  1282     009F                     ADACT           equ	159	;# 
  1283     010C                     LATA            equ	268	;# 
  1284     010D                     LATB            equ	269	;# 
  1285     010E                     LATC            equ	270	;# 
  1286     0111                     CM1CON0         equ	273	;# 
  1287     0112                     CM1CON1         equ	274	;# 
  1288     0113                     CM2CON0         equ	275	;# 
  1289     0114                     CM2CON1         equ	276	;# 
  1290     0115                     CMOUT           equ	277	;# 
  1291     0116                     BORCON          equ	278	;# 
  1292     0117                     FVRCON          equ	279	;# 
  1293     0118                     DACCON0         equ	280	;# 
  1294     0119                     DACCON1         equ	281	;# 
  1295     018C                     ANSELA          equ	396	;# 
  1296     018D                     ANSELB          equ	397	;# 
  1297     018E                     ANSELC          equ	398	;# 
  1298     0197                     VREGCON         equ	407	;# 
  1299     0199                     RC1REG          equ	409	;# 
  1300     0199                     RCREG           equ	409	;# 
  1301     0199                     RCREG1          equ	409	;# 
  1302     019A                     TX1REG          equ	410	;# 
  1303     019A                     TXREG1          equ	410	;# 
  1304     019A                     TXREG           equ	410	;# 
  1305     019B                     SP1BRG          equ	411	;# 
  1306     019B                     SPBRG           equ	411	;# 
  1307     019B                     SP1BRGL         equ	411	;# 
  1308     019B                     SPBRG1          equ	411	;# 
  1309     019B                     SPBRGL          equ	411	;# 
  1310     019C                     SP1BRGH         equ	412	;# 
  1311     019C                     SPBRGH          equ	412	;# 
  1312     019C                     SPBRGH1         equ	412	;# 
  1313     019D                     RC1STA          equ	413	;# 
  1314     019D                     RCSTA1          equ	413	;# 
  1315     019D                     RCSTA           equ	413	;# 
  1316     019E                     TX1STA          equ	414	;# 
  1317     019E                     TXSTA1          equ	414	;# 
  1318     019E                     TXSTA           equ	414	;# 
  1319     019F                     BAUD1CON        equ	415	;# 
  1320     019F                     BAUDCON1        equ	415	;# 
  1321     019F                     BAUDCTL1        equ	415	;# 
  1322     019F                     BAUDCON         equ	415	;# 
  1323     019F                     BAUDCTL         equ	415	;# 
  1324     020C                     WPUA            equ	524	;# 
  1325     020D                     WPUB            equ	525	;# 
  1326     020E                     WPUC            equ	526	;# 
  1327     0211                     SSP1BUF         equ	529	;# 
  1328     0211                     SSPBUF          equ	529	;# 
  1329     0212                     SSP1ADD         equ	530	;# 
  1330     0212                     SSPADD          equ	530	;# 
  1331     0213                     SSP1MSK         equ	531	;# 
  1332     0213                     SSPMSK          equ	531	;# 
  1333     0214                     SSP1STAT        equ	532	;# 
  1334     0214                     SSPSTAT         equ	532	;# 
  1335     0215                     SSP1CON1        equ	533	;# 
  1336     0215                     SSPCON          equ	533	;# 
  1337     0215                     SSPCON1         equ	533	;# 
  1338     0215                     SSP1CON         equ	533	;# 
  1339     0216                     SSP1CON2        equ	534	;# 
  1340     0216                     SSPCON2         equ	534	;# 
  1341     0217                     SSP1CON3        equ	535	;# 
  1342     0217                     SSPCON3         equ	535	;# 
  1343     0219                     SSP2BUF         equ	537	;# 
  1344     021A                     SSP2ADD         equ	538	;# 
  1345     021B                     SSP2MSK         equ	539	;# 
  1346     021C                     SSP2STAT        equ	540	;# 
  1347     021D                     SSP2CON1        equ	541	;# 
  1348     021D                     SSP2CON         equ	541	;# 
  1349     021E                     SSP2CON2        equ	542	;# 
  1350     021F                     SSP2CON3        equ	543	;# 
  1351     028C                     ODCONA          equ	652	;# 
  1352     028D                     ODCONB          equ	653	;# 
  1353     028E                     ODCONC          equ	654	;# 
  1354     0291                     CCPR1           equ	657	;# 
  1355     0291                     CCPR1L          equ	657	;# 
  1356     0292                     CCPR1H          equ	658	;# 
  1357     0293                     CCP1CON         equ	659	;# 
  1358     0294                     CCP1CAP         equ	660	;# 
  1359     0295                     CCPR2           equ	661	;# 
  1360     0295                     CCPR2L          equ	661	;# 
  1361     0296                     CCPR2H          equ	662	;# 
  1362     0297                     CCP2CON         equ	663	;# 
  1363     0298                     CCP2CAP         equ	664	;# 
  1364     029F                     CCPTMRS         equ	671	;# 
  1365     030C                     SLRCONA         equ	780	;# 
  1366     030D                     SLRCONB         equ	781	;# 
  1367     030E                     SLRCONC         equ	782	;# 
  1368     0311                     CCPR3           equ	785	;# 
  1369     0311                     CCPR3L          equ	785	;# 
  1370     0312                     CCPR3H          equ	786	;# 
  1371     0313                     CCP3CON         equ	787	;# 
  1372     0314                     CCP3CAP         equ	788	;# 
  1373     0315                     CCPR4           equ	789	;# 
  1374     0315                     CCPR4L          equ	789	;# 
  1375     0316                     CCPR4H          equ	790	;# 
  1376     0317                     CCP4CON         equ	791	;# 
  1377     0318                     CCP4CAP         equ	792	;# 
  1378     038C                     INLVLA          equ	908	;# 
  1379     038D                     INLVLB          equ	909	;# 
  1380     038E                     INLVLC          equ	910	;# 
  1381     0391                     IOCAP           equ	913	;# 
  1382     0392                     IOCAN           equ	914	;# 
  1383     0393                     IOCAF           equ	915	;# 
  1384     0394                     IOCBP           equ	916	;# 
  1385     0395                     IOCBN           equ	917	;# 
  1386     0396                     IOCBF           equ	918	;# 
  1387     0397                     IOCCP           equ	919	;# 
  1388     0398                     IOCCN           equ	920	;# 
  1389     0399                     IOCCF           equ	921	;# 
  1390     039A                     CLKRCON         equ	922	;# 
  1391     039C                     MDCON           equ	924	;# 
  1392     039D                     MDSRC           equ	925	;# 
  1393     039E                     MDCARH          equ	926	;# 
  1394     039F                     MDCARL          equ	927	;# 
  1395     0411                     TMR3            equ	1041	;# 
  1396     0411                     TMR3L           equ	1041	;# 
  1397     0412                     TMR3H           equ	1042	;# 
  1398     0413                     T3CON           equ	1043	;# 
  1399     0414                     T3GCON          equ	1044	;# 
  1400     0415                     TMR4            equ	1045	;# 
  1401     0416                     PR4             equ	1046	;# 
  1402     0417                     T4CON           equ	1047	;# 
  1403     0418                     TMR5            equ	1048	;# 
  1404     0418                     TMR5L           equ	1048	;# 
  1405     0419                     TMR5H           equ	1049	;# 
  1406     041A                     T5CON           equ	1050	;# 
  1407     041B                     T5GCON          equ	1051	;# 
  1408     041C                     TMR6            equ	1052	;# 
  1409     041D                     PR6             equ	1053	;# 
  1410     041E                     T6CON           equ	1054	;# 
  1411     041F                     CCDCON          equ	1055	;# 
  1412     0498                     NCO1ACC         equ	1176	;# 
  1413     0498                     NCO1ACCL        equ	1176	;# 
  1414     0499                     NCO1ACCH        equ	1177	;# 
  1415     049A                     NCO1ACCU        equ	1178	;# 
  1416     049B                     NCO1INC         equ	1179	;# 
  1417     049B                     NCO1INCL        equ	1179	;# 
  1418     049C                     NCO1INCH        equ	1180	;# 
  1419     049D                     NCO1INCU        equ	1181	;# 
  1420     049E                     NCO1CON         equ	1182	;# 
  1421     049F                     NCO1CLK         equ	1183	;# 
  1422     0617                     PWM5DCL         equ	1559	;# 
  1423     0618                     PWM5DCH         equ	1560	;# 
  1424     0619                     PWM5CON         equ	1561	;# 
  1425     0619                     PWM5CON0        equ	1561	;# 
  1426     061A                     PWM6DCL         equ	1562	;# 
  1427     061B                     PWM6DCH         equ	1563	;# 
  1428     061C                     PWM6CON         equ	1564	;# 
  1429     061C                     PWM6CON0        equ	1564	;# 
  1430     061F                     PWMTMRS         equ	1567	;# 
  1431     0691                     CWG1CLKCON      equ	1681	;# 
  1432     0692                     CWG1DAT         equ	1682	;# 
  1433     0693                     CWG1DBR         equ	1683	;# 
  1434     0694                     CWG1DBF         equ	1684	;# 
  1435     0695                     CWG1CON0        equ	1685	;# 
  1436     0696                     CWG1CON1        equ	1686	;# 
  1437     0697                     CWG1AS0         equ	1687	;# 
  1438     0698                     CWG1AS1         equ	1688	;# 
  1439     0699                     CWG1STR         equ	1689	;# 
  1440     0711                     CWG2CLKCON      equ	1809	;# 
  1441     0712                     CWG2DAT         equ	1810	;# 
  1442     0713                     CWG2DBR         equ	1811	;# 
  1443     0714                     CWG2DBF         equ	1812	;# 
  1444     0715                     CWG2CON0        equ	1813	;# 
  1445     0716                     CWG2CON1        equ	1814	;# 
  1446     0717                     CWG2AS0         equ	1815	;# 
  1447     0718                     CWG2AS1         equ	1816	;# 
  1448     0719                     CWG2STR         equ	1817	;# 
  1449     0891                     NVMADR          equ	2193	;# 
  1450     0891                     EEADR           equ	2193	;# 
  1451     0891                     PMADR           equ	2193	;# 
  1452     0891                     NVMADRL         equ	2193	;# 
  1453     0891                     EEADRL          equ	2193	;# 
  1454     0891                     PMADRL          equ	2193	;# 
  1455     0892                     NVMADRH         equ	2194	;# 
  1456     0892                     EEADRH          equ	2194	;# 
  1457     0892                     PMADRH          equ	2194	;# 
  1458     0893                     NVMDAT          equ	2195	;# 
  1459     0893                     EEDAT           equ	2195	;# 
  1460     0893                     PMDAT           equ	2195	;# 
  1461     0893                     NVMDATL         equ	2195	;# 
  1462     0893                     EEDATL          equ	2195	;# 
  1463     0893                     PMDATL          equ	2195	;# 
  1464     0894                     NVMDATH         equ	2196	;# 
  1465     0894                     EEDATH          equ	2196	;# 
  1466     0894                     PMDATH          equ	2196	;# 
  1467     0895                     NVMCON1         equ	2197	;# 
  1468     0895                     EECON1          equ	2197	;# 
  1469     0895                     PMCON1          equ	2197	;# 
  1470     0896                     NVMCON2         equ	2198	;# 
  1471     0896                     EECON2          equ	2198	;# 
  1472     0896                     PMCON2          equ	2198	;# 
  1473     089B                     PCON0           equ	2203	;# 
  1474     0911                     PMD0            equ	2321	;# 
  1475     0912                     PMD1            equ	2322	;# 
  1476     0913                     PMD2            equ	2323	;# 
  1477     0914                     PMD3            equ	2324	;# 
  1478     0915                     PMD4            equ	2325	;# 
  1479     0916                     PMD5            equ	2326	;# 
  1480     0918                     CPUDOZE         equ	2328	;# 
  1481     0919                     OSCCON1         equ	2329	;# 
  1482     091A                     OSCCON2         equ	2330	;# 
  1483     091B                     OSCCON3         equ	2331	;# 
  1484     091C                     OSCSTAT1        equ	2332	;# 
  1485     091D                     OSCEN           equ	2333	;# 
  1486     091E                     OSCTUNE         equ	2334	;# 
  1487     091F                     OSCFRQ          equ	2335	;# 
  1488     0E0F                     PPSLOCK         equ	3599	;# 
  1489     0E10                     INTPPS          equ	3600	;# 
  1490     0E11                     T0CKIPPS        equ	3601	;# 
  1491     0E12                     T1CKIPPS        equ	3602	;# 
  1492     0E13                     T1GPPS          equ	3603	;# 
  1493     0E14                     CCP1PPS         equ	3604	;# 
  1494     0E15                     CCP2PPS         equ	3605	;# 
  1495     0E16                     CCP3PPS         equ	3606	;# 
  1496     0E17                     CCP4PPS         equ	3607	;# 
  1497     0E18                     CWG1PPS         equ	3608	;# 
  1498     0E19                     CWG2PPS         equ	3609	;# 
  1499     0E1A                     MDCIN1PPS       equ	3610	;# 
  1500     0E1B                     MDCIN2PPS       equ	3611	;# 
  1501     0E1C                     MDMINPPS        equ	3612	;# 
  1502     0E1D                     SSP2CLKPPS      equ	3613	;# 
  1503     0E1E                     SSP2DATPPS      equ	3614	;# 
  1504     0E1F                     SSP2SSPPS       equ	3615	;# 
  1505     0E20                     SSP1CLKPPS      equ	3616	;# 
  1506     0E21                     SSP1DATPPS      equ	3617	;# 
  1507     0E22                     SSP1SSPPS       equ	3618	;# 
  1508     0E24                     RXPPS           equ	3620	;# 
  1509     0E25                     TXPPS           equ	3621	;# 
  1510     0E28                     CLCIN0PPS       equ	3624	;# 
  1511     0E29                     CLCIN1PPS       equ	3625	;# 
  1512     0E2A                     CLCIN2PPS       equ	3626	;# 
  1513     0E2B                     CLCIN3PPS       equ	3627	;# 
  1514     0E2C                     T3CKIPPS        equ	3628	;# 
  1515     0E2D                     T3GPPS          equ	3629	;# 
  1516     0E2E                     T5CKIPPS        equ	3630	;# 
  1517     0E2F                     T5GPPS          equ	3631	;# 
  1518     0E90                     RA0PPS          equ	3728	;# 
  1519     0E91                     RA1PPS          equ	3729	;# 
  1520     0E92                     RA2PPS          equ	3730	;# 
  1521     0E94                     RA4PPS          equ	3732	;# 
  1522     0E95                     RA5PPS          equ	3733	;# 
  1523     0E9C                     RB4PPS          equ	3740	;# 
  1524     0E9D                     RB5PPS          equ	3741	;# 
  1525     0E9E                     RB6PPS          equ	3742	;# 
  1526     0E9F                     RB7PPS          equ	3743	;# 
  1527     0EA0                     RC0PPS          equ	3744	;# 
  1528     0EA1                     RC1PPS          equ	3745	;# 
  1529     0EA2                     RC2PPS          equ	3746	;# 
  1530     0EA3                     RC3PPS          equ	3747	;# 
  1531     0EA4                     RC4PPS          equ	3748	;# 
  1532     0EA5                     RC5PPS          equ	3749	;# 
  1533     0EA6                     RC6PPS          equ	3750	;# 
  1534     0EA7                     RC7PPS          equ	3751	;# 
  1535     0F0F                     CLCDATA         equ	3855	;# 
  1536     0F10                     CLC1CON         equ	3856	;# 
  1537     0F11                     CLC1POL         equ	3857	;# 
  1538     0F12                     CLC1SEL0        equ	3858	;# 
  1539     0F13                     CLC1SEL1        equ	3859	;# 
  1540     0F14                     CLC1SEL2        equ	3860	;# 
  1541     0F15                     CLC1SEL3        equ	3861	;# 
  1542     0F16                     CLC1GLS0        equ	3862	;# 
  1543     0F17                     CLC1GLS1        equ	3863	;# 
  1544     0F18                     CLC1GLS2        equ	3864	;# 
  1545     0F19                     CLC1GLS3        equ	3865	;# 
  1546     0F1A                     CLC2CON         equ	3866	;# 
  1547     0F1B                     CLC2POL         equ	3867	;# 
  1548     0F1C                     CLC2SEL0        equ	3868	;# 
  1549     0F1D                     CLC2SEL1        equ	3869	;# 
  1550     0F1E                     CLC2SEL2        equ	3870	;# 
  1551     0F1F                     CLC2SEL3        equ	3871	;# 
  1552     0F20                     CLC2GLS0        equ	3872	;# 
  1553     0F21                     CLC2GLS1        equ	3873	;# 
  1554     0F22                     CLC2GLS2        equ	3874	;# 
  1555     0F23                     CLC2GLS3        equ	3875	;# 
  1556     0F24                     CLC3CON         equ	3876	;# 
  1557     0F25                     CLC3POL         equ	3877	;# 
  1558     0F26                     CLC3SEL0        equ	3878	;# 
  1559     0F27                     CLC3SEL1        equ	3879	;# 
  1560     0F28                     CLC3SEL2        equ	3880	;# 
  1561     0F29                     CLC3SEL3        equ	3881	;# 
  1562     0F2A                     CLC3GLS0        equ	3882	;# 
  1563     0F2B                     CLC3GLS1        equ	3883	;# 
  1564     0F2C                     CLC3GLS2        equ	3884	;# 
  1565     0F2D                     CLC3GLS3        equ	3885	;# 
  1566     0F2E                     CLC4CON         equ	3886	;# 
  1567     0F2F                     CLC4POL         equ	3887	;# 
  1568     0F30                     CLC4SEL0        equ	3888	;# 
  1569     0F31                     CLC4SEL1        equ	3889	;# 
  1570     0F32                     CLC4SEL2        equ	3890	;# 
  1571     0F33                     CLC4SEL3        equ	3891	;# 
  1572     0F34                     CLC4GLS0        equ	3892	;# 
  1573     0F35                     CLC4GLS1        equ	3893	;# 
  1574     0F36                     CLC4GLS2        equ	3894	;# 
  1575     0F37                     CLC4GLS3        equ	3895	;# 
  1576     0FE4                     STATUS_SHAD     equ	4068	;# 
  1577     0FE5                     WREG_SHAD       equ	4069	;# 
  1578     0FE6                     BSR_SHAD        equ	4070	;# 
  1579     0FE7                     PCLATH_SHAD     equ	4071	;# 
  1580     0FE8                     FSR0L_SHAD      equ	4072	;# 
  1581     0FE9                     FSR0H_SHAD      equ	4073	;# 
  1582     0FEA                     FSR1L_SHAD      equ	4074	;# 
  1583     0FEB                     FSR1H_SHAD      equ	4075	;# 
  1584     0FED                     STKPTR          equ	4077	;# 
  1585     0FEE                     TOSL            equ	4078	;# 
  1586     0FEF                     TOSH            equ	4079	;# 
  1587     0000                     INDF0           equ	0	;# 
  1588     0001                     INDF1           equ	1	;# 
  1589     0002                     PCL             equ	2	;# 
  1590     0003                     STATUS          equ	3	;# 
  1591     0004                     FSR0L           equ	4	;# 
  1592     0005                     FSR0H           equ	5	;# 
  1593     0006                     FSR1L           equ	6	;# 
  1594     0007                     FSR1H           equ	7	;# 
  1595     0008                     BSR             equ	8	;# 
  1596     0009                     WREG            equ	9	;# 
  1597     000A                     PCLATH          equ	10	;# 
  1598     000B                     INTCON          equ	11	;# 
  1599     000C                     PORTA           equ	12	;# 
  1600     000D                     PORTB           equ	13	;# 
  1601     000E                     PORTC           equ	14	;# 
  1602     0010                     PIR0            equ	16	;# 
  1603     0011                     PIR1            equ	17	;# 
  1604     0012                     PIR2            equ	18	;# 
  1605     0013                     PIR3            equ	19	;# 
  1606     0014                     PIR4            equ	20	;# 
  1607     0015                     TMR0L           equ	21	;# 
  1608     0015                     TMR0            equ	21	;# 
  1609     0016                     TMR0H           equ	22	;# 
  1610     0016                     PR0             equ	22	;# 
  1611     0017                     T0CON0          equ	23	;# 
  1612     0018                     T0CON1          equ	24	;# 
  1613     0019                     TMR1            equ	25	;# 
  1614     0019                     TMR1L           equ	25	;# 
  1615     001A                     TMR1H           equ	26	;# 
  1616     001B                     T1CON           equ	27	;# 
  1617     001C                     T1GCON          equ	28	;# 
  1618     001D                     TMR2            equ	29	;# 
  1619     001E                     PR2             equ	30	;# 
  1620     001F                     T2CON           equ	31	;# 
  1621     008C                     TRISA           equ	140	;# 
  1622     008D                     TRISB           equ	141	;# 
  1623     008E                     TRISC           equ	142	;# 
  1624     0090                     PIE0            equ	144	;# 
  1625     0091                     PIE1            equ	145	;# 
  1626     0092                     PIE2            equ	146	;# 
  1627     0093                     PIE3            equ	147	;# 
  1628     0094                     PIE4            equ	148	;# 
  1629     0097                     WDTCON          equ	151	;# 
  1630     009B                     ADRES           equ	155	;# 
  1631     009B                     ADRESL          equ	155	;# 
  1632     009C                     ADRESH          equ	156	;# 
  1633     009D                     ADCON0          equ	157	;# 
  1634     009E                     ADCON1          equ	158	;# 
  1635     009F                     ADACT           equ	159	;# 
  1636     010C                     LATA            equ	268	;# 
  1637     010D                     LATB            equ	269	;# 
  1638     010E                     LATC            equ	270	;# 
  1639     0111                     CM1CON0         equ	273	;# 
  1640     0112                     CM1CON1         equ	274	;# 
  1641     0113                     CM2CON0         equ	275	;# 
  1642     0114                     CM2CON1         equ	276	;# 
  1643     0115                     CMOUT           equ	277	;# 
  1644     0116                     BORCON          equ	278	;# 
  1645     0117                     FVRCON          equ	279	;# 
  1646     0118                     DACCON0         equ	280	;# 
  1647     0119                     DACCON1         equ	281	;# 
  1648     018C                     ANSELA          equ	396	;# 
  1649     018D                     ANSELB          equ	397	;# 
  1650     018E                     ANSELC          equ	398	;# 
  1651     0197                     VREGCON         equ	407	;# 
  1652     0199                     RC1REG          equ	409	;# 
  1653     0199                     RCREG           equ	409	;# 
  1654     0199                     RCREG1          equ	409	;# 
  1655     019A                     TX1REG          equ	410	;# 
  1656     019A                     TXREG1          equ	410	;# 
  1657     019A                     TXREG           equ	410	;# 
  1658     019B                     SP1BRG          equ	411	;# 
  1659     019B                     SPBRG           equ	411	;# 
  1660     019B                     SP1BRGL         equ	411	;# 
  1661     019B                     SPBRG1          equ	411	;# 
  1662     019B                     SPBRGL          equ	411	;# 
  1663     019C                     SP1BRGH         equ	412	;# 
  1664     019C                     SPBRGH          equ	412	;# 
  1665     019C                     SPBRGH1         equ	412	;# 
  1666     019D                     RC1STA          equ	413	;# 
  1667     019D                     RCSTA1          equ	413	;# 
  1668     019D                     RCSTA           equ	413	;# 
  1669     019E                     TX1STA          equ	414	;# 
  1670     019E                     TXSTA1          equ	414	;# 
  1671     019E                     TXSTA           equ	414	;# 
  1672     019F                     BAUD1CON        equ	415	;# 
  1673     019F                     BAUDCON1        equ	415	;# 
  1674     019F                     BAUDCTL1        equ	415	;# 
  1675     019F                     BAUDCON         equ	415	;# 
  1676     019F                     BAUDCTL         equ	415	;# 
  1677     020C                     WPUA            equ	524	;# 
  1678     020D                     WPUB            equ	525	;# 
  1679     020E                     WPUC            equ	526	;# 
  1680     0211                     SSP1BUF         equ	529	;# 
  1681     0211                     SSPBUF          equ	529	;# 
  1682     0212                     SSP1ADD         equ	530	;# 
  1683     0212                     SSPADD          equ	530	;# 
  1684     0213                     SSP1MSK         equ	531	;# 
  1685     0213                     SSPMSK          equ	531	;# 
  1686     0214                     SSP1STAT        equ	532	;# 
  1687     0214                     SSPSTAT         equ	532	;# 
  1688     0215                     SSP1CON1        equ	533	;# 
  1689     0215                     SSPCON          equ	533	;# 
  1690     0215                     SSPCON1         equ	533	;# 
  1691     0215                     SSP1CON         equ	533	;# 
  1692     0216                     SSP1CON2        equ	534	;# 
  1693     0216                     SSPCON2         equ	534	;# 
  1694     0217                     SSP1CON3        equ	535	;# 
  1695     0217                     SSPCON3         equ	535	;# 
  1696     0219                     SSP2BUF         equ	537	;# 
  1697     021A                     SSP2ADD         equ	538	;# 
  1698     021B                     SSP2MSK         equ	539	;# 
  1699     021C                     SSP2STAT        equ	540	;# 
  1700     021D                     SSP2CON1        equ	541	;# 
  1701     021D                     SSP2CON         equ	541	;# 
  1702     021E                     SSP2CON2        equ	542	;# 
  1703     021F                     SSP2CON3        equ	543	;# 
  1704     028C                     ODCONA          equ	652	;# 
  1705     028D                     ODCONB          equ	653	;# 
  1706     028E                     ODCONC          equ	654	;# 
  1707     0291                     CCPR1           equ	657	;# 
  1708     0291                     CCPR1L          equ	657	;# 
  1709     0292                     CCPR1H          equ	658	;# 
  1710     0293                     CCP1CON         equ	659	;# 
  1711     0294                     CCP1CAP         equ	660	;# 
  1712     0295                     CCPR2           equ	661	;# 
  1713     0295                     CCPR2L          equ	661	;# 
  1714     0296                     CCPR2H          equ	662	;# 
  1715     0297                     CCP2CON         equ	663	;# 
  1716     0298                     CCP2CAP         equ	664	;# 
  1717     029F                     CCPTMRS         equ	671	;# 
  1718     030C                     SLRCONA         equ	780	;# 
  1719     030D                     SLRCONB         equ	781	;# 
  1720     030E                     SLRCONC         equ	782	;# 
  1721     0311                     CCPR3           equ	785	;# 
  1722     0311                     CCPR3L          equ	785	;# 
  1723     0312                     CCPR3H          equ	786	;# 
  1724     0313                     CCP3CON         equ	787	;# 
  1725     0314                     CCP3CAP         equ	788	;# 
  1726     0315                     CCPR4           equ	789	;# 
  1727     0315                     CCPR4L          equ	789	;# 
  1728     0316                     CCPR4H          equ	790	;# 
  1729     0317                     CCP4CON         equ	791	;# 
  1730     0318                     CCP4CAP         equ	792	;# 
  1731     038C                     INLVLA          equ	908	;# 
  1732     038D                     INLVLB          equ	909	;# 
  1733     038E                     INLVLC          equ	910	;# 
  1734     0391                     IOCAP           equ	913	;# 
  1735     0392                     IOCAN           equ	914	;# 
  1736     0393                     IOCAF           equ	915	;# 
  1737     0394                     IOCBP           equ	916	;# 
  1738     0395                     IOCBN           equ	917	;# 
  1739     0396                     IOCBF           equ	918	;# 
  1740     0397                     IOCCP           equ	919	;# 
  1741     0398                     IOCCN           equ	920	;# 
  1742     0399                     IOCCF           equ	921	;# 
  1743     039A                     CLKRCON         equ	922	;# 
  1744     039C                     MDCON           equ	924	;# 
  1745     039D                     MDSRC           equ	925	;# 
  1746     039E                     MDCARH          equ	926	;# 
  1747     039F                     MDCARL          equ	927	;# 
  1748     0411                     TMR3            equ	1041	;# 
  1749     0411                     TMR3L           equ	1041	;# 
  1750     0412                     TMR3H           equ	1042	;# 
  1751     0413                     T3CON           equ	1043	;# 
  1752     0414                     T3GCON          equ	1044	;# 
  1753     0415                     TMR4            equ	1045	;# 
  1754     0416                     PR4             equ	1046	;# 
  1755     0417                     T4CON           equ	1047	;# 
  1756     0418                     TMR5            equ	1048	;# 
  1757     0418                     TMR5L           equ	1048	;# 
  1758     0419                     TMR5H           equ	1049	;# 
  1759     041A                     T5CON           equ	1050	;# 
  1760     041B                     T5GCON          equ	1051	;# 
  1761     041C                     TMR6            equ	1052	;# 
  1762     041D                     PR6             equ	1053	;# 
  1763     041E                     T6CON           equ	1054	;# 
  1764     041F                     CCDCON          equ	1055	;# 
  1765     0498                     NCO1ACC         equ	1176	;# 
  1766     0498                     NCO1ACCL        equ	1176	;# 
  1767     0499                     NCO1ACCH        equ	1177	;# 
  1768     049A                     NCO1ACCU        equ	1178	;# 
  1769     049B                     NCO1INC         equ	1179	;# 
  1770     049B                     NCO1INCL        equ	1179	;# 
  1771     049C                     NCO1INCH        equ	1180	;# 
  1772     049D                     NCO1INCU        equ	1181	;# 
  1773     049E                     NCO1CON         equ	1182	;# 
  1774     049F                     NCO1CLK         equ	1183	;# 
  1775     0617                     PWM5DCL         equ	1559	;# 
  1776     0618                     PWM5DCH         equ	1560	;# 
  1777     0619                     PWM5CON         equ	1561	;# 
  1778     0619                     PWM5CON0        equ	1561	;# 
  1779     061A                     PWM6DCL         equ	1562	;# 
  1780     061B                     PWM6DCH         equ	1563	;# 
  1781     061C                     PWM6CON         equ	1564	;# 
  1782     061C                     PWM6CON0        equ	1564	;# 
  1783     061F                     PWMTMRS         equ	1567	;# 
  1784     0691                     CWG1CLKCON      equ	1681	;# 
  1785     0692                     CWG1DAT         equ	1682	;# 
  1786     0693                     CWG1DBR         equ	1683	;# 
  1787     0694                     CWG1DBF         equ	1684	;# 
  1788     0695                     CWG1CON0        equ	1685	;# 
  1789     0696                     CWG1CON1        equ	1686	;# 
  1790     0697                     CWG1AS0         equ	1687	;# 
  1791     0698                     CWG1AS1         equ	1688	;# 
  1792     0699                     CWG1STR         equ	1689	;# 
  1793     0711                     CWG2CLKCON      equ	1809	;# 
  1794     0712                     CWG2DAT         equ	1810	;# 
  1795     0713                     CWG2DBR         equ	1811	;# 
  1796     0714                     CWG2DBF         equ	1812	;# 
  1797     0715                     CWG2CON0        equ	1813	;# 
  1798     0716                     CWG2CON1        equ	1814	;# 
  1799     0717                     CWG2AS0         equ	1815	;# 
  1800     0718                     CWG2AS1         equ	1816	;# 
  1801     0719                     CWG2STR         equ	1817	;# 
  1802     0891                     NVMADR          equ	2193	;# 
  1803     0891                     EEADR           equ	2193	;# 
  1804     0891                     PMADR           equ	2193	;# 
  1805     0891                     NVMADRL         equ	2193	;# 
  1806     0891                     EEADRL          equ	2193	;# 
  1807     0891                     PMADRL          equ	2193	;# 
  1808     0892                     NVMADRH         equ	2194	;# 
  1809     0892                     EEADRH          equ	2194	;# 
  1810     0892                     PMADRH          equ	2194	;# 
  1811     0893                     NVMDAT          equ	2195	;# 
  1812     0893                     EEDAT           equ	2195	;# 
  1813     0893                     PMDAT           equ	2195	;# 
  1814     0893                     NVMDATL         equ	2195	;# 
  1815     0893                     EEDATL          equ	2195	;# 
  1816     0893                     PMDATL          equ	2195	;# 
  1817     0894                     NVMDATH         equ	2196	;# 
  1818     0894                     EEDATH          equ	2196	;# 
  1819     0894                     PMDATH          equ	2196	;# 
  1820     0895                     NVMCON1         equ	2197	;# 
  1821     0895                     EECON1          equ	2197	;# 
  1822     0895                     PMCON1          equ	2197	;# 
  1823     0896                     NVMCON2         equ	2198	;# 
  1824     0896                     EECON2          equ	2198	;# 
  1825     0896                     PMCON2          equ	2198	;# 
  1826     089B                     PCON0           equ	2203	;# 
  1827     0911                     PMD0            equ	2321	;# 
  1828     0912                     PMD1            equ	2322	;# 
  1829     0913                     PMD2            equ	2323	;# 
  1830     0914                     PMD3            equ	2324	;# 
  1831     0915                     PMD4            equ	2325	;# 
  1832     0916                     PMD5            equ	2326	;# 
  1833     0918                     CPUDOZE         equ	2328	;# 
  1834     0919                     OSCCON1         equ	2329	;# 
  1835     091A                     OSCCON2         equ	2330	;# 
  1836     091B                     OSCCON3         equ	2331	;# 
  1837     091C                     OSCSTAT1        equ	2332	;# 
  1838     091D                     OSCEN           equ	2333	;# 
  1839     091E                     OSCTUNE         equ	2334	;# 
  1840     091F                     OSCFRQ          equ	2335	;# 
  1841     0E0F                     PPSLOCK         equ	3599	;# 
  1842     0E10                     INTPPS          equ	3600	;# 
  1843     0E11                     T0CKIPPS        equ	3601	;# 
  1844     0E12                     T1CKIPPS        equ	3602	;# 
  1845     0E13                     T1GPPS          equ	3603	;# 
  1846     0E14                     CCP1PPS         equ	3604	;# 
  1847     0E15                     CCP2PPS         equ	3605	;# 
  1848     0E16                     CCP3PPS         equ	3606	;# 
  1849     0E17                     CCP4PPS         equ	3607	;# 
  1850     0E18                     CWG1PPS         equ	3608	;# 
  1851     0E19                     CWG2PPS         equ	3609	;# 
  1852     0E1A                     MDCIN1PPS       equ	3610	;# 
  1853     0E1B                     MDCIN2PPS       equ	3611	;# 
  1854     0E1C                     MDMINPPS        equ	3612	;# 
  1855     0E1D                     SSP2CLKPPS      equ	3613	;# 
  1856     0E1E                     SSP2DATPPS      equ	3614	;# 
  1857     0E1F                     SSP2SSPPS       equ	3615	;# 
  1858     0E20                     SSP1CLKPPS      equ	3616	;# 
  1859     0E21                     SSP1DATPPS      equ	3617	;# 
  1860     0E22                     SSP1SSPPS       equ	3618	;# 
  1861     0E24                     RXPPS           equ	3620	;# 
  1862     0E25                     TXPPS           equ	3621	;# 
  1863     0E28                     CLCIN0PPS       equ	3624	;# 
  1864     0E29                     CLCIN1PPS       equ	3625	;# 
  1865     0E2A                     CLCIN2PPS       equ	3626	;# 
  1866     0E2B                     CLCIN3PPS       equ	3627	;# 
  1867     0E2C                     T3CKIPPS        equ	3628	;# 
  1868     0E2D                     T3GPPS          equ	3629	;# 
  1869     0E2E                     T5CKIPPS        equ	3630	;# 
  1870     0E2F                     T5GPPS          equ	3631	;# 
  1871     0E90                     RA0PPS          equ	3728	;# 
  1872     0E91                     RA1PPS          equ	3729	;# 
  1873     0E92                     RA2PPS          equ	3730	;# 
  1874     0E94                     RA4PPS          equ	3732	;# 
  1875     0E95                     RA5PPS          equ	3733	;# 
  1876     0E9C                     RB4PPS          equ	3740	;# 
  1877     0E9D                     RB5PPS          equ	3741	;# 
  1878     0E9E                     RB6PPS          equ	3742	;# 
  1879     0E9F                     RB7PPS          equ	3743	;# 
  1880     0EA0                     RC0PPS          equ	3744	;# 
  1881     0EA1                     RC1PPS          equ	3745	;# 
  1882     0EA2                     RC2PPS          equ	3746	;# 
  1883     0EA3                     RC3PPS          equ	3747	;# 
  1884     0EA4                     RC4PPS          equ	3748	;# 
  1885     0EA5                     RC5PPS          equ	3749	;# 
  1886     0EA6                     RC6PPS          equ	3750	;# 
  1887     0EA7                     RC7PPS          equ	3751	;# 
  1888     0F0F                     CLCDATA         equ	3855	;# 
  1889     0F10                     CLC1CON         equ	3856	;# 
  1890     0F11                     CLC1POL         equ	3857	;# 
  1891     0F12                     CLC1SEL0        equ	3858	;# 
  1892     0F13                     CLC1SEL1        equ	3859	;# 
  1893     0F14                     CLC1SEL2        equ	3860	;# 
  1894     0F15                     CLC1SEL3        equ	3861	;# 
  1895     0F16                     CLC1GLS0        equ	3862	;# 
  1896     0F17                     CLC1GLS1        equ	3863	;# 
  1897     0F18                     CLC1GLS2        equ	3864	;# 
  1898     0F19                     CLC1GLS3        equ	3865	;# 
  1899     0F1A                     CLC2CON         equ	3866	;# 
  1900     0F1B                     CLC2POL         equ	3867	;# 
  1901     0F1C                     CLC2SEL0        equ	3868	;# 
  1902     0F1D                     CLC2SEL1        equ	3869	;# 
  1903     0F1E                     CLC2SEL2        equ	3870	;# 
  1904     0F1F                     CLC2SEL3        equ	3871	;# 
  1905     0F20                     CLC2GLS0        equ	3872	;# 
  1906     0F21                     CLC2GLS1        equ	3873	;# 
  1907     0F22                     CLC2GLS2        equ	3874	;# 
  1908     0F23                     CLC2GLS3        equ	3875	;# 
  1909     0F24                     CLC3CON         equ	3876	;# 
  1910     0F25                     CLC3POL         equ	3877	;# 
  1911     0F26                     CLC3SEL0        equ	3878	;# 
  1912     0F27                     CLC3SEL1        equ	3879	;# 
  1913     0F28                     CLC3SEL2        equ	3880	;# 
  1914     0F29                     CLC3SEL3        equ	3881	;# 
  1915     0F2A                     CLC3GLS0        equ	3882	;# 
  1916     0F2B                     CLC3GLS1        equ	3883	;# 
  1917     0F2C                     CLC3GLS2        equ	3884	;# 
  1918     0F2D                     CLC3GLS3        equ	3885	;# 
  1919     0F2E                     CLC4CON         equ	3886	;# 
  1920     0F2F                     CLC4POL         equ	3887	;# 
  1921     0F30                     CLC4SEL0        equ	3888	;# 
  1922     0F31                     CLC4SEL1        equ	3889	;# 
  1923     0F32                     CLC4SEL2        equ	3890	;# 
  1924     0F33                     CLC4SEL3        equ	3891	;# 
  1925     0F34                     CLC4GLS0        equ	3892	;# 
  1926     0F35                     CLC4GLS1        equ	3893	;# 
  1927     0F36                     CLC4GLS2        equ	3894	;# 
  1928     0F37                     CLC4GLS3        equ	3895	;# 
  1929     0FE4                     STATUS_SHAD     equ	4068	;# 
  1930     0FE5                     WREG_SHAD       equ	4069	;# 
  1931     0FE6                     BSR_SHAD        equ	4070	;# 
  1932     0FE7                     PCLATH_SHAD     equ	4071	;# 
  1933     0FE8                     FSR0L_SHAD      equ	4072	;# 
  1934     0FE9                     FSR0H_SHAD      equ	4073	;# 
  1935     0FEA                     FSR1L_SHAD      equ	4074	;# 
  1936     0FEB                     FSR1H_SHAD      equ	4075	;# 
  1937     0FED                     STKPTR          equ	4077	;# 
  1938     0FEE                     TOSL            equ	4078	;# 
  1939     0FEF                     TOSH            equ	4079	;# 
  1940     0000                     INDF0           equ	0	;# 
  1941     0001                     INDF1           equ	1	;# 
  1942     0002                     PCL             equ	2	;# 
  1943     0003                     STATUS          equ	3	;# 
  1944     0004                     FSR0L           equ	4	;# 
  1945     0005                     FSR0H           equ	5	;# 
  1946     0006                     FSR1L           equ	6	;# 
  1947     0007                     FSR1H           equ	7	;# 
  1948     0008                     BSR             equ	8	;# 
  1949     0009                     WREG            equ	9	;# 
  1950     000A                     PCLATH          equ	10	;# 
  1951     000B                     INTCON          equ	11	;# 
  1952     000C                     PORTA           equ	12	;# 
  1953     000D                     PORTB           equ	13	;# 
  1954     000E                     PORTC           equ	14	;# 
  1955     0010                     PIR0            equ	16	;# 
  1956     0011                     PIR1            equ	17	;# 
  1957     0012                     PIR2            equ	18	;# 
  1958     0013                     PIR3            equ	19	;# 
  1959     0014                     PIR4            equ	20	;# 
  1960     0015                     TMR0L           equ	21	;# 
  1961     0015                     TMR0            equ	21	;# 
  1962     0016                     TMR0H           equ	22	;# 
  1963     0016                     PR0             equ	22	;# 
  1964     0017                     T0CON0          equ	23	;# 
  1965     0018                     T0CON1          equ	24	;# 
  1966     0019                     TMR1            equ	25	;# 
  1967     0019                     TMR1L           equ	25	;# 
  1968     001A                     TMR1H           equ	26	;# 
  1969     001B                     T1CON           equ	27	;# 
  1970     001C                     T1GCON          equ	28	;# 
  1971     001D                     TMR2            equ	29	;# 
  1972     001E                     PR2             equ	30	;# 
  1973     001F                     T2CON           equ	31	;# 
  1974     008C                     TRISA           equ	140	;# 
  1975     008D                     TRISB           equ	141	;# 
  1976     008E                     TRISC           equ	142	;# 
  1977     0090                     PIE0            equ	144	;# 
  1978     0091                     PIE1            equ	145	;# 
  1979     0092                     PIE2            equ	146	;# 
  1980     0093                     PIE3            equ	147	;# 
  1981     0094                     PIE4            equ	148	;# 
  1982     0097                     WDTCON          equ	151	;# 
  1983     009B                     ADRES           equ	155	;# 
  1984     009B                     ADRESL          equ	155	;# 
  1985     009C                     ADRESH          equ	156	;# 
  1986     009D                     ADCON0          equ	157	;# 
  1987     009E                     ADCON1          equ	158	;# 
  1988     009F                     ADACT           equ	159	;# 
  1989     010C                     LATA            equ	268	;# 
  1990     010D                     LATB            equ	269	;# 
  1991     010E                     LATC            equ	270	;# 
  1992     0111                     CM1CON0         equ	273	;# 
  1993     0112                     CM1CON1         equ	274	;# 
  1994     0113                     CM2CON0         equ	275	;# 
  1995     0114                     CM2CON1         equ	276	;# 
  1996     0115                     CMOUT           equ	277	;# 
  1997     0116                     BORCON          equ	278	;# 
  1998     0117                     FVRCON          equ	279	;# 
  1999     0118                     DACCON0         equ	280	;# 
  2000     0119                     DACCON1         equ	281	;# 
  2001     018C                     ANSELA          equ	396	;# 
  2002     018D                     ANSELB          equ	397	;# 
  2003     018E                     ANSELC          equ	398	;# 
  2004     0197                     VREGCON         equ	407	;# 
  2005     0199                     RC1REG          equ	409	;# 
  2006     0199                     RCREG           equ	409	;# 
  2007     0199                     RCREG1          equ	409	;# 
  2008     019A                     TX1REG          equ	410	;# 
  2009     019A                     TXREG1          equ	410	;# 
  2010     019A                     TXREG           equ	410	;# 
  2011     019B                     SP1BRG          equ	411	;# 
  2012     019B                     SPBRG           equ	411	;# 
  2013     019B                     SP1BRGL         equ	411	;# 
  2014     019B                     SPBRG1          equ	411	;# 
  2015     019B                     SPBRGL          equ	411	;# 
  2016     019C                     SP1BRGH         equ	412	;# 
  2017     019C                     SPBRGH          equ	412	;# 
  2018     019C                     SPBRGH1         equ	412	;# 
  2019     019D                     RC1STA          equ	413	;# 
  2020     019D                     RCSTA1          equ	413	;# 
  2021     019D                     RCSTA           equ	413	;# 
  2022     019E                     TX1STA          equ	414	;# 
  2023     019E                     TXSTA1          equ	414	;# 
  2024     019E                     TXSTA           equ	414	;# 
  2025     019F                     BAUD1CON        equ	415	;# 
  2026     019F                     BAUDCON1        equ	415	;# 
  2027     019F                     BAUDCTL1        equ	415	;# 
  2028     019F                     BAUDCON         equ	415	;# 
  2029     019F                     BAUDCTL         equ	415	;# 
  2030     020C                     WPUA            equ	524	;# 
  2031     020D                     WPUB            equ	525	;# 
  2032     020E                     WPUC            equ	526	;# 
  2033     0211                     SSP1BUF         equ	529	;# 
  2034     0211                     SSPBUF          equ	529	;# 
  2035     0212                     SSP1ADD         equ	530	;# 
  2036     0212                     SSPADD          equ	530	;# 
  2037     0213                     SSP1MSK         equ	531	;# 
  2038     0213                     SSPMSK          equ	531	;# 
  2039     0214                     SSP1STAT        equ	532	;# 
  2040     0214                     SSPSTAT         equ	532	;# 
  2041     0215                     SSP1CON1        equ	533	;# 
  2042     0215                     SSPCON          equ	533	;# 
  2043     0215                     SSPCON1         equ	533	;# 
  2044     0215                     SSP1CON         equ	533	;# 
  2045     0216                     SSP1CON2        equ	534	;# 
  2046     0216                     SSPCON2         equ	534	;# 
  2047     0217                     SSP1CON3        equ	535	;# 
  2048     0217                     SSPCON3         equ	535	;# 
  2049     0219                     SSP2BUF         equ	537	;# 
  2050     021A                     SSP2ADD         equ	538	;# 
  2051     021B                     SSP2MSK         equ	539	;# 
  2052     021C                     SSP2STAT        equ	540	;# 
  2053     021D                     SSP2CON1        equ	541	;# 
  2054     021D                     SSP2CON         equ	541	;# 
  2055     021E                     SSP2CON2        equ	542	;# 
  2056     021F                     SSP2CON3        equ	543	;# 
  2057     028C                     ODCONA          equ	652	;# 
  2058     028D                     ODCONB          equ	653	;# 
  2059     028E                     ODCONC          equ	654	;# 
  2060     0291                     CCPR1           equ	657	;# 
  2061     0291                     CCPR1L          equ	657	;# 
  2062     0292                     CCPR1H          equ	658	;# 
  2063     0293                     CCP1CON         equ	659	;# 
  2064     0294                     CCP1CAP         equ	660	;# 
  2065     0295                     CCPR2           equ	661	;# 
  2066     0295                     CCPR2L          equ	661	;# 
  2067     0296                     CCPR2H          equ	662	;# 
  2068     0297                     CCP2CON         equ	663	;# 
  2069     0298                     CCP2CAP         equ	664	;# 
  2070     029F                     CCPTMRS         equ	671	;# 
  2071     030C                     SLRCONA         equ	780	;# 
  2072     030D                     SLRCONB         equ	781	;# 
  2073     030E                     SLRCONC         equ	782	;# 
  2074     0311                     CCPR3           equ	785	;# 
  2075     0311                     CCPR3L          equ	785	;# 
  2076     0312                     CCPR3H          equ	786	;# 
  2077     0313                     CCP3CON         equ	787	;# 
  2078     0314                     CCP3CAP         equ	788	;# 
  2079     0315                     CCPR4           equ	789	;# 
  2080     0315                     CCPR4L          equ	789	;# 
  2081     0316                     CCPR4H          equ	790	;# 
  2082     0317                     CCP4CON         equ	791	;# 
  2083     0318                     CCP4CAP         equ	792	;# 
  2084     038C                     INLVLA          equ	908	;# 
  2085     038D                     INLVLB          equ	909	;# 
  2086     038E                     INLVLC          equ	910	;# 
  2087     0391                     IOCAP           equ	913	;# 
  2088     0392                     IOCAN           equ	914	;# 
  2089     0393                     IOCAF           equ	915	;# 
  2090     0394                     IOCBP           equ	916	;# 
  2091     0395                     IOCBN           equ	917	;# 
  2092     0396                     IOCBF           equ	918	;# 
  2093     0397                     IOCCP           equ	919	;# 
  2094     0398                     IOCCN           equ	920	;# 
  2095     0399                     IOCCF           equ	921	;# 
  2096     039A                     CLKRCON         equ	922	;# 
  2097     039C                     MDCON           equ	924	;# 
  2098     039D                     MDSRC           equ	925	;# 
  2099     039E                     MDCARH          equ	926	;# 
  2100     039F                     MDCARL          equ	927	;# 
  2101     0411                     TMR3            equ	1041	;# 
  2102     0411                     TMR3L           equ	1041	;# 
  2103     0412                     TMR3H           equ	1042	;# 
  2104     0413                     T3CON           equ	1043	;# 
  2105     0414                     T3GCON          equ	1044	;# 
  2106     0415                     TMR4            equ	1045	;# 
  2107     0416                     PR4             equ	1046	;# 
  2108     0417                     T4CON           equ	1047	;# 
  2109     0418                     TMR5            equ	1048	;# 
  2110     0418                     TMR5L           equ	1048	;# 
  2111     0419                     TMR5H           equ	1049	;# 
  2112     041A                     T5CON           equ	1050	;# 
  2113     041B                     T5GCON          equ	1051	;# 
  2114     041C                     TMR6            equ	1052	;# 
  2115     041D                     PR6             equ	1053	;# 
  2116     041E                     T6CON           equ	1054	;# 
  2117     041F                     CCDCON          equ	1055	;# 
  2118     0498                     NCO1ACC         equ	1176	;# 
  2119     0498                     NCO1ACCL        equ	1176	;# 
  2120     0499                     NCO1ACCH        equ	1177	;# 
  2121     049A                     NCO1ACCU        equ	1178	;# 
  2122     049B                     NCO1INC         equ	1179	;# 
  2123     049B                     NCO1INCL        equ	1179	;# 
  2124     049C                     NCO1INCH        equ	1180	;# 
  2125     049D                     NCO1INCU        equ	1181	;# 
  2126     049E                     NCO1CON         equ	1182	;# 
  2127     049F                     NCO1CLK         equ	1183	;# 
  2128     0617                     PWM5DCL         equ	1559	;# 
  2129     0618                     PWM5DCH         equ	1560	;# 
  2130     0619                     PWM5CON         equ	1561	;# 
  2131     0619                     PWM5CON0        equ	1561	;# 
  2132     061A                     PWM6DCL         equ	1562	;# 
  2133     061B                     PWM6DCH         equ	1563	;# 
  2134     061C                     PWM6CON         equ	1564	;# 
  2135     061C                     PWM6CON0        equ	1564	;# 
  2136     061F                     PWMTMRS         equ	1567	;# 
  2137     0691                     CWG1CLKCON      equ	1681	;# 
  2138     0692                     CWG1DAT         equ	1682	;# 
  2139     0693                     CWG1DBR         equ	1683	;# 
  2140     0694                     CWG1DBF         equ	1684	;# 
  2141     0695                     CWG1CON0        equ	1685	;# 
  2142     0696                     CWG1CON1        equ	1686	;# 
  2143     0697                     CWG1AS0         equ	1687	;# 
  2144     0698                     CWG1AS1         equ	1688	;# 
  2145     0699                     CWG1STR         equ	1689	;# 
  2146     0711                     CWG2CLKCON      equ	1809	;# 
  2147     0712                     CWG2DAT         equ	1810	;# 
  2148     0713                     CWG2DBR         equ	1811	;# 
  2149     0714                     CWG2DBF         equ	1812	;# 
  2150     0715                     CWG2CON0        equ	1813	;# 
  2151     0716                     CWG2CON1        equ	1814	;# 
  2152     0717                     CWG2AS0         equ	1815	;# 
  2153     0718                     CWG2AS1         equ	1816	;# 
  2154     0719                     CWG2STR         equ	1817	;# 
  2155     0891                     NVMADR          equ	2193	;# 
  2156     0891                     EEADR           equ	2193	;# 
  2157     0891                     PMADR           equ	2193	;# 
  2158     0891                     NVMADRL         equ	2193	;# 
  2159     0891                     EEADRL          equ	2193	;# 
  2160     0891                     PMADRL          equ	2193	;# 
  2161     0892                     NVMADRH         equ	2194	;# 
  2162     0892                     EEADRH          equ	2194	;# 
  2163     0892                     PMADRH          equ	2194	;# 
  2164     0893                     NVMDAT          equ	2195	;# 
  2165     0893                     EEDAT           equ	2195	;# 
  2166     0893                     PMDAT           equ	2195	;# 
  2167     0893                     NVMDATL         equ	2195	;# 
  2168     0893                     EEDATL          equ	2195	;# 
  2169     0893                     PMDATL          equ	2195	;# 
  2170     0894                     NVMDATH         equ	2196	;# 
  2171     0894                     EEDATH          equ	2196	;# 
  2172     0894                     PMDATH          equ	2196	;# 
  2173     0895                     NVMCON1         equ	2197	;# 
  2174     0895                     EECON1          equ	2197	;# 
  2175     0895                     PMCON1          equ	2197	;# 
  2176     0896                     NVMCON2         equ	2198	;# 
  2177     0896                     EECON2          equ	2198	;# 
  2178     0896                     PMCON2          equ	2198	;# 
  2179     089B                     PCON0           equ	2203	;# 
  2180     0911                     PMD0            equ	2321	;# 
  2181     0912                     PMD1            equ	2322	;# 
  2182     0913                     PMD2            equ	2323	;# 
  2183     0914                     PMD3            equ	2324	;# 
  2184     0915                     PMD4            equ	2325	;# 
  2185     0916                     PMD5            equ	2326	;# 
  2186     0918                     CPUDOZE         equ	2328	;# 
  2187     0919                     OSCCON1         equ	2329	;# 
  2188     091A                     OSCCON2         equ	2330	;# 
  2189     091B                     OSCCON3         equ	2331	;# 
  2190     091C                     OSCSTAT1        equ	2332	;# 
  2191     091D                     OSCEN           equ	2333	;# 
  2192     091E                     OSCTUNE         equ	2334	;# 
  2193     091F                     OSCFRQ          equ	2335	;# 
  2194     0E0F                     PPSLOCK         equ	3599	;# 
  2195     0E10                     INTPPS          equ	3600	;# 
  2196     0E11                     T0CKIPPS        equ	3601	;# 
  2197     0E12                     T1CKIPPS        equ	3602	;# 
  2198     0E13                     T1GPPS          equ	3603	;# 
  2199     0E14                     CCP1PPS         equ	3604	;# 
  2200     0E15                     CCP2PPS         equ	3605	;# 
  2201     0E16                     CCP3PPS         equ	3606	;# 
  2202     0E17                     CCP4PPS         equ	3607	;# 
  2203     0E18                     CWG1PPS         equ	3608	;# 
  2204     0E19                     CWG2PPS         equ	3609	;# 
  2205     0E1A                     MDCIN1PPS       equ	3610	;# 
  2206     0E1B                     MDCIN2PPS       equ	3611	;# 
  2207     0E1C                     MDMINPPS        equ	3612	;# 
  2208     0E1D                     SSP2CLKPPS      equ	3613	;# 
  2209     0E1E                     SSP2DATPPS      equ	3614	;# 
  2210     0E1F                     SSP2SSPPS       equ	3615	;# 
  2211     0E20                     SSP1CLKPPS      equ	3616	;# 
  2212     0E21                     SSP1DATPPS      equ	3617	;# 
  2213     0E22                     SSP1SSPPS       equ	3618	;# 
  2214     0E24                     RXPPS           equ	3620	;# 
  2215     0E25                     TXPPS           equ	3621	;# 
  2216     0E28                     CLCIN0PPS       equ	3624	;# 
  2217     0E29                     CLCIN1PPS       equ	3625	;# 
  2218     0E2A                     CLCIN2PPS       equ	3626	;# 
  2219     0E2B                     CLCIN3PPS       equ	3627	;# 
  2220     0E2C                     T3CKIPPS        equ	3628	;# 
  2221     0E2D                     T3GPPS          equ	3629	;# 
  2222     0E2E                     T5CKIPPS        equ	3630	;# 
  2223     0E2F                     T5GPPS          equ	3631	;# 
  2224     0E90                     RA0PPS          equ	3728	;# 
  2225     0E91                     RA1PPS          equ	3729	;# 
  2226     0E92                     RA2PPS          equ	3730	;# 
  2227     0E94                     RA4PPS          equ	3732	;# 
  2228     0E95                     RA5PPS          equ	3733	;# 
  2229     0E9C                     RB4PPS          equ	3740	;# 
  2230     0E9D                     RB5PPS          equ	3741	;# 
  2231     0E9E                     RB6PPS          equ	3742	;# 
  2232     0E9F                     RB7PPS          equ	3743	;# 
  2233     0EA0                     RC0PPS          equ	3744	;# 
  2234     0EA1                     RC1PPS          equ	3745	;# 
  2235     0EA2                     RC2PPS          equ	3746	;# 
  2236     0EA3                     RC3PPS          equ	3747	;# 
  2237     0EA4                     RC4PPS          equ	3748	;# 
  2238     0EA5                     RC5PPS          equ	3749	;# 
  2239     0EA6                     RC6PPS          equ	3750	;# 
  2240     0EA7                     RC7PPS          equ	3751	;# 
  2241     0F0F                     CLCDATA         equ	3855	;# 
  2242     0F10                     CLC1CON         equ	3856	;# 
  2243     0F11                     CLC1POL         equ	3857	;# 
  2244     0F12                     CLC1SEL0        equ	3858	;# 
  2245     0F13                     CLC1SEL1        equ	3859	;# 
  2246     0F14                     CLC1SEL2        equ	3860	;# 
  2247     0F15                     CLC1SEL3        equ	3861	;# 
  2248     0F16                     CLC1GLS0        equ	3862	;# 
  2249     0F17                     CLC1GLS1        equ	3863	;# 
  2250     0F18                     CLC1GLS2        equ	3864	;# 
  2251     0F19                     CLC1GLS3        equ	3865	;# 
  2252     0F1A                     CLC2CON         equ	3866	;# 
  2253     0F1B                     CLC2POL         equ	3867	;# 
  2254     0F1C                     CLC2SEL0        equ	3868	;# 
  2255     0F1D                     CLC2SEL1        equ	3869	;# 
  2256     0F1E                     CLC2SEL2        equ	3870	;# 
  2257     0F1F                     CLC2SEL3        equ	3871	;# 
  2258     0F20                     CLC2GLS0        equ	3872	;# 
  2259     0F21                     CLC2GLS1        equ	3873	;# 
  2260     0F22                     CLC2GLS2        equ	3874	;# 
  2261     0F23                     CLC2GLS3        equ	3875	;# 
  2262     0F24                     CLC3CON         equ	3876	;# 
  2263     0F25                     CLC3POL         equ	3877	;# 
  2264     0F26                     CLC3SEL0        equ	3878	;# 
  2265     0F27                     CLC3SEL1        equ	3879	;# 
  2266     0F28                     CLC3SEL2        equ	3880	;# 
  2267     0F29                     CLC3SEL3        equ	3881	;# 
  2268     0F2A                     CLC3GLS0        equ	3882	;# 
  2269     0F2B                     CLC3GLS1        equ	3883	;# 
  2270     0F2C                     CLC3GLS2        equ	3884	;# 
  2271     0F2D                     CLC3GLS3        equ	3885	;# 
  2272     0F2E                     CLC4CON         equ	3886	;# 
  2273     0F2F                     CLC4POL         equ	3887	;# 
  2274     0F30                     CLC4SEL0        equ	3888	;# 
  2275     0F31                     CLC4SEL1        equ	3889	;# 
  2276     0F32                     CLC4SEL2        equ	3890	;# 
  2277     0F33                     CLC4SEL3        equ	3891	;# 
  2278     0F34                     CLC4GLS0        equ	3892	;# 
  2279     0F35                     CLC4GLS1        equ	3893	;# 
  2280     0F36                     CLC4GLS2        equ	3894	;# 
  2281     0F37                     CLC4GLS3        equ	3895	;# 
  2282     0FE4                     STATUS_SHAD     equ	4068	;# 
  2283     0FE5                     WREG_SHAD       equ	4069	;# 
  2284     0FE6                     BSR_SHAD        equ	4070	;# 
  2285     0FE7                     PCLATH_SHAD     equ	4071	;# 
  2286     0FE8                     FSR0L_SHAD      equ	4072	;# 
  2287     0FE9                     FSR0H_SHAD      equ	4073	;# 
  2288     0FEA                     FSR1L_SHAD      equ	4074	;# 
  2289     0FEB                     FSR1H_SHAD      equ	4075	;# 
  2290     0FED                     STKPTR          equ	4077	;# 
  2291     0FEE                     TOSL            equ	4078	;# 
  2292     0FEF                     TOSH            equ	4079	;# 
  2293     0000                     INDF0           equ	0	;# 
  2294     0001                     INDF1           equ	1	;# 
  2295     0002                     PCL             equ	2	;# 
  2296     0003                     STATUS          equ	3	;# 
  2297     0004                     FSR0L           equ	4	;# 
  2298     0005                     FSR0H           equ	5	;# 
  2299     0006                     FSR1L           equ	6	;# 
  2300     0007                     FSR1H           equ	7	;# 
  2301     0008                     BSR             equ	8	;# 
  2302     0009                     WREG            equ	9	;# 
  2303     000A                     PCLATH          equ	10	;# 
  2304     000B                     INTCON          equ	11	;# 
  2305     000C                     PORTA           equ	12	;# 
  2306     000D                     PORTB           equ	13	;# 
  2307     000E                     PORTC           equ	14	;# 
  2308     0010                     PIR0            equ	16	;# 
  2309     0011                     PIR1            equ	17	;# 
  2310     0012                     PIR2            equ	18	;# 
  2311     0013                     PIR3            equ	19	;# 
  2312     0014                     PIR4            equ	20	;# 
  2313     0015                     TMR0L           equ	21	;# 
  2314     0015                     TMR0            equ	21	;# 
  2315     0016                     TMR0H           equ	22	;# 
  2316     0016                     PR0             equ	22	;# 
  2317     0017                     T0CON0          equ	23	;# 
  2318     0018                     T0CON1          equ	24	;# 
  2319     0019                     TMR1            equ	25	;# 
  2320     0019                     TMR1L           equ	25	;# 
  2321     001A                     TMR1H           equ	26	;# 
  2322     001B                     T1CON           equ	27	;# 
  2323     001C                     T1GCON          equ	28	;# 
  2324     001D                     TMR2            equ	29	;# 
  2325     001E                     PR2             equ	30	;# 
  2326     001F                     T2CON           equ	31	;# 
  2327     008C                     TRISA           equ	140	;# 
  2328     008D                     TRISB           equ	141	;# 
  2329     008E                     TRISC           equ	142	;# 
  2330     0090                     PIE0            equ	144	;# 
  2331     0091                     PIE1            equ	145	;# 
  2332     0092                     PIE2            equ	146	;# 
  2333     0093                     PIE3            equ	147	;# 
  2334     0094                     PIE4            equ	148	;# 
  2335     0097                     WDTCON          equ	151	;# 
  2336     009B                     ADRES           equ	155	;# 
  2337     009B                     ADRESL          equ	155	;# 
  2338     009C                     ADRESH          equ	156	;# 
  2339     009D                     ADCON0          equ	157	;# 
  2340     009E                     ADCON1          equ	158	;# 
  2341     009F                     ADACT           equ	159	;# 
  2342     010C                     LATA            equ	268	;# 
  2343     010D                     LATB            equ	269	;# 
  2344     010E                     LATC            equ	270	;# 
  2345     0111                     CM1CON0         equ	273	;# 
  2346     0112                     CM1CON1         equ	274	;# 
  2347     0113                     CM2CON0         equ	275	;# 
  2348     0114                     CM2CON1         equ	276	;# 
  2349     0115                     CMOUT           equ	277	;# 
  2350     0116                     BORCON          equ	278	;# 
  2351     0117                     FVRCON          equ	279	;# 
  2352     0118                     DACCON0         equ	280	;# 
  2353     0119                     DACCON1         equ	281	;# 
  2354     018C                     ANSELA          equ	396	;# 
  2355     018D                     ANSELB          equ	397	;# 
  2356     018E                     ANSELC          equ	398	;# 
  2357     0197                     VREGCON         equ	407	;# 
  2358     0199                     RC1REG          equ	409	;# 
  2359     0199                     RCREG           equ	409	;# 
  2360     0199                     RCREG1          equ	409	;# 
  2361     019A                     TX1REG          equ	410	;# 
  2362     019A                     TXREG1          equ	410	;# 
  2363     019A                     TXREG           equ	410	;# 
  2364     019B                     SP1BRG          equ	411	;# 
  2365     019B                     SPBRG           equ	411	;# 
  2366     019B                     SP1BRGL         equ	411	;# 
  2367     019B                     SPBRG1          equ	411	;# 
  2368     019B                     SPBRGL          equ	411	;# 
  2369     019C                     SP1BRGH         equ	412	;# 
  2370     019C                     SPBRGH          equ	412	;# 
  2371     019C                     SPBRGH1         equ	412	;# 
  2372     019D                     RC1STA          equ	413	;# 
  2373     019D                     RCSTA1          equ	413	;# 
  2374     019D                     RCSTA           equ	413	;# 
  2375     019E                     TX1STA          equ	414	;# 
  2376     019E                     TXSTA1          equ	414	;# 
  2377     019E                     TXSTA           equ	414	;# 
  2378     019F                     BAUD1CON        equ	415	;# 
  2379     019F                     BAUDCON1        equ	415	;# 
  2380     019F                     BAUDCTL1        equ	415	;# 
  2381     019F                     BAUDCON         equ	415	;# 
  2382     019F                     BAUDCTL         equ	415	;# 
  2383     020C                     WPUA            equ	524	;# 
  2384     020D                     WPUB            equ	525	;# 
  2385     020E                     WPUC            equ	526	;# 
  2386     0211                     SSP1BUF         equ	529	;# 
  2387     0211                     SSPBUF          equ	529	;# 
  2388     0212                     SSP1ADD         equ	530	;# 
  2389     0212                     SSPADD          equ	530	;# 
  2390     0213                     SSP1MSK         equ	531	;# 
  2391     0213                     SSPMSK          equ	531	;# 
  2392     0214                     SSP1STAT        equ	532	;# 
  2393     0214                     SSPSTAT         equ	532	;# 
  2394     0215                     SSP1CON1        equ	533	;# 
  2395     0215                     SSPCON          equ	533	;# 
  2396     0215                     SSPCON1         equ	533	;# 
  2397     0215                     SSP1CON         equ	533	;# 
  2398     0216                     SSP1CON2        equ	534	;# 
  2399     0216                     SSPCON2         equ	534	;# 
  2400     0217                     SSP1CON3        equ	535	;# 
  2401     0217                     SSPCON3         equ	535	;# 
  2402     0219                     SSP2BUF         equ	537	;# 
  2403     021A                     SSP2ADD         equ	538	;# 
  2404     021B                     SSP2MSK         equ	539	;# 
  2405     021C                     SSP2STAT        equ	540	;# 
  2406     021D                     SSP2CON1        equ	541	;# 
  2407     021D                     SSP2CON         equ	541	;# 
  2408     021E                     SSP2CON2        equ	542	;# 
  2409     021F                     SSP2CON3        equ	543	;# 
  2410     028C                     ODCONA          equ	652	;# 
  2411     028D                     ODCONB          equ	653	;# 
  2412     028E                     ODCONC          equ	654	;# 
  2413     0291                     CCPR1           equ	657	;# 
  2414     0291                     CCPR1L          equ	657	;# 
  2415     0292                     CCPR1H          equ	658	;# 
  2416     0293                     CCP1CON         equ	659	;# 
  2417     0294                     CCP1CAP         equ	660	;# 
  2418     0295                     CCPR2           equ	661	;# 
  2419     0295                     CCPR2L          equ	661	;# 
  2420     0296                     CCPR2H          equ	662	;# 
  2421     0297                     CCP2CON         equ	663	;# 
  2422     0298                     CCP2CAP         equ	664	;# 
  2423     029F                     CCPTMRS         equ	671	;# 
  2424     030C                     SLRCONA         equ	780	;# 
  2425     030D                     SLRCONB         equ	781	;# 
  2426     030E                     SLRCONC         equ	782	;# 
  2427     0311                     CCPR3           equ	785	;# 
  2428     0311                     CCPR3L          equ	785	;# 
  2429     0312                     CCPR3H          equ	786	;# 
  2430     0313                     CCP3CON         equ	787	;# 
  2431     0314                     CCP3CAP         equ	788	;# 
  2432     0315                     CCPR4           equ	789	;# 
  2433     0315                     CCPR4L          equ	789	;# 
  2434     0316                     CCPR4H          equ	790	;# 
  2435     0317                     CCP4CON         equ	791	;# 
  2436     0318                     CCP4CAP         equ	792	;# 
  2437     038C                     INLVLA          equ	908	;# 
  2438     038D                     INLVLB          equ	909	;# 
  2439     038E                     INLVLC          equ	910	;# 
  2440     0391                     IOCAP           equ	913	;# 
  2441     0392                     IOCAN           equ	914	;# 
  2442     0393                     IOCAF           equ	915	;# 
  2443     0394                     IOCBP           equ	916	;# 
  2444     0395                     IOCBN           equ	917	;# 
  2445     0396                     IOCBF           equ	918	;# 
  2446     0397                     IOCCP           equ	919	;# 
  2447     0398                     IOCCN           equ	920	;# 
  2448     0399                     IOCCF           equ	921	;# 
  2449     039A                     CLKRCON         equ	922	;# 
  2450     039C                     MDCON           equ	924	;# 
  2451     039D                     MDSRC           equ	925	;# 
  2452     039E                     MDCARH          equ	926	;# 
  2453     039F                     MDCARL          equ	927	;# 
  2454     0411                     TMR3            equ	1041	;# 
  2455     0411                     TMR3L           equ	1041	;# 
  2456     0412                     TMR3H           equ	1042	;# 
  2457     0413                     T3CON           equ	1043	;# 
  2458     0414                     T3GCON          equ	1044	;# 
  2459     0415                     TMR4            equ	1045	;# 
  2460     0416                     PR4             equ	1046	;# 
  2461     0417                     T4CON           equ	1047	;# 
  2462     0418                     TMR5            equ	1048	;# 
  2463     0418                     TMR5L           equ	1048	;# 
  2464     0419                     TMR5H           equ	1049	;# 
  2465     041A                     T5CON           equ	1050	;# 
  2466     041B                     T5GCON          equ	1051	;# 
  2467     041C                     TMR6            equ	1052	;# 
  2468     041D                     PR6             equ	1053	;# 
  2469     041E                     T6CON           equ	1054	;# 
  2470     041F                     CCDCON          equ	1055	;# 
  2471     0498                     NCO1ACC         equ	1176	;# 
  2472     0498                     NCO1ACCL        equ	1176	;# 
  2473     0499                     NCO1ACCH        equ	1177	;# 
  2474     049A                     NCO1ACCU        equ	1178	;# 
  2475     049B                     NCO1INC         equ	1179	;# 
  2476     049B                     NCO1INCL        equ	1179	;# 
  2477     049C                     NCO1INCH        equ	1180	;# 
  2478     049D                     NCO1INCU        equ	1181	;# 
  2479     049E                     NCO1CON         equ	1182	;# 
  2480     049F                     NCO1CLK         equ	1183	;# 
  2481     0617                     PWM5DCL         equ	1559	;# 
  2482     0618                     PWM5DCH         equ	1560	;# 
  2483     0619                     PWM5CON         equ	1561	;# 
  2484     0619                     PWM5CON0        equ	1561	;# 
  2485     061A                     PWM6DCL         equ	1562	;# 
  2486     061B                     PWM6DCH         equ	1563	;# 
  2487     061C                     PWM6CON         equ	1564	;# 
  2488     061C                     PWM6CON0        equ	1564	;# 
  2489     061F                     PWMTMRS         equ	1567	;# 
  2490     0691                     CWG1CLKCON      equ	1681	;# 
  2491     0692                     CWG1DAT         equ	1682	;# 
  2492     0693                     CWG1DBR         equ	1683	;# 
  2493     0694                     CWG1DBF         equ	1684	;# 
  2494     0695                     CWG1CON0        equ	1685	;# 
  2495     0696                     CWG1CON1        equ	1686	;# 
  2496     0697                     CWG1AS0         equ	1687	;# 
  2497     0698                     CWG1AS1         equ	1688	;# 
  2498     0699                     CWG1STR         equ	1689	;# 
  2499     0711                     CWG2CLKCON      equ	1809	;# 
  2500     0712                     CWG2DAT         equ	1810	;# 
  2501     0713                     CWG2DBR         equ	1811	;# 
  2502     0714                     CWG2DBF         equ	1812	;# 
  2503     0715                     CWG2CON0        equ	1813	;# 
  2504     0716                     CWG2CON1        equ	1814	;# 
  2505     0717                     CWG2AS0         equ	1815	;# 
  2506     0718                     CWG2AS1         equ	1816	;# 
  2507     0719                     CWG2STR         equ	1817	;# 
  2508     0891                     NVMADR          equ	2193	;# 
  2509     0891                     EEADR           equ	2193	;# 
  2510     0891                     PMADR           equ	2193	;# 
  2511     0891                     NVMADRL         equ	2193	;# 
  2512     0891                     EEADRL          equ	2193	;# 
  2513     0891                     PMADRL          equ	2193	;# 
  2514     0892                     NVMADRH         equ	2194	;# 
  2515     0892                     EEADRH          equ	2194	;# 
  2516     0892                     PMADRH          equ	2194	;# 
  2517     0893                     NVMDAT          equ	2195	;# 
  2518     0893                     EEDAT           equ	2195	;# 
  2519     0893                     PMDAT           equ	2195	;# 
  2520     0893                     NVMDATL         equ	2195	;# 
  2521     0893                     EEDATL          equ	2195	;# 
  2522     0893                     PMDATL          equ	2195	;# 
  2523     0894                     NVMDATH         equ	2196	;# 
  2524     0894                     EEDATH          equ	2196	;# 
  2525     0894                     PMDATH          equ	2196	;# 
  2526     0895                     NVMCON1         equ	2197	;# 
  2527     0895                     EECON1          equ	2197	;# 
  2528     0895                     PMCON1          equ	2197	;# 
  2529     0896                     NVMCON2         equ	2198	;# 
  2530     0896                     EECON2          equ	2198	;# 
  2531     0896                     PMCON2          equ	2198	;# 
  2532     089B                     PCON0           equ	2203	;# 
  2533     0911                     PMD0            equ	2321	;# 
  2534     0912                     PMD1            equ	2322	;# 
  2535     0913                     PMD2            equ	2323	;# 
  2536     0914                     PMD3            equ	2324	;# 
  2537     0915                     PMD4            equ	2325	;# 
  2538     0916                     PMD5            equ	2326	;# 
  2539     0918                     CPUDOZE         equ	2328	;# 
  2540     0919                     OSCCON1         equ	2329	;# 
  2541     091A                     OSCCON2         equ	2330	;# 
  2542     091B                     OSCCON3         equ	2331	;# 
  2543     091C                     OSCSTAT1        equ	2332	;# 
  2544     091D                     OSCEN           equ	2333	;# 
  2545     091E                     OSCTUNE         equ	2334	;# 
  2546     091F                     OSCFRQ          equ	2335	;# 
  2547     0E0F                     PPSLOCK         equ	3599	;# 
  2548     0E10                     INTPPS          equ	3600	;# 
  2549     0E11                     T0CKIPPS        equ	3601	;# 
  2550     0E12                     T1CKIPPS        equ	3602	;# 
  2551     0E13                     T1GPPS          equ	3603	;# 
  2552     0E14                     CCP1PPS         equ	3604	;# 
  2553     0E15                     CCP2PPS         equ	3605	;# 
  2554     0E16                     CCP3PPS         equ	3606	;# 
  2555     0E17                     CCP4PPS         equ	3607	;# 
  2556     0E18                     CWG1PPS         equ	3608	;# 
  2557     0E19                     CWG2PPS         equ	3609	;# 
  2558     0E1A                     MDCIN1PPS       equ	3610	;# 
  2559     0E1B                     MDCIN2PPS       equ	3611	;# 
  2560     0E1C                     MDMINPPS        equ	3612	;# 
  2561     0E1D                     SSP2CLKPPS      equ	3613	;# 
  2562     0E1E                     SSP2DATPPS      equ	3614	;# 
  2563     0E1F                     SSP2SSPPS       equ	3615	;# 
  2564     0E20                     SSP1CLKPPS      equ	3616	;# 
  2565     0E21                     SSP1DATPPS      equ	3617	;# 
  2566     0E22                     SSP1SSPPS       equ	3618	;# 
  2567     0E24                     RXPPS           equ	3620	;# 
  2568     0E25                     TXPPS           equ	3621	;# 
  2569     0E28                     CLCIN0PPS       equ	3624	;# 
  2570     0E29                     CLCIN1PPS       equ	3625	;# 
  2571     0E2A                     CLCIN2PPS       equ	3626	;# 
  2572     0E2B                     CLCIN3PPS       equ	3627	;# 
  2573     0E2C                     T3CKIPPS        equ	3628	;# 
  2574     0E2D                     T3GPPS          equ	3629	;# 
  2575     0E2E                     T5CKIPPS        equ	3630	;# 
  2576     0E2F                     T5GPPS          equ	3631	;# 
  2577     0E90                     RA0PPS          equ	3728	;# 
  2578     0E91                     RA1PPS          equ	3729	;# 
  2579     0E92                     RA2PPS          equ	3730	;# 
  2580     0E94                     RA4PPS          equ	3732	;# 
  2581     0E95                     RA5PPS          equ	3733	;# 
  2582     0E9C                     RB4PPS          equ	3740	;# 
  2583     0E9D                     RB5PPS          equ	3741	;# 
  2584     0E9E                     RB6PPS          equ	3742	;# 
  2585     0E9F                     RB7PPS          equ	3743	;# 
  2586     0EA0                     RC0PPS          equ	3744	;# 
  2587     0EA1                     RC1PPS          equ	3745	;# 
  2588     0EA2                     RC2PPS          equ	3746	;# 
  2589     0EA3                     RC3PPS          equ	3747	;# 
  2590     0EA4                     RC4PPS          equ	3748	;# 
  2591     0EA5                     RC5PPS          equ	3749	;# 
  2592     0EA6                     RC6PPS          equ	3750	;# 
  2593     0EA7                     RC7PPS          equ	3751	;# 
  2594     0F0F                     CLCDATA         equ	3855	;# 
  2595     0F10                     CLC1CON         equ	3856	;# 
  2596     0F11                     CLC1POL         equ	3857	;# 
  2597     0F12                     CLC1SEL0        equ	3858	;# 
  2598     0F13                     CLC1SEL1        equ	3859	;# 
  2599     0F14                     CLC1SEL2        equ	3860	;# 
  2600     0F15                     CLC1SEL3        equ	3861	;# 
  2601     0F16                     CLC1GLS0        equ	3862	;# 
  2602     0F17                     CLC1GLS1        equ	3863	;# 
  2603     0F18                     CLC1GLS2        equ	3864	;# 
  2604     0F19                     CLC1GLS3        equ	3865	;# 
  2605     0F1A                     CLC2CON         equ	3866	;# 
  2606     0F1B                     CLC2POL         equ	3867	;# 
  2607     0F1C                     CLC2SEL0        equ	3868	;# 
  2608     0F1D                     CLC2SEL1        equ	3869	;# 
  2609     0F1E                     CLC2SEL2        equ	3870	;# 
  2610     0F1F                     CLC2SEL3        equ	3871	;# 
  2611     0F20                     CLC2GLS0        equ	3872	;# 
  2612     0F21                     CLC2GLS1        equ	3873	;# 
  2613     0F22                     CLC2GLS2        equ	3874	;# 
  2614     0F23                     CLC2GLS3        equ	3875	;# 
  2615     0F24                     CLC3CON         equ	3876	;# 
  2616     0F25                     CLC3POL         equ	3877	;# 
  2617     0F26                     CLC3SEL0        equ	3878	;# 
  2618     0F27                     CLC3SEL1        equ	3879	;# 
  2619     0F28                     CLC3SEL2        equ	3880	;# 
  2620     0F29                     CLC3SEL3        equ	3881	;# 
  2621     0F2A                     CLC3GLS0        equ	3882	;# 
  2622     0F2B                     CLC3GLS1        equ	3883	;# 
  2623     0F2C                     CLC3GLS2        equ	3884	;# 
  2624     0F2D                     CLC3GLS3        equ	3885	;# 
  2625     0F2E                     CLC4CON         equ	3886	;# 
  2626     0F2F                     CLC4POL         equ	3887	;# 
  2627     0F30                     CLC4SEL0        equ	3888	;# 
  2628     0F31                     CLC4SEL1        equ	3889	;# 
  2629     0F32                     CLC4SEL2        equ	3890	;# 
  2630     0F33                     CLC4SEL3        equ	3891	;# 
  2631     0F34                     CLC4GLS0        equ	3892	;# 
  2632     0F35                     CLC4GLS1        equ	3893	;# 
  2633     0F36                     CLC4GLS2        equ	3894	;# 
  2634     0F37                     CLC4GLS3        equ	3895	;# 
  2635     0FE4                     STATUS_SHAD     equ	4068	;# 
  2636     0FE5                     WREG_SHAD       equ	4069	;# 
  2637     0FE6                     BSR_SHAD        equ	4070	;# 
  2638     0FE7                     PCLATH_SHAD     equ	4071	;# 
  2639     0FE8                     FSR0L_SHAD      equ	4072	;# 
  2640     0FE9                     FSR0H_SHAD      equ	4073	;# 
  2641     0FEA                     FSR1L_SHAD      equ	4074	;# 
  2642     0FEB                     FSR1H_SHAD      equ	4075	;# 
  2643     0FED                     STKPTR          equ	4077	;# 
  2644     0FEE                     TOSL            equ	4078	;# 
  2645     0FEF                     TOSH            equ	4079	;# 
  2646     0000                     INDF0           equ	0	;# 
  2647     0001                     INDF1           equ	1	;# 
  2648     0002                     PCL             equ	2	;# 
  2649     0003                     STATUS          equ	3	;# 
  2650     0004                     FSR0L           equ	4	;# 
  2651     0005                     FSR0H           equ	5	;# 
  2652     0006                     FSR1L           equ	6	;# 
  2653     0007                     FSR1H           equ	7	;# 
  2654     0008                     BSR             equ	8	;# 
  2655     0009                     WREG            equ	9	;# 
  2656     000A                     PCLATH          equ	10	;# 
  2657     000B                     INTCON          equ	11	;# 
  2658     000C                     PORTA           equ	12	;# 
  2659     000D                     PORTB           equ	13	;# 
  2660     000E                     PORTC           equ	14	;# 
  2661     0010                     PIR0            equ	16	;# 
  2662     0011                     PIR1            equ	17	;# 
  2663     0012                     PIR2            equ	18	;# 
  2664     0013                     PIR3            equ	19	;# 
  2665     0014                     PIR4            equ	20	;# 
  2666     0015                     TMR0L           equ	21	;# 
  2667     0015                     TMR0            equ	21	;# 
  2668     0016                     TMR0H           equ	22	;# 
  2669     0016                     PR0             equ	22	;# 
  2670     0017                     T0CON0          equ	23	;# 
  2671     0018                     T0CON1          equ	24	;# 
  2672     0019                     TMR1            equ	25	;# 
  2673     0019                     TMR1L           equ	25	;# 
  2674     001A                     TMR1H           equ	26	;# 
  2675     001B                     T1CON           equ	27	;# 
  2676     001C                     T1GCON          equ	28	;# 
  2677     001D                     TMR2            equ	29	;# 
  2678     001E                     PR2             equ	30	;# 
  2679     001F                     T2CON           equ	31	;# 
  2680     008C                     TRISA           equ	140	;# 
  2681     008D                     TRISB           equ	141	;# 
  2682     008E                     TRISC           equ	142	;# 
  2683     0090                     PIE0            equ	144	;# 
  2684     0091                     PIE1            equ	145	;# 
  2685     0092                     PIE2            equ	146	;# 
  2686     0093                     PIE3            equ	147	;# 
  2687     0094                     PIE4            equ	148	;# 
  2688     0097                     WDTCON          equ	151	;# 
  2689     009B                     ADRES           equ	155	;# 
  2690     009B                     ADRESL          equ	155	;# 
  2691     009C                     ADRESH          equ	156	;# 
  2692     009D                     ADCON0          equ	157	;# 
  2693     009E                     ADCON1          equ	158	;# 
  2694     009F                     ADACT           equ	159	;# 
  2695     010C                     LATA            equ	268	;# 
  2696     010D                     LATB            equ	269	;# 
  2697     010E                     LATC            equ	270	;# 
  2698     0111                     CM1CON0         equ	273	;# 
  2699     0112                     CM1CON1         equ	274	;# 
  2700     0113                     CM2CON0         equ	275	;# 
  2701     0114                     CM2CON1         equ	276	;# 
  2702     0115                     CMOUT           equ	277	;# 
  2703     0116                     BORCON          equ	278	;# 
  2704     0117                     FVRCON          equ	279	;# 
  2705     0118                     DACCON0         equ	280	;# 
  2706     0119                     DACCON1         equ	281	;# 
  2707     018C                     ANSELA          equ	396	;# 
  2708     018D                     ANSELB          equ	397	;# 
  2709     018E                     ANSELC          equ	398	;# 
  2710     0197                     VREGCON         equ	407	;# 
  2711     0199                     RC1REG          equ	409	;# 
  2712     0199                     RCREG           equ	409	;# 
  2713     0199                     RCREG1          equ	409	;# 
  2714     019A                     TX1REG          equ	410	;# 
  2715     019A                     TXREG1          equ	410	;# 
  2716     019A                     TXREG           equ	410	;# 
  2717     019B                     SP1BRG          equ	411	;# 
  2718     019B                     SPBRG           equ	411	;# 
  2719     019B                     SP1BRGL         equ	411	;# 
  2720     019B                     SPBRG1          equ	411	;# 
  2721     019B                     SPBRGL          equ	411	;# 
  2722     019C                     SP1BRGH         equ	412	;# 
  2723     019C                     SPBRGH          equ	412	;# 
  2724     019C                     SPBRGH1         equ	412	;# 
  2725     019D                     RC1STA          equ	413	;# 
  2726     019D                     RCSTA1          equ	413	;# 
  2727     019D                     RCSTA           equ	413	;# 
  2728     019E                     TX1STA          equ	414	;# 
  2729     019E                     TXSTA1          equ	414	;# 
  2730     019E                     TXSTA           equ	414	;# 
  2731     019F                     BAUD1CON        equ	415	;# 
  2732     019F                     BAUDCON1        equ	415	;# 
  2733     019F                     BAUDCTL1        equ	415	;# 
  2734     019F                     BAUDCON         equ	415	;# 
  2735     019F                     BAUDCTL         equ	415	;# 
  2736     020C                     WPUA            equ	524	;# 
  2737     020D                     WPUB            equ	525	;# 
  2738     020E                     WPUC            equ	526	;# 
  2739     0211                     SSP1BUF         equ	529	;# 
  2740     0211                     SSPBUF          equ	529	;# 
  2741     0212                     SSP1ADD         equ	530	;# 
  2742     0212                     SSPADD          equ	530	;# 
  2743     0213                     SSP1MSK         equ	531	;# 
  2744     0213                     SSPMSK          equ	531	;# 
  2745     0214                     SSP1STAT        equ	532	;# 
  2746     0214                     SSPSTAT         equ	532	;# 
  2747     0215                     SSP1CON1        equ	533	;# 
  2748     0215                     SSPCON          equ	533	;# 
  2749     0215                     SSPCON1         equ	533	;# 
  2750     0215                     SSP1CON         equ	533	;# 
  2751     0216                     SSP1CON2        equ	534	;# 
  2752     0216                     SSPCON2         equ	534	;# 
  2753     0217                     SSP1CON3        equ	535	;# 
  2754     0217                     SSPCON3         equ	535	;# 
  2755     0219                     SSP2BUF         equ	537	;# 
  2756     021A                     SSP2ADD         equ	538	;# 
  2757     021B                     SSP2MSK         equ	539	;# 
  2758     021C                     SSP2STAT        equ	540	;# 
  2759     021D                     SSP2CON1        equ	541	;# 
  2760     021D                     SSP2CON         equ	541	;# 
  2761     021E                     SSP2CON2        equ	542	;# 
  2762     021F                     SSP2CON3        equ	543	;# 
  2763     028C                     ODCONA          equ	652	;# 
  2764     028D                     ODCONB          equ	653	;# 
  2765     028E                     ODCONC          equ	654	;# 
  2766     0291                     CCPR1           equ	657	;# 
  2767     0291                     CCPR1L          equ	657	;# 
  2768     0292                     CCPR1H          equ	658	;# 
  2769     0293                     CCP1CON         equ	659	;# 
  2770     0294                     CCP1CAP         equ	660	;# 
  2771     0295                     CCPR2           equ	661	;# 
  2772     0295                     CCPR2L          equ	661	;# 
  2773     0296                     CCPR2H          equ	662	;# 
  2774     0297                     CCP2CON         equ	663	;# 
  2775     0298                     CCP2CAP         equ	664	;# 
  2776     029F                     CCPTMRS         equ	671	;# 
  2777     030C                     SLRCONA         equ	780	;# 
  2778     030D                     SLRCONB         equ	781	;# 
  2779     030E                     SLRCONC         equ	782	;# 
  2780     0311                     CCPR3           equ	785	;# 
  2781     0311                     CCPR3L          equ	785	;# 
  2782     0312                     CCPR3H          equ	786	;# 
  2783     0313                     CCP3CON         equ	787	;# 
  2784     0314                     CCP3CAP         equ	788	;# 
  2785     0315                     CCPR4           equ	789	;# 
  2786     0315                     CCPR4L          equ	789	;# 
  2787     0316                     CCPR4H          equ	790	;# 
  2788     0317                     CCP4CON         equ	791	;# 
  2789     0318                     CCP4CAP         equ	792	;# 
  2790     038C                     INLVLA          equ	908	;# 
  2791     038D                     INLVLB          equ	909	;# 
  2792     038E                     INLVLC          equ	910	;# 
  2793     0391                     IOCAP           equ	913	;# 
  2794     0392                     IOCAN           equ	914	;# 
  2795     0393                     IOCAF           equ	915	;# 
  2796     0394                     IOCBP           equ	916	;# 
  2797     0395                     IOCBN           equ	917	;# 
  2798     0396                     IOCBF           equ	918	;# 
  2799     0397                     IOCCP           equ	919	;# 
  2800     0398                     IOCCN           equ	920	;# 
  2801     0399                     IOCCF           equ	921	;# 
  2802     039A                     CLKRCON         equ	922	;# 
  2803     039C                     MDCON           equ	924	;# 
  2804     039D                     MDSRC           equ	925	;# 
  2805     039E                     MDCARH          equ	926	;# 
  2806     039F                     MDCARL          equ	927	;# 
  2807     0411                     TMR3            equ	1041	;# 
  2808     0411                     TMR3L           equ	1041	;# 
  2809     0412                     TMR3H           equ	1042	;# 
  2810     0413                     T3CON           equ	1043	;# 
  2811     0414                     T3GCON          equ	1044	;# 
  2812     0415                     TMR4            equ	1045	;# 
  2813     0416                     PR4             equ	1046	;# 
  2814     0417                     T4CON           equ	1047	;# 
  2815     0418                     TMR5            equ	1048	;# 
  2816     0418                     TMR5L           equ	1048	;# 
  2817     0419                     TMR5H           equ	1049	;# 
  2818     041A                     T5CON           equ	1050	;# 
  2819     041B                     T5GCON          equ	1051	;# 
  2820     041C                     TMR6            equ	1052	;# 
  2821     041D                     PR6             equ	1053	;# 
  2822     041E                     T6CON           equ	1054	;# 
  2823     041F                     CCDCON          equ	1055	;# 
  2824     0498                     NCO1ACC         equ	1176	;# 
  2825     0498                     NCO1ACCL        equ	1176	;# 
  2826     0499                     NCO1ACCH        equ	1177	;# 
  2827     049A                     NCO1ACCU        equ	1178	;# 
  2828     049B                     NCO1INC         equ	1179	;# 
  2829     049B                     NCO1INCL        equ	1179	;# 
  2830     049C                     NCO1INCH        equ	1180	;# 
  2831     049D                     NCO1INCU        equ	1181	;# 
  2832     049E                     NCO1CON         equ	1182	;# 
  2833     049F                     NCO1CLK         equ	1183	;# 
  2834     0617                     PWM5DCL         equ	1559	;# 
  2835     0618                     PWM5DCH         equ	1560	;# 
  2836     0619                     PWM5CON         equ	1561	;# 
  2837     0619                     PWM5CON0        equ	1561	;# 
  2838     061A                     PWM6DCL         equ	1562	;# 
  2839     061B                     PWM6DCH         equ	1563	;# 
  2840     061C                     PWM6CON         equ	1564	;# 
  2841     061C                     PWM6CON0        equ	1564	;# 
  2842     061F                     PWMTMRS         equ	1567	;# 
  2843     0691                     CWG1CLKCON      equ	1681	;# 
  2844     0692                     CWG1DAT         equ	1682	;# 
  2845     0693                     CWG1DBR         equ	1683	;# 
  2846     0694                     CWG1DBF         equ	1684	;# 
  2847     0695                     CWG1CON0        equ	1685	;# 
  2848     0696                     CWG1CON1        equ	1686	;# 
  2849     0697                     CWG1AS0         equ	1687	;# 
  2850     0698                     CWG1AS1         equ	1688	;# 
  2851     0699                     CWG1STR         equ	1689	;# 
  2852     0711                     CWG2CLKCON      equ	1809	;# 
  2853     0712                     CWG2DAT         equ	1810	;# 
  2854     0713                     CWG2DBR         equ	1811	;# 
  2855     0714                     CWG2DBF         equ	1812	;# 
  2856     0715                     CWG2CON0        equ	1813	;# 
  2857     0716                     CWG2CON1        equ	1814	;# 
  2858     0717                     CWG2AS0         equ	1815	;# 
  2859     0718                     CWG2AS1         equ	1816	;# 
  2860     0719                     CWG2STR         equ	1817	;# 
  2861     0891                     NVMADR          equ	2193	;# 
  2862     0891                     EEADR           equ	2193	;# 
  2863     0891                     PMADR           equ	2193	;# 
  2864     0891                     NVMADRL         equ	2193	;# 
  2865     0891                     EEADRL          equ	2193	;# 
  2866     0891                     PMADRL          equ	2193	;# 
  2867     0892                     NVMADRH         equ	2194	;# 
  2868     0892                     EEADRH          equ	2194	;# 
  2869     0892                     PMADRH          equ	2194	;# 
  2870     0893                     NVMDAT          equ	2195	;# 
  2871     0893                     EEDAT           equ	2195	;# 
  2872     0893                     PMDAT           equ	2195	;# 
  2873     0893                     NVMDATL         equ	2195	;# 
  2874     0893                     EEDATL          equ	2195	;# 
  2875     0893                     PMDATL          equ	2195	;# 
  2876     0894                     NVMDATH         equ	2196	;# 
  2877     0894                     EEDATH          equ	2196	;# 
  2878     0894                     PMDATH          equ	2196	;# 
  2879     0895                     NVMCON1         equ	2197	;# 
  2880     0895                     EECON1          equ	2197	;# 
  2881     0895                     PMCON1          equ	2197	;# 
  2882     0896                     NVMCON2         equ	2198	;# 
  2883     0896                     EECON2          equ	2198	;# 
  2884     0896                     PMCON2          equ	2198	;# 
  2885     089B                     PCON0           equ	2203	;# 
  2886     0911                     PMD0            equ	2321	;# 
  2887     0912                     PMD1            equ	2322	;# 
  2888     0913                     PMD2            equ	2323	;# 
  2889     0914                     PMD3            equ	2324	;# 
  2890     0915                     PMD4            equ	2325	;# 
  2891     0916                     PMD5            equ	2326	;# 
  2892     0918                     CPUDOZE         equ	2328	;# 
  2893     0919                     OSCCON1         equ	2329	;# 
  2894     091A                     OSCCON2         equ	2330	;# 
  2895     091B                     OSCCON3         equ	2331	;# 
  2896     091C                     OSCSTAT1        equ	2332	;# 
  2897     091D                     OSCEN           equ	2333	;# 
  2898     091E                     OSCTUNE         equ	2334	;# 
  2899     091F                     OSCFRQ          equ	2335	;# 
  2900     0E0F                     PPSLOCK         equ	3599	;# 
  2901     0E10                     INTPPS          equ	3600	;# 
  2902     0E11                     T0CKIPPS        equ	3601	;# 
  2903     0E12                     T1CKIPPS        equ	3602	;# 
  2904     0E13                     T1GPPS          equ	3603	;# 
  2905     0E14                     CCP1PPS         equ	3604	;# 
  2906     0E15                     CCP2PPS         equ	3605	;# 
  2907     0E16                     CCP3PPS         equ	3606	;# 
  2908     0E17                     CCP4PPS         equ	3607	;# 
  2909     0E18                     CWG1PPS         equ	3608	;# 
  2910     0E19                     CWG2PPS         equ	3609	;# 
  2911     0E1A                     MDCIN1PPS       equ	3610	;# 
  2912     0E1B                     MDCIN2PPS       equ	3611	;# 
  2913     0E1C                     MDMINPPS        equ	3612	;# 
  2914     0E1D                     SSP2CLKPPS      equ	3613	;# 
  2915     0E1E                     SSP2DATPPS      equ	3614	;# 
  2916     0E1F                     SSP2SSPPS       equ	3615	;# 
  2917     0E20                     SSP1CLKPPS      equ	3616	;# 
  2918     0E21                     SSP1DATPPS      equ	3617	;# 
  2919     0E22                     SSP1SSPPS       equ	3618	;# 
  2920     0E24                     RXPPS           equ	3620	;# 
  2921     0E25                     TXPPS           equ	3621	;# 
  2922     0E28                     CLCIN0PPS       equ	3624	;# 
  2923     0E29                     CLCIN1PPS       equ	3625	;# 
  2924     0E2A                     CLCIN2PPS       equ	3626	;# 
  2925     0E2B                     CLCIN3PPS       equ	3627	;# 
  2926     0E2C                     T3CKIPPS        equ	3628	;# 
  2927     0E2D                     T3GPPS          equ	3629	;# 
  2928     0E2E                     T5CKIPPS        equ	3630	;# 
  2929     0E2F                     T5GPPS          equ	3631	;# 
  2930     0E90                     RA0PPS          equ	3728	;# 
  2931     0E91                     RA1PPS          equ	3729	;# 
  2932     0E92                     RA2PPS          equ	3730	;# 
  2933     0E94                     RA4PPS          equ	3732	;# 
  2934     0E95                     RA5PPS          equ	3733	;# 
  2935     0E9C                     RB4PPS          equ	3740	;# 
  2936     0E9D                     RB5PPS          equ	3741	;# 
  2937     0E9E                     RB6PPS          equ	3742	;# 
  2938     0E9F                     RB7PPS          equ	3743	;# 
  2939     0EA0                     RC0PPS          equ	3744	;# 
  2940     0EA1                     RC1PPS          equ	3745	;# 
  2941     0EA2                     RC2PPS          equ	3746	;# 
  2942     0EA3                     RC3PPS          equ	3747	;# 
  2943     0EA4                     RC4PPS          equ	3748	;# 
  2944     0EA5                     RC5PPS          equ	3749	;# 
  2945     0EA6                     RC6PPS          equ	3750	;# 
  2946     0EA7                     RC7PPS          equ	3751	;# 
  2947     0F0F                     CLCDATA         equ	3855	;# 
  2948     0F10                     CLC1CON         equ	3856	;# 
  2949     0F11                     CLC1POL         equ	3857	;# 
  2950     0F12                     CLC1SEL0        equ	3858	;# 
  2951     0F13                     CLC1SEL1        equ	3859	;# 
  2952     0F14                     CLC1SEL2        equ	3860	;# 
  2953     0F15                     CLC1SEL3        equ	3861	;# 
  2954     0F16                     CLC1GLS0        equ	3862	;# 
  2955     0F17                     CLC1GLS1        equ	3863	;# 
  2956     0F18                     CLC1GLS2        equ	3864	;# 
  2957     0F19                     CLC1GLS3        equ	3865	;# 
  2958     0F1A                     CLC2CON         equ	3866	;# 
  2959     0F1B                     CLC2POL         equ	3867	;# 
  2960     0F1C                     CLC2SEL0        equ	3868	;# 
  2961     0F1D                     CLC2SEL1        equ	3869	;# 
  2962     0F1E                     CLC2SEL2        equ	3870	;# 
  2963     0F1F                     CLC2SEL3        equ	3871	;# 
  2964     0F20                     CLC2GLS0        equ	3872	;# 
  2965     0F21                     CLC2GLS1        equ	3873	;# 
  2966     0F22                     CLC2GLS2        equ	3874	;# 
  2967     0F23                     CLC2GLS3        equ	3875	;# 
  2968     0F24                     CLC3CON         equ	3876	;# 
  2969     0F25                     CLC3POL         equ	3877	;# 
  2970     0F26                     CLC3SEL0        equ	3878	;# 
  2971     0F27                     CLC3SEL1        equ	3879	;# 
  2972     0F28                     CLC3SEL2        equ	3880	;# 
  2973     0F29                     CLC3SEL3        equ	3881	;# 
  2974     0F2A                     CLC3GLS0        equ	3882	;# 
  2975     0F2B                     CLC3GLS1        equ	3883	;# 
  2976     0F2C                     CLC3GLS2        equ	3884	;# 
  2977     0F2D                     CLC3GLS3        equ	3885	;# 
  2978     0F2E                     CLC4CON         equ	3886	;# 
  2979     0F2F                     CLC4POL         equ	3887	;# 
  2980     0F30                     CLC4SEL0        equ	3888	;# 
  2981     0F31                     CLC4SEL1        equ	3889	;# 
  2982     0F32                     CLC4SEL2        equ	3890	;# 
  2983     0F33                     CLC4SEL3        equ	3891	;# 
  2984     0F34                     CLC4GLS0        equ	3892	;# 
  2985     0F35                     CLC4GLS1        equ	3893	;# 
  2986     0F36                     CLC4GLS2        equ	3894	;# 
  2987     0F37                     CLC4GLS3        equ	3895	;# 
  2988     0FE4                     STATUS_SHAD     equ	4068	;# 
  2989     0FE5                     WREG_SHAD       equ	4069	;# 
  2990     0FE6                     BSR_SHAD        equ	4070	;# 
  2991     0FE7                     PCLATH_SHAD     equ	4071	;# 
  2992     0FE8                     FSR0L_SHAD      equ	4072	;# 
  2993     0FE9                     FSR0H_SHAD      equ	4073	;# 
  2994     0FEA                     FSR1L_SHAD      equ	4074	;# 
  2995     0FEB                     FSR1H_SHAD      equ	4075	;# 
  2996     0FED                     STKPTR          equ	4077	;# 
  2997     0FEE                     TOSL            equ	4078	;# 
  2998     0FEF                     TOSH            equ	4079	;# 
  2999     0000                     INDF0           equ	0	;# 
  3000     0001                     INDF1           equ	1	;# 
  3001     0002                     PCL             equ	2	;# 
  3002     0003                     STATUS          equ	3	;# 
  3003     0004                     FSR0L           equ	4	;# 
  3004     0005                     FSR0H           equ	5	;# 
  3005     0006                     FSR1L           equ	6	;# 
  3006     0007                     FSR1H           equ	7	;# 
  3007     0008                     BSR             equ	8	;# 
  3008     0009                     WREG            equ	9	;# 
  3009     000A                     PCLATH          equ	10	;# 
  3010     000B                     INTCON          equ	11	;# 
  3011     000C                     PORTA           equ	12	;# 
  3012     000D                     PORTB           equ	13	;# 
  3013     000E                     PORTC           equ	14	;# 
  3014     0010                     PIR0            equ	16	;# 
  3015     0011                     PIR1            equ	17	;# 
  3016     0012                     PIR2            equ	18	;# 
  3017     0013                     PIR3            equ	19	;# 
  3018     0014                     PIR4            equ	20	;# 
  3019     0015                     TMR0L           equ	21	;# 
  3020     0015                     TMR0            equ	21	;# 
  3021     0016                     TMR0H           equ	22	;# 
  3022     0016                     PR0             equ	22	;# 
  3023     0017                     T0CON0          equ	23	;# 
  3024     0018                     T0CON1          equ	24	;# 
  3025     0019                     TMR1            equ	25	;# 
  3026     0019                     TMR1L           equ	25	;# 
  3027     001A                     TMR1H           equ	26	;# 
  3028     001B                     T1CON           equ	27	;# 
  3029     001C                     T1GCON          equ	28	;# 
  3030     001D                     TMR2            equ	29	;# 
  3031     001E                     PR2             equ	30	;# 
  3032     001F                     T2CON           equ	31	;# 
  3033     008C                     TRISA           equ	140	;# 
  3034     008D                     TRISB           equ	141	;# 
  3035     008E                     TRISC           equ	142	;# 
  3036     0090                     PIE0            equ	144	;# 
  3037     0091                     PIE1            equ	145	;# 
  3038     0092                     PIE2            equ	146	;# 
  3039     0093                     PIE3            equ	147	;# 
  3040     0094                     PIE4            equ	148	;# 
  3041     0097                     WDTCON          equ	151	;# 
  3042     009B                     ADRES           equ	155	;# 
  3043     009B                     ADRESL          equ	155	;# 
  3044     009C                     ADRESH          equ	156	;# 
  3045     009D                     ADCON0          equ	157	;# 
  3046     009E                     ADCON1          equ	158	;# 
  3047     009F                     ADACT           equ	159	;# 
  3048     010C                     LATA            equ	268	;# 
  3049     010D                     LATB            equ	269	;# 
  3050     010E                     LATC            equ	270	;# 
  3051     0111                     CM1CON0         equ	273	;# 
  3052     0112                     CM1CON1         equ	274	;# 
  3053     0113                     CM2CON0         equ	275	;# 
  3054     0114                     CM2CON1         equ	276	;# 
  3055     0115                     CMOUT           equ	277	;# 
  3056     0116                     BORCON          equ	278	;# 
  3057     0117                     FVRCON          equ	279	;# 
  3058     0118                     DACCON0         equ	280	;# 
  3059     0119                     DACCON1         equ	281	;# 
  3060     018C                     ANSELA          equ	396	;# 
  3061     018D                     ANSELB          equ	397	;# 
  3062     018E                     ANSELC          equ	398	;# 
  3063     0197                     VREGCON         equ	407	;# 
  3064     0199                     RC1REG          equ	409	;# 
  3065     0199                     RCREG           equ	409	;# 
  3066     0199                     RCREG1          equ	409	;# 
  3067     019A                     TX1REG          equ	410	;# 
  3068     019A                     TXREG1          equ	410	;# 
  3069     019A                     TXREG           equ	410	;# 
  3070     019B                     SP1BRG          equ	411	;# 
  3071     019B                     SPBRG           equ	411	;# 
  3072     019B                     SP1BRGL         equ	411	;# 
  3073     019B                     SPBRG1          equ	411	;# 
  3074     019B                     SPBRGL          equ	411	;# 
  3075     019C                     SP1BRGH         equ	412	;# 
  3076     019C                     SPBRGH          equ	412	;# 
  3077     019C                     SPBRGH1         equ	412	;# 
  3078     019D                     RC1STA          equ	413	;# 
  3079     019D                     RCSTA1          equ	413	;# 
  3080     019D                     RCSTA           equ	413	;# 
  3081     019E                     TX1STA          equ	414	;# 
  3082     019E                     TXSTA1          equ	414	;# 
  3083     019E                     TXSTA           equ	414	;# 
  3084     019F                     BAUD1CON        equ	415	;# 
  3085     019F                     BAUDCON1        equ	415	;# 
  3086     019F                     BAUDCTL1        equ	415	;# 
  3087     019F                     BAUDCON         equ	415	;# 
  3088     019F                     BAUDCTL         equ	415	;# 
  3089     020C                     WPUA            equ	524	;# 
  3090     020D                     WPUB            equ	525	;# 
  3091     020E                     WPUC            equ	526	;# 
  3092     0211                     SSP1BUF         equ	529	;# 
  3093     0211                     SSPBUF          equ	529	;# 
  3094     0212                     SSP1ADD         equ	530	;# 
  3095     0212                     SSPADD          equ	530	;# 
  3096     0213                     SSP1MSK         equ	531	;# 
  3097     0213                     SSPMSK          equ	531	;# 
  3098     0214                     SSP1STAT        equ	532	;# 
  3099     0214                     SSPSTAT         equ	532	;# 
  3100     0215                     SSP1CON1        equ	533	;# 
  3101     0215                     SSPCON          equ	533	;# 
  3102     0215                     SSPCON1         equ	533	;# 
  3103     0215                     SSP1CON         equ	533	;# 
  3104     0216                     SSP1CON2        equ	534	;# 
  3105     0216                     SSPCON2         equ	534	;# 
  3106     0217                     SSP1CON3        equ	535	;# 
  3107     0217                     SSPCON3         equ	535	;# 
  3108     0219                     SSP2BUF         equ	537	;# 
  3109     021A                     SSP2ADD         equ	538	;# 
  3110     021B                     SSP2MSK         equ	539	;# 
  3111     021C                     SSP2STAT        equ	540	;# 
  3112     021D                     SSP2CON1        equ	541	;# 
  3113     021D                     SSP2CON         equ	541	;# 
  3114     021E                     SSP2CON2        equ	542	;# 
  3115     021F                     SSP2CON3        equ	543	;# 
  3116     028C                     ODCONA          equ	652	;# 
  3117     028D                     ODCONB          equ	653	;# 
  3118     028E                     ODCONC          equ	654	;# 
  3119     0291                     CCPR1           equ	657	;# 
  3120     0291                     CCPR1L          equ	657	;# 
  3121     0292                     CCPR1H          equ	658	;# 
  3122     0293                     CCP1CON         equ	659	;# 
  3123     0294                     CCP1CAP         equ	660	;# 
  3124     0295                     CCPR2           equ	661	;# 
  3125     0295                     CCPR2L          equ	661	;# 
  3126     0296                     CCPR2H          equ	662	;# 
  3127     0297                     CCP2CON         equ	663	;# 
  3128     0298                     CCP2CAP         equ	664	;# 
  3129     029F                     CCPTMRS         equ	671	;# 
  3130     030C                     SLRCONA         equ	780	;# 
  3131     030D                     SLRCONB         equ	781	;# 
  3132     030E                     SLRCONC         equ	782	;# 
  3133     0311                     CCPR3           equ	785	;# 
  3134     0311                     CCPR3L          equ	785	;# 
  3135     0312                     CCPR3H          equ	786	;# 
  3136     0313                     CCP3CON         equ	787	;# 
  3137     0314                     CCP3CAP         equ	788	;# 
  3138     0315                     CCPR4           equ	789	;# 
  3139     0315                     CCPR4L          equ	789	;# 
  3140     0316                     CCPR4H          equ	790	;# 
  3141     0317                     CCP4CON         equ	791	;# 
  3142     0318                     CCP4CAP         equ	792	;# 
  3143     038C                     INLVLA          equ	908	;# 
  3144     038D                     INLVLB          equ	909	;# 
  3145     038E                     INLVLC          equ	910	;# 
  3146     0391                     IOCAP           equ	913	;# 
  3147     0392                     IOCAN           equ	914	;# 
  3148     0393                     IOCAF           equ	915	;# 
  3149     0394                     IOCBP           equ	916	;# 
  3150     0395                     IOCBN           equ	917	;# 
  3151     0396                     IOCBF           equ	918	;# 
  3152     0397                     IOCCP           equ	919	;# 
  3153     0398                     IOCCN           equ	920	;# 
  3154     0399                     IOCCF           equ	921	;# 
  3155     039A                     CLKRCON         equ	922	;# 
  3156     039C                     MDCON           equ	924	;# 
  3157     039D                     MDSRC           equ	925	;# 
  3158     039E                     MDCARH          equ	926	;# 
  3159     039F                     MDCARL          equ	927	;# 
  3160     0411                     TMR3            equ	1041	;# 
  3161     0411                     TMR3L           equ	1041	;# 
  3162     0412                     TMR3H           equ	1042	;# 
  3163     0413                     T3CON           equ	1043	;# 
  3164     0414                     T3GCON          equ	1044	;# 
  3165     0415                     TMR4            equ	1045	;# 
  3166     0416                     PR4             equ	1046	;# 
  3167     0417                     T4CON           equ	1047	;# 
  3168     0418                     TMR5            equ	1048	;# 
  3169     0418                     TMR5L           equ	1048	;# 
  3170     0419                     TMR5H           equ	1049	;# 
  3171     041A                     T5CON           equ	1050	;# 
  3172     041B                     T5GCON          equ	1051	;# 
  3173     041C                     TMR6            equ	1052	;# 
  3174     041D                     PR6             equ	1053	;# 
  3175     041E                     T6CON           equ	1054	;# 
  3176     041F                     CCDCON          equ	1055	;# 
  3177     0498                     NCO1ACC         equ	1176	;# 
  3178     0498                     NCO1ACCL        equ	1176	;# 
  3179     0499                     NCO1ACCH        equ	1177	;# 
  3180     049A                     NCO1ACCU        equ	1178	;# 
  3181     049B                     NCO1INC         equ	1179	;# 
  3182     049B                     NCO1INCL        equ	1179	;# 
  3183     049C                     NCO1INCH        equ	1180	;# 
  3184     049D                     NCO1INCU        equ	1181	;# 
  3185     049E                     NCO1CON         equ	1182	;# 
  3186     049F                     NCO1CLK         equ	1183	;# 
  3187     0617                     PWM5DCL         equ	1559	;# 
  3188     0618                     PWM5DCH         equ	1560	;# 
  3189     0619                     PWM5CON         equ	1561	;# 
  3190     0619                     PWM5CON0        equ	1561	;# 
  3191     061A                     PWM6DCL         equ	1562	;# 
  3192     061B                     PWM6DCH         equ	1563	;# 
  3193     061C                     PWM6CON         equ	1564	;# 
  3194     061C                     PWM6CON0        equ	1564	;# 
  3195     061F                     PWMTMRS         equ	1567	;# 
  3196     0691                     CWG1CLKCON      equ	1681	;# 
  3197     0692                     CWG1DAT         equ	1682	;# 
  3198     0693                     CWG1DBR         equ	1683	;# 
  3199     0694                     CWG1DBF         equ	1684	;# 
  3200     0695                     CWG1CON0        equ	1685	;# 
  3201     0696                     CWG1CON1        equ	1686	;# 
  3202     0697                     CWG1AS0         equ	1687	;# 
  3203     0698                     CWG1AS1         equ	1688	;# 
  3204     0699                     CWG1STR         equ	1689	;# 
  3205     0711                     CWG2CLKCON      equ	1809	;# 
  3206     0712                     CWG2DAT         equ	1810	;# 
  3207     0713                     CWG2DBR         equ	1811	;# 
  3208     0714                     CWG2DBF         equ	1812	;# 
  3209     0715                     CWG2CON0        equ	1813	;# 
  3210     0716                     CWG2CON1        equ	1814	;# 
  3211     0717                     CWG2AS0         equ	1815	;# 
  3212     0718                     CWG2AS1         equ	1816	;# 
  3213     0719                     CWG2STR         equ	1817	;# 
  3214     0891                     NVMADR          equ	2193	;# 
  3215     0891                     EEADR           equ	2193	;# 
  3216     0891                     PMADR           equ	2193	;# 
  3217     0891                     NVMADRL         equ	2193	;# 
  3218     0891                     EEADRL          equ	2193	;# 
  3219     0891                     PMADRL          equ	2193	;# 
  3220     0892                     NVMADRH         equ	2194	;# 
  3221     0892                     EEADRH          equ	2194	;# 
  3222     0892                     PMADRH          equ	2194	;# 
  3223     0893                     NVMDAT          equ	2195	;# 
  3224     0893                     EEDAT           equ	2195	;# 
  3225     0893                     PMDAT           equ	2195	;# 
  3226     0893                     NVMDATL         equ	2195	;# 
  3227     0893                     EEDATL          equ	2195	;# 
  3228     0893                     PMDATL          equ	2195	;# 
  3229     0894                     NVMDATH         equ	2196	;# 
  3230     0894                     EEDATH          equ	2196	;# 
  3231     0894                     PMDATH          equ	2196	;# 
  3232     0895                     NVMCON1         equ	2197	;# 
  3233     0895                     EECON1          equ	2197	;# 
  3234     0895                     PMCON1          equ	2197	;# 
  3235     0896                     NVMCON2         equ	2198	;# 
  3236     0896                     EECON2          equ	2198	;# 
  3237     0896                     PMCON2          equ	2198	;# 
  3238     089B                     PCON0           equ	2203	;# 
  3239     0911                     PMD0            equ	2321	;# 
  3240     0912                     PMD1            equ	2322	;# 
  3241     0913                     PMD2            equ	2323	;# 
  3242     0914                     PMD3            equ	2324	;# 
  3243     0915                     PMD4            equ	2325	;# 
  3244     0916                     PMD5            equ	2326	;# 
  3245     0918                     CPUDOZE         equ	2328	;# 
  3246     0919                     OSCCON1         equ	2329	;# 
  3247     091A                     OSCCON2         equ	2330	;# 
  3248     091B                     OSCCON3         equ	2331	;# 
  3249     091C                     OSCSTAT1        equ	2332	;# 
  3250     091D                     OSCEN           equ	2333	;# 
  3251     091E                     OSCTUNE         equ	2334	;# 
  3252     091F                     OSCFRQ          equ	2335	;# 
  3253     0E0F                     PPSLOCK         equ	3599	;# 
  3254     0E10                     INTPPS          equ	3600	;# 
  3255     0E11                     T0CKIPPS        equ	3601	;# 
  3256     0E12                     T1CKIPPS        equ	3602	;# 
  3257     0E13                     T1GPPS          equ	3603	;# 
  3258     0E14                     CCP1PPS         equ	3604	;# 
  3259     0E15                     CCP2PPS         equ	3605	;# 
  3260     0E16                     CCP3PPS         equ	3606	;# 
  3261     0E17                     CCP4PPS         equ	3607	;# 
  3262     0E18                     CWG1PPS         equ	3608	;# 
  3263     0E19                     CWG2PPS         equ	3609	;# 
  3264     0E1A                     MDCIN1PPS       equ	3610	;# 
  3265     0E1B                     MDCIN2PPS       equ	3611	;# 
  3266     0E1C                     MDMINPPS        equ	3612	;# 
  3267     0E1D                     SSP2CLKPPS      equ	3613	;# 
  3268     0E1E                     SSP2DATPPS      equ	3614	;# 
  3269     0E1F                     SSP2SSPPS       equ	3615	;# 
  3270     0E20                     SSP1CLKPPS      equ	3616	;# 
  3271     0E21                     SSP1DATPPS      equ	3617	;# 
  3272     0E22                     SSP1SSPPS       equ	3618	;# 
  3273     0E24                     RXPPS           equ	3620	;# 
  3274     0E25                     TXPPS           equ	3621	;# 
  3275     0E28                     CLCIN0PPS       equ	3624	;# 
  3276     0E29                     CLCIN1PPS       equ	3625	;# 
  3277     0E2A                     CLCIN2PPS       equ	3626	;# 
  3278     0E2B                     CLCIN3PPS       equ	3627	;# 
  3279     0E2C                     T3CKIPPS        equ	3628	;# 
  3280     0E2D                     T3GPPS          equ	3629	;# 
  3281     0E2E                     T5CKIPPS        equ	3630	;# 
  3282     0E2F                     T5GPPS          equ	3631	;# 
  3283     0E90                     RA0PPS          equ	3728	;# 
  3284     0E91                     RA1PPS          equ	3729	;# 
  3285     0E92                     RA2PPS          equ	3730	;# 
  3286     0E94                     RA4PPS          equ	3732	;# 
  3287     0E95                     RA5PPS          equ	3733	;# 
  3288     0E9C                     RB4PPS          equ	3740	;# 
  3289     0E9D                     RB5PPS          equ	3741	;# 
  3290     0E9E                     RB6PPS          equ	3742	;# 
  3291     0E9F                     RB7PPS          equ	3743	;# 
  3292     0EA0                     RC0PPS          equ	3744	;# 
  3293     0EA1                     RC1PPS          equ	3745	;# 
  3294     0EA2                     RC2PPS          equ	3746	;# 
  3295     0EA3                     RC3PPS          equ	3747	;# 
  3296     0EA4                     RC4PPS          equ	3748	;# 
  3297     0EA5                     RC5PPS          equ	3749	;# 
  3298     0EA6                     RC6PPS          equ	3750	;# 
  3299     0EA7                     RC7PPS          equ	3751	;# 
  3300     0F0F                     CLCDATA         equ	3855	;# 
  3301     0F10                     CLC1CON         equ	3856	;# 
  3302     0F11                     CLC1POL         equ	3857	;# 
  3303     0F12                     CLC1SEL0        equ	3858	;# 
  3304     0F13                     CLC1SEL1        equ	3859	;# 
  3305     0F14                     CLC1SEL2        equ	3860	;# 
  3306     0F15                     CLC1SEL3        equ	3861	;# 
  3307     0F16                     CLC1GLS0        equ	3862	;# 
  3308     0F17                     CLC1GLS1        equ	3863	;# 
  3309     0F18                     CLC1GLS2        equ	3864	;# 
  3310     0F19                     CLC1GLS3        equ	3865	;# 
  3311     0F1A                     CLC2CON         equ	3866	;# 
  3312     0F1B                     CLC2POL         equ	3867	;# 
  3313     0F1C                     CLC2SEL0        equ	3868	;# 
  3314     0F1D                     CLC2SEL1        equ	3869	;# 
  3315     0F1E                     CLC2SEL2        equ	3870	;# 
  3316     0F1F                     CLC2SEL3        equ	3871	;# 
  3317     0F20                     CLC2GLS0        equ	3872	;# 
  3318     0F21                     CLC2GLS1        equ	3873	;# 
  3319     0F22                     CLC2GLS2        equ	3874	;# 
  3320     0F23                     CLC2GLS3        equ	3875	;# 
  3321     0F24                     CLC3CON         equ	3876	;# 
  3322     0F25                     CLC3POL         equ	3877	;# 
  3323     0F26                     CLC3SEL0        equ	3878	;# 
  3324     0F27                     CLC3SEL1        equ	3879	;# 
  3325     0F28                     CLC3SEL2        equ	3880	;# 
  3326     0F29                     CLC3SEL3        equ	3881	;# 
  3327     0F2A                     CLC3GLS0        equ	3882	;# 
  3328     0F2B                     CLC3GLS1        equ	3883	;# 
  3329     0F2C                     CLC3GLS2        equ	3884	;# 
  3330     0F2D                     CLC3GLS3        equ	3885	;# 
  3331     0F2E                     CLC4CON         equ	3886	;# 
  3332     0F2F                     CLC4POL         equ	3887	;# 
  3333     0F30                     CLC4SEL0        equ	3888	;# 
  3334     0F31                     CLC4SEL1        equ	3889	;# 
  3335     0F32                     CLC4SEL2        equ	3890	;# 
  3336     0F33                     CLC4SEL3        equ	3891	;# 
  3337     0F34                     CLC4GLS0        equ	3892	;# 
  3338     0F35                     CLC4GLS1        equ	3893	;# 
  3339     0F36                     CLC4GLS2        equ	3894	;# 
  3340     0F37                     CLC4GLS3        equ	3895	;# 
  3341     0FE4                     STATUS_SHAD     equ	4068	;# 
  3342     0FE5                     WREG_SHAD       equ	4069	;# 
  3343     0FE6                     BSR_SHAD        equ	4070	;# 
  3344     0FE7                     PCLATH_SHAD     equ	4071	;# 
  3345     0FE8                     FSR0L_SHAD      equ	4072	;# 
  3346     0FE9                     FSR0H_SHAD      equ	4073	;# 
  3347     0FEA                     FSR1L_SHAD      equ	4074	;# 
  3348     0FEB                     FSR1H_SHAD      equ	4075	;# 
  3349     0FED                     STKPTR          equ	4077	;# 
  3350     0FEE                     TOSL            equ	4078	;# 
  3351     0FEF                     TOSH            equ	4079	;# 
  3352     0000                     INDF0           equ	0	;# 
  3353     0001                     INDF1           equ	1	;# 
  3354     0002                     PCL             equ	2	;# 
  3355     0003                     STATUS          equ	3	;# 
  3356     0004                     FSR0L           equ	4	;# 
  3357     0005                     FSR0H           equ	5	;# 
  3358     0006                     FSR1L           equ	6	;# 
  3359     0007                     FSR1H           equ	7	;# 
  3360     0008                     BSR             equ	8	;# 
  3361     0009                     WREG            equ	9	;# 
  3362     000A                     PCLATH          equ	10	;# 
  3363     000B                     INTCON          equ	11	;# 
  3364     000C                     PORTA           equ	12	;# 
  3365     000D                     PORTB           equ	13	;# 
  3366     000E                     PORTC           equ	14	;# 
  3367     0010                     PIR0            equ	16	;# 
  3368     0011                     PIR1            equ	17	;# 
  3369     0012                     PIR2            equ	18	;# 
  3370     0013                     PIR3            equ	19	;# 
  3371     0014                     PIR4            equ	20	;# 
  3372     0015                     TMR0L           equ	21	;# 
  3373     0015                     TMR0            equ	21	;# 
  3374     0016                     TMR0H           equ	22	;# 
  3375     0016                     PR0             equ	22	;# 
  3376     0017                     T0CON0          equ	23	;# 
  3377     0018                     T0CON1          equ	24	;# 
  3378     0019                     TMR1            equ	25	;# 
  3379     0019                     TMR1L           equ	25	;# 
  3380     001A                     TMR1H           equ	26	;# 
  3381     001B                     T1CON           equ	27	;# 
  3382     001C                     T1GCON          equ	28	;# 
  3383     001D                     TMR2            equ	29	;# 
  3384     001E                     PR2             equ	30	;# 
  3385     001F                     T2CON           equ	31	;# 
  3386     008C                     TRISA           equ	140	;# 
  3387     008D                     TRISB           equ	141	;# 
  3388     008E                     TRISC           equ	142	;# 
  3389     0090                     PIE0            equ	144	;# 
  3390     0091                     PIE1            equ	145	;# 
  3391     0092                     PIE2            equ	146	;# 
  3392     0093                     PIE3            equ	147	;# 
  3393     0094                     PIE4            equ	148	;# 
  3394     0097                     WDTCON          equ	151	;# 
  3395     009B                     ADRES           equ	155	;# 
  3396     009B                     ADRESL          equ	155	;# 
  3397     009C                     ADRESH          equ	156	;# 
  3398     009D                     ADCON0          equ	157	;# 
  3399     009E                     ADCON1          equ	158	;# 
  3400     009F                     ADACT           equ	159	;# 
  3401     010C                     LATA            equ	268	;# 
  3402     010D                     LATB            equ	269	;# 
  3403     010E                     LATC            equ	270	;# 
  3404     0111                     CM1CON0         equ	273	;# 
  3405     0112                     CM1CON1         equ	274	;# 
  3406     0113                     CM2CON0         equ	275	;# 
  3407     0114                     CM2CON1         equ	276	;# 
  3408     0115                     CMOUT           equ	277	;# 
  3409     0116                     BORCON          equ	278	;# 
  3410     0117                     FVRCON          equ	279	;# 
  3411     0118                     DACCON0         equ	280	;# 
  3412     0119                     DACCON1         equ	281	;# 
  3413     018C                     ANSELA          equ	396	;# 
  3414     018D                     ANSELB          equ	397	;# 
  3415     018E                     ANSELC          equ	398	;# 
  3416     0197                     VREGCON         equ	407	;# 
  3417     0199                     RC1REG          equ	409	;# 
  3418     0199                     RCREG           equ	409	;# 
  3419     0199                     RCREG1          equ	409	;# 
  3420     019A                     TX1REG          equ	410	;# 
  3421     019A                     TXREG1          equ	410	;# 
  3422     019A                     TXREG           equ	410	;# 
  3423     019B                     SP1BRG          equ	411	;# 
  3424     019B                     SPBRG           equ	411	;# 
  3425     019B                     SP1BRGL         equ	411	;# 
  3426     019B                     SPBRG1          equ	411	;# 
  3427     019B                     SPBRGL          equ	411	;# 
  3428     019C                     SP1BRGH         equ	412	;# 
  3429     019C                     SPBRGH          equ	412	;# 
  3430     019C                     SPBRGH1         equ	412	;# 
  3431     019D                     RC1STA          equ	413	;# 
  3432     019D                     RCSTA1          equ	413	;# 
  3433     019D                     RCSTA           equ	413	;# 
  3434     019E                     TX1STA          equ	414	;# 
  3435     019E                     TXSTA1          equ	414	;# 
  3436     019E                     TXSTA           equ	414	;# 
  3437     019F                     BAUD1CON        equ	415	;# 
  3438     019F                     BAUDCON1        equ	415	;# 
  3439     019F                     BAUDCTL1        equ	415	;# 
  3440     019F                     BAUDCON         equ	415	;# 
  3441     019F                     BAUDCTL         equ	415	;# 
  3442     020C                     WPUA            equ	524	;# 
  3443     020D                     WPUB            equ	525	;# 
  3444     020E                     WPUC            equ	526	;# 
  3445     0211                     SSP1BUF         equ	529	;# 
  3446     0211                     SSPBUF          equ	529	;# 
  3447     0212                     SSP1ADD         equ	530	;# 
  3448     0212                     SSPADD          equ	530	;# 
  3449     0213                     SSP1MSK         equ	531	;# 
  3450     0213                     SSPMSK          equ	531	;# 
  3451     0214                     SSP1STAT        equ	532	;# 
  3452     0214                     SSPSTAT         equ	532	;# 
  3453     0215                     SSP1CON1        equ	533	;# 
  3454     0215                     SSPCON          equ	533	;# 
  3455     0215                     SSPCON1         equ	533	;# 
  3456     0215                     SSP1CON         equ	533	;# 
  3457     0216                     SSP1CON2        equ	534	;# 
  3458     0216                     SSPCON2         equ	534	;# 
  3459     0217                     SSP1CON3        equ	535	;# 
  3460     0217                     SSPCON3         equ	535	;# 
  3461     0219                     SSP2BUF         equ	537	;# 
  3462     021A                     SSP2ADD         equ	538	;# 
  3463     021B                     SSP2MSK         equ	539	;# 
  3464     021C                     SSP2STAT        equ	540	;# 
  3465     021D                     SSP2CON1        equ	541	;# 
  3466     021D                     SSP2CON         equ	541	;# 
  3467     021E                     SSP2CON2        equ	542	;# 
  3468     021F                     SSP2CON3        equ	543	;# 
  3469     028C                     ODCONA          equ	652	;# 
  3470     028D                     ODCONB          equ	653	;# 
  3471     028E                     ODCONC          equ	654	;# 
  3472     0291                     CCPR1           equ	657	;# 
  3473     0291                     CCPR1L          equ	657	;# 
  3474     0292                     CCPR1H          equ	658	;# 
  3475     0293                     CCP1CON         equ	659	;# 
  3476     0294                     CCP1CAP         equ	660	;# 
  3477     0295                     CCPR2           equ	661	;# 
  3478     0295                     CCPR2L          equ	661	;# 
  3479     0296                     CCPR2H          equ	662	;# 
  3480     0297                     CCP2CON         equ	663	;# 
  3481     0298                     CCP2CAP         equ	664	;# 
  3482     029F                     CCPTMRS         equ	671	;# 
  3483     030C                     SLRCONA         equ	780	;# 
  3484     030D                     SLRCONB         equ	781	;# 
  3485     030E                     SLRCONC         equ	782	;# 
  3486     0311                     CCPR3           equ	785	;# 
  3487     0311                     CCPR3L          equ	785	;# 
  3488     0312                     CCPR3H          equ	786	;# 
  3489     0313                     CCP3CON         equ	787	;# 
  3490     0314                     CCP3CAP         equ	788	;# 
  3491     0315                     CCPR4           equ	789	;# 
  3492     0315                     CCPR4L          equ	789	;# 
  3493     0316                     CCPR4H          equ	790	;# 
  3494     0317                     CCP4CON         equ	791	;# 
  3495     0318                     CCP4CAP         equ	792	;# 
  3496     038C                     INLVLA          equ	908	;# 
  3497     038D                     INLVLB          equ	909	;# 
  3498     038E                     INLVLC          equ	910	;# 
  3499     0391                     IOCAP           equ	913	;# 
  3500     0392                     IOCAN           equ	914	;# 
  3501     0393                     IOCAF           equ	915	;# 
  3502     0394                     IOCBP           equ	916	;# 
  3503     0395                     IOCBN           equ	917	;# 
  3504     0396                     IOCBF           equ	918	;# 
  3505     0397                     IOCCP           equ	919	;# 
  3506     0398                     IOCCN           equ	920	;# 
  3507     0399                     IOCCF           equ	921	;# 
  3508     039A                     CLKRCON         equ	922	;# 
  3509     039C                     MDCON           equ	924	;# 
  3510     039D                     MDSRC           equ	925	;# 
  3511     039E                     MDCARH          equ	926	;# 
  3512     039F                     MDCARL          equ	927	;# 
  3513     0411                     TMR3            equ	1041	;# 
  3514     0411                     TMR3L           equ	1041	;# 
  3515     0412                     TMR3H           equ	1042	;# 
  3516     0413                     T3CON           equ	1043	;# 
  3517     0414                     T3GCON          equ	1044	;# 
  3518     0415                     TMR4            equ	1045	;# 
  3519     0416                     PR4             equ	1046	;# 
  3520     0417                     T4CON           equ	1047	;# 
  3521     0418                     TMR5            equ	1048	;# 
  3522     0418                     TMR5L           equ	1048	;# 
  3523     0419                     TMR5H           equ	1049	;# 
  3524     041A                     T5CON           equ	1050	;# 
  3525     041B                     T5GCON          equ	1051	;# 
  3526     041C                     TMR6            equ	1052	;# 
  3527     041D                     PR6             equ	1053	;# 
  3528     041E                     T6CON           equ	1054	;# 
  3529     041F                     CCDCON          equ	1055	;# 
  3530     0498                     NCO1ACC         equ	1176	;# 
  3531     0498                     NCO1ACCL        equ	1176	;# 
  3532     0499                     NCO1ACCH        equ	1177	;# 
  3533     049A                     NCO1ACCU        equ	1178	;# 
  3534     049B                     NCO1INC         equ	1179	;# 
  3535     049B                     NCO1INCL        equ	1179	;# 
  3536     049C                     NCO1INCH        equ	1180	;# 
  3537     049D                     NCO1INCU        equ	1181	;# 
  3538     049E                     NCO1CON         equ	1182	;# 
  3539     049F                     NCO1CLK         equ	1183	;# 
  3540     0617                     PWM5DCL         equ	1559	;# 
  3541     0618                     PWM5DCH         equ	1560	;# 
  3542     0619                     PWM5CON         equ	1561	;# 
  3543     0619                     PWM5CON0        equ	1561	;# 
  3544     061A                     PWM6DCL         equ	1562	;# 
  3545     061B                     PWM6DCH         equ	1563	;# 
  3546     061C                     PWM6CON         equ	1564	;# 
  3547     061C                     PWM6CON0        equ	1564	;# 
  3548     061F                     PWMTMRS         equ	1567	;# 
  3549     0691                     CWG1CLKCON      equ	1681	;# 
  3550     0692                     CWG1DAT         equ	1682	;# 
  3551     0693                     CWG1DBR         equ	1683	;# 
  3552     0694                     CWG1DBF         equ	1684	;# 
  3553     0695                     CWG1CON0        equ	1685	;# 
  3554     0696                     CWG1CON1        equ	1686	;# 
  3555     0697                     CWG1AS0         equ	1687	;# 
  3556     0698                     CWG1AS1         equ	1688	;# 
  3557     0699                     CWG1STR         equ	1689	;# 
  3558     0711                     CWG2CLKCON      equ	1809	;# 
  3559     0712                     CWG2DAT         equ	1810	;# 
  3560     0713                     CWG2DBR         equ	1811	;# 
  3561     0714                     CWG2DBF         equ	1812	;# 
  3562     0715                     CWG2CON0        equ	1813	;# 
  3563     0716                     CWG2CON1        equ	1814	;# 
  3564     0717                     CWG2AS0         equ	1815	;# 
  3565     0718                     CWG2AS1         equ	1816	;# 
  3566     0719                     CWG2STR         equ	1817	;# 
  3567     0891                     NVMADR          equ	2193	;# 
  3568     0891                     EEADR           equ	2193	;# 
  3569     0891                     PMADR           equ	2193	;# 
  3570     0891                     NVMADRL         equ	2193	;# 
  3571     0891                     EEADRL          equ	2193	;# 
  3572     0891                     PMADRL          equ	2193	;# 
  3573     0892                     NVMADRH         equ	2194	;# 
  3574     0892                     EEADRH          equ	2194	;# 
  3575     0892                     PMADRH          equ	2194	;# 
  3576     0893                     NVMDAT          equ	2195	;# 
  3577     0893                     EEDAT           equ	2195	;# 
  3578     0893                     PMDAT           equ	2195	;# 
  3579     0893                     NVMDATL         equ	2195	;# 
  3580     0893                     EEDATL          equ	2195	;# 
  3581     0893                     PMDATL          equ	2195	;# 
  3582     0894                     NVMDATH         equ	2196	;# 
  3583     0894                     EEDATH          equ	2196	;# 
  3584     0894                     PMDATH          equ	2196	;# 
  3585     0895                     NVMCON1         equ	2197	;# 
  3586     0895                     EECON1          equ	2197	;# 
  3587     0895                     PMCON1          equ	2197	;# 
  3588     0896                     NVMCON2         equ	2198	;# 
  3589     0896                     EECON2          equ	2198	;# 
  3590     0896                     PMCON2          equ	2198	;# 
  3591     089B                     PCON0           equ	2203	;# 
  3592     0911                     PMD0            equ	2321	;# 
  3593     0912                     PMD1            equ	2322	;# 
  3594     0913                     PMD2            equ	2323	;# 
  3595     0914                     PMD3            equ	2324	;# 
  3596     0915                     PMD4            equ	2325	;# 
  3597     0916                     PMD5            equ	2326	;# 
  3598     0918                     CPUDOZE         equ	2328	;# 
  3599     0919                     OSCCON1         equ	2329	;# 
  3600     091A                     OSCCON2         equ	2330	;# 
  3601     091B                     OSCCON3         equ	2331	;# 
  3602     091C                     OSCSTAT1        equ	2332	;# 
  3603     091D                     OSCEN           equ	2333	;# 
  3604     091E                     OSCTUNE         equ	2334	;# 
  3605     091F                     OSCFRQ          equ	2335	;# 
  3606     0E0F                     PPSLOCK         equ	3599	;# 
  3607     0E10                     INTPPS          equ	3600	;# 
  3608     0E11                     T0CKIPPS        equ	3601	;# 
  3609     0E12                     T1CKIPPS        equ	3602	;# 
  3610     0E13                     T1GPPS          equ	3603	;# 
  3611     0E14                     CCP1PPS         equ	3604	;# 
  3612     0E15                     CCP2PPS         equ	3605	;# 
  3613     0E16                     CCP3PPS         equ	3606	;# 
  3614     0E17                     CCP4PPS         equ	3607	;# 
  3615     0E18                     CWG1PPS         equ	3608	;# 
  3616     0E19                     CWG2PPS         equ	3609	;# 
  3617     0E1A                     MDCIN1PPS       equ	3610	;# 
  3618     0E1B                     MDCIN2PPS       equ	3611	;# 
  3619     0E1C                     MDMINPPS        equ	3612	;# 
  3620     0E1D                     SSP2CLKPPS      equ	3613	;# 
  3621     0E1E                     SSP2DATPPS      equ	3614	;# 
  3622     0E1F                     SSP2SSPPS       equ	3615	;# 
  3623     0E20                     SSP1CLKPPS      equ	3616	;# 
  3624     0E21                     SSP1DATPPS      equ	3617	;# 
  3625     0E22                     SSP1SSPPS       equ	3618	;# 
  3626     0E24                     RXPPS           equ	3620	;# 
  3627     0E25                     TXPPS           equ	3621	;# 
  3628     0E28                     CLCIN0PPS       equ	3624	;# 
  3629     0E29                     CLCIN1PPS       equ	3625	;# 
  3630     0E2A                     CLCIN2PPS       equ	3626	;# 
  3631     0E2B                     CLCIN3PPS       equ	3627	;# 
  3632     0E2C                     T3CKIPPS        equ	3628	;# 
  3633     0E2D                     T3GPPS          equ	3629	;# 
  3634     0E2E                     T5CKIPPS        equ	3630	;# 
  3635     0E2F                     T5GPPS          equ	3631	;# 
  3636     0E90                     RA0PPS          equ	3728	;# 
  3637     0E91                     RA1PPS          equ	3729	;# 
  3638     0E92                     RA2PPS          equ	3730	;# 
  3639     0E94                     RA4PPS          equ	3732	;# 
  3640     0E95                     RA5PPS          equ	3733	;# 
  3641     0E9C                     RB4PPS          equ	3740	;# 
  3642     0E9D                     RB5PPS          equ	3741	;# 
  3643     0E9E                     RB6PPS          equ	3742	;# 
  3644     0E9F                     RB7PPS          equ	3743	;# 
  3645     0EA0                     RC0PPS          equ	3744	;# 
  3646     0EA1                     RC1PPS          equ	3745	;# 
  3647     0EA2                     RC2PPS          equ	3746	;# 
  3648     0EA3                     RC3PPS          equ	3747	;# 
  3649     0EA4                     RC4PPS          equ	3748	;# 
  3650     0EA5                     RC5PPS          equ	3749	;# 
  3651     0EA6                     RC6PPS          equ	3750	;# 
  3652     0EA7                     RC7PPS          equ	3751	;# 
  3653     0F0F                     CLCDATA         equ	3855	;# 
  3654     0F10                     CLC1CON         equ	3856	;# 
  3655     0F11                     CLC1POL         equ	3857	;# 
  3656     0F12                     CLC1SEL0        equ	3858	;# 
  3657     0F13                     CLC1SEL1        equ	3859	;# 
  3658     0F14                     CLC1SEL2        equ	3860	;# 
  3659     0F15                     CLC1SEL3        equ	3861	;# 
  3660     0F16                     CLC1GLS0        equ	3862	;# 
  3661     0F17                     CLC1GLS1        equ	3863	;# 
  3662     0F18                     CLC1GLS2        equ	3864	;# 
  3663     0F19                     CLC1GLS3        equ	3865	;# 
  3664     0F1A                     CLC2CON         equ	3866	;# 
  3665     0F1B                     CLC2POL         equ	3867	;# 
  3666     0F1C                     CLC2SEL0        equ	3868	;# 
  3667     0F1D                     CLC2SEL1        equ	3869	;# 
  3668     0F1E                     CLC2SEL2        equ	3870	;# 
  3669     0F1F                     CLC2SEL3        equ	3871	;# 
  3670     0F20                     CLC2GLS0        equ	3872	;# 
  3671     0F21                     CLC2GLS1        equ	3873	;# 
  3672     0F22                     CLC2GLS2        equ	3874	;# 
  3673     0F23                     CLC2GLS3        equ	3875	;# 
  3674     0F24                     CLC3CON         equ	3876	;# 
  3675     0F25                     CLC3POL         equ	3877	;# 
  3676     0F26                     CLC3SEL0        equ	3878	;# 
  3677     0F27                     CLC3SEL1        equ	3879	;# 
  3678     0F28                     CLC3SEL2        equ	3880	;# 
  3679     0F29                     CLC3SEL3        equ	3881	;# 
  3680     0F2A                     CLC3GLS0        equ	3882	;# 
  3681     0F2B                     CLC3GLS1        equ	3883	;# 
  3682     0F2C                     CLC3GLS2        equ	3884	;# 
  3683     0F2D                     CLC3GLS3        equ	3885	;# 
  3684     0F2E                     CLC4CON         equ	3886	;# 
  3685     0F2F                     CLC4POL         equ	3887	;# 
  3686     0F30                     CLC4SEL0        equ	3888	;# 
  3687     0F31                     CLC4SEL1        equ	3889	;# 
  3688     0F32                     CLC4SEL2        equ	3890	;# 
  3689     0F33                     CLC4SEL3        equ	3891	;# 
  3690     0F34                     CLC4GLS0        equ	3892	;# 
  3691     0F35                     CLC4GLS1        equ	3893	;# 
  3692     0F36                     CLC4GLS2        equ	3894	;# 
  3693     0F37                     CLC4GLS3        equ	3895	;# 
  3694     0FE4                     STATUS_SHAD     equ	4068	;# 
  3695     0FE5                     WREG_SHAD       equ	4069	;# 
  3696     0FE6                     BSR_SHAD        equ	4070	;# 
  3697     0FE7                     PCLATH_SHAD     equ	4071	;# 
  3698     0FE8                     FSR0L_SHAD      equ	4072	;# 
  3699     0FE9                     FSR0H_SHAD      equ	4073	;# 
  3700     0FEA                     FSR1L_SHAD      equ	4074	;# 
  3701     0FEB                     FSR1H_SHAD      equ	4075	;# 
  3702     0FED                     STKPTR          equ	4077	;# 
  3703     0FEE                     TOSL            equ	4078	;# 
  3704     0FEF                     TOSH            equ	4079	;# 
  3705     0000                     INDF0           equ	0	;# 
  3706     0001                     INDF1           equ	1	;# 
  3707     0002                     PCL             equ	2	;# 
  3708     0003                     STATUS          equ	3	;# 
  3709     0004                     FSR0L           equ	4	;# 
  3710     0005                     FSR0H           equ	5	;# 
  3711     0006                     FSR1L           equ	6	;# 
  3712     0007                     FSR1H           equ	7	;# 
  3713     0008                     BSR             equ	8	;# 
  3714     0009                     WREG            equ	9	;# 
  3715     000A                     PCLATH          equ	10	;# 
  3716     000B                     INTCON          equ	11	;# 
  3717     000C                     PORTA           equ	12	;# 
  3718     000D                     PORTB           equ	13	;# 
  3719     000E                     PORTC           equ	14	;# 
  3720     0010                     PIR0            equ	16	;# 
  3721     0011                     PIR1            equ	17	;# 
  3722     0012                     PIR2            equ	18	;# 
  3723     0013                     PIR3            equ	19	;# 
  3724     0014                     PIR4            equ	20	;# 
  3725     0015                     TMR0L           equ	21	;# 
  3726     0015                     TMR0            equ	21	;# 
  3727     0016                     TMR0H           equ	22	;# 
  3728     0016                     PR0             equ	22	;# 
  3729     0017                     T0CON0          equ	23	;# 
  3730     0018                     T0CON1          equ	24	;# 
  3731     0019                     TMR1            equ	25	;# 
  3732     0019                     TMR1L           equ	25	;# 
  3733     001A                     TMR1H           equ	26	;# 
  3734     001B                     T1CON           equ	27	;# 
  3735     001C                     T1GCON          equ	28	;# 
  3736     001D                     TMR2            equ	29	;# 
  3737     001E                     PR2             equ	30	;# 
  3738     001F                     T2CON           equ	31	;# 
  3739     008C                     TRISA           equ	140	;# 
  3740     008D                     TRISB           equ	141	;# 
  3741     008E                     TRISC           equ	142	;# 
  3742     0090                     PIE0            equ	144	;# 
  3743     0091                     PIE1            equ	145	;# 
  3744     0092                     PIE2            equ	146	;# 
  3745     0093                     PIE3            equ	147	;# 
  3746     0094                     PIE4            equ	148	;# 
  3747     0097                     WDTCON          equ	151	;# 
  3748     009B                     ADRES           equ	155	;# 
  3749     009B                     ADRESL          equ	155	;# 
  3750     009C                     ADRESH          equ	156	;# 
  3751     009D                     ADCON0          equ	157	;# 
  3752     009E                     ADCON1          equ	158	;# 
  3753     009F                     ADACT           equ	159	;# 
  3754     010C                     LATA            equ	268	;# 
  3755     010D                     LATB            equ	269	;# 
  3756     010E                     LATC            equ	270	;# 
  3757     0111                     CM1CON0         equ	273	;# 
  3758     0112                     CM1CON1         equ	274	;# 
  3759     0113                     CM2CON0         equ	275	;# 
  3760     0114                     CM2CON1         equ	276	;# 
  3761     0115                     CMOUT           equ	277	;# 
  3762     0116                     BORCON          equ	278	;# 
  3763     0117                     FVRCON          equ	279	;# 
  3764     0118                     DACCON0         equ	280	;# 
  3765     0119                     DACCON1         equ	281	;# 
  3766     018C                     ANSELA          equ	396	;# 
  3767     018D                     ANSELB          equ	397	;# 
  3768     018E                     ANSELC          equ	398	;# 
  3769     0197                     VREGCON         equ	407	;# 
  3770     0199                     RC1REG          equ	409	;# 
  3771     0199                     RCREG           equ	409	;# 
  3772     0199                     RCREG1          equ	409	;# 
  3773     019A                     TX1REG          equ	410	;# 
  3774     019A                     TXREG1          equ	410	;# 
  3775     019A                     TXREG           equ	410	;# 
  3776     019B                     SP1BRG          equ	411	;# 
  3777     019B                     SPBRG           equ	411	;# 
  3778     019B                     SP1BRGL         equ	411	;# 
  3779     019B                     SPBRG1          equ	411	;# 
  3780     019B                     SPBRGL          equ	411	;# 
  3781     019C                     SP1BRGH         equ	412	;# 
  3782     019C                     SPBRGH          equ	412	;# 
  3783     019C                     SPBRGH1         equ	412	;# 
  3784     019D                     RC1STA          equ	413	;# 
  3785     019D                     RCSTA1          equ	413	;# 
  3786     019D                     RCSTA           equ	413	;# 
  3787     019E                     TX1STA          equ	414	;# 
  3788     019E                     TXSTA1          equ	414	;# 
  3789     019E                     TXSTA           equ	414	;# 
  3790     019F                     BAUD1CON        equ	415	;# 
  3791     019F                     BAUDCON1        equ	415	;# 
  3792     019F                     BAUDCTL1        equ	415	;# 
  3793     019F                     BAUDCON         equ	415	;# 
  3794     019F                     BAUDCTL         equ	415	;# 
  3795     020C                     WPUA            equ	524	;# 
  3796     020D                     WPUB            equ	525	;# 
  3797     020E                     WPUC            equ	526	;# 
  3798     0211                     SSP1BUF         equ	529	;# 
  3799     0211                     SSPBUF          equ	529	;# 
  3800     0212                     SSP1ADD         equ	530	;# 
  3801     0212                     SSPADD          equ	530	;# 
  3802     0213                     SSP1MSK         equ	531	;# 
  3803     0213                     SSPMSK          equ	531	;# 
  3804     0214                     SSP1STAT        equ	532	;# 
  3805     0214                     SSPSTAT         equ	532	;# 
  3806     0215                     SSP1CON1        equ	533	;# 
  3807     0215                     SSPCON          equ	533	;# 
  3808     0215                     SSPCON1         equ	533	;# 
  3809     0215                     SSP1CON         equ	533	;# 
  3810     0216                     SSP1CON2        equ	534	;# 
  3811     0216                     SSPCON2         equ	534	;# 
  3812     0217                     SSP1CON3        equ	535	;# 
  3813     0217                     SSPCON3         equ	535	;# 
  3814     0219                     SSP2BUF         equ	537	;# 
  3815     021A                     SSP2ADD         equ	538	;# 
  3816     021B                     SSP2MSK         equ	539	;# 
  3817     021C                     SSP2STAT        equ	540	;# 
  3818     021D                     SSP2CON1        equ	541	;# 
  3819     021D                     SSP2CON         equ	541	;# 
  3820     021E                     SSP2CON2        equ	542	;# 
  3821     021F                     SSP2CON3        equ	543	;# 
  3822     028C                     ODCONA          equ	652	;# 
  3823     028D                     ODCONB          equ	653	;# 
  3824     028E                     ODCONC          equ	654	;# 
  3825     0291                     CCPR1           equ	657	;# 
  3826     0291                     CCPR1L          equ	657	;# 
  3827     0292                     CCPR1H          equ	658	;# 
  3828     0293                     CCP1CON         equ	659	;# 
  3829     0294                     CCP1CAP         equ	660	;# 
  3830     0295                     CCPR2           equ	661	;# 
  3831     0295                     CCPR2L          equ	661	;# 
  3832     0296                     CCPR2H          equ	662	;# 
  3833     0297                     CCP2CON         equ	663	;# 
  3834     0298                     CCP2CAP         equ	664	;# 
  3835     029F                     CCPTMRS         equ	671	;# 
  3836     030C                     SLRCONA         equ	780	;# 
  3837     030D                     SLRCONB         equ	781	;# 
  3838     030E                     SLRCONC         equ	782	;# 
  3839     0311                     CCPR3           equ	785	;# 
  3840     0311                     CCPR3L          equ	785	;# 
  3841     0312                     CCPR3H          equ	786	;# 
  3842     0313                     CCP3CON         equ	787	;# 
  3843     0314                     CCP3CAP         equ	788	;# 
  3844     0315                     CCPR4           equ	789	;# 
  3845     0315                     CCPR4L          equ	789	;# 
  3846     0316                     CCPR4H          equ	790	;# 
  3847     0317                     CCP4CON         equ	791	;# 
  3848     0318                     CCP4CAP         equ	792	;# 
  3849     038C                     INLVLA          equ	908	;# 
  3850     038D                     INLVLB          equ	909	;# 
  3851     038E                     INLVLC          equ	910	;# 
  3852     0391                     IOCAP           equ	913	;# 
  3853     0392                     IOCAN           equ	914	;# 
  3854     0393                     IOCAF           equ	915	;# 
  3855     0394                     IOCBP           equ	916	;# 
  3856     0395                     IOCBN           equ	917	;# 
  3857     0396                     IOCBF           equ	918	;# 
  3858     0397                     IOCCP           equ	919	;# 
  3859     0398                     IOCCN           equ	920	;# 
  3860     0399                     IOCCF           equ	921	;# 
  3861     039A                     CLKRCON         equ	922	;# 
  3862     039C                     MDCON           equ	924	;# 
  3863     039D                     MDSRC           equ	925	;# 
  3864     039E                     MDCARH          equ	926	;# 
  3865     039F                     MDCARL          equ	927	;# 
  3866     0411                     TMR3            equ	1041	;# 
  3867     0411                     TMR3L           equ	1041	;# 
  3868     0412                     TMR3H           equ	1042	;# 
  3869     0413                     T3CON           equ	1043	;# 
  3870     0414                     T3GCON          equ	1044	;# 
  3871     0415                     TMR4            equ	1045	;# 
  3872     0416                     PR4             equ	1046	;# 
  3873     0417                     T4CON           equ	1047	;# 
  3874     0418                     TMR5            equ	1048	;# 
  3875     0418                     TMR5L           equ	1048	;# 
  3876     0419                     TMR5H           equ	1049	;# 
  3877     041A                     T5CON           equ	1050	;# 
  3878     041B                     T5GCON          equ	1051	;# 
  3879     041C                     TMR6            equ	1052	;# 
  3880     041D                     PR6             equ	1053	;# 
  3881     041E                     T6CON           equ	1054	;# 
  3882     041F                     CCDCON          equ	1055	;# 
  3883     0498                     NCO1ACC         equ	1176	;# 
  3884     0498                     NCO1ACCL        equ	1176	;# 
  3885     0499                     NCO1ACCH        equ	1177	;# 
  3886     049A                     NCO1ACCU        equ	1178	;# 
  3887     049B                     NCO1INC         equ	1179	;# 
  3888     049B                     NCO1INCL        equ	1179	;# 
  3889     049C                     NCO1INCH        equ	1180	;# 
  3890     049D                     NCO1INCU        equ	1181	;# 
  3891     049E                     NCO1CON         equ	1182	;# 
  3892     049F                     NCO1CLK         equ	1183	;# 
  3893     0617                     PWM5DCL         equ	1559	;# 
  3894     0618                     PWM5DCH         equ	1560	;# 
  3895     0619                     PWM5CON         equ	1561	;# 
  3896     0619                     PWM5CON0        equ	1561	;# 
  3897     061A                     PWM6DCL         equ	1562	;# 
  3898     061B                     PWM6DCH         equ	1563	;# 
  3899     061C                     PWM6CON         equ	1564	;# 
  3900     061C                     PWM6CON0        equ	1564	;# 
  3901     061F                     PWMTMRS         equ	1567	;# 
  3902     0691                     CWG1CLKCON      equ	1681	;# 
  3903     0692                     CWG1DAT         equ	1682	;# 
  3904     0693                     CWG1DBR         equ	1683	;# 
  3905     0694                     CWG1DBF         equ	1684	;# 
  3906     0695                     CWG1CON0        equ	1685	;# 
  3907     0696                     CWG1CON1        equ	1686	;# 
  3908     0697                     CWG1AS0         equ	1687	;# 
  3909     0698                     CWG1AS1         equ	1688	;# 
  3910     0699                     CWG1STR         equ	1689	;# 
  3911     0711                     CWG2CLKCON      equ	1809	;# 
  3912     0712                     CWG2DAT         equ	1810	;# 
  3913     0713                     CWG2DBR         equ	1811	;# 
  3914     0714                     CWG2DBF         equ	1812	;# 
  3915     0715                     CWG2CON0        equ	1813	;# 
  3916     0716                     CWG2CON1        equ	1814	;# 
  3917     0717                     CWG2AS0         equ	1815	;# 
  3918     0718                     CWG2AS1         equ	1816	;# 
  3919     0719                     CWG2STR         equ	1817	;# 
  3920     0891                     NVMADR          equ	2193	;# 
  3921     0891                     EEADR           equ	2193	;# 
  3922     0891                     PMADR           equ	2193	;# 
  3923     0891                     NVMADRL         equ	2193	;# 
  3924     0891                     EEADRL          equ	2193	;# 
  3925     0891                     PMADRL          equ	2193	;# 
  3926     0892                     NVMADRH         equ	2194	;# 
  3927     0892                     EEADRH          equ	2194	;# 
  3928     0892                     PMADRH          equ	2194	;# 
  3929     0893                     NVMDAT          equ	2195	;# 
  3930     0893                     EEDAT           equ	2195	;# 
  3931     0893                     PMDAT           equ	2195	;# 
  3932     0893                     NVMDATL         equ	2195	;# 
  3933     0893                     EEDATL          equ	2195	;# 
  3934     0893                     PMDATL          equ	2195	;# 
  3935     0894                     NVMDATH         equ	2196	;# 
  3936     0894                     EEDATH          equ	2196	;# 
  3937     0894                     PMDATH          equ	2196	;# 
  3938     0895                     NVMCON1         equ	2197	;# 
  3939     0895                     EECON1          equ	2197	;# 
  3940     0895                     PMCON1          equ	2197	;# 
  3941     0896                     NVMCON2         equ	2198	;# 
  3942     0896                     EECON2          equ	2198	;# 
  3943     0896                     PMCON2          equ	2198	;# 
  3944     089B                     PCON0           equ	2203	;# 
  3945     0911                     PMD0            equ	2321	;# 
  3946     0912                     PMD1            equ	2322	;# 
  3947     0913                     PMD2            equ	2323	;# 
  3948     0914                     PMD3            equ	2324	;# 
  3949     0915                     PMD4            equ	2325	;# 
  3950     0916                     PMD5            equ	2326	;# 
  3951     0918                     CPUDOZE         equ	2328	;# 
  3952     0919                     OSCCON1         equ	2329	;# 
  3953     091A                     OSCCON2         equ	2330	;# 
  3954     091B                     OSCCON3         equ	2331	;# 
  3955     091C                     OSCSTAT1        equ	2332	;# 
  3956     091D                     OSCEN           equ	2333	;# 
  3957     091E                     OSCTUNE         equ	2334	;# 
  3958     091F                     OSCFRQ          equ	2335	;# 
  3959     0E0F                     PPSLOCK         equ	3599	;# 
  3960     0E10                     INTPPS          equ	3600	;# 
  3961     0E11                     T0CKIPPS        equ	3601	;# 
  3962     0E12                     T1CKIPPS        equ	3602	;# 
  3963     0E13                     T1GPPS          equ	3603	;# 
  3964     0E14                     CCP1PPS         equ	3604	;# 
  3965     0E15                     CCP2PPS         equ	3605	;# 
  3966     0E16                     CCP3PPS         equ	3606	;# 
  3967     0E17                     CCP4PPS         equ	3607	;# 
  3968     0E18                     CWG1PPS         equ	3608	;# 
  3969     0E19                     CWG2PPS         equ	3609	;# 
  3970     0E1A                     MDCIN1PPS       equ	3610	;# 
  3971     0E1B                     MDCIN2PPS       equ	3611	;# 
  3972     0E1C                     MDMINPPS        equ	3612	;# 
  3973     0E1D                     SSP2CLKPPS      equ	3613	;# 
  3974     0E1E                     SSP2DATPPS      equ	3614	;# 
  3975     0E1F                     SSP2SSPPS       equ	3615	;# 
  3976     0E20                     SSP1CLKPPS      equ	3616	;# 
  3977     0E21                     SSP1DATPPS      equ	3617	;# 
  3978     0E22                     SSP1SSPPS       equ	3618	;# 
  3979     0E24                     RXPPS           equ	3620	;# 
  3980     0E25                     TXPPS           equ	3621	;# 
  3981     0E28                     CLCIN0PPS       equ	3624	;# 
  3982     0E29                     CLCIN1PPS       equ	3625	;# 
  3983     0E2A                     CLCIN2PPS       equ	3626	;# 
  3984     0E2B                     CLCIN3PPS       equ	3627	;# 
  3985     0E2C                     T3CKIPPS        equ	3628	;# 
  3986     0E2D                     T3GPPS          equ	3629	;# 
  3987     0E2E                     T5CKIPPS        equ	3630	;# 
  3988     0E2F                     T5GPPS          equ	3631	;# 
  3989     0E90                     RA0PPS          equ	3728	;# 
  3990     0E91                     RA1PPS          equ	3729	;# 
  3991     0E92                     RA2PPS          equ	3730	;# 
  3992     0E94                     RA4PPS          equ	3732	;# 
  3993     0E95                     RA5PPS          equ	3733	;# 
  3994     0E9C                     RB4PPS          equ	3740	;# 
  3995     0E9D                     RB5PPS          equ	3741	;# 
  3996     0E9E                     RB6PPS          equ	3742	;# 
  3997     0E9F                     RB7PPS          equ	3743	;# 
  3998     0EA0                     RC0PPS          equ	3744	;# 
  3999     0EA1                     RC1PPS          equ	3745	;# 
  4000     0EA2                     RC2PPS          equ	3746	;# 
  4001     0EA3                     RC3PPS          equ	3747	;# 
  4002     0EA4                     RC4PPS          equ	3748	;# 
  4003     0EA5                     RC5PPS          equ	3749	;# 
  4004     0EA6                     RC6PPS          equ	3750	;# 
  4005     0EA7                     RC7PPS          equ	3751	;# 
  4006     0F0F                     CLCDATA         equ	3855	;# 
  4007     0F10                     CLC1CON         equ	3856	;# 
  4008     0F11                     CLC1POL         equ	3857	;# 
  4009     0F12                     CLC1SEL0        equ	3858	;# 
  4010     0F13                     CLC1SEL1        equ	3859	;# 
  4011     0F14                     CLC1SEL2        equ	3860	;# 
  4012     0F15                     CLC1SEL3        equ	3861	;# 
  4013     0F16                     CLC1GLS0        equ	3862	;# 
  4014     0F17                     CLC1GLS1        equ	3863	;# 
  4015     0F18                     CLC1GLS2        equ	3864	;# 
  4016     0F19                     CLC1GLS3        equ	3865	;# 
  4017     0F1A                     CLC2CON         equ	3866	;# 
  4018     0F1B                     CLC2POL         equ	3867	;# 
  4019     0F1C                     CLC2SEL0        equ	3868	;# 
  4020     0F1D                     CLC2SEL1        equ	3869	;# 
  4021     0F1E                     CLC2SEL2        equ	3870	;# 
  4022     0F1F                     CLC2SEL3        equ	3871	;# 
  4023     0F20                     CLC2GLS0        equ	3872	;# 
  4024     0F21                     CLC2GLS1        equ	3873	;# 
  4025     0F22                     CLC2GLS2        equ	3874	;# 
  4026     0F23                     CLC2GLS3        equ	3875	;# 
  4027     0F24                     CLC3CON         equ	3876	;# 
  4028     0F25                     CLC3POL         equ	3877	;# 
  4029     0F26                     CLC3SEL0        equ	3878	;# 
  4030     0F27                     CLC3SEL1        equ	3879	;# 
  4031     0F28                     CLC3SEL2        equ	3880	;# 
  4032     0F29                     CLC3SEL3        equ	3881	;# 
  4033     0F2A                     CLC3GLS0        equ	3882	;# 
  4034     0F2B                     CLC3GLS1        equ	3883	;# 
  4035     0F2C                     CLC3GLS2        equ	3884	;# 
  4036     0F2D                     CLC3GLS3        equ	3885	;# 
  4037     0F2E                     CLC4CON         equ	3886	;# 
  4038     0F2F                     CLC4POL         equ	3887	;# 
  4039     0F30                     CLC4SEL0        equ	3888	;# 
  4040     0F31                     CLC4SEL1        equ	3889	;# 
  4041     0F32                     CLC4SEL2        equ	3890	;# 
  4042     0F33                     CLC4SEL3        equ	3891	;# 
  4043     0F34                     CLC4GLS0        equ	3892	;# 
  4044     0F35                     CLC4GLS1        equ	3893	;# 
  4045     0F36                     CLC4GLS2        equ	3894	;# 
  4046     0F37                     CLC4GLS3        equ	3895	;# 
  4047     0FE4                     STATUS_SHAD     equ	4068	;# 
  4048     0FE5                     WREG_SHAD       equ	4069	;# 
  4049     0FE6                     BSR_SHAD        equ	4070	;# 
  4050     0FE7                     PCLATH_SHAD     equ	4071	;# 
  4051     0FE8                     FSR0L_SHAD      equ	4072	;# 
  4052     0FE9                     FSR0H_SHAD      equ	4073	;# 
  4053     0FEA                     FSR1L_SHAD      equ	4074	;# 
  4054     0FEB                     FSR1H_SHAD      equ	4075	;# 
  4055     0FED                     STKPTR          equ	4077	;# 
  4056     0FEE                     TOSL            equ	4078	;# 
  4057     0FEF                     TOSH            equ	4079	;# 
  4058     0000                     INDF0           equ	0	;# 
  4059     0001                     INDF1           equ	1	;# 
  4060     0002                     PCL             equ	2	;# 
  4061     0003                     STATUS          equ	3	;# 
  4062     0004                     FSR0L           equ	4	;# 
  4063     0005                     FSR0H           equ	5	;# 
  4064     0006                     FSR1L           equ	6	;# 
  4065     0007                     FSR1H           equ	7	;# 
  4066     0008                     BSR             equ	8	;# 
  4067     0009                     WREG            equ	9	;# 
  4068     000A                     PCLATH          equ	10	;# 
  4069     000B                     INTCON          equ	11	;# 
  4070     000C                     PORTA           equ	12	;# 
  4071     000D                     PORTB           equ	13	;# 
  4072     000E                     PORTC           equ	14	;# 
  4073     0010                     PIR0            equ	16	;# 
  4074     0011                     PIR1            equ	17	;# 
  4075     0012                     PIR2            equ	18	;# 
  4076     0013                     PIR3            equ	19	;# 
  4077     0014                     PIR4            equ	20	;# 
  4078     0015                     TMR0L           equ	21	;# 
  4079     0015                     TMR0            equ	21	;# 
  4080     0016                     TMR0H           equ	22	;# 
  4081     0016                     PR0             equ	22	;# 
  4082     0017                     T0CON0          equ	23	;# 
  4083     0018                     T0CON1          equ	24	;# 
  4084     0019                     TMR1            equ	25	;# 
  4085     0019                     TMR1L           equ	25	;# 
  4086     001A                     TMR1H           equ	26	;# 
  4087     001B                     T1CON           equ	27	;# 
  4088     001C                     T1GCON          equ	28	;# 
  4089     001D                     TMR2            equ	29	;# 
  4090     001E                     PR2             equ	30	;# 
  4091     001F                     T2CON           equ	31	;# 
  4092     008C                     TRISA           equ	140	;# 
  4093     008D                     TRISB           equ	141	;# 
  4094     008E                     TRISC           equ	142	;# 
  4095     0090                     PIE0            equ	144	;# 
  4096     0091                     PIE1            equ	145	;# 
  4097     0092                     PIE2            equ	146	;# 
  4098     0093                     PIE3            equ	147	;# 
  4099     0094                     PIE4            equ	148	;# 
  4100     0097                     WDTCON          equ	151	;# 
  4101     009B                     ADRES           equ	155	;# 
  4102     009B                     ADRESL          equ	155	;# 
  4103     009C                     ADRESH          equ	156	;# 
  4104     009D                     ADCON0          equ	157	;# 
  4105     009E                     ADCON1          equ	158	;# 
  4106     009F                     ADACT           equ	159	;# 
  4107     010C                     LATA            equ	268	;# 
  4108     010D                     LATB            equ	269	;# 
  4109     010E                     LATC            equ	270	;# 
  4110     0111                     CM1CON0         equ	273	;# 
  4111     0112                     CM1CON1         equ	274	;# 
  4112     0113                     CM2CON0         equ	275	;# 
  4113     0114                     CM2CON1         equ	276	;# 
  4114     0115                     CMOUT           equ	277	;# 
  4115     0116                     BORCON          equ	278	;# 
  4116     0117                     FVRCON          equ	279	;# 
  4117     0118                     DACCON0         equ	280	;# 
  4118     0119                     DACCON1         equ	281	;# 
  4119     018C                     ANSELA          equ	396	;# 
  4120     018D                     ANSELB          equ	397	;# 
  4121     018E                     ANSELC          equ	398	;# 
  4122     0197                     VREGCON         equ	407	;# 
  4123     0199                     RC1REG          equ	409	;# 
  4124     0199                     RCREG           equ	409	;# 
  4125     0199                     RCREG1          equ	409	;# 
  4126     019A                     TX1REG          equ	410	;# 
  4127     019A                     TXREG1          equ	410	;# 
  4128     019A                     TXREG           equ	410	;# 
  4129     019B                     SP1BRG          equ	411	;# 
  4130     019B                     SPBRG           equ	411	;# 
  4131     019B                     SP1BRGL         equ	411	;# 
  4132     019B                     SPBRG1          equ	411	;# 
  4133     019B                     SPBRGL          equ	411	;# 
  4134     019C                     SP1BRGH         equ	412	;# 
  4135     019C                     SPBRGH          equ	412	;# 
  4136     019C                     SPBRGH1         equ	412	;# 
  4137     019D                     RC1STA          equ	413	;# 
  4138     019D                     RCSTA1          equ	413	;# 
  4139     019D                     RCSTA           equ	413	;# 
  4140     019E                     TX1STA          equ	414	;# 
  4141     019E                     TXSTA1          equ	414	;# 
  4142     019E                     TXSTA           equ	414	;# 
  4143     019F                     BAUD1CON        equ	415	;# 
  4144     019F                     BAUDCON1        equ	415	;# 
  4145     019F                     BAUDCTL1        equ	415	;# 
  4146     019F                     BAUDCON         equ	415	;# 
  4147     019F                     BAUDCTL         equ	415	;# 
  4148     020C                     WPUA            equ	524	;# 
  4149     020D                     WPUB            equ	525	;# 
  4150     020E                     WPUC            equ	526	;# 
  4151     0211                     SSP1BUF         equ	529	;# 
  4152     0211                     SSPBUF          equ	529	;# 
  4153     0212                     SSP1ADD         equ	530	;# 
  4154     0212                     SSPADD          equ	530	;# 
  4155     0213                     SSP1MSK         equ	531	;# 
  4156     0213                     SSPMSK          equ	531	;# 
  4157     0214                     SSP1STAT        equ	532	;# 
  4158     0214                     SSPSTAT         equ	532	;# 
  4159     0215                     SSP1CON1        equ	533	;# 
  4160     0215                     SSPCON          equ	533	;# 
  4161     0215                     SSPCON1         equ	533	;# 
  4162     0215                     SSP1CON         equ	533	;# 
  4163     0216                     SSP1CON2        equ	534	;# 
  4164     0216                     SSPCON2         equ	534	;# 
  4165     0217                     SSP1CON3        equ	535	;# 
  4166     0217                     SSPCON3         equ	535	;# 
  4167     0219                     SSP2BUF         equ	537	;# 
  4168     021A                     SSP2ADD         equ	538	;# 
  4169     021B                     SSP2MSK         equ	539	;# 
  4170     021C                     SSP2STAT        equ	540	;# 
  4171     021D                     SSP2CON1        equ	541	;# 
  4172     021D                     SSP2CON         equ	541	;# 
  4173     021E                     SSP2CON2        equ	542	;# 
  4174     021F                     SSP2CON3        equ	543	;# 
  4175     028C                     ODCONA          equ	652	;# 
  4176     028D                     ODCONB          equ	653	;# 
  4177     028E                     ODCONC          equ	654	;# 
  4178     0291                     CCPR1           equ	657	;# 
  4179     0291                     CCPR1L          equ	657	;# 
  4180     0292                     CCPR1H          equ	658	;# 
  4181     0293                     CCP1CON         equ	659	;# 
  4182     0294                     CCP1CAP         equ	660	;# 
  4183     0295                     CCPR2           equ	661	;# 
  4184     0295                     CCPR2L          equ	661	;# 
  4185     0296                     CCPR2H          equ	662	;# 
  4186     0297                     CCP2CON         equ	663	;# 
  4187     0298                     CCP2CAP         equ	664	;# 
  4188     029F                     CCPTMRS         equ	671	;# 
  4189     030C                     SLRCONA         equ	780	;# 
  4190     030D                     SLRCONB         equ	781	;# 
  4191     030E                     SLRCONC         equ	782	;# 
  4192     0311                     CCPR3           equ	785	;# 
  4193     0311                     CCPR3L          equ	785	;# 
  4194     0312                     CCPR3H          equ	786	;# 
  4195     0313                     CCP3CON         equ	787	;# 
  4196     0314                     CCP3CAP         equ	788	;# 
  4197     0315                     CCPR4           equ	789	;# 
  4198     0315                     CCPR4L          equ	789	;# 
  4199     0316                     CCPR4H          equ	790	;# 
  4200     0317                     CCP4CON         equ	791	;# 
  4201     0318                     CCP4CAP         equ	792	;# 
  4202     038C                     INLVLA          equ	908	;# 
  4203     038D                     INLVLB          equ	909	;# 
  4204     038E                     INLVLC          equ	910	;# 
  4205     0391                     IOCAP           equ	913	;# 
  4206     0392                     IOCAN           equ	914	;# 
  4207     0393                     IOCAF           equ	915	;# 
  4208     0394                     IOCBP           equ	916	;# 
  4209     0395                     IOCBN           equ	917	;# 
  4210     0396                     IOCBF           equ	918	;# 
  4211     0397                     IOCCP           equ	919	;# 
  4212     0398                     IOCCN           equ	920	;# 
  4213     0399                     IOCCF           equ	921	;# 
  4214     039A                     CLKRCON         equ	922	;# 
  4215     039C                     MDCON           equ	924	;# 
  4216     039D                     MDSRC           equ	925	;# 
  4217     039E                     MDCARH          equ	926	;# 
  4218     039F                     MDCARL          equ	927	;# 
  4219     0411                     TMR3            equ	1041	;# 
  4220     0411                     TMR3L           equ	1041	;# 
  4221     0412                     TMR3H           equ	1042	;# 
  4222     0413                     T3CON           equ	1043	;# 
  4223     0414                     T3GCON          equ	1044	;# 
  4224     0415                     TMR4            equ	1045	;# 
  4225     0416                     PR4             equ	1046	;# 
  4226     0417                     T4CON           equ	1047	;# 
  4227     0418                     TMR5            equ	1048	;# 
  4228     0418                     TMR5L           equ	1048	;# 
  4229     0419                     TMR5H           equ	1049	;# 
  4230     041A                     T5CON           equ	1050	;# 
  4231     041B                     T5GCON          equ	1051	;# 
  4232     041C                     TMR6            equ	1052	;# 
  4233     041D                     PR6             equ	1053	;# 
  4234     041E                     T6CON           equ	1054	;# 
  4235     041F                     CCDCON          equ	1055	;# 
  4236     0498                     NCO1ACC         equ	1176	;# 
  4237     0498                     NCO1ACCL        equ	1176	;# 
  4238     0499                     NCO1ACCH        equ	1177	;# 
  4239     049A                     NCO1ACCU        equ	1178	;# 
  4240     049B                     NCO1INC         equ	1179	;# 
  4241     049B                     NCO1INCL        equ	1179	;# 
  4242     049C                     NCO1INCH        equ	1180	;# 
  4243     049D                     NCO1INCU        equ	1181	;# 
  4244     049E                     NCO1CON         equ	1182	;# 
  4245     049F                     NCO1CLK         equ	1183	;# 
  4246     0617                     PWM5DCL         equ	1559	;# 
  4247     0618                     PWM5DCH         equ	1560	;# 
  4248     0619                     PWM5CON         equ	1561	;# 
  4249     0619                     PWM5CON0        equ	1561	;# 
  4250     061A                     PWM6DCL         equ	1562	;# 
  4251     061B                     PWM6DCH         equ	1563	;# 
  4252     061C                     PWM6CON         equ	1564	;# 
  4253     061C                     PWM6CON0        equ	1564	;# 
  4254     061F                     PWMTMRS         equ	1567	;# 
  4255     0691                     CWG1CLKCON      equ	1681	;# 
  4256     0692                     CWG1DAT         equ	1682	;# 
  4257     0693                     CWG1DBR         equ	1683	;# 
  4258     0694                     CWG1DBF         equ	1684	;# 
  4259     0695                     CWG1CON0        equ	1685	;# 
  4260     0696                     CWG1CON1        equ	1686	;# 
  4261     0697                     CWG1AS0         equ	1687	;# 
  4262     0698                     CWG1AS1         equ	1688	;# 
  4263     0699                     CWG1STR         equ	1689	;# 
  4264     0711                     CWG2CLKCON      equ	1809	;# 
  4265     0712                     CWG2DAT         equ	1810	;# 
  4266     0713                     CWG2DBR         equ	1811	;# 
  4267     0714                     CWG2DBF         equ	1812	;# 
  4268     0715                     CWG2CON0        equ	1813	;# 
  4269     0716                     CWG2CON1        equ	1814	;# 
  4270     0717                     CWG2AS0         equ	1815	;# 
  4271     0718                     CWG2AS1         equ	1816	;# 
  4272     0719                     CWG2STR         equ	1817	;# 
  4273     0891                     NVMADR          equ	2193	;# 
  4274     0891                     EEADR           equ	2193	;# 
  4275     0891                     PMADR           equ	2193	;# 
  4276     0891                     NVMADRL         equ	2193	;# 
  4277     0891                     EEADRL          equ	2193	;# 
  4278     0891                     PMADRL          equ	2193	;# 
  4279     0892                     NVMADRH         equ	2194	;# 
  4280     0892                     EEADRH          equ	2194	;# 
  4281     0892                     PMADRH          equ	2194	;# 
  4282     0893                     NVMDAT          equ	2195	;# 
  4283     0893                     EEDAT           equ	2195	;# 
  4284     0893                     PMDAT           equ	2195	;# 
  4285     0893                     NVMDATL         equ	2195	;# 
  4286     0893                     EEDATL          equ	2195	;# 
  4287     0893                     PMDATL          equ	2195	;# 
  4288     0894                     NVMDATH         equ	2196	;# 
  4289     0894                     EEDATH          equ	2196	;# 
  4290     0894                     PMDATH          equ	2196	;# 
  4291     0895                     NVMCON1         equ	2197	;# 
  4292     0895                     EECON1          equ	2197	;# 
  4293     0895                     PMCON1          equ	2197	;# 
  4294     0896                     NVMCON2         equ	2198	;# 
  4295     0896                     EECON2          equ	2198	;# 
  4296     0896                     PMCON2          equ	2198	;# 
  4297     089B                     PCON0           equ	2203	;# 
  4298     0911                     PMD0            equ	2321	;# 
  4299     0912                     PMD1            equ	2322	;# 
  4300     0913                     PMD2            equ	2323	;# 
  4301     0914                     PMD3            equ	2324	;# 
  4302     0915                     PMD4            equ	2325	;# 
  4303     0916                     PMD5            equ	2326	;# 
  4304     0918                     CPUDOZE         equ	2328	;# 
  4305     0919                     OSCCON1         equ	2329	;# 
  4306     091A                     OSCCON2         equ	2330	;# 
  4307     091B                     OSCCON3         equ	2331	;# 
  4308     091C                     OSCSTAT1        equ	2332	;# 
  4309     091D                     OSCEN           equ	2333	;# 
  4310     091E                     OSCTUNE         equ	2334	;# 
  4311     091F                     OSCFRQ          equ	2335	;# 
  4312     0E0F                     PPSLOCK         equ	3599	;# 
  4313     0E10                     INTPPS          equ	3600	;# 
  4314     0E11                     T0CKIPPS        equ	3601	;# 
  4315     0E12                     T1CKIPPS        equ	3602	;# 
  4316     0E13                     T1GPPS          equ	3603	;# 
  4317     0E14                     CCP1PPS         equ	3604	;# 
  4318     0E15                     CCP2PPS         equ	3605	;# 
  4319     0E16                     CCP3PPS         equ	3606	;# 
  4320     0E17                     CCP4PPS         equ	3607	;# 
  4321     0E18                     CWG1PPS         equ	3608	;# 
  4322     0E19                     CWG2PPS         equ	3609	;# 
  4323     0E1A                     MDCIN1PPS       equ	3610	;# 
  4324     0E1B                     MDCIN2PPS       equ	3611	;# 
  4325     0E1C                     MDMINPPS        equ	3612	;# 
  4326     0E1D                     SSP2CLKPPS      equ	3613	;# 
  4327     0E1E                     SSP2DATPPS      equ	3614	;# 
  4328     0E1F                     SSP2SSPPS       equ	3615	;# 
  4329     0E20                     SSP1CLKPPS      equ	3616	;# 
  4330     0E21                     SSP1DATPPS      equ	3617	;# 
  4331     0E22                     SSP1SSPPS       equ	3618	;# 
  4332     0E24                     RXPPS           equ	3620	;# 
  4333     0E25                     TXPPS           equ	3621	;# 
  4334     0E28                     CLCIN0PPS       equ	3624	;# 
  4335     0E29                     CLCIN1PPS       equ	3625	;# 
  4336     0E2A                     CLCIN2PPS       equ	3626	;# 
  4337     0E2B                     CLCIN3PPS       equ	3627	;# 
  4338     0E2C                     T3CKIPPS        equ	3628	;# 
  4339     0E2D                     T3GPPS          equ	3629	;# 
  4340     0E2E                     T5CKIPPS        equ	3630	;# 
  4341     0E2F                     T5GPPS          equ	3631	;# 
  4342     0E90                     RA0PPS          equ	3728	;# 
  4343     0E91                     RA1PPS          equ	3729	;# 
  4344     0E92                     RA2PPS          equ	3730	;# 
  4345     0E94                     RA4PPS          equ	3732	;# 
  4346     0E95                     RA5PPS          equ	3733	;# 
  4347     0E9C                     RB4PPS          equ	3740	;# 
  4348     0E9D                     RB5PPS          equ	3741	;# 
  4349     0E9E                     RB6PPS          equ	3742	;# 
  4350     0E9F                     RB7PPS          equ	3743	;# 
  4351     0EA0                     RC0PPS          equ	3744	;# 
  4352     0EA1                     RC1PPS          equ	3745	;# 
  4353     0EA2                     RC2PPS          equ	3746	;# 
  4354     0EA3                     RC3PPS          equ	3747	;# 
  4355     0EA4                     RC4PPS          equ	3748	;# 
  4356     0EA5                     RC5PPS          equ	3749	;# 
  4357     0EA6                     RC6PPS          equ	3750	;# 
  4358     0EA7                     RC7PPS          equ	3751	;# 
  4359     0F0F                     CLCDATA         equ	3855	;# 
  4360     0F10                     CLC1CON         equ	3856	;# 
  4361     0F11                     CLC1POL         equ	3857	;# 
  4362     0F12                     CLC1SEL0        equ	3858	;# 
  4363     0F13                     CLC1SEL1        equ	3859	;# 
  4364     0F14                     CLC1SEL2        equ	3860	;# 
  4365     0F15                     CLC1SEL3        equ	3861	;# 
  4366     0F16                     CLC1GLS0        equ	3862	;# 
  4367     0F17                     CLC1GLS1        equ	3863	;# 
  4368     0F18                     CLC1GLS2        equ	3864	;# 
  4369     0F19                     CLC1GLS3        equ	3865	;# 
  4370     0F1A                     CLC2CON         equ	3866	;# 
  4371     0F1B                     CLC2POL         equ	3867	;# 
  4372     0F1C                     CLC2SEL0        equ	3868	;# 
  4373     0F1D                     CLC2SEL1        equ	3869	;# 
  4374     0F1E                     CLC2SEL2        equ	3870	;# 
  4375     0F1F                     CLC2SEL3        equ	3871	;# 
  4376     0F20                     CLC2GLS0        equ	3872	;# 
  4377     0F21                     CLC2GLS1        equ	3873	;# 
  4378     0F22                     CLC2GLS2        equ	3874	;# 
  4379     0F23                     CLC2GLS3        equ	3875	;# 
  4380     0F24                     CLC3CON         equ	3876	;# 
  4381     0F25                     CLC3POL         equ	3877	;# 
  4382     0F26                     CLC3SEL0        equ	3878	;# 
  4383     0F27                     CLC3SEL1        equ	3879	;# 
  4384     0F28                     CLC3SEL2        equ	3880	;# 
  4385     0F29                     CLC3SEL3        equ	3881	;# 
  4386     0F2A                     CLC3GLS0        equ	3882	;# 
  4387     0F2B                     CLC3GLS1        equ	3883	;# 
  4388     0F2C                     CLC3GLS2        equ	3884	;# 
  4389     0F2D                     CLC3GLS3        equ	3885	;# 
  4390     0F2E                     CLC4CON         equ	3886	;# 
  4391     0F2F                     CLC4POL         equ	3887	;# 
  4392     0F30                     CLC4SEL0        equ	3888	;# 
  4393     0F31                     CLC4SEL1        equ	3889	;# 
  4394     0F32                     CLC4SEL2        equ	3890	;# 
  4395     0F33                     CLC4SEL3        equ	3891	;# 
  4396     0F34                     CLC4GLS0        equ	3892	;# 
  4397     0F35                     CLC4GLS1        equ	3893	;# 
  4398     0F36                     CLC4GLS2        equ	3894	;# 
  4399     0F37                     CLC4GLS3        equ	3895	;# 
  4400     0FE4                     STATUS_SHAD     equ	4068	;# 
  4401     0FE5                     WREG_SHAD       equ	4069	;# 
  4402     0FE6                     BSR_SHAD        equ	4070	;# 
  4403     0FE7                     PCLATH_SHAD     equ	4071	;# 
  4404     0FE8                     FSR0L_SHAD      equ	4072	;# 
  4405     0FE9                     FSR0H_SHAD      equ	4073	;# 
  4406     0FEA                     FSR1L_SHAD      equ	4074	;# 
  4407     0FEB                     FSR1H_SHAD      equ	4075	;# 
  4408     0FED                     STKPTR          equ	4077	;# 
  4409     0FEE                     TOSL            equ	4078	;# 
  4410     0FEF                     TOSH            equ	4079	;# 
  4411     0000                     INDF0           equ	0	;# 
  4412     0001                     INDF1           equ	1	;# 
  4413     0002                     PCL             equ	2	;# 
  4414     0003                     STATUS          equ	3	;# 
  4415     0004                     FSR0L           equ	4	;# 
  4416     0005                     FSR0H           equ	5	;# 
  4417     0006                     FSR1L           equ	6	;# 
  4418     0007                     FSR1H           equ	7	;# 
  4419     0008                     BSR             equ	8	;# 
  4420     0009                     WREG            equ	9	;# 
  4421     000A                     PCLATH          equ	10	;# 
  4422     000B                     INTCON          equ	11	;# 
  4423     000C                     PORTA           equ	12	;# 
  4424     000D                     PORTB           equ	13	;# 
  4425     000E                     PORTC           equ	14	;# 
  4426     0010                     PIR0            equ	16	;# 
  4427     0011                     PIR1            equ	17	;# 
  4428     0012                     PIR2            equ	18	;# 
  4429     0013                     PIR3            equ	19	;# 
  4430     0014                     PIR4            equ	20	;# 
  4431     0015                     TMR0L           equ	21	;# 
  4432     0015                     TMR0            equ	21	;# 
  4433     0016                     TMR0H           equ	22	;# 
  4434     0016                     PR0             equ	22	;# 
  4435     0017                     T0CON0          equ	23	;# 
  4436     0018                     T0CON1          equ	24	;# 
  4437     0019                     TMR1            equ	25	;# 
  4438     0019                     TMR1L           equ	25	;# 
  4439     001A                     TMR1H           equ	26	;# 
  4440     001B                     T1CON           equ	27	;# 
  4441     001C                     T1GCON          equ	28	;# 
  4442     001D                     TMR2            equ	29	;# 
  4443     001E                     PR2             equ	30	;# 
  4444     001F                     T2CON           equ	31	;# 
  4445     008C                     TRISA           equ	140	;# 
  4446     008D                     TRISB           equ	141	;# 
  4447     008E                     TRISC           equ	142	;# 
  4448     0090                     PIE0            equ	144	;# 
  4449     0091                     PIE1            equ	145	;# 
  4450     0092                     PIE2            equ	146	;# 
  4451     0093                     PIE3            equ	147	;# 
  4452     0094                     PIE4            equ	148	;# 
  4453     0097                     WDTCON          equ	151	;# 
  4454     009B                     ADRES           equ	155	;# 
  4455     009B                     ADRESL          equ	155	;# 
  4456     009C                     ADRESH          equ	156	;# 
  4457     009D                     ADCON0          equ	157	;# 
  4458     009E                     ADCON1          equ	158	;# 
  4459     009F                     ADACT           equ	159	;# 
  4460     010C                     LATA            equ	268	;# 
  4461     010D                     LATB            equ	269	;# 
  4462     010E                     LATC            equ	270	;# 
  4463     0111                     CM1CON0         equ	273	;# 
  4464     0112                     CM1CON1         equ	274	;# 
  4465     0113                     CM2CON0         equ	275	;# 
  4466     0114                     CM2CON1         equ	276	;# 
  4467     0115                     CMOUT           equ	277	;# 
  4468     0116                     BORCON          equ	278	;# 
  4469     0117                     FVRCON          equ	279	;# 
  4470     0118                     DACCON0         equ	280	;# 
  4471     0119                     DACCON1         equ	281	;# 
  4472     018C                     ANSELA          equ	396	;# 
  4473     018D                     ANSELB          equ	397	;# 
  4474     018E                     ANSELC          equ	398	;# 
  4475     0197                     VREGCON         equ	407	;# 
  4476     0199                     RC1REG          equ	409	;# 
  4477     0199                     RCREG           equ	409	;# 
  4478     0199                     RCREG1          equ	409	;# 
  4479     019A                     TX1REG          equ	410	;# 
  4480     019A                     TXREG1          equ	410	;# 
  4481     019A                     TXREG           equ	410	;# 
  4482     019B                     SP1BRG          equ	411	;# 
  4483     019B                     SPBRG           equ	411	;# 
  4484     019B                     SP1BRGL         equ	411	;# 
  4485     019B                     SPBRG1          equ	411	;# 
  4486     019B                     SPBRGL          equ	411	;# 
  4487     019C                     SP1BRGH         equ	412	;# 
  4488     019C                     SPBRGH          equ	412	;# 
  4489     019C                     SPBRGH1         equ	412	;# 
  4490     019D                     RC1STA          equ	413	;# 
  4491     019D                     RCSTA1          equ	413	;# 
  4492     019D                     RCSTA           equ	413	;# 
  4493     019E                     TX1STA          equ	414	;# 
  4494     019E                     TXSTA1          equ	414	;# 
  4495     019E                     TXSTA           equ	414	;# 
  4496     019F                     BAUD1CON        equ	415	;# 
  4497     019F                     BAUDCON1        equ	415	;# 
  4498     019F                     BAUDCTL1        equ	415	;# 
  4499     019F                     BAUDCON         equ	415	;# 
  4500     019F                     BAUDCTL         equ	415	;# 
  4501     020C                     WPUA            equ	524	;# 
  4502     020D                     WPUB            equ	525	;# 
  4503     020E                     WPUC            equ	526	;# 
  4504     0211                     SSP1BUF         equ	529	;# 
  4505     0211                     SSPBUF          equ	529	;# 
  4506     0212                     SSP1ADD         equ	530	;# 
  4507     0212                     SSPADD          equ	530	;# 
  4508     0213                     SSP1MSK         equ	531	;# 
  4509     0213                     SSPMSK          equ	531	;# 
  4510     0214                     SSP1STAT        equ	532	;# 
  4511     0214                     SSPSTAT         equ	532	;# 
  4512     0215                     SSP1CON1        equ	533	;# 
  4513     0215                     SSPCON          equ	533	;# 
  4514     0215                     SSPCON1         equ	533	;# 
  4515     0215                     SSP1CON         equ	533	;# 
  4516     0216                     SSP1CON2        equ	534	;# 
  4517     0216                     SSPCON2         equ	534	;# 
  4518     0217                     SSP1CON3        equ	535	;# 
  4519     0217                     SSPCON3         equ	535	;# 
  4520     0219                     SSP2BUF         equ	537	;# 
  4521     021A                     SSP2ADD         equ	538	;# 
  4522     021B                     SSP2MSK         equ	539	;# 
  4523     021C                     SSP2STAT        equ	540	;# 
  4524     021D                     SSP2CON1        equ	541	;# 
  4525     021D                     SSP2CON         equ	541	;# 
  4526     021E                     SSP2CON2        equ	542	;# 
  4527     021F                     SSP2CON3        equ	543	;# 
  4528     028C                     ODCONA          equ	652	;# 
  4529     028D                     ODCONB          equ	653	;# 
  4530     028E                     ODCONC          equ	654	;# 
  4531     0291                     CCPR1           equ	657	;# 
  4532     0291                     CCPR1L          equ	657	;# 
  4533     0292                     CCPR1H          equ	658	;# 
  4534     0293                     CCP1CON         equ	659	;# 
  4535     0294                     CCP1CAP         equ	660	;# 
  4536     0295                     CCPR2           equ	661	;# 
  4537     0295                     CCPR2L          equ	661	;# 
  4538     0296                     CCPR2H          equ	662	;# 
  4539     0297                     CCP2CON         equ	663	;# 
  4540     0298                     CCP2CAP         equ	664	;# 
  4541     029F                     CCPTMRS         equ	671	;# 
  4542     030C                     SLRCONA         equ	780	;# 
  4543     030D                     SLRCONB         equ	781	;# 
  4544     030E                     SLRCONC         equ	782	;# 
  4545     0311                     CCPR3           equ	785	;# 
  4546     0311                     CCPR3L          equ	785	;# 
  4547     0312                     CCPR3H          equ	786	;# 
  4548     0313                     CCP3CON         equ	787	;# 
  4549     0314                     CCP3CAP         equ	788	;# 
  4550     0315                     CCPR4           equ	789	;# 
  4551     0315                     CCPR4L          equ	789	;# 
  4552     0316                     CCPR4H          equ	790	;# 
  4553     0317                     CCP4CON         equ	791	;# 
  4554     0318                     CCP4CAP         equ	792	;# 
  4555     038C                     INLVLA          equ	908	;# 
  4556     038D                     INLVLB          equ	909	;# 
  4557     038E                     INLVLC          equ	910	;# 
  4558     0391                     IOCAP           equ	913	;# 
  4559     0392                     IOCAN           equ	914	;# 
  4560     0393                     IOCAF           equ	915	;# 
  4561     0394                     IOCBP           equ	916	;# 
  4562     0395                     IOCBN           equ	917	;# 
  4563     0396                     IOCBF           equ	918	;# 
  4564     0397                     IOCCP           equ	919	;# 
  4565     0398                     IOCCN           equ	920	;# 
  4566     0399                     IOCCF           equ	921	;# 
  4567     039A                     CLKRCON         equ	922	;# 
  4568     039C                     MDCON           equ	924	;# 
  4569     039D                     MDSRC           equ	925	;# 
  4570     039E                     MDCARH          equ	926	;# 
  4571     039F                     MDCARL          equ	927	;# 
  4572     0411                     TMR3            equ	1041	;# 
  4573     0411                     TMR3L           equ	1041	;# 
  4574     0412                     TMR3H           equ	1042	;# 
  4575     0413                     T3CON           equ	1043	;# 
  4576     0414                     T3GCON          equ	1044	;# 
  4577     0415                     TMR4            equ	1045	;# 
  4578     0416                     PR4             equ	1046	;# 
  4579     0417                     T4CON           equ	1047	;# 
  4580     0418                     TMR5            equ	1048	;# 
  4581     0418                     TMR5L           equ	1048	;# 
  4582     0419                     TMR5H           equ	1049	;# 
  4583     041A                     T5CON           equ	1050	;# 
  4584     041B                     T5GCON          equ	1051	;# 
  4585     041C                     TMR6            equ	1052	;# 
  4586     041D                     PR6             equ	1053	;# 
  4587     041E                     T6CON           equ	1054	;# 
  4588     041F                     CCDCON          equ	1055	;# 
  4589     0498                     NCO1ACC         equ	1176	;# 
  4590     0498                     NCO1ACCL        equ	1176	;# 
  4591     0499                     NCO1ACCH        equ	1177	;# 
  4592     049A                     NCO1ACCU        equ	1178	;# 
  4593     049B                     NCO1INC         equ	1179	;# 
  4594     049B                     NCO1INCL        equ	1179	;# 
  4595     049C                     NCO1INCH        equ	1180	;# 
  4596     049D                     NCO1INCU        equ	1181	;# 
  4597     049E                     NCO1CON         equ	1182	;# 
  4598     049F                     NCO1CLK         equ	1183	;# 
  4599     0617                     PWM5DCL         equ	1559	;# 
  4600     0618                     PWM5DCH         equ	1560	;# 
  4601     0619                     PWM5CON         equ	1561	;# 
  4602     0619                     PWM5CON0        equ	1561	;# 
  4603     061A                     PWM6DCL         equ	1562	;# 
  4604     061B                     PWM6DCH         equ	1563	;# 
  4605     061C                     PWM6CON         equ	1564	;# 
  4606     061C                     PWM6CON0        equ	1564	;# 
  4607     061F                     PWMTMRS         equ	1567	;# 
  4608     0691                     CWG1CLKCON      equ	1681	;# 
  4609     0692                     CWG1DAT         equ	1682	;# 
  4610     0693                     CWG1DBR         equ	1683	;# 
  4611     0694                     CWG1DBF         equ	1684	;# 
  4612     0695                     CWG1CON0        equ	1685	;# 
  4613     0696                     CWG1CON1        equ	1686	;# 
  4614     0697                     CWG1AS0         equ	1687	;# 
  4615     0698                     CWG1AS1         equ	1688	;# 
  4616     0699                     CWG1STR         equ	1689	;# 
  4617     0711                     CWG2CLKCON      equ	1809	;# 
  4618     0712                     CWG2DAT         equ	1810	;# 
  4619     0713                     CWG2DBR         equ	1811	;# 
  4620     0714                     CWG2DBF         equ	1812	;# 
  4621     0715                     CWG2CON0        equ	1813	;# 
  4622     0716                     CWG2CON1        equ	1814	;# 
  4623     0717                     CWG2AS0         equ	1815	;# 
  4624     0718                     CWG2AS1         equ	1816	;# 
  4625     0719                     CWG2STR         equ	1817	;# 
  4626     0891                     NVMADR          equ	2193	;# 
  4627     0891                     EEADR           equ	2193	;# 
  4628     0891                     PMADR           equ	2193	;# 
  4629     0891                     NVMADRL         equ	2193	;# 
  4630     0891                     EEADRL          equ	2193	;# 
  4631     0891                     PMADRL          equ	2193	;# 
  4632     0892                     NVMADRH         equ	2194	;# 
  4633     0892                     EEADRH          equ	2194	;# 
  4634     0892                     PMADRH          equ	2194	;# 
  4635     0893                     NVMDAT          equ	2195	;# 
  4636     0893                     EEDAT           equ	2195	;# 
  4637     0893                     PMDAT           equ	2195	;# 
  4638     0893                     NVMDATL         equ	2195	;# 
  4639     0893                     EEDATL          equ	2195	;# 
  4640     0893                     PMDATL          equ	2195	;# 
  4641     0894                     NVMDATH         equ	2196	;# 
  4642     0894                     EEDATH          equ	2196	;# 
  4643     0894                     PMDATH          equ	2196	;# 
  4644     0895                     NVMCON1         equ	2197	;# 
  4645     0895                     EECON1          equ	2197	;# 
  4646     0895                     PMCON1          equ	2197	;# 
  4647     0896                     NVMCON2         equ	2198	;# 
  4648     0896                     EECON2          equ	2198	;# 
  4649     0896                     PMCON2          equ	2198	;# 
  4650     089B                     PCON0           equ	2203	;# 
  4651     0911                     PMD0            equ	2321	;# 
  4652     0912                     PMD1            equ	2322	;# 
  4653     0913                     PMD2            equ	2323	;# 
  4654     0914                     PMD3            equ	2324	;# 
  4655     0915                     PMD4            equ	2325	;# 
  4656     0916                     PMD5            equ	2326	;# 
  4657     0918                     CPUDOZE         equ	2328	;# 
  4658     0919                     OSCCON1         equ	2329	;# 
  4659     091A                     OSCCON2         equ	2330	;# 
  4660     091B                     OSCCON3         equ	2331	;# 
  4661     091C                     OSCSTAT1        equ	2332	;# 
  4662     091D                     OSCEN           equ	2333	;# 
  4663     091E                     OSCTUNE         equ	2334	;# 
  4664     091F                     OSCFRQ          equ	2335	;# 
  4665     0E0F                     PPSLOCK         equ	3599	;# 
  4666     0E10                     INTPPS          equ	3600	;# 
  4667     0E11                     T0CKIPPS        equ	3601	;# 
  4668     0E12                     T1CKIPPS        equ	3602	;# 
  4669     0E13                     T1GPPS          equ	3603	;# 
  4670     0E14                     CCP1PPS         equ	3604	;# 
  4671     0E15                     CCP2PPS         equ	3605	;# 
  4672     0E16                     CCP3PPS         equ	3606	;# 
  4673     0E17                     CCP4PPS         equ	3607	;# 
  4674     0E18                     CWG1PPS         equ	3608	;# 
  4675     0E19                     CWG2PPS         equ	3609	;# 
  4676     0E1A                     MDCIN1PPS       equ	3610	;# 
  4677     0E1B                     MDCIN2PPS       equ	3611	;# 
  4678     0E1C                     MDMINPPS        equ	3612	;# 
  4679     0E1D                     SSP2CLKPPS      equ	3613	;# 
  4680     0E1E                     SSP2DATPPS      equ	3614	;# 
  4681     0E1F                     SSP2SSPPS       equ	3615	;# 
  4682     0E20                     SSP1CLKPPS      equ	3616	;# 
  4683     0E21                     SSP1DATPPS      equ	3617	;# 
  4684     0E22                     SSP1SSPPS       equ	3618	;# 
  4685     0E24                     RXPPS           equ	3620	;# 
  4686     0E25                     TXPPS           equ	3621	;# 
  4687     0E28                     CLCIN0PPS       equ	3624	;# 
  4688     0E29                     CLCIN1PPS       equ	3625	;# 
  4689     0E2A                     CLCIN2PPS       equ	3626	;# 
  4690     0E2B                     CLCIN3PPS       equ	3627	;# 
  4691     0E2C                     T3CKIPPS        equ	3628	;# 
  4692     0E2D                     T3GPPS          equ	3629	;# 
  4693     0E2E                     T5CKIPPS        equ	3630	;# 
  4694     0E2F                     T5GPPS          equ	3631	;# 
  4695     0E90                     RA0PPS          equ	3728	;# 
  4696     0E91                     RA1PPS          equ	3729	;# 
  4697     0E92                     RA2PPS          equ	3730	;# 
  4698     0E94                     RA4PPS          equ	3732	;# 
  4699     0E95                     RA5PPS          equ	3733	;# 
  4700     0E9C                     RB4PPS          equ	3740	;# 
  4701     0E9D                     RB5PPS          equ	3741	;# 
  4702     0E9E                     RB6PPS          equ	3742	;# 
  4703     0E9F                     RB7PPS          equ	3743	;# 
  4704     0EA0                     RC0PPS          equ	3744	;# 
  4705     0EA1                     RC1PPS          equ	3745	;# 
  4706     0EA2                     RC2PPS          equ	3746	;# 
  4707     0EA3                     RC3PPS          equ	3747	;# 
  4708     0EA4                     RC4PPS          equ	3748	;# 
  4709     0EA5                     RC5PPS          equ	3749	;# 
  4710     0EA6                     RC6PPS          equ	3750	;# 
  4711     0EA7                     RC7PPS          equ	3751	;# 
  4712     0F0F                     CLCDATA         equ	3855	;# 
  4713     0F10                     CLC1CON         equ	3856	;# 
  4714     0F11                     CLC1POL         equ	3857	;# 
  4715     0F12                     CLC1SEL0        equ	3858	;# 
  4716     0F13                     CLC1SEL1        equ	3859	;# 
  4717     0F14                     CLC1SEL2        equ	3860	;# 
  4718     0F15                     CLC1SEL3        equ	3861	;# 
  4719     0F16                     CLC1GLS0        equ	3862	;# 
  4720     0F17                     CLC1GLS1        equ	3863	;# 
  4721     0F18                     CLC1GLS2        equ	3864	;# 
  4722     0F19                     CLC1GLS3        equ	3865	;# 
  4723     0F1A                     CLC2CON         equ	3866	;# 
  4724     0F1B                     CLC2POL         equ	3867	;# 
  4725     0F1C                     CLC2SEL0        equ	3868	;# 
  4726     0F1D                     CLC2SEL1        equ	3869	;# 
  4727     0F1E                     CLC2SEL2        equ	3870	;# 
  4728     0F1F                     CLC2SEL3        equ	3871	;# 
  4729     0F20                     CLC2GLS0        equ	3872	;# 
  4730     0F21                     CLC2GLS1        equ	3873	;# 
  4731     0F22                     CLC2GLS2        equ	3874	;# 
  4732     0F23                     CLC2GLS3        equ	3875	;# 
  4733     0F24                     CLC3CON         equ	3876	;# 
  4734     0F25                     CLC3POL         equ	3877	;# 
  4735     0F26                     CLC3SEL0        equ	3878	;# 
  4736     0F27                     CLC3SEL1        equ	3879	;# 
  4737     0F28                     CLC3SEL2        equ	3880	;# 
  4738     0F29                     CLC3SEL3        equ	3881	;# 
  4739     0F2A                     CLC3GLS0        equ	3882	;# 
  4740     0F2B                     CLC3GLS1        equ	3883	;# 
  4741     0F2C                     CLC3GLS2        equ	3884	;# 
  4742     0F2D                     CLC3GLS3        equ	3885	;# 
  4743     0F2E                     CLC4CON         equ	3886	;# 
  4744     0F2F                     CLC4POL         equ	3887	;# 
  4745     0F30                     CLC4SEL0        equ	3888	;# 
  4746     0F31                     CLC4SEL1        equ	3889	;# 
  4747     0F32                     CLC4SEL2        equ	3890	;# 
  4748     0F33                     CLC4SEL3        equ	3891	;# 
  4749     0F34                     CLC4GLS0        equ	3892	;# 
  4750     0F35                     CLC4GLS1        equ	3893	;# 
  4751     0F36                     CLC4GLS2        equ	3894	;# 
  4752     0F37                     CLC4GLS3        equ	3895	;# 
  4753     0FE4                     STATUS_SHAD     equ	4068	;# 
  4754     0FE5                     WREG_SHAD       equ	4069	;# 
  4755     0FE6                     BSR_SHAD        equ	4070	;# 
  4756     0FE7                     PCLATH_SHAD     equ	4071	;# 
  4757     0FE8                     FSR0L_SHAD      equ	4072	;# 
  4758     0FE9                     FSR0H_SHAD      equ	4073	;# 
  4759     0FEA                     FSR1L_SHAD      equ	4074	;# 
  4760     0FEB                     FSR1H_SHAD      equ	4075	;# 
  4761     0FED                     STKPTR          equ	4077	;# 
  4762     0FEE                     TOSL            equ	4078	;# 
  4763     0FEF                     TOSH            equ	4079	;# 
  4764     0000                     INDF0           equ	0	;# 
  4765     0001                     INDF1           equ	1	;# 
  4766     0002                     PCL             equ	2	;# 
  4767     0003                     STATUS          equ	3	;# 
  4768     0004                     FSR0L           equ	4	;# 
  4769     0005                     FSR0H           equ	5	;# 
  4770     0006                     FSR1L           equ	6	;# 
  4771     0007                     FSR1H           equ	7	;# 
  4772     0008                     BSR             equ	8	;# 
  4773     0009                     WREG            equ	9	;# 
  4774     000A                     PCLATH          equ	10	;# 
  4775     000B                     INTCON          equ	11	;# 
  4776     000C                     PORTA           equ	12	;# 
  4777     000D                     PORTB           equ	13	;# 
  4778     000E                     PORTC           equ	14	;# 
  4779     0010                     PIR0            equ	16	;# 
  4780     0011                     PIR1            equ	17	;# 
  4781     0012                     PIR2            equ	18	;# 
  4782     0013                     PIR3            equ	19	;# 
  4783     0014                     PIR4            equ	20	;# 
  4784     0015                     TMR0L           equ	21	;# 
  4785     0015                     TMR0            equ	21	;# 
  4786     0016                     TMR0H           equ	22	;# 
  4787     0016                     PR0             equ	22	;# 
  4788     0017                     T0CON0          equ	23	;# 
  4789     0018                     T0CON1          equ	24	;# 
  4790     0019                     TMR1            equ	25	;# 
  4791     0019                     TMR1L           equ	25	;# 
  4792     001A                     TMR1H           equ	26	;# 
  4793     001B                     T1CON           equ	27	;# 
  4794     001C                     T1GCON          equ	28	;# 
  4795     001D                     TMR2            equ	29	;# 
  4796     001E                     PR2             equ	30	;# 
  4797     001F                     T2CON           equ	31	;# 
  4798     008C                     TRISA           equ	140	;# 
  4799     008D                     TRISB           equ	141	;# 
  4800     008E                     TRISC           equ	142	;# 
  4801     0090                     PIE0            equ	144	;# 
  4802     0091                     PIE1            equ	145	;# 
  4803     0092                     PIE2            equ	146	;# 
  4804     0093                     PIE3            equ	147	;# 
  4805     0094                     PIE4            equ	148	;# 
  4806     0097                     WDTCON          equ	151	;# 
  4807     009B                     ADRES           equ	155	;# 
  4808     009B                     ADRESL          equ	155	;# 
  4809     009C                     ADRESH          equ	156	;# 
  4810     009D                     ADCON0          equ	157	;# 
  4811     009E                     ADCON1          equ	158	;# 
  4812     009F                     ADACT           equ	159	;# 
  4813     010C                     LATA            equ	268	;# 
  4814     010D                     LATB            equ	269	;# 
  4815     010E                     LATC            equ	270	;# 
  4816     0111                     CM1CON0         equ	273	;# 
  4817     0112                     CM1CON1         equ	274	;# 
  4818     0113                     CM2CON0         equ	275	;# 
  4819     0114                     CM2CON1         equ	276	;# 
  4820     0115                     CMOUT           equ	277	;# 
  4821     0116                     BORCON          equ	278	;# 
  4822     0117                     FVRCON          equ	279	;# 
  4823     0118                     DACCON0         equ	280	;# 
  4824     0119                     DACCON1         equ	281	;# 
  4825     018C                     ANSELA          equ	396	;# 
  4826     018D                     ANSELB          equ	397	;# 
  4827     018E                     ANSELC          equ	398	;# 
  4828     0197                     VREGCON         equ	407	;# 
  4829     0199                     RC1REG          equ	409	;# 
  4830     0199                     RCREG           equ	409	;# 
  4831     0199                     RCREG1          equ	409	;# 
  4832     019A                     TX1REG          equ	410	;# 
  4833     019A                     TXREG1          equ	410	;# 
  4834     019A                     TXREG           equ	410	;# 
  4835     019B                     SP1BRG          equ	411	;# 
  4836     019B                     SPBRG           equ	411	;# 
  4837     019B                     SP1BRGL         equ	411	;# 
  4838     019B                     SPBRG1          equ	411	;# 
  4839     019B                     SPBRGL          equ	411	;# 
  4840     019C                     SP1BRGH         equ	412	;# 
  4841     019C                     SPBRGH          equ	412	;# 
  4842     019C                     SPBRGH1         equ	412	;# 
  4843     019D                     RC1STA          equ	413	;# 
  4844     019D                     RCSTA1          equ	413	;# 
  4845     019D                     RCSTA           equ	413	;# 
  4846     019E                     TX1STA          equ	414	;# 
  4847     019E                     TXSTA1          equ	414	;# 
  4848     019E                     TXSTA           equ	414	;# 
  4849     019F                     BAUD1CON        equ	415	;# 
  4850     019F                     BAUDCON1        equ	415	;# 
  4851     019F                     BAUDCTL1        equ	415	;# 
  4852     019F                     BAUDCON         equ	415	;# 
  4853     019F                     BAUDCTL         equ	415	;# 
  4854     020C                     WPUA            equ	524	;# 
  4855     020D                     WPUB            equ	525	;# 
  4856     020E                     WPUC            equ	526	;# 
  4857     0211                     SSP1BUF         equ	529	;# 
  4858     0211                     SSPBUF          equ	529	;# 
  4859     0212                     SSP1ADD         equ	530	;# 
  4860     0212                     SSPADD          equ	530	;# 
  4861     0213                     SSP1MSK         equ	531	;# 
  4862     0213                     SSPMSK          equ	531	;# 
  4863     0214                     SSP1STAT        equ	532	;# 
  4864     0214                     SSPSTAT         equ	532	;# 
  4865     0215                     SSP1CON1        equ	533	;# 
  4866     0215                     SSPCON          equ	533	;# 
  4867     0215                     SSPCON1         equ	533	;# 
  4868     0215                     SSP1CON         equ	533	;# 
  4869     0216                     SSP1CON2        equ	534	;# 
  4870     0216                     SSPCON2         equ	534	;# 
  4871     0217                     SSP1CON3        equ	535	;# 
  4872     0217                     SSPCON3         equ	535	;# 
  4873     0219                     SSP2BUF         equ	537	;# 
  4874     021A                     SSP2ADD         equ	538	;# 
  4875     021B                     SSP2MSK         equ	539	;# 
  4876     021C                     SSP2STAT        equ	540	;# 
  4877     021D                     SSP2CON1        equ	541	;# 
  4878     021D                     SSP2CON         equ	541	;# 
  4879     021E                     SSP2CON2        equ	542	;# 
  4880     021F                     SSP2CON3        equ	543	;# 
  4881     028C                     ODCONA          equ	652	;# 
  4882     028D                     ODCONB          equ	653	;# 
  4883     028E                     ODCONC          equ	654	;# 
  4884     0291                     CCPR1           equ	657	;# 
  4885     0291                     CCPR1L          equ	657	;# 
  4886     0292                     CCPR1H          equ	658	;# 
  4887     0293                     CCP1CON         equ	659	;# 
  4888     0294                     CCP1CAP         equ	660	;# 
  4889     0295                     CCPR2           equ	661	;# 
  4890     0295                     CCPR2L          equ	661	;# 
  4891     0296                     CCPR2H          equ	662	;# 
  4892     0297                     CCP2CON         equ	663	;# 
  4893     0298                     CCP2CAP         equ	664	;# 
  4894     029F                     CCPTMRS         equ	671	;# 
  4895     030C                     SLRCONA         equ	780	;# 
  4896     030D                     SLRCONB         equ	781	;# 
  4897     030E                     SLRCONC         equ	782	;# 
  4898     0311                     CCPR3           equ	785	;# 
  4899     0311                     CCPR3L          equ	785	;# 
  4900     0312                     CCPR3H          equ	786	;# 
  4901     0313                     CCP3CON         equ	787	;# 
  4902     0314                     CCP3CAP         equ	788	;# 
  4903     0315                     CCPR4           equ	789	;# 
  4904     0315                     CCPR4L          equ	789	;# 
  4905     0316                     CCPR4H          equ	790	;# 
  4906     0317                     CCP4CON         equ	791	;# 
  4907     0318                     CCP4CAP         equ	792	;# 
  4908     038C                     INLVLA          equ	908	;# 
  4909     038D                     INLVLB          equ	909	;# 
  4910     038E                     INLVLC          equ	910	;# 
  4911     0391                     IOCAP           equ	913	;# 
  4912     0392                     IOCAN           equ	914	;# 
  4913     0393                     IOCAF           equ	915	;# 
  4914     0394                     IOCBP           equ	916	;# 
  4915     0395                     IOCBN           equ	917	;# 
  4916     0396                     IOCBF           equ	918	;# 
  4917     0397                     IOCCP           equ	919	;# 
  4918     0398                     IOCCN           equ	920	;# 
  4919     0399                     IOCCF           equ	921	;# 
  4920     039A                     CLKRCON         equ	922	;# 
  4921     039C                     MDCON           equ	924	;# 
  4922     039D                     MDSRC           equ	925	;# 
  4923     039E                     MDCARH          equ	926	;# 
  4924     039F                     MDCARL          equ	927	;# 
  4925     0411                     TMR3            equ	1041	;# 
  4926     0411                     TMR3L           equ	1041	;# 
  4927     0412                     TMR3H           equ	1042	;# 
  4928     0413                     T3CON           equ	1043	;# 
  4929     0414                     T3GCON          equ	1044	;# 
  4930     0415                     TMR4            equ	1045	;# 
  4931     0416                     PR4             equ	1046	;# 
  4932     0417                     T4CON           equ	1047	;# 
  4933     0418                     TMR5            equ	1048	;# 
  4934     0418                     TMR5L           equ	1048	;# 
  4935     0419                     TMR5H           equ	1049	;# 
  4936     041A                     T5CON           equ	1050	;# 
  4937     041B                     T5GCON          equ	1051	;# 
  4938     041C                     TMR6            equ	1052	;# 
  4939     041D                     PR6             equ	1053	;# 
  4940     041E                     T6CON           equ	1054	;# 
  4941     041F                     CCDCON          equ	1055	;# 
  4942     0498                     NCO1ACC         equ	1176	;# 
  4943     0498                     NCO1ACCL        equ	1176	;# 
  4944     0499                     NCO1ACCH        equ	1177	;# 
  4945     049A                     NCO1ACCU        equ	1178	;# 
  4946     049B                     NCO1INC         equ	1179	;# 
  4947     049B                     NCO1INCL        equ	1179	;# 
  4948     049C                     NCO1INCH        equ	1180	;# 
  4949     049D                     NCO1INCU        equ	1181	;# 
  4950     049E                     NCO1CON         equ	1182	;# 
  4951     049F                     NCO1CLK         equ	1183	;# 
  4952     0617                     PWM5DCL         equ	1559	;# 
  4953     0618                     PWM5DCH         equ	1560	;# 
  4954     0619                     PWM5CON         equ	1561	;# 
  4955     0619                     PWM5CON0        equ	1561	;# 
  4956     061A                     PWM6DCL         equ	1562	;# 
  4957     061B                     PWM6DCH         equ	1563	;# 
  4958     061C                     PWM6CON         equ	1564	;# 
  4959     061C                     PWM6CON0        equ	1564	;# 
  4960     061F                     PWMTMRS         equ	1567	;# 
  4961     0691                     CWG1CLKCON      equ	1681	;# 
  4962     0692                     CWG1DAT         equ	1682	;# 
  4963     0693                     CWG1DBR         equ	1683	;# 
  4964     0694                     CWG1DBF         equ	1684	;# 
  4965     0695                     CWG1CON0        equ	1685	;# 
  4966     0696                     CWG1CON1        equ	1686	;# 
  4967     0697                     CWG1AS0         equ	1687	;# 
  4968     0698                     CWG1AS1         equ	1688	;# 
  4969     0699                     CWG1STR         equ	1689	;# 
  4970     0711                     CWG2CLKCON      equ	1809	;# 
  4971     0712                     CWG2DAT         equ	1810	;# 
  4972     0713                     CWG2DBR         equ	1811	;# 
  4973     0714                     CWG2DBF         equ	1812	;# 
  4974     0715                     CWG2CON0        equ	1813	;# 
  4975     0716                     CWG2CON1        equ	1814	;# 
  4976     0717                     CWG2AS0         equ	1815	;# 
  4977     0718                     CWG2AS1         equ	1816	;# 
  4978     0719                     CWG2STR         equ	1817	;# 
  4979     0891                     NVMADR          equ	2193	;# 
  4980     0891                     EEADR           equ	2193	;# 
  4981     0891                     PMADR           equ	2193	;# 
  4982     0891                     NVMADRL         equ	2193	;# 
  4983     0891                     EEADRL          equ	2193	;# 
  4984     0891                     PMADRL          equ	2193	;# 
  4985     0892                     NVMADRH         equ	2194	;# 
  4986     0892                     EEADRH          equ	2194	;# 
  4987     0892                     PMADRH          equ	2194	;# 
  4988     0893                     NVMDAT          equ	2195	;# 
  4989     0893                     EEDAT           equ	2195	;# 
  4990     0893                     PMDAT           equ	2195	;# 
  4991     0893                     NVMDATL         equ	2195	;# 
  4992     0893                     EEDATL          equ	2195	;# 
  4993     0893                     PMDATL          equ	2195	;# 
  4994     0894                     NVMDATH         equ	2196	;# 
  4995     0894                     EEDATH          equ	2196	;# 
  4996     0894                     PMDATH          equ	2196	;# 
  4997     0895                     NVMCON1         equ	2197	;# 
  4998     0895                     EECON1          equ	2197	;# 
  4999     0895                     PMCON1          equ	2197	;# 
  5000     0896                     NVMCON2         equ	2198	;# 
  5001     0896                     EECON2          equ	2198	;# 
  5002     0896                     PMCON2          equ	2198	;# 
  5003     089B                     PCON0           equ	2203	;# 
  5004     0911                     PMD0            equ	2321	;# 
  5005     0912                     PMD1            equ	2322	;# 
  5006     0913                     PMD2            equ	2323	;# 
  5007     0914                     PMD3            equ	2324	;# 
  5008     0915                     PMD4            equ	2325	;# 
  5009     0916                     PMD5            equ	2326	;# 
  5010     0918                     CPUDOZE         equ	2328	;# 
  5011     0919                     OSCCON1         equ	2329	;# 
  5012     091A                     OSCCON2         equ	2330	;# 
  5013     091B                     OSCCON3         equ	2331	;# 
  5014     091C                     OSCSTAT1        equ	2332	;# 
  5015     091D                     OSCEN           equ	2333	;# 
  5016     091E                     OSCTUNE         equ	2334	;# 
  5017     091F                     OSCFRQ          equ	2335	;# 
  5018     0E0F                     PPSLOCK         equ	3599	;# 
  5019     0E10                     INTPPS          equ	3600	;# 
  5020     0E11                     T0CKIPPS        equ	3601	;# 
  5021     0E12                     T1CKIPPS        equ	3602	;# 
  5022     0E13                     T1GPPS          equ	3603	;# 
  5023     0E14                     CCP1PPS         equ	3604	;# 
  5024     0E15                     CCP2PPS         equ	3605	;# 
  5025     0E16                     CCP3PPS         equ	3606	;# 
  5026     0E17                     CCP4PPS         equ	3607	;# 
  5027     0E18                     CWG1PPS         equ	3608	;# 
  5028     0E19                     CWG2PPS         equ	3609	;# 
  5029     0E1A                     MDCIN1PPS       equ	3610	;# 
  5030     0E1B                     MDCIN2PPS       equ	3611	;# 
  5031     0E1C                     MDMINPPS        equ	3612	;# 
  5032     0E1D                     SSP2CLKPPS      equ	3613	;# 
  5033     0E1E                     SSP2DATPPS      equ	3614	;# 
  5034     0E1F                     SSP2SSPPS       equ	3615	;# 
  5035     0E20                     SSP1CLKPPS      equ	3616	;# 
  5036     0E21                     SSP1DATPPS      equ	3617	;# 
  5037     0E22                     SSP1SSPPS       equ	3618	;# 
  5038     0E24                     RXPPS           equ	3620	;# 
  5039     0E25                     TXPPS           equ	3621	;# 
  5040     0E28                     CLCIN0PPS       equ	3624	;# 
  5041     0E29                     CLCIN1PPS       equ	3625	;# 
  5042     0E2A                     CLCIN2PPS       equ	3626	;# 
  5043     0E2B                     CLCIN3PPS       equ	3627	;# 
  5044     0E2C                     T3CKIPPS        equ	3628	;# 
  5045     0E2D                     T3GPPS          equ	3629	;# 
  5046     0E2E                     T5CKIPPS        equ	3630	;# 
  5047     0E2F                     T5GPPS          equ	3631	;# 
  5048     0E90                     RA0PPS          equ	3728	;# 
  5049     0E91                     RA1PPS          equ	3729	;# 
  5050     0E92                     RA2PPS          equ	3730	;# 
  5051     0E94                     RA4PPS          equ	3732	;# 
  5052     0E95                     RA5PPS          equ	3733	;# 
  5053     0E9C                     RB4PPS          equ	3740	;# 
  5054     0E9D                     RB5PPS          equ	3741	;# 
  5055     0E9E                     RB6PPS          equ	3742	;# 
  5056     0E9F                     RB7PPS          equ	3743	;# 
  5057     0EA0                     RC0PPS          equ	3744	;# 
  5058     0EA1                     RC1PPS          equ	3745	;# 
  5059     0EA2                     RC2PPS          equ	3746	;# 
  5060     0EA3                     RC3PPS          equ	3747	;# 
  5061     0EA4                     RC4PPS          equ	3748	;# 
  5062     0EA5                     RC5PPS          equ	3749	;# 
  5063     0EA6                     RC6PPS          equ	3750	;# 
  5064     0EA7                     RC7PPS          equ	3751	;# 
  5065     0F0F                     CLCDATA         equ	3855	;# 
  5066     0F10                     CLC1CON         equ	3856	;# 
  5067     0F11                     CLC1POL         equ	3857	;# 
  5068     0F12                     CLC1SEL0        equ	3858	;# 
  5069     0F13                     CLC1SEL1        equ	3859	;# 
  5070     0F14                     CLC1SEL2        equ	3860	;# 
  5071     0F15                     CLC1SEL3        equ	3861	;# 
  5072     0F16                     CLC1GLS0        equ	3862	;# 
  5073     0F17                     CLC1GLS1        equ	3863	;# 
  5074     0F18                     CLC1GLS2        equ	3864	;# 
  5075     0F19                     CLC1GLS3        equ	3865	;# 
  5076     0F1A                     CLC2CON         equ	3866	;# 
  5077     0F1B                     CLC2POL         equ	3867	;# 
  5078     0F1C                     CLC2SEL0        equ	3868	;# 
  5079     0F1D                     CLC2SEL1        equ	3869	;# 
  5080     0F1E                     CLC2SEL2        equ	3870	;# 
  5081     0F1F                     CLC2SEL3        equ	3871	;# 
  5082     0F20                     CLC2GLS0        equ	3872	;# 
  5083     0F21                     CLC2GLS1        equ	3873	;# 
  5084     0F22                     CLC2GLS2        equ	3874	;# 
  5085     0F23                     CLC2GLS3        equ	3875	;# 
  5086     0F24                     CLC3CON         equ	3876	;# 
  5087     0F25                     CLC3POL         equ	3877	;# 
  5088     0F26                     CLC3SEL0        equ	3878	;# 
  5089     0F27                     CLC3SEL1        equ	3879	;# 
  5090     0F28                     CLC3SEL2        equ	3880	;# 
  5091     0F29                     CLC3SEL3        equ	3881	;# 
  5092     0F2A                     CLC3GLS0        equ	3882	;# 
  5093     0F2B                     CLC3GLS1        equ	3883	;# 
  5094     0F2C                     CLC3GLS2        equ	3884	;# 
  5095     0F2D                     CLC3GLS3        equ	3885	;# 
  5096     0F2E                     CLC4CON         equ	3886	;# 
  5097     0F2F                     CLC4POL         equ	3887	;# 
  5098     0F30                     CLC4SEL0        equ	3888	;# 
  5099     0F31                     CLC4SEL1        equ	3889	;# 
  5100     0F32                     CLC4SEL2        equ	3890	;# 
  5101     0F33                     CLC4SEL3        equ	3891	;# 
  5102     0F34                     CLC4GLS0        equ	3892	;# 
  5103     0F35                     CLC4GLS1        equ	3893	;# 
  5104     0F36                     CLC4GLS2        equ	3894	;# 
  5105     0F37                     CLC4GLS3        equ	3895	;# 
  5106     0FE4                     STATUS_SHAD     equ	4068	;# 
  5107     0FE5                     WREG_SHAD       equ	4069	;# 
  5108     0FE6                     BSR_SHAD        equ	4070	;# 
  5109     0FE7                     PCLATH_SHAD     equ	4071	;# 
  5110     0FE8                     FSR0L_SHAD      equ	4072	;# 
  5111     0FE9                     FSR0H_SHAD      equ	4073	;# 
  5112     0FEA                     FSR1L_SHAD      equ	4074	;# 
  5113     0FEB                     FSR1H_SHAD      equ	4075	;# 
  5114     0FED                     STKPTR          equ	4077	;# 
  5115     0FEE                     TOSL            equ	4078	;# 
  5116     0FEF                     TOSH            equ	4079	;# 
  5117     0000                     INDF0           equ	0	;# 
  5118     0001                     INDF1           equ	1	;# 
  5119     0002                     PCL             equ	2	;# 
  5120     0003                     STATUS          equ	3	;# 
  5121     0004                     FSR0L           equ	4	;# 
  5122     0005                     FSR0H           equ	5	;# 
  5123     0006                     FSR1L           equ	6	;# 
  5124     0007                     FSR1H           equ	7	;# 
  5125     0008                     BSR             equ	8	;# 
  5126     0009                     WREG            equ	9	;# 
  5127     000A                     PCLATH          equ	10	;# 
  5128     000B                     INTCON          equ	11	;# 
  5129     000C                     PORTA           equ	12	;# 
  5130     000D                     PORTB           equ	13	;# 
  5131     000E                     PORTC           equ	14	;# 
  5132     0010                     PIR0            equ	16	;# 
  5133     0011                     PIR1            equ	17	;# 
  5134     0012                     PIR2            equ	18	;# 
  5135     0013                     PIR3            equ	19	;# 
  5136     0014                     PIR4            equ	20	;# 
  5137     0015                     TMR0L           equ	21	;# 
  5138     0015                     TMR0            equ	21	;# 
  5139     0016                     TMR0H           equ	22	;# 
  5140     0016                     PR0             equ	22	;# 
  5141     0017                     T0CON0          equ	23	;# 
  5142     0018                     T0CON1          equ	24	;# 
  5143     0019                     TMR1            equ	25	;# 
  5144     0019                     TMR1L           equ	25	;# 
  5145     001A                     TMR1H           equ	26	;# 
  5146     001B                     T1CON           equ	27	;# 
  5147     001C                     T1GCON          equ	28	;# 
  5148     001D                     TMR2            equ	29	;# 
  5149     001E                     PR2             equ	30	;# 
  5150     001F                     T2CON           equ	31	;# 
  5151     008C                     TRISA           equ	140	;# 
  5152     008D                     TRISB           equ	141	;# 
  5153     008E                     TRISC           equ	142	;# 
  5154     0090                     PIE0            equ	144	;# 
  5155     0091                     PIE1            equ	145	;# 
  5156     0092                     PIE2            equ	146	;# 
  5157     0093                     PIE3            equ	147	;# 
  5158     0094                     PIE4            equ	148	;# 
  5159     0097                     WDTCON          equ	151	;# 
  5160     009B                     ADRES           equ	155	;# 
  5161     009B                     ADRESL          equ	155	;# 
  5162     009C                     ADRESH          equ	156	;# 
  5163     009D                     ADCON0          equ	157	;# 
  5164     009E                     ADCON1          equ	158	;# 
  5165     009F                     ADACT           equ	159	;# 
  5166     010C                     LATA            equ	268	;# 
  5167     010D                     LATB            equ	269	;# 
  5168     010E                     LATC            equ	270	;# 
  5169     0111                     CM1CON0         equ	273	;# 
  5170     0112                     CM1CON1         equ	274	;# 
  5171     0113                     CM2CON0         equ	275	;# 
  5172     0114                     CM2CON1         equ	276	;# 
  5173     0115                     CMOUT           equ	277	;# 
  5174     0116                     BORCON          equ	278	;# 
  5175     0117                     FVRCON          equ	279	;# 
  5176     0118                     DACCON0         equ	280	;# 
  5177     0119                     DACCON1         equ	281	;# 
  5178     018C                     ANSELA          equ	396	;# 
  5179     018D                     ANSELB          equ	397	;# 
  5180     018E                     ANSELC          equ	398	;# 
  5181     0197                     VREGCON         equ	407	;# 
  5182     0199                     RC1REG          equ	409	;# 
  5183     0199                     RCREG           equ	409	;# 
  5184     0199                     RCREG1          equ	409	;# 
  5185     019A                     TX1REG          equ	410	;# 
  5186     019A                     TXREG1          equ	410	;# 
  5187     019A                     TXREG           equ	410	;# 
  5188     019B                     SP1BRG          equ	411	;# 
  5189     019B                     SPBRG           equ	411	;# 
  5190     019B                     SP1BRGL         equ	411	;# 
  5191     019B                     SPBRG1          equ	411	;# 
  5192     019B                     SPBRGL          equ	411	;# 
  5193     019C                     SP1BRGH         equ	412	;# 
  5194     019C                     SPBRGH          equ	412	;# 
  5195     019C                     SPBRGH1         equ	412	;# 
  5196     019D                     RC1STA          equ	413	;# 
  5197     019D                     RCSTA1          equ	413	;# 
  5198     019D                     RCSTA           equ	413	;# 
  5199     019E                     TX1STA          equ	414	;# 
  5200     019E                     TXSTA1          equ	414	;# 
  5201     019E                     TXSTA           equ	414	;# 
  5202     019F                     BAUD1CON        equ	415	;# 
  5203     019F                     BAUDCON1        equ	415	;# 
  5204     019F                     BAUDCTL1        equ	415	;# 
  5205     019F                     BAUDCON         equ	415	;# 
  5206     019F                     BAUDCTL         equ	415	;# 
  5207     020C                     WPUA            equ	524	;# 
  5208     020D                     WPUB            equ	525	;# 
  5209     020E                     WPUC            equ	526	;# 
  5210     0211                     SSP1BUF         equ	529	;# 
  5211     0211                     SSPBUF          equ	529	;# 
  5212     0212                     SSP1ADD         equ	530	;# 
  5213     0212                     SSPADD          equ	530	;# 
  5214     0213                     SSP1MSK         equ	531	;# 
  5215     0213                     SSPMSK          equ	531	;# 
  5216     0214                     SSP1STAT        equ	532	;# 
  5217     0214                     SSPSTAT         equ	532	;# 
  5218     0215                     SSP1CON1        equ	533	;# 
  5219     0215                     SSPCON          equ	533	;# 
  5220     0215                     SSPCON1         equ	533	;# 
  5221     0215                     SSP1CON         equ	533	;# 
  5222     0216                     SSP1CON2        equ	534	;# 
  5223     0216                     SSPCON2         equ	534	;# 
  5224     0217                     SSP1CON3        equ	535	;# 
  5225     0217                     SSPCON3         equ	535	;# 
  5226     0219                     SSP2BUF         equ	537	;# 
  5227     021A                     SSP2ADD         equ	538	;# 
  5228     021B                     SSP2MSK         equ	539	;# 
  5229     021C                     SSP2STAT        equ	540	;# 
  5230     021D                     SSP2CON1        equ	541	;# 
  5231     021D                     SSP2CON         equ	541	;# 
  5232     021E                     SSP2CON2        equ	542	;# 
  5233     021F                     SSP2CON3        equ	543	;# 
  5234     028C                     ODCONA          equ	652	;# 
  5235     028D                     ODCONB          equ	653	;# 
  5236     028E                     ODCONC          equ	654	;# 
  5237     0291                     CCPR1           equ	657	;# 
  5238     0291                     CCPR1L          equ	657	;# 
  5239     0292                     CCPR1H          equ	658	;# 
  5240     0293                     CCP1CON         equ	659	;# 
  5241     0294                     CCP1CAP         equ	660	;# 
  5242     0295                     CCPR2           equ	661	;# 
  5243     0295                     CCPR2L          equ	661	;# 
  5244     0296                     CCPR2H          equ	662	;# 
  5245     0297                     CCP2CON         equ	663	;# 
  5246     0298                     CCP2CAP         equ	664	;# 
  5247     029F                     CCPTMRS         equ	671	;# 
  5248     030C                     SLRCONA         equ	780	;# 
  5249     030D                     SLRCONB         equ	781	;# 
  5250     030E                     SLRCONC         equ	782	;# 
  5251     0311                     CCPR3           equ	785	;# 
  5252     0311                     CCPR3L          equ	785	;# 
  5253     0312                     CCPR3H          equ	786	;# 
  5254     0313                     CCP3CON         equ	787	;# 
  5255     0314                     CCP3CAP         equ	788	;# 
  5256     0315                     CCPR4           equ	789	;# 
  5257     0315                     CCPR4L          equ	789	;# 
  5258     0316                     CCPR4H          equ	790	;# 
  5259     0317                     CCP4CON         equ	791	;# 
  5260     0318                     CCP4CAP         equ	792	;# 
  5261     038C                     INLVLA          equ	908	;# 
  5262     038D                     INLVLB          equ	909	;# 
  5263     038E                     INLVLC          equ	910	;# 
  5264     0391                     IOCAP           equ	913	;# 
  5265     0392                     IOCAN           equ	914	;# 
  5266     0393                     IOCAF           equ	915	;# 
  5267     0394                     IOCBP           equ	916	;# 
  5268     0395                     IOCBN           equ	917	;# 
  5269     0396                     IOCBF           equ	918	;# 
  5270     0397                     IOCCP           equ	919	;# 
  5271     0398                     IOCCN           equ	920	;# 
  5272     0399                     IOCCF           equ	921	;# 
  5273     039A                     CLKRCON         equ	922	;# 
  5274     039C                     MDCON           equ	924	;# 
  5275     039D                     MDSRC           equ	925	;# 
  5276     039E                     MDCARH          equ	926	;# 
  5277     039F                     MDCARL          equ	927	;# 
  5278     0411                     TMR3            equ	1041	;# 
  5279     0411                     TMR3L           equ	1041	;# 
  5280     0412                     TMR3H           equ	1042	;# 
  5281     0413                     T3CON           equ	1043	;# 
  5282     0414                     T3GCON          equ	1044	;# 
  5283     0415                     TMR4            equ	1045	;# 
  5284     0416                     PR4             equ	1046	;# 
  5285     0417                     T4CON           equ	1047	;# 
  5286     0418                     TMR5            equ	1048	;# 
  5287     0418                     TMR5L           equ	1048	;# 
  5288     0419                     TMR5H           equ	1049	;# 
  5289     041A                     T5CON           equ	1050	;# 
  5290     041B                     T5GCON          equ	1051	;# 
  5291     041C                     TMR6            equ	1052	;# 
  5292     041D                     PR6             equ	1053	;# 
  5293     041E                     T6CON           equ	1054	;# 
  5294     041F                     CCDCON          equ	1055	;# 
  5295     0498                     NCO1ACC         equ	1176	;# 
  5296     0498                     NCO1ACCL        equ	1176	;# 
  5297     0499                     NCO1ACCH        equ	1177	;# 
  5298     049A                     NCO1ACCU        equ	1178	;# 
  5299     049B                     NCO1INC         equ	1179	;# 
  5300     049B                     NCO1INCL        equ	1179	;# 
  5301     049C                     NCO1INCH        equ	1180	;# 
  5302     049D                     NCO1INCU        equ	1181	;# 
  5303     049E                     NCO1CON         equ	1182	;# 
  5304     049F                     NCO1CLK         equ	1183	;# 
  5305     0617                     PWM5DCL         equ	1559	;# 
  5306     0618                     PWM5DCH         equ	1560	;# 
  5307     0619                     PWM5CON         equ	1561	;# 
  5308     0619                     PWM5CON0        equ	1561	;# 
  5309     061A                     PWM6DCL         equ	1562	;# 
  5310     061B                     PWM6DCH         equ	1563	;# 
  5311     061C                     PWM6CON         equ	1564	;# 
  5312     061C                     PWM6CON0        equ	1564	;# 
  5313     061F                     PWMTMRS         equ	1567	;# 
  5314     0691                     CWG1CLKCON      equ	1681	;# 
  5315     0692                     CWG1DAT         equ	1682	;# 
  5316     0693                     CWG1DBR         equ	1683	;# 
  5317     0694                     CWG1DBF         equ	1684	;# 
  5318     0695                     CWG1CON0        equ	1685	;# 
  5319     0696                     CWG1CON1        equ	1686	;# 
  5320     0697                     CWG1AS0         equ	1687	;# 
  5321     0698                     CWG1AS1         equ	1688	;# 
  5322     0699                     CWG1STR         equ	1689	;# 
  5323     0711                     CWG2CLKCON      equ	1809	;# 
  5324     0712                     CWG2DAT         equ	1810	;# 
  5325     0713                     CWG2DBR         equ	1811	;# 
  5326     0714                     CWG2DBF         equ	1812	;# 
  5327     0715                     CWG2CON0        equ	1813	;# 
  5328     0716                     CWG2CON1        equ	1814	;# 
  5329     0717                     CWG2AS0         equ	1815	;# 
  5330     0718                     CWG2AS1         equ	1816	;# 
  5331     0719                     CWG2STR         equ	1817	;# 
  5332     0891                     NVMADR          equ	2193	;# 
  5333     0891                     EEADR           equ	2193	;# 
  5334     0891                     PMADR           equ	2193	;# 
  5335     0891                     NVMADRL         equ	2193	;# 
  5336     0891                     EEADRL          equ	2193	;# 
  5337     0891                     PMADRL          equ	2193	;# 
  5338     0892                     NVMADRH         equ	2194	;# 
  5339     0892                     EEADRH          equ	2194	;# 
  5340     0892                     PMADRH          equ	2194	;# 
  5341     0893                     NVMDAT          equ	2195	;# 
  5342     0893                     EEDAT           equ	2195	;# 
  5343     0893                     PMDAT           equ	2195	;# 
  5344     0893                     NVMDATL         equ	2195	;# 
  5345     0893                     EEDATL          equ	2195	;# 
  5346     0893                     PMDATL          equ	2195	;# 
  5347     0894                     NVMDATH         equ	2196	;# 
  5348     0894                     EEDATH          equ	2196	;# 
  5349     0894                     PMDATH          equ	2196	;# 
  5350     0895                     NVMCON1         equ	2197	;# 
  5351     0895                     EECON1          equ	2197	;# 
  5352     0895                     PMCON1          equ	2197	;# 
  5353     0896                     NVMCON2         equ	2198	;# 
  5354     0896                     EECON2          equ	2198	;# 
  5355     0896                     PMCON2          equ	2198	;# 
  5356     089B                     PCON0           equ	2203	;# 
  5357     0911                     PMD0            equ	2321	;# 
  5358     0912                     PMD1            equ	2322	;# 
  5359     0913                     PMD2            equ	2323	;# 
  5360     0914                     PMD3            equ	2324	;# 
  5361     0915                     PMD4            equ	2325	;# 
  5362     0916                     PMD5            equ	2326	;# 
  5363     0918                     CPUDOZE         equ	2328	;# 
  5364     0919                     OSCCON1         equ	2329	;# 
  5365     091A                     OSCCON2         equ	2330	;# 
  5366     091B                     OSCCON3         equ	2331	;# 
  5367     091C                     OSCSTAT1        equ	2332	;# 
  5368     091D                     OSCEN           equ	2333	;# 
  5369     091E                     OSCTUNE         equ	2334	;# 
  5370     091F                     OSCFRQ          equ	2335	;# 
  5371     0E0F                     PPSLOCK         equ	3599	;# 
  5372     0E10                     INTPPS          equ	3600	;# 
  5373     0E11                     T0CKIPPS        equ	3601	;# 
  5374     0E12                     T1CKIPPS        equ	3602	;# 
  5375     0E13                     T1GPPS          equ	3603	;# 
  5376     0E14                     CCP1PPS         equ	3604	;# 
  5377     0E15                     CCP2PPS         equ	3605	;# 
  5378     0E16                     CCP3PPS         equ	3606	;# 
  5379     0E17                     CCP4PPS         equ	3607	;# 
  5380     0E18                     CWG1PPS         equ	3608	;# 
  5381     0E19                     CWG2PPS         equ	3609	;# 
  5382     0E1A                     MDCIN1PPS       equ	3610	;# 
  5383     0E1B                     MDCIN2PPS       equ	3611	;# 
  5384     0E1C                     MDMINPPS        equ	3612	;# 
  5385     0E1D                     SSP2CLKPPS      equ	3613	;# 
  5386     0E1E                     SSP2DATPPS      equ	3614	;# 
  5387     0E1F                     SSP2SSPPS       equ	3615	;# 
  5388     0E20                     SSP1CLKPPS      equ	3616	;# 
  5389     0E21                     SSP1DATPPS      equ	3617	;# 
  5390     0E22                     SSP1SSPPS       equ	3618	;# 
  5391     0E24                     RXPPS           equ	3620	;# 
  5392     0E25                     TXPPS           equ	3621	;# 
  5393     0E28                     CLCIN0PPS       equ	3624	;# 
  5394     0E29                     CLCIN1PPS       equ	3625	;# 
  5395     0E2A                     CLCIN2PPS       equ	3626	;# 
  5396     0E2B                     CLCIN3PPS       equ	3627	;# 
  5397     0E2C                     T3CKIPPS        equ	3628	;# 
  5398     0E2D                     T3GPPS          equ	3629	;# 
  5399     0E2E                     T5CKIPPS        equ	3630	;# 
  5400     0E2F                     T5GPPS          equ	3631	;# 
  5401     0E90                     RA0PPS          equ	3728	;# 
  5402     0E91                     RA1PPS          equ	3729	;# 
  5403     0E92                     RA2PPS          equ	3730	;# 
  5404     0E94                     RA4PPS          equ	3732	;# 
  5405     0E95                     RA5PPS          equ	3733	;# 
  5406     0E9C                     RB4PPS          equ	3740	;# 
  5407     0E9D                     RB5PPS          equ	3741	;# 
  5408     0E9E                     RB6PPS          equ	3742	;# 
  5409     0E9F                     RB7PPS          equ	3743	;# 
  5410     0EA0                     RC0PPS          equ	3744	;# 
  5411     0EA1                     RC1PPS          equ	3745	;# 
  5412     0EA2                     RC2PPS          equ	3746	;# 
  5413     0EA3                     RC3PPS          equ	3747	;# 
  5414     0EA4                     RC4PPS          equ	3748	;# 
  5415     0EA5                     RC5PPS          equ	3749	;# 
  5416     0EA6                     RC6PPS          equ	3750	;# 
  5417     0EA7                     RC7PPS          equ	3751	;# 
  5418     0F0F                     CLCDATA         equ	3855	;# 
  5419     0F10                     CLC1CON         equ	3856	;# 
  5420     0F11                     CLC1POL         equ	3857	;# 
  5421     0F12                     CLC1SEL0        equ	3858	;# 
  5422     0F13                     CLC1SEL1        equ	3859	;# 
  5423     0F14                     CLC1SEL2        equ	3860	;# 
  5424     0F15                     CLC1SEL3        equ	3861	;# 
  5425     0F16                     CLC1GLS0        equ	3862	;# 
  5426     0F17                     CLC1GLS1        equ	3863	;# 
  5427     0F18                     CLC1GLS2        equ	3864	;# 
  5428     0F19                     CLC1GLS3        equ	3865	;# 
  5429     0F1A                     CLC2CON         equ	3866	;# 
  5430     0F1B                     CLC2POL         equ	3867	;# 
  5431     0F1C                     CLC2SEL0        equ	3868	;# 
  5432     0F1D                     CLC2SEL1        equ	3869	;# 
  5433     0F1E                     CLC2SEL2        equ	3870	;# 
  5434     0F1F                     CLC2SEL3        equ	3871	;# 
  5435     0F20                     CLC2GLS0        equ	3872	;# 
  5436     0F21                     CLC2GLS1        equ	3873	;# 
  5437     0F22                     CLC2GLS2        equ	3874	;# 
  5438     0F23                     CLC2GLS3        equ	3875	;# 
  5439     0F24                     CLC3CON         equ	3876	;# 
  5440     0F25                     CLC3POL         equ	3877	;# 
  5441     0F26                     CLC3SEL0        equ	3878	;# 
  5442     0F27                     CLC3SEL1        equ	3879	;# 
  5443     0F28                     CLC3SEL2        equ	3880	;# 
  5444     0F29                     CLC3SEL3        equ	3881	;# 
  5445     0F2A                     CLC3GLS0        equ	3882	;# 
  5446     0F2B                     CLC3GLS1        equ	3883	;# 
  5447     0F2C                     CLC3GLS2        equ	3884	;# 
  5448     0F2D                     CLC3GLS3        equ	3885	;# 
  5449     0F2E                     CLC4CON         equ	3886	;# 
  5450     0F2F                     CLC4POL         equ	3887	;# 
  5451     0F30                     CLC4SEL0        equ	3888	;# 
  5452     0F31                     CLC4SEL1        equ	3889	;# 
  5453     0F32                     CLC4SEL2        equ	3890	;# 
  5454     0F33                     CLC4SEL3        equ	3891	;# 
  5455     0F34                     CLC4GLS0        equ	3892	;# 
  5456     0F35                     CLC4GLS1        equ	3893	;# 
  5457     0F36                     CLC4GLS2        equ	3894	;# 
  5458     0F37                     CLC4GLS3        equ	3895	;# 
  5459     0FE4                     STATUS_SHAD     equ	4068	;# 
  5460     0FE5                     WREG_SHAD       equ	4069	;# 
  5461     0FE6                     BSR_SHAD        equ	4070	;# 
  5462     0FE7                     PCLATH_SHAD     equ	4071	;# 
  5463     0FE8                     FSR0L_SHAD      equ	4072	;# 
  5464     0FE9                     FSR0H_SHAD      equ	4073	;# 
  5465     0FEA                     FSR1L_SHAD      equ	4074	;# 
  5466     0FEB                     FSR1H_SHAD      equ	4075	;# 
  5467     0FED                     STKPTR          equ	4077	;# 
  5468     0FEE                     TOSL            equ	4078	;# 
  5469     0FEF                     TOSH            equ	4079	;# 
  5470     0000                     INDF0           equ	0	;# 
  5471     0001                     INDF1           equ	1	;# 
  5472     0002                     PCL             equ	2	;# 
  5473     0003                     STATUS          equ	3	;# 
  5474     0004                     FSR0L           equ	4	;# 
  5475     0005                     FSR0H           equ	5	;# 
  5476     0006                     FSR1L           equ	6	;# 
  5477     0007                     FSR1H           equ	7	;# 
  5478     0008                     BSR             equ	8	;# 
  5479     0009                     WREG            equ	9	;# 
  5480     000A                     PCLATH          equ	10	;# 
  5481     000B                     INTCON          equ	11	;# 
  5482     000C                     PORTA           equ	12	;# 
  5483     000D                     PORTB           equ	13	;# 
  5484     000E                     PORTC           equ	14	;# 
  5485     0010                     PIR0            equ	16	;# 
  5486     0011                     PIR1            equ	17	;# 
  5487     0012                     PIR2            equ	18	;# 
  5488     0013                     PIR3            equ	19	;# 
  5489     0014                     PIR4            equ	20	;# 
  5490     0015                     TMR0L           equ	21	;# 
  5491     0015                     TMR0            equ	21	;# 
  5492     0016                     TMR0H           equ	22	;# 
  5493     0016                     PR0             equ	22	;# 
  5494     0017                     T0CON0          equ	23	;# 
  5495     0018                     T0CON1          equ	24	;# 
  5496     0019                     TMR1            equ	25	;# 
  5497     0019                     TMR1L           equ	25	;# 
  5498     001A                     TMR1H           equ	26	;# 
  5499     001B                     T1CON           equ	27	;# 
  5500     001C                     T1GCON          equ	28	;# 
  5501     001D                     TMR2            equ	29	;# 
  5502     001E                     PR2             equ	30	;# 
  5503     001F                     T2CON           equ	31	;# 
  5504     008C                     TRISA           equ	140	;# 
  5505     008D                     TRISB           equ	141	;# 
  5506     008E                     TRISC           equ	142	;# 
  5507     0090                     PIE0            equ	144	;# 
  5508     0091                     PIE1            equ	145	;# 
  5509     0092                     PIE2            equ	146	;# 
  5510     0093                     PIE3            equ	147	;# 
  5511     0094                     PIE4            equ	148	;# 
  5512     0097                     WDTCON          equ	151	;# 
  5513     009B                     ADRES           equ	155	;# 
  5514     009B                     ADRESL          equ	155	;# 
  5515     009C                     ADRESH          equ	156	;# 
  5516     009D                     ADCON0          equ	157	;# 
  5517     009E                     ADCON1          equ	158	;# 
  5518     009F                     ADACT           equ	159	;# 
  5519     010C                     LATA            equ	268	;# 
  5520     010D                     LATB            equ	269	;# 
  5521     010E                     LATC            equ	270	;# 
  5522     0111                     CM1CON0         equ	273	;# 
  5523     0112                     CM1CON1         equ	274	;# 
  5524     0113                     CM2CON0         equ	275	;# 
  5525     0114                     CM2CON1         equ	276	;# 
  5526     0115                     CMOUT           equ	277	;# 
  5527     0116                     BORCON          equ	278	;# 
  5528     0117                     FVRCON          equ	279	;# 
  5529     0118                     DACCON0         equ	280	;# 
  5530     0119                     DACCON1         equ	281	;# 
  5531     018C                     ANSELA          equ	396	;# 
  5532     018D                     ANSELB          equ	397	;# 
  5533     018E                     ANSELC          equ	398	;# 
  5534     0197                     VREGCON         equ	407	;# 
  5535     0199                     RC1REG          equ	409	;# 
  5536     0199                     RCREG           equ	409	;# 
  5537     0199                     RCREG1          equ	409	;# 
  5538     019A                     TX1REG          equ	410	;# 
  5539     019A                     TXREG1          equ	410	;# 
  5540     019A                     TXREG           equ	410	;# 
  5541     019B                     SP1BRG          equ	411	;# 
  5542     019B                     SPBRG           equ	411	;# 
  5543     019B                     SP1BRGL         equ	411	;# 
  5544     019B                     SPBRG1          equ	411	;# 
  5545     019B                     SPBRGL          equ	411	;# 
  5546     019C                     SP1BRGH         equ	412	;# 
  5547     019C                     SPBRGH          equ	412	;# 
  5548     019C                     SPBRGH1         equ	412	;# 
  5549     019D                     RC1STA          equ	413	;# 
  5550     019D                     RCSTA1          equ	413	;# 
  5551     019D                     RCSTA           equ	413	;# 
  5552     019E                     TX1STA          equ	414	;# 
  5553     019E                     TXSTA1          equ	414	;# 
  5554     019E                     TXSTA           equ	414	;# 
  5555     019F                     BAUD1CON        equ	415	;# 
  5556     019F                     BAUDCON1        equ	415	;# 
  5557     019F                     BAUDCTL1        equ	415	;# 
  5558     019F                     BAUDCON         equ	415	;# 
  5559     019F                     BAUDCTL         equ	415	;# 
  5560     020C                     WPUA            equ	524	;# 
  5561     020D                     WPUB            equ	525	;# 
  5562     020E                     WPUC            equ	526	;# 
  5563     0211                     SSP1BUF         equ	529	;# 
  5564     0211                     SSPBUF          equ	529	;# 
  5565     0212                     SSP1ADD         equ	530	;# 
  5566     0212                     SSPADD          equ	530	;# 
  5567     0213                     SSP1MSK         equ	531	;# 
  5568     0213                     SSPMSK          equ	531	;# 
  5569     0214                     SSP1STAT        equ	532	;# 
  5570     0214                     SSPSTAT         equ	532	;# 
  5571     0215                     SSP1CON1        equ	533	;# 
  5572     0215                     SSPCON          equ	533	;# 
  5573     0215                     SSPCON1         equ	533	;# 
  5574     0215                     SSP1CON         equ	533	;# 
  5575     0216                     SSP1CON2        equ	534	;# 
  5576     0216                     SSPCON2         equ	534	;# 
  5577     0217                     SSP1CON3        equ	535	;# 
  5578     0217                     SSPCON3         equ	535	;# 
  5579     0219                     SSP2BUF         equ	537	;# 
  5580     021A                     SSP2ADD         equ	538	;# 
  5581     021B                     SSP2MSK         equ	539	;# 
  5582     021C                     SSP2STAT        equ	540	;# 
  5583     021D                     SSP2CON1        equ	541	;# 
  5584     021D                     SSP2CON         equ	541	;# 
  5585     021E                     SSP2CON2        equ	542	;# 
  5586     021F                     SSP2CON3        equ	543	;# 
  5587     028C                     ODCONA          equ	652	;# 
  5588     028D                     ODCONB          equ	653	;# 
  5589     028E                     ODCONC          equ	654	;# 
  5590     0291                     CCPR1           equ	657	;# 
  5591     0291                     CCPR1L          equ	657	;# 
  5592     0292                     CCPR1H          equ	658	;# 
  5593     0293                     CCP1CON         equ	659	;# 
  5594     0294                     CCP1CAP         equ	660	;# 
  5595     0295                     CCPR2           equ	661	;# 
  5596     0295                     CCPR2L          equ	661	;# 
  5597     0296                     CCPR2H          equ	662	;# 
  5598     0297                     CCP2CON         equ	663	;# 
  5599     0298                     CCP2CAP         equ	664	;# 
  5600     029F                     CCPTMRS         equ	671	;# 
  5601     030C                     SLRCONA         equ	780	;# 
  5602     030D                     SLRCONB         equ	781	;# 
  5603     030E                     SLRCONC         equ	782	;# 
  5604     0311                     CCPR3           equ	785	;# 
  5605     0311                     CCPR3L          equ	785	;# 
  5606     0312                     CCPR3H          equ	786	;# 
  5607     0313                     CCP3CON         equ	787	;# 
  5608     0314                     CCP3CAP         equ	788	;# 
  5609     0315                     CCPR4           equ	789	;# 
  5610     0315                     CCPR4L          equ	789	;# 
  5611     0316                     CCPR4H          equ	790	;# 
  5612     0317                     CCP4CON         equ	791	;# 
  5613     0318                     CCP4CAP         equ	792	;# 
  5614     038C                     INLVLA          equ	908	;# 
  5615     038D                     INLVLB          equ	909	;# 
  5616     038E                     INLVLC          equ	910	;# 
  5617     0391                     IOCAP           equ	913	;# 
  5618     0392                     IOCAN           equ	914	;# 
  5619     0393                     IOCAF           equ	915	;# 
  5620     0394                     IOCBP           equ	916	;# 
  5621     0395                     IOCBN           equ	917	;# 
  5622     0396                     IOCBF           equ	918	;# 
  5623     0397                     IOCCP           equ	919	;# 
  5624     0398                     IOCCN           equ	920	;# 
  5625     0399                     IOCCF           equ	921	;# 
  5626     039A                     CLKRCON         equ	922	;# 
  5627     039C                     MDCON           equ	924	;# 
  5628     039D                     MDSRC           equ	925	;# 
  5629     039E                     MDCARH          equ	926	;# 
  5630     039F                     MDCARL          equ	927	;# 
  5631     0411                     TMR3            equ	1041	;# 
  5632     0411                     TMR3L           equ	1041	;# 
  5633     0412                     TMR3H           equ	1042	;# 
  5634     0413                     T3CON           equ	1043	;# 
  5635     0414                     T3GCON          equ	1044	;# 
  5636     0415                     TMR4            equ	1045	;# 
  5637     0416                     PR4             equ	1046	;# 
  5638     0417                     T4CON           equ	1047	;# 
  5639     0418                     TMR5            equ	1048	;# 
  5640     0418                     TMR5L           equ	1048	;# 
  5641     0419                     TMR5H           equ	1049	;# 
  5642     041A                     T5CON           equ	1050	;# 
  5643     041B                     T5GCON          equ	1051	;# 
  5644     041C                     TMR6            equ	1052	;# 
  5645     041D                     PR6             equ	1053	;# 
  5646     041E                     T6CON           equ	1054	;# 
  5647     041F                     CCDCON          equ	1055	;# 
  5648     0498                     NCO1ACC         equ	1176	;# 
  5649     0498                     NCO1ACCL        equ	1176	;# 
  5650     0499                     NCO1ACCH        equ	1177	;# 
  5651     049A                     NCO1ACCU        equ	1178	;# 
  5652     049B                     NCO1INC         equ	1179	;# 
  5653     049B                     NCO1INCL        equ	1179	;# 
  5654     049C                     NCO1INCH        equ	1180	;# 
  5655     049D                     NCO1INCU        equ	1181	;# 
  5656     049E                     NCO1CON         equ	1182	;# 
  5657     049F                     NCO1CLK         equ	1183	;# 
  5658     0617                     PWM5DCL         equ	1559	;# 
  5659     0618                     PWM5DCH         equ	1560	;# 
  5660     0619                     PWM5CON         equ	1561	;# 
  5661     0619                     PWM5CON0        equ	1561	;# 
  5662     061A                     PWM6DCL         equ	1562	;# 
  5663     061B                     PWM6DCH         equ	1563	;# 
  5664     061C                     PWM6CON         equ	1564	;# 
  5665     061C                     PWM6CON0        equ	1564	;# 
  5666     061F                     PWMTMRS         equ	1567	;# 
  5667     0691                     CWG1CLKCON      equ	1681	;# 
  5668     0692                     CWG1DAT         equ	1682	;# 
  5669     0693                     CWG1DBR         equ	1683	;# 
  5670     0694                     CWG1DBF         equ	1684	;# 
  5671     0695                     CWG1CON0        equ	1685	;# 
  5672     0696                     CWG1CON1        equ	1686	;# 
  5673     0697                     CWG1AS0         equ	1687	;# 
  5674     0698                     CWG1AS1         equ	1688	;# 
  5675     0699                     CWG1STR         equ	1689	;# 
  5676     0711                     CWG2CLKCON      equ	1809	;# 
  5677     0712                     CWG2DAT         equ	1810	;# 
  5678     0713                     CWG2DBR         equ	1811	;# 
  5679     0714                     CWG2DBF         equ	1812	;# 
  5680     0715                     CWG2CON0        equ	1813	;# 
  5681     0716                     CWG2CON1        equ	1814	;# 
  5682     0717                     CWG2AS0         equ	1815	;# 
  5683     0718                     CWG2AS1         equ	1816	;# 
  5684     0719                     CWG2STR         equ	1817	;# 
  5685     0891                     NVMADR          equ	2193	;# 
  5686     0891                     EEADR           equ	2193	;# 
  5687     0891                     PMADR           equ	2193	;# 
  5688     0891                     NVMADRL         equ	2193	;# 
  5689     0891                     EEADRL          equ	2193	;# 
  5690     0891                     PMADRL          equ	2193	;# 
  5691     0892                     NVMADRH         equ	2194	;# 
  5692     0892                     EEADRH          equ	2194	;# 
  5693     0892                     PMADRH          equ	2194	;# 
  5694     0893                     NVMDAT          equ	2195	;# 
  5695     0893                     EEDAT           equ	2195	;# 
  5696     0893                     PMDAT           equ	2195	;# 
  5697     0893                     NVMDATL         equ	2195	;# 
  5698     0893                     EEDATL          equ	2195	;# 
  5699     0893                     PMDATL          equ	2195	;# 
  5700     0894                     NVMDATH         equ	2196	;# 
  5701     0894                     EEDATH          equ	2196	;# 
  5702     0894                     PMDATH          equ	2196	;# 
  5703     0895                     NVMCON1         equ	2197	;# 
  5704     0895                     EECON1          equ	2197	;# 
  5705     0895                     PMCON1          equ	2197	;# 
  5706     0896                     NVMCON2         equ	2198	;# 
  5707     0896                     EECON2          equ	2198	;# 
  5708     0896                     PMCON2          equ	2198	;# 
  5709     089B                     PCON0           equ	2203	;# 
  5710     0911                     PMD0            equ	2321	;# 
  5711     0912                     PMD1            equ	2322	;# 
  5712     0913                     PMD2            equ	2323	;# 
  5713     0914                     PMD3            equ	2324	;# 
  5714     0915                     PMD4            equ	2325	;# 
  5715     0916                     PMD5            equ	2326	;# 
  5716     0918                     CPUDOZE         equ	2328	;# 
  5717     0919                     OSCCON1         equ	2329	;# 
  5718     091A                     OSCCON2         equ	2330	;# 
  5719     091B                     OSCCON3         equ	2331	;# 
  5720     091C                     OSCSTAT1        equ	2332	;# 
  5721     091D                     OSCEN           equ	2333	;# 
  5722     091E                     OSCTUNE         equ	2334	;# 
  5723     091F                     OSCFRQ          equ	2335	;# 
  5724     0E0F                     PPSLOCK         equ	3599	;# 
  5725     0E10                     INTPPS          equ	3600	;# 
  5726     0E11                     T0CKIPPS        equ	3601	;# 
  5727     0E12                     T1CKIPPS        equ	3602	;# 
  5728     0E13                     T1GPPS          equ	3603	;# 
  5729     0E14                     CCP1PPS         equ	3604	;# 
  5730     0E15                     CCP2PPS         equ	3605	;# 
  5731     0E16                     CCP3PPS         equ	3606	;# 
  5732     0E17                     CCP4PPS         equ	3607	;# 
  5733     0E18                     CWG1PPS         equ	3608	;# 
  5734     0E19                     CWG2PPS         equ	3609	;# 
  5735     0E1A                     MDCIN1PPS       equ	3610	;# 
  5736     0E1B                     MDCIN2PPS       equ	3611	;# 
  5737     0E1C                     MDMINPPS        equ	3612	;# 
  5738     0E1D                     SSP2CLKPPS      equ	3613	;# 
  5739     0E1E                     SSP2DATPPS      equ	3614	;# 
  5740     0E1F                     SSP2SSPPS       equ	3615	;# 
  5741     0E20                     SSP1CLKPPS      equ	3616	;# 
  5742     0E21                     SSP1DATPPS      equ	3617	;# 
  5743     0E22                     SSP1SSPPS       equ	3618	;# 
  5744     0E24                     RXPPS           equ	3620	;# 
  5745     0E25                     TXPPS           equ	3621	;# 
  5746     0E28                     CLCIN0PPS       equ	3624	;# 
  5747     0E29                     CLCIN1PPS       equ	3625	;# 
  5748     0E2A                     CLCIN2PPS       equ	3626	;# 
  5749     0E2B                     CLCIN3PPS       equ	3627	;# 
  5750     0E2C                     T3CKIPPS        equ	3628	;# 
  5751     0E2D                     T3GPPS          equ	3629	;# 
  5752     0E2E                     T5CKIPPS        equ	3630	;# 
  5753     0E2F                     T5GPPS          equ	3631	;# 
  5754     0E90                     RA0PPS          equ	3728	;# 
  5755     0E91                     RA1PPS          equ	3729	;# 
  5756     0E92                     RA2PPS          equ	3730	;# 
  5757     0E94                     RA4PPS          equ	3732	;# 
  5758     0E95                     RA5PPS          equ	3733	;# 
  5759     0E9C                     RB4PPS          equ	3740	;# 
  5760     0E9D                     RB5PPS          equ	3741	;# 
  5761     0E9E                     RB6PPS          equ	3742	;# 
  5762     0E9F                     RB7PPS          equ	3743	;# 
  5763     0EA0                     RC0PPS          equ	3744	;# 
  5764     0EA1                     RC1PPS          equ	3745	;# 
  5765     0EA2                     RC2PPS          equ	3746	;# 
  5766     0EA3                     RC3PPS          equ	3747	;# 
  5767     0EA4                     RC4PPS          equ	3748	;# 
  5768     0EA5                     RC5PPS          equ	3749	;# 
  5769     0EA6                     RC6PPS          equ	3750	;# 
  5770     0EA7                     RC7PPS          equ	3751	;# 
  5771     0F0F                     CLCDATA         equ	3855	;# 
  5772     0F10                     CLC1CON         equ	3856	;# 
  5773     0F11                     CLC1POL         equ	3857	;# 
  5774     0F12                     CLC1SEL0        equ	3858	;# 
  5775     0F13                     CLC1SEL1        equ	3859	;# 
  5776     0F14                     CLC1SEL2        equ	3860	;# 
  5777     0F15                     CLC1SEL3        equ	3861	;# 
  5778     0F16                     CLC1GLS0        equ	3862	;# 
  5779     0F17                     CLC1GLS1        equ	3863	;# 
  5780     0F18                     CLC1GLS2        equ	3864	;# 
  5781     0F19                     CLC1GLS3        equ	3865	;# 
  5782     0F1A                     CLC2CON         equ	3866	;# 
  5783     0F1B                     CLC2POL         equ	3867	;# 
  5784     0F1C                     CLC2SEL0        equ	3868	;# 
  5785     0F1D                     CLC2SEL1        equ	3869	;# 
  5786     0F1E                     CLC2SEL2        equ	3870	;# 
  5787     0F1F                     CLC2SEL3        equ	3871	;# 
  5788     0F20                     CLC2GLS0        equ	3872	;# 
  5789     0F21                     CLC2GLS1        equ	3873	;# 
  5790     0F22                     CLC2GLS2        equ	3874	;# 
  5791     0F23                     CLC2GLS3        equ	3875	;# 
  5792     0F24                     CLC3CON         equ	3876	;# 
  5793     0F25                     CLC3POL         equ	3877	;# 
  5794     0F26                     CLC3SEL0        equ	3878	;# 
  5795     0F27                     CLC3SEL1        equ	3879	;# 
  5796     0F28                     CLC3SEL2        equ	3880	;# 
  5797     0F29                     CLC3SEL3        equ	3881	;# 
  5798     0F2A                     CLC3GLS0        equ	3882	;# 
  5799     0F2B                     CLC3GLS1        equ	3883	;# 
  5800     0F2C                     CLC3GLS2        equ	3884	;# 
  5801     0F2D                     CLC3GLS3        equ	3885	;# 
  5802     0F2E                     CLC4CON         equ	3886	;# 
  5803     0F2F                     CLC4POL         equ	3887	;# 
  5804     0F30                     CLC4SEL0        equ	3888	;# 
  5805     0F31                     CLC4SEL1        equ	3889	;# 
  5806     0F32                     CLC4SEL2        equ	3890	;# 
  5807     0F33                     CLC4SEL3        equ	3891	;# 
  5808     0F34                     CLC4GLS0        equ	3892	;# 
  5809     0F35                     CLC4GLS1        equ	3893	;# 
  5810     0F36                     CLC4GLS2        equ	3894	;# 
  5811     0F37                     CLC4GLS3        equ	3895	;# 
  5812     0FE4                     STATUS_SHAD     equ	4068	;# 
  5813     0FE5                     WREG_SHAD       equ	4069	;# 
  5814     0FE6                     BSR_SHAD        equ	4070	;# 
  5815     0FE7                     PCLATH_SHAD     equ	4071	;# 
  5816     0FE8                     FSR0L_SHAD      equ	4072	;# 
  5817     0FE9                     FSR0H_SHAD      equ	4073	;# 
  5818     0FEA                     FSR1L_SHAD      equ	4074	;# 
  5819     0FEB                     FSR1H_SHAD      equ	4075	;# 
  5820     0FED                     STKPTR          equ	4077	;# 
  5821     0FEE                     TOSL            equ	4078	;# 
  5822     0FEF                     TOSH            equ	4079	;# 
  5823     0000                     INDF0           equ	0	;# 
  5824     0001                     INDF1           equ	1	;# 
  5825     0002                     PCL             equ	2	;# 
  5826     0003                     STATUS          equ	3	;# 
  5827     0004                     FSR0L           equ	4	;# 
  5828     0005                     FSR0H           equ	5	;# 
  5829     0006                     FSR1L           equ	6	;# 
  5830     0007                     FSR1H           equ	7	;# 
  5831     0008                     BSR             equ	8	;# 
  5832     0009                     WREG            equ	9	;# 
  5833     000A                     PCLATH          equ	10	;# 
  5834     000B                     INTCON          equ	11	;# 
  5835     000C                     PORTA           equ	12	;# 
  5836     000D                     PORTB           equ	13	;# 
  5837     000E                     PORTC           equ	14	;# 
  5838     0010                     PIR0            equ	16	;# 
  5839     0011                     PIR1            equ	17	;# 
  5840     0012                     PIR2            equ	18	;# 
  5841     0013                     PIR3            equ	19	;# 
  5842     0014                     PIR4            equ	20	;# 
  5843     0015                     TMR0L           equ	21	;# 
  5844     0015                     TMR0            equ	21	;# 
  5845     0016                     TMR0H           equ	22	;# 
  5846     0016                     PR0             equ	22	;# 
  5847     0017                     T0CON0          equ	23	;# 
  5848     0018                     T0CON1          equ	24	;# 
  5849     0019                     TMR1            equ	25	;# 
  5850     0019                     TMR1L           equ	25	;# 
  5851     001A                     TMR1H           equ	26	;# 
  5852     001B                     T1CON           equ	27	;# 
  5853     001C                     T1GCON          equ	28	;# 
  5854     001D                     TMR2            equ	29	;# 
  5855     001E                     PR2             equ	30	;# 
  5856     001F                     T2CON           equ	31	;# 
  5857     008C                     TRISA           equ	140	;# 
  5858     008D                     TRISB           equ	141	;# 
  5859     008E                     TRISC           equ	142	;# 
  5860     0090                     PIE0            equ	144	;# 
  5861     0091                     PIE1            equ	145	;# 
  5862     0092                     PIE2            equ	146	;# 
  5863     0093                     PIE3            equ	147	;# 
  5864     0094                     PIE4            equ	148	;# 
  5865     0097                     WDTCON          equ	151	;# 
  5866     009B                     ADRES           equ	155	;# 
  5867     009B                     ADRESL          equ	155	;# 
  5868     009C                     ADRESH          equ	156	;# 
  5869     009D                     ADCON0          equ	157	;# 
  5870     009E                     ADCON1          equ	158	;# 
  5871     009F                     ADACT           equ	159	;# 
  5872     010C                     LATA            equ	268	;# 
  5873     010D                     LATB            equ	269	;# 
  5874     010E                     LATC            equ	270	;# 
  5875     0111                     CM1CON0         equ	273	;# 
  5876     0112                     CM1CON1         equ	274	;# 
  5877     0113                     CM2CON0         equ	275	;# 
  5878     0114                     CM2CON1         equ	276	;# 
  5879     0115                     CMOUT           equ	277	;# 
  5880     0116                     BORCON          equ	278	;# 
  5881     0117                     FVRCON          equ	279	;# 
  5882     0118                     DACCON0         equ	280	;# 
  5883     0119                     DACCON1         equ	281	;# 
  5884     018C                     ANSELA          equ	396	;# 
  5885     018D                     ANSELB          equ	397	;# 
  5886     018E                     ANSELC          equ	398	;# 
  5887     0197                     VREGCON         equ	407	;# 
  5888     0199                     RC1REG          equ	409	;# 
  5889     0199                     RCREG           equ	409	;# 
  5890     0199                     RCREG1          equ	409	;# 
  5891     019A                     TX1REG          equ	410	;# 
  5892     019A                     TXREG1          equ	410	;# 
  5893     019A                     TXREG           equ	410	;# 
  5894     019B                     SP1BRG          equ	411	;# 
  5895     019B                     SPBRG           equ	411	;# 
  5896     019B                     SP1BRGL         equ	411	;# 
  5897     019B                     SPBRG1          equ	411	;# 
  5898     019B                     SPBRGL          equ	411	;# 
  5899     019C                     SP1BRGH         equ	412	;# 
  5900     019C                     SPBRGH          equ	412	;# 
  5901     019C                     SPBRGH1         equ	412	;# 
  5902     019D                     RC1STA          equ	413	;# 
  5903     019D                     RCSTA1          equ	413	;# 
  5904     019D                     RCSTA           equ	413	;# 
  5905     019E                     TX1STA          equ	414	;# 
  5906     019E                     TXSTA1          equ	414	;# 
  5907     019E                     TXSTA           equ	414	;# 
  5908     019F                     BAUD1CON        equ	415	;# 
  5909     019F                     BAUDCON1        equ	415	;# 
  5910     019F                     BAUDCTL1        equ	415	;# 
  5911     019F                     BAUDCON         equ	415	;# 
  5912     019F                     BAUDCTL         equ	415	;# 
  5913     020C                     WPUA            equ	524	;# 
  5914     020D                     WPUB            equ	525	;# 
  5915     020E                     WPUC            equ	526	;# 
  5916     0211                     SSP1BUF         equ	529	;# 
  5917     0211                     SSPBUF          equ	529	;# 
  5918     0212                     SSP1ADD         equ	530	;# 
  5919     0212                     SSPADD          equ	530	;# 
  5920     0213                     SSP1MSK         equ	531	;# 
  5921     0213                     SSPMSK          equ	531	;# 
  5922     0214                     SSP1STAT        equ	532	;# 
  5923     0214                     SSPSTAT         equ	532	;# 
  5924     0215                     SSP1CON1        equ	533	;# 
  5925     0215                     SSPCON          equ	533	;# 
  5926     0215                     SSPCON1         equ	533	;# 
  5927     0215                     SSP1CON         equ	533	;# 
  5928     0216                     SSP1CON2        equ	534	;# 
  5929     0216                     SSPCON2         equ	534	;# 
  5930     0217                     SSP1CON3        equ	535	;# 
  5931     0217                     SSPCON3         equ	535	;# 
  5932     0219                     SSP2BUF         equ	537	;# 
  5933     021A                     SSP2ADD         equ	538	;# 
  5934     021B                     SSP2MSK         equ	539	;# 
  5935     021C                     SSP2STAT        equ	540	;# 
  5936     021D                     SSP2CON1        equ	541	;# 
  5937     021D                     SSP2CON         equ	541	;# 
  5938     021E                     SSP2CON2        equ	542	;# 
  5939     021F                     SSP2CON3        equ	543	;# 
  5940     028C                     ODCONA          equ	652	;# 
  5941     028D                     ODCONB          equ	653	;# 
  5942     028E                     ODCONC          equ	654	;# 
  5943     0291                     CCPR1           equ	657	;# 
  5944     0291                     CCPR1L          equ	657	;# 
  5945     0292                     CCPR1H          equ	658	;# 
  5946     0293                     CCP1CON         equ	659	;# 
  5947     0294                     CCP1CAP         equ	660	;# 
  5948     0295                     CCPR2           equ	661	;# 
  5949     0295                     CCPR2L          equ	661	;# 
  5950     0296                     CCPR2H          equ	662	;# 
  5951     0297                     CCP2CON         equ	663	;# 
  5952     0298                     CCP2CAP         equ	664	;# 
  5953     029F                     CCPTMRS         equ	671	;# 
  5954     030C                     SLRCONA         equ	780	;# 
  5955     030D                     SLRCONB         equ	781	;# 
  5956     030E                     SLRCONC         equ	782	;# 
  5957     0311                     CCPR3           equ	785	;# 
  5958     0311                     CCPR3L          equ	785	;# 
  5959     0312                     CCPR3H          equ	786	;# 
  5960     0313                     CCP3CON         equ	787	;# 
  5961     0314                     CCP3CAP         equ	788	;# 
  5962     0315                     CCPR4           equ	789	;# 
  5963     0315                     CCPR4L          equ	789	;# 
  5964     0316                     CCPR4H          equ	790	;# 
  5965     0317                     CCP4CON         equ	791	;# 
  5966     0318                     CCP4CAP         equ	792	;# 
  5967     038C                     INLVLA          equ	908	;# 
  5968     038D                     INLVLB          equ	909	;# 
  5969     038E                     INLVLC          equ	910	;# 
  5970     0391                     IOCAP           equ	913	;# 
  5971     0392                     IOCAN           equ	914	;# 
  5972     0393                     IOCAF           equ	915	;# 
  5973     0394                     IOCBP           equ	916	;# 
  5974     0395                     IOCBN           equ	917	;# 
  5975     0396                     IOCBF           equ	918	;# 
  5976     0397                     IOCCP           equ	919	;# 
  5977     0398                     IOCCN           equ	920	;# 
  5978     0399                     IOCCF           equ	921	;# 
  5979     039A                     CLKRCON         equ	922	;# 
  5980     039C                     MDCON           equ	924	;# 
  5981     039D                     MDSRC           equ	925	;# 
  5982     039E                     MDCARH          equ	926	;# 
  5983     039F                     MDCARL          equ	927	;# 
  5984     0411                     TMR3            equ	1041	;# 
  5985     0411                     TMR3L           equ	1041	;# 
  5986     0412                     TMR3H           equ	1042	;# 
  5987     0413                     T3CON           equ	1043	;# 
  5988     0414                     T3GCON          equ	1044	;# 
  5989     0415                     TMR4            equ	1045	;# 
  5990     0416                     PR4             equ	1046	;# 
  5991     0417                     T4CON           equ	1047	;# 
  5992     0418                     TMR5            equ	1048	;# 
  5993     0418                     TMR5L           equ	1048	;# 
  5994     0419                     TMR5H           equ	1049	;# 
  5995     041A                     T5CON           equ	1050	;# 
  5996     041B                     T5GCON          equ	1051	;# 
  5997     041C                     TMR6            equ	1052	;# 
  5998     041D                     PR6             equ	1053	;# 
  5999     041E                     T6CON           equ	1054	;# 
  6000     041F                     CCDCON          equ	1055	;# 
  6001     0498                     NCO1ACC         equ	1176	;# 
  6002     0498                     NCO1ACCL        equ	1176	;# 
  6003     0499                     NCO1ACCH        equ	1177	;# 
  6004     049A                     NCO1ACCU        equ	1178	;# 
  6005     049B                     NCO1INC         equ	1179	;# 
  6006     049B                     NCO1INCL        equ	1179	;# 
  6007     049C                     NCO1INCH        equ	1180	;# 
  6008     049D                     NCO1INCU        equ	1181	;# 
  6009     049E                     NCO1CON         equ	1182	;# 
  6010     049F                     NCO1CLK         equ	1183	;# 
  6011     0617                     PWM5DCL         equ	1559	;# 
  6012     0618                     PWM5DCH         equ	1560	;# 
  6013     0619                     PWM5CON         equ	1561	;# 
  6014     0619                     PWM5CON0        equ	1561	;# 
  6015     061A                     PWM6DCL         equ	1562	;# 
  6016     061B                     PWM6DCH         equ	1563	;# 
  6017     061C                     PWM6CON         equ	1564	;# 
  6018     061C                     PWM6CON0        equ	1564	;# 
  6019     061F                     PWMTMRS         equ	1567	;# 
  6020     0691                     CWG1CLKCON      equ	1681	;# 
  6021     0692                     CWG1DAT         equ	1682	;# 
  6022     0693                     CWG1DBR         equ	1683	;# 
  6023     0694                     CWG1DBF         equ	1684	;# 
  6024     0695                     CWG1CON0        equ	1685	;# 
  6025     0696                     CWG1CON1        equ	1686	;# 
  6026     0697                     CWG1AS0         equ	1687	;# 
  6027     0698                     CWG1AS1         equ	1688	;# 
  6028     0699                     CWG1STR         equ	1689	;# 
  6029     0711                     CWG2CLKCON      equ	1809	;# 
  6030     0712                     CWG2DAT         equ	1810	;# 
  6031     0713                     CWG2DBR         equ	1811	;# 
  6032     0714                     CWG2DBF         equ	1812	;# 
  6033     0715                     CWG2CON0        equ	1813	;# 
  6034     0716                     CWG2CON1        equ	1814	;# 
  6035     0717                     CWG2AS0         equ	1815	;# 
  6036     0718                     CWG2AS1         equ	1816	;# 
  6037     0719                     CWG2STR         equ	1817	;# 
  6038     0891                     NVMADR          equ	2193	;# 
  6039     0891                     EEADR           equ	2193	;# 
  6040     0891                     PMADR           equ	2193	;# 
  6041     0891                     NVMADRL         equ	2193	;# 
  6042     0891                     EEADRL          equ	2193	;# 
  6043     0891                     PMADRL          equ	2193	;# 
  6044     0892                     NVMADRH         equ	2194	;# 
  6045     0892                     EEADRH          equ	2194	;# 
  6046     0892                     PMADRH          equ	2194	;# 
  6047     0893                     NVMDAT          equ	2195	;# 
  6048     0893                     EEDAT           equ	2195	;# 
  6049     0893                     PMDAT           equ	2195	;# 
  6050     0893                     NVMDATL         equ	2195	;# 
  6051     0893                     EEDATL          equ	2195	;# 
  6052     0893                     PMDATL          equ	2195	;# 
  6053     0894                     NVMDATH         equ	2196	;# 
  6054     0894                     EEDATH          equ	2196	;# 
  6055     0894                     PMDATH          equ	2196	;# 
  6056     0895                     NVMCON1         equ	2197	;# 
  6057     0895                     EECON1          equ	2197	;# 
  6058     0895                     PMCON1          equ	2197	;# 
  6059     0896                     NVMCON2         equ	2198	;# 
  6060     0896                     EECON2          equ	2198	;# 
  6061     0896                     PMCON2          equ	2198	;# 
  6062     089B                     PCON0           equ	2203	;# 
  6063     0911                     PMD0            equ	2321	;# 
  6064     0912                     PMD1            equ	2322	;# 
  6065     0913                     PMD2            equ	2323	;# 
  6066     0914                     PMD3            equ	2324	;# 
  6067     0915                     PMD4            equ	2325	;# 
  6068     0916                     PMD5            equ	2326	;# 
  6069     0918                     CPUDOZE         equ	2328	;# 
  6070     0919                     OSCCON1         equ	2329	;# 
  6071     091A                     OSCCON2         equ	2330	;# 
  6072     091B                     OSCCON3         equ	2331	;# 
  6073     091C                     OSCSTAT1        equ	2332	;# 
  6074     091D                     OSCEN           equ	2333	;# 
  6075     091E                     OSCTUNE         equ	2334	;# 
  6076     091F                     OSCFRQ          equ	2335	;# 
  6077     0E0F                     PPSLOCK         equ	3599	;# 
  6078     0E10                     INTPPS          equ	3600	;# 
  6079     0E11                     T0CKIPPS        equ	3601	;# 
  6080     0E12                     T1CKIPPS        equ	3602	;# 
  6081     0E13                     T1GPPS          equ	3603	;# 
  6082     0E14                     CCP1PPS         equ	3604	;# 
  6083     0E15                     CCP2PPS         equ	3605	;# 
  6084     0E16                     CCP3PPS         equ	3606	;# 
  6085     0E17                     CCP4PPS         equ	3607	;# 
  6086     0E18                     CWG1PPS         equ	3608	;# 
  6087     0E19                     CWG2PPS         equ	3609	;# 
  6088     0E1A                     MDCIN1PPS       equ	3610	;# 
  6089     0E1B                     MDCIN2PPS       equ	3611	;# 
  6090     0E1C                     MDMINPPS        equ	3612	;# 
  6091     0E1D                     SSP2CLKPPS      equ	3613	;# 
  6092     0E1E                     SSP2DATPPS      equ	3614	;# 
  6093     0E1F                     SSP2SSPPS       equ	3615	;# 
  6094     0E20                     SSP1CLKPPS      equ	3616	;# 
  6095     0E21                     SSP1DATPPS      equ	3617	;# 
  6096     0E22                     SSP1SSPPS       equ	3618	;# 
  6097     0E24                     RXPPS           equ	3620	;# 
  6098     0E25                     TXPPS           equ	3621	;# 
  6099     0E28                     CLCIN0PPS       equ	3624	;# 
  6100     0E29                     CLCIN1PPS       equ	3625	;# 
  6101     0E2A                     CLCIN2PPS       equ	3626	;# 
  6102     0E2B                     CLCIN3PPS       equ	3627	;# 
  6103     0E2C                     T3CKIPPS        equ	3628	;# 
  6104     0E2D                     T3GPPS          equ	3629	;# 
  6105     0E2E                     T5CKIPPS        equ	3630	;# 
  6106     0E2F                     T5GPPS          equ	3631	;# 
  6107     0E90                     RA0PPS          equ	3728	;# 
  6108     0E91                     RA1PPS          equ	3729	;# 
  6109     0E92                     RA2PPS          equ	3730	;# 
  6110     0E94                     RA4PPS          equ	3732	;# 
  6111     0E95                     RA5PPS          equ	3733	;# 
  6112     0E9C                     RB4PPS          equ	3740	;# 
  6113     0E9D                     RB5PPS          equ	3741	;# 
  6114     0E9E                     RB6PPS          equ	3742	;# 
  6115     0E9F                     RB7PPS          equ	3743	;# 
  6116     0EA0                     RC0PPS          equ	3744	;# 
  6117     0EA1                     RC1PPS          equ	3745	;# 
  6118     0EA2                     RC2PPS          equ	3746	;# 
  6119     0EA3                     RC3PPS          equ	3747	;# 
  6120     0EA4                     RC4PPS          equ	3748	;# 
  6121     0EA5                     RC5PPS          equ	3749	;# 
  6122     0EA6                     RC6PPS          equ	3750	;# 
  6123     0EA7                     RC7PPS          equ	3751	;# 
  6124     0F0F                     CLCDATA         equ	3855	;# 
  6125     0F10                     CLC1CON         equ	3856	;# 
  6126     0F11                     CLC1POL         equ	3857	;# 
  6127     0F12                     CLC1SEL0        equ	3858	;# 
  6128     0F13                     CLC1SEL1        equ	3859	;# 
  6129     0F14                     CLC1SEL2        equ	3860	;# 
  6130     0F15                     CLC1SEL3        equ	3861	;# 
  6131     0F16                     CLC1GLS0        equ	3862	;# 
  6132     0F17                     CLC1GLS1        equ	3863	;# 
  6133     0F18                     CLC1GLS2        equ	3864	;# 
  6134     0F19                     CLC1GLS3        equ	3865	;# 
  6135     0F1A                     CLC2CON         equ	3866	;# 
  6136     0F1B                     CLC2POL         equ	3867	;# 
  6137     0F1C                     CLC2SEL0        equ	3868	;# 
  6138     0F1D                     CLC2SEL1        equ	3869	;# 
  6139     0F1E                     CLC2SEL2        equ	3870	;# 
  6140     0F1F                     CLC2SEL3        equ	3871	;# 
  6141     0F20                     CLC2GLS0        equ	3872	;# 
  6142     0F21                     CLC2GLS1        equ	3873	;# 
  6143     0F22                     CLC2GLS2        equ	3874	;# 
  6144     0F23                     CLC2GLS3        equ	3875	;# 
  6145     0F24                     CLC3CON         equ	3876	;# 
  6146     0F25                     CLC3POL         equ	3877	;# 
  6147     0F26                     CLC3SEL0        equ	3878	;# 
  6148     0F27                     CLC3SEL1        equ	3879	;# 
  6149     0F28                     CLC3SEL2        equ	3880	;# 
  6150     0F29                     CLC3SEL3        equ	3881	;# 
  6151     0F2A                     CLC3GLS0        equ	3882	;# 
  6152     0F2B                     CLC3GLS1        equ	3883	;# 
  6153     0F2C                     CLC3GLS2        equ	3884	;# 
  6154     0F2D                     CLC3GLS3        equ	3885	;# 
  6155     0F2E                     CLC4CON         equ	3886	;# 
  6156     0F2F                     CLC4POL         equ	3887	;# 
  6157     0F30                     CLC4SEL0        equ	3888	;# 
  6158     0F31                     CLC4SEL1        equ	3889	;# 
  6159     0F32                     CLC4SEL2        equ	3890	;# 
  6160     0F33                     CLC4SEL3        equ	3891	;# 
  6161     0F34                     CLC4GLS0        equ	3892	;# 
  6162     0F35                     CLC4GLS1        equ	3893	;# 
  6163     0F36                     CLC4GLS2        equ	3894	;# 
  6164     0F37                     CLC4GLS3        equ	3895	;# 
  6165     0FE4                     STATUS_SHAD     equ	4068	;# 
  6166     0FE5                     WREG_SHAD       equ	4069	;# 
  6167     0FE6                     BSR_SHAD        equ	4070	;# 
  6168     0FE7                     PCLATH_SHAD     equ	4071	;# 
  6169     0FE8                     FSR0L_SHAD      equ	4072	;# 
  6170     0FE9                     FSR0H_SHAD      equ	4073	;# 
  6171     0FEA                     FSR1L_SHAD      equ	4074	;# 
  6172     0FEB                     FSR1H_SHAD      equ	4075	;# 
  6173     0FED                     STKPTR          equ	4077	;# 
  6174     0FEE                     TOSL            equ	4078	;# 
  6175     0FEF                     TOSH            equ	4079	;# 
  6176     0000                     INDF0           equ	0	;# 
  6177     0001                     INDF1           equ	1	;# 
  6178     0002                     PCL             equ	2	;# 
  6179     0003                     STATUS          equ	3	;# 
  6180     0004                     FSR0L           equ	4	;# 
  6181     0005                     FSR0H           equ	5	;# 
  6182     0006                     FSR1L           equ	6	;# 
  6183     0007                     FSR1H           equ	7	;# 
  6184     0008                     BSR             equ	8	;# 
  6185     0009                     WREG            equ	9	;# 
  6186     000A                     PCLATH          equ	10	;# 
  6187     000B                     INTCON          equ	11	;# 
  6188     000C                     PORTA           equ	12	;# 
  6189     000D                     PORTB           equ	13	;# 
  6190     000E                     PORTC           equ	14	;# 
  6191     0010                     PIR0            equ	16	;# 
  6192     0011                     PIR1            equ	17	;# 
  6193     0012                     PIR2            equ	18	;# 
  6194     0013                     PIR3            equ	19	;# 
  6195     0014                     PIR4            equ	20	;# 
  6196     0015                     TMR0L           equ	21	;# 
  6197     0015                     TMR0            equ	21	;# 
  6198     0016                     TMR0H           equ	22	;# 
  6199     0016                     PR0             equ	22	;# 
  6200     0017                     T0CON0          equ	23	;# 
  6201     0018                     T0CON1          equ	24	;# 
  6202     0019                     TMR1            equ	25	;# 
  6203     0019                     TMR1L           equ	25	;# 
  6204     001A                     TMR1H           equ	26	;# 
  6205     001B                     T1CON           equ	27	;# 
  6206     001C                     T1GCON          equ	28	;# 
  6207     001D                     TMR2            equ	29	;# 
  6208     001E                     PR2             equ	30	;# 
  6209     001F                     T2CON           equ	31	;# 
  6210     008C                     TRISA           equ	140	;# 
  6211     008D                     TRISB           equ	141	;# 
  6212     008E                     TRISC           equ	142	;# 
  6213     0090                     PIE0            equ	144	;# 
  6214     0091                     PIE1            equ	145	;# 
  6215     0092                     PIE2            equ	146	;# 
  6216     0093                     PIE3            equ	147	;# 
  6217     0094                     PIE4            equ	148	;# 
  6218     0097                     WDTCON          equ	151	;# 
  6219     009B                     ADRES           equ	155	;# 
  6220     009B                     ADRESL          equ	155	;# 
  6221     009C                     ADRESH          equ	156	;# 
  6222     009D                     ADCON0          equ	157	;# 
  6223     009E                     ADCON1          equ	158	;# 
  6224     009F                     ADACT           equ	159	;# 
  6225     010C                     LATA            equ	268	;# 
  6226     010D                     LATB            equ	269	;# 
  6227     010E                     LATC            equ	270	;# 
  6228     0111                     CM1CON0         equ	273	;# 
  6229     0112                     CM1CON1         equ	274	;# 
  6230     0113                     CM2CON0         equ	275	;# 
  6231     0114                     CM2CON1         equ	276	;# 
  6232     0115                     CMOUT           equ	277	;# 
  6233     0116                     BORCON          equ	278	;# 
  6234     0117                     FVRCON          equ	279	;# 
  6235     0118                     DACCON0         equ	280	;# 
  6236     0119                     DACCON1         equ	281	;# 
  6237     018C                     ANSELA          equ	396	;# 
  6238     018D                     ANSELB          equ	397	;# 
  6239     018E                     ANSELC          equ	398	;# 
  6240     0197                     VREGCON         equ	407	;# 
  6241     0199                     RC1REG          equ	409	;# 
  6242     0199                     RCREG           equ	409	;# 
  6243     0199                     RCREG1          equ	409	;# 
  6244     019A                     TX1REG          equ	410	;# 
  6245     019A                     TXREG1          equ	410	;# 
  6246     019A                     TXREG           equ	410	;# 
  6247     019B                     SP1BRG          equ	411	;# 
  6248     019B                     SPBRG           equ	411	;# 
  6249     019B                     SP1BRGL         equ	411	;# 
  6250     019B                     SPBRG1          equ	411	;# 
  6251     019B                     SPBRGL          equ	411	;# 
  6252     019C                     SP1BRGH         equ	412	;# 
  6253     019C                     SPBRGH          equ	412	;# 
  6254     019C                     SPBRGH1         equ	412	;# 
  6255     019D                     RC1STA          equ	413	;# 
  6256     019D                     RCSTA1          equ	413	;# 
  6257     019D                     RCSTA           equ	413	;# 
  6258     019E                     TX1STA          equ	414	;# 
  6259     019E                     TXSTA1          equ	414	;# 
  6260     019E                     TXSTA           equ	414	;# 
  6261     019F                     BAUD1CON        equ	415	;# 
  6262     019F                     BAUDCON1        equ	415	;# 
  6263     019F                     BAUDCTL1        equ	415	;# 
  6264     019F                     BAUDCON         equ	415	;# 
  6265     019F                     BAUDCTL         equ	415	;# 
  6266     020C                     WPUA            equ	524	;# 
  6267     020D                     WPUB            equ	525	;# 
  6268     020E                     WPUC            equ	526	;# 
  6269     0211                     SSP1BUF         equ	529	;# 
  6270     0211                     SSPBUF          equ	529	;# 
  6271     0212                     SSP1ADD         equ	530	;# 
  6272     0212                     SSPADD          equ	530	;# 
  6273     0213                     SSP1MSK         equ	531	;# 
  6274     0213                     SSPMSK          equ	531	;# 
  6275     0214                     SSP1STAT        equ	532	;# 
  6276     0214                     SSPSTAT         equ	532	;# 
  6277     0215                     SSP1CON1        equ	533	;# 
  6278     0215                     SSPCON          equ	533	;# 
  6279     0215                     SSPCON1         equ	533	;# 
  6280     0215                     SSP1CON         equ	533	;# 
  6281     0216                     SSP1CON2        equ	534	;# 
  6282     0216                     SSPCON2         equ	534	;# 
  6283     0217                     SSP1CON3        equ	535	;# 
  6284     0217                     SSPCON3         equ	535	;# 
  6285     0219                     SSP2BUF         equ	537	;# 
  6286     021A                     SSP2ADD         equ	538	;# 
  6287     021B                     SSP2MSK         equ	539	;# 
  6288     021C                     SSP2STAT        equ	540	;# 
  6289     021D                     SSP2CON1        equ	541	;# 
  6290     021D                     SSP2CON         equ	541	;# 
  6291     021E                     SSP2CON2        equ	542	;# 
  6292     021F                     SSP2CON3        equ	543	;# 
  6293     028C                     ODCONA          equ	652	;# 
  6294     028D                     ODCONB          equ	653	;# 
  6295     028E                     ODCONC          equ	654	;# 
  6296     0291                     CCPR1           equ	657	;# 
  6297     0291                     CCPR1L          equ	657	;# 
  6298     0292                     CCPR1H          equ	658	;# 
  6299     0293                     CCP1CON         equ	659	;# 
  6300     0294                     CCP1CAP         equ	660	;# 
  6301     0295                     CCPR2           equ	661	;# 
  6302     0295                     CCPR2L          equ	661	;# 
  6303     0296                     CCPR2H          equ	662	;# 
  6304     0297                     CCP2CON         equ	663	;# 
  6305     0298                     CCP2CAP         equ	664	;# 
  6306     029F                     CCPTMRS         equ	671	;# 
  6307     030C                     SLRCONA         equ	780	;# 
  6308     030D                     SLRCONB         equ	781	;# 
  6309     030E                     SLRCONC         equ	782	;# 
  6310     0311                     CCPR3           equ	785	;# 
  6311     0311                     CCPR3L          equ	785	;# 
  6312     0312                     CCPR3H          equ	786	;# 
  6313     0313                     CCP3CON         equ	787	;# 
  6314     0314                     CCP3CAP         equ	788	;# 
  6315     0315                     CCPR4           equ	789	;# 
  6316     0315                     CCPR4L          equ	789	;# 
  6317     0316                     CCPR4H          equ	790	;# 
  6318     0317                     CCP4CON         equ	791	;# 
  6319     0318                     CCP4CAP         equ	792	;# 
  6320     038C                     INLVLA          equ	908	;# 
  6321     038D                     INLVLB          equ	909	;# 
  6322     038E                     INLVLC          equ	910	;# 
  6323     0391                     IOCAP           equ	913	;# 
  6324     0392                     IOCAN           equ	914	;# 
  6325     0393                     IOCAF           equ	915	;# 
  6326     0394                     IOCBP           equ	916	;# 
  6327     0395                     IOCBN           equ	917	;# 
  6328     0396                     IOCBF           equ	918	;# 
  6329     0397                     IOCCP           equ	919	;# 
  6330     0398                     IOCCN           equ	920	;# 
  6331     0399                     IOCCF           equ	921	;# 
  6332     039A                     CLKRCON         equ	922	;# 
  6333     039C                     MDCON           equ	924	;# 
  6334     039D                     MDSRC           equ	925	;# 
  6335     039E                     MDCARH          equ	926	;# 
  6336     039F                     MDCARL          equ	927	;# 
  6337     0411                     TMR3            equ	1041	;# 
  6338     0411                     TMR3L           equ	1041	;# 
  6339     0412                     TMR3H           equ	1042	;# 
  6340     0413                     T3CON           equ	1043	;# 
  6341     0414                     T3GCON          equ	1044	;# 
  6342     0415                     TMR4            equ	1045	;# 
  6343     0416                     PR4             equ	1046	;# 
  6344     0417                     T4CON           equ	1047	;# 
  6345     0418                     TMR5            equ	1048	;# 
  6346     0418                     TMR5L           equ	1048	;# 
  6347     0419                     TMR5H           equ	1049	;# 
  6348     041A                     T5CON           equ	1050	;# 
  6349     041B                     T5GCON          equ	1051	;# 
  6350     041C                     TMR6            equ	1052	;# 
  6351     041D                     PR6             equ	1053	;# 
  6352     041E                     T6CON           equ	1054	;# 
  6353     041F                     CCDCON          equ	1055	;# 
  6354     0498                     NCO1ACC         equ	1176	;# 
  6355     0498                     NCO1ACCL        equ	1176	;# 
  6356     0499                     NCO1ACCH        equ	1177	;# 
  6357     049A                     NCO1ACCU        equ	1178	;# 
  6358     049B                     NCO1INC         equ	1179	;# 
  6359     049B                     NCO1INCL        equ	1179	;# 
  6360     049C                     NCO1INCH        equ	1180	;# 
  6361     049D                     NCO1INCU        equ	1181	;# 
  6362     049E                     NCO1CON         equ	1182	;# 
  6363     049F                     NCO1CLK         equ	1183	;# 
  6364     0617                     PWM5DCL         equ	1559	;# 
  6365     0618                     PWM5DCH         equ	1560	;# 
  6366     0619                     PWM5CON         equ	1561	;# 
  6367     0619                     PWM5CON0        equ	1561	;# 
  6368     061A                     PWM6DCL         equ	1562	;# 
  6369     061B                     PWM6DCH         equ	1563	;# 
  6370     061C                     PWM6CON         equ	1564	;# 
  6371     061C                     PWM6CON0        equ	1564	;# 
  6372     061F                     PWMTMRS         equ	1567	;# 
  6373     0691                     CWG1CLKCON      equ	1681	;# 
  6374     0692                     CWG1DAT         equ	1682	;# 
  6375     0693                     CWG1DBR         equ	1683	;# 
  6376     0694                     CWG1DBF         equ	1684	;# 
  6377     0695                     CWG1CON0        equ	1685	;# 
  6378     0696                     CWG1CON1        equ	1686	;# 
  6379     0697                     CWG1AS0         equ	1687	;# 
  6380     0698                     CWG1AS1         equ	1688	;# 
  6381     0699                     CWG1STR         equ	1689	;# 
  6382     0711                     CWG2CLKCON      equ	1809	;# 
  6383     0712                     CWG2DAT         equ	1810	;# 
  6384     0713                     CWG2DBR         equ	1811	;# 
  6385     0714                     CWG2DBF         equ	1812	;# 
  6386     0715                     CWG2CON0        equ	1813	;# 
  6387     0716                     CWG2CON1        equ	1814	;# 
  6388     0717                     CWG2AS0         equ	1815	;# 
  6389     0718                     CWG2AS1         equ	1816	;# 
  6390     0719                     CWG2STR         equ	1817	;# 
  6391     0891                     NVMADR          equ	2193	;# 
  6392     0891                     EEADR           equ	2193	;# 
  6393     0891                     PMADR           equ	2193	;# 
  6394     0891                     NVMADRL         equ	2193	;# 
  6395     0891                     EEADRL          equ	2193	;# 
  6396     0891                     PMADRL          equ	2193	;# 
  6397     0892                     NVMADRH         equ	2194	;# 
  6398     0892                     EEADRH          equ	2194	;# 
  6399     0892                     PMADRH          equ	2194	;# 
  6400     0893                     NVMDAT          equ	2195	;# 
  6401     0893                     EEDAT           equ	2195	;# 
  6402     0893                     PMDAT           equ	2195	;# 
  6403     0893                     NVMDATL         equ	2195	;# 
  6404     0893                     EEDATL          equ	2195	;# 
  6405     0893                     PMDATL          equ	2195	;# 
  6406     0894                     NVMDATH         equ	2196	;# 
  6407     0894                     EEDATH          equ	2196	;# 
  6408     0894                     PMDATH          equ	2196	;# 
  6409     0895                     NVMCON1         equ	2197	;# 
  6410     0895                     EECON1          equ	2197	;# 
  6411     0895                     PMCON1          equ	2197	;# 
  6412     0896                     NVMCON2         equ	2198	;# 
  6413     0896                     EECON2          equ	2198	;# 
  6414     0896                     PMCON2          equ	2198	;# 
  6415     089B                     PCON0           equ	2203	;# 
  6416     0911                     PMD0            equ	2321	;# 
  6417     0912                     PMD1            equ	2322	;# 
  6418     0913                     PMD2            equ	2323	;# 
  6419     0914                     PMD3            equ	2324	;# 
  6420     0915                     PMD4            equ	2325	;# 
  6421     0916                     PMD5            equ	2326	;# 
  6422     0918                     CPUDOZE         equ	2328	;# 
  6423     0919                     OSCCON1         equ	2329	;# 
  6424     091A                     OSCCON2         equ	2330	;# 
  6425     091B                     OSCCON3         equ	2331	;# 
  6426     091C                     OSCSTAT1        equ	2332	;# 
  6427     091D                     OSCEN           equ	2333	;# 
  6428     091E                     OSCTUNE         equ	2334	;# 
  6429     091F                     OSCFRQ          equ	2335	;# 
  6430     0E0F                     PPSLOCK         equ	3599	;# 
  6431     0E10                     INTPPS          equ	3600	;# 
  6432     0E11                     T0CKIPPS        equ	3601	;# 
  6433     0E12                     T1CKIPPS        equ	3602	;# 
  6434     0E13                     T1GPPS          equ	3603	;# 
  6435     0E14                     CCP1PPS         equ	3604	;# 
  6436     0E15                     CCP2PPS         equ	3605	;# 
  6437     0E16                     CCP3PPS         equ	3606	;# 
  6438     0E17                     CCP4PPS         equ	3607	;# 
  6439     0E18                     CWG1PPS         equ	3608	;# 
  6440     0E19                     CWG2PPS         equ	3609	;# 
  6441     0E1A                     MDCIN1PPS       equ	3610	;# 
  6442     0E1B                     MDCIN2PPS       equ	3611	;# 
  6443     0E1C                     MDMINPPS        equ	3612	;# 
  6444     0E1D                     SSP2CLKPPS      equ	3613	;# 
  6445     0E1E                     SSP2DATPPS      equ	3614	;# 
  6446     0E1F                     SSP2SSPPS       equ	3615	;# 
  6447     0E20                     SSP1CLKPPS      equ	3616	;# 
  6448     0E21                     SSP1DATPPS      equ	3617	;# 
  6449     0E22                     SSP1SSPPS       equ	3618	;# 
  6450     0E24                     RXPPS           equ	3620	;# 
  6451     0E25                     TXPPS           equ	3621	;# 
  6452     0E28                     CLCIN0PPS       equ	3624	;# 
  6453     0E29                     CLCIN1PPS       equ	3625	;# 
  6454     0E2A                     CLCIN2PPS       equ	3626	;# 
  6455     0E2B                     CLCIN3PPS       equ	3627	;# 
  6456     0E2C                     T3CKIPPS        equ	3628	;# 
  6457     0E2D                     T3GPPS          equ	3629	;# 
  6458     0E2E                     T5CKIPPS        equ	3630	;# 
  6459     0E2F                     T5GPPS          equ	3631	;# 
  6460     0E90                     RA0PPS          equ	3728	;# 
  6461     0E91                     RA1PPS          equ	3729	;# 
  6462     0E92                     RA2PPS          equ	3730	;# 
  6463     0E94                     RA4PPS          equ	3732	;# 
  6464     0E95                     RA5PPS          equ	3733	;# 
  6465     0E9C                     RB4PPS          equ	3740	;# 
  6466     0E9D                     RB5PPS          equ	3741	;# 
  6467     0E9E                     RB6PPS          equ	3742	;# 
  6468     0E9F                     RB7PPS          equ	3743	;# 
  6469     0EA0                     RC0PPS          equ	3744	;# 
  6470     0EA1                     RC1PPS          equ	3745	;# 
  6471     0EA2                     RC2PPS          equ	3746	;# 
  6472     0EA3                     RC3PPS          equ	3747	;# 
  6473     0EA4                     RC4PPS          equ	3748	;# 
  6474     0EA5                     RC5PPS          equ	3749	;# 
  6475     0EA6                     RC6PPS          equ	3750	;# 
  6476     0EA7                     RC7PPS          equ	3751	;# 
  6477     0F0F                     CLCDATA         equ	3855	;# 
  6478     0F10                     CLC1CON         equ	3856	;# 
  6479     0F11                     CLC1POL         equ	3857	;# 
  6480     0F12                     CLC1SEL0        equ	3858	;# 
  6481     0F13                     CLC1SEL1        equ	3859	;# 
  6482     0F14                     CLC1SEL2        equ	3860	;# 
  6483     0F15                     CLC1SEL3        equ	3861	;# 
  6484     0F16                     CLC1GLS0        equ	3862	;# 
  6485     0F17                     CLC1GLS1        equ	3863	;# 
  6486     0F18                     CLC1GLS2        equ	3864	;# 
  6487     0F19                     CLC1GLS3        equ	3865	;# 
  6488     0F1A                     CLC2CON         equ	3866	;# 
  6489     0F1B                     CLC2POL         equ	3867	;# 
  6490     0F1C                     CLC2SEL0        equ	3868	;# 
  6491     0F1D                     CLC2SEL1        equ	3869	;# 
  6492     0F1E                     CLC2SEL2        equ	3870	;# 
  6493     0F1F                     CLC2SEL3        equ	3871	;# 
  6494     0F20                     CLC2GLS0        equ	3872	;# 
  6495     0F21                     CLC2GLS1        equ	3873	;# 
  6496     0F22                     CLC2GLS2        equ	3874	;# 
  6497     0F23                     CLC2GLS3        equ	3875	;# 
  6498     0F24                     CLC3CON         equ	3876	;# 
  6499     0F25                     CLC3POL         equ	3877	;# 
  6500     0F26                     CLC3SEL0        equ	3878	;# 
  6501     0F27                     CLC3SEL1        equ	3879	;# 
  6502     0F28                     CLC3SEL2        equ	3880	;# 
  6503     0F29                     CLC3SEL3        equ	3881	;# 
  6504     0F2A                     CLC3GLS0        equ	3882	;# 
  6505     0F2B                     CLC3GLS1        equ	3883	;# 
  6506     0F2C                     CLC3GLS2        equ	3884	;# 
  6507     0F2D                     CLC3GLS3        equ	3885	;# 
  6508     0F2E                     CLC4CON         equ	3886	;# 
  6509     0F2F                     CLC4POL         equ	3887	;# 
  6510     0F30                     CLC4SEL0        equ	3888	;# 
  6511     0F31                     CLC4SEL1        equ	3889	;# 
  6512     0F32                     CLC4SEL2        equ	3890	;# 
  6513     0F33                     CLC4SEL3        equ	3891	;# 
  6514     0F34                     CLC4GLS0        equ	3892	;# 
  6515     0F35                     CLC4GLS1        equ	3893	;# 
  6516     0F36                     CLC4GLS2        equ	3894	;# 
  6517     0F37                     CLC4GLS3        equ	3895	;# 
  6518     0FE4                     STATUS_SHAD     equ	4068	;# 
  6519     0FE5                     WREG_SHAD       equ	4069	;# 
  6520     0FE6                     BSR_SHAD        equ	4070	;# 
  6521     0FE7                     PCLATH_SHAD     equ	4071	;# 
  6522     0FE8                     FSR0L_SHAD      equ	4072	;# 
  6523     0FE9                     FSR0H_SHAD      equ	4073	;# 
  6524     0FEA                     FSR1L_SHAD      equ	4074	;# 
  6525     0FEB                     FSR1H_SHAD      equ	4075	;# 
  6526     0FED                     STKPTR          equ	4077	;# 
  6527     0FEE                     TOSL            equ	4078	;# 
  6528     0FEF                     TOSH            equ	4079	;# 
  6529                           
  6530 ;; Function _SPI1_Deinitialize is unused but had its address taken
  6531     0000                     _SPI1_Deinitialize equ	0
  6532                           
  6533 ;; Function _SPI1_Close is unused but had its address taken
  6534     0000                     _SPI1_Close     equ	0
  6535                           
  6536 ;; Function _SPI1_BufferExchange is unused but had its address taken
  6537     0000                     _SPI1_BufferExchange equ	0
  6538                           
  6539 ;; Function _SPI1_BufferWrite is unused but had its address taken
  6540     0000                     _SPI1_BufferWrite equ	0
  6541                           
  6542 ;; Function _SPI1_BufferRead is unused but had its address taken
  6543     0000                     _SPI1_BufferRead equ	0
  6544                           
  6545 ;; Function _SPI1_ByteWrite is unused but had its address taken
  6546     0000                     _SPI1_ByteWrite equ	0
  6547                           
  6548 ;; Function _SPI1_ByteRead is unused but had its address taken
  6549     0000                     _SPI1_ByteRead  equ	0
  6550                           
  6551 ;; Function _SPI1_IsRxReady is unused but had its address taken
  6552     0000                     _SPI1_IsRxReady equ	0
  6553                           
  6554 ;; Function _SPI1_IsTxReady is unused but had its address taken
  6555     0000                     _SPI1_IsTxReady equ	0
  6556                           
  6557 ;; Function _INT_DefaultInterruptHandler is unused but had its address taken
  6558     0000                     _INT_DefaultInterruptHandler equ	0
  6559                           
  6560 ;; Function _EUSART_Deinitialize is unused but had its address taken
  6561     0000                     _EUSART_Deinitialize equ	0
  6562                           
  6563 ;; Function _EUSART_TransmitEnable is unused but had its address taken
  6564     0000                     _EUSART_TransmitEnable equ	0
  6565                           
  6566 ;; Function _EUSART_TransmitDisable is unused but had its address taken
  6567     0000                     _EUSART_TransmitDisable equ	0
  6568                           
  6569 ;; Function _EUSART_AutoBaudSet is unused but had its address taken
  6570     0000                     _EUSART_AutoBaudSet equ	0
  6571                           
  6572 ;; Function _EUSART_AutoBaudQuery is unused but had its address taken
  6573     0000                     _EUSART_AutoBaudQuery equ	0
  6574                           
  6575 ;; Function _EUSART_IsTxDone is unused but had its address taken
  6576     0000                     _EUSART_IsTxDone equ	0
  6577                           
  6578 ;; Function _EUSART_ErrorGet is unused but had its address taken
  6579     0000                     _EUSART_ErrorGet equ	0
  6580                           
  6581 ;; Function _EUSART_RxCompleteCallbackRegister is unused but had its address taken
  6582     0000                     _EUSART_RxCompleteCallbackRegister equ	0
  6583                           
  6584 ;; Function _EUSART_TxCompleteCallbackRegister is unused but had its address taken
  6585     0000                     _EUSART_TxCompleteCallbackRegister equ	0
  6586                           
  6587                           	psect	idataBANK0
  6588     07FD                     __pidataBANK0:
  6589                           
  6590                           ;initializer for _mustPrintLogs
  6591     07FD  3401               	retlw	1
  6592                           
  6593                           ;initializer for adcConversionDoneHandler@new_channel
  6594     07FE  3410               	retlw	16
  6595                           
  6596                           	psect	idataBANK1
  6597     0002                     __pidataBANK1:
  6598                           
  6599                           ;initializer for _setpoint
  6600     0002  3432               	retlw	50
  6601     0003  3400               	retlw	0
  6602                           
  6603                           	psect	idataBANK2
  6604     1D7C                     __pidataBANK2:
  6605                           
  6606                           ;initializer for _ki
  6607     1D7C  3400               	retlw	0
  6608     1D7D  3400               	retlw	0
  6609     1D7E  3460               	retlw	96
  6610     1D7F  3440               	retlw	64
  6611                           
  6612                           ;initializer for _kp
  6613     1D80  3466               	retlw	102
  6614     1D81  3466               	retlw	102
  6615     1D82  3466               	retlw	102
  6616     1D83  343F               	retlw	63
  6617                           
  6618                           	psect	stringtext1
  6619     1800                     __pstringtext1:
  6620     1800                     _UART1:
  6621     1800  345B               	retlw	low _EUSART_Initialize
  6622     1801  3411               	retlw	high _EUSART_Initialize
  6623     1802  3400               	retlw	0
  6624     1803  3400               	retlw	0
  6625     1804  34E0               	retlw	low _EUSART_Read
  6626     1805  341F               	retlw	high _EUSART_Read
  6627     1806  34AB               	retlw	low _EUSART_Write
  6628     1807  3410               	retlw	high _EUSART_Write
  6629     1808  34CC               	retlw	low _EUSART_IsRxReady
  6630     1809  341D               	retlw	high _EUSART_IsRxReady
  6631     180A  34C3               	retlw	low _EUSART_IsTxReady
  6632     180B  341D               	retlw	high _EUSART_IsTxReady
  6633     180C  3400               	retlw	0
  6634     180D  3400               	retlw	0
  6635     180E  3400               	retlw	0
  6636     180F  3400               	retlw	0
  6637     1810  3400               	retlw	0
  6638     1811  3400               	retlw	0
  6639     1812  3400               	retlw	0
  6640     1813  3400               	retlw	0
  6641     1814  3400               	retlw	0
  6642     1815  3400               	retlw	0
  6643     1816  3400               	retlw	0
  6644     1817  3400               	retlw	0
  6645     1818  3400               	retlw	0
  6646     1819  3400               	retlw	0
  6647     181A  3400               	retlw	0
  6648     181B  3400               	retlw	0
  6649     181C  3400               	retlw	0
  6650     181D  3400               	retlw	0
  6651     181E  3400               	retlw	0
  6652     181F  3400               	retlw	0
  6653     1820  3400               	retlw	0
  6654     1821  3400               	retlw	0
  6655     1822  3400               	retlw	0
  6656     1823  3400               	retlw	0
  6657     1824  3400               	retlw	0
  6658     1825  3400               	retlw	0
  6659     1826  3400               	retlw	0
  6660     1827  3400               	retlw	0
  6661     1828  3466               	retlw	low _EUSART_FramingErrorCallbackRegister
  6662     1829  341E               	retlw	high _EUSART_FramingErrorCallbackRegister
  6663     182A  3475               	retlw	low _EUSART_OverrunErrorCallbackRegister
  6664     182B  341E               	retlw	high _EUSART_OverrunErrorCallbackRegister
  6665     182C  3400               	retlw	0
  6666     182D  3400               	retlw	0
  6667     182E  3400               	retlw	0
  6668     182F  3400               	retlw	0
  6669     1830                     __end_of_UART1:
  6670                           
  6671                           	psect	stringtext2
  6672     1830                     __pstringtext2:
  6673     1830                     _ledstrip:
  6674     1830  3401               	retlw	low _SPI1_Initialize
  6675     1831  3408               	retlw	high _SPI1_Initialize
  6676     1832  3400               	retlw	0
  6677     1833  3400               	retlw	0
  6678     1834  34D9               	retlw	low _SPI1_Open
  6679     1835  3415               	retlw	high _SPI1_Open
  6680     1836  3400               	retlw	0
  6681     1837  3400               	retlw	0
  6682     1838  3400               	retlw	0
  6683     1839  3400               	retlw	0
  6684     183A  3400               	retlw	0
  6685     183B  3400               	retlw	0
  6686     183C  3400               	retlw	0
  6687     183D  3400               	retlw	0
  6688     183E  3411               	retlw	low _SPI1_ByteExchange
  6689     183F  341E               	retlw	high _SPI1_ByteExchange
  6690     1840  3400               	retlw	0
  6691     1841  3400               	retlw	0
  6692     1842  3400               	retlw	0
  6693     1843  3400               	retlw	0
  6694     1844  3400               	retlw	0
  6695     1845  3400               	retlw	0
  6696     1846  3400               	retlw	0
  6697     1847  3400               	retlw	0
  6698     1848  3400               	retlw	0
  6699     1849  3400               	retlw	0
  6700     184A  3400               	retlw	0
  6701     184B  3400               	retlw	0
  6702     184C                     __end_of_ledstrip:
  6703                           
  6704                           	psect	stringtext3
  6705     18C2                     __pstringtext3:
  6706     18C2                     _spi1_configuration:
  6707     18C2  3440               	retlw	64
  6708     18C3  340A               	retlw	10
  6709     18C4  3410               	retlw	16
  6710     18C5  3407               	retlw	7
  6711     18C6  3400               	retlw	0
  6712     18C7  3464               	retlw	100
  6713     18C8  3400               	retlw	0
  6714     18C9  3410               	retlw	16
  6715     18CA  3401               	retlw	1
  6716     18CB  3400               	retlw	0
  6717     18CC                     __end_of_spi1_configuration:
  6718                           
  6719                           	psect	nvBANK2
  6720     0154                     __pnvBANK2:
  6721     0154                     _TMR6_PeriodMatchCallback:
  6722     0154                     	ds	2
  6723     0156                     _TMR4_PeriodMatchCallback:
  6724     0156                     	ds	2
  6725     0158                     _TMR2_PeriodMatchCallback:
  6726     0158                     	ds	2
  6727     015A                     _EUSART_RxInterruptHandler:
  6728     015A                     	ds	2
  6729     015C                     _EUSART_TxInterruptHandler:
  6730     015C                     	ds	2
  6731     015E                     _ADC_InterruptHandler:
  6732     015E                     	ds	2
  6733     001F                     _T2CONbits      set	31
  6734     001F                     _T2CON          set	31
  6735     001D                     _TMR2           set	29
  6736     001E                     _PR2            set	30
  6737     0012                     _PIR2bits       set	18
  6738     000B                     _INTCONbits     set	11
  6739     0010                     _PIR0bits       set	16
  6740     0011                     _PIR1bits       set	17
  6741     008E                     _TRISC          set	142
  6742     008D                     _TRISB          set	141
  6743     008C                     _TRISA          set	140
  6744     0092                     _PIE2bits       set	146
  6745     009D                     _ADCON0bits     set	157
  6746     0091                     _PIE1bits       set	145
  6747     009D                     _ADCON0         set	157
  6748     009F                     _ADACT          set	159
  6749     009C                     _ADRESH         set	156
  6750     009B                     _ADRESL         set	155
  6751     009E                     _ADCON1         set	158
  6752     010E                     _LATC           set	270
  6753     010D                     _LATB           set	269
  6754     010C                     _LATA           set	268
  6755     019A                     _TX1REG         set	410
  6756     0199                     _RC1REG         set	409
  6757     019F                     _BAUD1CONbits   set	415
  6758     019E                     _TX1STAbits     set	414
  6759     019D                     _RC1STAbits     set	413
  6760     019C                     _SP1BRGH        set	412
  6761     019B                     _SP1BRGL        set	411
  6762     019E                     _TX1STA         set	414
  6763     019D                     _RC1STA         set	413
  6764     019F                     _BAUD1CON       set	415
  6765     018E                     _ANSELC         set	398
  6766     018D                     _ANSELB         set	397
  6767     018C                     _ANSELA         set	396
  6768     020E                     _WPUC           set	526
  6769     020D                     _WPUB           set	525
  6770     020C                     _WPUA           set	524
  6771     0211                     _SSP1BUF        set	529
  6772     0215                     _SSP1CON1bits   set	533
  6773     0212                     _SSP1ADD        set	530
  6774     0217                     _SSP1CON3       set	535
  6775     0215                     _SSP1CON1       set	533
  6776     0214                     _SSP1STAT       set	532
  6777     028E                     _ODCONC         set	654
  6778     028D                     _ODCONB         set	653
  6779     028C                     _ODCONA         set	652
  6780     030E                     _SLRCONC        set	782
  6781     030D                     _SLRCONB        set	781
  6782     030C                     _SLRCONA        set	780
  6783     0399                     _IOCCF          set	921
  6784     0398                     _IOCCN          set	920
  6785     0397                     _IOCCP          set	919
  6786     0396                     _IOCBF          set	918
  6787     0395                     _IOCBN          set	917
  6788     0394                     _IOCBP          set	916
  6789     0393                     _IOCAF          set	915
  6790     0392                     _IOCAN          set	914
  6791     0391                     _IOCAP          set	913
  6792     038E                     _INLVLC         set	910
  6793     038D                     _INLVLB         set	909
  6794     038C                     _INLVLA         set	908
  6795     041E                     _T6CONbits      set	1054
  6796     041E                     _T6CON          set	1054
  6797     041C                     _TMR6           set	1052
  6798     041D                     _PR6            set	1053
  6799     0417                     _T4CONbits      set	1047
  6800     0417                     _T4CON          set	1047
  6801     0415                     _TMR4           set	1045
  6802     0416                     _PR4            set	1046
  6803     061A                     _PWM6DCL        set	1562
  6804     061B                     _PWM6DCH        set	1563
  6805     061C                     _PWM6CON        set	1564
  6806     061F                     _PWMTMRSbits    set	1567
  6807     0617                     _PWM5DCL        set	1559
  6808     0618                     _PWM5DCH        set	1560
  6809     0619                     _PWM5CON        set	1561
  6810     091E                     _OSCTUNE        set	2334
  6811     091C                     _OSCSTAT1       set	2332
  6812     091F                     _OSCFRQ         set	2335
  6813     091D                     _OSCEN          set	2333
  6814     091B                     _OSCCON3        set	2331
  6815     0919                     _OSCCON1        set	2329
  6816     0E20                     _SSP1CLKPPS     set	3616
  6817     0E24                     _RXPPS          set	3620
  6818     0E21                     _SSP1DATPPS     set	3617
  6819     0E9E                     _RB6PPS         set	3742
  6820     0E9F                     _RB7PPS         set	3743
  6821     0EA7                     _RC7PPS         set	3751
  6822     0EA5                     _RC5PPS         set	3749
  6823     0E9C                     _RB4PPS         set	3740
  6824                           
  6825                           	psect	stringtext4
  6826     184C                     __pstringtext4:
  6827     184C                     STR_6:
  6828     184C  3463               	retlw	99	;'c'
  6829     184D  3468               	retlw	104	;'h'
  6830     184E  3461               	retlw	97	;'a'
  6831     184F  346E               	retlw	110	;'n'
  6832     1850  3467               	retlw	103	;'g'
  6833     1851  3465               	retlw	101	;'e'
  6834     1852  3464               	retlw	100	;'d'
  6835     1853  3420               	retlw	32	;' '
  6836     1854  3473               	retlw	115	;'s'
  6837     1855  3465               	retlw	101	;'e'
  6838     1856  3474               	retlw	116	;'t'
  6839     1857  3470               	retlw	112	;'p'
  6840     1858  346F               	retlw	111	;'o'
  6841     1859  3469               	retlw	105	;'i'
  6842     185A  346E               	retlw	110	;'n'
  6843     185B  3474               	retlw	116	;'t'
  6844     185C  3420               	retlw	32	;' '
  6845     185D  3474               	retlw	116	;'t'
  6846     185E  346F               	retlw	111	;'o'
  6847     185F  3420               	retlw	32	;' '
  6848     1860  3425               	retlw	37	;'%'
  6849     1861  3475               	retlw	117	;'u'
  6850     1862  340D               	retlw	13
  6851     1863  340A               	retlw	10
  6852     1864  3400               	retlw	0
  6853                           
  6854                           	psect	stringtext5
  6855     1865                     __pstringtext5:
  6856     1865                     STR_2:
  6857     1865  3469               	retlw	105	;'i'
  6858     1866  346E               	retlw	110	;'n'
  6859     1867  3470               	retlw	112	;'p'
  6860     1868  3475               	retlw	117	;'u'
  6861     1869  3474               	retlw	116	;'t'
  6862     186A  3420               	retlw	32	;' '
  6863     186B  3462               	retlw	98	;'b'
  6864     186C  3475               	retlw	117	;'u'
  6865     186D  3466               	retlw	102	;'f'
  6866     186E  3466               	retlw	102	;'f'
  6867     186F  3465               	retlw	101	;'e'
  6868     1870  3472               	retlw	114	;'r'
  6869     1871  3420               	retlw	32	;' '
  6870     1872  346F               	retlw	111	;'o'
  6871     1873  3476               	retlw	118	;'v'
  6872     1874  3465               	retlw	101	;'e'
  6873     1875  3472               	retlw	114	;'r'
  6874     1876  3466               	retlw	102	;'f'
  6875     1877  346C               	retlw	108	;'l'
  6876     1878  346F               	retlw	111	;'o'
  6877     1879  3477               	retlw	119	;'w'
  6878     187A  340D               	retlw	13
  6879     187B  340A               	retlw	10
  6880     187C  3400               	retlw	0
  6881                           
  6882                           	psect	stringtext6
  6883     187D                     __pstringtext6:
  6884     187D                     STR_10:
  6885     187D  3455               	retlw	85	;'U'
  6886     187E  346E               	retlw	110	;'n'
  6887     187F  346B               	retlw	107	;'k'
  6888     1880  346F               	retlw	111	;'o'
  6889     1881  3477               	retlw	119	;'w'
  6890     1882  346E               	retlw	110	;'n'
  6891     1883  3420               	retlw	32	;' '
  6892     1884  3463               	retlw	99	;'c'
  6893     1885  346F               	retlw	111	;'o'
  6894     1886  346D               	retlw	109	;'m'
  6895     1887  346D               	retlw	109	;'m'
  6896     1888  3461               	retlw	97	;'a'
  6897     1889  346E               	retlw	110	;'n'
  6898     188A  3464               	retlw	100	;'d'
  6899     188B  340D               	retlw	13
  6900     188C  340A               	retlw	10
  6901     188D  3400               	retlw	0
  6902                           
  6903                           	psect	stringtext7
  6904     188E                     __pstringtext7:
  6905     188E                     STR_9:
  6906     188E  346C               	retlw	108	;'l'
  6907     188F  346F               	retlw	111	;'o'
  6908     1890  3467               	retlw	103	;'g'
  6909     1891  3473               	retlw	115	;'s'
  6910     1892  3420               	retlw	32	;' '
  6911     1893  3474               	retlw	116	;'t'
  6912     1894  346F               	retlw	111	;'o'
  6913     1895  3467               	retlw	103	;'g'
  6914     1896  3467               	retlw	103	;'g'
  6915     1897  346C               	retlw	108	;'l'
  6916     1898  3465               	retlw	101	;'e'
  6917     1899  3464               	retlw	100	;'d'
  6918     189A  340D               	retlw	13
  6919     189B  340A               	retlw	10
  6920     189C  3400               	retlw	0
  6921                           
  6922                           	psect	stringtext8
  6923     189D                     __pstringtext8:
  6924     189D                     STR_8:
  6925     189D  3463               	retlw	99	;'c'
  6926     189E  3468               	retlw	104	;'h'
  6927     189F  3461               	retlw	97	;'a'
  6928     18A0  346E               	retlw	110	;'n'
  6929     18A1  3467               	retlw	103	;'g'
  6930     18A2  3465               	retlw	101	;'e'
  6931     18A3  3464               	retlw	100	;'d'
  6932     18A4  3420               	retlw	32	;' '
  6933     18A5  346B               	retlw	107	;'k'
  6934     18A6  3469               	retlw	105	;'i'
  6935     18A7  340D               	retlw	13
  6936     18A8  340A               	retlw	10
  6937     18A9  3400               	retlw	0
  6938                           
  6939                           	psect	stringtext9
  6940     18AA                     __pstringtext9:
  6941     18AA                     STR_7:
  6942     18AA  3463               	retlw	99	;'c'
  6943     18AB  3468               	retlw	104	;'h'
  6944     18AC  3461               	retlw	97	;'a'
  6945     18AD  346E               	retlw	110	;'n'
  6946     18AE  3467               	retlw	103	;'g'
  6947     18AF  3465               	retlw	101	;'e'
  6948     18B0  3464               	retlw	100	;'d'
  6949     18B1  3420               	retlw	32	;' '
  6950     18B2  346B               	retlw	107	;'k'
  6951     18B3  3470               	retlw	112	;'p'
  6952     18B4  340D               	retlw	13
  6953     18B5  340A               	retlw	10
  6954     18B6  3400               	retlw	0
  6955                           
  6956                           	psect	stringtext10
  6957     18B7                     __pstringtext10:
  6958     18B7                     STR_4:
  6959     18B7  342C               	retlw	44	;','
  6960     18B8  3420               	retlw	32	;' '
  6961     18B9  3470               	retlw	112	;'p'
  6962     18BA  346F               	retlw	111	;'o'
  6963     18BB  346D               	retlw	109	;'m'
  6964     18BC  3470               	retlw	112	;'p'
  6965     18BD  343A               	retlw	58	;':'
  6966     18BE  3420               	retlw	32	;' '
  6967     18BF  3425               	retlw	37	;'%'
  6968     18C0  3475               	retlw	117	;'u'
  6969     18C1  3400               	retlw	0
  6970                           
  6971                           	psect	stringtext11
  6972     18CC                     __pstringtext11:
  6973     18CC                     STR_3:
  6974     18CC  3443               	retlw	67	;'C'
  6975     18CD  346F               	retlw	111	;'o'
  6976     18CE  3475               	retlw	117	;'u'
  6977     18CF  346E               	retlw	110	;'n'
  6978     18D0  3474               	retlw	116	;'t'
  6979     18D1  343A               	retlw	58	;':'
  6980     18D2  3420               	retlw	32	;' '
  6981     18D3  3425               	retlw	37	;'%'
  6982     18D4  3475               	retlw	117	;'u'
  6983     18D5  3400               	retlw	0
  6984                           
  6985                           	psect	stringtext12
  6986     18D6                     __pstringtext12:
  6987     18D6                     STR_1:
  6988     18D6  3425               	retlw	37	;'%'
  6989     18D7  3469               	retlw	105	;'i'
  6990     18D8  342E               	retlw	46	;'.'
  6991     18D9  3425               	retlw	37	;'%'
  6992     18DA  3430               	retlw	48	;'0'
  6993     18DB  3433               	retlw	51	;'3'
  6994     18DC  3475               	retlw	117	;'u'
  6995     18DD  3400               	retlw	0
  6996                           
  6997                           	psect	stringtext13
  6998     0000                     __pstringtext13:
  6999     189A                     STR_5           equ	STR_9+12
  7000                           
  7001                           	psect	cinit
  7002     005A                     start_initialization:	
  7003                           ; #config settings
  7004                           
  7005     005A                     __initialization:
  7006                           
  7007                           ; Initialize objects allocated to BANK0
  7008     005A  3187  27FD  3180   	fcall	__pidataBANK0	;fetch initializer
  7009     005D  00ED               	movwf	__pdataBANK0& (0+127)
  7010     005E  3187  27FE  3180   	fcall	__pidataBANK0+1	;fetch initializer
  7011     0061  00EE               	movwf	(__pdataBANK0+1)& (0+127)
  7012                           
  7013                           ; Initialize objects allocated to BANK1
  7014     0062  0021               	movlb	1	; select bank1
  7015     0063  3180  2002  3180   	fcall	__pidataBANK1	;fetch initializer
  7016     0066  00ED               	movwf	__pdataBANK1& (0+127)
  7017     0067  3180  2003  3180   	fcall	__pidataBANK1+1	;fetch initializer
  7018     006A  00EE               	movwf	(__pdataBANK1+1)& (0+127)
  7019                           
  7020                           ; Initialize objects allocated to BANK2
  7021     006B  307C               	movlw	low __pidataBANK2
  7022     006C  0084               	movwf	4
  7023     006D  309D               	movlw	(high __pidataBANK2)| (0+128)
  7024     006E  0085               	movwf	5
  7025     006F  3060               	movlw	low __pdataBANK2
  7026     0070  0086               	movwf	6
  7027     0071  3001               	movlw	high __pdataBANK2
  7028     0072  0087               	movwf	7
  7029     0073  3008               	movlw	8
  7030     0074  319D  2576  3180   	fcall	init_ram
  7031                           
  7032                           ; Clear objects allocated to BANK0
  7033     0077  3055               	movlw	low __pbssBANK0
  7034     0078  0084               	movwf	4
  7035     0079  3000               	movlw	high __pbssBANK0
  7036     007A  0085               	movwf	5
  7037     007B  3018               	movlw	24
  7038     007C  319D  2570  3180   	fcall	clear_ram0
  7039                           
  7040                           ; Clear objects allocated to BANK2
  7041     007F  3020               	movlw	low __pbssBANK2
  7042     0080  0084               	movwf	4
  7043     0081  3001               	movlw	high __pbssBANK2
  7044     0082  0085               	movwf	5
  7045     0083  3034               	movlw	52
  7046     0084  319D  2570  3180   	fcall	clear_ram0
  7047                           
  7048                           ; Clear objects allocated to BANK3
  7049     0087  30A0               	movlw	low __pbssBANK3
  7050     0088  0084               	movwf	4
  7051     0089  3001               	movlw	high __pbssBANK3
  7052     008A  0085               	movwf	5
  7053     008B  3034               	movlw	52
  7054     008C  319D  2570  3180   	fcall	clear_ram0
  7055     008F                     end_of_initialization:	
  7056                           ;End of C runtime variable initialization code
  7057                           
  7058     008F                     __end_of__initialization:
  7059     008F  107E               	bcf	int$flags,0	;clear compiler interrupt flag (level 1)
  7060     0090  0020               	movlb	0
  7061     0091  3190  28FD         	ljmp	_main	;jump to C main() function
  7062                           
  7063                           	psect	bssBANK0
  7064     0055                     __pbssBANK0:
  7065     0055                     _width:
  7066     0055                     	ds	2
  7067     0057                     _dutycycle:
  7068     0057                     	ds	2
  7069     0059                     _ADC_pomphoogte:
  7070     0059                     	ds	2
  7071     005B                     _ADC_hoogtesensor:
  7072     005B                     	ds	2
  7073     005D                     _EUSART_OverrunErrorHandler:
  7074     005D                     	ds	2
  7075     005F                     _EUSART_FramingErrorHandler:
  7076     005F                     	ds	2
  7077     0061                     _INT_InterruptHandler:
  7078     0061                     	ds	2
  7079     0063                     _flags:
  7080     0063                     	ds	1
  7081     0064                     _buzzing:
  7082     0064                     	ds	1
  7083     0065                     _is_on_target:
  7084     0065                     	ds	1
  7085     0066                     readLine@index:
  7086     0066                     	ds	1
  7087     0067                     _eusartRxCount:
  7088     0067                     	ds	1
  7089     0068                     _eusartRxTail:
  7090     0068                     	ds	1
  7091     0069                     _eusartRxHead:
  7092     0069                     	ds	1
  7093     006A                     _eusartTxBufferRemaining:
  7094     006A                     	ds	1
  7095     006B                     _eusartTxTail:
  7096     006B                     	ds	1
  7097     006C                     _eusartTxHead:
  7098     006C                     	ds	1
  7099                           
  7100                           	psect	dataBANK0
  7101     006D                     __pdataBANK0:
  7102     006D                     _mustPrintLogs:
  7103     006D                     	ds	1
  7104     006E                     adcConversionDoneHandler@new_channel:
  7105     006E                     	ds	1
  7106                           
  7107                           	psect	dataBANK1
  7108     00ED                     __pdataBANK1:
  7109     00ED                     _setpoint:
  7110     00ED                     	ds	2
  7111                           
  7112                           	psect	bssBANK2
  7113     0120                     __pbssBANK2:
  7114     0120                     _eusartRxStatusBuffer:
  7115     0120                     	ds	16
  7116     0130                     _eusartRxBuffer:
  7117     0130                     	ds	8
  7118     0138                     _eusartTxBuffer:
  7119     0138                     	ds	8
  7120     0140                     _integraal:
  7121     0140                     	ds	4
  7122     0144                     _nout:
  7123     0144                     	ds	2
  7124     0146                     _prec:
  7125     0146                     	ds	2
  7126     0148                     _counter:
  7127     0148                     	ds	2
  7128     014A                     _hoogte_bal:
  7129     014A                     	ds	2
  7130     014C                     _ADC_potentiometer:
  7131     014C                     	ds	2
  7132     014E                     _EUSART_RxCompleteInterruptHandler:
  7133     014E                     	ds	2
  7134     0150                     _EUSART_TxCompleteInterruptHandler:
  7135     0150                     	ds	2
  7136     0152                     _eusartRxLastError:
  7137     0152                     	ds	2
  7138                           
  7139                           	psect	dataBANK2
  7140     0160                     __pdataBANK2:
  7141     0160                     _ki:
  7142     0160                     	ds	4
  7143     0164                     _kp:
  7144     0164                     	ds	4
  7145                           
  7146                           	psect	bssBANK3
  7147     01A0                     __pbssBANK3:
  7148     01A0                     _dbuf:
  7149     01A0                     	ds	32
  7150     01C0                     _line:
  7151     01C0                     	ds	20
  7152                           
  7153                           	psect	inittext
  7154     1D76                     init_ram:
  7155     1D76  00FE               	movwf	btemp
  7156     1D77                     initloop:
  7157     1D77  0012               	moviw fsr0++
  7158     1D78  001E               	movwi fsr1++
  7159     1D79  0BFE               	decfsz	btemp,f
  7160     1D7A  2D77               	goto	initloop
  7161     1D7B  3400               	retlw	0
  7162                           
  7163                           	psect	clrtext
  7164     1D70                     clear_ram0:	
  7165                           ;	Called with FSR0 containing the base address, and
  7166                           ;	WREG with the size to clear
  7167                           
  7168     1D70  0064               	clrwdt	;clear the watchdog before getting into this loop
  7169     1D71                     clrloop0:
  7170     1D71  0180               	clrf	0	;clear RAM location pointed to by FSR
  7171     1D72  3101               	addfsr 0,1
  7172     1D73  0B89               	decfsz	9,f	;Have we reached the end of clearing yet?
  7173     1D74  2D71               	goto	clrloop0	;have we reached the end yet?
  7174     1D75  3400               	retlw	0	;all done for this memory range, return
  7175                           
  7176                           	psect	cstackBANK1
  7177     00A0                     __pcstackBANK1:
  7178     00A0                     ?_ADC_SetInterruptHandler:
  7179     00A0                     ?_SPI1_ByteExchange:	
  7180                           ; 1 bytes @ 0x0
  7181                           
  7182     00A0                     ?_INT_SetInterruptHandler:	
  7183                           ; 1 bytes @ 0x0
  7184                           
  7185     00A0                     ?_EUSART_Write:	
  7186                           ; 1 bytes @ 0x0
  7187                           
  7188     00A0                     ?_EUSART_FramingErrorCallbackRegister:	
  7189                           ; 1 bytes @ 0x0
  7190                           
  7191     00A0                     ?_EUSART_OverrunErrorCallbackRegister:	
  7192                           ; 1 bytes @ 0x0
  7193                           
  7194     00A0                     ?_PWM_buzzer_LoadDutyValue:	
  7195                           ; 1 bytes @ 0x0
  7196                           
  7197     00A0                     ?_TMR4_PeriodMatchCallbackRegister:	
  7198                           ; 1 bytes @ 0x0
  7199                           
  7200     00A0                     ?_TMR6_PeriodMatchCallbackRegister:	
  7201                           ; 1 bytes @ 0x0
  7202                           
  7203     00A0                     ?_getCounter:	
  7204                           ; 1 bytes @ 0x0
  7205                           
  7206     00A0                     ?__Umul8_16:	
  7207                           ; 2 bytes @ 0x0
  7208                           
  7209     00A0                     ?_strlen:	
  7210                           ; 2 bytes @ 0x0
  7211                           
  7212     00A0                     ?_getPomphoogte:	
  7213                           ; 2 bytes @ 0x0
  7214                           
  7215     00A0                     ?___wmul:	
  7216                           ; 2 bytes @ 0x0
  7217                           
  7218     00A0                     ?___awdiv:	
  7219                           ; 2 bytes @ 0x0
  7220                           
  7221     00A0                     ?___awmod:	
  7222                           ; 2 bytes @ 0x0
  7223                           
  7224     00A0                     ?___lwdiv:	
  7225                           ; 2 bytes @ 0x0
  7226                           
  7227     00A0                     ?___lwmod:	
  7228                           ; 2 bytes @ 0x0
  7229                           
  7230     00A0                     ?___fldiv:	
  7231                           ; 2 bytes @ 0x0
  7232                           
  7233     00A0                     ?___xxtofl:	
  7234                           ; 4 bytes @ 0x0
  7235                           
  7236     00A0                     SPI1_ByteExchange@byteData:	
  7237                           ; 4 bytes @ 0x0
  7238                           
  7239     00A0                     EUSART_Read@tempRxTail:	
  7240                           ; 1 bytes @ 0x0
  7241                           
  7242     00A0                     EUSART_Write@txData:	
  7243                           ; 1 bytes @ 0x0
  7244                           
  7245     00A0                     __Umul8_16@multiplicand:	
  7246                           ; 1 bytes @ 0x0
  7247                           
  7248     00A0                     strlen@s:	
  7249                           ; 1 bytes @ 0x0
  7250                           
  7251     00A0                     ADC_SetInterruptHandler@InterruptHandler:	
  7252                           ; 1 bytes @ 0x0
  7253                           
  7254     00A0                     PWM_buzzer_LoadDutyValue@dutyValue:	
  7255                           ; 2 bytes @ 0x0
  7256                           
  7257     00A0                     INT_SetInterruptHandler@InterruptHandler:	
  7258                           ; 2 bytes @ 0x0
  7259                           
  7260     00A0                     TMR4_PeriodMatchCallbackRegister@CallbackHandler:	
  7261                           ; 2 bytes @ 0x0
  7262                           
  7263     00A0                     TMR6_PeriodMatchCallbackRegister@CallbackHandler:	
  7264                           ; 2 bytes @ 0x0
  7265                           
  7266     00A0                     EUSART_FramingErrorCallbackRegister@callbackHandler:	
  7267                           ; 2 bytes @ 0x0
  7268                           
  7269     00A0                     EUSART_OverrunErrorCallbackRegister@callbackHandler:	
  7270                           ; 2 bytes @ 0x0
  7271                           
  7272     00A0                     ___wmul@multiplier:	
  7273                           ; 2 bytes @ 0x0
  7274                           
  7275     00A0                     ___awdiv@divisor:	
  7276                           ; 2 bytes @ 0x0
  7277                           
  7278     00A0                     ___awmod@divisor:	
  7279                           ; 2 bytes @ 0x0
  7280                           
  7281     00A0                     ___lwdiv@divisor:	
  7282                           ; 2 bytes @ 0x0
  7283                           
  7284     00A0                     ___lwmod@divisor:	
  7285                           ; 2 bytes @ 0x0
  7286                           
  7287     00A0                     ___fldiv@a:	
  7288                           ; 2 bytes @ 0x0
  7289                           
  7290     00A0                     ___xxtofl@val:	
  7291                           ; 4 bytes @ 0x0
  7292                           
  7293     00A0                     ??_SPI1_Initialize:	
  7294                           ; 4 bytes @ 0x0
  7295                           
  7296     00A0                     ??_TMR2_Initialize:	
  7297                           ; 1 bytes @ 0x0
  7298                           
  7299     00A0                     ??_TMR4_Initialize:	
  7300                           ; 1 bytes @ 0x0
  7301                           
  7302     00A0                     ??_TMR6_Initialize:	
  7303                           ; 1 bytes @ 0x0
  7304                           
  7305     00A0                     ??_TMR6_DefaultPeriodMatchCallback:	
  7306                           ; 1 bytes @ 0x0
  7307                           
  7308     00A0                     ??_EUSART_Read:	
  7309                           ; 1 bytes @ 0x0
  7310                           
  7311     00A0                     ??_EUSART_IsRxReady:	
  7312                           ; 1 bytes @ 0x0
  7313                           
  7314     00A0                     ??_EUSART_IsTxReady:	
  7315                           ; 1 bytes @ 0x0
  7316                           
  7317     00A0                     ??_ADC_SelectChannel:	
  7318                           ; 1 bytes @ 0x0
  7319                           
  7320     00A0                     ??_pwm_fan_Initialize:	
  7321                           ; 1 bytes @ 0x0
  7322                           
  7323     00A0                     ??_PWM_buzzer_Initialize:	
  7324                           ; 1 bytes @ 0x0
  7325                           
  7326     00A0                     ??_CLOCK_Initialize:	
  7327                           ; 1 bytes @ 0x0
  7328                           
  7329     00A0                     ??_PIN_MANAGER_Initialize:	
  7330                           ; 1 bytes @ 0x0
  7331                           
  7332                           
  7333                           ; 1 bytes @ 0x0
  7334     00A0                     	ds	1
  7335     00A1                     ?_sendLedstripFrame:
  7336     00A1                     ADC_SelectChannel@channel:	
  7337                           ; 1 bytes @ 0x1
  7338                           
  7339     00A1                     EUSART_Read@readValue:	
  7340                           ; 1 bytes @ 0x1
  7341                           
  7342     00A1                     EUSART_Write@tempTxHead:	
  7343                           ; 1 bytes @ 0x1
  7344                           
  7345     00A1                     sendLedstripFrame@green:	
  7346                           ; 1 bytes @ 0x1
  7347                           
  7348     00A1                     ??_SPI1_ByteExchange:	
  7349                           ; 1 bytes @ 0x1
  7350                           
  7351     00A1                     ??_EUSART_Write:	
  7352                           ; 1 bytes @ 0x1
  7353                           
  7354     00A1                     ??_sendLedstripStartFrame:	
  7355                           ; 1 bytes @ 0x1
  7356                           
  7357     00A1                     ??_sendLedstripEndFrame:	
  7358                           ; 1 bytes @ 0x1
  7359                           
  7360                           
  7361                           ; 1 bytes @ 0x1
  7362     00A1                     	ds	1
  7363     00A2                     putch@txData:
  7364     00A2                     sendLedstripFrame@blue:	
  7365                           ; 1 bytes @ 0x2
  7366                           
  7367     00A2                     strlen@a:	
  7368                           ; 1 bytes @ 0x2
  7369                           
  7370     00A2                     ___wmul@multiplicand:	
  7371                           ; 1 bytes @ 0x2
  7372                           
  7373     00A2                     ___awdiv@dividend:	
  7374                           ; 2 bytes @ 0x2
  7375                           
  7376     00A2                     ___awmod@dividend:	
  7377                           ; 2 bytes @ 0x2
  7378                           
  7379     00A2                     ___lwdiv@dividend:	
  7380                           ; 2 bytes @ 0x2
  7381                           
  7382     00A2                     ___lwmod@dividend:	
  7383                           ; 2 bytes @ 0x2
  7384                           
  7385     00A2                     ??_ADC_SetInterruptHandler:	
  7386                           ; 2 bytes @ 0x2
  7387                           
  7388     00A2                     ??_INT_SetInterruptHandler:	
  7389                           ; 1 bytes @ 0x2
  7390                           
  7391     00A2                     ??_EUSART_Initialize:	
  7392                           ; 1 bytes @ 0x2
  7393                           
  7394     00A2                     ??_EUSART_FramingErrorCallbackRegister:	
  7395                           ; 1 bytes @ 0x2
  7396                           
  7397     00A2                     ??_EUSART_OverrunErrorCallbackRegister:	
  7398                           ; 1 bytes @ 0x2
  7399                           
  7400     00A2                     ??_initAdcMultiplexer:	
  7401                           ; 1 bytes @ 0x2
  7402                           
  7403     00A2                     ??_getCounter:	
  7404                           ; 1 bytes @ 0x2
  7405                           
  7406     00A2                     ??__Umul8_16:	
  7407                           ; 1 bytes @ 0x2
  7408                           
  7409     00A2                     ??_strlen:	
  7410                           ; 1 bytes @ 0x2
  7411                           
  7412     00A2                     ??_ADC_Initialize:	
  7413                           ; 1 bytes @ 0x2
  7414                           
  7415     00A2                     ??_PWM_buzzer_LoadDutyValue:	
  7416                           ; 1 bytes @ 0x2
  7417                           
  7418     00A2                     ??_INTERRUPT_Initialize:	
  7419                           ; 1 bytes @ 0x2
  7420                           
  7421     00A2                     ??_SYSTEM_Initialize:	
  7422                           ; 1 bytes @ 0x2
  7423                           
  7424     00A2                     ??_TMR4_PeriodMatchCallbackRegister:	
  7425                           ; 1 bytes @ 0x2
  7426                           
  7427     00A2                     ??_TMR6_PeriodMatchCallbackRegister:	
  7428                           ; 1 bytes @ 0x2
  7429                           
  7430     00A2                     ??_putch:	
  7431                           ; 1 bytes @ 0x2
  7432                           
  7433     00A2                     ??_getPomphoogte:	
  7434                           ; 1 bytes @ 0x2
  7435                           
  7436                           
  7437                           ; 1 bytes @ 0x2
  7438     00A2                     	ds	1
  7439     00A3                     ?_fputc:
  7440     00A3                     sendLedstripFrame@intensity:	
  7441                           ; 2 bytes @ 0x3
  7442                           
  7443     00A3                     fputc@c:	
  7444                           ; 1 bytes @ 0x3
  7445                           
  7446                           
  7447                           ; 2 bytes @ 0x3
  7448     00A3                     	ds	1
  7449     00A4                     sendLedstripFrame@red:
  7450     00A4                     ___awdiv@counter:	
  7451                           ; 1 bytes @ 0x4
  7452                           
  7453     00A4                     ___awmod@counter:	
  7454                           ; 1 bytes @ 0x4
  7455                           
  7456     00A4                     ___lwmod@counter:	
  7457                           ; 1 bytes @ 0x4
  7458                           
  7459     00A4                     ___wmul@product:	
  7460                           ; 1 bytes @ 0x4
  7461                           
  7462     00A4                     ___lwdiv@quotient:	
  7463                           ; 2 bytes @ 0x4
  7464                           
  7465     00A4                     __Umul8_16@product:	
  7466                           ; 2 bytes @ 0x4
  7467                           
  7468     00A4                     ___fldiv@b:	
  7469                           ; 2 bytes @ 0x4
  7470                           
  7471     00A4                     ??_sendLedstripFrame:	
  7472                           ; 4 bytes @ 0x4
  7473                           
  7474     00A4                     ??___wmul:	
  7475                           ; 1 bytes @ 0x4
  7476                           
  7477     00A4                     ??___awdiv:	
  7478                           ; 1 bytes @ 0x4
  7479                           
  7480     00A4                     ??___awmod:	
  7481                           ; 1 bytes @ 0x4
  7482                           
  7483     00A4                     ??___lwdiv:	
  7484                           ; 1 bytes @ 0x4
  7485                           
  7486     00A4                     ??___lwmod:	
  7487                           ; 1 bytes @ 0x4
  7488                           
  7489     00A4                     ??___xxtofl:	
  7490                           ; 1 bytes @ 0x4
  7491                           
  7492                           
  7493                           ; 1 bytes @ 0x4
  7494     00A4                     	ds	1
  7495     00A5                     ___awdiv@sign:
  7496     00A5                     ___awmod@sign:	
  7497                           ; 1 bytes @ 0x5
  7498                           
  7499     00A5                     fputc@fp:	
  7500                           ; 1 bytes @ 0x5
  7501                           
  7502                           
  7503                           ; 2 bytes @ 0x5
  7504     00A5                     	ds	1
  7505     00A6                     ?_SPI1_Open:
  7506     00A6                     ?_atoi:	
  7507                           ; 1 bytes @ 0x6
  7508                           
  7509     00A6                     ?_abs:	
  7510                           ; 2 bytes @ 0x6
  7511                           
  7512     00A6                     ?_read_prec_or_width:	
  7513                           ; 2 bytes @ 0x6
  7514                           
  7515     00A6                     SPI1_Open@spiConfigIndex:	
  7516                           ; 2 bytes @ 0x6
  7517                           
  7518     00A6                     ___lwdiv@counter:	
  7519                           ; 1 bytes @ 0x6
  7520                           
  7521     00A6                     atoi@s:	
  7522                           ; 1 bytes @ 0x6
  7523                           
  7524     00A6                     read_prec_or_width@fmt:	
  7525                           ; 1 bytes @ 0x6
  7526                           
  7527     00A6                     ___awdiv@quotient:	
  7528                           ; 1 bytes @ 0x6
  7529                           
  7530     00A6                     __Umul8_16@word_mpld:	
  7531                           ; 2 bytes @ 0x6
  7532                           
  7533     00A6                     abs@a:	
  7534                           ; 2 bytes @ 0x6
  7535                           
  7536                           
  7537                           ; 2 bytes @ 0x6
  7538     00A6                     	ds	1
  7539     00A7                     read_prec_or_width@ap:
  7540     00A7                     ??_SPI1_Open:	
  7541                           ; 1 bytes @ 0x7
  7542                           
  7543     00A7                     ??_fputc:	
  7544                           ; 1 bytes @ 0x7
  7545                           
  7546     00A7                     ??_counter_led:	
  7547                           ; 1 bytes @ 0x7
  7548                           
  7549                           
  7550                           ; 1 bytes @ 0x7
  7551     00A7                     	ds	1
  7552     00A8                     __Umul8_16@multiplier:
  7553     00A8                     ___xxtofl@sign:	
  7554                           ; 1 bytes @ 0x8
  7555                           
  7556     00A8                     ??_atoi:	
  7557                           ; 1 bytes @ 0x8
  7558                           
  7559     00A8                     ??_abs:	
  7560                           ; 1 bytes @ 0x8
  7561                           
  7562     00A8                     ??___fldiv:	
  7563                           ; 1 bytes @ 0x8
  7564                           
  7565     00A8                     ??_read_prec_or_width:	
  7566                           ; 1 bytes @ 0x8
  7567                           
  7568                           
  7569                           ; 1 bytes @ 0x8
  7570     00A8                     	ds	1
  7571     00A9                     ?___flmul:
  7572     00A9                     ___xxtofl@exp:	
  7573                           ; 4 bytes @ 0x9
  7574                           
  7575     00A9                     counter_led@loops:	
  7576                           ; 1 bytes @ 0x9
  7577                           
  7578     00A9                     ___flmul@b:	
  7579                           ; 2 bytes @ 0x9
  7580                           
  7581     00A9                     ??_initLedstrip:	
  7582                           ; 4 bytes @ 0x9
  7583                           
  7584                           
  7585                           ; 1 bytes @ 0x9
  7586     00A9                     	ds	1
  7587     00AA                     atoi@neg:
  7588     00AA                     ___xxtofl@arg:	
  7589                           ; 1 bytes @ 0xA
  7590                           
  7591                           
  7592                           ; 4 bytes @ 0xA
  7593     00AA                     	ds	1
  7594     00AB                     read_prec_or_width@c:
  7595     00AB                     counter_led@counter:	
  7596                           ; 1 bytes @ 0xB
  7597                           
  7598     00AB                     atoi@n:	
  7599                           ; 2 bytes @ 0xB
  7600                           
  7601                           
  7602                           ; 2 bytes @ 0xB
  7603     00AB                     	ds	1
  7604     00AC                     ?_fputs:
  7605     00AC                     fputs@s:	
  7606                           ; 2 bytes @ 0xC
  7607                           
  7608     00AC                     read_prec_or_width@n:	
  7609                           ; 1 bytes @ 0xC
  7610                           
  7611                           
  7612                           ; 2 bytes @ 0xC
  7613     00AC                     	ds	1
  7614     00AD                     ?_setSetpoint:
  7615     00AD                     counter_led@led:	
  7616                           ; 1 bytes @ 0xD
  7617                           
  7618     00AD                     setSetpoint@new_setpoint:	
  7619                           ; 1 bytes @ 0xD
  7620                           
  7621     00AD                     fputs@fp:	
  7622                           ; 2 bytes @ 0xD
  7623                           
  7624     00AD                     ___fldiv@rem:	
  7625                           ; 2 bytes @ 0xD
  7626                           
  7627     00AD                     ___flmul@a:	
  7628                           ; 4 bytes @ 0xD
  7629                           
  7630                           
  7631                           ; 4 bytes @ 0xD
  7632     00AD                     	ds	1
  7633     00AE                     ?___fladd:
  7634     00AE                     ___fladd@b:	
  7635                           ; 4 bytes @ 0xE
  7636                           
  7637     00AE                     ??_TMR6_Tasks:	
  7638                           ; 4 bytes @ 0xE
  7639                           
  7640     00AE                     ??_updateLedstripAnimation:	
  7641                           ; 1 bytes @ 0xE
  7642                           
  7643                           
  7644                           ; 1 bytes @ 0xE
  7645     00AE                     	ds	1
  7646     00AF                     ??_check_push_up:
  7647     00AF                     ??_setSetpoint:	
  7648                           ; 1 bytes @ 0xF
  7649                           
  7650     00AF                     ??_fputs:	
  7651                           ; 1 bytes @ 0xF
  7652                           
  7653                           
  7654                           ; 1 bytes @ 0xF
  7655     00AF                     	ds	2
  7656     00B1                     ___fldiv@sign:
  7657     00B1                     fputs@c:	
  7658                           ; 1 bytes @ 0x11
  7659                           
  7660     00B1                     ??___flmul:	
  7661                           ; 1 bytes @ 0x11
  7662                           
  7663                           
  7664                           ; 1 bytes @ 0x11
  7665     00B1                     	ds	1
  7666     00B2                     ___fldiv@new_exp:
  7667     00B2                     fputs@i:	
  7668                           ; 2 bytes @ 0x12
  7669                           
  7670     00B2                     ___fladd@a:	
  7671                           ; 2 bytes @ 0x12
  7672                           
  7673                           
  7674                           ; 4 bytes @ 0x12
  7675     00B2                     	ds	2
  7676     00B4                     ?_pad:
  7677     00B4                     pad@fp:	
  7678                           ; 2 bytes @ 0x14
  7679                           
  7680     00B4                     ___fldiv@grs:	
  7681                           ; 2 bytes @ 0x14
  7682                           
  7683                           
  7684                           ; 4 bytes @ 0x14
  7685     00B4                     	ds	2
  7686     00B6                     ___flmul@sign:
  7687     00B6                     pad@buf:	
  7688                           ; 1 bytes @ 0x16
  7689                           
  7690     00B6                     ??___fladd:	
  7691                           ; 1 bytes @ 0x16
  7692                           
  7693                           
  7694                           ; 1 bytes @ 0x16
  7695     00B6                     	ds	1
  7696     00B7                     pad@p:
  7697     00B7                     ___flmul@grs:	
  7698                           ; 2 bytes @ 0x17
  7699                           
  7700                           
  7701                           ; 4 bytes @ 0x17
  7702     00B7                     	ds	1
  7703     00B8                     ___fldiv@bexp:
  7704                           
  7705                           ; 1 bytes @ 0x18
  7706     00B8                     	ds	1
  7707     00B9                     ___fldiv@aexp:
  7708     00B9                     ??_pad:	
  7709                           ; 1 bytes @ 0x19
  7710                           
  7711                           
  7712                           ; 1 bytes @ 0x19
  7713     00B9                     	ds	1
  7714     00BA                     pad@i:
  7715                           
  7716                           ; 2 bytes @ 0x1A
  7717     00BA                     	ds	1
  7718     00BB                     ___flmul@aexp:
  7719                           
  7720                           ; 1 bytes @ 0x1B
  7721     00BB                     	ds	1
  7722     00BC                     ?_dtoa:
  7723     00BC                     ?_utoa:	
  7724                           ; 2 bytes @ 0x1C
  7725                           
  7726     00BC                     ___flmul@bexp:	
  7727                           ; 2 bytes @ 0x1C
  7728                           
  7729     00BC                     dtoa@fp:	
  7730                           ; 1 bytes @ 0x1C
  7731                           
  7732     00BC                     utoa@fp:	
  7733                           ; 2 bytes @ 0x1C
  7734                           
  7735                           
  7736                           ; 2 bytes @ 0x1C
  7737     00BC                     	ds	1
  7738     00BD                     ___flmul@prod:
  7739                           
  7740                           ; 4 bytes @ 0x1D
  7741     00BD                     	ds	1
  7742     00BE                     ___fladd@signs:
  7743     00BE                     dtoa@d:	
  7744                           ; 1 bytes @ 0x1E
  7745                           
  7746     00BE                     utoa@d:	
  7747                           ; 2 bytes @ 0x1E
  7748                           
  7749                           
  7750                           ; 2 bytes @ 0x1E
  7751     00BE                     	ds	1
  7752     00BF                     ___fladd@aexp:
  7753                           
  7754                           ; 1 bytes @ 0x1F
  7755     00BF                     	ds	1
  7756     00C0                     ___fladd@bexp:
  7757     00C0                     ??_dtoa:	
  7758                           ; 1 bytes @ 0x20
  7759                           
  7760     00C0                     ??_utoa:	
  7761                           ; 1 bytes @ 0x20
  7762                           
  7763                           
  7764                           ; 1 bytes @ 0x20
  7765     00C0                     	ds	1
  7766     00C1                     ___fladd@grs:
  7767     00C1                     utoa@p:	
  7768                           ; 1 bytes @ 0x21
  7769                           
  7770     00C1                     ___flmul@temp:	
  7771                           ; 1 bytes @ 0x21
  7772                           
  7773     00C1                     _dtoa$2139:	
  7774                           ; 2 bytes @ 0x21
  7775                           
  7776                           
  7777                           ; 2 bytes @ 0x21
  7778     00C1                     	ds	1
  7779     00C2                     utoa@w:
  7780                           
  7781                           ; 2 bytes @ 0x22
  7782     00C2                     	ds	1
  7783     00C3                     ?_str2float:
  7784     00C3                     str2float@str:	
  7785                           ; 4 bytes @ 0x23
  7786                           
  7787     00C3                     dtoa@p:	
  7788                           ; 1 bytes @ 0x23
  7789                           
  7790                           
  7791                           ; 1 bytes @ 0x23
  7792     00C3                     	ds	1
  7793     00C4                     dtoa@w:
  7794     00C4                     utoa@i:	
  7795                           ; 2 bytes @ 0x24
  7796                           
  7797                           
  7798                           ; 2 bytes @ 0x24
  7799     00C4                     	ds	2
  7800     00C6                     dtoa@s:
  7801                           
  7802                           ; 1 bytes @ 0x26
  7803     00C6                     	ds	1
  7804     00C7                     str2float@decimal_separator:
  7805     00C7                     dtoa@i:	
  7806                           ; 1 bytes @ 0x27
  7807                           
  7808     00C7                     ??_str2float:	
  7809                           ; 2 bytes @ 0x27
  7810                           
  7811                           
  7812                           ; 1 bytes @ 0x27
  7813     00C7                     	ds	1
  7814     00C8                     str2float@multiplier:
  7815                           
  7816                           ; 1 bytes @ 0x28
  7817     00C8                     	ds	1
  7818     00C9                     ?_vfpfcnvrt:
  7819     00C9                     str2float@i:	
  7820                           ; 2 bytes @ 0x29
  7821                           
  7822     00C9                     vfpfcnvrt@fp:	
  7823                           ; 1 bytes @ 0x29
  7824                           
  7825                           
  7826                           ; 2 bytes @ 0x29
  7827     00C9                     	ds	1
  7828     00CA                     str2float@number:
  7829                           
  7830                           ; 4 bytes @ 0x2A
  7831     00CA                     	ds	1
  7832     00CB                     vfpfcnvrt@fmt:
  7833                           
  7834                           ; 1 bytes @ 0x2B
  7835     00CB                     	ds	1
  7836     00CC                     vfpfcnvrt@ap:
  7837                           
  7838                           ; 2 bytes @ 0x2C
  7839     00CC                     	ds	2
  7840     00CE                     str2float@digit:
  7841     00CE                     ??_vfpfcnvrt:	
  7842                           ; 1 bytes @ 0x2E
  7843                           
  7844                           
  7845                           ; 1 bytes @ 0x2E
  7846     00CE                     	ds	1
  7847     00CF                     ?_setKp:
  7848     00CF                     ?_setKi:	
  7849                           ; 1 bytes @ 0x2F
  7850                           
  7851     00CF                     setKp@new_kp:	
  7852                           ; 1 bytes @ 0x2F
  7853                           
  7854     00CF                     setKi@new_ki:	
  7855                           ; 4 bytes @ 0x2F
  7856                           
  7857                           
  7858                           ; 4 bytes @ 0x2F
  7859     00CF                     	ds	3
  7860     00D2                     vfpfcnvrt@done:
  7861                           
  7862                           ; 1 bytes @ 0x32
  7863     00D2                     	ds	1
  7864     00D3                     vfpfcnvrt@convarg:
  7865     00D3                     ??_setKp:	
  7866                           ; 4 bytes @ 0x33
  7867                           
  7868     00D3                     ??_setKi:	
  7869                           ; 1 bytes @ 0x33
  7870                           
  7871                           
  7872                           ; 1 bytes @ 0x33
  7873     00D3                     	ds	4
  7874     00D7                     vfpfcnvrt@cp:
  7875                           
  7876                           ; 2 bytes @ 0x37
  7877     00D7                     	ds	2
  7878     00D9                     ?_vfprintf:
  7879     00D9                     vfprintf@fp:	
  7880                           ; 2 bytes @ 0x39
  7881                           
  7882                           
  7883                           ; 2 bytes @ 0x39
  7884     00D9                     	ds	2
  7885     00DB                     vfprintf@fmt:
  7886                           
  7887                           ; 2 bytes @ 0x3B
  7888     00DB                     	ds	2
  7889     00DD                     vfprintf@ap:
  7890                           
  7891                           ; 1 bytes @ 0x3D
  7892     00DD                     	ds	1
  7893     00DE                     ??_vfprintf:
  7894                           
  7895                           ; 1 bytes @ 0x3E
  7896     00DE                     	ds	1
  7897     00DF                     vfprintf@cfmt:
  7898                           
  7899                           ; 2 bytes @ 0x3F
  7900     00DF                     	ds	2
  7901     00E1                     ?_printf:
  7902     00E1                     printf@fmt:	
  7903                           ; 2 bytes @ 0x41
  7904                           
  7905                           
  7906                           ; 2 bytes @ 0x41
  7907     00E1                     	ds	6
  7908     00E7                     printf@ap:
  7909     00E7                     ??_printf:	
  7910                           ; 1 bytes @ 0x47
  7911                           
  7912                           
  7913                           ; 1 bytes @ 0x47
  7914     00E7                     	ds	1
  7915     00E8                     ?_readLine:
  7916     00E8                     ??_printLogs:	
  7917                           ; 1 bytes @ 0x48
  7918                           
  7919                           
  7920                           ; 1 bytes @ 0x48
  7921     00E8                     	ds	2
  7922     00EA                     ??_readLine:
  7923                           
  7924                           ; 1 bytes @ 0x4A
  7925     00EA                     	ds	1
  7926     00EB                     uartHandler@str:
  7927     00EB                     ??_uartHandler:	
  7928                           ; 1 bytes @ 0x4B
  7929                           
  7930                           
  7931                           ; 1 bytes @ 0x4B
  7932     00EB                     	ds	1
  7933     00EC                     ??_main:
  7934                           
  7935                           ; 1 bytes @ 0x4C
  7936     00EC                     	ds	1
  7937                           
  7938                           	psect	cstackCOMMON
  7939     0070                     __pcstackCOMMON:
  7940     0070                     ?_ADC_DefaultInterruptHandler:
  7941     0070                     ?_SPI1_Initialize:	
  7942                           ; 1 bytes @ 0x0
  7943                           
  7944     0070                     ?_TMR4_ISR:	
  7945                           ; 1 bytes @ 0x0
  7946                           
  7947     0070                     ?_TMR2_ISR:	
  7948                           ; 1 bytes @ 0x0
  7949                           
  7950     0070                     ?_TMR2_Initialize:	
  7951                           ; 1 bytes @ 0x0
  7952                           
  7953     0070                     ?_TMR4_Initialize:	
  7954                           ; 1 bytes @ 0x0
  7955                           
  7956     0070                     ?_TMR6_Initialize:	
  7957                           ; 1 bytes @ 0x0
  7958                           
  7959     0070                     ?_EUSART_Initialize:	
  7960                           ; 1 bytes @ 0x0
  7961                           
  7962     0070                     ?_TMR2_DefaultPeriodMatchCallback:	
  7963                           ; 1 bytes @ 0x0
  7964                           
  7965     0070                     ?_TMR4_DefaultPeriodMatchCallback:	
  7966                           ; 1 bytes @ 0x0
  7967                           
  7968     0070                     ?_TMR6_DefaultPeriodMatchCallback:	
  7969                           ; 1 bytes @ 0x0
  7970                           
  7971     0070                     ?_EUSART_Read:	
  7972                           ; 1 bytes @ 0x0
  7973                           
  7974     0070                     ?_EUSART_IsRxReady:	
  7975                           ; 1 bytes @ 0x0
  7976                           
  7977     0070                     ?_EUSART_IsTxReady:	
  7978                           ; 1 bytes @ 0x0
  7979                           
  7980     0070                     ?_EUSART_ReceiveISR:	
  7981                           ; 1 bytes @ 0x0
  7982                           
  7983     0070                     ?_EUSART_TransmitISR:	
  7984                           ; 1 bytes @ 0x0
  7985                           
  7986     0070                     ?_EUSART_DefaultFramingErrorCallback:	
  7987                           ; 1 bytes @ 0x0
  7988                           
  7989     0070                     ?_EUSART_DefaultOverrunErrorCallback:	
  7990                           ; 1 bytes @ 0x0
  7991                           
  7992     0070                     ?_initAdcMultiplexer:	
  7993                           ; 1 bytes @ 0x0
  7994                           
  7995     0070                     ?_controller:	
  7996                           ; 1 bytes @ 0x0
  7997                           
  7998     0070                     ?_initLedstrip:	
  7999                           ; 1 bytes @ 0x0
  8000                           
  8001     0070                     ?_uartHandler:	
  8002                           ; 1 bytes @ 0x0
  8003                           
  8004     0070                     ?_check_push_up:	
  8005                           ; 1 bytes @ 0x0
  8006                           
  8007     0070                     ?_printLogs:	
  8008                           ; 1 bytes @ 0x0
  8009                           
  8010     0070                     ?_ADC_Initialize:	
  8011                           ; 1 bytes @ 0x0
  8012                           
  8013     0070                     ?_ADC_SelectChannel:	
  8014                           ; 1 bytes @ 0x0
  8015                           
  8016     0070                     ?_ADC_ISR:	
  8017                           ; 1 bytes @ 0x0
  8018                           
  8019     0070                     ?_pwm_fan_Initialize:	
  8020                           ; 1 bytes @ 0x0
  8021                           
  8022     0070                     ?_pwm_fan_LoadDutyValue:	
  8023                           ; 1 bytes @ 0x0
  8024                           
  8025     0070                     ?_PWM_buzzer_Initialize:	
  8026                           ; 1 bytes @ 0x0
  8027                           
  8028     0070                     ?_INTERRUPT_Initialize:	
  8029                           ; 1 bytes @ 0x0
  8030                           
  8031     0070                     ?_INTERRUPT_InterruptManager:	
  8032                           ; 1 bytes @ 0x0
  8033                           
  8034     0070                     ?_CLOCK_Initialize:	
  8035                           ; 1 bytes @ 0x0
  8036                           
  8037     0070                     ?_PIN_MANAGER_Initialize:	
  8038                           ; 1 bytes @ 0x0
  8039                           
  8040     0070                     ?_SYSTEM_Initialize:	
  8041                           ; 1 bytes @ 0x0
  8042                           
  8043     0070                     ?_TMR6_Tasks:	
  8044                           ; 1 bytes @ 0x0
  8045                           
  8046     0070                     ?_putch:	
  8047                           ; 1 bytes @ 0x0
  8048                           
  8049     0070                     ?_adcConversionDoneHandler:	
  8050                           ; 1 bytes @ 0x0
  8051                           
  8052     0070                     ?_sendLedstripStartFrame:	
  8053                           ; 1 bytes @ 0x0
  8054                           
  8055     0070                     ?_sendLedstripEndFrame:	
  8056                           ; 1 bytes @ 0x0
  8057                           
  8058     0070                     ?_counter_led:	
  8059                           ; 1 bytes @ 0x0
  8060                           
  8061     0070                     ?_updateLedstripAnimation:	
  8062                           ; 1 bytes @ 0x0
  8063                           
  8064     0070                     ?i1_ADC_SelectChannel:	
  8065                           ; 1 bytes @ 0x0
  8066                           
  8067     0070                     ?_ADC_GetConversionResult:	
  8068                           ; 1 bytes @ 0x0
  8069                           
  8070     0070                     ?_main:	
  8071                           ; 2 bytes @ 0x0
  8072                           
  8073     0070                     ?_getHoogtesensor:	
  8074                           ; 2 bytes @ 0x0
  8075                           
  8076     0070                     ?i1__Umul8_16:	
  8077                           ; 2 bytes @ 0x0
  8078                           
  8079     0070                     ?i1___xxtofl:	
  8080                           ; 2 bytes @ 0x0
  8081                           
  8082     0070                     EUSART_ReceiveISR@regValue:	
  8083                           ; 4 bytes @ 0x0
  8084                           
  8085     0070                     EUSART_TransmitISR@tempTxTail:	
  8086                           ; 1 bytes @ 0x0
  8087                           
  8088     0070                     i1__Umul8_16@multiplicand:	
  8089                           ; 1 bytes @ 0x0
  8090                           
  8091     0070                     pwm_fan_LoadDutyValue@dutyValue:	
  8092                           ; 1 bytes @ 0x0
  8093                           
  8094     0070                     i1___xxtofl@val:	
  8095                           ; 2 bytes @ 0x0
  8096                           
  8097     0070                     ??_ADC_DefaultInterruptHandler:	
  8098                           ; 4 bytes @ 0x0
  8099                           
  8100     0070                     ??_TMR2_ISR:	
  8101                           ; 1 bytes @ 0x0
  8102                           
  8103     0070                     ??_TMR2_DefaultPeriodMatchCallback:	
  8104                           ; 1 bytes @ 0x0
  8105                           
  8106     0070                     ??_TMR4_DefaultPeriodMatchCallback:	
  8107                           ; 1 bytes @ 0x0
  8108                           
  8109     0070                     ??_EUSART_ReceiveISR:	
  8110                           ; 1 bytes @ 0x0
  8111                           
  8112     0070                     ??_EUSART_TransmitISR:	
  8113                           ; 1 bytes @ 0x0
  8114                           
  8115     0070                     ??_EUSART_DefaultFramingErrorCallback:	
  8116                           ; 1 bytes @ 0x0
  8117                           
  8118     0070                     ??_EUSART_DefaultOverrunErrorCallback:	
  8119                           ; 1 bytes @ 0x0
  8120                           
  8121     0070                     ??i1_ADC_SelectChannel:	
  8122                           ; 1 bytes @ 0x0
  8123                           
  8124                           
  8125                           ; 1 bytes @ 0x0
  8126     0070                     	ds	1
  8127     0071                     EUSART_ReceiveISR@tempRxHead:
  8128     0071                     i1ADC_SelectChannel@channel:	
  8129                           ; 1 bytes @ 0x1
  8130                           
  8131                           
  8132                           ; 1 bytes @ 0x1
  8133     0071                     	ds	1
  8134     0072                     ??_ADC_GetConversionResult:
  8135     0072                     ??_pwm_fan_LoadDutyValue:	
  8136                           ; 1 bytes @ 0x2
  8137                           
  8138     0072                     ??_adcConversionDoneHandler:	
  8139                           ; 1 bytes @ 0x2
  8140                           
  8141     0072                     ??_getHoogtesensor:	
  8142                           ; 1 bytes @ 0x2
  8143                           
  8144     0072                     ??i1__Umul8_16:	
  8145                           ; 1 bytes @ 0x2
  8146                           
  8147                           
  8148                           ; 1 bytes @ 0x2
  8149     0072                     	ds	2
  8150     0074                     i1__Umul8_16@product:
  8151     0074                     ??_ADC_ISR:	
  8152                           ; 2 bytes @ 0x4
  8153                           
  8154     0074                     ??i1___xxtofl:	
  8155                           ; 1 bytes @ 0x4
  8156                           
  8157                           
  8158                           ; 1 bytes @ 0x4
  8159     0074                     	ds	2
  8160     0076                     i1__Umul8_16@word_mpld:
  8161                           
  8162                           ; 2 bytes @ 0x6
  8163     0076                     	ds	2
  8164     0078                     i1__Umul8_16@multiplier:
  8165     0078                     i1___xxtofl@sign:	
  8166                           ; 1 bytes @ 0x8
  8167                           
  8168                           
  8169                           ; 1 bytes @ 0x8
  8170     0078                     	ds	1
  8171     0079                     i1___xxtofl@exp:
  8172                           
  8173                           ; 1 bytes @ 0x9
  8174     0079                     	ds	1
  8175     007A                     i1___xxtofl@arg:
  8176                           
  8177                           ; 4 bytes @ 0xA
  8178     007A                     	ds	4
  8179     007E                     ??_TMR4_ISR:
  8180     007E                     ??_INTERRUPT_InterruptManager:	
  8181                           ; 1 bytes @ 0xE
  8182                           
  8183                           
  8184                           	psect	cstackBANK0
  8185     0020                     __pcstackBANK0:	
  8186                           ; 1 bytes @ 0xE
  8187                           
  8188     0020                     ?i1___flmul:
  8189     0020                     i1___flmul@b:	
  8190                           ; 4 bytes @ 0x0
  8191                           
  8192                           
  8193                           ; 4 bytes @ 0x0
  8194     0020                     	ds	4
  8195     0024                     i1___flmul@a:
  8196                           
  8197                           ; 4 bytes @ 0x4
  8198     0024                     	ds	4
  8199     0028                     ??i1___flmul:
  8200                           
  8201                           ; 1 bytes @ 0x8
  8202     0028                     	ds	5
  8203     002D                     i1___flmul@sign:
  8204                           
  8205                           ; 1 bytes @ 0xD
  8206     002D                     	ds	1
  8207     002E                     i1___flmul@grs:
  8208                           
  8209                           ; 4 bytes @ 0xE
  8210     002E                     	ds	4
  8211     0032                     i1___flmul@aexp:
  8212                           
  8213                           ; 1 bytes @ 0x12
  8214     0032                     	ds	1
  8215     0033                     i1___flmul@bexp:
  8216                           
  8217                           ; 1 bytes @ 0x13
  8218     0033                     	ds	1
  8219     0034                     i1___flmul@prod:
  8220                           
  8221                           ; 4 bytes @ 0x14
  8222     0034                     	ds	4
  8223     0038                     i1___flmul@temp:
  8224                           
  8225                           ; 2 bytes @ 0x18
  8226     0038                     	ds	2
  8227     003A                     ?___fltol:
  8228     003A                     ?i1___fladd:	
  8229                           ; 4 bytes @ 0x1A
  8230                           
  8231     003A                     ___fltol@f1:	
  8232                           ; 4 bytes @ 0x1A
  8233                           
  8234     003A                     i1___fladd@b:	
  8235                           ; 4 bytes @ 0x1A
  8236                           
  8237                           
  8238                           ; 4 bytes @ 0x1A
  8239     003A                     	ds	4
  8240     003E                     i1___fladd@a:
  8241     003E                     ??___fltol:	
  8242                           ; 4 bytes @ 0x1E
  8243                           
  8244                           
  8245                           ; 1 bytes @ 0x1E
  8246     003E                     	ds	4
  8247     0042                     ___fltol@sign1:
  8248     0042                     ??i1___fladd:	
  8249                           ; 1 bytes @ 0x22
  8250                           
  8251                           
  8252                           ; 1 bytes @ 0x22
  8253     0042                     	ds	1
  8254     0043                     ___fltol@exp1:
  8255                           
  8256                           ; 1 bytes @ 0x23
  8257     0043                     	ds	7
  8258     004A                     i1___fladd@signs:
  8259                           
  8260                           ; 1 bytes @ 0x2A
  8261     004A                     	ds	1
  8262     004B                     i1___fladd@aexp:
  8263                           
  8264                           ; 1 bytes @ 0x2B
  8265     004B                     	ds	1
  8266     004C                     i1___fladd@bexp:
  8267                           
  8268                           ; 1 bytes @ 0x2C
  8269     004C                     	ds	1
  8270     004D                     i1___fladd@grs:
  8271                           
  8272                           ; 1 bytes @ 0x2D
  8273     004D                     	ds	1
  8274     004E                     ??_controller:
  8275                           
  8276                           ; 1 bytes @ 0x2E
  8277     004E                     	ds	1
  8278     004F                     controller@P:
  8279                           
  8280                           ; 2 bytes @ 0x2F
  8281     004F                     	ds	2
  8282     0051                     controller@I:
  8283                           
  8284                           ; 2 bytes @ 0x31
  8285     0051                     	ds	2
  8286     0053                     controller@error:
  8287                           
  8288                           ; 2 bytes @ 0x33
  8289     0053                     	ds	2
  8290                           
  8291                           	psect	maintext
  8292     10FD                     __pmaintext:	
  8293 ;;
  8294 ;;Main: autosize = 0, tempsize = 1, incstack = 0, save=0
  8295 ;;
  8296 ;; *************** function _main *****************
  8297 ;; Defined at:
  8298 ;;		line 52 in file "main.c"
  8299 ;; Parameters:    Size  Location     Type
  8300 ;;		None
  8301 ;; Auto vars:     Size  Location     Type
  8302 ;;		None
  8303 ;; Return value:  Size  Location     Type
  8304 ;;                  2  808[None  ] int 
  8305 ;; Registers used:
  8306 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  8307 ;; Tracked objects:
  8308 ;;		On entry : B1F/0
  8309 ;;		On exit  : 0/0
  8310 ;;		Unchanged: 0/0
  8311 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8312 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8313 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8314 ;;      Temps:          0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0
  8315 ;;      Totals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0
  8316 ;;Total ram usage:        1 bytes
  8317 ;; Hardware stack levels required when called: 16
  8318 ;; This function calls:
  8319 ;;		_SYSTEM_Initialize
  8320 ;;		_TMR4_PeriodMatchCallbackRegister
  8321 ;;		_TMR6_Tasks
  8322 ;;		_check_push_up
  8323 ;;		_initAdcMultiplexer
  8324 ;;		_initLedstrip
  8325 ;;		_printLogs
  8326 ;;		_uartHandler
  8327 ;; This function is called by:
  8328 ;;		Startup code after reset
  8329 ;; This function uses a non-reentrant model
  8330 ;;
  8331                           
  8332     10FD                     _main:	
  8333                           ;psect for function _main
  8334                           
  8335     10FD                     l6192:	
  8336                           ;incstack = 0
  8337                           ; Regs used in _main: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  8338                           
  8339                           
  8340                           ;main.c: 54:     SYSTEM_Initialize();
  8341     10FD  3190  201E  3190   	fcall	_SYSTEM_Initialize
  8342     1100                     l6194:
  8343                           
  8344                           ;main.c: 60:     (INTCONbits.GIE = 1);
  8345     1100  178B               	bsf	11,7	;volatile
  8346     1101                     l6196:
  8347                           
  8348                           ;main.c: 66:     (INTCONbits.PEIE = 1);
  8349     1101  170B               	bsf	11,6	;volatile
  8350                           
  8351                           ;main.c: 71:     initAdcMultiplexer();
  8352     1102  319E  261E  3190   	fcall	_initAdcMultiplexer
  8353                           
  8354                           ;main.c: 72:     TMR4_PeriodMatchCallbackRegister(controller);
  8355     1105  30D4               	movlw	low _controller
  8356     1106  0021               	movlb	1	; select bank1
  8357     1107  00A0               	movwf	TMR4_PeriodMatchCallbackRegister@CallbackHandler^(0+128)
  8358     1108  3009               	movlw	high _controller
  8359     1109  00A1               	movwf	(TMR4_PeriodMatchCallbackRegister@CallbackHandler^(0+128)+1)
  8360     110A  319D  259F  3190   	fcall	_TMR4_PeriodMatchCallbackRegister
  8361     110D                     l6198:
  8362                           
  8363                           ;main.c: 73:     initLedstrip();
  8364     110D  319E  262B  3190   	fcall	_initLedstrip
  8365     1110                     l6200:
  8366                           
  8367                           ;main.c: 76:     {;main.c: 77:         uartHandler();
  8368     1110  3196  26C2  3190   	fcall	_uartHandler
  8369     1113                     l6202:
  8370                           
  8371                           ;main.c: 79:         check_push_up();
  8372     1113  3193  23F9  3190   	fcall	_check_push_up
  8373     1116                     l6204:
  8374                           
  8375                           ;main.c: 81:         _delay((unsigned long)((10)*(32000000U/4000.0)));
  8376     1116  3068               	movlw	104
  8377     1117  0021               	movlb	1	; select bank1
  8378     1118  00EC               	movwf	??_main^(0+128)
  8379     1119  30E4               	movlw	228
  8380     111A                     u7527:
  8381     111A  0B89               	decfsz	9,f
  8382     111B  291A               	goto	u7527
  8383     111C  0BEC               	decfsz	??_main^(0+128),f
  8384     111D  291A               	goto	u7527
  8385     111E  0000               	nop
  8386     111F                     l6206:
  8387                           
  8388                           ;main.c: 84:         printLogs();
  8389     111F  3187  27CE  3190   	fcall	_printLogs
  8390     1122                     l6208:
  8391                           
  8392                           ;main.c: 86:         TMR6_Tasks();
  8393     1122  319F  270A  3190   	fcall	_TMR6_Tasks
  8394     1125  2910               	goto	l6200
  8395     1126  3180  2858         	ljmp	start
  8396     1128                     __end_of_main:
  8397                           
  8398                           	psect	text1
  8399     16C2                     __ptext1:	
  8400 ;; *************** function _uartHandler *****************
  8401 ;; Defined at:
  8402 ;;		line 97 in file "UART.c"
  8403 ;; Parameters:    Size  Location     Type
  8404 ;;		None
  8405 ;; Auto vars:     Size  Location     Type
  8406 ;;  str             1   75[BANK1 ] PTR unsigned char 
  8407 ;;		 -> line(20), 
  8408 ;; Return value:  Size  Location     Type
  8409 ;;                  1    wreg      void 
  8410 ;; Registers used:
  8411 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  8412 ;; Tracked objects:
  8413 ;;		On entry : 0/0
  8414 ;;		On exit  : 0/0
  8415 ;;		Unchanged: 0/0
  8416 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8417 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8418 ;;      Locals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0
  8419 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8420 ;;      Totals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0
  8421 ;;Total ram usage:        1 bytes
  8422 ;; Hardware stack levels used: 1
  8423 ;; Hardware stack levels required when called: 15
  8424 ;; This function calls:
  8425 ;;		_atoi
  8426 ;;		_printf
  8427 ;;		_readLine
  8428 ;;		_setKi
  8429 ;;		_setKp
  8430 ;;		_setSetpoint
  8431 ;;		_str2float
  8432 ;; This function is called by:
  8433 ;;		_main
  8434 ;; This function uses a non-reentrant model
  8435 ;;
  8436                           
  8437     16C2                     _uartHandler:	
  8438                           ;psect for function _uartHandler
  8439                           
  8440     16C2                     l6082:	
  8441                           ;incstack = 0
  8442                           ; Regs used in _uartHandler: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  8443                           
  8444                           
  8445                           ;UART.c: 98:     char *str = readLine();
  8446     16C2  3193  23A0  3196   	fcall	_readLine
  8447     16C5  0021               	movlb	1	; select bank1
  8448     16C6  00EB               	movwf	uartHandler@str^(0+128)
  8449                           
  8450                           ;UART.c: 99:     switch (*str) {
  8451     16C7  2F3A               	goto	l6102
  8452     16C8                     l6084:
  8453                           
  8454                           ;UART.c: 105:             setSetpoint((uint16_t) atoi(str + 1));
  8455     16C8  086B               	movf	uartHandler@str^(0+128),w
  8456     16C9  3E01               	addlw	1
  8457     16CA  00A6               	movwf	atoi@s^(0+128)
  8458     16CB  3188  200B  3196   	fcall	_atoi
  8459     16CE  0021               	movlb	1	; select bank1
  8460     16CF  0827               	movf	(?_atoi+1)^(0+128),w
  8461     16D0  00AE               	movwf	(setSetpoint@new_setpoint+1)^(0+128)
  8462     16D1  0826               	movf	?_atoi^(0+128),w
  8463     16D2  00AD               	movwf	setSetpoint@new_setpoint^(0+128)
  8464     16D3  319D  256A  3196   	fcall	_setSetpoint
  8465     16D6                     l6086:
  8466                           
  8467                           ;UART.c: 106:             printf("changed setpoint to %u\r\n", (uint16_t) atoi(str + 1))
      +                          ;
  8468     16D6  304C               	movlw	low (STR_6| (0+32768))
  8469     16D7  0021               	movlb	1	; select bank1
  8470     16D8  00E1               	movwf	printf@fmt^(0+128)
  8471     16D9  3098               	movlw	high (STR_6| (0+32768))
  8472     16DA  00E2               	movwf	(printf@fmt^(0+128)+1)
  8473     16DB  086B               	movf	uartHandler@str^(0+128),w
  8474     16DC  3E01               	addlw	1
  8475     16DD  00A6               	movwf	atoi@s^(0+128)
  8476     16DE  3188  200B  3196   	fcall	_atoi
  8477     16E1  0021               	movlb	1	; select bank1
  8478     16E2  0827               	movf	(?_atoi+1)^(0+128),w
  8479     16E3  00E4               	movwf	((?_printf+1)^(0+128)+2)
  8480     16E4  0826               	movf	?_atoi^(0+128),w
  8481     16E5  00E3               	movwf	(?_printf^(0+128)+2)
  8482     16E6  319E  2693  3196   	fcall	_printf
  8483                           
  8484                           ;UART.c: 107:             break;
  8485     16E9  2F5B               	goto	l924
  8486     16EA                     l6088:
  8487                           
  8488                           ;UART.c: 111:             setKp(str2float(str + 1));
  8489     16EA  086B               	movf	uartHandler@str^(0+128),w
  8490     16EB  3E01               	addlw	1
  8491     16EC  00C3               	movwf	str2float@str^(0+128)
  8492     16ED  3189  2129  3196   	fcall	_str2float
  8493     16F0  0021               	movlb	1	; select bank1
  8494     16F1  0846               	movf	(?_str2float+3)^(0+128),w
  8495     16F2  00D2               	movwf	(setKp@new_kp+3)^(0+128)
  8496     16F3  0845               	movf	(?_str2float+2)^(0+128),w
  8497     16F4  00D1               	movwf	(setKp@new_kp+2)^(0+128)
  8498     16F5  0844               	movf	(?_str2float+1)^(0+128),w
  8499     16F6  00D0               	movwf	(setKp@new_kp+1)^(0+128)
  8500     16F7  0843               	movf	?_str2float^(0+128),w
  8501     16F8  00CF               	movwf	setKp@new_kp^(0+128)
  8502     16F9  319E  26E7  3196   	fcall	_setKp
  8503     16FC                     l6090:
  8504                           
  8505                           ;UART.c: 112:             printf("changed kp\r\n");
  8506     16FC  30AA               	movlw	low (STR_7| (0+32768))
  8507     16FD  0021               	movlb	1	; select bank1
  8508     16FE  00E1               	movwf	printf@fmt^(0+128)
  8509     16FF  3098               	movlw	high (STR_7| (0+32768))
  8510     1700  00E2               	movwf	(printf@fmt^(0+128)+1)
  8511     1701  319E  2693  3196   	fcall	_printf
  8512                           
  8513                           ;UART.c: 113:             break;
  8514     1704  2F5B               	goto	l924
  8515     1705                     l6092:
  8516                           
  8517                           ;UART.c: 116:             setKi(str2float(str + 1));
  8518     1705  086B               	movf	uartHandler@str^(0+128),w
  8519     1706  3E01               	addlw	1
  8520     1707  00C3               	movwf	str2float@str^(0+128)
  8521     1708  3189  2129  3196   	fcall	_str2float
  8522     170B  0021               	movlb	1	; select bank1
  8523     170C  0846               	movf	(?_str2float+3)^(0+128),w
  8524     170D  00D2               	movwf	(setKi@new_ki+3)^(0+128)
  8525     170E  0845               	movf	(?_str2float+2)^(0+128),w
  8526     170F  00D1               	movwf	(setKi@new_ki+2)^(0+128)
  8527     1710  0844               	movf	(?_str2float+1)^(0+128),w
  8528     1711  00D0               	movwf	(setKi@new_ki+1)^(0+128)
  8529     1712  0843               	movf	?_str2float^(0+128),w
  8530     1713  00CF               	movwf	setKi@new_ki^(0+128)
  8531     1714  319E  26D6  3196   	fcall	_setKi
  8532     1717                     l6094:
  8533                           
  8534                           ;UART.c: 117:             printf("changed ki\r\n");
  8535     1717  309D               	movlw	low (STR_8| (0+32768))
  8536     1718  0021               	movlb	1	; select bank1
  8537     1719  00E1               	movwf	printf@fmt^(0+128)
  8538     171A  3098               	movlw	high (STR_8| (0+32768))
  8539     171B  00E2               	movwf	(printf@fmt^(0+128)+1)
  8540     171C  319E  2693  3196   	fcall	_printf
  8541                           
  8542                           ;UART.c: 118:             break;
  8543     171F  2F5B               	goto	l924
  8544     1720                     l6096:
  8545                           
  8546                           ;UART.c: 121:             mustPrintLogs = !mustPrintLogs;
  8547     1720  0020               	movlb	0	; select bank0
  8548     1721  086D               	movf	_mustPrintLogs,w
  8549     1722  1903               	btfsc	3,2
  8550     1723  2F25               	goto	u7221
  8551     1724  2F27               	goto	u7220
  8552     1725                     u7221:
  8553     1725  3001               	movlw	1
  8554     1726  2F28               	goto	u7230
  8555     1727                     u7220:
  8556     1727  3000               	movlw	0
  8557     1728                     u7230:
  8558     1728  00ED               	movwf	_mustPrintLogs
  8559     1729                     l6098:
  8560                           
  8561                           ;UART.c: 122:             printf("logs toggled\r\n");
  8562     1729  308E               	movlw	low (STR_9| (0+32768))
  8563     172A  0021               	movlb	1	; select bank1
  8564     172B  00E1               	movwf	printf@fmt^(0+128)
  8565     172C  3098               	movlw	high (STR_9| (0+32768))
  8566     172D  00E2               	movwf	(printf@fmt^(0+128)+1)
  8567     172E  319E  2693  3196   	fcall	_printf
  8568                           
  8569                           ;UART.c: 123:             break;
  8570     1731  2F5B               	goto	l924
  8571     1732                     l6100:
  8572                           
  8573                           ;UART.c: 127:             printf("Unkown command\r\n");
  8574     1732  307D               	movlw	low (STR_10| (0+32768))
  8575     1733  00E1               	movwf	printf@fmt^(0+128)
  8576     1734  3098               	movlw	high (STR_10| (0+32768))
  8577     1735  00E2               	movwf	(printf@fmt^(0+128)+1)
  8578     1736  319E  2693  3196   	fcall	_printf
  8579                           
  8580                           ;UART.c: 128:     };
  8581     1739  2F5B               	goto	l924
  8582     173A                     l6102:
  8583     173A  086B               	movf	uartHandler@str^(0+128),w
  8584     173B  0086               	movwf	6
  8585     173C  3001               	movlw	1	; select bank2/3
  8586     173D  0087               	movwf	7
  8587     173E  0801               	movf	1,w
  8588                           
  8589                           ; Switch size 1, requested type "simple"
  8590                           ; Number of cases is 9, Range of values is 0 to 115
  8591                           ; switch strategies available:
  8592                           ; Name         Instructions Cycles
  8593                           ; simple_byte           28    15 (average)
  8594                           ; direct_byte          238     6 (fixed)
  8595                           ; jumptable            260     6 (fixed)
  8596                           ;	Chosen strategy is simple_byte
  8597     173F  3A00               	xorlw	0	; case 0
  8598     1740  1903               	skipnz
  8599     1741  2F5B               	goto	l924
  8600     1742  3A49               	xorlw	73	; case 73
  8601     1743  1903               	skipnz
  8602     1744  2F05               	goto	l6092
  8603     1745  3A05               	xorlw	5	; case 76
  8604     1746  1903               	skipnz
  8605     1747  2F20               	goto	l6096
  8606     1748  3A1C               	xorlw	28	; case 80
  8607     1749  1903               	skipnz
  8608     174A  2EEA               	goto	l6088
  8609     174B  3A03               	xorlw	3	; case 83
  8610     174C  1903               	skipnz
  8611     174D  2EC8               	goto	l6084
  8612     174E  3A3A               	xorlw	58	; case 105
  8613     174F  1903               	skipnz
  8614     1750  2F05               	goto	l6092
  8615     1751  3A05               	xorlw	5	; case 108
  8616     1752  1903               	skipnz
  8617     1753  2F20               	goto	l6096
  8618     1754  3A1C               	xorlw	28	; case 112
  8619     1755  1903               	skipnz
  8620     1756  2EEA               	goto	l6088
  8621     1757  3A03               	xorlw	3	; case 115
  8622     1758  1903               	skipnz
  8623     1759  2EC8               	goto	l6084
  8624     175A  2F32               	goto	l6100
  8625     175B                     l924:
  8626     175B  0008               	return
  8627     175C                     __end_of_uartHandler:
  8628                           
  8629                           	psect	text2
  8630     0929                     __ptext2:	
  8631 ;; *************** function _str2float *****************
  8632 ;; Defined at:
  8633 ;;		line 25 in file "UART.c"
  8634 ;; Parameters:    Size  Location     Type
  8635 ;;  str             1   35[BANK1 ] PTR unsigned char 
  8636 ;;		 -> line(20), 
  8637 ;; Auto vars:     Size  Location     Type
  8638 ;;  i               1   41[BANK1 ] unsigned char 
  8639 ;;  digit           1   46[BANK1 ] unsigned char 
  8640 ;;  number          4   42[BANK1 ] float 
  8641 ;;  multiplier      1   40[BANK1 ] unsigned char 
  8642 ;;  decimal_sepa    1   39[BANK1 ] _Bool 
  8643 ;; Return value:  Size  Location     Type
  8644 ;;                  4   35[BANK1 ] float 
  8645 ;; Registers used:
  8646 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  8647 ;; Tracked objects:
  8648 ;;		On entry : 0/0
  8649 ;;		On exit  : 0/0
  8650 ;;		Unchanged: 0/0
  8651 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8652 ;;      Params:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0
  8653 ;;      Locals:         0       0       8       0       0       0       0       0       0       0       0       0       
      +0       0
  8654 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8655 ;;      Totals:         0       0      12       0       0       0       0       0       0       0       0       0       
      +0       0
  8656 ;;Total ram usage:       12 bytes
  8657 ;; Hardware stack levels used: 1
  8658 ;; Hardware stack levels required when called: 7
  8659 ;; This function calls:
  8660 ;;		___fladd
  8661 ;;		___fldiv
  8662 ;;		___flmul
  8663 ;;		___xxtofl
  8664 ;; This function is called by:
  8665 ;;		_uartHandler
  8666 ;; This function uses a non-reentrant model
  8667 ;;
  8668                           
  8669     0929                     _str2float:	
  8670                           ;psect for function _str2float
  8671                           
  8672     0929                     l5840:	
  8673                           ;incstack = 0
  8674                           ; Regs used in _str2float: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  8675                           
  8676                           
  8677                           ;UART.c: 26:     float number = 0;
  8678     0929  3000               	movlw	0
  8679     092A  0021               	movlb	1	; select bank1
  8680     092B  00CD               	movwf	(str2float@number+3)^(0+128)
  8681     092C  3000               	movlw	0
  8682     092D  00CC               	movwf	(str2float@number+2)^(0+128)
  8683     092E  3000               	movlw	0
  8684     092F  00CB               	movwf	(str2float@number+1)^(0+128)
  8685     0930  3000               	movlw	0
  8686     0931  00CA               	movwf	str2float@number^(0+128)
  8687     0932                     l5842:
  8688                           
  8689                           ;UART.c: 27:     _Bool decimal_separator = 0;
  8690     0932  01C7               	clrf	str2float@decimal_separator^(0+128)
  8691     0933                     l5844:
  8692                           
  8693                           ;UART.c: 30:         char digit = *str++;
  8694     0933  0843               	movf	str2float@str^(0+128),w
  8695     0934  0086               	movwf	6
  8696     0935  3001               	movlw	1	; select bank2/3
  8697     0936  0087               	movwf	7
  8698     0937  0801               	movf	1,w
  8699     0938  00CE               	movwf	str2float@digit^(0+128)
  8700     0939                     l5846:
  8701     0939  3001               	movlw	1
  8702     093A  07C3               	addwf	str2float@str^(0+128),f
  8703     093B                     l5848:
  8704                           
  8705                           ;UART.c: 31:         if ('0' <= digit && digit <= '9') {
  8706     093B  3030               	movlw	48
  8707     093C  024E               	subwf	str2float@digit^(0+128),w
  8708     093D  1C03               	skipc
  8709     093E  2940               	goto	u6911
  8710     093F  2941               	goto	u6910
  8711     0940                     u6911:
  8712     0940  2990               	goto	l5856
  8713     0941                     u6910:
  8714     0941                     l5850:
  8715     0941  303A               	movlw	58
  8716     0942  024E               	subwf	str2float@digit^(0+128),w
  8717     0943  1803               	skipnc
  8718     0944  2946               	goto	u6921
  8719     0945  2947               	goto	u6920
  8720     0946                     u6921:
  8721     0946  2990               	goto	l5856
  8722     0947                     u6920:
  8723     0947                     l5852:
  8724                           
  8725                           ;UART.c: 32:             number *= 10;
  8726     0947  3041               	movlw	65
  8727     0948  00AC               	movwf	(___flmul@b+3)^(0+128)
  8728     0949  3020               	movlw	32
  8729     094A  00AB               	movwf	(___flmul@b+2)^(0+128)
  8730     094B  3000               	movlw	0
  8731     094C  00AA               	movwf	(___flmul@b+1)^(0+128)
  8732     094D  3000               	movlw	0
  8733     094E  00A9               	movwf	___flmul@b^(0+128)
  8734     094F  084D               	movf	(str2float@number+3)^(0+128),w
  8735     0950  00B0               	movwf	(___flmul@a+3)^(0+128)
  8736     0951  084C               	movf	(str2float@number+2)^(0+128),w
  8737     0952  00AF               	movwf	(___flmul@a+2)^(0+128)
  8738     0953  084B               	movf	(str2float@number+1)^(0+128),w
  8739     0954  00AE               	movwf	(___flmul@a+1)^(0+128)
  8740     0955  084A               	movf	str2float@number^(0+128),w
  8741     0956  00AD               	movwf	___flmul@a^(0+128)
  8742     0957  3180  2093  3189   	fcall	___flmul
  8743     095A  0021               	movlb	1	; select bank1
  8744     095B  082C               	movf	(?___flmul+3)^(0+128),w
  8745     095C  00CD               	movwf	(str2float@number+3)^(0+128)
  8746     095D  082B               	movf	(?___flmul+2)^(0+128),w
  8747     095E  00CC               	movwf	(str2float@number+2)^(0+128)
  8748     095F  082A               	movf	(?___flmul+1)^(0+128),w
  8749     0960  00CB               	movwf	(str2float@number+1)^(0+128)
  8750     0961  0829               	movf	?___flmul^(0+128),w
  8751     0962  00CA               	movwf	str2float@number^(0+128)
  8752                           
  8753                           ;UART.c: 33:             number += digit - '0';
  8754     0963  084E               	movf	str2float@digit^(0+128),w
  8755     0964  3ED0               	addlw	208
  8756     0965  00A0               	movwf	___xxtofl@val^(0+128)
  8757     0966  30FF               	movlw	255
  8758     0967  1803               	skipnc
  8759     0968  3000               	movlw	0
  8760     0969  00A1               	movwf	(___xxtofl@val^(0+128)+1)
  8761     096A  01A2               	clrf	(___xxtofl@val+2)^(0+128)
  8762     096B  01A3               	clrf	(___xxtofl@val+3)^(0+128)
  8763     096C  3000               	movlw	0
  8764     096D  3188  2084  3189   	fcall	___xxtofl
  8765     0970  0021               	movlb	1	; select bank1
  8766     0971  0823               	movf	(?___xxtofl+3)^(0+128),w
  8767     0972  00B1               	movwf	(___fladd@b+3)^(0+128)
  8768     0973  0822               	movf	(?___xxtofl+2)^(0+128),w
  8769     0974  00B0               	movwf	(___fladd@b+2)^(0+128)
  8770     0975  0821               	movf	(?___xxtofl+1)^(0+128),w
  8771     0976  00AF               	movwf	(___fladd@b+1)^(0+128)
  8772     0977  0820               	movf	?___xxtofl^(0+128),w
  8773     0978  00AE               	movwf	___fladd@b^(0+128)
  8774     0979  084D               	movf	(str2float@number+3)^(0+128),w
  8775     097A  00B5               	movwf	(___fladd@a+3)^(0+128)
  8776     097B  084C               	movf	(str2float@number+2)^(0+128),w
  8777     097C  00B4               	movwf	(___fladd@a+2)^(0+128)
  8778     097D  084B               	movf	(str2float@number+1)^(0+128),w
  8779     097E  00B3               	movwf	(___fladd@a+1)^(0+128)
  8780     097F  084A               	movf	str2float@number^(0+128),w
  8781     0980  00B2               	movwf	___fladd@a^(0+128)
  8782     0981  3185  2509  3189   	fcall	___fladd
  8783     0984  0021               	movlb	1	; select bank1
  8784     0985  0831               	movf	(?___fladd+3)^(0+128),w
  8785     0986  00CD               	movwf	(str2float@number+3)^(0+128)
  8786     0987  0830               	movf	(?___fladd+2)^(0+128),w
  8787     0988  00CC               	movwf	(str2float@number+2)^(0+128)
  8788     0989  082F               	movf	(?___fladd+1)^(0+128),w
  8789     098A  00CB               	movwf	(str2float@number+1)^(0+128)
  8790     098B  082E               	movf	?___fladd^(0+128),w
  8791     098C  00CA               	movwf	str2float@number^(0+128)
  8792     098D                     l5854:
  8793                           
  8794                           ;UART.c: 34:             multiplier++;
  8795     098D  3001               	movlw	1
  8796     098E  07C8               	addwf	str2float@multiplier^(0+128),f
  8797                           
  8798                           ;UART.c: 35:         } else if (digit == ',' || digit == '.') {
  8799     098F  2933               	goto	l5844
  8800     0990                     l5856:
  8801     0990  302C               	movlw	44
  8802     0991  064E               	xorwf	str2float@digit^(0+128),w
  8803     0992  1903               	btfsc	3,2
  8804     0993  2995               	goto	u6931
  8805     0994  2996               	goto	u6930
  8806     0995                     u6931:
  8807     0995  299C               	goto	l879
  8808     0996                     u6930:
  8809     0996                     l5858:
  8810     0996  302E               	movlw	46
  8811     0997  064E               	xorwf	str2float@digit^(0+128),w
  8812     0998  1D03               	btfss	3,2
  8813     0999  299B               	goto	u6941
  8814     099A  299C               	goto	u6940
  8815     099B                     u6941:
  8816     099B  29A0               	goto	l5862
  8817     099C                     u6940:
  8818     099C                     l879:
  8819                           
  8820                           ;UART.c: 36:             decimal_separator = 1;
  8821     099C  3001               	movlw	1
  8822     099D  00C7               	movwf	str2float@decimal_separator^(0+128)
  8823     099E                     l5860:
  8824                           
  8825                           ;UART.c: 37:             multiplier = 0;
  8826     099E  01C8               	clrf	str2float@multiplier^(0+128)
  8827                           
  8828                           ;UART.c: 38:         } else {
  8829     099F  2933               	goto	l5844
  8830     09A0                     l5862:
  8831                           
  8832                           ;UART.c: 43:     for (uint8_t i = 0; decimal_separator && i < multiplier; i++) {
  8833     09A0  01C9               	clrf	str2float@i^(0+128)
  8834     09A1  29C0               	goto	l5868
  8835     09A2                     l5864:
  8836                           
  8837                           ;UART.c: 44:         number /= 10;
  8838     09A2  3041               	movlw	65
  8839     09A3  00A3               	movwf	(___fldiv@a+3)^(0+128)
  8840     09A4  3020               	movlw	32
  8841     09A5  00A2               	movwf	(___fldiv@a+2)^(0+128)
  8842     09A6  3000               	movlw	0
  8843     09A7  00A1               	movwf	(___fldiv@a+1)^(0+128)
  8844     09A8  3000               	movlw	0
  8845     09A9  00A0               	movwf	___fldiv@a^(0+128)
  8846     09AA  084D               	movf	(str2float@number+3)^(0+128),w
  8847     09AB  00A7               	movwf	(___fldiv@b+3)^(0+128)
  8848     09AC  084C               	movf	(str2float@number+2)^(0+128),w
  8849     09AD  00A6               	movwf	(___fldiv@b+2)^(0+128)
  8850     09AE  084B               	movf	(str2float@number+1)^(0+128),w
  8851     09AF  00A5               	movwf	(___fldiv@b+1)^(0+128)
  8852     09B0  084A               	movf	str2float@number^(0+128),w
  8853     09B1  00A4               	movwf	___fldiv@b^(0+128)
  8854     09B2  318C  2450  3189   	fcall	___fldiv
  8855     09B5  0021               	movlb	1	; select bank1
  8856     09B6  0823               	movf	(?___fldiv+3)^(0+128),w
  8857     09B7  00CD               	movwf	(str2float@number+3)^(0+128)
  8858     09B8  0822               	movf	(?___fldiv+2)^(0+128),w
  8859     09B9  00CC               	movwf	(str2float@number+2)^(0+128)
  8860     09BA  0821               	movf	(?___fldiv+1)^(0+128),w
  8861     09BB  00CB               	movwf	(str2float@number+1)^(0+128)
  8862     09BC  0820               	movf	?___fldiv^(0+128),w
  8863     09BD  00CA               	movwf	str2float@number^(0+128)
  8864     09BE                     l5866:
  8865                           
  8866                           ;UART.c: 45:     }
  8867     09BE  3001               	movlw	1
  8868     09BF  07C9               	addwf	str2float@i^(0+128),f
  8869     09C0                     l5868:
  8870     09C0  0847               	movf	str2float@decimal_separator^(0+128),w
  8871     09C1  1903               	btfsc	3,2
  8872     09C2  29C4               	goto	u6951
  8873     09C3  29C5               	goto	u6950
  8874     09C4                     u6951:
  8875     09C4  29CB               	goto	l5872
  8876     09C5                     u6950:
  8877     09C5                     l5870:
  8878     09C5  0848               	movf	str2float@multiplier^(0+128),w
  8879     09C6  0249               	subwf	str2float@i^(0+128),w
  8880     09C7  1C03               	skipc
  8881     09C8  29CA               	goto	u6961
  8882     09C9  29CB               	goto	u6960
  8883     09CA                     u6961:
  8884     09CA  29A2               	goto	l5864
  8885     09CB                     u6960:
  8886     09CB                     l5872:
  8887                           
  8888                           ;UART.c: 46:     return number;
  8889     09CB  084D               	movf	(str2float@number+3)^(0+128),w
  8890     09CC  00C6               	movwf	(?_str2float+3)^(0+128)
  8891     09CD  084C               	movf	(str2float@number+2)^(0+128),w
  8892     09CE  00C5               	movwf	(?_str2float+2)^(0+128)
  8893     09CF  084B               	movf	(str2float@number+1)^(0+128),w
  8894     09D0  00C4               	movwf	(?_str2float+1)^(0+128)
  8895     09D1  084A               	movf	str2float@number^(0+128),w
  8896     09D2  00C3               	movwf	?_str2float^(0+128)
  8897     09D3                     l888:
  8898     09D3  0008               	return
  8899     09D4                     __end_of_str2float:
  8900                           
  8901                           	psect	text3
  8902     0884                     __ptext3:	
  8903 ;; *************** function ___xxtofl *****************
  8904 ;; Defined at:
  8905 ;;		line 10 in file "C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\xxtofl.c"
  8906 ;; Parameters:    Size  Location     Type
  8907 ;;  sign            1    wreg     unsigned char 
  8908 ;;  val             4    0[BANK1 ] long 
  8909 ;; Auto vars:     Size  Location     Type
  8910 ;;  sign            1    8[BANK1 ] unsigned char 
  8911 ;;  arg             4   10[BANK1 ] unsigned long 
  8912 ;;  exp             1    9[BANK1 ] unsigned char 
  8913 ;; Return value:  Size  Location     Type
  8914 ;;                  4    0[BANK1 ] unsigned char 
  8915 ;; Registers used:
  8916 ;;		wreg, status,2, status,0
  8917 ;; Tracked objects:
  8918 ;;		On entry : 0/0
  8919 ;;		On exit  : 0/0
  8920 ;;		Unchanged: 0/0
  8921 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8922 ;;      Params:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0
  8923 ;;      Locals:         0       0       6       0       0       0       0       0       0       0       0       0       
      +0       0
  8924 ;;      Temps:          0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0
  8925 ;;      Totals:         0       0      14       0       0       0       0       0       0       0       0       0       
      +0       0
  8926 ;;Total ram usage:       14 bytes
  8927 ;; Hardware stack levels used: 1
  8928 ;; Hardware stack levels required when called: 5
  8929 ;; This function calls:
  8930 ;;		Nothing
  8931 ;; This function is called by:
  8932 ;;		_str2float
  8933 ;;		_printFloat
  8934 ;;		_getLedNumber
  8935 ;; This function uses a non-reentrant model
  8936 ;;
  8937                           
  8938     0884                     ___xxtofl:	
  8939                           ;psect for function ___xxtofl
  8940                           
  8941                           
  8942                           ;incstack = 0
  8943                           ; Regs used in ___xxtofl: [wreg+status,2+status,0]
  8944                           ;___xxtofl@sign stored from wreg
  8945     0884  0021               	movlb	1	; select bank1
  8946     0885  00A8               	movwf	___xxtofl@sign^(0+128)
  8947     0886                     l5228:
  8948     0886  0828               	movf	___xxtofl@sign^(0+128),w
  8949     0887  1903               	btfsc	3,2
  8950     0888  288A               	goto	u5881
  8951     0889  288B               	goto	u5880
  8952     088A                     u5881:
  8953     088A  289F               	goto	l5234
  8954     088B                     u5880:
  8955     088B                     l5230:
  8956     088B  1FA3               	btfss	(___xxtofl@val+3)^(0+128),7
  8957     088C  288E               	goto	u5891
  8958     088D  288F               	goto	u5890
  8959     088E                     u5891:
  8960     088E  289F               	goto	l5234
  8961     088F                     u5890:
  8962     088F                     l5232:
  8963     088F  0920               	comf	___xxtofl@val^(0+128),w
  8964     0890  00AA               	movwf	___xxtofl@arg^(0+128)
  8965     0891  0921               	comf	(___xxtofl@val^(0+128)+1),w
  8966     0892  00AB               	movwf	(___xxtofl@arg+1)^(0+128)
  8967     0893  0922               	comf	(___xxtofl@val^(0+128)+2),w
  8968     0894  00AC               	movwf	(___xxtofl@arg+2)^(0+128)
  8969     0895  0923               	comf	(___xxtofl@val^(0+128)+3),w
  8970     0896  00AD               	movwf	(___xxtofl@arg+3)^(0+128)
  8971     0897  0AAA               	incf	___xxtofl@arg^(0+128),f
  8972     0898  1903               	skipnz
  8973     0899  0AAB               	incf	(___xxtofl@arg+1)^(0+128),f
  8974     089A  1903               	skipnz
  8975     089B  0AAC               	incf	(___xxtofl@arg+2)^(0+128),f
  8976     089C  1903               	skipnz
  8977     089D  0AAD               	incf	(___xxtofl@arg+3)^(0+128),f
  8978     089E  28A7               	goto	l1649
  8979     089F                     l5234:
  8980     089F  0823               	movf	(___xxtofl@val+3)^(0+128),w
  8981     08A0  00AD               	movwf	(___xxtofl@arg+3)^(0+128)
  8982     08A1  0822               	movf	(___xxtofl@val+2)^(0+128),w
  8983     08A2  00AC               	movwf	(___xxtofl@arg+2)^(0+128)
  8984     08A3  0821               	movf	(___xxtofl@val+1)^(0+128),w
  8985     08A4  00AB               	movwf	(___xxtofl@arg+1)^(0+128)
  8986     08A5  0820               	movf	___xxtofl@val^(0+128),w
  8987     08A6  00AA               	movwf	___xxtofl@arg^(0+128)
  8988     08A7                     l1649:
  8989     08A7  0823               	movf	(___xxtofl@val+3)^(0+128),w
  8990     08A8  0422               	iorwf	(___xxtofl@val+2)^(0+128),w
  8991     08A9  0421               	iorwf	(___xxtofl@val+1)^(0+128),w
  8992     08AA  0420               	iorwf	___xxtofl@val^(0+128),w
  8993     08AB  1D03               	skipz
  8994     08AC  28AE               	goto	u5901
  8995     08AD  28AF               	goto	u5900
  8996     08AE                     u5901:
  8997     08AE  28B8               	goto	l1650
  8998     08AF                     u5900:
  8999     08AF                     l5236:
  9000     08AF  3000               	movlw	0
  9001     08B0  00A3               	movwf	(?___xxtofl+3)^(0+128)
  9002     08B1  3000               	movlw	0
  9003     08B2  00A2               	movwf	(?___xxtofl+2)^(0+128)
  9004     08B3  3000               	movlw	0
  9005     08B4  00A1               	movwf	(?___xxtofl+1)^(0+128)
  9006     08B5  3000               	movlw	0
  9007     08B6  00A0               	movwf	?___xxtofl^(0+128)
  9008     08B7  2928               	goto	l1651
  9009     08B8                     l1650:
  9010     08B8  3096               	movlw	150
  9011     08B9  00A9               	movwf	___xxtofl@exp^(0+128)
  9012     08BA  28C4               	goto	l5242
  9013     08BB                     l5240:
  9014     08BB  3001               	movlw	1
  9015     08BC  07A9               	addwf	___xxtofl@exp^(0+128),f
  9016     08BD  3001               	movlw	1
  9017     08BE                     u5915:
  9018     08BE  36AD               	lsrf	(___xxtofl@arg+3)^(0+128),f
  9019     08BF  0CAC               	rrf	(___xxtofl@arg+2)^(0+128),f
  9020     08C0  0CAB               	rrf	(___xxtofl@arg+1)^(0+128),f
  9021     08C1  0CAA               	rrf	___xxtofl@arg^(0+128),f
  9022     08C2  0B89               	decfsz	9,f
  9023     08C3  28BE               	goto	u5915
  9024     08C4                     l5242:
  9025     08C4  30FE               	movlw	254
  9026     08C5  052D               	andwf	(___xxtofl@arg+3)^(0+128),w
  9027     08C6  1D03               	btfss	3,2
  9028     08C7  28C9               	goto	u5921
  9029     08C8  28CA               	goto	u5920
  9030     08C9                     u5921:
  9031     08C9  28BB               	goto	l5240
  9032     08CA                     u5920:
  9033     08CA  28DA               	goto	l5246
  9034     08CB                     l5244:
  9035     08CB  3001               	movlw	1
  9036     08CC  07A9               	addwf	___xxtofl@exp^(0+128),f
  9037     08CD  3001               	movlw	1
  9038     08CE  07AA               	addwf	___xxtofl@arg^(0+128),f
  9039     08CF  3000               	movlw	0
  9040     08D0  3DAB               	addwfc	(___xxtofl@arg+1)^(0+128),f
  9041     08D1  3DAC               	addwfc	(___xxtofl@arg+2)^(0+128),f
  9042     08D2  3DAD               	addwfc	(___xxtofl@arg+3)^(0+128),f
  9043     08D3  3001               	movlw	1
  9044     08D4                     u5935:
  9045     08D4  36AD               	lsrf	(___xxtofl@arg+3)^(0+128),f
  9046     08D5  0CAC               	rrf	(___xxtofl@arg+2)^(0+128),f
  9047     08D6  0CAB               	rrf	(___xxtofl@arg+1)^(0+128),f
  9048     08D7  0CAA               	rrf	___xxtofl@arg^(0+128),f
  9049     08D8  0B89               	decfsz	9,f
  9050     08D9  28D4               	goto	u5935
  9051     08DA                     l5246:
  9052     08DA  30FF               	movlw	255
  9053     08DB  052D               	andwf	(___xxtofl@arg+3)^(0+128),w
  9054     08DC  1D03               	btfss	3,2
  9055     08DD  28DF               	goto	u5941
  9056     08DE  28E0               	goto	u5940
  9057     08DF                     u5941:
  9058     08DF  28CB               	goto	l5244
  9059     08E0                     u5940:
  9060     08E0  28EA               	goto	l5250
  9061     08E1                     l5248:
  9062     08E1  3001               	movlw	1
  9063     08E2  02A9               	subwf	___xxtofl@exp^(0+128),f
  9064     08E3  3001               	movlw	1
  9065     08E4                     u5955:
  9066     08E4  35AA               	lslf	___xxtofl@arg^(0+128),f
  9067     08E5  0DAB               	rlf	(___xxtofl@arg+1)^(0+128),f
  9068     08E6  0DAC               	rlf	(___xxtofl@arg+2)^(0+128),f
  9069     08E7  0DAD               	rlf	(___xxtofl@arg+3)^(0+128),f
  9070     08E8  0B89               	decfsz	9,f
  9071     08E9  28E4               	goto	u5955
  9072     08EA                     l5250:
  9073     08EA  1BAC               	btfsc	(___xxtofl@arg+2)^(0+128),7
  9074     08EB  28ED               	goto	u5961
  9075     08EC  28EE               	goto	u5960
  9076     08ED                     u5961:
  9077     08ED  28F4               	goto	l1662
  9078     08EE                     u5960:
  9079     08EE                     l5252:
  9080     08EE  3002               	movlw	2
  9081     08EF  0229               	subwf	___xxtofl@exp^(0+128),w
  9082     08F0  1803               	skipnc
  9083     08F1  28F3               	goto	u5971
  9084     08F2  28F4               	goto	u5970
  9085     08F3                     u5971:
  9086     08F3  28E1               	goto	l5248
  9087     08F4                     u5970:
  9088     08F4                     l1662:
  9089     08F4  1829               	btfsc	___xxtofl@exp^(0+128),0
  9090     08F5  28F7               	goto	u5981
  9091     08F6  28F8               	goto	u5980
  9092     08F7                     u5981:
  9093     08F7  2900               	goto	l1663
  9094     08F8                     u5980:
  9095     08F8                     l5254:
  9096     08F8  30FF               	movlw	255
  9097     08F9  05AA               	andwf	___xxtofl@arg^(0+128),f
  9098     08FA  30FF               	movlw	255
  9099     08FB  05AB               	andwf	(___xxtofl@arg+1)^(0+128),f
  9100     08FC  307F               	movlw	127
  9101     08FD  05AC               	andwf	(___xxtofl@arg+2)^(0+128),f
  9102     08FE  30FF               	movlw	255
  9103     08FF  05AD               	andwf	(___xxtofl@arg+3)^(0+128),f
  9104     0900                     l1663:
  9105     0900  1003               	clrc
  9106     0901  0CA9               	rrf	___xxtofl@exp^(0+128),f
  9107     0902                     l5256:
  9108     0902  0829               	movf	___xxtofl@exp^(0+128),w
  9109     0903  00A4               	movwf	??___xxtofl^(0+128)
  9110     0904  01A5               	clrf	(??___xxtofl^(0+128)+1)
  9111     0905  01A6               	clrf	(??___xxtofl^(0+128)+2)
  9112     0906  01A7               	clrf	(??___xxtofl^(0+128)+3)
  9113     0907  3018               	movlw	24
  9114     0908                     u5995:
  9115     0908  35A4               	lslf	??___xxtofl^(0+128),f
  9116     0909  0DA5               	rlf	(??___xxtofl^(0+128)+1),f
  9117     090A  0DA6               	rlf	(??___xxtofl^(0+128)+2),f
  9118     090B  0DA7               	rlf	(??___xxtofl^(0+128)+3),f
  9119     090C                     u5990:
  9120     090C  0B89               	decfsz	9,f
  9121     090D  2908               	goto	u5995
  9122     090E  0824               	movf	??___xxtofl^(0+128),w
  9123     090F  04AA               	iorwf	___xxtofl@arg^(0+128),f
  9124     0910  0825               	movf	(??___xxtofl+1)^(0+128),w
  9125     0911  04AB               	iorwf	(___xxtofl@arg+1)^(0+128),f
  9126     0912  0826               	movf	(??___xxtofl+2)^(0+128),w
  9127     0913  04AC               	iorwf	(___xxtofl@arg+2)^(0+128),f
  9128     0914  0827               	movf	(??___xxtofl+3)^(0+128),w
  9129     0915  04AD               	iorwf	(___xxtofl@arg+3)^(0+128),f
  9130     0916                     l5258:
  9131     0916  0828               	movf	___xxtofl@sign^(0+128),w
  9132     0917  1903               	btfsc	3,2
  9133     0918  291A               	goto	u6001
  9134     0919  291B               	goto	u6000
  9135     091A                     u6001:
  9136     091A  2920               	goto	l5264
  9137     091B                     u6000:
  9138     091B                     l5260:
  9139     091B  1FA3               	btfss	(___xxtofl@val+3)^(0+128),7
  9140     091C  291E               	goto	u6011
  9141     091D  291F               	goto	u6010
  9142     091E                     u6011:
  9143     091E  2920               	goto	l5264
  9144     091F                     u6010:
  9145     091F                     l5262:
  9146     091F  17AD               	bsf	(___xxtofl@arg^(0+128)+3),7
  9147     0920                     l5264:
  9148     0920  082D               	movf	(___xxtofl@arg+3)^(0+128),w
  9149     0921  00A3               	movwf	(?___xxtofl+3)^(0+128)
  9150     0922  082C               	movf	(___xxtofl@arg+2)^(0+128),w
  9151     0923  00A2               	movwf	(?___xxtofl+2)^(0+128)
  9152     0924  082B               	movf	(___xxtofl@arg+1)^(0+128),w
  9153     0925  00A1               	movwf	(?___xxtofl+1)^(0+128)
  9154     0926  082A               	movf	___xxtofl@arg^(0+128),w
  9155     0927  00A0               	movwf	?___xxtofl^(0+128)
  9156     0928                     l1651:
  9157     0928  0008               	return
  9158     0929                     __end_of___xxtofl:
  9159                           
  9160                           	psect	text4
  9161     0093                     __ptext4:	
  9162 ;; *************** function ___flmul *****************
  9163 ;; Defined at:
  9164 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\sprcmul.c"
  9165 ;; Parameters:    Size  Location     Type
  9166 ;;  b               4    9[BANK1 ] unsigned char 
  9167 ;;  a               4   13[BANK1 ] unsigned char 
  9168 ;; Auto vars:     Size  Location     Type
  9169 ;;  prod            4   29[BANK1 ] struct .
  9170 ;;  grs             4   23[BANK1 ] unsigned long 
  9171 ;;  temp            2   33[BANK1 ] struct .
  9172 ;;  bexp            1   28[BANK1 ] unsigned char 
  9173 ;;  aexp            1   27[BANK1 ] unsigned char 
  9174 ;;  sign            1   22[BANK1 ] unsigned char 
  9175 ;; Return value:  Size  Location     Type
  9176 ;;                  4    9[BANK1 ] unsigned char 
  9177 ;; Registers used:
  9178 ;;		wreg, status,2, status,0, pclath, cstack
  9179 ;; Tracked objects:
  9180 ;;		On entry : 0/0
  9181 ;;		On exit  : 0/0
  9182 ;;		Unchanged: 0/0
  9183 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9184 ;;      Params:         0       0       8       0       0       0       0       0       0       0       0       0       
      +0       0
  9185 ;;      Locals:         0       0      13       0       0       0       0       0       0       0       0       0       
      +0       0
  9186 ;;      Temps:          0       0       5       0       0       0       0       0       0       0       0       0       
      +0       0
  9187 ;;      Totals:         0       0      26       0       0       0       0       0       0       0       0       0       
      +0       0
  9188 ;;Total ram usage:       26 bytes
  9189 ;; Hardware stack levels used: 1
  9190 ;; Hardware stack levels required when called: 6
  9191 ;; This function calls:
  9192 ;;		__Umul8_16
  9193 ;; This function is called by:
  9194 ;;		_str2float
  9195 ;;		_printFloat
  9196 ;;		_getLedNumber
  9197 ;; This function uses a non-reentrant model
  9198 ;;
  9199                           
  9200     0093                     ___flmul:	
  9201                           ;psect for function ___flmul
  9202                           
  9203     0093                     l5088:	
  9204                           ;incstack = 0
  9205                           ; Regs used in ___flmul: [wreg+status,2+status,0+pclath+cstack]
  9206                           
  9207     0093  0021               	movlb	1	; select bank1
  9208     0094  082C               	movf	(___flmul@b^(0+128)+3),w
  9209     0095  3980               	andlw	128
  9210     0096  00B6               	movwf	___flmul@sign^(0+128)
  9211     0097                     l5090:
  9212     0097  352C               	lslf	(___flmul@b^(0+128)+3),w
  9213     0098  00BC               	movwf	___flmul@bexp^(0+128)
  9214     0099                     l5092:
  9215     0099  1FAB               	btfss	(___flmul@b^(0+128)+2),7
  9216     009A  289C               	goto	u5611
  9217     009B  289D               	goto	u5610
  9218     009C                     u5611:
  9219     009C  289E               	goto	l5096
  9220     009D                     u5610:
  9221     009D                     l5094:
  9222     009D  143C               	bsf	___flmul@bexp^(0+128),0
  9223     009E                     l5096:
  9224     009E  083C               	movf	___flmul@bexp^(0+128),w
  9225     009F  1903               	btfsc	3,2
  9226     00A0  28A2               	goto	u5621
  9227     00A1  28A3               	goto	u5620
  9228     00A2                     u5621:
  9229     00A2  28B2               	goto	l5104
  9230     00A3                     u5620:
  9231     00A3                     l5098:
  9232     00A3  0A3C               	incf	___flmul@bexp^(0+128),w
  9233     00A4  1D03               	btfss	3,2
  9234     00A5  28A7               	goto	u5631
  9235     00A6  28A8               	goto	u5630
  9236     00A7                     u5631:
  9237     00A7  28B0               	goto	l5102
  9238     00A8                     u5630:
  9239     00A8                     l5100:
  9240     00A8  3000               	movlw	0
  9241     00A9  00AC               	movwf	(___flmul@b+3)^(0+128)
  9242     00AA  3000               	movlw	0
  9243     00AB  00AB               	movwf	(___flmul@b+2)^(0+128)
  9244     00AC  3000               	movlw	0
  9245     00AD  00AA               	movwf	(___flmul@b+1)^(0+128)
  9246     00AE  3000               	movlw	0
  9247     00AF  00A9               	movwf	___flmul@b^(0+128)
  9248     00B0                     l5102:
  9249     00B0  17AB               	bsf	(___flmul@b^(0+128)+2),7
  9250     00B1  28BA               	goto	l5106
  9251     00B2                     l5104:
  9252     00B2  3000               	movlw	0
  9253     00B3  00AC               	movwf	(___flmul@b+3)^(0+128)
  9254     00B4  3000               	movlw	0
  9255     00B5  00AB               	movwf	(___flmul@b+2)^(0+128)
  9256     00B6  3000               	movlw	0
  9257     00B7  00AA               	movwf	(___flmul@b+1)^(0+128)
  9258     00B8  3000               	movlw	0
  9259     00B9  00A9               	movwf	___flmul@b^(0+128)
  9260     00BA                     l5106:
  9261     00BA  0830               	movf	(___flmul@a^(0+128)+3),w
  9262     00BB  3980               	andlw	128
  9263     00BC  06B6               	xorwf	___flmul@sign^(0+128),f
  9264     00BD                     l5108:
  9265     00BD  3530               	lslf	(___flmul@a^(0+128)+3),w
  9266     00BE  00BB               	movwf	___flmul@aexp^(0+128)
  9267     00BF                     l5110:
  9268     00BF  1FAF               	btfss	(___flmul@a^(0+128)+2),7
  9269     00C0  28C2               	goto	u5641
  9270     00C1  28C3               	goto	u5640
  9271     00C2                     u5641:
  9272     00C2  28C4               	goto	l5114
  9273     00C3                     u5640:
  9274     00C3                     l5112:
  9275     00C3  143B               	bsf	___flmul@aexp^(0+128),0
  9276     00C4                     l5114:
  9277     00C4  083B               	movf	___flmul@aexp^(0+128),w
  9278     00C5  1903               	btfsc	3,2
  9279     00C6  28C8               	goto	u5651
  9280     00C7  28C9               	goto	u5650
  9281     00C8                     u5651:
  9282     00C8  28D8               	goto	l5122
  9283     00C9                     u5650:
  9284     00C9                     l5116:
  9285     00C9  0A3B               	incf	___flmul@aexp^(0+128),w
  9286     00CA  1D03               	btfss	3,2
  9287     00CB  28CD               	goto	u5661
  9288     00CC  28CE               	goto	u5660
  9289     00CD                     u5661:
  9290     00CD  28D6               	goto	l5120
  9291     00CE                     u5660:
  9292     00CE                     l5118:
  9293     00CE  3000               	movlw	0
  9294     00CF  00B0               	movwf	(___flmul@a+3)^(0+128)
  9295     00D0  3000               	movlw	0
  9296     00D1  00AF               	movwf	(___flmul@a+2)^(0+128)
  9297     00D2  3000               	movlw	0
  9298     00D3  00AE               	movwf	(___flmul@a+1)^(0+128)
  9299     00D4  3000               	movlw	0
  9300     00D5  00AD               	movwf	___flmul@a^(0+128)
  9301     00D6                     l5120:
  9302     00D6  17AF               	bsf	(___flmul@a^(0+128)+2),7
  9303     00D7  28E0               	goto	l5124
  9304     00D8                     l5122:
  9305     00D8  3000               	movlw	0
  9306     00D9  00B0               	movwf	(___flmul@a+3)^(0+128)
  9307     00DA  3000               	movlw	0
  9308     00DB  00AF               	movwf	(___flmul@a+2)^(0+128)
  9309     00DC  3000               	movlw	0
  9310     00DD  00AE               	movwf	(___flmul@a+1)^(0+128)
  9311     00DE  3000               	movlw	0
  9312     00DF  00AD               	movwf	___flmul@a^(0+128)
  9313     00E0                     l5124:
  9314     00E0  083B               	movf	___flmul@aexp^(0+128),w
  9315     00E1  1903               	btfsc	3,2
  9316     00E2  28E4               	goto	u5671
  9317     00E3  28E5               	goto	u5670
  9318     00E4                     u5671:
  9319     00E4  28EA               	goto	l5128
  9320     00E5                     u5670:
  9321     00E5                     l5126:
  9322     00E5  083C               	movf	___flmul@bexp^(0+128),w
  9323     00E6  1D03               	btfss	3,2
  9324     00E7  28E9               	goto	u5681
  9325     00E8  28EA               	goto	u5680
  9326     00E9                     u5681:
  9327     00E9  28F3               	goto	l5132
  9328     00EA                     u5680:
  9329     00EA                     l5128:
  9330     00EA  3000               	movlw	0
  9331     00EB  00AC               	movwf	(?___flmul+3)^(0+128)
  9332     00EC  3000               	movlw	0
  9333     00ED  00AB               	movwf	(?___flmul+2)^(0+128)
  9334     00EE  3000               	movlw	0
  9335     00EF  00AA               	movwf	(?___flmul+1)^(0+128)
  9336     00F0  3000               	movlw	0
  9337     00F1  00A9               	movwf	?___flmul^(0+128)
  9338     00F2  2ACD               	goto	l1605
  9339     00F3                     l5132:
  9340     00F3  0829               	movf	___flmul@b^(0+128),w
  9341     00F4  00A0               	movwf	__Umul8_16@multiplicand^(0+128)
  9342     00F5  082F               	movf	(___flmul@a^(0+128)+2),w
  9343     00F6  3190  2087  3180   	fcall	__Umul8_16
  9344     00F9  0021               	movlb	1	; select bank1
  9345     00FA  0821               	movf	(?__Umul8_16+1)^(0+128),w
  9346     00FB  00C2               	movwf	(___flmul@temp+1)^(0+128)
  9347     00FC  0820               	movf	?__Umul8_16^(0+128),w
  9348     00FD  00C1               	movwf	___flmul@temp^(0+128)
  9349     00FE                     l5134:
  9350     00FE  0841               	movf	___flmul@temp^(0+128),w
  9351     00FF  00B1               	movwf	??___flmul^(0+128)
  9352     0100  01B2               	clrf	(??___flmul^(0+128)+1)
  9353     0101  01B3               	clrf	(??___flmul^(0+128)+2)
  9354     0102  01B4               	clrf	(??___flmul^(0+128)+3)
  9355     0103  0834               	movf	(??___flmul+3)^(0+128),w
  9356     0104  00BA               	movwf	(___flmul@grs+3)^(0+128)
  9357     0105  0833               	movf	(??___flmul+2)^(0+128),w
  9358     0106  00B9               	movwf	(___flmul@grs+2)^(0+128)
  9359     0107  0832               	movf	(??___flmul+1)^(0+128),w
  9360     0108  00B8               	movwf	(___flmul@grs+1)^(0+128)
  9361     0109  0831               	movf	??___flmul^(0+128),w
  9362     010A  00B7               	movwf	___flmul@grs^(0+128)
  9363     010B                     l5136:
  9364     010B  0842               	movf	(___flmul@temp^(0+128)+1),w
  9365     010C  00B1               	movwf	??___flmul^(0+128)
  9366     010D  01B2               	clrf	(??___flmul^(0+128)+1)
  9367     010E  01B3               	clrf	(??___flmul^(0+128)+2)
  9368     010F  01B4               	clrf	(??___flmul^(0+128)+3)
  9369     0110  0834               	movf	(??___flmul+3)^(0+128),w
  9370     0111  00C0               	movwf	(___flmul@prod+3)^(0+128)
  9371     0112  0833               	movf	(??___flmul+2)^(0+128),w
  9372     0113  00BF               	movwf	(___flmul@prod+2)^(0+128)
  9373     0114  0832               	movf	(??___flmul+1)^(0+128),w
  9374     0115  00BE               	movwf	(___flmul@prod+1)^(0+128)
  9375     0116  0831               	movf	??___flmul^(0+128),w
  9376     0117  00BD               	movwf	___flmul@prod^(0+128)
  9377     0118  082A               	movf	(___flmul@b^(0+128)+1),w
  9378     0119  00A0               	movwf	__Umul8_16@multiplicand^(0+128)
  9379     011A  082E               	movf	(___flmul@a^(0+128)+1),w
  9380     011B  3190  2087  3180   	fcall	__Umul8_16
  9381     011E  0021               	movlb	1	; select bank1
  9382     011F  0821               	movf	(?__Umul8_16+1)^(0+128),w
  9383     0120  00C2               	movwf	(___flmul@temp+1)^(0+128)
  9384     0121  0820               	movf	?__Umul8_16^(0+128),w
  9385     0122  00C1               	movwf	___flmul@temp^(0+128)
  9386     0123                     l5138:
  9387     0123  0841               	movf	___flmul@temp^(0+128),w
  9388     0124  00B1               	movwf	??___flmul^(0+128)
  9389     0125  01B2               	clrf	(??___flmul^(0+128)+1)
  9390     0126  01B3               	clrf	(??___flmul^(0+128)+2)
  9391     0127  01B4               	clrf	(??___flmul^(0+128)+3)
  9392     0128  0831               	movf	??___flmul^(0+128),w
  9393     0129  07B7               	addwf	___flmul@grs^(0+128),f
  9394     012A  0832               	movf	(??___flmul+1)^(0+128),w
  9395     012B  3DB8               	addwfc	(___flmul@grs+1)^(0+128),f
  9396     012C  0833               	movf	(??___flmul+2)^(0+128),w
  9397     012D  3DB9               	addwfc	(___flmul@grs+2)^(0+128),f
  9398     012E  0834               	movf	(??___flmul+3)^(0+128),w
  9399     012F  3DBA               	addwfc	(___flmul@grs+3)^(0+128),f
  9400     0130                     l5140:
  9401     0130  0842               	movf	(___flmul@temp^(0+128)+1),w
  9402     0131  00B1               	movwf	??___flmul^(0+128)
  9403     0132  01B2               	clrf	(??___flmul^(0+128)+1)
  9404     0133  01B3               	clrf	(??___flmul^(0+128)+2)
  9405     0134  01B4               	clrf	(??___flmul^(0+128)+3)
  9406     0135  0831               	movf	??___flmul^(0+128),w
  9407     0136  07BD               	addwf	___flmul@prod^(0+128),f
  9408     0137  0832               	movf	(??___flmul+1)^(0+128),w
  9409     0138  3DBE               	addwfc	(___flmul@prod+1)^(0+128),f
  9410     0139  0833               	movf	(??___flmul+2)^(0+128),w
  9411     013A  3DBF               	addwfc	(___flmul@prod+2)^(0+128),f
  9412     013B  0834               	movf	(??___flmul+3)^(0+128),w
  9413     013C  3DC0               	addwfc	(___flmul@prod+3)^(0+128),f
  9414     013D  082B               	movf	(___flmul@b^(0+128)+2),w
  9415     013E  00A0               	movwf	__Umul8_16@multiplicand^(0+128)
  9416     013F  082D               	movf	___flmul@a^(0+128),w
  9417     0140  3190  2087  3180   	fcall	__Umul8_16
  9418     0143  0021               	movlb	1	; select bank1
  9419     0144  0821               	movf	(?__Umul8_16+1)^(0+128),w
  9420     0145  00C2               	movwf	(___flmul@temp+1)^(0+128)
  9421     0146  0820               	movf	?__Umul8_16^(0+128),w
  9422     0147  00C1               	movwf	___flmul@temp^(0+128)
  9423     0148                     l5142:
  9424     0148  0841               	movf	___flmul@temp^(0+128),w
  9425     0149  00B1               	movwf	??___flmul^(0+128)
  9426     014A  01B2               	clrf	(??___flmul^(0+128)+1)
  9427     014B  01B3               	clrf	(??___flmul^(0+128)+2)
  9428     014C  01B4               	clrf	(??___flmul^(0+128)+3)
  9429     014D  0831               	movf	??___flmul^(0+128),w
  9430     014E  07B7               	addwf	___flmul@grs^(0+128),f
  9431     014F  0832               	movf	(??___flmul+1)^(0+128),w
  9432     0150  3DB8               	addwfc	(___flmul@grs+1)^(0+128),f
  9433     0151  0833               	movf	(??___flmul+2)^(0+128),w
  9434     0152  3DB9               	addwfc	(___flmul@grs+2)^(0+128),f
  9435     0153  0834               	movf	(??___flmul+3)^(0+128),w
  9436     0154  3DBA               	addwfc	(___flmul@grs+3)^(0+128),f
  9437     0155                     l5144:
  9438     0155  0842               	movf	(___flmul@temp^(0+128)+1),w
  9439     0156  00B1               	movwf	??___flmul^(0+128)
  9440     0157  01B2               	clrf	(??___flmul^(0+128)+1)
  9441     0158  01B3               	clrf	(??___flmul^(0+128)+2)
  9442     0159  01B4               	clrf	(??___flmul^(0+128)+3)
  9443     015A  0831               	movf	??___flmul^(0+128),w
  9444     015B  07BD               	addwf	___flmul@prod^(0+128),f
  9445     015C  0832               	movf	(??___flmul+1)^(0+128),w
  9446     015D  3DBE               	addwfc	(___flmul@prod+1)^(0+128),f
  9447     015E  0833               	movf	(??___flmul+2)^(0+128),w
  9448     015F  3DBF               	addwfc	(___flmul@prod+2)^(0+128),f
  9449     0160  0834               	movf	(??___flmul+3)^(0+128),w
  9450     0161  3DC0               	addwfc	(___flmul@prod+3)^(0+128),f
  9451     0162                     l5146:
  9452     0162  3008               	movlw	8
  9453     0163                     u5695:
  9454     0163  35B7               	lslf	___flmul@grs^(0+128),f
  9455     0164  0DB8               	rlf	(___flmul@grs+1)^(0+128),f
  9456     0165  0DB9               	rlf	(___flmul@grs+2)^(0+128),f
  9457     0166  0DBA               	rlf	(___flmul@grs+3)^(0+128),f
  9458     0167  0B89               	decfsz	9,f
  9459     0168  2963               	goto	u5695
  9460     0169                     l5148:
  9461     0169  082A               	movf	(___flmul@b^(0+128)+1),w
  9462     016A  00A0               	movwf	__Umul8_16@multiplicand^(0+128)
  9463     016B  082D               	movf	___flmul@a^(0+128),w
  9464     016C  3190  2087  3180   	fcall	__Umul8_16
  9465     016F  0021               	movlb	1	; select bank1
  9466     0170  0821               	movf	(?__Umul8_16+1)^(0+128),w
  9467     0171  00C2               	movwf	(___flmul@temp+1)^(0+128)
  9468     0172  0820               	movf	?__Umul8_16^(0+128),w
  9469     0173  00C1               	movwf	___flmul@temp^(0+128)
  9470     0174                     l5150:
  9471     0174  0841               	movf	___flmul@temp^(0+128),w
  9472     0175  07B7               	addwf	___flmul@grs^(0+128),f
  9473     0176  0842               	movf	(___flmul@temp+1)^(0+128),w
  9474     0177  3DB8               	addwfc	(___flmul@grs+1)^(0+128),f
  9475     0178  3000               	movlw	0
  9476     0179  3DB9               	addwfc	(___flmul@grs+2)^(0+128),f
  9477     017A  3DBA               	addwfc	(___flmul@grs+3)^(0+128),f
  9478     017B                     l5152:
  9479     017B  0829               	movf	___flmul@b^(0+128),w
  9480     017C  00A0               	movwf	__Umul8_16@multiplicand^(0+128)
  9481     017D  082E               	movf	(___flmul@a^(0+128)+1),w
  9482     017E  3190  2087  3180   	fcall	__Umul8_16
  9483     0181  0021               	movlb	1	; select bank1
  9484     0182  0821               	movf	(?__Umul8_16+1)^(0+128),w
  9485     0183  00C2               	movwf	(___flmul@temp+1)^(0+128)
  9486     0184  0820               	movf	?__Umul8_16^(0+128),w
  9487     0185  00C1               	movwf	___flmul@temp^(0+128)
  9488     0186                     l5154:
  9489     0186  0841               	movf	___flmul@temp^(0+128),w
  9490     0187  07B7               	addwf	___flmul@grs^(0+128),f
  9491     0188  0842               	movf	(___flmul@temp+1)^(0+128),w
  9492     0189  3DB8               	addwfc	(___flmul@grs+1)^(0+128),f
  9493     018A  3000               	movlw	0
  9494     018B  3DB9               	addwfc	(___flmul@grs+2)^(0+128),f
  9495     018C  3DBA               	addwfc	(___flmul@grs+3)^(0+128),f
  9496     018D                     l5156:
  9497     018D  3008               	movlw	8
  9498     018E                     u5705:
  9499     018E  35B7               	lslf	___flmul@grs^(0+128),f
  9500     018F  0DB8               	rlf	(___flmul@grs+1)^(0+128),f
  9501     0190  0DB9               	rlf	(___flmul@grs+2)^(0+128),f
  9502     0191  0DBA               	rlf	(___flmul@grs+3)^(0+128),f
  9503     0192  0B89               	decfsz	9,f
  9504     0193  298E               	goto	u5705
  9505     0194  0829               	movf	___flmul@b^(0+128),w
  9506     0195  00A0               	movwf	__Umul8_16@multiplicand^(0+128)
  9507     0196  082D               	movf	___flmul@a^(0+128),w
  9508     0197  3190  2087  3180   	fcall	__Umul8_16
  9509     019A  0021               	movlb	1	; select bank1
  9510     019B  0821               	movf	(?__Umul8_16+1)^(0+128),w
  9511     019C  00C2               	movwf	(___flmul@temp+1)^(0+128)
  9512     019D  0820               	movf	?__Umul8_16^(0+128),w
  9513     019E  00C1               	movwf	___flmul@temp^(0+128)
  9514     019F                     l5158:
  9515     019F  0841               	movf	___flmul@temp^(0+128),w
  9516     01A0  07B7               	addwf	___flmul@grs^(0+128),f
  9517     01A1  0842               	movf	(___flmul@temp+1)^(0+128),w
  9518     01A2  3DB8               	addwfc	(___flmul@grs+1)^(0+128),f
  9519     01A3  3000               	movlw	0
  9520     01A4  3DB9               	addwfc	(___flmul@grs+2)^(0+128),f
  9521     01A5  3DBA               	addwfc	(___flmul@grs+3)^(0+128),f
  9522     01A6                     l5160:
  9523     01A6  082A               	movf	(___flmul@b^(0+128)+1),w
  9524     01A7  00A0               	movwf	__Umul8_16@multiplicand^(0+128)
  9525     01A8  082F               	movf	(___flmul@a^(0+128)+2),w
  9526     01A9  3190  2087  3180   	fcall	__Umul8_16
  9527     01AC  0021               	movlb	1	; select bank1
  9528     01AD  0821               	movf	(?__Umul8_16+1)^(0+128),w
  9529     01AE  00C2               	movwf	(___flmul@temp+1)^(0+128)
  9530     01AF  0820               	movf	?__Umul8_16^(0+128),w
  9531     01B0  00C1               	movwf	___flmul@temp^(0+128)
  9532     01B1  0841               	movf	___flmul@temp^(0+128),w
  9533     01B2  07BD               	addwf	___flmul@prod^(0+128),f
  9534     01B3  0842               	movf	(___flmul@temp+1)^(0+128),w
  9535     01B4  3DBE               	addwfc	(___flmul@prod+1)^(0+128),f
  9536     01B5  3000               	movlw	0
  9537     01B6  3DBF               	addwfc	(___flmul@prod+2)^(0+128),f
  9538     01B7  3DC0               	addwfc	(___flmul@prod+3)^(0+128),f
  9539     01B8                     l5162:
  9540     01B8  082B               	movf	(___flmul@b^(0+128)+2),w
  9541     01B9  00A0               	movwf	__Umul8_16@multiplicand^(0+128)
  9542     01BA  082E               	movf	(___flmul@a^(0+128)+1),w
  9543     01BB  3190  2087  3180   	fcall	__Umul8_16
  9544     01BE  0021               	movlb	1	; select bank1
  9545     01BF  0821               	movf	(?__Umul8_16+1)^(0+128),w
  9546     01C0  00C2               	movwf	(___flmul@temp+1)^(0+128)
  9547     01C1  0820               	movf	?__Umul8_16^(0+128),w
  9548     01C2  00C1               	movwf	___flmul@temp^(0+128)
  9549     01C3                     l5164:
  9550     01C3  0841               	movf	___flmul@temp^(0+128),w
  9551     01C4  07BD               	addwf	___flmul@prod^(0+128),f
  9552     01C5  0842               	movf	(___flmul@temp+1)^(0+128),w
  9553     01C6  3DBE               	addwfc	(___flmul@prod+1)^(0+128),f
  9554     01C7  3000               	movlw	0
  9555     01C8  3DBF               	addwfc	(___flmul@prod+2)^(0+128),f
  9556     01C9  3DC0               	addwfc	(___flmul@prod+3)^(0+128),f
  9557     01CA  082B               	movf	(___flmul@b^(0+128)+2),w
  9558     01CB  00A0               	movwf	__Umul8_16@multiplicand^(0+128)
  9559     01CC  082F               	movf	(___flmul@a^(0+128)+2),w
  9560     01CD  3190  2087  3180   	fcall	__Umul8_16
  9561     01D0  0021               	movlb	1	; select bank1
  9562     01D1  0821               	movf	(?__Umul8_16+1)^(0+128),w
  9563     01D2  00C2               	movwf	(___flmul@temp+1)^(0+128)
  9564     01D3  0820               	movf	?__Umul8_16^(0+128),w
  9565     01D4  00C1               	movwf	___flmul@temp^(0+128)
  9566     01D5                     l5166:
  9567     01D5  0841               	movf	___flmul@temp^(0+128),w
  9568     01D6  00B1               	movwf	??___flmul^(0+128)
  9569     01D7  0842               	movf	(___flmul@temp+1)^(0+128),w
  9570     01D8  00B2               	movwf	(??___flmul^(0+128)+1)
  9571     01D9  01B3               	clrf	(??___flmul^(0+128)+2)
  9572     01DA  01B4               	clrf	(??___flmul^(0+128)+3)
  9573     01DB  3008               	movlw	8
  9574     01DC                     u5715:
  9575     01DC  35B1               	lslf	??___flmul^(0+128),f
  9576     01DD  0DB2               	rlf	(??___flmul^(0+128)+1),f
  9577     01DE  0DB3               	rlf	(??___flmul^(0+128)+2),f
  9578     01DF  0DB4               	rlf	(??___flmul^(0+128)+3),f
  9579     01E0                     u5710:
  9580     01E0  0B89               	decfsz	9,f
  9581     01E1  29DC               	goto	u5715
  9582     01E2  0831               	movf	??___flmul^(0+128),w
  9583     01E3  07BD               	addwf	___flmul@prod^(0+128),f
  9584     01E4  0832               	movf	(??___flmul+1)^(0+128),w
  9585     01E5  3DBE               	addwfc	(___flmul@prod+1)^(0+128),f
  9586     01E6  0833               	movf	(??___flmul+2)^(0+128),w
  9587     01E7  3DBF               	addwfc	(___flmul@prod+2)^(0+128),f
  9588     01E8  0834               	movf	(??___flmul+3)^(0+128),w
  9589     01E9  3DC0               	addwfc	(___flmul@prod+3)^(0+128),f
  9590     01EA                     l5168:
  9591     01EA  0837               	movf	___flmul@grs^(0+128),w
  9592     01EB  00B1               	movwf	??___flmul^(0+128)
  9593     01EC  0838               	movf	(___flmul@grs+1)^(0+128),w
  9594     01ED  00B2               	movwf	(??___flmul^(0+128)+1)
  9595     01EE  0839               	movf	(___flmul@grs+2)^(0+128),w
  9596     01EF  00B3               	movwf	(??___flmul^(0+128)+2)
  9597     01F0  083A               	movf	(___flmul@grs+3)^(0+128),w
  9598     01F1  00B4               	movwf	(??___flmul^(0+128)+3)
  9599     01F2  3018               	movlw	24
  9600     01F3                     u5725:
  9601     01F3  36B4               	lsrf	(??___flmul^(0+128)+3),f
  9602     01F4  0CB3               	rrf	(??___flmul^(0+128)+2),f
  9603     01F5  0CB2               	rrf	(??___flmul^(0+128)+1),f
  9604     01F6  0CB1               	rrf	??___flmul^(0+128),f
  9605     01F7                     u5720:
  9606     01F7  0B89               	decfsz	9,f
  9607     01F8  29F3               	goto	u5725
  9608     01F9  0831               	movf	??___flmul^(0+128),w
  9609     01FA  07BD               	addwf	___flmul@prod^(0+128),f
  9610     01FB  0832               	movf	(??___flmul+1)^(0+128),w
  9611     01FC  3DBE               	addwfc	(___flmul@prod+1)^(0+128),f
  9612     01FD  0833               	movf	(??___flmul+2)^(0+128),w
  9613     01FE  3DBF               	addwfc	(___flmul@prod+2)^(0+128),f
  9614     01FF  0834               	movf	(??___flmul+3)^(0+128),w
  9615     0200  3DC0               	addwfc	(___flmul@prod+3)^(0+128),f
  9616     0201                     l5170:
  9617     0201  3008               	movlw	8
  9618     0202                     u5735:
  9619     0202  35B7               	lslf	___flmul@grs^(0+128),f
  9620     0203  0DB8               	rlf	(___flmul@grs+1)^(0+128),f
  9621     0204  0DB9               	rlf	(___flmul@grs+2)^(0+128),f
  9622     0205  0DBA               	rlf	(___flmul@grs+3)^(0+128),f
  9623     0206  0B89               	decfsz	9,f
  9624     0207  2A02               	goto	u5735
  9625     0208                     l5172:
  9626     0208  083C               	movf	___flmul@bexp^(0+128),w
  9627     0209  073B               	addwf	___flmul@aexp^(0+128),w
  9628     020A  00B1               	movwf	??___flmul^(0+128)
  9629     020B  01B2               	clrf	(??___flmul^(0+128)+1)
  9630     020C  0DB2               	rlf	(??___flmul+1)^(0+128),f
  9631     020D  0831               	movf	??___flmul^(0+128),w
  9632     020E  3E82               	addlw	130
  9633     020F  00C1               	movwf	___flmul@temp^(0+128)
  9634     0210  30FF               	movlw	255
  9635     0211  3D32               	addwfc	(??___flmul+1)^(0+128),w
  9636     0212  00C2               	movwf	(___flmul@temp+1)^(0+128)
  9637     0213  2A2B               	goto	l5184
  9638     0214                     l5174:
  9639     0214  3001               	movlw	1
  9640     0215                     u5745:
  9641     0215  35BD               	lslf	___flmul@prod^(0+128),f
  9642     0216  0DBE               	rlf	(___flmul@prod+1)^(0+128),f
  9643     0217  0DBF               	rlf	(___flmul@prod+2)^(0+128),f
  9644     0218  0DC0               	rlf	(___flmul@prod+3)^(0+128),f
  9645     0219  0B89               	decfsz	9,f
  9646     021A  2A15               	goto	u5745
  9647     021B                     l5176:
  9648     021B  1FBA               	btfss	(___flmul@grs+3)^(0+128),7
  9649     021C  2A1E               	goto	u5751
  9650     021D  2A1F               	goto	u5750
  9651     021E                     u5751:
  9652     021E  2A20               	goto	l5180
  9653     021F                     u5750:
  9654     021F                     l5178:
  9655     021F  143D               	bsf	___flmul@prod^(0+128),0
  9656     0220                     l5180:
  9657     0220  3001               	movlw	1
  9658     0221                     u5765:
  9659     0221  35B7               	lslf	___flmul@grs^(0+128),f
  9660     0222  0DB8               	rlf	(___flmul@grs+1)^(0+128),f
  9661     0223  0DB9               	rlf	(___flmul@grs+2)^(0+128),f
  9662     0224  0DBA               	rlf	(___flmul@grs+3)^(0+128),f
  9663     0225  0B89               	decfsz	9,f
  9664     0226  2A21               	goto	u5765
  9665     0227                     l5182:
  9666     0227  30FF               	movlw	255
  9667     0228  07C1               	addwf	___flmul@temp^(0+128),f
  9668     0229  30FF               	movlw	255
  9669     022A  3DC2               	addwfc	(___flmul@temp+1)^(0+128),f
  9670     022B                     l5184:
  9671     022B  1FBF               	btfss	(___flmul@prod+2)^(0+128),7
  9672     022C  2A2E               	goto	u5771
  9673     022D  2A2F               	goto	u5770
  9674     022E                     u5771:
  9675     022E  2A14               	goto	l5174
  9676     022F                     u5770:
  9677     022F                     l5186:
  9678     022F  01BB               	clrf	___flmul@aexp^(0+128)
  9679     0230                     l5188:
  9680     0230  1FBA               	btfss	(___flmul@grs+3)^(0+128),7
  9681     0231  2A33               	goto	u5781
  9682     0232  2A34               	goto	u5780
  9683     0233                     u5781:
  9684     0233  2A50               	goto	l5196
  9685     0234                     u5780:
  9686     0234                     l5190:
  9687     0234  30FF               	movlw	255
  9688     0235  0537               	andwf	___flmul@grs^(0+128),w
  9689     0236  00B1               	movwf	??___flmul^(0+128)
  9690     0237  30FF               	movlw	255
  9691     0238  0538               	andwf	(___flmul@grs+1)^(0+128),w
  9692     0239  00B2               	movwf	(??___flmul^(0+128)+1)
  9693     023A  30FF               	movlw	255
  9694     023B  0539               	andwf	(___flmul@grs+2)^(0+128),w
  9695     023C  00B3               	movwf	(??___flmul^(0+128)+2)
  9696     023D  307F               	movlw	127
  9697     023E  053A               	andwf	(___flmul@grs+3)^(0+128),w
  9698     023F  00B4               	movwf	(??___flmul^(0+128)+3)
  9699     0240  0834               	movf	(??___flmul+3)^(0+128),w
  9700     0241  0433               	iorwf	(??___flmul+2)^(0+128),w
  9701     0242  0432               	iorwf	(??___flmul+1)^(0+128),w
  9702     0243  0431               	iorwf	??___flmul^(0+128),w
  9703     0244  1903               	skipnz
  9704     0245  2A47               	goto	u5791
  9705     0246  2A48               	goto	u5790
  9706     0247                     u5791:
  9707     0247  2A4B               	goto	l1611
  9708     0248                     u5790:
  9709     0248                     l5192:
  9710     0248  3001               	movlw	1
  9711     0249  00BB               	movwf	___flmul@aexp^(0+128)
  9712     024A  2A50               	goto	l5196
  9713     024B                     l1611:
  9714     024B  1C3D               	btfss	___flmul@prod^(0+128),0
  9715     024C  2A4E               	goto	u5801
  9716     024D  2A4F               	goto	u5800
  9717     024E                     u5801:
  9718     024E  2A50               	goto	l5196
  9719     024F                     u5800:
  9720     024F  2A48               	goto	l5192
  9721     0250                     l5196:
  9722     0250  083B               	movf	___flmul@aexp^(0+128),w
  9723     0251  1903               	btfsc	3,2
  9724     0252  2A54               	goto	u5811
  9725     0253  2A55               	goto	u5810
  9726     0254                     u5811:
  9727     0254  2A7B               	goto	l5206
  9728     0255                     u5810:
  9729     0255                     l5198:
  9730     0255  3001               	movlw	1
  9731     0256  07BD               	addwf	___flmul@prod^(0+128),f
  9732     0257  3000               	movlw	0
  9733     0258  3DBE               	addwfc	(___flmul@prod+1)^(0+128),f
  9734     0259  3DBF               	addwfc	(___flmul@prod+2)^(0+128),f
  9735     025A  3DC0               	addwfc	(___flmul@prod+3)^(0+128),f
  9736     025B                     l5200:
  9737     025B  1C40               	btfss	(___flmul@prod+3)^(0+128),0
  9738     025C  2A5E               	goto	u5821
  9739     025D  2A5F               	goto	u5820
  9740     025E                     u5821:
  9741     025E  2A7B               	goto	l5206
  9742     025F                     u5820:
  9743     025F                     l5202:
  9744     025F  083D               	movf	___flmul@prod^(0+128),w
  9745     0260  00B1               	movwf	??___flmul^(0+128)
  9746     0261  083E               	movf	(___flmul@prod+1)^(0+128),w
  9747     0262  00B2               	movwf	(??___flmul^(0+128)+1)
  9748     0263  083F               	movf	(___flmul@prod+2)^(0+128),w
  9749     0264  00B3               	movwf	(??___flmul^(0+128)+2)
  9750     0265  0840               	movf	(___flmul@prod+3)^(0+128),w
  9751     0266  00B4               	movwf	(??___flmul^(0+128)+3)
  9752     0267  3001               	movlw	1
  9753     0268  00B5               	movwf	(??___flmul+4)^(0+128)
  9754     0269                     u5835:
  9755     0269  37B4               	asrf	(??___flmul^(0+128)+3),f
  9756     026A  0CB3               	rrf	(??___flmul^(0+128)+2),f
  9757     026B  0CB2               	rrf	(??___flmul^(0+128)+1),f
  9758     026C  0CB1               	rrf	??___flmul^(0+128),f
  9759     026D                     u5830:
  9760     026D  0BB5               	decfsz	(??___flmul+4)^(0+128),f
  9761     026E  2A69               	goto	u5835
  9762     026F  0834               	movf	(??___flmul+3)^(0+128),w
  9763     0270  00C0               	movwf	(___flmul@prod+3)^(0+128)
  9764     0271  0833               	movf	(??___flmul+2)^(0+128),w
  9765     0272  00BF               	movwf	(___flmul@prod+2)^(0+128)
  9766     0273  0832               	movf	(??___flmul+1)^(0+128),w
  9767     0274  00BE               	movwf	(___flmul@prod+1)^(0+128)
  9768     0275  0831               	movf	??___flmul^(0+128),w
  9769     0276  00BD               	movwf	___flmul@prod^(0+128)
  9770     0277                     l5204:
  9771     0277  3001               	movlw	1
  9772     0278  07C1               	addwf	___flmul@temp^(0+128),f
  9773     0279  3000               	movlw	0
  9774     027A  3DC2               	addwfc	(___flmul@temp+1)^(0+128),f
  9775     027B                     l5206:
  9776     027B  0842               	movf	(___flmul@temp+1)^(0+128),w
  9777     027C  3A80               	xorlw	128
  9778     027D  00B1               	movwf	??___flmul^(0+128)
  9779     027E  3080               	movlw	128
  9780     027F  0231               	subwf	??___flmul^(0+128),w
  9781     0280  1D03               	skipz
  9782     0281  2A84               	goto	u5845
  9783     0282  30FF               	movlw	255
  9784     0283  0241               	subwf	___flmul@temp^(0+128),w
  9785     0284                     u5845:
  9786     0284  1C03               	skipc
  9787     0285  2A87               	goto	u5841
  9788     0286  2A88               	goto	u5840
  9789     0287                     u5841:
  9790     0287  2A92               	goto	l5210
  9791     0288                     u5840:
  9792     0288                     l5208:
  9793     0288  307F               	movlw	127
  9794     0289  0021               	movlb	1	; select bank1
  9795     028A  00C0               	movwf	(___flmul@prod+3)^(0+128)
  9796     028B  3080               	movlw	128
  9797     028C  00BF               	movwf	(___flmul@prod+2)^(0+128)
  9798     028D  3000               	movlw	0
  9799     028E  00BE               	movwf	(___flmul@prod+1)^(0+128)
  9800     028F  3000               	movlw	0
  9801     0290  00BD               	movwf	___flmul@prod^(0+128)
  9802     0291  2AC3               	goto	l1617
  9803     0292                     l5210:
  9804     0292  0021               	movlb	1	; select bank1
  9805     0293  0842               	movf	(___flmul@temp+1)^(0+128),w
  9806     0294  3A80               	xorlw	128
  9807     0295  00B1               	movwf	??___flmul^(0+128)
  9808     0296  3080               	movlw	128
  9809     0297  0231               	subwf	??___flmul^(0+128),w
  9810     0298  1D03               	skipz
  9811     0299  2A9C               	goto	u5855
  9812     029A  3001               	movlw	1
  9813     029B  0241               	subwf	___flmul@temp^(0+128),w
  9814     029C                     u5855:
  9815     029C  1803               	skipnc
  9816     029D  2A9F               	goto	u5851
  9817     029E  2AA0               	goto	u5850
  9818     029F                     u5851:
  9819     029F  2AAB               	goto	l5216
  9820     02A0                     u5850:
  9821     02A0                     l5212:
  9822     02A0  3000               	movlw	0
  9823     02A1  0021               	movlb	1	; select bank1
  9824     02A2  00C0               	movwf	(___flmul@prod+3)^(0+128)
  9825     02A3  3000               	movlw	0
  9826     02A4  00BF               	movwf	(___flmul@prod+2)^(0+128)
  9827     02A5  3000               	movlw	0
  9828     02A6  00BE               	movwf	(___flmul@prod+1)^(0+128)
  9829     02A7  3000               	movlw	0
  9830     02A8  00BD               	movwf	___flmul@prod^(0+128)
  9831     02A9                     l5214:
  9832     02A9  01B6               	clrf	___flmul@sign^(0+128)
  9833     02AA  2AC3               	goto	l1617
  9834     02AB                     l5216:
  9835     02AB  0021               	movlb	1	; select bank1
  9836     02AC  0841               	movf	___flmul@temp^(0+128),w
  9837     02AD  00BC               	movwf	___flmul@bexp^(0+128)
  9838     02AE  30FF               	movlw	255
  9839     02AF  05BD               	andwf	___flmul@prod^(0+128),f
  9840     02B0  30FF               	movlw	255
  9841     02B1  05BE               	andwf	(___flmul@prod+1)^(0+128),f
  9842     02B2  307F               	movlw	127
  9843     02B3  05BF               	andwf	(___flmul@prod+2)^(0+128),f
  9844     02B4  3000               	movlw	0
  9845     02B5  05C0               	andwf	(___flmul@prod+3)^(0+128),f
  9846     02B6                     l5218:
  9847     02B6  1C3C               	btfss	___flmul@bexp^(0+128),0
  9848     02B7  2AB9               	goto	u5861
  9849     02B8  2ABA               	goto	u5860
  9850     02B9                     u5861:
  9851     02B9  2ABB               	goto	l5222
  9852     02BA                     u5860:
  9853     02BA                     l5220:
  9854     02BA  17BF               	bsf	(___flmul@prod^(0+128)+2),7
  9855     02BB                     l5222:
  9856     02BB  083C               	movf	___flmul@bexp^(0+128),w
  9857     02BC  00B1               	movwf	??___flmul^(0+128)
  9858     02BD  3001               	movlw	1
  9859     02BE                     u5875:
  9860     02BE  36B1               	lsrf	??___flmul^(0+128),f
  9861     02BF  0B89               	decfsz	9,f
  9862     02C0  2ABE               	goto	u5875
  9863     02C1  0831               	movf	??___flmul^(0+128),w
  9864     02C2  00C0               	movwf	(___flmul@prod^(0+128)+3)
  9865     02C3                     l1617:
  9866     02C3  0836               	movf	___flmul@sign^(0+128),w
  9867     02C4  04C0               	iorwf	(___flmul@prod^(0+128)+3),f
  9868     02C5                     l5224:
  9869     02C5  0840               	movf	(___flmul@prod+3)^(0+128),w
  9870     02C6  00AC               	movwf	(?___flmul+3)^(0+128)
  9871     02C7  083F               	movf	(___flmul@prod+2)^(0+128),w
  9872     02C8  00AB               	movwf	(?___flmul+2)^(0+128)
  9873     02C9  083E               	movf	(___flmul@prod+1)^(0+128),w
  9874     02CA  00AA               	movwf	(?___flmul+1)^(0+128)
  9875     02CB  083D               	movf	___flmul@prod^(0+128),w
  9876     02CC  00A9               	movwf	?___flmul^(0+128)
  9877     02CD                     l1605:
  9878     02CD  0008               	return
  9879     02CE                     __end_of___flmul:
  9880                           
  9881                           	psect	text5
  9882     1087                     __ptext5:	
  9883 ;; *************** function __Umul8_16 *****************
  9884 ;; Defined at:
  9885 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\Umul8_16.c"
  9886 ;; Parameters:    Size  Location     Type
  9887 ;;  multiplier      1    wreg     unsigned char 
  9888 ;;  multiplicand    1    0[BANK1 ] unsigned char 
  9889 ;; Auto vars:     Size  Location     Type
  9890 ;;  multiplier      1    8[BANK1 ] unsigned char 
  9891 ;;  word_mpld       2    6[BANK1 ] unsigned short 
  9892 ;;  product         2    4[BANK1 ] unsigned short 
  9893 ;; Return value:  Size  Location     Type
  9894 ;;                  2    0[BANK1 ] unsigned int 
  9895 ;; Registers used:
  9896 ;;		wreg, status,2, status,0
  9897 ;; Tracked objects:
  9898 ;;		On entry : 0/0
  9899 ;;		On exit  : 0/0
  9900 ;;		Unchanged: 0/0
  9901 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9902 ;;      Params:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0
  9903 ;;      Locals:         0       0       5       0       0       0       0       0       0       0       0       0       
      +0       0
  9904 ;;      Temps:          0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0
  9905 ;;      Totals:         0       0       9       0       0       0       0       0       0       0       0       0       
      +0       0
  9906 ;;Total ram usage:        9 bytes
  9907 ;; Hardware stack levels used: 1
  9908 ;; Hardware stack levels required when called: 5
  9909 ;; This function calls:
  9910 ;;		Nothing
  9911 ;; This function is called by:
  9912 ;;		___flmul
  9913 ;; This function uses a non-reentrant model
  9914 ;;
  9915                           
  9916     1087                     __Umul8_16:	
  9917                           ;psect for function __Umul8_16
  9918                           
  9919                           
  9920                           ;incstack = 0
  9921                           ; Regs used in __Umul8_16: [wreg+status,2+status,0]
  9922                           ;__Umul8_16@multiplier stored from wreg
  9923     1087  0021               	movlb	1	; select bank1
  9924     1088  00A8               	movwf	__Umul8_16@multiplier^(0+128)
  9925     1089                     l4598:
  9926     1089  01A4               	clrf	__Umul8_16@product^(0+128)
  9927     108A  01A5               	clrf	(__Umul8_16@product+1)^(0+128)
  9928     108B                     l4600:
  9929     108B  0820               	movf	__Umul8_16@multiplicand^(0+128),w
  9930     108C  00A2               	movwf	??__Umul8_16^(0+128)
  9931     108D  01A3               	clrf	(??__Umul8_16^(0+128)+1)
  9932     108E  0822               	movf	??__Umul8_16^(0+128),w
  9933     108F  00A6               	movwf	__Umul8_16@word_mpld^(0+128)
  9934     1090  0823               	movf	(??__Umul8_16+1)^(0+128),w
  9935     1091  00A7               	movwf	(__Umul8_16@word_mpld+1)^(0+128)
  9936     1092                     l4602:
  9937     1092  1C28               	btfss	__Umul8_16@multiplier^(0+128),0
  9938     1093  2895               	goto	u4601
  9939     1094  2896               	goto	u4600
  9940     1095                     u4601:
  9941     1095  289A               	goto	l1624
  9942     1096                     u4600:
  9943     1096                     l4604:
  9944     1096  0826               	movf	__Umul8_16@word_mpld^(0+128),w
  9945     1097  07A4               	addwf	__Umul8_16@product^(0+128),f
  9946     1098  0827               	movf	(__Umul8_16@word_mpld+1)^(0+128),w
  9947     1099  3DA5               	addwfc	(__Umul8_16@product+1)^(0+128),f
  9948     109A                     l1624:
  9949     109A  3001               	movlw	1
  9950     109B                     u4615:
  9951     109B  35A6               	lslf	__Umul8_16@word_mpld^(0+128),f
  9952     109C  0DA7               	rlf	(__Umul8_16@word_mpld+1)^(0+128),f
  9953     109D  0B89               	decfsz	9,f
  9954     109E  289B               	goto	u4615
  9955     109F  1003               	clrc
  9956     10A0  0CA8               	rrf	__Umul8_16@multiplier^(0+128),f
  9957     10A1                     l4606:
  9958     10A1  0828               	movf	__Umul8_16@multiplier^(0+128),w
  9959     10A2  1D03               	btfss	3,2
  9960     10A3  28A5               	goto	u4621
  9961     10A4  28A6               	goto	u4620
  9962     10A5                     u4621:
  9963     10A5  2892               	goto	l4602
  9964     10A6                     u4620:
  9965     10A6                     l4608:
  9966     10A6  0825               	movf	(__Umul8_16@product+1)^(0+128),w
  9967     10A7  00A1               	movwf	(?__Umul8_16+1)^(0+128)
  9968     10A8  0824               	movf	__Umul8_16@product^(0+128),w
  9969     10A9  00A0               	movwf	?__Umul8_16^(0+128)
  9970     10AA                     l1626:
  9971     10AA  0008               	return
  9972     10AB                     __end_of__Umul8_16:
  9973                           
  9974                           	psect	text6
  9975     0C50                     __ptext6:	
  9976 ;; *************** function ___fldiv *****************
  9977 ;; Defined at:
  9978 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\sprcdiv.c"
  9979 ;; Parameters:    Size  Location     Type
  9980 ;;  a               4    0[BANK1 ] unsigned int 
  9981 ;;  b               4    4[BANK1 ] unsigned int 
  9982 ;; Auto vars:     Size  Location     Type
  9983 ;;  grs             4   20[BANK1 ] unsigned long 
  9984 ;;  rem             4   13[BANK1 ] unsigned long 
  9985 ;;  new_exp         2   18[BANK1 ] short 
  9986 ;;  aexp            1   25[BANK1 ] unsigned char 
  9987 ;;  bexp            1   24[BANK1 ] unsigned char 
  9988 ;;  sign            1   17[BANK1 ] unsigned char 
  9989 ;; Return value:  Size  Location     Type
  9990 ;;                  4    0[BANK1 ] unsigned char 
  9991 ;; Registers used:
  9992 ;;		wreg, status,2, status,0
  9993 ;; Tracked objects:
  9994 ;;		On entry : 0/0
  9995 ;;		On exit  : 0/0
  9996 ;;		Unchanged: 0/0
  9997 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9998 ;;      Params:         0       0       8       0       0       0       0       0       0       0       0       0       
      +0       0
  9999 ;;      Locals:         0       0      13       0       0       0       0       0       0       0       0       0       
      +0       0
 10000 ;;      Temps:          0       0       5       0       0       0       0       0       0       0       0       0       
      +0       0
 10001 ;;      Totals:         0       0      26       0       0       0       0       0       0       0       0       0       
      +0       0
 10002 ;;Total ram usage:       26 bytes
 10003 ;; Hardware stack levels used: 1
 10004 ;; Hardware stack levels required when called: 5
 10005 ;; This function calls:
 10006 ;;		Nothing
 10007 ;; This function is called by:
 10008 ;;		_str2float
 10009 ;; This function uses a non-reentrant model
 10010 ;;
 10011                           
 10012     0C50                     ___fldiv:	
 10013                           ;psect for function ___fldiv
 10014                           
 10015     0C50                     l4948:	
 10016                           ;incstack = 0
 10017                           ; Regs used in ___fldiv: [wreg+status,2+status,0]
 10018                           
 10019     0C50  0021               	movlb	1	; select bank1
 10020     0C51  0827               	movf	(___fldiv@b^(0+128)+3),w
 10021     0C52  3980               	andlw	128
 10022     0C53  00B1               	movwf	___fldiv@sign^(0+128)
 10023     0C54                     l4950:
 10024     0C54  3527               	lslf	(___fldiv@b^(0+128)+3),w
 10025     0C55  00B8               	movwf	___fldiv@bexp^(0+128)
 10026     0C56                     l4952:
 10027     0C56  1FA6               	btfss	(___fldiv@b^(0+128)+2),7
 10028     0C57  2C59               	goto	u5311
 10029     0C58  2C5A               	goto	u5310
 10030     0C59                     u5311:
 10031     0C59  2C5B               	goto	l4956
 10032     0C5A                     u5310:
 10033     0C5A                     l4954:
 10034     0C5A  1438               	bsf	___fldiv@bexp^(0+128),0
 10035     0C5B                     l4956:
 10036     0C5B  0838               	movf	___fldiv@bexp^(0+128),w
 10037     0C5C  1903               	btfsc	3,2
 10038     0C5D  2C5F               	goto	u5321
 10039     0C5E  2C60               	goto	u5320
 10040     0C5F                     u5321:
 10041     0C5F  2C70               	goto	l4966
 10042     0C60                     u5320:
 10043     0C60                     l4958:
 10044     0C60  0A38               	incf	___fldiv@bexp^(0+128),w
 10045     0C61  1D03               	btfss	3,2
 10046     0C62  2C64               	goto	u5331
 10047     0C63  2C65               	goto	u5330
 10048     0C64                     u5331:
 10049     0C64  2C6D               	goto	l4962
 10050     0C65                     u5330:
 10051     0C65                     l4960:
 10052     0C65  3000               	movlw	0
 10053     0C66  00A7               	movwf	(___fldiv@b+3)^(0+128)
 10054     0C67  3000               	movlw	0
 10055     0C68  00A6               	movwf	(___fldiv@b+2)^(0+128)
 10056     0C69  3000               	movlw	0
 10057     0C6A  00A5               	movwf	(___fldiv@b+1)^(0+128)
 10058     0C6B  3000               	movlw	0
 10059     0C6C  00A4               	movwf	___fldiv@b^(0+128)
 10060     0C6D                     l4962:
 10061     0C6D  17A6               	bsf	(___fldiv@b^(0+128)+2),7
 10062     0C6E                     l4964:
 10063     0C6E  01A7               	clrf	(___fldiv@b^(0+128)+3)
 10064     0C6F  2C78               	goto	l4968
 10065     0C70                     l4966:
 10066     0C70  3000               	movlw	0
 10067     0C71  00A7               	movwf	(___fldiv@b+3)^(0+128)
 10068     0C72  3000               	movlw	0
 10069     0C73  00A6               	movwf	(___fldiv@b+2)^(0+128)
 10070     0C74  3000               	movlw	0
 10071     0C75  00A5               	movwf	(___fldiv@b+1)^(0+128)
 10072     0C76  3000               	movlw	0
 10073     0C77  00A4               	movwf	___fldiv@b^(0+128)
 10074     0C78                     l4968:
 10075     0C78  0823               	movf	(___fldiv@a^(0+128)+3),w
 10076     0C79  3980               	andlw	128
 10077     0C7A  06B1               	xorwf	___fldiv@sign^(0+128),f
 10078     0C7B                     l4970:
 10079     0C7B  3523               	lslf	(___fldiv@a^(0+128)+3),w
 10080     0C7C  00B9               	movwf	___fldiv@aexp^(0+128)
 10081     0C7D                     l4972:
 10082     0C7D  1FA2               	btfss	(___fldiv@a^(0+128)+2),7
 10083     0C7E  2C80               	goto	u5341
 10084     0C7F  2C81               	goto	u5340
 10085     0C80                     u5341:
 10086     0C80  2C82               	goto	l4976
 10087     0C81                     u5340:
 10088     0C81                     l4974:
 10089     0C81  1439               	bsf	___fldiv@aexp^(0+128),0
 10090     0C82                     l4976:
 10091     0C82  0839               	movf	___fldiv@aexp^(0+128),w
 10092     0C83  1903               	btfsc	3,2
 10093     0C84  2C86               	goto	u5351
 10094     0C85  2C87               	goto	u5350
 10095     0C86                     u5351:
 10096     0C86  2C97               	goto	l4986
 10097     0C87                     u5350:
 10098     0C87                     l4978:
 10099     0C87  0A39               	incf	___fldiv@aexp^(0+128),w
 10100     0C88  1D03               	btfss	3,2
 10101     0C89  2C8B               	goto	u5361
 10102     0C8A  2C8C               	goto	u5360
 10103     0C8B                     u5361:
 10104     0C8B  2C94               	goto	l4982
 10105     0C8C                     u5360:
 10106     0C8C                     l4980:
 10107     0C8C  3000               	movlw	0
 10108     0C8D  00A3               	movwf	(___fldiv@a+3)^(0+128)
 10109     0C8E  3000               	movlw	0
 10110     0C8F  00A2               	movwf	(___fldiv@a+2)^(0+128)
 10111     0C90  3000               	movlw	0
 10112     0C91  00A1               	movwf	(___fldiv@a+1)^(0+128)
 10113     0C92  3000               	movlw	0
 10114     0C93  00A0               	movwf	___fldiv@a^(0+128)
 10115     0C94                     l4982:
 10116     0C94  17A2               	bsf	(___fldiv@a^(0+128)+2),7
 10117     0C95                     l4984:
 10118     0C95  01A3               	clrf	(___fldiv@a^(0+128)+3)
 10119     0C96  2C9F               	goto	l1565
 10120     0C97                     l4986:
 10121     0C97  3000               	movlw	0
 10122     0C98  00A3               	movwf	(___fldiv@a+3)^(0+128)
 10123     0C99  3000               	movlw	0
 10124     0C9A  00A2               	movwf	(___fldiv@a+2)^(0+128)
 10125     0C9B  3000               	movlw	0
 10126     0C9C  00A1               	movwf	(___fldiv@a+1)^(0+128)
 10127     0C9D  3000               	movlw	0
 10128     0C9E  00A0               	movwf	___fldiv@a^(0+128)
 10129     0C9F                     l1565:
 10130     0C9F  0823               	movf	(___fldiv@a+3)^(0+128),w
 10131     0CA0  0422               	iorwf	(___fldiv@a+2)^(0+128),w
 10132     0CA1  0421               	iorwf	(___fldiv@a+1)^(0+128),w
 10133     0CA2  0420               	iorwf	___fldiv@a^(0+128),w
 10134     0CA3  1D03               	skipz
 10135     0CA4  2CA6               	goto	u5371
 10136     0CA5  2CA7               	goto	u5370
 10137     0CA6                     u5371:
 10138     0CA6  2CBE               	goto	l4996
 10139     0CA7                     u5370:
 10140     0CA7                     l4988:
 10141     0CA7  3000               	movlw	0
 10142     0CA8  00A7               	movwf	(___fldiv@b+3)^(0+128)
 10143     0CA9  3000               	movlw	0
 10144     0CAA  00A6               	movwf	(___fldiv@b+2)^(0+128)
 10145     0CAB  3000               	movlw	0
 10146     0CAC  00A5               	movwf	(___fldiv@b+1)^(0+128)
 10147     0CAD  3000               	movlw	0
 10148     0CAE  00A4               	movwf	___fldiv@b^(0+128)
 10149     0CAF  3080               	movlw	128
 10150     0CB0  04A6               	iorwf	(___fldiv@b^(0+128)+2),f
 10151     0CB1  307F               	movlw	127
 10152     0CB2  04A7               	iorwf	((___fldiv@b+1)^(0+128)+2),f
 10153     0CB3                     l4990:
 10154     0CB3  0831               	movf	___fldiv@sign^(0+128),w
 10155     0CB4  04A7               	iorwf	(___fldiv@b^(0+128)+3),f
 10156     0CB5                     l4992:
 10157     0CB5  0827               	movf	(___fldiv@b+3)^(0+128),w
 10158     0CB6  00A3               	movwf	(?___fldiv+3)^(0+128)
 10159     0CB7  0826               	movf	(___fldiv@b+2)^(0+128),w
 10160     0CB8  00A2               	movwf	(?___fldiv+2)^(0+128)
 10161     0CB9  0825               	movf	(___fldiv@b+1)^(0+128),w
 10162     0CBA  00A1               	movwf	(?___fldiv+1)^(0+128)
 10163     0CBB  0824               	movf	___fldiv@b^(0+128),w
 10164     0CBC  00A0               	movwf	?___fldiv^(0+128)
 10165     0CBD  2DF3               	goto	l1567
 10166     0CBE                     l4996:
 10167     0CBE  0838               	movf	___fldiv@bexp^(0+128),w
 10168     0CBF  1D03               	btfss	3,2
 10169     0CC0  2CC2               	goto	u5381
 10170     0CC1  2CC3               	goto	u5380
 10171     0CC2                     u5381:
 10172     0CC2  2CCC               	goto	l5002
 10173     0CC3                     u5380:
 10174     0CC3                     l4998:
 10175     0CC3  3000               	movlw	0
 10176     0CC4  00A3               	movwf	(?___fldiv+3)^(0+128)
 10177     0CC5  3000               	movlw	0
 10178     0CC6  00A2               	movwf	(?___fldiv+2)^(0+128)
 10179     0CC7  3000               	movlw	0
 10180     0CC8  00A1               	movwf	(?___fldiv+1)^(0+128)
 10181     0CC9  3000               	movlw	0
 10182     0CCA  00A0               	movwf	?___fldiv^(0+128)
 10183     0CCB  2DF3               	goto	l1567
 10184     0CCC                     l5002:
 10185     0CCC  0838               	movf	___fldiv@bexp^(0+128),w
 10186     0CCD  00A8               	movwf	??___fldiv^(0+128)
 10187     0CCE  01A9               	clrf	(??___fldiv^(0+128)+1)
 10188     0CCF  0829               	movf	(??___fldiv+1)^(0+128),w
 10189     0CD0  00AB               	movwf	((??___fldiv+2)^(0+128)+1)
 10190     0CD1  0839               	movf	___fldiv@aexp^(0+128),w
 10191     0CD2  0228               	subwf	??___fldiv^(0+128),w
 10192     0CD3  00AA               	movwf	(??___fldiv+2)^(0+128)
 10193     0CD4  1C03               	skipc
 10194     0CD5  03AB               	decf	((??___fldiv+2)^(0+128)+1),f
 10195     0CD6  082A               	movf	(??___fldiv+2)^(0+128),w
 10196     0CD7  3E7F               	addlw	127
 10197     0CD8  00B2               	movwf	___fldiv@new_exp^(0+128)
 10198     0CD9  3000               	movlw	0
 10199     0CDA  3D2B               	addwfc	(??___fldiv+3)^(0+128),w
 10200     0CDB  00B3               	movwf	(___fldiv@new_exp+1)^(0+128)
 10201     0CDC                     l5004:
 10202     0CDC  0827               	movf	(___fldiv@b+3)^(0+128),w
 10203     0CDD  00B0               	movwf	(___fldiv@rem+3)^(0+128)
 10204     0CDE  0826               	movf	(___fldiv@b+2)^(0+128),w
 10205     0CDF  00AF               	movwf	(___fldiv@rem+2)^(0+128)
 10206     0CE0  0825               	movf	(___fldiv@b+1)^(0+128),w
 10207     0CE1  00AE               	movwf	(___fldiv@rem+1)^(0+128)
 10208     0CE2  0824               	movf	___fldiv@b^(0+128),w
 10209     0CE3  00AD               	movwf	___fldiv@rem^(0+128)
 10210     0CE4                     l5006:
 10211     0CE4  3000               	movlw	0
 10212     0CE5  00A7               	movwf	(___fldiv@b+3)^(0+128)
 10213     0CE6  3000               	movlw	0
 10214     0CE7  00A6               	movwf	(___fldiv@b+2)^(0+128)
 10215     0CE8  3000               	movlw	0
 10216     0CE9  00A5               	movwf	(___fldiv@b+1)^(0+128)
 10217     0CEA  3000               	movlw	0
 10218     0CEB  00A4               	movwf	___fldiv@b^(0+128)
 10219     0CEC                     l5008:
 10220     0CEC  3000               	movlw	0
 10221     0CED  00B7               	movwf	(___fldiv@grs+3)^(0+128)
 10222     0CEE  3000               	movlw	0
 10223     0CEF  00B6               	movwf	(___fldiv@grs+2)^(0+128)
 10224     0CF0  3000               	movlw	0
 10225     0CF1  00B5               	movwf	(___fldiv@grs+1)^(0+128)
 10226     0CF2  3000               	movlw	0
 10227     0CF3  00B4               	movwf	___fldiv@grs^(0+128)
 10228     0CF4                     l5010:
 10229     0CF4  01B9               	clrf	___fldiv@aexp^(0+128)
 10230     0CF5  2D32               	goto	l5030
 10231     0CF6                     l5012:
 10232     0CF6  0839               	movf	___fldiv@aexp^(0+128),w
 10233     0CF7  1903               	btfsc	3,2
 10234     0CF8  2CFA               	goto	u5391
 10235     0CF9  2CFB               	goto	u5390
 10236     0CFA                     u5391:
 10237     0CFA  2D15               	goto	l5022
 10238     0CFB                     u5390:
 10239     0CFB                     l5014:
 10240     0CFB  3001               	movlw	1
 10241     0CFC                     u5405:
 10242     0CFC  35AD               	lslf	___fldiv@rem^(0+128),f
 10243     0CFD  0DAE               	rlf	(___fldiv@rem+1)^(0+128),f
 10244     0CFE  0DAF               	rlf	(___fldiv@rem+2)^(0+128),f
 10245     0CFF  0DB0               	rlf	(___fldiv@rem+3)^(0+128),f
 10246     0D00  0B89               	decfsz	9,f
 10247     0D01  2CFC               	goto	u5405
 10248     0D02  3001               	movlw	1
 10249     0D03                     u5415:
 10250     0D03  35A4               	lslf	___fldiv@b^(0+128),f
 10251     0D04  0DA5               	rlf	(___fldiv@b+1)^(0+128),f
 10252     0D05  0DA6               	rlf	(___fldiv@b+2)^(0+128),f
 10253     0D06  0DA7               	rlf	(___fldiv@b+3)^(0+128),f
 10254     0D07  0B89               	decfsz	9,f
 10255     0D08  2D03               	goto	u5415
 10256     0D09                     l5016:
 10257     0D09  1FB7               	btfss	(___fldiv@grs+3)^(0+128),7
 10258     0D0A  2D0C               	goto	u5421
 10259     0D0B  2D0D               	goto	u5420
 10260     0D0C                     u5421:
 10261     0D0C  2D0E               	goto	l5020
 10262     0D0D                     u5420:
 10263     0D0D                     l5018:
 10264     0D0D  1424               	bsf	___fldiv@b^(0+128),0
 10265     0D0E                     l5020:
 10266     0D0E  3001               	movlw	1
 10267     0D0F                     u5435:
 10268     0D0F  35B4               	lslf	___fldiv@grs^(0+128),f
 10269     0D10  0DB5               	rlf	(___fldiv@grs+1)^(0+128),f
 10270     0D11  0DB6               	rlf	(___fldiv@grs+2)^(0+128),f
 10271     0D12  0DB7               	rlf	(___fldiv@grs+3)^(0+128),f
 10272     0D13  0B89               	decfsz	9,f
 10273     0D14  2D0F               	goto	u5435
 10274     0D15                     l5022:
 10275     0D15  0823               	movf	(___fldiv@a+3)^(0+128),w
 10276     0D16  0230               	subwf	(___fldiv@rem+3)^(0+128),w
 10277     0D17  1D03               	skipz
 10278     0D18  2D23               	goto	u5445
 10279     0D19  0822               	movf	(___fldiv@a+2)^(0+128),w
 10280     0D1A  022F               	subwf	(___fldiv@rem+2)^(0+128),w
 10281     0D1B  1D03               	skipz
 10282     0D1C  2D23               	goto	u5445
 10283     0D1D  0821               	movf	(___fldiv@a+1)^(0+128),w
 10284     0D1E  022E               	subwf	(___fldiv@rem+1)^(0+128),w
 10285     0D1F  1D03               	skipz
 10286     0D20  2D23               	goto	u5445
 10287     0D21  0820               	movf	___fldiv@a^(0+128),w
 10288     0D22  022D               	subwf	___fldiv@rem^(0+128),w
 10289     0D23                     u5445:
 10290     0D23  1C03               	skipc
 10291     0D24  2D26               	goto	u5441
 10292     0D25  2D27               	goto	u5440
 10293     0D26                     u5441:
 10294     0D26  2D30               	goto	l5028
 10295     0D27                     u5440:
 10296     0D27                     l5024:
 10297     0D27  1737               	bsf	(___fldiv@grs^(0+128)+3),6
 10298     0D28                     l5026:
 10299     0D28  0820               	movf	___fldiv@a^(0+128),w
 10300     0D29  02AD               	subwf	___fldiv@rem^(0+128),f
 10301     0D2A  0821               	movf	(___fldiv@a+1)^(0+128),w
 10302     0D2B  3BAE               	subwfb	(___fldiv@rem+1)^(0+128),f
 10303     0D2C  0822               	movf	(___fldiv@a+2)^(0+128),w
 10304     0D2D  3BAF               	subwfb	(___fldiv@rem+2)^(0+128),f
 10305     0D2E  0823               	movf	(___fldiv@a+3)^(0+128),w
 10306     0D2F  3BB0               	subwfb	(___fldiv@rem+3)^(0+128),f
 10307     0D30                     l5028:
 10308     0D30  3001               	movlw	1
 10309     0D31  07B9               	addwf	___fldiv@aexp^(0+128),f
 10310     0D32                     l5030:
 10311     0D32  301A               	movlw	26
 10312     0D33  0239               	subwf	___fldiv@aexp^(0+128),w
 10313     0D34  1C03               	skipc
 10314     0D35  2D37               	goto	u5451
 10315     0D36  2D38               	goto	u5450
 10316     0D37                     u5451:
 10317     0D37  2CF6               	goto	l5012
 10318     0D38                     u5450:
 10319     0D38                     l5032:
 10320     0D38  0830               	movf	(___fldiv@rem+3)^(0+128),w
 10321     0D39  042F               	iorwf	(___fldiv@rem+2)^(0+128),w
 10322     0D3A  042E               	iorwf	(___fldiv@rem+1)^(0+128),w
 10323     0D3B  042D               	iorwf	___fldiv@rem^(0+128),w
 10324     0D3C  1903               	skipnz
 10325     0D3D  2D3F               	goto	u5461
 10326     0D3E  2D40               	goto	u5460
 10327     0D3F                     u5461:
 10328     0D3F  2D59               	goto	l5046
 10329     0D40                     u5460:
 10330     0D40                     l5034:
 10331     0D40  1434               	bsf	___fldiv@grs^(0+128),0
 10332     0D41  2D59               	goto	l5046
 10333     0D42                     l5036:
 10334     0D42  3001               	movlw	1
 10335     0D43                     u5475:
 10336     0D43  35A4               	lslf	___fldiv@b^(0+128),f
 10337     0D44  0DA5               	rlf	(___fldiv@b+1)^(0+128),f
 10338     0D45  0DA6               	rlf	(___fldiv@b+2)^(0+128),f
 10339     0D46  0DA7               	rlf	(___fldiv@b+3)^(0+128),f
 10340     0D47  0B89               	decfsz	9,f
 10341     0D48  2D43               	goto	u5475
 10342     0D49                     l5038:
 10343     0D49  1FB7               	btfss	(___fldiv@grs+3)^(0+128),7
 10344     0D4A  2D4C               	goto	u5481
 10345     0D4B  2D4D               	goto	u5480
 10346     0D4C                     u5481:
 10347     0D4C  2D4E               	goto	l5042
 10348     0D4D                     u5480:
 10349     0D4D                     l5040:
 10350     0D4D  1424               	bsf	___fldiv@b^(0+128),0
 10351     0D4E                     l5042:
 10352     0D4E  3001               	movlw	1
 10353     0D4F                     u5495:
 10354     0D4F  35B4               	lslf	___fldiv@grs^(0+128),f
 10355     0D50  0DB5               	rlf	(___fldiv@grs+1)^(0+128),f
 10356     0D51  0DB6               	rlf	(___fldiv@grs+2)^(0+128),f
 10357     0D52  0DB7               	rlf	(___fldiv@grs+3)^(0+128),f
 10358     0D53  0B89               	decfsz	9,f
 10359     0D54  2D4F               	goto	u5495
 10360     0D55                     l5044:
 10361     0D55  30FF               	movlw	255
 10362     0D56  07B2               	addwf	___fldiv@new_exp^(0+128),f
 10363     0D57  30FF               	movlw	255
 10364     0D58  3DB3               	addwfc	(___fldiv@new_exp+1)^(0+128),f
 10365     0D59                     l5046:
 10366     0D59  1FA6               	btfss	(___fldiv@b+2)^(0+128),7
 10367     0D5A  2D5C               	goto	u5501
 10368     0D5B  2D5D               	goto	u5500
 10369     0D5C                     u5501:
 10370     0D5C  2D42               	goto	l5036
 10371     0D5D                     u5500:
 10372     0D5D                     l5048:
 10373     0D5D  01B9               	clrf	___fldiv@aexp^(0+128)
 10374     0D5E                     l5050:
 10375     0D5E  1FB7               	btfss	(___fldiv@grs+3)^(0+128),7
 10376     0D5F  2D61               	goto	u5511
 10377     0D60  2D62               	goto	u5510
 10378     0D61                     u5511:
 10379     0D61  2D7E               	goto	l5058
 10380     0D62                     u5510:
 10381     0D62                     l5052:
 10382     0D62  30FF               	movlw	255
 10383     0D63  0534               	andwf	___fldiv@grs^(0+128),w
 10384     0D64  00A8               	movwf	??___fldiv^(0+128)
 10385     0D65  30FF               	movlw	255
 10386     0D66  0535               	andwf	(___fldiv@grs+1)^(0+128),w
 10387     0D67  00A9               	movwf	(??___fldiv^(0+128)+1)
 10388     0D68  30FF               	movlw	255
 10389     0D69  0536               	andwf	(___fldiv@grs+2)^(0+128),w
 10390     0D6A  00AA               	movwf	(??___fldiv^(0+128)+2)
 10391     0D6B  307F               	movlw	127
 10392     0D6C  0537               	andwf	(___fldiv@grs+3)^(0+128),w
 10393     0D6D  00AB               	movwf	(??___fldiv^(0+128)+3)
 10394     0D6E  082B               	movf	(??___fldiv+3)^(0+128),w
 10395     0D6F  042A               	iorwf	(??___fldiv+2)^(0+128),w
 10396     0D70  0429               	iorwf	(??___fldiv+1)^(0+128),w
 10397     0D71  0428               	iorwf	??___fldiv^(0+128),w
 10398     0D72  1903               	skipnz
 10399     0D73  2D75               	goto	u5521
 10400     0D74  2D76               	goto	u5520
 10401     0D75                     u5521:
 10402     0D75  2D79               	goto	l1581
 10403     0D76                     u5520:
 10404     0D76                     l5054:
 10405     0D76  3001               	movlw	1
 10406     0D77  00B9               	movwf	___fldiv@aexp^(0+128)
 10407     0D78  2D7E               	goto	l5058
 10408     0D79                     l1581:
 10409     0D79  1C24               	btfss	___fldiv@b^(0+128),0
 10410     0D7A  2D7C               	goto	u5531
 10411     0D7B  2D7D               	goto	u5530
 10412     0D7C                     u5531:
 10413     0D7C  2D7E               	goto	l5058
 10414     0D7D                     u5530:
 10415     0D7D  2D76               	goto	l5054
 10416     0D7E                     l5058:
 10417     0D7E  0839               	movf	___fldiv@aexp^(0+128),w
 10418     0D7F  1903               	btfsc	3,2
 10419     0D80  2D82               	goto	u5541
 10420     0D81  2D83               	goto	u5540
 10421     0D82                     u5541:
 10422     0D82  2DA9               	goto	l5068
 10423     0D83                     u5540:
 10424     0D83                     l5060:
 10425     0D83  3001               	movlw	1
 10426     0D84  07A4               	addwf	___fldiv@b^(0+128),f
 10427     0D85  3000               	movlw	0
 10428     0D86  3DA5               	addwfc	(___fldiv@b+1)^(0+128),f
 10429     0D87  3DA6               	addwfc	(___fldiv@b+2)^(0+128),f
 10430     0D88  3DA7               	addwfc	(___fldiv@b+3)^(0+128),f
 10431     0D89                     l5062:
 10432     0D89  1C27               	btfss	(___fldiv@b+3)^(0+128),0
 10433     0D8A  2D8C               	goto	u5551
 10434     0D8B  2D8D               	goto	u5550
 10435     0D8C                     u5551:
 10436     0D8C  2DA9               	goto	l5068
 10437     0D8D                     u5550:
 10438     0D8D                     l5064:
 10439     0D8D  0824               	movf	___fldiv@b^(0+128),w
 10440     0D8E  00A8               	movwf	??___fldiv^(0+128)
 10441     0D8F  0825               	movf	(___fldiv@b+1)^(0+128),w
 10442     0D90  00A9               	movwf	(??___fldiv^(0+128)+1)
 10443     0D91  0826               	movf	(___fldiv@b+2)^(0+128),w
 10444     0D92  00AA               	movwf	(??___fldiv^(0+128)+2)
 10445     0D93  0827               	movf	(___fldiv@b+3)^(0+128),w
 10446     0D94  00AB               	movwf	(??___fldiv^(0+128)+3)
 10447     0D95  3001               	movlw	1
 10448     0D96  00AC               	movwf	(??___fldiv+4)^(0+128)
 10449     0D97                     u5565:
 10450     0D97  37AB               	asrf	(??___fldiv^(0+128)+3),f
 10451     0D98  0CAA               	rrf	(??___fldiv^(0+128)+2),f
 10452     0D99  0CA9               	rrf	(??___fldiv^(0+128)+1),f
 10453     0D9A  0CA8               	rrf	??___fldiv^(0+128),f
 10454     0D9B                     u5560:
 10455     0D9B  0BAC               	decfsz	(??___fldiv+4)^(0+128),f
 10456     0D9C  2D97               	goto	u5565
 10457     0D9D  082B               	movf	(??___fldiv+3)^(0+128),w
 10458     0D9E  00A7               	movwf	(___fldiv@b+3)^(0+128)
 10459     0D9F  082A               	movf	(??___fldiv+2)^(0+128),w
 10460     0DA0  00A6               	movwf	(___fldiv@b+2)^(0+128)
 10461     0DA1  0829               	movf	(??___fldiv+1)^(0+128),w
 10462     0DA2  00A5               	movwf	(___fldiv@b+1)^(0+128)
 10463     0DA3  0828               	movf	??___fldiv^(0+128),w
 10464     0DA4  00A4               	movwf	___fldiv@b^(0+128)
 10465     0DA5                     l5066:
 10466     0DA5  3001               	movlw	1
 10467     0DA6  07B2               	addwf	___fldiv@new_exp^(0+128),f
 10468     0DA7  3000               	movlw	0
 10469     0DA8  3DB3               	addwfc	(___fldiv@new_exp+1)^(0+128),f
 10470     0DA9                     l5068:
 10471     0DA9  0833               	movf	(___fldiv@new_exp+1)^(0+128),w
 10472     0DAA  3A80               	xorlw	128
 10473     0DAB  00A8               	movwf	??___fldiv^(0+128)
 10474     0DAC  3080               	movlw	128
 10475     0DAD  0228               	subwf	??___fldiv^(0+128),w
 10476     0DAE  1D03               	skipz
 10477     0DAF  2DB2               	goto	u5575
 10478     0DB0  30FF               	movlw	255
 10479     0DB1  0232               	subwf	___fldiv@new_exp^(0+128),w
 10480     0DB2                     u5575:
 10481     0DB2  1C03               	skipc
 10482     0DB3  2DB5               	goto	u5571
 10483     0DB4  2DB6               	goto	u5570
 10484     0DB5                     u5571:
 10485     0DB5  2DC3               	goto	l1586
 10486     0DB6                     u5570:
 10487     0DB6                     l5070:
 10488     0DB6  30FF               	movlw	255
 10489     0DB7  0021               	movlb	1	; select bank1
 10490     0DB8  00B2               	movwf	___fldiv@new_exp^(0+128)
 10491     0DB9  3000               	movlw	0
 10492     0DBA  00B3               	movwf	(___fldiv@new_exp^(0+128)+1)
 10493     0DBB  3000               	movlw	0
 10494     0DBC  00A7               	movwf	(___fldiv@b+3)^(0+128)
 10495     0DBD  3000               	movlw	0
 10496     0DBE  00A6               	movwf	(___fldiv@b+2)^(0+128)
 10497     0DBF  3000               	movlw	0
 10498     0DC0  00A5               	movwf	(___fldiv@b+1)^(0+128)
 10499     0DC1  3000               	movlw	0
 10500     0DC2  00A4               	movwf	___fldiv@b^(0+128)
 10501     0DC3                     l1586:
 10502     0DC3  0021               	movlb	1	; select bank1
 10503     0DC4  0833               	movf	(___fldiv@new_exp+1)^(0+128),w
 10504     0DC5  3A80               	xorlw	128
 10505     0DC6  00A8               	movwf	??___fldiv^(0+128)
 10506     0DC7  3080               	movlw	128
 10507     0DC8  0228               	subwf	??___fldiv^(0+128),w
 10508     0DC9  1D03               	skipz
 10509     0DCA  2DCD               	goto	u5585
 10510     0DCB  3001               	movlw	1
 10511     0DCC  0232               	subwf	___fldiv@new_exp^(0+128),w
 10512     0DCD                     u5585:
 10513     0DCD  1803               	skipnc
 10514     0DCE  2DD0               	goto	u5581
 10515     0DCF  2DD1               	goto	u5580
 10516     0DD0                     u5581:
 10517     0DD0  2DDD               	goto	l1587
 10518     0DD1                     u5580:
 10519     0DD1                     l5072:
 10520     0DD1  0021               	movlb	1	; select bank1
 10521     0DD2  01B2               	clrf	___fldiv@new_exp^(0+128)
 10522     0DD3  01B3               	clrf	(___fldiv@new_exp+1)^(0+128)
 10523     0DD4                     l5074:
 10524     0DD4  3000               	movlw	0
 10525     0DD5  00A7               	movwf	(___fldiv@b+3)^(0+128)
 10526     0DD6  3000               	movlw	0
 10527     0DD7  00A6               	movwf	(___fldiv@b+2)^(0+128)
 10528     0DD8  3000               	movlw	0
 10529     0DD9  00A5               	movwf	(___fldiv@b+1)^(0+128)
 10530     0DDA  3000               	movlw	0
 10531     0DDB  00A4               	movwf	___fldiv@b^(0+128)
 10532     0DDC                     l5076:
 10533     0DDC  01B1               	clrf	___fldiv@sign^(0+128)
 10534     0DDD                     l1587:
 10535     0DDD  0021               	movlb	1	; select bank1
 10536     0DDE  0832               	movf	___fldiv@new_exp^(0+128),w
 10537     0DDF  00B8               	movwf	___fldiv@bexp^(0+128)
 10538     0DE0                     l5078:
 10539     0DE0  1C38               	btfss	___fldiv@bexp^(0+128),0
 10540     0DE1  2DE3               	goto	u5591
 10541     0DE2  2DE4               	goto	u5590
 10542     0DE3                     u5591:
 10543     0DE3  2DE6               	goto	l5082
 10544     0DE4                     u5590:
 10545     0DE4                     l5080:
 10546     0DE4  17A6               	bsf	(___fldiv@b^(0+128)+2),7
 10547     0DE5  2DE8               	goto	l1589
 10548     0DE6                     l5082:
 10549     0DE6  307F               	movlw	127
 10550     0DE7  05A6               	andwf	(___fldiv@b^(0+128)+2),f
 10551     0DE8                     l1589:
 10552     0DE8  0838               	movf	___fldiv@bexp^(0+128),w
 10553     0DE9  00A8               	movwf	??___fldiv^(0+128)
 10554     0DEA  3001               	movlw	1
 10555     0DEB                     u5605:
 10556     0DEB  36A8               	lsrf	??___fldiv^(0+128),f
 10557     0DEC  0B89               	decfsz	9,f
 10558     0DED  2DEB               	goto	u5605
 10559     0DEE  0828               	movf	??___fldiv^(0+128),w
 10560     0DEF  00A7               	movwf	(___fldiv@b^(0+128)+3)
 10561     0DF0  0831               	movf	___fldiv@sign^(0+128),w
 10562     0DF1  04A7               	iorwf	(___fldiv@b^(0+128)+3),f
 10563     0DF2  2CB5               	goto	l4992
 10564     0DF3                     l1567:
 10565     0DF3  0008               	return
 10566     0DF4                     __end_of___fldiv:
 10567                           
 10568                           	psect	text7
 10569     0509                     __ptext7:	
 10570 ;; *************** function ___fladd *****************
 10571 ;; Defined at:
 10572 ;;		line 10 in file "C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\sprcadd.c"
 10573 ;; Parameters:    Size  Location     Type
 10574 ;;  b               4   14[BANK1 ] unsigned char 
 10575 ;;  a               4   18[BANK1 ] unsigned char 
 10576 ;; Auto vars:     Size  Location     Type
 10577 ;;  grs             1   33[BANK1 ] unsigned char 
 10578 ;;  bexp            1   32[BANK1 ] unsigned char 
 10579 ;;  aexp            1   31[BANK1 ] unsigned char 
 10580 ;;  signs           1   30[BANK1 ] unsigned char 
 10581 ;; Return value:  Size  Location     Type
 10582 ;;                  4   14[BANK1 ] unsigned char 
 10583 ;; Registers used:
 10584 ;;		wreg, status,2, status,0
 10585 ;; Tracked objects:
 10586 ;;		On entry : 0/0
 10587 ;;		On exit  : 0/0
 10588 ;;		Unchanged: 0/0
 10589 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10590 ;;      Params:         0       0       8       0       0       0       0       0       0       0       0       0       
      +0       0
 10591 ;;      Locals:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0
 10592 ;;      Temps:          0       0       8       0       0       0       0       0       0       0       0       0       
      +0       0
 10593 ;;      Totals:         0       0      20       0       0       0       0       0       0       0       0       0       
      +0       0
 10594 ;;Total ram usage:       20 bytes
 10595 ;; Hardware stack levels used: 1
 10596 ;; Hardware stack levels required when called: 5
 10597 ;; This function calls:
 10598 ;;		Nothing
 10599 ;; This function is called by:
 10600 ;;		_str2float
 10601 ;;		_getLedNumber
 10602 ;; This function uses a non-reentrant model
 10603 ;;
 10604                           
 10605     0509                     ___fladd:	
 10606                           ;psect for function ___fladd
 10607                           
 10608     0509                     l4752:	
 10609                           ;incstack = 0
 10610                           ; Regs used in ___fladd: [wreg+status,2+status,0]
 10611                           
 10612     0509  0021               	movlb	1	; select bank1
 10613     050A  0831               	movf	(___fladd@b^(0+128)+3),w
 10614     050B  3980               	andlw	128
 10615     050C  00BE               	movwf	___fladd@signs^(0+128)
 10616     050D                     l4754:
 10617     050D  3531               	lslf	(___fladd@b^(0+128)+3),w
 10618     050E  00C0               	movwf	___fladd@bexp^(0+128)
 10619     050F                     l4756:
 10620     050F  1FB0               	btfss	(___fladd@b^(0+128)+2),7
 10621     0510  2D12               	goto	u4851
 10622     0511  2D13               	goto	u4850
 10623     0512                     u4851:
 10624     0512  2D14               	goto	l4760
 10625     0513                     u4850:
 10626     0513                     l4758:
 10627     0513  1440               	bsf	___fladd@bexp^(0+128),0
 10628     0514                     l4760:
 10629     0514  0840               	movf	___fladd@bexp^(0+128),w
 10630     0515  1903               	btfsc	3,2
 10631     0516  2D18               	goto	u4861
 10632     0517  2D19               	goto	u4860
 10633     0518                     u4861:
 10634     0518  2D29               	goto	l4770
 10635     0519                     u4860:
 10636     0519                     l4762:
 10637     0519  0A40               	incf	___fladd@bexp^(0+128),w
 10638     051A  1D03               	btfss	3,2
 10639     051B  2D1D               	goto	u4871
 10640     051C  2D1E               	goto	u4870
 10641     051D                     u4871:
 10642     051D  2D26               	goto	l4766
 10643     051E                     u4870:
 10644     051E                     l4764:
 10645     051E  3000               	movlw	0
 10646     051F  00B1               	movwf	(___fladd@b+3)^(0+128)
 10647     0520  3000               	movlw	0
 10648     0521  00B0               	movwf	(___fladd@b+2)^(0+128)
 10649     0522  3000               	movlw	0
 10650     0523  00AF               	movwf	(___fladd@b+1)^(0+128)
 10651     0524  3000               	movlw	0
 10652     0525  00AE               	movwf	___fladd@b^(0+128)
 10653     0526                     l4766:
 10654     0526  17B0               	bsf	(___fladd@b^(0+128)+2),7
 10655     0527                     l4768:
 10656     0527  01B1               	clrf	(___fladd@b^(0+128)+3)
 10657     0528  2D31               	goto	l4772
 10658     0529                     l4770:
 10659     0529  3000               	movlw	0
 10660     052A  00B1               	movwf	(___fladd@b+3)^(0+128)
 10661     052B  3000               	movlw	0
 10662     052C  00B0               	movwf	(___fladd@b+2)^(0+128)
 10663     052D  3000               	movlw	0
 10664     052E  00AF               	movwf	(___fladd@b+1)^(0+128)
 10665     052F  3000               	movlw	0
 10666     0530  00AE               	movwf	___fladd@b^(0+128)
 10667     0531                     l4772:
 10668     0531  0835               	movf	(___fladd@a^(0+128)+3),w
 10669     0532  3980               	andlw	128
 10670     0533  00BF               	movwf	___fladd@aexp^(0+128)
 10671     0534                     l4774:
 10672     0534  083F               	movf	___fladd@aexp^(0+128),w
 10673     0535  063E               	xorwf	___fladd@signs^(0+128),w
 10674     0536  1903               	skipnz
 10675     0537  2D39               	goto	u4881
 10676     0538  2D3A               	goto	u4880
 10677     0539                     u4881:
 10678     0539  2D3B               	goto	l4778
 10679     053A                     u4880:
 10680     053A                     l4776:
 10681     053A  173E               	bsf	___fladd@signs^(0+128),6
 10682     053B                     l4778:
 10683     053B  3535               	lslf	(___fladd@a^(0+128)+3),w
 10684     053C  00BF               	movwf	___fladd@aexp^(0+128)
 10685     053D                     l4780:
 10686     053D  1FB4               	btfss	(___fladd@a^(0+128)+2),7
 10687     053E  2D40               	goto	u4891
 10688     053F  2D41               	goto	u4890
 10689     0540                     u4891:
 10690     0540  2D42               	goto	l4784
 10691     0541                     u4890:
 10692     0541                     l4782:
 10693     0541  143F               	bsf	___fladd@aexp^(0+128),0
 10694     0542                     l4784:
 10695     0542  083F               	movf	___fladd@aexp^(0+128),w
 10696     0543  1903               	btfsc	3,2
 10697     0544  2D46               	goto	u4901
 10698     0545  2D47               	goto	u4900
 10699     0546                     u4901:
 10700     0546  2D57               	goto	l4794
 10701     0547                     u4900:
 10702     0547                     l4786:
 10703     0547  0A3F               	incf	___fladd@aexp^(0+128),w
 10704     0548  1D03               	btfss	3,2
 10705     0549  2D4B               	goto	u4911
 10706     054A  2D4C               	goto	u4910
 10707     054B                     u4911:
 10708     054B  2D54               	goto	l4790
 10709     054C                     u4910:
 10710     054C                     l4788:
 10711     054C  3000               	movlw	0
 10712     054D  00B5               	movwf	(___fladd@a+3)^(0+128)
 10713     054E  3000               	movlw	0
 10714     054F  00B4               	movwf	(___fladd@a+2)^(0+128)
 10715     0550  3000               	movlw	0
 10716     0551  00B3               	movwf	(___fladd@a+1)^(0+128)
 10717     0552  3000               	movlw	0
 10718     0553  00B2               	movwf	___fladd@a^(0+128)
 10719     0554                     l4790:
 10720     0554  17B4               	bsf	(___fladd@a^(0+128)+2),7
 10721     0555                     l4792:
 10722     0555  01B5               	clrf	(___fladd@a^(0+128)+3)
 10723     0556  2D5F               	goto	l1509
 10724     0557                     l4794:
 10725     0557  3000               	movlw	0
 10726     0558  00B5               	movwf	(___fladd@a+3)^(0+128)
 10727     0559  3000               	movlw	0
 10728     055A  00B4               	movwf	(___fladd@a+2)^(0+128)
 10729     055B  3000               	movlw	0
 10730     055C  00B3               	movwf	(___fladd@a+1)^(0+128)
 10731     055D  3000               	movlw	0
 10732     055E  00B2               	movwf	___fladd@a^(0+128)
 10733     055F                     l1509:
 10734     055F  0840               	movf	___fladd@bexp^(0+128),w
 10735     0560  023F               	subwf	___fladd@aexp^(0+128),w
 10736     0561  1803               	skipnc
 10737     0562  2D64               	goto	u4921
 10738     0563  2D65               	goto	u4920
 10739     0564                     u4921:
 10740     0564  2D89               	goto	l4830
 10741     0565                     u4920:
 10742     0565                     l4796:
 10743     0565  1F3E               	btfss	___fladd@signs^(0+128),6
 10744     0566  2D68               	goto	u4931
 10745     0567  2D69               	goto	u4930
 10746     0568                     u4931:
 10747     0568  2D6B               	goto	l4800
 10748     0569                     u4930:
 10749     0569                     l4798:
 10750     0569  3080               	movlw	128
 10751     056A  06BE               	xorwf	___fladd@signs^(0+128),f
 10752     056B                     l4800:
 10753     056B  0840               	movf	___fladd@bexp^(0+128),w
 10754     056C  00C1               	movwf	___fladd@grs^(0+128)
 10755     056D                     l4802:
 10756     056D  083F               	movf	___fladd@aexp^(0+128),w
 10757     056E  00C0               	movwf	___fladd@bexp^(0+128)
 10758     056F                     l4804:
 10759     056F  0841               	movf	___fladd@grs^(0+128),w
 10760     0570  00BF               	movwf	___fladd@aexp^(0+128)
 10761     0571                     l4806:
 10762     0571  082E               	movf	___fladd@b^(0+128),w
 10763     0572  00C1               	movwf	___fladd@grs^(0+128)
 10764     0573                     l4808:
 10765     0573  0832               	movf	___fladd@a^(0+128),w
 10766     0574  00AE               	movwf	___fladd@b^(0+128)
 10767     0575                     l4810:
 10768     0575  0841               	movf	___fladd@grs^(0+128),w
 10769     0576  00B2               	movwf	___fladd@a^(0+128)
 10770     0577                     l4812:
 10771     0577  082F               	movf	(___fladd@b^(0+128)+1),w
 10772     0578  00C1               	movwf	___fladd@grs^(0+128)
 10773     0579                     l4814:
 10774     0579  0833               	movf	(___fladd@a^(0+128)+1),w
 10775     057A  00AF               	movwf	(___fladd@b^(0+128)+1)
 10776     057B                     l4816:
 10777     057B  0841               	movf	___fladd@grs^(0+128),w
 10778     057C  00B3               	movwf	(___fladd@a^(0+128)+1)
 10779     057D                     l4818:
 10780     057D  0830               	movf	(___fladd@b^(0+128)+2),w
 10781     057E  00C1               	movwf	___fladd@grs^(0+128)
 10782     057F                     l4820:
 10783     057F  0834               	movf	(___fladd@a^(0+128)+2),w
 10784     0580  00B0               	movwf	(___fladd@b^(0+128)+2)
 10785     0581                     l4822:
 10786     0581  0841               	movf	___fladd@grs^(0+128),w
 10787     0582  00B4               	movwf	(___fladd@a^(0+128)+2)
 10788     0583                     l4824:
 10789     0583  0831               	movf	(___fladd@b^(0+128)+3),w
 10790     0584  00C1               	movwf	___fladd@grs^(0+128)
 10791     0585                     l4826:
 10792     0585  0835               	movf	(___fladd@a^(0+128)+3),w
 10793     0586  00B1               	movwf	(___fladd@b^(0+128)+3)
 10794     0587                     l4828:
 10795     0587  0841               	movf	___fladd@grs^(0+128),w
 10796     0588  00B5               	movwf	(___fladd@a^(0+128)+3)
 10797     0589                     l4830:
 10798     0589  01C1               	clrf	___fladd@grs^(0+128)
 10799     058A                     l4832:
 10800     058A  083F               	movf	___fladd@aexp^(0+128),w
 10801     058B  00B6               	movwf	??___fladd^(0+128)
 10802     058C  01B7               	clrf	(??___fladd^(0+128)+1)
 10803     058D  0837               	movf	(??___fladd+1)^(0+128),w
 10804     058E  00B9               	movwf	((??___fladd+2)^(0+128)+1)
 10805     058F  0840               	movf	___fladd@bexp^(0+128),w
 10806     0590  0236               	subwf	??___fladd^(0+128),w
 10807     0591  00B8               	movwf	(??___fladd+2)^(0+128)
 10808     0592  1C03               	skipc
 10809     0593  03B9               	decf	((??___fladd+2)^(0+128)+1),f
 10810     0594  0839               	movf	(??___fladd+3)^(0+128),w
 10811     0595  3A80               	xorlw	128
 10812     0596  00BA               	movwf	(??___fladd+4)^(0+128)
 10813     0597  3080               	movlw	128
 10814     0598  023A               	subwf	(??___fladd+4)^(0+128),w
 10815     0599  1D03               	skipz
 10816     059A  2D9D               	goto	u4945
 10817     059B  301A               	movlw	26
 10818     059C  0238               	subwf	(??___fladd+2)^(0+128),w
 10819     059D                     u4945:
 10820     059D  1C03               	skipc
 10821     059E  2DA0               	goto	u4941
 10822     059F  2DA1               	goto	u4940
 10823     05A0                     u4941:
 10824     05A0  2DD7               	goto	l4848
 10825     05A1                     u4940:
 10826     05A1                     l4834:
 10827     05A1  0021               	movlb	1	; select bank1
 10828     05A2  0831               	movf	(___fladd@b+3)^(0+128),w
 10829     05A3  0430               	iorwf	(___fladd@b+2)^(0+128),w
 10830     05A4  042F               	iorwf	(___fladd@b+1)^(0+128),w
 10831     05A5  042E               	iorwf	___fladd@b^(0+128),w
 10832     05A6  1D03               	skipz
 10833     05A7  2DA9               	goto	u4951
 10834     05A8  2DAB               	goto	u4950
 10835     05A9                     u4951:
 10836     05A9  3001               	movlw	1
 10837     05AA  2DAC               	goto	u4960
 10838     05AB                     u4950:
 10839     05AB  3000               	movlw	0
 10840     05AC                     u4960:
 10841     05AC  00C1               	movwf	___fladd@grs^(0+128)
 10842     05AD  3000               	movlw	0
 10843     05AE  00B1               	movwf	(___fladd@b+3)^(0+128)
 10844     05AF  3000               	movlw	0
 10845     05B0  00B0               	movwf	(___fladd@b+2)^(0+128)
 10846     05B1  3000               	movlw	0
 10847     05B2  00AF               	movwf	(___fladd@b+1)^(0+128)
 10848     05B3  3000               	movlw	0
 10849     05B4  00AE               	movwf	___fladd@b^(0+128)
 10850     05B5  083F               	movf	___fladd@aexp^(0+128),w
 10851     05B6  00C0               	movwf	___fladd@bexp^(0+128)
 10852     05B7  2DDE               	goto	l1513
 10853     05B8                     l1515:
 10854     05B8  1C41               	btfss	___fladd@grs^(0+128),0
 10855     05B9  2DBB               	goto	u4971
 10856     05BA  2DBC               	goto	u4970
 10857     05BB                     u4971:
 10858     05BB  2DC6               	goto	l4838
 10859     05BC                     u4970:
 10860     05BC                     l4836:
 10861     05BC  0841               	movf	___fladd@grs^(0+128),w
 10862     05BD  00B6               	movwf	??___fladd^(0+128)
 10863     05BE  3001               	movlw	1
 10864     05BF                     u4985:
 10865     05BF  36B6               	lsrf	??___fladd^(0+128),f
 10866     05C0  0B89               	decfsz	9,f
 10867     05C1  2DBF               	goto	u4985
 10868     05C2  0836               	movf	??___fladd^(0+128),w
 10869     05C3  3801               	iorlw	1
 10870     05C4  00C1               	movwf	___fladd@grs^(0+128)
 10871     05C5  2DC8               	goto	l4840
 10872     05C6                     l4838:
 10873     05C6  1003               	clrc
 10874     05C7  0CC1               	rrf	___fladd@grs^(0+128),f
 10875     05C8                     l4840:
 10876     05C8  1C2E               	btfss	___fladd@b^(0+128),0
 10877     05C9  2DCB               	goto	u4991
 10878     05CA  2DCC               	goto	u4990
 10879     05CB                     u4991:
 10880     05CB  2DCD               	goto	l4844
 10881     05CC                     u4990:
 10882     05CC                     l4842:
 10883     05CC  17C1               	bsf	___fladd@grs^(0+128),7
 10884     05CD                     l4844:
 10885     05CD  3001               	movlw	1
 10886     05CE  00B6               	movwf	??___fladd^(0+128)
 10887     05CF                     u5005:
 10888     05CF  37B1               	asrf	(___fladd@b+3)^(0+128),f
 10889     05D0  0CB0               	rrf	(___fladd@b+2)^(0+128),f
 10890     05D1  0CAF               	rrf	(___fladd@b+1)^(0+128),f
 10891     05D2  0CAE               	rrf	___fladd@b^(0+128),f
 10892     05D3  0BB6               	decfsz	(??___fladd^(0+128))& (0+127),f
 10893     05D4  2DCF               	goto	u5005
 10894     05D5                     l4846:
 10895     05D5  3001               	movlw	1
 10896     05D6  07C0               	addwf	___fladd@bexp^(0+128),f
 10897     05D7                     l4848:
 10898     05D7  0021               	movlb	1	; select bank1
 10899     05D8  083F               	movf	___fladd@aexp^(0+128),w
 10900     05D9  0240               	subwf	___fladd@bexp^(0+128),w
 10901     05DA  1C03               	skipc
 10902     05DB  2DDD               	goto	u5011
 10903     05DC  2DDE               	goto	u5010
 10904     05DD                     u5011:
 10905     05DD  2DB8               	goto	l1515
 10906     05DE                     u5010:
 10907     05DE                     l1513:
 10908     05DE  1B3E               	btfsc	___fladd@signs^(0+128),6
 10909     05DF  2DE1               	goto	u5021
 10910     05E0  2DE2               	goto	u5020
 10911     05E1                     u5021:
 10912     05E1  2E1C               	goto	l4874
 10913     05E2                     u5020:
 10914     05E2                     l4850:
 10915     05E2  0840               	movf	___fladd@bexp^(0+128),w
 10916     05E3  1D03               	btfss	3,2
 10917     05E4  2DE6               	goto	u5031
 10918     05E5  2DE7               	goto	u5030
 10919     05E6                     u5031:
 10920     05E6  2DF0               	goto	l4856
 10921     05E7                     u5030:
 10922     05E7                     l4852:
 10923     05E7  3000               	movlw	0
 10924     05E8  00B1               	movwf	(?___fladd+3)^(0+128)
 10925     05E9  3000               	movlw	0
 10926     05EA  00B0               	movwf	(?___fladd+2)^(0+128)
 10927     05EB  3000               	movlw	0
 10928     05EC  00AF               	movwf	(?___fladd+1)^(0+128)
 10929     05ED  3000               	movlw	0
 10930     05EE  00AE               	movwf	?___fladd^(0+128)
 10931     05EF  2F14               	goto	l1522
 10932     05F0                     l4856:
 10933     05F0  0832               	movf	___fladd@a^(0+128),w
 10934     05F1  07AE               	addwf	___fladd@b^(0+128),f
 10935     05F2  0833               	movf	(___fladd@a+1)^(0+128),w
 10936     05F3  3DAF               	addwfc	(___fladd@b+1)^(0+128),f
 10937     05F4  0834               	movf	(___fladd@a+2)^(0+128),w
 10938     05F5  3DB0               	addwfc	(___fladd@b+2)^(0+128),f
 10939     05F6  0835               	movf	(___fladd@a+3)^(0+128),w
 10940     05F7  3DB1               	addwfc	(___fladd@b+3)^(0+128),f
 10941     05F8                     l4858:
 10942     05F8  1C31               	btfss	(___fladd@b+3)^(0+128),0
 10943     05F9  2DFB               	goto	u5041
 10944     05FA  2DFC               	goto	u5040
 10945     05FB                     u5041:
 10946     05FB  2EA6               	goto	l4910
 10947     05FC                     u5040:
 10948     05FC                     l4860:
 10949     05FC  1C41               	btfss	___fladd@grs^(0+128),0
 10950     05FD  2DFF               	goto	u5051
 10951     05FE  2E00               	goto	u5050
 10952     05FF                     u5051:
 10953     05FF  2E0A               	goto	l4864
 10954     0600                     u5050:
 10955     0600                     l4862:
 10956     0600  0841               	movf	___fladd@grs^(0+128),w
 10957     0601  00B6               	movwf	??___fladd^(0+128)
 10958     0602  3001               	movlw	1
 10959     0603                     u5065:
 10960     0603  36B6               	lsrf	??___fladd^(0+128),f
 10961     0604  0B89               	decfsz	9,f
 10962     0605  2E03               	goto	u5065
 10963     0606  0836               	movf	??___fladd^(0+128),w
 10964     0607  3801               	iorlw	1
 10965     0608  00C1               	movwf	___fladd@grs^(0+128)
 10966     0609  2E0C               	goto	l4866
 10967     060A                     l4864:
 10968     060A  1003               	clrc
 10969     060B  0CC1               	rrf	___fladd@grs^(0+128),f
 10970     060C                     l4866:
 10971     060C  1C2E               	btfss	___fladd@b^(0+128),0
 10972     060D  2E0F               	goto	u5071
 10973     060E  2E10               	goto	u5070
 10974     060F                     u5071:
 10975     060F  2E11               	goto	l4870
 10976     0610                     u5070:
 10977     0610                     l4868:
 10978     0610  17C1               	bsf	___fladd@grs^(0+128),7
 10979     0611                     l4870:
 10980     0611  3001               	movlw	1
 10981     0612  00B6               	movwf	??___fladd^(0+128)
 10982     0613                     u5085:
 10983     0613  37B1               	asrf	(___fladd@b+3)^(0+128),f
 10984     0614  0CB0               	rrf	(___fladd@b+2)^(0+128),f
 10985     0615  0CAF               	rrf	(___fladd@b+1)^(0+128),f
 10986     0616  0CAE               	rrf	___fladd@b^(0+128),f
 10987     0617  0BB6               	decfsz	(??___fladd^(0+128))& (0+127),f
 10988     0618  2E13               	goto	u5085
 10989     0619                     l4872:
 10990     0619  3001               	movlw	1
 10991     061A  07C0               	addwf	___fladd@bexp^(0+128),f
 10992     061B  2EA6               	goto	l4910
 10993     061C                     l4874:
 10994     061C  0831               	movf	(___fladd@b+3)^(0+128),w
 10995     061D  3A80               	xorlw	128
 10996     061E  00B6               	movwf	??___fladd^(0+128)
 10997     061F  0835               	movf	(___fladd@a+3)^(0+128),w
 10998     0620  3A80               	xorlw	128
 10999     0621  0236               	subwf	??___fladd^(0+128),w
 11000     0622  1D03               	skipz
 11001     0623  2E2E               	goto	u5093
 11002     0624  0834               	movf	(___fladd@a+2)^(0+128),w
 11003     0625  0230               	subwf	(___fladd@b+2)^(0+128),w
 11004     0626  1D03               	skipz
 11005     0627  2E2E               	goto	u5093
 11006     0628  0833               	movf	(___fladd@a+1)^(0+128),w
 11007     0629  022F               	subwf	(___fladd@b+1)^(0+128),w
 11008     062A  1D03               	skipz
 11009     062B  2E2E               	goto	u5093
 11010     062C  0832               	movf	___fladd@a^(0+128),w
 11011     062D  022E               	subwf	___fladd@b^(0+128),w
 11012     062E                     u5093:
 11013     062E  1803               	skipnc
 11014     062F  2E31               	goto	u5091
 11015     0630  2E32               	goto	u5090
 11016     0631                     u5091:
 11017     0631  2E67               	goto	l4886
 11018     0632                     u5090:
 11019     0632                     l4876:
 11020     0632  30FF               	movlw	255
 11021     0633  00B6               	movwf	??___fladd^(0+128)
 11022     0634  30FF               	movlw	255
 11023     0635  00B7               	movwf	(??___fladd^(0+128)+1)
 11024     0636  30FF               	movlw	255
 11025     0637  00B8               	movwf	(??___fladd^(0+128)+2)
 11026     0638  30FF               	movlw	255
 11027     0639  00B9               	movwf	(??___fladd^(0+128)+3)
 11028     063A  082E               	movf	___fladd@b^(0+128),w
 11029     063B  0232               	subwf	___fladd@a^(0+128),w
 11030     063C  00BA               	movwf	(??___fladd+4)^(0+128)
 11031     063D  082F               	movf	(___fladd@b+1)^(0+128),w
 11032     063E  3B33               	subwfb	(___fladd@a+1)^(0+128),w
 11033     063F  00BB               	movwf	((??___fladd+4)^(0+128)+1)
 11034     0640  0830               	movf	(___fladd@b+2)^(0+128),w
 11035     0641  3B34               	subwfb	(___fladd@a+2)^(0+128),w
 11036     0642  00BC               	movwf	((??___fladd+4)^(0+128)+2)
 11037     0643  0831               	movf	(___fladd@b+3)^(0+128),w
 11038     0644  3B35               	subwfb	(___fladd@a+3)^(0+128),w
 11039     0645  00BD               	movwf	((??___fladd+4)^(0+128)+3)
 11040     0646  083A               	movf	(??___fladd+4)^(0+128),w
 11041     0647  07B6               	addwf	??___fladd^(0+128),f
 11042     0648  083B               	movf	(??___fladd+5)^(0+128),w
 11043     0649  3DB7               	addwfc	(??___fladd^(0+128)+1),f
 11044     064A  083C               	movf	(??___fladd+6)^(0+128),w
 11045     064B  3DB8               	addwfc	(??___fladd^(0+128)+2),f
 11046     064C  083D               	movf	(??___fladd+7)^(0+128),w
 11047     064D  3DB9               	addwfc	(??___fladd^(0+128)+3),f
 11048     064E  0839               	movf	(??___fladd+3)^(0+128),w
 11049     064F  00B1               	movwf	(___fladd@b+3)^(0+128)
 11050     0650  0838               	movf	(??___fladd+2)^(0+128),w
 11051     0651  00B0               	movwf	(___fladd@b+2)^(0+128)
 11052     0652  0837               	movf	(??___fladd+1)^(0+128),w
 11053     0653  00AF               	movwf	(___fladd@b+1)^(0+128)
 11054     0654  0836               	movf	??___fladd^(0+128),w
 11055     0655  00AE               	movwf	___fladd@b^(0+128)
 11056     0656                     l4878:
 11057     0656  3080               	movlw	128
 11058     0657  06BE               	xorwf	___fladd@signs^(0+128),f
 11059     0658                     l4880:
 11060     0658  0341               	decf	___fladd@grs^(0+128),w
 11061     0659  3AFF               	xorlw	255
 11062     065A  00C1               	movwf	___fladd@grs^(0+128)
 11063     065B                     l4882:
 11064     065B  0841               	movf	___fladd@grs^(0+128),w
 11065     065C  1D03               	btfss	3,2
 11066     065D  2E5F               	goto	u5101
 11067     065E  2E60               	goto	u5100
 11068     065F                     u5101:
 11069     065F  2E6F               	goto	l1530
 11070     0660                     u5100:
 11071     0660                     l4884:
 11072     0660  3001               	movlw	1
 11073     0661  07AE               	addwf	___fladd@b^(0+128),f
 11074     0662  3000               	movlw	0
 11075     0663  3DAF               	addwfc	(___fladd@b+1)^(0+128),f
 11076     0664  3DB0               	addwfc	(___fladd@b+2)^(0+128),f
 11077     0665  3DB1               	addwfc	(___fladd@b+3)^(0+128),f
 11078     0666  2E6F               	goto	l1530
 11079     0667                     l4886:
 11080     0667  0832               	movf	___fladd@a^(0+128),w
 11081     0668  02AE               	subwf	___fladd@b^(0+128),f
 11082     0669  0833               	movf	(___fladd@a+1)^(0+128),w
 11083     066A  3BAF               	subwfb	(___fladd@b+1)^(0+128),f
 11084     066B  0834               	movf	(___fladd@a+2)^(0+128),w
 11085     066C  3BB0               	subwfb	(___fladd@b+2)^(0+128),f
 11086     066D  0835               	movf	(___fladd@a+3)^(0+128),w
 11087     066E  3BB1               	subwfb	(___fladd@b+3)^(0+128),f
 11088     066F                     l1530:
 11089     066F  0831               	movf	(___fladd@b+3)^(0+128),w
 11090     0670  0430               	iorwf	(___fladd@b+2)^(0+128),w
 11091     0671  042F               	iorwf	(___fladd@b+1)^(0+128),w
 11092     0672  042E               	iorwf	___fladd@b^(0+128),w
 11093     0673  1D03               	skipz
 11094     0674  2E76               	goto	u5111
 11095     0675  2E77               	goto	u5110
 11096     0676                     u5111:
 11097     0676  2EA2               	goto	l4908
 11098     0677                     u5110:
 11099     0677                     l4888:
 11100     0677  0841               	movf	___fladd@grs^(0+128),w
 11101     0678  1D03               	btfss	3,2
 11102     0679  2E7B               	goto	u5121
 11103     067A  2E7C               	goto	u5120
 11104     067B                     u5121:
 11105     067B  2EA2               	goto	l4908
 11106     067C                     u5120:
 11107     067C                     l4890:
 11108     067C  3000               	movlw	0
 11109     067D  00B1               	movwf	(?___fladd+3)^(0+128)
 11110     067E  3000               	movlw	0
 11111     067F  00B0               	movwf	(?___fladd+2)^(0+128)
 11112     0680  3000               	movlw	0
 11113     0681  00AF               	movwf	(?___fladd+1)^(0+128)
 11114     0682  3000               	movlw	0
 11115     0683  00AE               	movwf	?___fladd^(0+128)
 11116     0684  2F14               	goto	l1522
 11117     0685                     l4894:
 11118     0685  3001               	movlw	1
 11119     0686                     u5135:
 11120     0686  35AE               	lslf	___fladd@b^(0+128),f
 11121     0687  0DAF               	rlf	(___fladd@b+1)^(0+128),f
 11122     0688  0DB0               	rlf	(___fladd@b+2)^(0+128),f
 11123     0689  0DB1               	rlf	(___fladd@b+3)^(0+128),f
 11124     068A  0B89               	decfsz	9,f
 11125     068B  2E86               	goto	u5135
 11126     068C                     l4896:
 11127     068C  1FC1               	btfss	___fladd@grs^(0+128),7
 11128     068D  2E8F               	goto	u5141
 11129     068E  2E90               	goto	u5140
 11130     068F                     u5141:
 11131     068F  2E91               	goto	l1534
 11132     0690                     u5140:
 11133     0690                     l4898:
 11134     0690  142E               	bsf	___fladd@b^(0+128),0
 11135     0691                     l1534:
 11136     0691  1C41               	btfss	___fladd@grs^(0+128),0
 11137     0692  2E94               	goto	u5151
 11138     0693  2E95               	goto	u5150
 11139     0694                     u5151:
 11140     0694  2E99               	goto	l4902
 11141     0695                     u5150:
 11142     0695                     l4900:
 11143     0695  1403               	setc
 11144     0696  0D41               	rlf	___fladd@grs^(0+128),w
 11145     0697  00C1               	movwf	___fladd@grs^(0+128)
 11146     0698  2E9B               	goto	l4904
 11147     0699                     l4902:
 11148     0699  1003               	clrc
 11149     069A  0DC1               	rlf	___fladd@grs^(0+128),f
 11150     069B                     l4904:
 11151     069B  0840               	movf	___fladd@bexp^(0+128),w
 11152     069C  1903               	btfsc	3,2
 11153     069D  2E9F               	goto	u5161
 11154     069E  2EA0               	goto	u5160
 11155     069F                     u5161:
 11156     069F  2EA2               	goto	l4908
 11157     06A0                     u5160:
 11158     06A0                     l4906:
 11159     06A0  3001               	movlw	1
 11160     06A1  02C0               	subwf	___fladd@bexp^(0+128),f
 11161     06A2                     l4908:
 11162     06A2  1FB0               	btfss	(___fladd@b+2)^(0+128),7
 11163     06A3  2EA5               	goto	u5171
 11164     06A4  2EA6               	goto	u5170
 11165     06A5                     u5171:
 11166     06A5  2E85               	goto	l4894
 11167     06A6                     u5170:
 11168     06A6                     l4910:
 11169     06A6  01BF               	clrf	___fladd@aexp^(0+128)
 11170     06A7                     l4912:
 11171     06A7  1FC1               	btfss	___fladd@grs^(0+128),7
 11172     06A8  2EAA               	goto	u5181
 11173     06A9  2EAB               	goto	u5180
 11174     06AA                     u5181:
 11175     06AA  2EB9               	goto	l4920
 11176     06AB                     u5180:
 11177     06AB                     l4914:
 11178     06AB  0841               	movf	___fladd@grs^(0+128),w
 11179     06AC  397F               	andlw	127
 11180     06AD  1903               	btfsc	3,2
 11181     06AE  2EB0               	goto	u5191
 11182     06AF  2EB1               	goto	u5190
 11183     06B0                     u5191:
 11184     06B0  2EB4               	goto	l1540
 11185     06B1                     u5190:
 11186     06B1                     l4916:
 11187     06B1  3001               	movlw	1
 11188     06B2  00BF               	movwf	___fladd@aexp^(0+128)
 11189     06B3  2EB9               	goto	l4920
 11190     06B4                     l1540:
 11191     06B4  1C2E               	btfss	___fladd@b^(0+128),0
 11192     06B5  2EB7               	goto	u5201
 11193     06B6  2EB8               	goto	u5200
 11194     06B7                     u5201:
 11195     06B7  2EB9               	goto	l4920
 11196     06B8                     u5200:
 11197     06B8  2EB1               	goto	l4916
 11198     06B9                     l4920:
 11199     06B9  083F               	movf	___fladd@aexp^(0+128),w
 11200     06BA  1903               	btfsc	3,2
 11201     06BB  2EBD               	goto	u5211
 11202     06BC  2EBE               	goto	u5210
 11203     06BD                     u5211:
 11204     06BD  2EE7               	goto	l1543
 11205     06BE                     u5210:
 11206     06BE                     l4922:
 11207     06BE  3001               	movlw	1
 11208     06BF  07AE               	addwf	___fladd@b^(0+128),f
 11209     06C0  3000               	movlw	0
 11210     06C1  3DAF               	addwfc	(___fladd@b+1)^(0+128),f
 11211     06C2  3DB0               	addwfc	(___fladd@b+2)^(0+128),f
 11212     06C3  3DB1               	addwfc	(___fladd@b+3)^(0+128),f
 11213     06C4                     l4924:
 11214     06C4  1C31               	btfss	(___fladd@b+3)^(0+128),0
 11215     06C5  2EC7               	goto	u5221
 11216     06C6  2EC8               	goto	u5220
 11217     06C7                     u5221:
 11218     06C7  2EE7               	goto	l1543
 11219     06C8                     u5220:
 11220     06C8                     l4926:
 11221     06C8  082E               	movf	___fladd@b^(0+128),w
 11222     06C9  00B6               	movwf	??___fladd^(0+128)
 11223     06CA  082F               	movf	(___fladd@b+1)^(0+128),w
 11224     06CB  00B7               	movwf	(??___fladd^(0+128)+1)
 11225     06CC  0830               	movf	(___fladd@b+2)^(0+128),w
 11226     06CD  00B8               	movwf	(??___fladd^(0+128)+2)
 11227     06CE  0831               	movf	(___fladd@b+3)^(0+128),w
 11228     06CF  00B9               	movwf	(??___fladd^(0+128)+3)
 11229     06D0  3001               	movlw	1
 11230     06D1  00BA               	movwf	(??___fladd+4)^(0+128)
 11231     06D2                     u5235:
 11232     06D2  37B9               	asrf	(??___fladd^(0+128)+3),f
 11233     06D3  0CB8               	rrf	(??___fladd^(0+128)+2),f
 11234     06D4  0CB7               	rrf	(??___fladd^(0+128)+1),f
 11235     06D5  0CB6               	rrf	??___fladd^(0+128),f
 11236     06D6                     u5230:
 11237     06D6  0BBA               	decfsz	(??___fladd+4)^(0+128),f
 11238     06D7  2ED2               	goto	u5235
 11239     06D8  0839               	movf	(??___fladd+3)^(0+128),w
 11240     06D9  00B1               	movwf	(___fladd@b+3)^(0+128)
 11241     06DA  0838               	movf	(??___fladd+2)^(0+128),w
 11242     06DB  00B0               	movwf	(___fladd@b+2)^(0+128)
 11243     06DC  0837               	movf	(??___fladd+1)^(0+128),w
 11244     06DD  00AF               	movwf	(___fladd@b+1)^(0+128)
 11245     06DE  0836               	movf	??___fladd^(0+128),w
 11246     06DF  00AE               	movwf	___fladd@b^(0+128)
 11247     06E0  0A40               	incf	___fladd@bexp^(0+128),w
 11248     06E1  1903               	btfsc	3,2
 11249     06E2  2EE4               	goto	u5241
 11250     06E3  2EE5               	goto	u5240
 11251     06E4                     u5241:
 11252     06E4  2EE7               	goto	l1543
 11253     06E5                     u5240:
 11254     06E5                     l4928:
 11255     06E5  3001               	movlw	1
 11256     06E6  07C0               	addwf	___fladd@bexp^(0+128),f
 11257     06E7                     l1543:
 11258     06E7  0A40               	incf	___fladd@bexp^(0+128),w
 11259     06E8  1903               	btfsc	3,2
 11260     06E9  2EEB               	goto	u5251
 11261     06EA  2EEC               	goto	u5250
 11262     06EB                     u5251:
 11263     06EB  2EF1               	goto	l4932
 11264     06EC                     u5250:
 11265     06EC                     l4930:
 11266     06EC  0840               	movf	___fladd@bexp^(0+128),w
 11267     06ED  1D03               	btfss	3,2
 11268     06EE  2EF0               	goto	u5261
 11269     06EF  2EF1               	goto	u5260
 11270     06F0                     u5261:
 11271     06F0  2EFF               	goto	l4938
 11272     06F1                     u5260:
 11273     06F1                     l4932:
 11274     06F1  3000               	movlw	0
 11275     06F2  00B1               	movwf	(___fladd@b+3)^(0+128)
 11276     06F3  3000               	movlw	0
 11277     06F4  00B0               	movwf	(___fladd@b+2)^(0+128)
 11278     06F5  3000               	movlw	0
 11279     06F6  00AF               	movwf	(___fladd@b+1)^(0+128)
 11280     06F7  3000               	movlw	0
 11281     06F8  00AE               	movwf	___fladd@b^(0+128)
 11282     06F9                     l4934:
 11283     06F9  0840               	movf	___fladd@bexp^(0+128),w
 11284     06FA  1D03               	btfss	3,2
 11285     06FB  2EFD               	goto	u5271
 11286     06FC  2EFE               	goto	u5270
 11287     06FD                     u5271:
 11288     06FD  2EFF               	goto	l4938
 11289     06FE                     u5270:
 11290     06FE                     l4936:
 11291     06FE  01BE               	clrf	___fladd@signs^(0+128)
 11292     06FF                     l4938:
 11293     06FF  1C40               	btfss	___fladd@bexp^(0+128),0
 11294     0700  2F02               	goto	u5281
 11295     0701  2F03               	goto	u5280
 11296     0702                     u5281:
 11297     0702  2F05               	goto	l4942
 11298     0703                     u5280:
 11299     0703                     l4940:
 11300     0703  17B0               	bsf	(___fladd@b^(0+128)+2),7
 11301     0704  2F07               	goto	l1551
 11302     0705                     l4942:
 11303     0705  307F               	movlw	127
 11304     0706  05B0               	andwf	(___fladd@b^(0+128)+2),f
 11305     0707                     l1551:
 11306     0707  0840               	movf	___fladd@bexp^(0+128),w
 11307     0708  00B6               	movwf	??___fladd^(0+128)
 11308     0709  3001               	movlw	1
 11309     070A                     u5295:
 11310     070A  36B6               	lsrf	??___fladd^(0+128),f
 11311     070B  0B89               	decfsz	9,f
 11312     070C  2F0A               	goto	u5295
 11313     070D  0836               	movf	??___fladd^(0+128),w
 11314     070E  00B1               	movwf	(___fladd@b^(0+128)+3)
 11315     070F                     l4944:
 11316     070F  1FBE               	btfss	___fladd@signs^(0+128),7
 11317     0710  2F12               	goto	u5301
 11318     0711  2F13               	goto	u5300
 11319     0712                     u5301:
 11320     0712  2F14               	goto	l1552
 11321     0713                     u5300:
 11322     0713                     l4946:
 11323     0713  17B1               	bsf	(___fladd@b^(0+128)+3),7
 11324     0714                     l1552:
 11325     0714                     l1522:
 11326     0714  0008               	return
 11327     0715                     __end_of___fladd:
 11328                           
 11329                           	psect	text8
 11330     1EE7                     __ptext8:	
 11331 ;; *************** function _setKp *****************
 11332 ;; Defined at:
 11333 ;;		line 46 in file "controller.c"
 11334 ;; Parameters:    Size  Location     Type
 11335 ;;  new_kp          4   47[BANK1 ] float 
 11336 ;; Auto vars:     Size  Location     Type
 11337 ;;		None
 11338 ;; Return value:  Size  Location     Type
 11339 ;;                  1    wreg      void 
 11340 ;; Registers used:
 11341 ;;		wreg
 11342 ;; Tracked objects:
 11343 ;;		On entry : 0/0
 11344 ;;		On exit  : 0/0
 11345 ;;		Unchanged: 0/0
 11346 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 11347 ;;      Params:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0
 11348 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11349 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11350 ;;      Totals:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0
 11351 ;;Total ram usage:        4 bytes
 11352 ;; Hardware stack levels used: 1
 11353 ;; Hardware stack levels required when called: 5
 11354 ;; This function calls:
 11355 ;;		Nothing
 11356 ;; This function is called by:
 11357 ;;		_uartHandler
 11358 ;; This function uses a non-reentrant model
 11359 ;;
 11360                           
 11361     1EE7                     _setKp:	
 11362                           ;psect for function _setKp
 11363                           
 11364     1EE7                     l5950:	
 11365                           ;incstack = 0
 11366                           ; Regs used in _setKp: [wreg]
 11367                           
 11368     1EE7  0021               	movlb	1	; select bank1
 11369     1EE8  0852               	movf	(setKp@new_kp+3)^(0+128),w
 11370     1EE9  0022               	movlb	2	; select bank2
 11371     1EEA  00E7               	movwf	(_kp+3)^(0+256)
 11372     1EEB  0021               	movlb	1	; select bank1
 11373     1EEC  0851               	movf	(setKp@new_kp+2)^(0+128),w
 11374     1EED  0022               	movlb	2	; select bank2
 11375     1EEE  00E6               	movwf	(_kp+2)^(0+256)
 11376     1EEF  0021               	movlb	1	; select bank1
 11377     1EF0  0850               	movf	(setKp@new_kp+1)^(0+128),w
 11378     1EF1  0022               	movlb	2	; select bank2
 11379     1EF2  00E5               	movwf	(_kp+1)^(0+256)
 11380     1EF3  0021               	movlb	1	; select bank1
 11381     1EF4  084F               	movf	setKp@new_kp^(0+128),w
 11382     1EF5  0022               	movlb	2	; select bank2
 11383     1EF6  00E4               	movwf	_kp^(0+256)
 11384     1EF7                     l969:
 11385     1EF7  0008               	return
 11386     1EF8                     __end_of_setKp:
 11387                           
 11388                           	psect	text9
 11389     1ED6                     __ptext9:	
 11390 ;; *************** function _setKi *****************
 11391 ;; Defined at:
 11392 ;;		line 47 in file "controller.c"
 11393 ;; Parameters:    Size  Location     Type
 11394 ;;  new_ki          4   47[BANK1 ] float 
 11395 ;; Auto vars:     Size  Location     Type
 11396 ;;		None
 11397 ;; Return value:  Size  Location     Type
 11398 ;;                  1    wreg      void 
 11399 ;; Registers used:
 11400 ;;		wreg
 11401 ;; Tracked objects:
 11402 ;;		On entry : 0/0
 11403 ;;		On exit  : 0/0
 11404 ;;		Unchanged: 0/0
 11405 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 11406 ;;      Params:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0
 11407 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11408 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11409 ;;      Totals:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0
 11410 ;;Total ram usage:        4 bytes
 11411 ;; Hardware stack levels used: 1
 11412 ;; Hardware stack levels required when called: 5
 11413 ;; This function calls:
 11414 ;;		Nothing
 11415 ;; This function is called by:
 11416 ;;		_uartHandler
 11417 ;; This function uses a non-reentrant model
 11418 ;;
 11419                           
 11420     1ED6                     _setKi:	
 11421                           ;psect for function _setKi
 11422                           
 11423     1ED6                     l5952:	
 11424                           ;incstack = 0
 11425                           ; Regs used in _setKi: [wreg]
 11426                           
 11427     1ED6  0021               	movlb	1	; select bank1
 11428     1ED7  0852               	movf	(setKi@new_ki+3)^(0+128),w
 11429     1ED8  0022               	movlb	2	; select bank2
 11430     1ED9  00E3               	movwf	(_ki+3)^(0+256)
 11431     1EDA  0021               	movlb	1	; select bank1
 11432     1EDB  0851               	movf	(setKi@new_ki+2)^(0+128),w
 11433     1EDC  0022               	movlb	2	; select bank2
 11434     1EDD  00E2               	movwf	(_ki+2)^(0+256)
 11435     1EDE  0021               	movlb	1	; select bank1
 11436     1EDF  0850               	movf	(setKi@new_ki+1)^(0+128),w
 11437     1EE0  0022               	movlb	2	; select bank2
 11438     1EE1  00E1               	movwf	(_ki+1)^(0+256)
 11439     1EE2  0021               	movlb	1	; select bank1
 11440     1EE3  084F               	movf	setKi@new_ki^(0+128),w
 11441     1EE4  0022               	movlb	2	; select bank2
 11442     1EE5  00E0               	movwf	_ki^(0+256)
 11443     1EE6                     l972:
 11444     1EE6  0008               	return
 11445     1EE7                     __end_of_setKi:
 11446                           
 11447                           	psect	text10
 11448     13A0                     __ptext10:	
 11449 ;; *************** function _readLine *****************
 11450 ;; Defined at:
 11451 ;;		line 50 in file "UART.c"
 11452 ;; Parameters:    Size  Location     Type
 11453 ;;		None
 11454 ;; Auto vars:     Size  Location     Type
 11455 ;;		None
 11456 ;; Return value:  Size  Location     Type
 11457 ;;                  1   72[BANK1 ] PTR unsigned char 
 11458 ;; Registers used:
 11459 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 11460 ;; Tracked objects:
 11461 ;;		On entry : 0/0
 11462 ;;		On exit  : 0/0
 11463 ;;		Unchanged: 0/0
 11464 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 11465 ;;      Params:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0
 11466 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11467 ;;      Temps:          0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0
 11468 ;;      Totals:         0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0
 11469 ;;Total ram usage:        3 bytes
 11470 ;; Hardware stack levels used: 1
 11471 ;; Hardware stack levels required when called: 14
 11472 ;; This function calls:
 11473 ;;		_EUSART_IsRxReady
 11474 ;;		_EUSART_Read
 11475 ;;		_printf
 11476 ;; This function is called by:
 11477 ;;		_uartHandler
 11478 ;; This function uses a non-reentrant model
 11479 ;;
 11480                           
 11481     13A0                     _readLine:	
 11482                           ;psect for function _readLine
 11483                           
 11484     13A0                     l893:	
 11485                           ;incstack = 0
 11486                           ; Regs used in _readLine: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 11487                           ;UART.c: 51:     static uint8_t index = 0;;UART.c: 52:     while (1) {
 11488                           
 11489     13A0                     l5876:
 11490                           
 11491                           ;UART.c: 53:         if (!EUSART_IsRxReady()) {
 11492     13A0  319D  25CC  3193   	fcall	_EUSART_IsRxReady
 11493     13A3  3A00               	xorlw	0
 11494     13A4  1D03               	skipz
 11495     13A5  2BA7               	goto	u6971
 11496     13A6  2BA8               	goto	u6970
 11497     13A7                     u6971:
 11498     13A7  2BB2               	goto	l5884
 11499     13A8                     u6970:
 11500     13A8                     l5878:
 11501                           
 11502                           ;UART.c: 54:             line[index] = 0;
 11503     13A8  0020               	movlb	0	; select bank0
 11504     13A9  0866               	movf	readLine@index,w
 11505     13AA  3EC0               	addlw	(low (_line| (0+256)))& (0+255)
 11506     13AB  0086               	movwf	6
 11507     13AC  3001               	movlw	1	; select bank3/4
 11508     13AD  0087               	movwf	7
 11509     13AE  0181               	clrf	1
 11510     13AF                     l5880:
 11511                           
 11512                           ;UART.c: 55:             return line + index;
 11513     13AF  0866               	movf	readLine@index,w
 11514     13B0  3EC0               	addlw	(low (_line| (0+256)))& (0+255)
 11515     13B1  2BF8               	goto	l895
 11516     13B2                     l5884:
 11517                           
 11518                           ;UART.c: 57:         if (index >= 20 - 1) {
 11519     13B2  3013               	movlw	19
 11520     13B3  0020               	movlb	0	; select bank0
 11521     13B4  0266               	subwf	readLine@index,w
 11522     13B5  1C03               	skipc
 11523     13B6  2BB8               	goto	u6981
 11524     13B7  2BB9               	goto	u6980
 11525     13B8                     u6981:
 11526     13B8  2BD3               	goto	l5902
 11527     13B9                     u6980:
 11528     13B9  2BBD               	goto	l5890
 11529     13BA                     l5888:
 11530                           
 11531                           ;UART.c: 59:                 EUSART_Read();
 11532     13BA  319F  27E0  3193   	fcall	_EUSART_Read
 11533     13BD                     l5890:
 11534                           
 11535                           ;UART.c: 58:             while (EUSART_IsRxReady()) {
 11536     13BD  319D  25CC  3193   	fcall	_EUSART_IsRxReady
 11537     13C0  3A00               	xorlw	0
 11538     13C1  1D03               	skipz
 11539     13C2  2BC4               	goto	u6991
 11540     13C3  2BC5               	goto	u6990
 11541     13C4                     u6991:
 11542     13C4  2BBA               	goto	l5888
 11543     13C5                     u6990:
 11544     13C5                     l5892:
 11545                           
 11546                           ;UART.c: 61:             printf("input buffer overflow\r\n");
 11547     13C5  3065               	movlw	low (STR_2| (0+32768))
 11548     13C6  0021               	movlb	1	; select bank1
 11549     13C7  00E1               	movwf	printf@fmt^(0+128)
 11550     13C8  3098               	movlw	high (STR_2| (0+32768))
 11551     13C9  00E2               	movwf	(printf@fmt^(0+128)+1)
 11552     13CA  319E  2693  3193   	fcall	_printf
 11553     13CD                     l5894:
 11554                           
 11555                           ;UART.c: 62:             index = 0;
 11556     13CD  0020               	movlb	0	; select bank0
 11557     13CE  01E6               	clrf	readLine@index
 11558     13CF                     l5896:
 11559                           
 11560                           ;UART.c: 63:             line[index] = 0;
 11561     13CF  0023               	movlb	3	; select bank3
 11562     13D0  01C0               	clrf	_line^(0+384)
 11563     13D1                     l5898:
 11564                           
 11565                           ;UART.c: 64:             return line;
 11566     13D1  30C0               	movlw	(low (_line| (0+256)))& (0+255)
 11567     13D2  2BF8               	goto	l895
 11568     13D3                     l5902:
 11569                           
 11570                           ;UART.c: 67:         line[index] = EUSART_Read();
 11571     13D3  319F  27E0  3193   	fcall	_EUSART_Read
 11572     13D6  0021               	movlb	1	; select bank1
 11573     13D7  00EA               	movwf	??_readLine^(0+128)
 11574     13D8  0020               	movlb	0	; select bank0
 11575     13D9  0866               	movf	readLine@index,w
 11576     13DA  3EC0               	addlw	(low (_line| (0+256)))& (0+255)
 11577     13DB  0086               	movwf	6
 11578     13DC  3001               	movlw	1	; select bank3/4
 11579     13DD  0087               	movwf	7
 11580     13DE  0021               	movlb	1	; select bank1
 11581     13DF  086A               	movf	??_readLine^(0+128),w
 11582     13E0  0081               	movwf	1
 11583     13E1                     l5904:
 11584                           
 11585                           ;UART.c: 68:         if (line[index] == '\n') {
 11586     13E1  0020               	movlb	0	; select bank0
 11587     13E2  0866               	movf	readLine@index,w
 11588     13E3  3EC0               	addlw	(low (_line| (0+256)))& (0+255)
 11589     13E4  0086               	movwf	6
 11590     13E5  3001               	movlw	1	; select bank3/4
 11591     13E6  0087               	movwf	7
 11592     13E7  300A               	movlw	10
 11593     13E8  0601               	xorwf	1,w
 11594     13E9  1D03               	btfss	3,2
 11595     13EA  2BEC               	goto	u7001
 11596     13EB  2BED               	goto	u7000
 11597     13EC                     u7001:
 11598     13EC  2BF5               	goto	l5914
 11599     13ED                     u7000:
 11600     13ED                     l5906:
 11601                           
 11602                           ;UART.c: 69:             line[index + 1] = 0;
 11603     13ED  0866               	movf	readLine@index,w
 11604     13EE  3EC1               	addlw	(low ((_line| (0+256)+1)))& (0+255)
 11605     13EF  0086               	movwf	6
 11606     13F0  3001               	movlw	1	; select bank3/4
 11607     13F1  0087               	movwf	7
 11608     13F2  0181               	clrf	1
 11609     13F3                     l5908:
 11610                           
 11611                           ;UART.c: 70:             index = 0;
 11612     13F3  01E6               	clrf	readLine@index
 11613     13F4  2BD1               	goto	l5898
 11614     13F5                     l5914:
 11615                           
 11616                           ;UART.c: 73:         index++;
 11617     13F5  3001               	movlw	1
 11618     13F6  07E6               	addwf	readLine@index,f
 11619     13F7  2BA0               	goto	l893
 11620     13F8                     l895:
 11621     13F8  0008               	return
 11622     13F9                     __end_of_readLine:
 11623                           
 11624                           	psect	text11
 11625     1FE0                     __ptext11:	
 11626 ;; *************** function _EUSART_Read *****************
 11627 ;; Defined at:
 11628 ;;		line 288 in file "mcc_generated_files/uart/src/eusart.c"
 11629 ;; Parameters:    Size  Location     Type
 11630 ;;		None
 11631 ;; Auto vars:     Size  Location     Type
 11632 ;;  readValue       1    1[BANK1 ] unsigned char 
 11633 ;;  tempRxTail      1    0[BANK1 ] unsigned char 
 11634 ;; Return value:  Size  Location     Type
 11635 ;;                  1    wreg      unsigned char 
 11636 ;; Registers used:
 11637 ;;		wreg, fsr1l, fsr1h, status,2, status,0
 11638 ;; Tracked objects:
 11639 ;;		On entry : 0/0
 11640 ;;		On exit  : 0/0
 11641 ;;		Unchanged: 0/0
 11642 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 11643 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11644 ;;      Locals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0
 11645 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11646 ;;      Totals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0
 11647 ;;Total ram usage:        2 bytes
 11648 ;; Hardware stack levels used: 1
 11649 ;; Hardware stack levels required when called: 5
 11650 ;; This function calls:
 11651 ;;		Nothing
 11652 ;; This function is called by:
 11653 ;;		_readLine
 11654 ;;		_getch
 11655 ;; This function uses a non-reentrant model
 11656 ;;
 11657                           
 11658     1FE0                     _EUSART_Read:	
 11659                           ;psect for function _EUSART_Read
 11660                           
 11661     1FE0                     l4660:	
 11662                           ;incstack = 0
 11663                           ; Regs used in _EUSART_Read: [wreg+fsr1l+fsr1h+status,2+status,0]
 11664                           
 11665     1FE0                     l4662:
 11666                           
 11667                           ;mcc_generated_files/uart/src/eusart.c: 291:     uint8_t tempRxTail;;mcc_generated_files
      +                          /uart/src/eusart.c: 293:     readValue = eusartRxBuffer[eusartRxTail];
 11668     1FE0  0020               	movlb	0	; select bank0
 11669     1FE1  0868               	movf	_eusartRxTail,w
 11670     1FE2  3E30               	addlw	(low (_eusartRxBuffer| (0+256)))& (0+255)
 11671     1FE3  0086               	movwf	6
 11672     1FE4  3001               	movlw	1	; select bank2/3
 11673     1FE5  0087               	movwf	7
 11674     1FE6  0801               	movf	1,w
 11675     1FE7  0021               	movlb	1	; select bank1
 11676     1FE8  00A1               	movwf	EUSART_Read@readValue^(0+128)
 11677     1FE9                     l4664:
 11678                           
 11679                           ;mcc_generated_files/uart/src/eusart.c: 295:     tempRxTail = (eusartRxTail + 1U) & ((8U
      +                          ) - 1U);
 11680     1FE9  0020               	movlb	0	; select bank0
 11681     1FEA  0868               	movf	_eusartRxTail,w	;volatile
 11682     1FEB  3E01               	addlw	1
 11683     1FEC  3907               	andlw	7
 11684     1FED  0021               	movlb	1	; select bank1
 11685     1FEE  00A0               	movwf	EUSART_Read@tempRxTail^(0+128)
 11686     1FEF                     l4666:
 11687                           
 11688                           ;mcc_generated_files/uart/src/eusart.c: 297:     eusartRxTail = tempRxTail;
 11689     1FEF  0820               	movf	EUSART_Read@tempRxTail^(0+128),w
 11690     1FF0  0020               	movlb	0	; select bank0
 11691     1FF1  00E8               	movwf	_eusartRxTail	;volatile
 11692     1FF2                     l4668:
 11693                           
 11694                           ;mcc_generated_files/uart/src/eusart.c: 299:     PIE1bits.RCIE = 0;
 11695     1FF2  0021               	movlb	1	; select bank1
 11696     1FF3  1291               	bcf	17,5	;volatile
 11697     1FF4                     l4670:
 11698                           
 11699                           ;mcc_generated_files/uart/src/eusart.c: 300:     if(0U != eusartRxCount)
 11700     1FF4  0020               	movlb	0	; select bank0
 11701     1FF5  0867               	movf	_eusartRxCount,w	;volatile
 11702     1FF6  1903               	btfsc	3,2
 11703     1FF7  2FF9               	goto	u4721
 11704     1FF8  2FFA               	goto	u4720
 11705     1FF9                     u4721:
 11706     1FF9  2FFC               	goto	l4674
 11707     1FFA                     u4720:
 11708     1FFA                     l4672:
 11709                           
 11710                           ;mcc_generated_files/uart/src/eusart.c: 301:     {;mcc_generated_files/uart/src/eusart.c
      +                          : 302:         eusartRxCount--;
 11711     1FFA  3001               	movlw	1
 11712     1FFB  02E7               	subwf	_eusartRxCount,f	;volatile
 11713     1FFC                     l4674:
 11714                           
 11715                           ;mcc_generated_files/uart/src/eusart.c: 304:     PIE1bits.RCIE = 1;
 11716     1FFC  0021               	movlb	1	; select bank1
 11717     1FFD  1691               	bsf	17,5	;volatile
 11718     1FFE                     l4676:
 11719                           
 11720                           ;mcc_generated_files/uart/src/eusart.c: 305:     return readValue;
 11721     1FFE  0821               	movf	EUSART_Read@readValue^(0+128),w
 11722     1FFF                     l725:
 11723     1FFF  0008               	return
 11724     2000                     __end_of_EUSART_Read:
 11725                           
 11726                           	psect	text12
 11727     1DCC                     __ptext12:	
 11728 ;; *************** function _EUSART_IsRxReady *****************
 11729 ;; Defined at:
 11730 ;;		line 267 in file "mcc_generated_files/uart/src/eusart.c"
 11731 ;; Parameters:    Size  Location     Type
 11732 ;;		None
 11733 ;; Auto vars:     Size  Location     Type
 11734 ;;		None
 11735 ;; Return value:  Size  Location     Type
 11736 ;;                  1    wreg      _Bool 
 11737 ;; Registers used:
 11738 ;;		wreg, status,2, status,0
 11739 ;; Tracked objects:
 11740 ;;		On entry : 0/0
 11741 ;;		On exit  : 0/0
 11742 ;;		Unchanged: 0/0
 11743 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 11744 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11745 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11746 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11747 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11748 ;;Total ram usage:        0 bytes
 11749 ;; Hardware stack levels used: 1
 11750 ;; Hardware stack levels required when called: 5
 11751 ;; This function calls:
 11752 ;;		Nothing
 11753 ;; This function is called by:
 11754 ;;		_readLine
 11755 ;;		_getch
 11756 ;; This function uses a non-reentrant model
 11757 ;;
 11758                           
 11759     1DCC                     _EUSART_IsRxReady:	
 11760                           ;psect for function _EUSART_IsRxReady
 11761                           
 11762     1DCC                     l4656:	
 11763                           ;incstack = 0
 11764                           ; Regs used in _EUSART_IsRxReady: [wreg+status,2+status,0]
 11765                           
 11766                           
 11767                           ;mcc_generated_files/uart/src/eusart.c: 269:     return (eusartRxCount ? 1 : 0);
 11768     1DCC  0020               	movlb	0	; select bank0
 11769     1DCD  0867               	movf	_eusartRxCount,w	;volatile
 11770     1DCE  1D03               	btfss	3,2
 11771     1DCF  2DD1               	goto	u4701
 11772     1DD0  2DD3               	goto	u4700
 11773     1DD1                     u4701:
 11774     1DD1  3001               	movlw	1
 11775     1DD2  2DD4               	goto	u4710
 11776     1DD3                     u4700:
 11777     1DD3  3000               	movlw	0
 11778     1DD4                     u4710:
 11779     1DD4                     l712:
 11780     1DD4  0008               	return
 11781     1DD5                     __end_of_EUSART_IsRxReady:
 11782                           
 11783                           	psect	text13
 11784     080B                     __ptext13:	
 11785 ;; *************** function _atoi *****************
 11786 ;; Defined at:
 11787 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\atoi.c"
 11788 ;; Parameters:    Size  Location     Type
 11789 ;;  s               1    6[BANK1 ] PTR const unsigned char 
 11790 ;;		 -> line(20), 
 11791 ;; Auto vars:     Size  Location     Type
 11792 ;;  n               2   11[BANK1 ] int 
 11793 ;;  neg             1   10[BANK1 ] _Bool 
 11794 ;; Return value:  Size  Location     Type
 11795 ;;                  2    6[BANK1 ] int 
 11796 ;; Registers used:
 11797 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 11798 ;; Tracked objects:
 11799 ;;		On entry : 0/0
 11800 ;;		On exit  : 0/0
 11801 ;;		Unchanged: 0/0
 11802 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 11803 ;;      Params:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0
 11804 ;;      Locals:         0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0
 11805 ;;      Temps:          0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0
 11806 ;;      Totals:         0       0       7       0       0       0       0       0       0       0       0       0       
      +0       0
 11807 ;;Total ram usage:        7 bytes
 11808 ;; Hardware stack levels used: 1
 11809 ;; Hardware stack levels required when called: 6
 11810 ;; This function calls:
 11811 ;;		___wmul
 11812 ;; This function is called by:
 11813 ;;		_uartHandler
 11814 ;; This function uses a non-reentrant model
 11815 ;;
 11816                           
 11817     080B                     _atoi:	
 11818                           ;psect for function _atoi
 11819                           
 11820     080B                     l5916:	
 11821                           ;incstack = 0
 11822                           ; Regs used in _atoi: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
 11823                           
 11824     080B  0021               	movlb	1	; select bank1
 11825     080C  01AB               	clrf	atoi@n^(0+128)
 11826     080D  01AC               	clrf	(atoi@n+1)^(0+128)
 11827     080E  01AA               	clrf	atoi@neg^(0+128)
 11828     080F  2812               	goto	l5920
 11829     0810                     l5918:
 11830     0810  3001               	movlw	1
 11831     0811  07A6               	addwf	atoi@s^(0+128),f
 11832     0812                     l5920:
 11833     0812  0826               	movf	atoi@s^(0+128),w
 11834     0813  0086               	movwf	6
 11835     0814  3001               	movlw	1	; select bank2/3
 11836     0815  0087               	movwf	7
 11837     0816  3020               	movlw	32
 11838     0817  0601               	xorwf	1,w
 11839     0818  1903               	btfsc	3,2
 11840     0819  281B               	goto	u7011
 11841     081A  281C               	goto	u7010
 11842     081B                     u7011:
 11843     081B  2810               	goto	l5918
 11844     081C                     u7010:
 11845     081C                     l5922:
 11846     081C  0826               	movf	atoi@s^(0+128),w
 11847     081D  0086               	movwf	6
 11848     081E  3001               	movlw	1	; select bank2/3
 11849     081F  0087               	movwf	7
 11850     0820  30F7               	movlw	247
 11851     0821  0701               	addwf	1,w
 11852     0822  00A8               	movwf	??_atoi^(0+128)
 11853     0823  3005               	movlw	5
 11854     0824  0228               	subwf	??_atoi^(0+128),w
 11855     0825  1C03               	skipc
 11856     0826  2828               	goto	u7021
 11857     0827  2829               	goto	u7020
 11858     0828                     u7021:
 11859     0828  2810               	goto	l5918
 11860     0829                     u7020:
 11861     0829                     l5924:
 11862     0829  0826               	movf	atoi@s^(0+128),w
 11863     082A  0086               	movwf	6
 11864     082B  3001               	movlw	1	; select bank2/3
 11865     082C  0087               	movwf	7
 11866     082D  302D               	movlw	45
 11867     082E  0601               	xorwf	1,w
 11868     082F  1D03               	btfss	3,2
 11869     0830  2832               	goto	u7031
 11870     0831  2833               	goto	u7030
 11871     0832                     u7031:
 11872     0832  2838               	goto	l5930
 11873     0833                     u7030:
 11874     0833                     l5926:
 11875     0833  3001               	movlw	1
 11876     0834  00AA               	movwf	atoi@neg^(0+128)
 11877     0835                     l5928:
 11878     0835  3001               	movlw	1
 11879     0836  07A6               	addwf	atoi@s^(0+128),f
 11880     0837  2861               	goto	l5938
 11881     0838                     l5930:
 11882     0838  0826               	movf	atoi@s^(0+128),w
 11883     0839  0086               	movwf	6
 11884     083A  3001               	movlw	1	; select bank2/3
 11885     083B  0087               	movwf	7
 11886     083C  302B               	movlw	43
 11887     083D  0601               	xorwf	1,w
 11888     083E  1D03               	btfss	3,2
 11889     083F  2841               	goto	u7041
 11890     0840  2842               	goto	u7040
 11891     0841                     u7041:
 11892     0841  2861               	goto	l5938
 11893     0842                     u7040:
 11894     0842  2835               	goto	l5928
 11895     0843                     l5934:
 11896     0843  0826               	movf	atoi@s^(0+128),w
 11897     0844  0086               	movwf	6
 11898     0845  3001               	movlw	1	; select bank2/3
 11899     0846  0087               	movwf	7
 11900     0847  082C               	movf	(atoi@n+1)^(0+128),w
 11901     0848  00A1               	movwf	(___wmul@multiplier+1)^(0+128)
 11902     0849  082B               	movf	atoi@n^(0+128),w
 11903     084A  00A0               	movwf	___wmul@multiplier^(0+128)
 11904     084B  300A               	movlw	10
 11905     084C  00A2               	movwf	___wmul@multiplicand^(0+128)
 11906     084D  3000               	movlw	0
 11907     084E  00A3               	movwf	(___wmul@multiplicand^(0+128)+1)
 11908     084F  319F  27C0  3188   	fcall	___wmul
 11909     0852  0021               	movlb	1	; select bank1
 11910     0853  0821               	movf	(?___wmul+1)^(0+128),w
 11911     0854  00A9               	movwf	(??_atoi^(0+128)+1)
 11912     0855  0801               	movf	1,w
 11913     0856  0220               	subwf	?___wmul^(0+128),w
 11914     0857  00A8               	movwf	??_atoi^(0+128)
 11915     0858  1C03               	skipc
 11916     0859  03A9               	decf	(??_atoi^(0+128)+1),f
 11917     085A  0828               	movf	??_atoi^(0+128),w
 11918     085B  3E30               	addlw	48
 11919     085C  00AB               	movwf	atoi@n^(0+128)
 11920     085D  3000               	movlw	0
 11921     085E  3D29               	addwfc	(??_atoi+1)^(0+128),w
 11922     085F  00AC               	movwf	(atoi@n+1)^(0+128)
 11923     0860  2835               	goto	l5928
 11924     0861                     l5938:
 11925     0861  0826               	movf	atoi@s^(0+128),w
 11926     0862  0086               	movwf	6
 11927     0863  3001               	movlw	1	; select bank2/3
 11928     0864  0087               	movwf	7
 11929     0865  30D0               	movlw	208
 11930     0866  0701               	addwf	1,w
 11931     0867  00A8               	movwf	??_atoi^(0+128)
 11932     0868  300A               	movlw	10
 11933     0869  0228               	subwf	??_atoi^(0+128),w
 11934     086A  1C03               	skipc
 11935     086B  286D               	goto	u7051
 11936     086C  286E               	goto	u7050
 11937     086D                     u7051:
 11938     086D  2843               	goto	l5934
 11939     086E                     u7050:
 11940     086E                     l5940:
 11941     086E  082A               	movf	atoi@neg^(0+128),w
 11942     086F  1D03               	btfss	3,2
 11943     0870  2872               	goto	u7061
 11944     0871  2873               	goto	u7060
 11945     0872                     u7061:
 11946     0872  287F               	goto	l5944
 11947     0873                     u7060:
 11948     0873                     l5942:
 11949     0873  092B               	comf	atoi@n^(0+128),w
 11950     0874  00A8               	movwf	??_atoi^(0+128)
 11951     0875  092C               	comf	(atoi@n+1)^(0+128),w
 11952     0876  00A9               	movwf	(??_atoi^(0+128)+1)
 11953     0877  0AA8               	incf	??_atoi^(0+128),f
 11954     0878  1903               	skipnz
 11955     0879  0AA9               	incf	(??_atoi^(0+128)+1),f
 11956     087A  0828               	movf	??_atoi^(0+128),w
 11957     087B  00A6               	movwf	?_atoi^(0+128)
 11958     087C  0829               	movf	(??_atoi+1)^(0+128),w
 11959     087D  00A7               	movwf	(?_atoi+1)^(0+128)
 11960     087E  2883               	goto	l1680
 11961     087F                     l5944:
 11962     087F  082C               	movf	(atoi@n+1)^(0+128),w
 11963     0880  00A7               	movwf	(?_atoi+1)^(0+128)
 11964     0881  082B               	movf	atoi@n^(0+128),w
 11965     0882  00A6               	movwf	?_atoi^(0+128)
 11966     0883                     l1680:
 11967     0883  0008               	return
 11968     0884                     __end_of_atoi:
 11969                           
 11970                           	psect	text14
 11971     07CE                     __ptext14:	
 11972 ;; *************** function _printLogs *****************
 11973 ;; Defined at:
 11974 ;;		line 77 in file "UART.c"
 11975 ;; Parameters:    Size  Location     Type
 11976 ;;		None
 11977 ;; Auto vars:     Size  Location     Type
 11978 ;;		None
 11979 ;; Return value:  Size  Location     Type
 11980 ;;                  1    wreg      void 
 11981 ;; Registers used:
 11982 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 11983 ;; Tracked objects:
 11984 ;;		On entry : 0/0
 11985 ;;		On exit  : 0/0
 11986 ;;		Unchanged: 0/0
 11987 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 11988 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11989 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11990 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11991 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11992 ;;Total ram usage:        0 bytes
 11993 ;; Hardware stack levels used: 1
 11994 ;; Hardware stack levels required when called: 14
 11995 ;; This function calls:
 11996 ;;		_getCounter
 11997 ;;		_getPomphoogte
 11998 ;;		_printf
 11999 ;; This function is called by:
 12000 ;;		_main
 12001 ;; This function uses a non-reentrant model
 12002 ;;
 12003                           
 12004     07CE                     _printLogs:	
 12005                           ;psect for function _printLogs
 12006                           
 12007     07CE                     l6122:	
 12008                           ;incstack = 0
 12009                           ; Regs used in _printLogs: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 12010                           
 12011                           
 12012                           ;UART.c: 79:     if (mustPrintLogs) {
 12013     07CE  0020               	movlb	0	; select bank0
 12014     07CF  086D               	movf	_mustPrintLogs,w
 12015     07D0  1903               	btfsc	3,2
 12016     07D1  2FD3               	goto	u7271
 12017     07D2  2FD4               	goto	u7270
 12018     07D3                     u7271:
 12019     07D3  2FFC               	goto	l906
 12020     07D4                     u7270:
 12021     07D4                     l6124:
 12022                           
 12023                           ;UART.c: 87:         printf("Count: %u", getCounter());
 12024     07D4  30CC               	movlw	low (STR_3| (0+32768))
 12025     07D5  0021               	movlb	1	; select bank1
 12026     07D6  00E1               	movwf	printf@fmt^(0+128)
 12027     07D7  3098               	movlw	high (STR_3| (0+32768))
 12028     07D8  00E2               	movwf	(printf@fmt^(0+128)+1)
 12029     07D9  319D  25A8  3187   	fcall	_getCounter
 12030     07DC  0021               	movlb	1	; select bank1
 12031     07DD  0821               	movf	(?_getCounter+1)^(0+128),w
 12032     07DE  00E4               	movwf	((?_printf+1)^(0+128)+2)
 12033     07DF  0820               	movf	?_getCounter^(0+128),w
 12034     07E0  00E3               	movwf	(?_printf^(0+128)+2)
 12035     07E1  319E  2693  3187   	fcall	_printf
 12036                           
 12037                           ;UART.c: 88:         printf (", pomp: %u", getPomphoogte());
 12038     07E4  30B7               	movlw	low (STR_4| (0+32768))
 12039     07E5  0021               	movlb	1	; select bank1
 12040     07E6  00E1               	movwf	printf@fmt^(0+128)
 12041     07E7  3098               	movlw	high (STR_4| (0+32768))
 12042     07E8  00E2               	movwf	(printf@fmt^(0+128)+1)
 12043     07E9  319D  25B1  3187   	fcall	_getPomphoogte
 12044     07EC  0021               	movlb	1	; select bank1
 12045     07ED  0821               	movf	(?_getPomphoogte+1)^(0+128),w
 12046     07EE  00E4               	movwf	((?_printf+1)^(0+128)+2)
 12047     07EF  0820               	movf	?_getPomphoogte^(0+128),w
 12048     07F0  00E3               	movwf	(?_printf^(0+128)+2)
 12049     07F1  319E  2693  3187   	fcall	_printf
 12050                           
 12051                           ;UART.c: 89:         printf("\r\n");
 12052     07F4  309A               	movlw	low ((STR_9+12)| (0+32768))
 12053     07F5  0021               	movlb	1	; select bank1
 12054     07F6  00E1               	movwf	printf@fmt^(0+128)
 12055     07F7  3098               	movlw	high ((STR_9+12)| (0+32768))
 12056     07F8  00E2               	movwf	(printf@fmt^(0+128)+1)
 12057     07F9  319E  2693  3187   	fcall	_printf
 12058     07FC                     l906:
 12059     07FC  0008               	return
 12060     07FD                     __end_of_printLogs:
 12061                           
 12062                           	psect	text15
 12063     1E93                     __ptext15:	
 12064 ;; *************** function _printf *****************
 12065 ;; Defined at:
 12066 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\printf.c"
 12067 ;; Parameters:    Size  Location     Type
 12068 ;;  fmt             2   65[BANK1 ] PTR const unsigned char 
 12069 ;;		 -> STR_10(17), STR_9(15), STR_8(13), STR_7(13), 
 12070 ;;		 -> STR_6(25), STR_5(3), STR_4(11), STR_3(10), 
 12071 ;;		 -> STR_2(24), STR_1(8), 
 12072 ;; Auto vars:     Size  Location     Type
 12073 ;;  ret             2    0        int 
 12074 ;;  ap              1   71[BANK1 ] PTR void [1]
 12075 ;;		 -> ?_printf(2), 
 12076 ;; Return value:  Size  Location     Type
 12077 ;;                  2   65[BANK1 ] int 
 12078 ;; Registers used:
 12079 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 12080 ;; Tracked objects:
 12081 ;;		On entry : 0/0
 12082 ;;		On exit  : 0/0
 12083 ;;		Unchanged: 0/0
 12084 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 12085 ;;      Params:         0       0       6       0       0       0       0       0       0       0       0       0       
      +0       0
 12086 ;;      Locals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0
 12087 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12088 ;;      Totals:         0       0       7       0       0       0       0       0       0       0       0       0       
      +0       0
 12089 ;;Total ram usage:        7 bytes
 12090 ;; Hardware stack levels used: 1
 12091 ;; Hardware stack levels required when called: 13
 12092 ;; This function calls:
 12093 ;;		_vfprintf
 12094 ;; This function is called by:
 12095 ;;		_readLine
 12096 ;;		_printLogs
 12097 ;;		_uartHandler
 12098 ;;		_printFloat
 12099 ;;		_printOut
 12100 ;; This function uses a non-reentrant model
 12101 ;;
 12102                           
 12103     1E93                     _printf:	
 12104                           ;psect for function _printf
 12105                           
 12106     1E93                     l4684:	
 12107                           ;incstack = 0
 12108                           ; Regs used in _printf: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 12109                           
 12110     1E93  30E3               	movlw	(low ((?_printf| 0+2)))& (0+255)
 12111     1E94  0021               	movlb	1	; select bank1
 12112     1E95  00E7               	movwf	printf@ap^(0+128)
 12113     1E96                     l4686:
 12114     1E96  3000               	movlw	0
 12115     1E97  00D9               	movwf	vfprintf@fp^(0+128)
 12116     1E98  00DA               	movwf	(vfprintf@fp+1)^(0+128)
 12117     1E99  0862               	movf	(printf@fmt+1)^(0+128),w
 12118     1E9A  00DC               	movwf	(vfprintf@fmt+1)^(0+128)
 12119     1E9B  0861               	movf	printf@fmt^(0+128),w
 12120     1E9C  00DB               	movwf	vfprintf@fmt^(0+128)
 12121     1E9D  30E7               	movlw	(low (printf@ap| 0))& (0+255)
 12122     1E9E  00DD               	movwf	vfprintf@ap^(0+128)
 12123     1E9F  3190  20D3  319E   	fcall	_vfprintf
 12124     1EA2                     l1687:
 12125     1EA2  0008               	return
 12126     1EA3                     __end_of_printf:
 12127                           
 12128                           	psect	text16
 12129     10D3                     __ptext16:	
 12130 ;; *************** function _vfprintf *****************
 12131 ;; Defined at:
 12132 ;;		line 1817 in file "C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c"
 12133 ;; Parameters:    Size  Location     Type
 12134 ;;  fp              2   57[BANK1 ] PTR struct _IO_FILE
 12135 ;;		 -> NULL(0), 
 12136 ;;  fmt             2   59[BANK1 ] PTR const unsigned char 
 12137 ;;		 -> STR_10(17), STR_9(15), STR_8(13), STR_7(13), 
 12138 ;;		 -> STR_6(25), STR_5(3), STR_4(11), STR_3(10), 
 12139 ;;		 -> STR_2(24), STR_1(8), 
 12140 ;;  ap              1   61[BANK1 ] PTR PTR void 
 12141 ;;		 -> printf@ap(1), 
 12142 ;; Auto vars:     Size  Location     Type
 12143 ;;  cfmt            2   63[BANK1 ] PTR unsigned char 
 12144 ;;		 -> STR_10(17), STR_9(15), STR_8(13), STR_7(13), 
 12145 ;;		 -> STR_6(25), STR_5(3), STR_4(11), STR_3(10), 
 12146 ;;		 -> STR_2(24), STR_1(8), 
 12147 ;; Return value:  Size  Location     Type
 12148 ;;                  2   57[BANK1 ] int 
 12149 ;; Registers used:
 12150 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 12151 ;; Tracked objects:
 12152 ;;		On entry : 0/0
 12153 ;;		On exit  : 0/0
 12154 ;;		Unchanged: 0/0
 12155 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 12156 ;;      Params:         0       0       5       0       0       0       0       0       0       0       0       0       
      +0       0
 12157 ;;      Locals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0
 12158 ;;      Temps:          0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0
 12159 ;;      Totals:         0       0       8       0       0       0       0       0       0       0       0       0       
      +0       0
 12160 ;;Total ram usage:        8 bytes
 12161 ;; Hardware stack levels used: 1
 12162 ;; Hardware stack levels required when called: 12
 12163 ;; This function calls:
 12164 ;;		_vfpfcnvrt
 12165 ;; This function is called by:
 12166 ;;		_printf
 12167 ;; This function uses a non-reentrant model
 12168 ;;
 12169                           
 12170     10D3                     _vfprintf:	
 12171                           ;psect for function _vfprintf
 12172                           
 12173     10D3                     l4612:	
 12174                           ;incstack = 0
 12175                           ; Regs used in _vfprintf: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 12176                           
 12177                           
 12178                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1817: int vfprint
      +                          f(FILE *fp, const char *fmt, va_list ap);C:\Program Files\Microchip\xc8\v3.00\pic\source
      +                          s\c99\common\doprnt.c: 1818: {;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\comm
      +                          on\doprnt.c: 1820:     char *cfmt;;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\
      +                          common\doprnt.c: 1822:     cfmt = (char *)fmt;
 12179     10D3  0021               	movlb	1	; select bank1
 12180     10D4  085C               	movf	(vfprintf@fmt+1)^(0+128),w
 12181     10D5  00E0               	movwf	(vfprintf@cfmt+1)^(0+128)
 12182     10D6  085B               	movf	vfprintf@fmt^(0+128),w
 12183     10D7  00DF               	movwf	vfprintf@cfmt^(0+128)
 12184     10D8                     l4614:
 12185                           
 12186                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1824:     nout = 
      +                          0;
 12187     10D8  0022               	movlb	2	; select bank2
 12188     10D9  01C4               	clrf	_nout^(0+256)
 12189     10DA  01C5               	clrf	(_nout+1)^(0+256)
 12190                           
 12191                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1826:     while (
      +                          *cfmt) {
 12192     10DB  28F0               	goto	l4618
 12193     10DC                     l4616:
 12194                           
 12195                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1828:         nou
      +                          t +=
 12196     10DC  085A               	movf	(vfprintf@fp+1)^(0+128),w
 12197     10DD  00CA               	movwf	(vfpfcnvrt@fp+1)^(0+128)
 12198     10DE  0859               	movf	vfprintf@fp^(0+128),w
 12199     10DF  00C9               	movwf	vfpfcnvrt@fp^(0+128)
 12200     10E0  30DF               	movlw	(low (vfprintf@cfmt| 0))& (0+255)
 12201     10E1  00CB               	movwf	vfpfcnvrt@fmt^(0+128)
 12202     10E2  085D               	movf	vfprintf@ap^(0+128),w
 12203     10E3  00CC               	movwf	vfpfcnvrt@ap^(0+128)
 12204     10E4  01CD               	clrf	(vfpfcnvrt@ap+1)^(0+128)
 12205     10E5  318A  22DE  3190   	fcall	_vfpfcnvrt
 12206     10E8  0021               	movlb	1	; select bank1
 12207     10E9  0849               	movf	?_vfpfcnvrt^(0+128),w
 12208     10EA  0022               	movlb	2	; select bank2
 12209     10EB  07C4               	addwf	_nout^(0+256),f
 12210     10EC  0021               	movlb	1	; select bank1
 12211     10ED  084A               	movf	(?_vfpfcnvrt+1)^(0+128),w
 12212     10EE  0022               	movlb	2	; select bank2
 12213     10EF  3DC5               	addwfc	(_nout+1)^(0+256),f
 12214     10F0                     l4618:
 12215                           
 12216                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1826:     while (
      +                          *cfmt) {
 12217     10F0  0021               	movlb	1	; select bank1
 12218     10F1  085F               	movf	vfprintf@cfmt^(0+128),w
 12219     10F2  0084               	movwf	4
 12220     10F3  0860               	movf	(vfprintf@cfmt+1)^(0+128),w
 12221     10F4  0085               	movwf	5
 12222     10F5  0012               	moviw fsr0++
 12223     10F6  1D03               	btfss	3,2
 12224     10F7  28F9               	goto	u4631
 12225     10F8  28FA               	goto	u4630
 12226     10F9                     u4631:
 12227     10F9  28DC               	goto	l4616
 12228     10FA                     u4630:
 12229     10FA                     l4620:
 12230                           
 12231                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1835:  return 0;
 12232     10FA  01D9               	clrf	?_vfprintf^(0+128)
 12233     10FB  01DA               	clrf	(?_vfprintf+1)^(0+128)
 12234     10FC                     l1779:
 12235     10FC  0008               	return
 12236     10FD                     __end_of_vfprintf:
 12237                           
 12238                           	psect	text17
 12239     0ADE                     __ptext17:	
 12240 ;; *************** function _vfpfcnvrt *****************
 12241 ;; Defined at:
 12242 ;;		line 1177 in file "C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c"
 12243 ;; Parameters:    Size  Location     Type
 12244 ;;  fp              2   41[BANK1 ] PTR struct _IO_FILE
 12245 ;;		 -> NULL(0), 
 12246 ;;  fmt             1   43[BANK1 ] PTR PTR unsigned char 
 12247 ;;		 -> vfprintf@cfmt(2), 
 12248 ;;  ap              2   44[BANK1 ] PTR PTR void 
 12249 ;;		 -> printf@ap(1), 
 12250 ;; Auto vars:     Size  Location     Type
 12251 ;;  convarg         4   51[BANK1 ] struct .
 12252 ;;  cp              2   55[BANK1 ] PTR unsigned char 
 12253 ;;		 -> STR_10(17), STR_9(15), STR_8(13), STR_7(13), 
 12254 ;;		 -> STR_6(25), STR_5(3), STR_4(11), STR_3(10), 
 12255 ;;		 -> STR_2(24), STR_1(8), 
 12256 ;;  done            1   50[BANK1 ] _Bool 
 12257 ;;  c               1    0        unsigned char 
 12258 ;; Return value:  Size  Location     Type
 12259 ;;                  2   41[BANK1 ] int 
 12260 ;; Registers used:
 12261 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 12262 ;; Tracked objects:
 12263 ;;		On entry : 0/0
 12264 ;;		On exit  : 0/0
 12265 ;;		Unchanged: 0/0
 12266 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 12267 ;;      Params:         0       0       5       0       0       0       0       0       0       0       0       0       
      +0       0
 12268 ;;      Locals:         0       0       7       0       0       0       0       0       0       0       0       0       
      +0       0
 12269 ;;      Temps:          0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0
 12270 ;;      Totals:         0       0      16       0       0       0       0       0       0       0       0       0       
      +0       0
 12271 ;;Total ram usage:       16 bytes
 12272 ;; Hardware stack levels used: 1
 12273 ;; Hardware stack levels required when called: 11
 12274 ;; This function calls:
 12275 ;;		_dtoa
 12276 ;;		_fputc
 12277 ;;		_read_prec_or_width
 12278 ;;		_utoa
 12279 ;; This function is called by:
 12280 ;;		_vfprintf
 12281 ;; This function uses a non-reentrant model
 12282 ;;
 12283                           
 12284     0ADE                     _vfpfcnvrt:	
 12285                           ;psect for function _vfpfcnvrt
 12286                           
 12287     0ADE                     l4500:	
 12288                           ;incstack = 0
 12289                           ; Regs used in _vfpfcnvrt: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 12290                           
 12291                           
 12292                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1177: vfpfcnvrt(F
      +                          ILE *fp, char *fmt[], va_list ap);C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\c
      +                          ommon\doprnt.c: 1178: {;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\dopr
      +                          nt.c: 1179:     char c, *cp;;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common
      +                          \doprnt.c: 1180:     _Bool done;;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\co
      +                          mmon\doprnt.c: 1188:  } convarg;;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\co
      +                          mmon\doprnt.c: 1201:     if ((*fmt)[0] == '%') {
 12293     0ADE  0021               	movlb	1	; select bank1
 12294     0ADF  084B               	movf	vfpfcnvrt@fmt^(0+128),w
 12295     0AE0  0086               	movwf	6
 12296     0AE1  0187               	clrf	7
 12297     0AE2  3F40               	moviw [0]fsr1
 12298     0AE3  00CE               	movwf	??_vfpfcnvrt^(0+128)
 12299     0AE4  3F41               	moviw [1]fsr1
 12300     0AE5  00CF               	movwf	(??_vfpfcnvrt^(0+128)+1)
 12301     0AE6  084E               	movf	??_vfpfcnvrt^(0+128),w
 12302     0AE7  0084               	movwf	4
 12303     0AE8  084F               	movf	(??_vfpfcnvrt+1)^(0+128),w
 12304     0AE9  0085               	movwf	5
 12305     0AEA  0012               	moviw fsr0++
 12306     0AEB  3A25               	xorlw	37
 12307     0AEC  1D03               	btfss	3,2
 12308     0AED  2AEF               	goto	u4521
 12309     0AEE  2AF0               	goto	u4520
 12310     0AEF                     u4521:
 12311     0AEF  2C2C               	goto	l4580
 12312     0AF0                     u4520:
 12313     0AF0                     l4502:
 12314                           
 12315                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1202:         ++*
      +                          fmt;
 12316     0AF0  084B               	movf	vfpfcnvrt@fmt^(0+128),w
 12317     0AF1  0086               	movwf	6
 12318     0AF2  0187               	clrf	7
 12319     0AF3  3001               	movlw	1
 12320     0AF4  0781               	addwf	1,f
 12321     0AF5  3141               	addfsr 1,1
 12322     0AF6  1803               	skipnc
 12323     0AF7  0A81               	incf	1,f
 12324     0AF8                     l4504:
 12325                           
 12326                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1204:         fla
      +                          gs = width = 0;
 12327     0AF8  0020               	movlb	0	; select bank0
 12328     0AF9  01D5               	clrf	_width
 12329     0AFA  01D6               	clrf	_width+1
 12330     0AFB  3000               	movlw	0
 12331     0AFC  00E3               	movwf	_flags
 12332     0AFD                     l4506:
 12333                           
 12334                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1205:         pre
      +                          c = -1;
 12335     0AFD  30FF               	movlw	255
 12336     0AFE  0022               	movlb	2	; select bank2
 12337     0AFF  00C6               	movwf	_prec^(0+256)
 12338     0B00  30FF               	movlw	255
 12339     0B01  00C7               	movwf	(_prec^(0+256)+1)
 12340     0B02                     l4508:
 12341                           
 12342                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1209:         don
      +                          e = 0;
 12343     0B02  0021               	movlb	1	; select bank1
 12344     0B03  01D2               	clrf	vfpfcnvrt@done^(0+128)
 12345                           
 12346                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1210:         whi
      +                          le (!done) {
 12347     0B04  2B24               	goto	l4516
 12348     0B05                     l1757:	
 12349                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1219:            
      +                               case '0' :
 12350                           
 12351                           
 12352                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1220:            
      +                                   flags |= (1 << 1);
 12353     0B05  0020               	movlb	0	; select bank0
 12354     0B06  14E3               	bsf	_flags,1
 12355     0B07                     l4510:
 12356                           
 12357                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1221:            
      +                                   ++*fmt;
 12358     0B07  0021               	movlb	1	; select bank1
 12359     0B08  084B               	movf	vfpfcnvrt@fmt^(0+128),w
 12360     0B09  0086               	movwf	6
 12361     0B0A  0187               	clrf	7
 12362     0B0B  3001               	movlw	1
 12363     0B0C  0781               	addwf	1,f
 12364     0B0D  3141               	addfsr 1,1
 12365     0B0E  1803               	skipnc
 12366     0B0F  0A81               	incf	1,f
 12367                           
 12368                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1222:            
      +                                   break;
 12369     0B10  2B24               	goto	l4516
 12370     0B11                     l1759:	
 12371                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1242:            
      +                               default:
 12372                           
 12373                           
 12374                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1243:            
      +                                   done = 1;
 12375     0B11  3001               	movlw	1
 12376     0B12  00D2               	movwf	vfpfcnvrt@done^(0+128)
 12377                           
 12378                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1244:            
      +                                   break;
 12379     0B13  2B24               	goto	l4516
 12380     0B14                     l4514:
 12381     0B14  084B               	movf	vfpfcnvrt@fmt^(0+128),w
 12382     0B15  0086               	movwf	6
 12383     0B16  0187               	clrf	7
 12384     0B17  3F40               	moviw [0]fsr1
 12385     0B18  00CE               	movwf	??_vfpfcnvrt^(0+128)
 12386     0B19  3F41               	moviw [1]fsr1
 12387     0B1A  00CF               	movwf	(??_vfpfcnvrt^(0+128)+1)
 12388     0B1B  084E               	movf	??_vfpfcnvrt^(0+128),w
 12389     0B1C  0084               	movwf	4
 12390     0B1D  084F               	movf	(??_vfpfcnvrt+1)^(0+128),w
 12391     0B1E  0085               	movwf	5
 12392     0B1F  0800               	movf	0,w	;code access
 12393                           
 12394                           ; Switch size 1, requested type "simple"
 12395                           ; Number of cases is 1, Range of values is 48 to 48
 12396                           ; switch strategies available:
 12397                           ; Name         Instructions Cycles
 12398                           ; simple_byte            4     3 (average)
 12399                           ; direct_byte           11     9 (fixed)
 12400                           ; jumptable            263     9 (fixed)
 12401                           ;	Chosen strategy is simple_byte
 12402     0B20  3A30               	xorlw	48	; case 48
 12403     0B21  1903               	skipnz
 12404     0B22  2B05               	goto	l1757
 12405     0B23  2B11               	goto	l1759
 12406     0B24                     l4516:
 12407                           
 12408                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1210:         whi
      +                          le (!done) {
 12409     0B24  0852               	movf	vfpfcnvrt@done^(0+128),w
 12410     0B25  1903               	btfsc	3,2
 12411     0B26  2B28               	goto	u4531
 12412     0B27  2B29               	goto	u4530
 12413     0B28                     u4531:
 12414     0B28  2B14               	goto	l4514
 12415     0B29                     u4530:
 12416     0B29                     l4518:
 12417                           
 12418                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1256:   width = r
      +                          ead_prec_or_width(fmt, ap);
 12419     0B29  084B               	movf	vfpfcnvrt@fmt^(0+128),w
 12420     0B2A  00A6               	movwf	read_prec_or_width@fmt^(0+128)
 12421     0B2B  084C               	movf	vfpfcnvrt@ap^(0+128),w
 12422     0B2C  00A7               	movwf	read_prec_or_width@ap^(0+128)
 12423     0B2D  3194  24B0  318A   	fcall	_read_prec_or_width
 12424     0B30  0021               	movlb	1	; select bank1
 12425     0B31  0827               	movf	(?_read_prec_or_width+1)^(0+128),w
 12426     0B32  0020               	movlb	0	; select bank0
 12427     0B33  00D6               	movwf	_width+1
 12428     0B34  0021               	movlb	1	; select bank1
 12429     0B35  0826               	movf	?_read_prec_or_width^(0+128),w
 12430     0B36  0020               	movlb	0	; select bank0
 12431     0B37  00D5               	movwf	_width
 12432     0B38                     l4520:
 12433                           
 12434                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1257:   if (width
      +                           < 0) {
 12435     0B38  1FD6               	btfss	_width+1,7
 12436     0B39  2B3B               	goto	u4541
 12437     0B3A  2B3C               	goto	u4540
 12438     0B3B                     u4541:
 12439     0B3B  2B42               	goto	l4526
 12440     0B3C                     u4540:
 12441     0B3C                     l4522:
 12442                           
 12443                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1258:    flags |=
      +                           (1 << 0);
 12444     0B3C  1463               	bsf	_flags,0
 12445     0B3D                     l4524:
 12446                           
 12447                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1259:    width = 
      +                          -width;
 12448     0B3D  09D5               	comf	_width,f
 12449     0B3E  09D6               	comf	_width+1,f
 12450     0B3F  0AD5               	incf	_width,f
 12451     0B40  1903               	skipnz
 12452     0B41  0AD6               	incf	_width+1,f
 12453     0B42                     l4526:
 12454                           
 12455                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1291:   cp = *fmt
      +                          ;
 12456     0B42  0021               	movlb	1	; select bank1
 12457     0B43  084B               	movf	vfpfcnvrt@fmt^(0+128),w
 12458     0B44  0086               	movwf	6
 12459     0B45  0187               	clrf	7
 12460     0B46  3F40               	moviw [0]fsr1
 12461     0B47  00D7               	movwf	vfpfcnvrt@cp^(0+128)
 12462     0B48  3F41               	moviw [1]fsr1
 12463     0B49  00D8               	movwf	(vfpfcnvrt@cp+1)^(0+128)
 12464     0B4A                     l4528:
 12465                           
 12466                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1361:   if (*cp =
      +                          = 'd' || *cp == 'i') {
 12467     0B4A  0857               	movf	vfpfcnvrt@cp^(0+128),w
 12468     0B4B  0084               	movwf	4
 12469     0B4C  0858               	movf	(vfpfcnvrt@cp+1)^(0+128),w
 12470     0B4D  0085               	movwf	5
 12471     0B4E  0012               	moviw fsr0++
 12472     0B4F  3A64               	xorlw	100
 12473     0B50  1903               	btfsc	3,2
 12474     0B51  2B53               	goto	u4551
 12475     0B52  2B54               	goto	u4550
 12476     0B53                     u4551:
 12477     0B53  2B5E               	goto	l4532
 12478     0B54                     u4550:
 12479     0B54                     l4530:
 12480     0B54  0857               	movf	vfpfcnvrt@cp^(0+128),w
 12481     0B55  0084               	movwf	4
 12482     0B56  0858               	movf	(vfpfcnvrt@cp+1)^(0+128),w
 12483     0B57  0085               	movwf	5
 12484     0B58  0012               	moviw fsr0++
 12485     0B59  3A69               	xorlw	105
 12486     0B5A  1D03               	btfss	3,2
 12487     0B5B  2B5D               	goto	u4561
 12488     0B5C  2B5E               	goto	u4560
 12489     0B5D                     u4561:
 12490     0B5D  2B89               	goto	l4540
 12491     0B5E                     u4560:
 12492     0B5E                     l4532:
 12493                           
 12494                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1404:    convarg.
      +                          sint = (vfpf_sint_t)(int)(*(int *)__va_arg(*(int **)ap, (int)0));
 12495     0B5E  084C               	movf	vfpfcnvrt@ap^(0+128),w
 12496     0B5F  0086               	movwf	6
 12497     0B60  084D               	movf	(vfpfcnvrt@ap+1)^(0+128),w
 12498     0B61  0087               	movwf	7
 12499     0B62  0801               	movf	1,w
 12500     0B63  0084               	movwf	4
 12501     0B64  0185               	clrf	5
 12502     0B65  3002               	movlw	2
 12503     0B66  0781               	addwf	1,f
 12504     0B67  3F00               	moviw [0]fsr0
 12505     0B68  00D3               	movwf	vfpfcnvrt@convarg^(0+128)
 12506     0B69  3F01               	moviw [1]fsr0
 12507     0B6A  00D4               	movwf	(vfpfcnvrt@convarg+1)^(0+128)
 12508     0B6B                     l4534:
 12509                           
 12510                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1406:    *fmt = c
      +                          p+1;
 12511     0B6B  0857               	movf	vfpfcnvrt@cp^(0+128),w
 12512     0B6C  3E01               	addlw	1
 12513     0B6D  00CE               	movwf	??_vfpfcnvrt^(0+128)
 12514     0B6E  3000               	movlw	0
 12515     0B6F  3D58               	addwfc	(vfpfcnvrt@cp+1)^(0+128),w
 12516     0B70  00CF               	movwf	(??_vfpfcnvrt+1)^(0+128)
 12517     0B71  084B               	movf	vfpfcnvrt@fmt^(0+128),w
 12518     0B72  0086               	movwf	6
 12519     0B73  0187               	clrf	7
 12520     0B74  084E               	movf	??_vfpfcnvrt^(0+128),w
 12521     0B75  3FC0               	movwi [0]fsr1
 12522     0B76  084F               	movf	(??_vfpfcnvrt+1)^(0+128),w
 12523     0B77  3FC1               	movwi [1]fsr1
 12524     0B78                     l4536:
 12525                           
 12526                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1432:    return (
      +                          int) dtoa(fp, convarg.sint);
 12527     0B78  084A               	movf	(vfpfcnvrt@fp+1)^(0+128),w
 12528     0B79  00BD               	movwf	(dtoa@fp+1)^(0+128)
 12529     0B7A  0849               	movf	vfpfcnvrt@fp^(0+128),w
 12530     0B7B  00BC               	movwf	dtoa@fp^(0+128)
 12531     0B7C  0854               	movf	(vfpfcnvrt@convarg+1)^(0+128),w
 12532     0B7D  00BF               	movwf	(dtoa@d+1)^(0+128)
 12533     0B7E  0853               	movf	vfpfcnvrt@convarg^(0+128),w
 12534     0B7F  00BE               	movwf	dtoa@d^(0+128)
 12535     0B80  3187  2715  318A   	fcall	_dtoa
 12536     0B83  0021               	movlb	1	; select bank1
 12537     0B84  083D               	movf	(?_dtoa+1)^(0+128),w
 12538     0B85  00CA               	movwf	(?_vfpfcnvrt+1)^(0+128)
 12539     0B86  083C               	movf	?_dtoa^(0+128),w
 12540     0B87  00C9               	movwf	?_vfpfcnvrt^(0+128)
 12541     0B88  2C4F               	goto	l1765
 12542     0B89                     l4540:
 12543     0B89  0857               	movf	vfpfcnvrt@cp^(0+128),w
 12544     0B8A  0084               	movwf	4
 12545     0B8B  0858               	movf	(vfpfcnvrt@cp+1)^(0+128),w
 12546     0B8C  0085               	movwf	5
 12547     0B8D  0012               	moviw fsr0++
 12548     0B8E  3A75               	xorlw	117
 12549     0B8F  1D03               	btfss	3,2
 12550     0B90  2B92               	goto	u4571
 12551     0B91  2B93               	goto	u4570
 12552     0B92                     u4571:
 12553     0B92  2BC8               	goto	l4554
 12554     0B93                     u4570:
 12555     0B93                     l4542:
 12556                           
 12557                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1452:     ) {;C:\
      +                          Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1495:    convarg.uint
      +                           = (vfpf_uint_t)(unsigned int)(*(unsigned int *)__va_arg(*(unsigned int **)ap, (unsigned
      +                           int)0));
 12558     0B93  084C               	movf	vfpfcnvrt@ap^(0+128),w
 12559     0B94  0086               	movwf	6
 12560     0B95  084D               	movf	(vfpfcnvrt@ap+1)^(0+128),w
 12561     0B96  0087               	movwf	7
 12562     0B97  0801               	movf	1,w
 12563     0B98  0084               	movwf	4
 12564     0B99  0185               	clrf	5
 12565     0B9A  3002               	movlw	2
 12566     0B9B  0781               	addwf	1,f
 12567     0B9C  3F00               	moviw [0]fsr0
 12568     0B9D  00D3               	movwf	vfpfcnvrt@convarg^(0+128)
 12569     0B9E  3F01               	moviw [1]fsr0
 12570     0B9F  00D4               	movwf	(vfpfcnvrt@convarg+1)^(0+128)
 12571     0BA0                     l4544:
 12572                           
 12573                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1497:    *fmt = c
      +                          p+1;
 12574     0BA0  0857               	movf	vfpfcnvrt@cp^(0+128),w
 12575     0BA1  3E01               	addlw	1
 12576     0BA2  00CE               	movwf	??_vfpfcnvrt^(0+128)
 12577     0BA3  3000               	movlw	0
 12578     0BA4  3D58               	addwfc	(vfpfcnvrt@cp+1)^(0+128),w
 12579     0BA5  00CF               	movwf	(??_vfpfcnvrt+1)^(0+128)
 12580     0BA6  084B               	movf	vfpfcnvrt@fmt^(0+128),w
 12581     0BA7  0086               	movwf	6
 12582     0BA8  0187               	clrf	7
 12583     0BA9  084E               	movf	??_vfpfcnvrt^(0+128),w
 12584     0BAA  3FC0               	movwi [0]fsr1
 12585     0BAB  084F               	movf	(??_vfpfcnvrt+1)^(0+128),w
 12586     0BAC  3FC1               	movwi [1]fsr1
 12587                           
 12588                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1498:    switch (
      +                          *cp) {
 12589     0BAD  2BBF               	goto	l4552
 12590     0BAE                     l4546:
 12591                           
 12592                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1542:      return
      +                           (int) utoa(fp, convarg.uint);
 12593     0BAE  084A               	movf	(vfpfcnvrt@fp+1)^(0+128),w
 12594     0BAF  00BD               	movwf	(utoa@fp+1)^(0+128)
 12595     0BB0  0849               	movf	vfpfcnvrt@fp^(0+128),w
 12596     0BB1  00BC               	movwf	utoa@fp^(0+128)
 12597     0BB2  0854               	movf	(vfpfcnvrt@convarg+1)^(0+128),w
 12598     0BB3  00BF               	movwf	(utoa@d+1)^(0+128)
 12599     0BB4  0853               	movf	vfpfcnvrt@convarg^(0+128),w
 12600     0BB5  00BE               	movwf	utoa@d^(0+128)
 12601     0BB6  3196  2649  318A   	fcall	_utoa
 12602     0BB9  0021               	movlb	1	; select bank1
 12603     0BBA  083D               	movf	(?_utoa+1)^(0+128),w
 12604     0BBB  00CA               	movwf	(?_vfpfcnvrt+1)^(0+128)
 12605     0BBC  083C               	movf	?_utoa^(0+128),w
 12606     0BBD  00C9               	movwf	?_vfpfcnvrt^(0+128)
 12607     0BBE  2C4F               	goto	l1765
 12608     0BBF                     l4552:
 12609     0BBF  0857               	movf	vfpfcnvrt@cp^(0+128),w
 12610     0BC0  0084               	movwf	4
 12611     0BC1  0858               	movf	(vfpfcnvrt@cp+1)^(0+128),w
 12612     0BC2  0085               	movwf	5
 12613     0BC3  0800               	movf	0,w	;code access
 12614                           
 12615                           ; Switch size 1, requested type "simple"
 12616                           ; Number of cases is 1, Range of values is 117 to 117
 12617                           ; switch strategies available:
 12618                           ; Name         Instructions Cycles
 12619                           ; simple_byte            4     3 (average)
 12620                           ; direct_byte           11     9 (fixed)
 12621                           ; jumptable            263     9 (fixed)
 12622                           ;	Chosen strategy is simple_byte
 12623     0BC4  3A75               	xorlw	117	; case 117
 12624     0BC5  1903               	skipnz
 12625     0BC6  2BAE               	goto	l4546
 12626     0BC7  2BC8               	goto	l4554
 12627     0BC8                     l4554:
 12628                           
 12629                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1595:   if (*cp =
      +                          = 'n') {
 12630     0BC8  0857               	movf	vfpfcnvrt@cp^(0+128),w
 12631     0BC9  0084               	movwf	4
 12632     0BCA  0858               	movf	(vfpfcnvrt@cp+1)^(0+128),w
 12633     0BCB  0085               	movwf	5
 12634     0BCC  0012               	moviw fsr0++
 12635     0BCD  3A6E               	xorlw	110
 12636     0BCE  1D03               	btfss	3,2
 12637     0BCF  2BD1               	goto	u4581
 12638     0BD0  2BD2               	goto	u4580
 12639     0BD1                     u4581:
 12640     0BD1  2BF9               	goto	l4564
 12641     0BD2                     u4580:
 12642     0BD2                     l4556:
 12643                           
 12644                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1638:    *(*(int*
      +                           *)__va_arg(*(int* **)ap, (int*)0)) = (int) nout;
 12645     0BD2  084C               	movf	vfpfcnvrt@ap^(0+128),w
 12646     0BD3  0086               	movwf	6
 12647     0BD4  084D               	movf	(vfpfcnvrt@ap+1)^(0+128),w
 12648     0BD5  0087               	movwf	7
 12649     0BD6  0801               	movf	1,w
 12650     0BD7  0084               	movwf	4
 12651     0BD8  0185               	clrf	5
 12652     0BD9  3002               	movlw	2
 12653     0BDA  0781               	addwf	1,f
 12654     0BDB  3F00               	moviw [0]fsr0
 12655     0BDC  00CE               	movwf	??_vfpfcnvrt^(0+128)
 12656     0BDD  3F01               	moviw [1]fsr0
 12657     0BDE  00CF               	movwf	(??_vfpfcnvrt^(0+128)+1)
 12658     0BDF  084E               	movf	??_vfpfcnvrt^(0+128),w
 12659     0BE0  0086               	movwf	6
 12660     0BE1  084F               	movf	(??_vfpfcnvrt+1)^(0+128),w
 12661     0BE2  0087               	movwf	7
 12662     0BE3  0022               	movlb	2	; select bank2
 12663     0BE4  0844               	movf	_nout^(0+256),w
 12664     0BE5  3FC0               	movwi [0]fsr1
 12665     0BE6  0845               	movf	(_nout+1)^(0+256),w
 12666     0BE7  3FC1               	movwi [1]fsr1
 12667     0BE8                     l4558:
 12668                           
 12669                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1640:    *fmt = c
      +                          p+1;
 12670     0BE8  0021               	movlb	1	; select bank1
 12671     0BE9  0857               	movf	vfpfcnvrt@cp^(0+128),w
 12672     0BEA  3E01               	addlw	1
 12673     0BEB  00CE               	movwf	??_vfpfcnvrt^(0+128)
 12674     0BEC  3000               	movlw	0
 12675     0BED  3D58               	addwfc	(vfpfcnvrt@cp+1)^(0+128),w
 12676     0BEE  00CF               	movwf	(??_vfpfcnvrt+1)^(0+128)
 12677     0BEF  084B               	movf	vfpfcnvrt@fmt^(0+128),w
 12678     0BF0  0086               	movwf	6
 12679     0BF1  0187               	clrf	7
 12680     0BF2  084E               	movf	??_vfpfcnvrt^(0+128),w
 12681     0BF3  3FC0               	movwi [0]fsr1
 12682     0BF4  084F               	movf	(??_vfpfcnvrt+1)^(0+128),w
 12683     0BF5  3FC1               	movwi [1]fsr1
 12684     0BF6                     l4560:
 12685                           
 12686                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1641:    return (
      +                          int) 0;
 12687     0BF6  01C9               	clrf	?_vfpfcnvrt^(0+128)
 12688     0BF7  01CA               	clrf	(?_vfpfcnvrt+1)^(0+128)
 12689     0BF8  2C4F               	goto	l1765
 12690     0BF9                     l4564:
 12691                           
 12692                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1798:         if 
      +                          ((*fmt)[0] == '%') {
 12693     0BF9  084B               	movf	vfpfcnvrt@fmt^(0+128),w
 12694     0BFA  0086               	movwf	6
 12695     0BFB  0187               	clrf	7
 12696     0BFC  3F40               	moviw [0]fsr1
 12697     0BFD  00CE               	movwf	??_vfpfcnvrt^(0+128)
 12698     0BFE  3F41               	moviw [1]fsr1
 12699     0BFF  00CF               	movwf	(??_vfpfcnvrt^(0+128)+1)
 12700     0C00  084E               	movf	??_vfpfcnvrt^(0+128),w
 12701     0C01  0084               	movwf	4
 12702     0C02  084F               	movf	(??_vfpfcnvrt+1)^(0+128),w
 12703     0C03  0085               	movwf	5
 12704     0C04  0012               	moviw fsr0++
 12705     0C05  3A25               	xorlw	37
 12706     0C06  1D03               	btfss	3,2
 12707     0C07  2C09               	goto	u4591
 12708     0C08  2C0A               	goto	u4590
 12709     0C09                     u4591:
 12710     0C09  2C23               	goto	l4574
 12711     0C0A                     u4590:
 12712     0C0A                     l4566:
 12713                           
 12714                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1799:            
      +                           ++*fmt;
 12715     0C0A  084B               	movf	vfpfcnvrt@fmt^(0+128),w
 12716     0C0B  0086               	movwf	6
 12717     0C0C  0187               	clrf	7
 12718     0C0D  3001               	movlw	1
 12719     0C0E  0781               	addwf	1,f
 12720     0C0F  3141               	addfsr 1,1
 12721     0C10  1803               	skipnc
 12722     0C11  0A81               	incf	1,f
 12723     0C12                     l4568:
 12724                           
 12725                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1800:            
      +                           fputc((int)'%', fp);
 12726     0C12  3025               	movlw	37
 12727     0C13  00A3               	movwf	fputc@c^(0+128)
 12728     0C14  3000               	movlw	0
 12729     0C15  00A4               	movwf	(fputc@c^(0+128)+1)
 12730     0C16  084A               	movf	(vfpfcnvrt@fp+1)^(0+128),w
 12731     0C17  00A6               	movwf	(fputc@fp+1)^(0+128)
 12732     0C18  0849               	movf	vfpfcnvrt@fp^(0+128),w
 12733     0C19  00A5               	movwf	fputc@fp^(0+128)
 12734     0C1A  3195  250C  318A   	fcall	_fputc
 12735     0C1D                     l4570:
 12736                           
 12737                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1801:            
      +                           return (int) 1;
 12738     0C1D  3001               	movlw	1
 12739     0C1E  0021               	movlb	1	; select bank1
 12740     0C1F  00C9               	movwf	?_vfpfcnvrt^(0+128)
 12741     0C20  3000               	movlw	0
 12742     0C21  00CA               	movwf	(?_vfpfcnvrt^(0+128)+1)
 12743     0C22  2C4F               	goto	l1765
 12744     0C23                     l4574:
 12745                           
 12746                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1806:         ++*
      +                          fmt;
 12747     0C23  084B               	movf	vfpfcnvrt@fmt^(0+128),w
 12748     0C24  0086               	movwf	6
 12749     0C25  0187               	clrf	7
 12750     0C26  3001               	movlw	1
 12751     0C27  0781               	addwf	1,f
 12752     0C28  3141               	addfsr 1,1
 12753     0C29  1803               	skipnc
 12754     0C2A  0A81               	incf	1,f
 12755     0C2B  2BF6               	goto	l4560
 12756     0C2C                     l4580:
 12757                           
 12758                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1811:     fputc((
      +                          int)(*fmt)[0], fp);
 12759     0C2C  084B               	movf	vfpfcnvrt@fmt^(0+128),w
 12760     0C2D  0086               	movwf	6
 12761     0C2E  0187               	clrf	7
 12762     0C2F  3F40               	moviw [0]fsr1
 12763     0C30  00CE               	movwf	??_vfpfcnvrt^(0+128)
 12764     0C31  3F41               	moviw [1]fsr1
 12765     0C32  00CF               	movwf	(??_vfpfcnvrt^(0+128)+1)
 12766     0C33  084E               	movf	??_vfpfcnvrt^(0+128),w
 12767     0C34  0084               	movwf	4
 12768     0C35  084F               	movf	(??_vfpfcnvrt+1)^(0+128),w
 12769     0C36  0085               	movwf	5
 12770     0C37  0800               	movf	0,w	;code access
 12771     0C38  00D0               	movwf	(??_vfpfcnvrt+2)^(0+128)
 12772     0C39  01D1               	clrf	((??_vfpfcnvrt+2)^(0+128)+1)
 12773     0C3A  0850               	movf	(??_vfpfcnvrt+2)^(0+128),w
 12774     0C3B  00A3               	movwf	fputc@c^(0+128)
 12775     0C3C  0851               	movf	(??_vfpfcnvrt+3)^(0+128),w
 12776     0C3D  00A4               	movwf	(fputc@c+1)^(0+128)
 12777     0C3E  084A               	movf	(vfpfcnvrt@fp+1)^(0+128),w
 12778     0C3F  00A6               	movwf	(fputc@fp+1)^(0+128)
 12779     0C40  0849               	movf	vfpfcnvrt@fp^(0+128),w
 12780     0C41  00A5               	movwf	fputc@fp^(0+128)
 12781     0C42  3195  250C  318A   	fcall	_fputc
 12782     0C45                     l4582:
 12783                           
 12784                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1812:     ++*fmt;
 12785     0C45  0021               	movlb	1	; select bank1
 12786     0C46  084B               	movf	vfpfcnvrt@fmt^(0+128),w
 12787     0C47  0086               	movwf	6
 12788     0C48  0187               	clrf	7
 12789     0C49  3001               	movlw	1
 12790     0C4A  0781               	addwf	1,f
 12791     0C4B  3141               	addfsr 1,1
 12792     0C4C  1803               	skipnc
 12793     0C4D  0A81               	incf	1,f
 12794     0C4E  2C1D               	goto	l4570
 12795     0C4F                     l1765:
 12796     0C4F  0008               	return
 12797     0C50                     __end_of_vfpfcnvrt:
 12798                           
 12799                           	psect	text18
 12800     1649                     __ptext18:	
 12801 ;; *************** function _utoa *****************
 12802 ;; Defined at:
 12803 ;;		line 1001 in file "C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c"
 12804 ;; Parameters:    Size  Location     Type
 12805 ;;  fp              2   28[BANK1 ] PTR struct _IO_FILE
 12806 ;;		 -> NULL(0), 
 12807 ;;  d               2   30[BANK1 ] unsigned int 
 12808 ;; Auto vars:     Size  Location     Type
 12809 ;;  i               2   36[BANK1 ] int 
 12810 ;;  w               2   34[BANK1 ] int 
 12811 ;;  p               1   33[BANK1 ] _Bool 
 12812 ;; Return value:  Size  Location     Type
 12813 ;;                  2   28[BANK1 ] int 
 12814 ;; Registers used:
 12815 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 12816 ;; Tracked objects:
 12817 ;;		On entry : 0/0
 12818 ;;		On exit  : 0/0
 12819 ;;		Unchanged: 0/0
 12820 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 12821 ;;      Params:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0
 12822 ;;      Locals:         0       0       5       0       0       0       0       0       0       0       0       0       
      +0       0
 12823 ;;      Temps:          0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0
 12824 ;;      Totals:         0       0      10       0       0       0       0       0       0       0       0       0       
      +0       0
 12825 ;;Total ram usage:       10 bytes
 12826 ;; Hardware stack levels used: 1
 12827 ;; Hardware stack levels required when called: 10
 12828 ;; This function calls:
 12829 ;;		___lwdiv
 12830 ;;		___lwmod
 12831 ;;		_pad
 12832 ;; This function is called by:
 12833 ;;		_vfpfcnvrt
 12834 ;; This function uses a non-reentrant model
 12835 ;;
 12836                           
 12837     1649                     _utoa:	
 12838                           ;psect for function _utoa
 12839                           
 12840     1649                     l4446:	
 12841                           ;incstack = 0
 12842                           ; Regs used in _utoa: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 12843                           
 12844                           
 12845                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1001: static int 
      +                          utoa(FILE *fp, vfpf_uint_t d);C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\commo
      +                          n\doprnt.c: 1002: {;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c
      +                          : 1003:     int i, w;;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt
      +                          .c: 1007:  _Bool p = 1;
 12846     1649  3001               	movlw	1
 12847     164A  0021               	movlb	1	; select bank1
 12848     164B  00C1               	movwf	utoa@p^(0+128)
 12849     164C                     l4448:
 12850                           
 12851                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1019:     w = wid
      +                          th;
 12852     164C  0020               	movlb	0	; select bank0
 12853     164D  0856               	movf	_width+1,w
 12854     164E  0021               	movlb	1	; select bank1
 12855     164F  00C3               	movwf	(utoa@w+1)^(0+128)
 12856     1650  0020               	movlb	0	; select bank0
 12857     1651  0855               	movf	_width,w
 12858     1652  0021               	movlb	1	; select bank1
 12859     1653  00C2               	movwf	utoa@w^(0+128)
 12860                           
 12861                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1022:     i = siz
      +                          eof(dbuf) - 1;
 12862     1654  301F               	movlw	31
 12863     1655  00C4               	movwf	utoa@i^(0+128)
 12864     1656  3000               	movlw	0
 12865     1657  00C5               	movwf	(utoa@i^(0+128)+1)
 12866     1658                     l4450:
 12867                           
 12868                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1023:     dbuf[i]
      +                           = '\0';
 12869     1658  0023               	movlb	3	; select bank3
 12870     1659  01BF               	clrf	(_dbuf^(0+384)+31)
 12871                           
 12872                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1024:     while (
      +                          i && (d != 0
 12873     165A  2E89               	goto	l4462
 12874     165B                     l4452:
 12875                           
 12876                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1033:     )) {;C:
      +                          \Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1034:         --i;
 12877     165B  30FF               	movlw	255
 12878     165C  0021               	movlb	1	; select bank1
 12879     165D  07C4               	addwf	utoa@i^(0+128),f
 12880     165E  30FF               	movlw	255
 12881     165F  3DC5               	addwfc	(utoa@i+1)^(0+128),f
 12882     1660                     l4454:
 12883                           
 12884                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1035:         dbu
      +                          f[i] = '0' + (d % 10);
 12885     1660  0844               	movf	utoa@i^(0+128),w
 12886     1661  3EA0               	addlw	(low (_dbuf| (0+256)))& (0+255)
 12887     1662  0086               	movwf	6
 12888     1663  3001               	movlw	1	; select bank3/4
 12889     1664  0087               	movwf	7
 12890     1665  300A               	movlw	10
 12891     1666  00A0               	movwf	___lwmod@divisor^(0+128)
 12892     1667  3000               	movlw	0
 12893     1668  00A1               	movwf	(___lwmod@divisor^(0+128)+1)
 12894     1669  083F               	movf	(utoa@d+1)^(0+128),w
 12895     166A  00A3               	movwf	(___lwmod@dividend+1)^(0+128)
 12896     166B  083E               	movf	utoa@d^(0+128),w
 12897     166C  00A2               	movwf	___lwmod@dividend^(0+128)
 12898     166D  3191  2128  3196   	fcall	___lwmod
 12899     1670  0021               	movlb	1	; select bank1
 12900     1671  0820               	movf	?___lwmod^(0+128),w
 12901     1672  3E30               	addlw	48
 12902     1673  0081               	movwf	1
 12903     1674                     l4456:
 12904                           
 12905                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1039:   p = 0;
 12906     1674  01C1               	clrf	utoa@p^(0+128)
 12907     1675                     l4458:
 12908                           
 12909                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1041:         --w
      +                          ;
 12910     1675  30FF               	movlw	255
 12911     1676  07C2               	addwf	utoa@w^(0+128),f
 12912     1677  30FF               	movlw	255
 12913     1678  3DC3               	addwfc	(utoa@w+1)^(0+128),f
 12914     1679                     l4460:
 12915                           
 12916                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1042:         d =
      +                           d / 10;
 12917     1679  300A               	movlw	10
 12918     167A  00A0               	movwf	___lwdiv@divisor^(0+128)
 12919     167B  3000               	movlw	0
 12920     167C  00A1               	movwf	(___lwdiv@divisor^(0+128)+1)
 12921     167D  083F               	movf	(utoa@d+1)^(0+128),w
 12922     167E  00A3               	movwf	(___lwdiv@dividend+1)^(0+128)
 12923     167F  083E               	movf	utoa@d^(0+128),w
 12924     1680  00A2               	movwf	___lwdiv@dividend^(0+128)
 12925     1681  3191  2192  3196   	fcall	___lwdiv
 12926     1684  0021               	movlb	1	; select bank1
 12927     1685  0821               	movf	(?___lwdiv+1)^(0+128),w
 12928     1686  00BF               	movwf	(utoa@d+1)^(0+128)
 12929     1687  0820               	movf	?___lwdiv^(0+128),w
 12930     1688  00BE               	movwf	utoa@d^(0+128)
 12931     1689                     l4462:
 12932                           
 12933                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1024:     while (
      +                          i && (d != 0
 12934     1689  0021               	movlb	1	; select bank1
 12935     168A  0844               	movf	utoa@i^(0+128),w
 12936     168B  0445               	iorwf	(utoa@i+1)^(0+128),w
 12937     168C  1903               	btfsc	3,2
 12938     168D  2E8F               	goto	u4441
 12939     168E  2E90               	goto	u4440
 12940     168F                     u4441:
 12941     168F  2EAD               	goto	l4472
 12942     1690                     u4440:
 12943     1690                     l4464:
 12944     1690  083E               	movf	utoa@d^(0+128),w
 12945     1691  043F               	iorwf	(utoa@d+1)^(0+128),w
 12946     1692  1D03               	btfss	3,2
 12947     1693  2E95               	goto	u4451
 12948     1694  2E96               	goto	u4450
 12949     1695                     u4451:
 12950     1695  2E5B               	goto	l4452
 12951     1696                     u4450:
 12952     1696                     l4466:
 12953     1696  0841               	movf	utoa@p^(0+128),w
 12954     1697  1D03               	btfss	3,2
 12955     1698  2E9A               	goto	u4461
 12956     1699  2E9B               	goto	u4460
 12957     169A                     u4461:
 12958     169A  2E5B               	goto	l4452
 12959     169B                     u4460:
 12960     169B                     l4468:
 12961     169B  0843               	movf	(utoa@w+1)^(0+128),w
 12962     169C  3A80               	xorlw	128
 12963     169D  00C0               	movwf	??_utoa^(0+128)
 12964     169E  3080               	movlw	128
 12965     169F  0240               	subwf	??_utoa^(0+128),w
 12966     16A0  1D03               	skipz
 12967     16A1  2EA4               	goto	u4475
 12968     16A2  3001               	movlw	1
 12969     16A3  0242               	subwf	utoa@w^(0+128),w
 12970     16A4                     u4475:
 12971     16A4  1C03               	skipc
 12972     16A5  2EA7               	goto	u4471
 12973     16A6  2EA8               	goto	u4470
 12974     16A7                     u4471:
 12975     16A7  2EAD               	goto	l4472
 12976     16A8                     u4470:
 12977     16A8                     l4470:
 12978     16A8  0020               	movlb	0	; select bank0
 12979     16A9  18E3               	btfsc	_flags,1
 12980     16AA  2EAC               	goto	u4481
 12981     16AB  2EAD               	goto	u4480
 12982     16AC                     u4481:
 12983     16AC  2E5B               	goto	l4452
 12984     16AD                     u4480:
 12985     16AD                     l4472:
 12986                           
 12987                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1046:     return 
      +                          (int) pad(fp, &dbuf[i], w);
 12988     16AD  0021               	movlb	1	; select bank1
 12989     16AE  083D               	movf	(utoa@fp+1)^(0+128),w
 12990     16AF  00B5               	movwf	(pad@fp+1)^(0+128)
 12991     16B0  083C               	movf	utoa@fp^(0+128),w
 12992     16B1  00B4               	movwf	pad@fp^(0+128)
 12993     16B2  0844               	movf	utoa@i^(0+128),w
 12994     16B3  3EA0               	addlw	(low (_dbuf| (0+256)))& (0+255)
 12995     16B4  00B6               	movwf	pad@buf^(0+128)
 12996     16B5  0843               	movf	(utoa@w+1)^(0+128),w
 12997     16B6  00B8               	movwf	(pad@p+1)^(0+128)
 12998     16B7  0842               	movf	utoa@w^(0+128),w
 12999     16B8  00B7               	movwf	pad@p^(0+128)
 13000     16B9  3192  22F3  3196   	fcall	_pad
 13001     16BC  0021               	movlb	1	; select bank1
 13002     16BD  0835               	movf	(?_pad+1)^(0+128),w
 13003     16BE  00BD               	movwf	(?_utoa+1)^(0+128)
 13004     16BF  0834               	movf	?_pad^(0+128),w
 13005     16C0  00BC               	movwf	?_utoa^(0+128)
 13006     16C1                     l1742:
 13007     16C1  0008               	return
 13008     16C2                     __end_of_utoa:
 13009                           
 13010                           	psect	text19
 13011     1128                     __ptext19:	
 13012 ;; *************** function ___lwmod *****************
 13013 ;; Defined at:
 13014 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\lwmod.c"
 13015 ;; Parameters:    Size  Location     Type
 13016 ;;  divisor         2    0[BANK1 ] unsigned int 
 13017 ;;  dividend        2    2[BANK1 ] unsigned int 
 13018 ;; Auto vars:     Size  Location     Type
 13019 ;;  counter         1    4[BANK1 ] unsigned char 
 13020 ;; Return value:  Size  Location     Type
 13021 ;;                  2    0[BANK1 ] unsigned int 
 13022 ;; Registers used:
 13023 ;;		wreg, status,2, status,0
 13024 ;; Tracked objects:
 13025 ;;		On entry : 0/0
 13026 ;;		On exit  : 0/0
 13027 ;;		Unchanged: 0/0
 13028 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 13029 ;;      Params:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0
 13030 ;;      Locals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0
 13031 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13032 ;;      Totals:         0       0       5       0       0       0       0       0       0       0       0       0       
      +0       0
 13033 ;;Total ram usage:        5 bytes
 13034 ;; Hardware stack levels used: 1
 13035 ;; Hardware stack levels required when called: 5
 13036 ;; This function calls:
 13037 ;;		Nothing
 13038 ;; This function is called by:
 13039 ;;		_utoa
 13040 ;; This function uses a non-reentrant model
 13041 ;;
 13042                           
 13043     1128                     ___lwmod:	
 13044                           ;psect for function ___lwmod
 13045                           
 13046     1128                     l4350:	
 13047                           ;incstack = 0
 13048                           ; Regs used in ___lwmod: [wreg+status,2+status,0]
 13049                           
 13050     1128  0021               	movlb	1	; select bank1
 13051     1129  0820               	movf	___lwmod@divisor^(0+128),w
 13052     112A  0421               	iorwf	(___lwmod@divisor+1)^(0+128),w
 13053     112B  1903               	btfsc	3,2
 13054     112C  292E               	goto	u4231
 13055     112D  292F               	goto	u4230
 13056     112E                     u4231:
 13057     112E  2956               	goto	l4368
 13058     112F                     u4230:
 13059     112F                     l4352:
 13060     112F  3001               	movlw	1
 13061     1130  00A4               	movwf	___lwmod@counter^(0+128)
 13062     1131  2939               	goto	l4358
 13063     1132                     l4354:
 13064     1132  3001               	movlw	1
 13065     1133                     u4245:
 13066     1133  35A0               	lslf	___lwmod@divisor^(0+128),f
 13067     1134  0DA1               	rlf	(___lwmod@divisor+1)^(0+128),f
 13068     1135  0B89               	decfsz	9,f
 13069     1136  2933               	goto	u4245
 13070     1137                     l4356:
 13071     1137  3001               	movlw	1
 13072     1138  07A4               	addwf	___lwmod@counter^(0+128),f
 13073     1139                     l4358:
 13074     1139  1FA1               	btfss	(___lwmod@divisor+1)^(0+128),7
 13075     113A  293C               	goto	u4251
 13076     113B  293D               	goto	u4250
 13077     113C                     u4251:
 13078     113C  2932               	goto	l4354
 13079     113D                     u4250:
 13080     113D                     l4360:
 13081     113D  0821               	movf	(___lwmod@divisor+1)^(0+128),w
 13082     113E  0223               	subwf	(___lwmod@dividend+1)^(0+128),w
 13083     113F  1D03               	skipz
 13084     1140  2943               	goto	u4265
 13085     1141  0820               	movf	___lwmod@divisor^(0+128),w
 13086     1142  0222               	subwf	___lwmod@dividend^(0+128),w
 13087     1143                     u4265:
 13088     1143  1C03               	skipc
 13089     1144  2946               	goto	u4261
 13090     1145  2947               	goto	u4260
 13091     1146                     u4261:
 13092     1146  294B               	goto	l4364
 13093     1147                     u4260:
 13094     1147                     l4362:
 13095     1147  0820               	movf	___lwmod@divisor^(0+128),w
 13096     1148  02A2               	subwf	___lwmod@dividend^(0+128),f
 13097     1149  0821               	movf	(___lwmod@divisor+1)^(0+128),w
 13098     114A  3BA3               	subwfb	(___lwmod@dividend+1)^(0+128),f
 13099     114B                     l4364:
 13100     114B  3001               	movlw	1
 13101     114C                     u4275:
 13102     114C  36A1               	lsrf	(___lwmod@divisor+1)^(0+128),f
 13103     114D  0CA0               	rrf	___lwmod@divisor^(0+128),f
 13104     114E  0B89               	decfsz	9,f
 13105     114F  294C               	goto	u4275
 13106     1150                     l4366:
 13107     1150  3001               	movlw	1
 13108     1151  02A4               	subwf	___lwmod@counter^(0+128),f
 13109     1152  1D03               	btfss	3,2
 13110     1153  2955               	goto	u4281
 13111     1154  2956               	goto	u4280
 13112     1155                     u4281:
 13113     1155  293D               	goto	l4360
 13114     1156                     u4280:
 13115     1156                     l4368:
 13116     1156  0823               	movf	(___lwmod@dividend+1)^(0+128),w
 13117     1157  00A1               	movwf	(?___lwmod+1)^(0+128)
 13118     1158  0822               	movf	___lwmod@dividend^(0+128),w
 13119     1159  00A0               	movwf	?___lwmod^(0+128)
 13120     115A                     l1498:
 13121     115A  0008               	return
 13122     115B                     __end_of___lwmod:
 13123                           
 13124                           	psect	text20
 13125     14B0                     __ptext20:	
 13126 ;; *************** function _read_prec_or_width *****************
 13127 ;; Defined at:
 13128 ;;		line 1158 in file "C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c"
 13129 ;; Parameters:    Size  Location     Type
 13130 ;;  fmt             1    6[BANK1 ] PTR PTR const unsigned c
 13131 ;;		 -> vfprintf@cfmt(2), 
 13132 ;;  ap              1    7[BANK1 ] PTR PTR void [1]
 13133 ;;		 -> printf@ap(1), 
 13134 ;; Auto vars:     Size  Location     Type
 13135 ;;  c               1   11[BANK1 ] unsigned char 
 13136 ;;  n               2   12[BANK1 ] int 
 13137 ;; Return value:  Size  Location     Type
 13138 ;;                  2    6[BANK1 ] int 
 13139 ;; Registers used:
 13140 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 13141 ;; Tracked objects:
 13142 ;;		On entry : 0/0
 13143 ;;		On exit  : 0/0
 13144 ;;		Unchanged: 0/0
 13145 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 13146 ;;      Params:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0
 13147 ;;      Locals:         0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0
 13148 ;;      Temps:          0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0
 13149 ;;      Totals:         0       0       8       0       0       0       0       0       0       0       0       0       
      +0       0
 13150 ;;Total ram usage:        8 bytes
 13151 ;; Hardware stack levels used: 1
 13152 ;; Hardware stack levels required when called: 6
 13153 ;; This function calls:
 13154 ;;		___wmul
 13155 ;; This function is called by:
 13156 ;;		_vfpfcnvrt
 13157 ;; This function uses a non-reentrant model
 13158 ;;
 13159                           
 13160     14B0                     _read_prec_or_width:	
 13161                           ;psect for function _read_prec_or_width
 13162                           
 13163     14B0                     l4476:	
 13164                           ;incstack = 0
 13165                           ; Regs used in _read_prec_or_width: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 13166                           
 13167                           
 13168                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1159:     int n =
      +                           0;
 13169     14B0  0021               	movlb	1	; select bank1
 13170     14B1  01AC               	clrf	read_prec_or_width@n^(0+128)
 13171     14B2  01AD               	clrf	(read_prec_or_width@n+1)^(0+128)
 13172     14B3                     l4478:
 13173                           
 13174                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1160:     if ((*f
      +                          mt)[0] == '*') {
 13175     14B3  0826               	movf	read_prec_or_width@fmt^(0+128),w
 13176     14B4  0086               	movwf	6
 13177     14B5  0187               	clrf	7
 13178     14B6  3F40               	moviw [0]fsr1
 13179     14B7  00A8               	movwf	??_read_prec_or_width^(0+128)
 13180     14B8  3F41               	moviw [1]fsr1
 13181     14B9  00A9               	movwf	(??_read_prec_or_width^(0+128)+1)
 13182     14BA  0828               	movf	??_read_prec_or_width^(0+128),w
 13183     14BB  0084               	movwf	4
 13184     14BC  0829               	movf	(??_read_prec_or_width+1)^(0+128),w
 13185     14BD  0085               	movwf	5
 13186     14BE  0012               	moviw fsr0++
 13187     14BF  3A2A               	xorlw	42
 13188     14C0  1D03               	btfss	3,2
 13189     14C1  2CC3               	goto	u4491
 13190     14C2  2CC4               	goto	u4490
 13191     14C3                     u4491:
 13192     14C3  2CF3               	goto	l4488
 13193     14C4                     u4490:
 13194     14C4                     l4480:
 13195                           
 13196                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1161:         ++*
      +                          fmt;
 13197     14C4  0826               	movf	read_prec_or_width@fmt^(0+128),w
 13198     14C5  0086               	movwf	6
 13199     14C6  0187               	clrf	7
 13200     14C7  3001               	movlw	1
 13201     14C8  0781               	addwf	1,f
 13202     14C9  3141               	addfsr 1,1
 13203     14CA  1803               	skipnc
 13204     14CB  0A81               	incf	1,f
 13205     14CC                     l4482:
 13206                           
 13207                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1162:         n =
      +                           (*(int *)__va_arg(*(int **)*ap, (int)0));
 13208     14CC  0827               	movf	read_prec_or_width@ap^(0+128),w
 13209     14CD  0086               	movwf	6
 13210     14CE  0187               	clrf	7
 13211     14CF  0801               	movf	1,w
 13212     14D0  0084               	movwf	4
 13213     14D1  0185               	clrf	5
 13214     14D2  3002               	movlw	2
 13215     14D3  0781               	addwf	1,f
 13216     14D4  3F00               	moviw [0]fsr0
 13217     14D5  00AC               	movwf	read_prec_or_width@n^(0+128)
 13218     14D6  3F01               	moviw [1]fsr0
 13219     14D7  00AD               	movwf	(read_prec_or_width@n+1)^(0+128)
 13220                           
 13221                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1163:     } else 
      +                          {
 13222     14D8  2D07               	goto	l4490
 13223     14D9                     l4484:
 13224                           
 13225                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1166:            
      +                           n = n * 10 + c;
 13226     14D9  082D               	movf	(read_prec_or_width@n+1)^(0+128),w
 13227     14DA  00A1               	movwf	(___wmul@multiplier+1)^(0+128)
 13228     14DB  082C               	movf	read_prec_or_width@n^(0+128),w
 13229     14DC  00A0               	movwf	___wmul@multiplier^(0+128)
 13230     14DD  300A               	movlw	10
 13231     14DE  00A2               	movwf	___wmul@multiplicand^(0+128)
 13232     14DF  3000               	movlw	0
 13233     14E0  00A3               	movwf	(___wmul@multiplicand^(0+128)+1)
 13234     14E1  319F  27C0  3194   	fcall	___wmul
 13235     14E4  0021               	movlb	1	; select bank1
 13236     14E5  082B               	movf	read_prec_or_width@c^(0+128),w
 13237     14E6  0720               	addwf	?___wmul^(0+128),w
 13238     14E7  00AC               	movwf	read_prec_or_width@n^(0+128)
 13239     14E8  3000               	movlw	0
 13240     14E9  3D21               	addwfc	(?___wmul+1)^(0+128),w
 13241     14EA  00AD               	movwf	(read_prec_or_width@n+1)^(0+128)
 13242     14EB                     l4486:
 13243                           
 13244                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1167:            
      +                           ++*fmt;
 13245     14EB  0826               	movf	read_prec_or_width@fmt^(0+128),w
 13246     14EC  0086               	movwf	6
 13247     14ED  0187               	clrf	7
 13248     14EE  3001               	movlw	1
 13249     14EF  0781               	addwf	1,f
 13250     14F0  3141               	addfsr 1,1
 13251     14F1  1803               	skipnc
 13252     14F2  0A81               	incf	1,f
 13253     14F3                     l4488:
 13254                           
 13255                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1165:         whi
      +                          le ((c = ((unsigned)(*fmt)[0]) - '0') < 10) {
 13256     14F3  0826               	movf	read_prec_or_width@fmt^(0+128),w
 13257     14F4  0086               	movwf	6
 13258     14F5  0187               	clrf	7
 13259     14F6  3F40               	moviw [0]fsr1
 13260     14F7  00A8               	movwf	??_read_prec_or_width^(0+128)
 13261     14F8  3F41               	moviw [1]fsr1
 13262     14F9  00A9               	movwf	(??_read_prec_or_width^(0+128)+1)
 13263     14FA  0828               	movf	??_read_prec_or_width^(0+128),w
 13264     14FB  0084               	movwf	4
 13265     14FC  0829               	movf	(??_read_prec_or_width+1)^(0+128),w
 13266     14FD  0085               	movwf	5
 13267     14FE  0800               	movf	0,w	;code access
 13268     14FF  3ED0               	addlw	208
 13269     1500  00AB               	movwf	read_prec_or_width@c^(0+128)
 13270     1501  300A               	movlw	10
 13271     1502  022B               	subwf	read_prec_or_width@c^(0+128),w
 13272     1503  1C03               	skipc
 13273     1504  2D06               	goto	u4501
 13274     1505  2D07               	goto	u4500
 13275     1506                     u4501:
 13276     1506  2CD9               	goto	l4484
 13277     1507                     u4500:
 13278     1507                     l4490:
 13279                           
 13280                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1170:     return 
      +                          n;
 13281     1507  082D               	movf	(read_prec_or_width@n+1)^(0+128),w
 13282     1508  00A7               	movwf	(?_read_prec_or_width+1)^(0+128)
 13283     1509  082C               	movf	read_prec_or_width@n^(0+128),w
 13284     150A  00A6               	movwf	?_read_prec_or_width^(0+128)
 13285     150B                     l1750:
 13286     150B  0008               	return
 13287     150C                     __end_of_read_prec_or_width:
 13288                           
 13289                           	psect	text21
 13290     0715                     __ptext21:	
 13291 ;; *************** function _dtoa *****************
 13292 ;; Defined at:
 13293 ;;		line 513 in file "C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c"
 13294 ;; Parameters:    Size  Location     Type
 13295 ;;  fp              2   28[BANK1 ] PTR struct _IO_FILE
 13296 ;;		 -> NULL(0), 
 13297 ;;  d               2   30[BANK1 ] int 
 13298 ;; Auto vars:     Size  Location     Type
 13299 ;;  i               2   39[BANK1 ] int 
 13300 ;;  w               2   36[BANK1 ] int 
 13301 ;;  s               1   38[BANK1 ] unsigned char 
 13302 ;;  p               1   35[BANK1 ] _Bool 
 13303 ;; Return value:  Size  Location     Type
 13304 ;;                  2   28[BANK1 ] int 
 13305 ;; Registers used:
 13306 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 13307 ;; Tracked objects:
 13308 ;;		On entry : 0/0
 13309 ;;		On exit  : 0/0
 13310 ;;		Unchanged: 0/0
 13311 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 13312 ;;      Params:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0
 13313 ;;      Locals:         0       0       8       0       0       0       0       0       0       0       0       0       
      +0       0
 13314 ;;      Temps:          0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0
 13315 ;;      Totals:         0       0      13       0       0       0       0       0       0       0       0       0       
      +0       0
 13316 ;;Total ram usage:       13 bytes
 13317 ;; Hardware stack levels used: 1
 13318 ;; Hardware stack levels required when called: 10
 13319 ;; This function calls:
 13320 ;;		___awdiv
 13321 ;;		___awmod
 13322 ;;		_abs
 13323 ;;		_pad
 13324 ;; This function is called by:
 13325 ;;		_vfpfcnvrt
 13326 ;; This function uses a non-reentrant model
 13327 ;;
 13328                           
 13329     0715                     _dtoa:	
 13330                           ;psect for function _dtoa
 13331                           
 13332     0715                     l4400:	
 13333                           ;incstack = 0
 13334                           ; Regs used in _dtoa: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 13335                           
 13336                           
 13337                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 513: static int d
      +                          toa(FILE *fp, vfpf_sint_t d);C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common
      +                          \doprnt.c: 514: {;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 
      +                          515:  char s;;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 516:
      +                               int i, w;;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 520
      +                          :  _Bool p = 1;
 13338     0715  3001               	movlw	1
 13339     0716  0021               	movlb	1	; select bank1
 13340     0717  00C3               	movwf	dtoa@p^(0+128)
 13341     0718                     l4402:
 13342                           
 13343                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 524:     s = d < 
      +                          0 ? 1 : 0;
 13344     0718  1BBF               	btfsc	(dtoa@d+1)^(0+128),7
 13345     0719  2F1B               	goto	u4341
 13346     071A  2F1D               	goto	u4340
 13347     071B                     u4341:
 13348     071B  3001               	movlw	1
 13349     071C  2F1E               	goto	u4350
 13350     071D                     u4340:
 13351     071D  3000               	movlw	0
 13352     071E                     u4350:
 13353     071E  00C6               	movwf	dtoa@s^(0+128)
 13354                           
 13355                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 535:     w = widt
      +                          h;
 13356     071F  0020               	movlb	0	; select bank0
 13357     0720  0856               	movf	_width+1,w
 13358     0721  0021               	movlb	1	; select bank1
 13359     0722  00C5               	movwf	(dtoa@w+1)^(0+128)
 13360     0723  0020               	movlb	0	; select bank0
 13361     0724  0855               	movf	_width,w
 13362     0725  0021               	movlb	1	; select bank1
 13363     0726  00C4               	movwf	dtoa@w^(0+128)
 13364     0727                     l4404:
 13365                           
 13366                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 536:     if (s
 13367     0727  0846               	movf	dtoa@s^(0+128),w
 13368     0728  1903               	btfsc	3,2
 13369     0729  2F2B               	goto	u4361
 13370     072A  2F2C               	goto	u4360
 13371     072B                     u4361:
 13372     072B  2F40               	goto	l1719
 13373     072C                     u4360:
 13374     072C                     l4406:
 13375                           
 13376                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 540:     ) {;C:\P
      +                          rogram Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 541:         --w;
 13377     072C  30FF               	movlw	255
 13378     072D  07C4               	addwf	dtoa@w^(0+128),f
 13379     072E  30FF               	movlw	255
 13380     072F  3DC5               	addwfc	(dtoa@w+1)^(0+128),f
 13381     0730                     l4408:
 13382                           
 13383                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 542:   s = s ? '-
      +                          ' : '+';
 13384     0730  0846               	movf	dtoa@s^(0+128),w
 13385     0731  1D03               	btfss	3,2
 13386     0732  2F34               	goto	u4371
 13387     0733  2F35               	goto	u4370
 13388     0734                     u4371:
 13389     0734  2F3A               	goto	l4412
 13390     0735                     u4370:
 13391     0735                     l4410:
 13392     0735  302B               	movlw	43
 13393     0736  00C1               	movwf	_dtoa$2139^(0+128)
 13394     0737  3000               	movlw	0
 13395     0738  00C2               	movwf	(_dtoa$2139^(0+128)+1)
 13396     0739  2F3E               	goto	l1723
 13397     073A                     l4412:
 13398     073A  302D               	movlw	45
 13399     073B  00C1               	movwf	_dtoa$2139^(0+128)
 13400     073C  3000               	movlw	0
 13401     073D  00C2               	movwf	(_dtoa$2139^(0+128)+1)
 13402     073E                     l1723:
 13403     073E  0841               	movf	_dtoa$2139^(0+128),w
 13404     073F  00C6               	movwf	dtoa@s^(0+128)
 13405     0740                     l1719:	
 13406                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 543:     }
 13407                           
 13408                           
 13409                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 552:     i = size
      +                          of(dbuf) - 1;
 13410     0740  301F               	movlw	31
 13411     0741  00C7               	movwf	dtoa@i^(0+128)
 13412     0742  3000               	movlw	0
 13413     0743  00C8               	movwf	(dtoa@i^(0+128)+1)
 13414     0744                     l4414:
 13415                           
 13416                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 553:     dbuf[i] 
      +                          = '\0';
 13417     0744  0023               	movlb	3	; select bank3
 13418     0745  01BF               	clrf	(_dbuf^(0+384)+31)
 13419                           
 13420                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 554:     while (!
      +                          (i < 1) && (d != 0
 13421     0746  2F7D               	goto	l4426
 13422     0747                     l4416:
 13423                           
 13424                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 563:     )) {;C:\
      +                          Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 564:         --i;
 13425     0747  30FF               	movlw	255
 13426     0748  0021               	movlb	1	; select bank1
 13427     0749  07C7               	addwf	dtoa@i^(0+128),f
 13428     074A  30FF               	movlw	255
 13429     074B  3DC8               	addwfc	(dtoa@i+1)^(0+128),f
 13430     074C                     l4418:
 13431                           
 13432                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 565:         dbuf
      +                          [i] = (char)((int)'0' + abs(d % 10));
 13433     074C  0847               	movf	dtoa@i^(0+128),w
 13434     074D  3EA0               	addlw	(low (_dbuf| (0+256)))& (0+255)
 13435     074E  0086               	movwf	6
 13436     074F  3001               	movlw	1	; select bank3/4
 13437     0750  0087               	movwf	7
 13438     0751  300A               	movlw	10
 13439     0752  00A0               	movwf	___awmod@divisor^(0+128)
 13440     0753  3000               	movlw	0
 13441     0754  00A1               	movwf	(___awmod@divisor^(0+128)+1)
 13442     0755  083F               	movf	(dtoa@d+1)^(0+128),w
 13443     0756  00A3               	movwf	(___awmod@dividend+1)^(0+128)
 13444     0757  083E               	movf	dtoa@d^(0+128),w
 13445     0758  00A2               	movwf	___awmod@dividend^(0+128)
 13446     0759  3192  22A1  3187   	fcall	___awmod
 13447     075C  0021               	movlb	1	; select bank1
 13448     075D  0821               	movf	(?___awmod+1)^(0+128),w
 13449     075E  00A7               	movwf	(abs@a+1)^(0+128)
 13450     075F  0820               	movf	?___awmod^(0+128),w
 13451     0760  00A6               	movwf	abs@a^(0+128)
 13452     0761  319E  26F8  3187   	fcall	_abs
 13453     0764  0021               	movlb	1	; select bank1
 13454     0765  0826               	movf	?_abs^(0+128),w
 13455     0766  3E30               	addlw	48
 13456     0767  0081               	movwf	1
 13457     0768                     l4420:
 13458                           
 13459                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 569:   p = 0;
 13460     0768  01C3               	clrf	dtoa@p^(0+128)
 13461     0769                     l4422:
 13462                           
 13463                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 571:         --w;
 13464     0769  30FF               	movlw	255
 13465     076A  07C4               	addwf	dtoa@w^(0+128),f
 13466     076B  30FF               	movlw	255
 13467     076C  3DC5               	addwfc	(dtoa@w+1)^(0+128),f
 13468     076D                     l4424:
 13469                           
 13470                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 572:         d = 
      +                          d / 10;
 13471     076D  300A               	movlw	10
 13472     076E  00A0               	movwf	___awdiv@divisor^(0+128)
 13473     076F  3000               	movlw	0
 13474     0770  00A1               	movwf	(___awdiv@divisor^(0+128)+1)
 13475     0771  083F               	movf	(dtoa@d+1)^(0+128),w
 13476     0772  00A3               	movwf	(___awdiv@dividend+1)^(0+128)
 13477     0773  083E               	movf	dtoa@d^(0+128),w
 13478     0774  00A2               	movwf	___awdiv@dividend^(0+128)
 13479     0775  3194  2454  3187   	fcall	___awdiv
 13480     0778  0021               	movlb	1	; select bank1
 13481     0779  0821               	movf	(?___awdiv+1)^(0+128),w
 13482     077A  00BF               	movwf	(dtoa@d+1)^(0+128)
 13483     077B  0820               	movf	?___awdiv^(0+128),w
 13484     077C  00BE               	movwf	dtoa@d^(0+128)
 13485     077D                     l4426:
 13486                           
 13487                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 554:     while (!
      +                          (i < 1) && (d != 0
 13488     077D  0021               	movlb	1	; select bank1
 13489     077E  0848               	movf	(dtoa@i+1)^(0+128),w
 13490     077F  3A80               	xorlw	128
 13491     0780  00C0               	movwf	??_dtoa^(0+128)
 13492     0781  3080               	movlw	128
 13493     0782  0240               	subwf	??_dtoa^(0+128),w
 13494     0783  1D03               	skipz
 13495     0784  2F87               	goto	u4385
 13496     0785  3001               	movlw	1
 13497     0786  0247               	subwf	dtoa@i^(0+128),w
 13498     0787                     u4385:
 13499     0787  1C03               	skipc
 13500     0788  2F8A               	goto	u4381
 13501     0789  2F8B               	goto	u4380
 13502     078A                     u4381:
 13503     078A  2FA9               	goto	l4436
 13504     078B                     u4380:
 13505     078B                     l4428:
 13506     078B  0021               	movlb	1	; select bank1
 13507     078C  083E               	movf	dtoa@d^(0+128),w
 13508     078D  043F               	iorwf	(dtoa@d+1)^(0+128),w
 13509     078E  1D03               	btfss	3,2
 13510     078F  2F91               	goto	u4391
 13511     0790  2F92               	goto	u4390
 13512     0791                     u4391:
 13513     0791  2F47               	goto	l4416
 13514     0792                     u4390:
 13515     0792                     l4430:
 13516     0792  0843               	movf	dtoa@p^(0+128),w
 13517     0793  1D03               	btfss	3,2
 13518     0794  2F96               	goto	u4401
 13519     0795  2F97               	goto	u4400
 13520     0796                     u4401:
 13521     0796  2F47               	goto	l4416
 13522     0797                     u4400:
 13523     0797                     l4432:
 13524     0797  0845               	movf	(dtoa@w+1)^(0+128),w
 13525     0798  3A80               	xorlw	128
 13526     0799  00C0               	movwf	??_dtoa^(0+128)
 13527     079A  3080               	movlw	128
 13528     079B  0240               	subwf	??_dtoa^(0+128),w
 13529     079C  1D03               	skipz
 13530     079D  2FA0               	goto	u4415
 13531     079E  3001               	movlw	1
 13532     079F  0244               	subwf	dtoa@w^(0+128),w
 13533     07A0                     u4415:
 13534     07A0  1C03               	skipc
 13535     07A1  2FA3               	goto	u4411
 13536     07A2  2FA4               	goto	u4410
 13537     07A3                     u4411:
 13538     07A3  2FA9               	goto	l4436
 13539     07A4                     u4410:
 13540     07A4                     l4434:
 13541     07A4  0020               	movlb	0	; select bank0
 13542     07A5  18E3               	btfsc	_flags,1
 13543     07A6  2FA8               	goto	u4421
 13544     07A7  2FA9               	goto	u4420
 13545     07A8                     u4421:
 13546     07A8  2F47               	goto	l4416
 13547     07A9                     u4420:
 13548     07A9                     l4436:
 13549                           
 13550                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 576:     if (s !=
      +                           0) {
 13551     07A9  0021               	movlb	1	; select bank1
 13552     07AA  0846               	movf	dtoa@s^(0+128),w
 13553     07AB  1903               	btfsc	3,2
 13554     07AC  2FAE               	goto	u4431
 13555     07AD  2FAF               	goto	u4430
 13556     07AE                     u4431:
 13557     07AE  2FBA               	goto	l4442
 13558     07AF                     u4430:
 13559     07AF                     l4438:
 13560                           
 13561                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 577:         --i;
 13562     07AF  30FF               	movlw	255
 13563     07B0  07C7               	addwf	dtoa@i^(0+128),f
 13564     07B1  30FF               	movlw	255
 13565     07B2  3DC8               	addwfc	(dtoa@i+1)^(0+128),f
 13566     07B3                     l4440:
 13567                           
 13568                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 578:         dbuf
      +                          [i] = s;
 13569     07B3  0847               	movf	dtoa@i^(0+128),w
 13570     07B4  3EA0               	addlw	(low (_dbuf| (0+256)))& (0+255)
 13571     07B5  0086               	movwf	6
 13572     07B6  3001               	movlw	1	; select bank3/4
 13573     07B7  0087               	movwf	7
 13574     07B8  0846               	movf	dtoa@s^(0+128),w
 13575     07B9  0081               	movwf	1
 13576     07BA                     l4442:
 13577                           
 13578                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 582:     return (
      +                          int) pad(fp, &dbuf[i], w);
 13579     07BA  083D               	movf	(dtoa@fp+1)^(0+128),w
 13580     07BB  00B5               	movwf	(pad@fp+1)^(0+128)
 13581     07BC  083C               	movf	dtoa@fp^(0+128),w
 13582     07BD  00B4               	movwf	pad@fp^(0+128)
 13583     07BE  0847               	movf	dtoa@i^(0+128),w
 13584     07BF  3EA0               	addlw	(low (_dbuf| (0+256)))& (0+255)
 13585     07C0  00B6               	movwf	pad@buf^(0+128)
 13586     07C1  0845               	movf	(dtoa@w+1)^(0+128),w
 13587     07C2  00B8               	movwf	(pad@p+1)^(0+128)
 13588     07C3  0844               	movf	dtoa@w^(0+128),w
 13589     07C4  00B7               	movwf	pad@p^(0+128)
 13590     07C5  3192  22F3  3187   	fcall	_pad
 13591     07C8  0021               	movlb	1	; select bank1
 13592     07C9  0835               	movf	(?_pad+1)^(0+128),w
 13593     07CA  00BD               	movwf	(?_dtoa+1)^(0+128)
 13594     07CB  0834               	movf	?_pad^(0+128),w
 13595     07CC  00BC               	movwf	?_dtoa^(0+128)
 13596     07CD                     l1732:
 13597     07CD  0008               	return
 13598     07CE                     __end_of_dtoa:
 13599                           
 13600                           	psect	text22
 13601     12F3                     __ptext22:	
 13602 ;; *************** function _pad *****************
 13603 ;; Defined at:
 13604 ;;		line 193 in file "C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c"
 13605 ;; Parameters:    Size  Location     Type
 13606 ;;  fp              2   20[BANK1 ] PTR struct _IO_FILE
 13607 ;;		 -> NULL(0), 
 13608 ;;  buf             1   22[BANK1 ] PTR unsigned char 
 13609 ;;		 -> dbuf(32), 
 13610 ;;  p               2   23[BANK1 ] int 
 13611 ;; Auto vars:     Size  Location     Type
 13612 ;;  i               2   26[BANK1 ] int 
 13613 ;; Return value:  Size  Location     Type
 13614 ;;                  2   20[BANK1 ] int 
 13615 ;; Registers used:
 13616 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 13617 ;; Tracked objects:
 13618 ;;		On entry : 0/0
 13619 ;;		On exit  : 0/0
 13620 ;;		Unchanged: 0/0
 13621 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 13622 ;;      Params:         0       0       5       0       0       0       0       0       0       0       0       0       
      +0       0
 13623 ;;      Locals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0
 13624 ;;      Temps:          0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0
 13625 ;;      Totals:         0       0       8       0       0       0       0       0       0       0       0       0       
      +0       0
 13626 ;;Total ram usage:        8 bytes
 13627 ;; Hardware stack levels used: 1
 13628 ;; Hardware stack levels required when called: 9
 13629 ;; This function calls:
 13630 ;;		_fputc
 13631 ;;		_fputs
 13632 ;;		_strlen
 13633 ;; This function is called by:
 13634 ;;		_dtoa
 13635 ;;		_utoa
 13636 ;; This function uses a non-reentrant model
 13637 ;;
 13638                           
 13639     12F3                     _pad:	
 13640                           ;psect for function _pad
 13641                           
 13642     12F3                     l4372:	
 13643                           ;incstack = 0
 13644                           ; Regs used in _pad: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 13645                           
 13646                           
 13647                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 193: static int p
      +                          ad(FILE *fp, char *buf, int p);C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\comm
      +                          on\doprnt.c: 194: {;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c
      +                          : 195:     int i;;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 
      +                          199:     if (flags & (1 << 0)) {
 13648     12F3  0020               	movlb	0	; select bank0
 13649     12F4  1C63               	btfss	_flags,0
 13650     12F5  2AF7               	goto	u4291
 13651     12F6  2AF8               	goto	u4290
 13652     12F7                     u4291:
 13653     12F7  2B02               	goto	l4376
 13654     12F8                     u4290:
 13655     12F8                     l4374:
 13656                           
 13657                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 200:         fput
      +                          s((const char *)buf, fp);
 13658     12F8  0021               	movlb	1	; select bank1
 13659     12F9  0836               	movf	pad@buf^(0+128),w
 13660     12FA  00AC               	movwf	fputs@s^(0+128)
 13661     12FB  0835               	movf	(pad@fp+1)^(0+128),w
 13662     12FC  00AE               	movwf	(fputs@fp+1)^(0+128)
 13663     12FD  0834               	movf	pad@fp^(0+128),w
 13664     12FE  00AD               	movwf	fputs@fp^(0+128)
 13665     12FF  3190  2063  3192   	fcall	_fputs
 13666     1302                     l4376:
 13667                           
 13668                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 205:  if (p < 0) 
      +                          {
 13669     1302  0021               	movlb	1	; select bank1
 13670     1303  1FB8               	btfss	(pad@p+1)^(0+128),7
 13671     1304  2B06               	goto	u4301
 13672     1305  2B07               	goto	u4300
 13673     1306                     u4301:
 13674     1306  2B09               	goto	l1711
 13675     1307                     u4300:
 13676     1307                     l4378:
 13677                           
 13678                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 206:   p = 0;
 13679     1307  01B7               	clrf	pad@p^(0+128)
 13680     1308  01B8               	clrf	(pad@p+1)^(0+128)
 13681     1309                     l1711:	
 13682                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 207:  }
 13683                           
 13684                           
 13685                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 208:     i = 0;
 13686     1309  01BA               	clrf	pad@i^(0+128)
 13687     130A  01BB               	clrf	(pad@i+1)^(0+128)
 13688                           
 13689                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 209:     while (i
      +                           < p) {
 13690     130B  2B1D               	goto	l4384
 13691     130C                     l4380:
 13692                           
 13693                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 210:         fput
      +                          c(' ', fp);
 13694     130C  3020               	movlw	32
 13695     130D  0021               	movlb	1	; select bank1
 13696     130E  00A3               	movwf	fputc@c^(0+128)
 13697     130F  3000               	movlw	0
 13698     1310  00A4               	movwf	(fputc@c^(0+128)+1)
 13699     1311  0835               	movf	(pad@fp+1)^(0+128),w
 13700     1312  00A6               	movwf	(fputc@fp+1)^(0+128)
 13701     1313  0834               	movf	pad@fp^(0+128),w
 13702     1314  00A5               	movwf	fputc@fp^(0+128)
 13703     1315  3195  250C  3192   	fcall	_fputc
 13704     1318                     l4382:
 13705                           
 13706                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 211:         ++i;
 13707     1318  3001               	movlw	1
 13708     1319  0021               	movlb	1	; select bank1
 13709     131A  07BA               	addwf	pad@i^(0+128),f
 13710     131B  3000               	movlw	0
 13711     131C  3DBB               	addwfc	(pad@i+1)^(0+128),f
 13712     131D                     l4384:
 13713                           
 13714                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 209:     while (i
      +                           < p) {
 13715     131D  083B               	movf	(pad@i+1)^(0+128),w
 13716     131E  3A80               	xorlw	128
 13717     131F  00B9               	movwf	??_pad^(0+128)
 13718     1320  0838               	movf	(pad@p+1)^(0+128),w
 13719     1321  3A80               	xorlw	128
 13720     1322  0239               	subwf	??_pad^(0+128),w
 13721     1323  1D03               	skipz
 13722     1324  2B27               	goto	u4315
 13723     1325  0837               	movf	pad@p^(0+128),w
 13724     1326  023A               	subwf	pad@i^(0+128),w
 13725     1327                     u4315:
 13726     1327  1C03               	skipc
 13727     1328  2B2A               	goto	u4311
 13728     1329  2B2B               	goto	u4310
 13729     132A                     u4311:
 13730     132A  2B0C               	goto	l4380
 13731     132B                     u4310:
 13732     132B                     l1714:
 13733                           
 13734                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 216:     if (!(fl
      +                          ags & (1 << 0))) {
 13735     132B  0020               	movlb	0	; select bank0
 13736     132C  1863               	btfsc	_flags,0
 13737     132D  2B2F               	goto	u4321
 13738     132E  2B30               	goto	u4320
 13739     132F                     u4321:
 13740     132F  2B3A               	goto	l4388
 13741     1330                     u4320:
 13742     1330                     l4386:
 13743                           
 13744                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 218:         fput
      +                          s((const char *)buf, fp);
 13745     1330  0021               	movlb	1	; select bank1
 13746     1331  0836               	movf	pad@buf^(0+128),w
 13747     1332  00AC               	movwf	fputs@s^(0+128)
 13748     1333  0835               	movf	(pad@fp+1)^(0+128),w
 13749     1334  00AE               	movwf	(fputs@fp+1)^(0+128)
 13750     1335  0834               	movf	pad@fp^(0+128),w
 13751     1336  00AD               	movwf	fputs@fp^(0+128)
 13752     1337  3190  2063  3192   	fcall	_fputs
 13753     133A                     l4388:
 13754                           
 13755                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 224:     return (
      +                          int)(strlen(buf) + (size_t)p);
 13756     133A  0021               	movlb	1	; select bank1
 13757     133B  0836               	movf	pad@buf^(0+128),w
 13758     133C  00A0               	movwf	strlen@s^(0+128)
 13759     133D  319F  275E  3192   	fcall	_strlen
 13760     1340  0021               	movlb	1	; select bank1
 13761     1341  0837               	movf	pad@p^(0+128),w
 13762     1342  0720               	addwf	?_strlen^(0+128),w
 13763     1343  00B4               	movwf	?_pad^(0+128)
 13764     1344  0838               	movf	(pad@p+1)^(0+128),w
 13765     1345  3D21               	addwfc	(?_strlen+1)^(0+128),w
 13766     1346  00B5               	movwf	(?_pad+1)^(0+128)
 13767     1347                     l1716:
 13768     1347  0008               	return
 13769     1348                     __end_of_pad:
 13770                           
 13771                           	psect	text23
 13772     1F5E                     __ptext23:	
 13773 ;; *************** function _strlen *****************
 13774 ;; Defined at:
 13775 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\strlen.c"
 13776 ;; Parameters:    Size  Location     Type
 13777 ;;  s               1    0[BANK1 ] PTR const unsigned char 
 13778 ;;		 -> dbuf(32), 
 13779 ;; Auto vars:     Size  Location     Type
 13780 ;;  a               1    2[BANK1 ] PTR const unsigned char 
 13781 ;;		 -> dbuf(32), 
 13782 ;; Return value:  Size  Location     Type
 13783 ;;                  2    0[BANK1 ] unsigned int 
 13784 ;; Registers used:
 13785 ;;		wreg, fsr1l, fsr1h, status,2, status,0
 13786 ;; Tracked objects:
 13787 ;;		On entry : 0/0
 13788 ;;		On exit  : 0/0
 13789 ;;		Unchanged: 0/0
 13790 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 13791 ;;      Params:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0
 13792 ;;      Locals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0
 13793 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13794 ;;      Totals:         0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0
 13795 ;;Total ram usage:        3 bytes
 13796 ;; Hardware stack levels used: 1
 13797 ;; Hardware stack levels required when called: 5
 13798 ;; This function calls:
 13799 ;;		Nothing
 13800 ;; This function is called by:
 13801 ;;		_pad
 13802 ;; This function uses a non-reentrant model
 13803 ;;
 13804                           
 13805     1F5E                     _strlen:	
 13806                           ;psect for function _strlen
 13807                           
 13808     1F5E                     l4218:	
 13809                           ;incstack = 0
 13810                           ; Regs used in _strlen: [wreg+fsr1l+fsr1h+status,2+status,0]
 13811                           
 13812     1F5E  0021               	movlb	1	; select bank1
 13813     1F5F  0820               	movf	strlen@s^(0+128),w
 13814     1F60  00A2               	movwf	strlen@a^(0+128)
 13815     1F61  2F64               	goto	l4222
 13816     1F62                     l4220:
 13817     1F62  3001               	movlw	1
 13818     1F63  07A0               	addwf	strlen@s^(0+128),f
 13819     1F64                     l4222:
 13820     1F64  0820               	movf	strlen@s^(0+128),w
 13821     1F65  0086               	movwf	6
 13822     1F66  3001               	movlw	1	; select bank2/3
 13823     1F67  0087               	movwf	7
 13824     1F68  0801               	movf	1,w
 13825     1F69  1D03               	btfss	3,2
 13826     1F6A  2F6C               	goto	u3921
 13827     1F6B  2F6D               	goto	u3920
 13828     1F6C                     u3921:
 13829     1F6C  2F62               	goto	l4220
 13830     1F6D                     u3920:
 13831     1F6D                     l4224:
 13832     1F6D  0822               	movf	strlen@a^(0+128),w
 13833     1F6E  0220               	subwf	strlen@s^(0+128),w
 13834     1F6F  00A0               	movwf	?_strlen^(0+128)
 13835     1F70  01A1               	clrf	(?_strlen+1)^(0+128)
 13836     1F71  1BA0               	btfsc	?_strlen^(0+128),7
 13837     1F72  03A1               	decf	(?_strlen+1)^(0+128),f
 13838     1F73                     l1812:
 13839     1F73  0008               	return
 13840     1F74                     __end_of_strlen:
 13841                           
 13842                           	psect	text24
 13843     1063                     __ptext24:	
 13844 ;; *************** function _fputs *****************
 13845 ;; Defined at:
 13846 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\nf_fputs.c"
 13847 ;; Parameters:    Size  Location     Type
 13848 ;;  s               1   12[BANK1 ] PTR const unsigned char 
 13849 ;;		 -> dbuf(32), 
 13850 ;;  fp              2   13[BANK1 ] PTR struct _IO_FILE
 13851 ;;		 -> NULL(0), 
 13852 ;; Auto vars:     Size  Location     Type
 13853 ;;  i               2   18[BANK1 ] int 
 13854 ;;  c               1   17[BANK1 ] unsigned char 
 13855 ;; Return value:  Size  Location     Type
 13856 ;;                  2   12[BANK1 ] int 
 13857 ;; Registers used:
 13858 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 13859 ;; Tracked objects:
 13860 ;;		On entry : 0/0
 13861 ;;		On exit  : 0/0
 13862 ;;		Unchanged: 0/0
 13863 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 13864 ;;      Params:         0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0
 13865 ;;      Locals:         0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0
 13866 ;;      Temps:          0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0
 13867 ;;      Totals:         0       0       8       0       0       0       0       0       0       0       0       0       
      +0       0
 13868 ;;Total ram usage:        8 bytes
 13869 ;; Hardware stack levels used: 1
 13870 ;; Hardware stack levels required when called: 8
 13871 ;; This function calls:
 13872 ;;		_fputc
 13873 ;; This function is called by:
 13874 ;;		_pad
 13875 ;; This function uses a non-reentrant model
 13876 ;;
 13877                           
 13878     1063                     _fputs:	
 13879                           ;psect for function _fputs
 13880                           
 13881     1063                     l4210:	
 13882                           ;incstack = 0
 13883                           ; Regs used in _fputs: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 13884                           
 13885     1063  0021               	movlb	1	; select bank1
 13886     1064  01B2               	clrf	fputs@i^(0+128)
 13887     1065  01B3               	clrf	(fputs@i+1)^(0+128)
 13888     1066  287A               	goto	l4216
 13889     1067                     l4212:
 13890     1067  0831               	movf	fputs@c^(0+128),w
 13891     1068  00AF               	movwf	??_fputs^(0+128)
 13892     1069  01B0               	clrf	(??_fputs^(0+128)+1)
 13893     106A  082F               	movf	??_fputs^(0+128),w
 13894     106B  00A3               	movwf	fputc@c^(0+128)
 13895     106C  0830               	movf	(??_fputs+1)^(0+128),w
 13896     106D  00A4               	movwf	(fputc@c+1)^(0+128)
 13897     106E  082E               	movf	(fputs@fp+1)^(0+128),w
 13898     106F  00A6               	movwf	(fputc@fp+1)^(0+128)
 13899     1070  082D               	movf	fputs@fp^(0+128),w
 13900     1071  00A5               	movwf	fputc@fp^(0+128)
 13901     1072  3195  250C  3190   	fcall	_fputc
 13902     1075                     l4214:
 13903     1075  3001               	movlw	1
 13904     1076  0021               	movlb	1	; select bank1
 13905     1077  07B2               	addwf	fputs@i^(0+128),f
 13906     1078  3000               	movlw	0
 13907     1079  3DB3               	addwfc	(fputs@i+1)^(0+128),f
 13908     107A                     l4216:
 13909     107A  082C               	movf	fputs@s^(0+128),w
 13910     107B  0732               	addwf	fputs@i^(0+128),w
 13911     107C  0086               	movwf	6
 13912     107D  3001               	movlw	1	; select bank2/3
 13913     107E  0087               	movwf	7
 13914     107F  0801               	movf	1,w
 13915     1080  00B1               	movwf	fputs@c^(0+128)
 13916     1081  0831               	movf	fputs@c^(0+128),w
 13917     1082  1D03               	btfss	3,2
 13918     1083  2885               	goto	u3911
 13919     1084  2886               	goto	u3910
 13920     1085                     u3911:
 13921     1085  2867               	goto	l4212
 13922     1086                     u3910:
 13923     1086                     l1806:
 13924     1086  0008               	return
 13925     1087                     __end_of_fputs:
 13926                           
 13927                           	psect	text25
 13928     150C                     __ptext25:	
 13929 ;; *************** function _fputc *****************
 13930 ;; Defined at:
 13931 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\nf_fputc.c"
 13932 ;; Parameters:    Size  Location     Type
 13933 ;;  c               2    3[BANK1 ] int 
 13934 ;;  fp              2    5[BANK1 ] PTR struct _IO_FILE
 13935 ;;		 -> NULL(0), 
 13936 ;; Auto vars:     Size  Location     Type
 13937 ;;		None
 13938 ;; Return value:  Size  Location     Type
 13939 ;;                  2    3[BANK1 ] int 
 13940 ;; Registers used:
 13941 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 13942 ;; Tracked objects:
 13943 ;;		On entry : 0/0
 13944 ;;		On exit  : 0/0
 13945 ;;		Unchanged: 0/0
 13946 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 13947 ;;      Params:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0
 13948 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13949 ;;      Temps:          0       0       5       0       0       0       0       0       0       0       0       0       
      +0       0
 13950 ;;      Totals:         0       0       9       0       0       0       0       0       0       0       0       0       
      +0       0
 13951 ;;Total ram usage:        9 bytes
 13952 ;; Hardware stack levels used: 1
 13953 ;; Hardware stack levels required when called: 7
 13954 ;; This function calls:
 13955 ;;		_putch
 13956 ;; This function is called by:
 13957 ;;		_pad
 13958 ;;		_vfpfcnvrt
 13959 ;;		_fputs
 13960 ;; This function uses a non-reentrant model
 13961 ;;
 13962                           
 13963     150C                     _fputc:	
 13964                           ;psect for function _fputc
 13965                           
 13966     150C                     l4194:	
 13967                           ;incstack = 0
 13968                           ; Regs used in _fputc: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 13969                           
 13970     150C  0021               	movlb	1	; select bank1
 13971     150D  0825               	movf	fputc@fp^(0+128),w
 13972     150E  0426               	iorwf	(fputc@fp+1)^(0+128),w
 13973     150F  1903               	btfsc	3,2
 13974     1510  2D12               	goto	u3871
 13975     1511  2D13               	goto	u3870
 13976     1512                     u3871:
 13977     1512  2D19               	goto	l4198
 13978     1513                     u3870:
 13979     1513                     l4196:
 13980     1513  0825               	movf	fputc@fp^(0+128),w
 13981     1514  0426               	iorwf	(fputc@fp+1)^(0+128),w
 13982     1515  1D03               	btfss	3,2
 13983     1516  2D18               	goto	u3881
 13984     1517  2D19               	goto	u3880
 13985     1518                     u3881:
 13986     1518  2D1E               	goto	l4200
 13987     1519                     u3880:
 13988     1519                     l4198:
 13989     1519  0823               	movf	fputc@c^(0+128),w
 13990     151A  319E  26C5  3195   	fcall	_putch
 13991     151D  2D69               	goto	l1798
 13992     151E                     l4200:
 13993     151E  0825               	movf	fputc@fp^(0+128),w
 13994     151F  0086               	movwf	6
 13995     1520  0826               	movf	(fputc@fp+1)^(0+128),w
 13996     1521  0087               	movwf	7
 13997     1522  3149               	addfsr 1,9
 13998     1523  0016               	moviw fsr1++
 13999     1524  0401               	iorwf	1,w
 14000     1525  1903               	btfsc	3,2
 14001     1526  2D28               	goto	u3891
 14002     1527  2D29               	goto	u3890
 14003     1528                     u3891:
 14004     1528  2D49               	goto	l4204
 14005     1529                     u3890:
 14006     1529                     l4202:
 14007     1529  0825               	movf	fputc@fp^(0+128),w
 14008     152A  0086               	movwf	6
 14009     152B  0826               	movf	(fputc@fp+1)^(0+128),w
 14010     152C  0087               	movwf	7
 14011     152D  3149               	addfsr 1,9
 14012     152E  3F40               	moviw [0]fsr1
 14013     152F  00A7               	movwf	??_fputc^(0+128)
 14014     1530  3F41               	moviw [1]fsr1
 14015     1531  00A8               	movwf	(??_fputc^(0+128)+1)
 14016     1532  0825               	movf	fputc@fp^(0+128),w
 14017     1533  0086               	movwf	6
 14018     1534  0826               	movf	(fputc@fp+1)^(0+128),w
 14019     1535  0087               	movwf	7
 14020     1536  3142               	addfsr 1,2
 14021     1537  3F40               	moviw [0]fsr1
 14022     1538  00A9               	movwf	(??_fputc+2)^(0+128)
 14023     1539  3F41               	moviw [1]fsr1
 14024     153A  00AA               	movwf	((??_fputc+2)^(0+128)+1)
 14025     153B  082A               	movf	(??_fputc+3)^(0+128),w
 14026     153C  3A80               	xorlw	128
 14027     153D  00AB               	movwf	(??_fputc+4)^(0+128)
 14028     153E  0828               	movf	(??_fputc+1)^(0+128),w
 14029     153F  3A80               	xorlw	128
 14030     1540  022B               	subwf	(??_fputc+4)^(0+128),w
 14031     1541  1D03               	skipz
 14032     1542  2D45               	goto	u3905
 14033     1543  0827               	movf	??_fputc^(0+128),w
 14034     1544  0229               	subwf	(??_fputc+2)^(0+128),w
 14035     1545                     u3905:
 14036     1545  1803               	skipnc
 14037     1546  2D48               	goto	u3901
 14038     1547  2D49               	goto	u3900
 14039     1548                     u3901:
 14040     1548  2D69               	goto	l1798
 14041     1549                     u3900:
 14042     1549                     l4204:
 14043     1549  0021               	movlb	1	; select bank1
 14044     154A  0825               	movf	fputc@fp^(0+128),w
 14045     154B  0086               	movwf	6
 14046     154C  0826               	movf	(fputc@fp+1)^(0+128),w
 14047     154D  0087               	movwf	7
 14048     154E  3142               	addfsr 1,2
 14049     154F  0825               	movf	fputc@fp^(0+128),w
 14050     1550  0084               	movwf	4
 14051     1551  0826               	movf	(fputc@fp+1)^(0+128),w
 14052     1552  0085               	movwf	5
 14053     1553  3F00               	moviw [0]fsr0
 14054     1554  00A7               	movwf	??_fputc^(0+128)
 14055     1555  3F01               	moviw [1]fsr0
 14056     1556  00A8               	movwf	(??_fputc^(0+128)+1)
 14057     1557  3F40               	moviw [0]fsr1
 14058     1558  0727               	addwf	??_fputc^(0+128),w
 14059     1559  0084               	movwf	4
 14060     155A  3F41               	moviw [1]fsr1
 14061     155B  3D28               	addwfc	(??_fputc+1)^(0+128),w
 14062     155C  0085               	movwf	5
 14063     155D  0823               	movf	fputc@c^(0+128),w
 14064     155E  0080               	movwf	0
 14065     155F                     l4206:
 14066     155F  0825               	movf	fputc@fp^(0+128),w
 14067     1560  0086               	movwf	6
 14068     1561  0826               	movf	(fputc@fp+1)^(0+128),w
 14069     1562  0087               	movwf	7
 14070     1563  3142               	addfsr 1,2
 14071     1564  3001               	movlw	1
 14072     1565  0781               	addwf	1,f
 14073     1566  3141               	addfsr 1,1
 14074     1567  1803               	skipnc
 14075     1568  0A81               	incf	1,f
 14076     1569                     l1798:
 14077     1569  0008               	return
 14078     156A                     __end_of_fputc:
 14079                           
 14080                           	psect	text26
 14081     1EC5                     __ptext26:	
 14082 ;; *************** function _putch *****************
 14083 ;; Defined at:
 14084 ;;		line 409 in file "mcc_generated_files/uart/src/eusart.c"
 14085 ;; Parameters:    Size  Location     Type
 14086 ;;  txData          1    wreg     unsigned char 
 14087 ;; Auto vars:     Size  Location     Type
 14088 ;;  txData          1    2[BANK1 ] unsigned char 
 14089 ;; Return value:  Size  Location     Type
 14090 ;;                  1    wreg      void 
 14091 ;; Registers used:
 14092 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 14093 ;; Tracked objects:
 14094 ;;		On entry : 0/0
 14095 ;;		On exit  : 0/0
 14096 ;;		Unchanged: 0/0
 14097 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 14098 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14099 ;;      Locals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0
 14100 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14101 ;;      Totals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0
 14102 ;;Total ram usage:        1 bytes
 14103 ;; Hardware stack levels used: 1
 14104 ;; Hardware stack levels required when called: 6
 14105 ;; This function calls:
 14106 ;;		_EUSART_IsTxReady
 14107 ;;		_EUSART_Write
 14108 ;; This function is called by:
 14109 ;;		_fputc
 14110 ;; This function uses a non-reentrant model
 14111 ;;
 14112                           
 14113     1EC5                     _putch:	
 14114                           ;psect for function _putch
 14115                           
 14116                           
 14117                           ;incstack = 0
 14118                           ; Regs used in _putch: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
 14119                           ;putch@txData stored from wreg
 14120     1EC5  0021               	movlb	1	; select bank1
 14121     1EC6  00A2               	movwf	putch@txData^(0+128)
 14122     1EC7                     l4186:
 14123     1EC7                     l4188:	
 14124                           ;mcc_generated_files/uart/src/eusart.c: 409: void putch(char txData);mcc_generated_files
      +                          /uart/src/eusart.c: 410: {;mcc_generated_files/uart/src/eusart.c: 411:     while(!(EUSAR
      +                          T_IsTxReady()))
 14125                           
 14126                           
 14127                           ;mcc_generated_files/uart/src/eusart.c: 411:     while(!(EUSART_IsTxReady()))
 14128     1EC7  319D  25C3  319E   	fcall	_EUSART_IsTxReady
 14129     1ECA  3A00               	xorlw	0
 14130     1ECB  1903               	skipnz
 14131     1ECC  2ECE               	goto	u3861
 14132     1ECD  2ECF               	goto	u3860
 14133     1ECE                     u3861:
 14134     1ECE  2EC7               	goto	l4188
 14135     1ECF                     u3860:
 14136     1ECF                     l4190:
 14137                           
 14138                           ;mcc_generated_files/uart/src/eusart.c: 415:     return EUSART_Write(txData);;	Return va
      +                          lue of _putch is never used
 14139     1ECF  0021               	movlb	1	; select bank1
 14140     1ED0  0822               	movf	putch@txData^(0+128),w
 14141     1ED1  00A0               	movwf	EUSART_Write@txData^(0+128)
 14142     1ED2  3190  20AB  319E   	fcall	_EUSART_Write
 14143     1ED5                     l760:
 14144     1ED5  0008               	return
 14145     1ED6                     __end_of_putch:
 14146                           
 14147                           	psect	text27
 14148     10AB                     __ptext27:	
 14149 ;; *************** function _EUSART_Write *****************
 14150 ;; Defined at:
 14151 ;;		line 353 in file "mcc_generated_files/uart/src/eusart.c"
 14152 ;; Parameters:    Size  Location     Type
 14153 ;;  txData          1    0[BANK1 ] unsigned char 
 14154 ;; Auto vars:     Size  Location     Type
 14155 ;;  tempTxHead      1    1[BANK1 ] unsigned char 
 14156 ;; Return value:  Size  Location     Type
 14157 ;;                  1    wreg      void 
 14158 ;; Registers used:
 14159 ;;		wreg, fsr1l, fsr1h, status,2, status,0
 14160 ;; Tracked objects:
 14161 ;;		On entry : 0/0
 14162 ;;		On exit  : 0/0
 14163 ;;		Unchanged: 0/0
 14164 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 14165 ;;      Params:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0
 14166 ;;      Locals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0
 14167 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14168 ;;      Totals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0
 14169 ;;Total ram usage:        2 bytes
 14170 ;; Hardware stack levels used: 1
 14171 ;; Hardware stack levels required when called: 5
 14172 ;; This function calls:
 14173 ;;		Nothing
 14174 ;; This function is called by:
 14175 ;;		_putch
 14176 ;; This function uses a non-reentrant model
 14177 ;;
 14178                           
 14179     10AB                     _EUSART_Write:	
 14180                           ;psect for function _EUSART_Write
 14181                           
 14182     10AB                     l4170:	
 14183                           ;incstack = 0
 14184                           ; Regs used in _EUSART_Write: [wreg+fsr1l+fsr1h+status,2+status,0]
 14185                           
 14186                           
 14187                           ;mcc_generated_files/uart/src/eusart.c: 353: void EUSART_Write(uint8_t txData);mcc_gener
      +                          ated_files/uart/src/eusart.c: 354: {;mcc_generated_files/uart/src/eusart.c: 355:     uin
      +                          t8_t tempTxHead;;mcc_generated_files/uart/src/eusart.c: 357:     if(0 == PIE1bits.TXIE)
 14188     10AB  0021               	movlb	1	; select bank1
 14189     10AC  1A11               	btfsc	17,4	;volatile
 14190     10AD  28AF               	goto	u3841
 14191     10AE  28B0               	goto	u3840
 14192     10AF                     u3841:
 14193     10AF  28B4               	goto	l4174
 14194     10B0                     u3840:
 14195     10B0                     l4172:
 14196                           
 14197                           ;mcc_generated_files/uart/src/eusart.c: 358:     {;mcc_generated_files/uart/src/eusart.c
      +                          : 359:         TX1REG = txData;
 14198     10B0  0820               	movf	EUSART_Write@txData^(0+128),w
 14199     10B1  0023               	movlb	3	; select bank3
 14200     10B2  009A               	movwf	26	;volatile
 14201                           
 14202                           ;mcc_generated_files/uart/src/eusart.c: 360:     }
 14203     10B3  28D0               	goto	l739
 14204     10B4                     l4174:
 14205     10B4  0020               	movlb	0	; select bank0
 14206     10B5  086A               	movf	_eusartTxBufferRemaining,w	;volatile
 14207     10B6  1903               	btfsc	3,2
 14208     10B7  28B9               	goto	u3851
 14209     10B8  28BA               	goto	u3850
 14210     10B9                     u3851:
 14211     10B9  28D0               	goto	l739
 14212     10BA                     u3850:
 14213     10BA                     l4176:
 14214                           
 14215                           ;mcc_generated_files/uart/src/eusart.c: 362:     {;mcc_generated_files/uart/src/eusart.c
      +                          : 363:        eusartTxBuffer[eusartTxHead] = txData;
 14216     10BA  086C               	movf	_eusartTxHead,w
 14217     10BB  3E38               	addlw	(low (_eusartTxBuffer| (0+256)))& (0+255)
 14218     10BC  0086               	movwf	6
 14219     10BD  3001               	movlw	1	; select bank2/3
 14220     10BE  0087               	movwf	7
 14221     10BF  0021               	movlb	1	; select bank1
 14222     10C0  0820               	movf	EUSART_Write@txData^(0+128),w
 14223     10C1  0081               	movwf	1
 14224     10C2                     l4178:
 14225                           
 14226                           ;mcc_generated_files/uart/src/eusart.c: 364:        tempTxHead = (eusartTxHead + 1U) & (
      +                          (8U) - 1U);
 14227     10C2  0020               	movlb	0	; select bank0
 14228     10C3  086C               	movf	_eusartTxHead,w	;volatile
 14229     10C4  3E01               	addlw	1
 14230     10C5  3907               	andlw	7
 14231     10C6  0021               	movlb	1	; select bank1
 14232     10C7  00A1               	movwf	EUSART_Write@tempTxHead^(0+128)
 14233     10C8                     l4180:
 14234                           
 14235                           ;mcc_generated_files/uart/src/eusart.c: 366:        eusartTxHead = tempTxHead;
 14236     10C8  0821               	movf	EUSART_Write@tempTxHead^(0+128),w
 14237     10C9  0020               	movlb	0	; select bank0
 14238     10CA  00EC               	movwf	_eusartTxHead	;volatile
 14239     10CB                     l4182:
 14240                           
 14241                           ;mcc_generated_files/uart/src/eusart.c: 367:        PIE1bits.TXIE = 0;
 14242     10CB  0021               	movlb	1	; select bank1
 14243     10CC  1211               	bcf	17,4	;volatile
 14244     10CD                     l4184:
 14245                           
 14246                           ;mcc_generated_files/uart/src/eusart.c: 368:        eusartTxBufferRemaining--;
 14247     10CD  3001               	movlw	1
 14248     10CE  0020               	movlb	0	; select bank0
 14249     10CF  02EA               	subwf	_eusartTxBufferRemaining,f	;volatile
 14250     10D0                     l739:	
 14251                           ;mcc_generated_files/uart/src/eusart.c: 369:     }
 14252                           
 14253                           
 14254                           ;mcc_generated_files/uart/src/eusart.c: 374:     PIE1bits.TXIE = 1;
 14255     10D0  0021               	movlb	1	; select bank1
 14256     10D1  1611               	bsf	17,4	;volatile
 14257     10D2                     l742:
 14258     10D2  0008               	return
 14259     10D3                     __end_of_EUSART_Write:
 14260                           
 14261                           	psect	text28
 14262     1DC3                     __ptext28:	
 14263 ;; *************** function _EUSART_IsTxReady *****************
 14264 ;; Defined at:
 14265 ;;		line 272 in file "mcc_generated_files/uart/src/eusart.c"
 14266 ;; Parameters:    Size  Location     Type
 14267 ;;		None
 14268 ;; Auto vars:     Size  Location     Type
 14269 ;;		None
 14270 ;; Return value:  Size  Location     Type
 14271 ;;                  1    wreg      _Bool 
 14272 ;; Registers used:
 14273 ;;		wreg, status,2, status,0
 14274 ;; Tracked objects:
 14275 ;;		On entry : 0/0
 14276 ;;		On exit  : 0/0
 14277 ;;		Unchanged: 0/0
 14278 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 14279 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14280 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14281 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14282 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14283 ;;Total ram usage:        0 bytes
 14284 ;; Hardware stack levels used: 1
 14285 ;; Hardware stack levels required when called: 5
 14286 ;; This function calls:
 14287 ;;		Nothing
 14288 ;; This function is called by:
 14289 ;;		_putch
 14290 ;; This function uses a non-reentrant model
 14291 ;;
 14292                           
 14293     1DC3                     _EUSART_IsTxReady:	
 14294                           ;psect for function _EUSART_IsTxReady
 14295                           
 14296     1DC3                     l4166:	
 14297                           ;incstack = 0
 14298                           ; Regs used in _EUSART_IsTxReady: [wreg+status,2+status,0]
 14299                           
 14300                           
 14301                           ;mcc_generated_files/uart/src/eusart.c: 274:     return (eusartTxBufferRemaining ? 1 : 0
      +                          );
 14302     1DC3  0020               	movlb	0	; select bank0
 14303     1DC4  086A               	movf	_eusartTxBufferRemaining,w	;volatile
 14304     1DC5  1D03               	btfss	3,2
 14305     1DC6  2DC8               	goto	u3821
 14306     1DC7  2DCA               	goto	u3820
 14307     1DC8                     u3821:
 14308     1DC8  3001               	movlw	1
 14309     1DC9  2DCB               	goto	u3830
 14310     1DCA                     u3820:
 14311     1DCA  3000               	movlw	0
 14312     1DCB                     u3830:
 14313     1DCB                     l715:
 14314     1DCB  0008               	return
 14315     1DCC                     __end_of_EUSART_IsTxReady:
 14316                           
 14317                           	psect	text29
 14318     1EF8                     __ptext29:	
 14319 ;; *************** function _abs *****************
 14320 ;; Defined at:
 14321 ;;		line 1 in file "C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\abs.c"
 14322 ;; Parameters:    Size  Location     Type
 14323 ;;  a               2    6[BANK1 ] int 
 14324 ;; Auto vars:     Size  Location     Type
 14325 ;;		None
 14326 ;; Return value:  Size  Location     Type
 14327 ;;                  2    6[BANK1 ] int 
 14328 ;; Registers used:
 14329 ;;		wreg, status,2, status,0
 14330 ;; Tracked objects:
 14331 ;;		On entry : 0/0
 14332 ;;		On exit  : 0/0
 14333 ;;		Unchanged: 0/0
 14334 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 14335 ;;      Params:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0
 14336 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14337 ;;      Temps:          0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0
 14338 ;;      Totals:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0
 14339 ;;Total ram usage:        4 bytes
 14340 ;; Hardware stack levels used: 1
 14341 ;; Hardware stack levels required when called: 5
 14342 ;; This function calls:
 14343 ;;		Nothing
 14344 ;; This function is called by:
 14345 ;;		_dtoa
 14346 ;; This function uses a non-reentrant model
 14347 ;;
 14348                           
 14349     1EF8                     _abs:	
 14350                           ;psect for function _abs
 14351                           
 14352     1EF8                     l4392:	
 14353                           ;incstack = 0
 14354                           ; Regs used in _abs: [wreg+status,2+status,0]
 14355                           
 14356     1EF8  0021               	movlb	1	; select bank1
 14357     1EF9  1BA7               	btfsc	(abs@a+1)^(0+128),7
 14358     1EFA  2EFC               	goto	u4331
 14359     1EFB  2EFD               	goto	u4330
 14360     1EFC                     u4331:
 14361     1EFC  2EFE               	goto	l4396
 14362     1EFD                     u4330:
 14363     1EFD                     l4394:
 14364     1EFD  2F09               	goto	l1786
 14365     1EFE                     l4396:
 14366     1EFE  0926               	comf	abs@a^(0+128),w
 14367     1EFF  00A8               	movwf	??_abs^(0+128)
 14368     1F00  0927               	comf	(abs@a+1)^(0+128),w
 14369     1F01  00A9               	movwf	(??_abs^(0+128)+1)
 14370     1F02  0AA8               	incf	??_abs^(0+128),f
 14371     1F03  1903               	skipnz
 14372     1F04  0AA9               	incf	(??_abs^(0+128)+1),f
 14373     1F05  0828               	movf	??_abs^(0+128),w
 14374     1F06  00A6               	movwf	?_abs^(0+128)
 14375     1F07  0829               	movf	(??_abs+1)^(0+128),w
 14376     1F08  00A7               	movwf	(?_abs+1)^(0+128)
 14377     1F09                     l1786:
 14378     1F09  0008               	return
 14379     1F0A                     __end_of_abs:
 14380                           
 14381                           	psect	text30
 14382     12A1                     __ptext30:	
 14383 ;; *************** function ___awmod *****************
 14384 ;; Defined at:
 14385 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\awmod.c"
 14386 ;; Parameters:    Size  Location     Type
 14387 ;;  divisor         2    0[BANK1 ] int 
 14388 ;;  dividend        2    2[BANK1 ] int 
 14389 ;; Auto vars:     Size  Location     Type
 14390 ;;  sign            1    5[BANK1 ] unsigned char 
 14391 ;;  counter         1    4[BANK1 ] unsigned char 
 14392 ;; Return value:  Size  Location     Type
 14393 ;;                  2    0[BANK1 ] int 
 14394 ;; Registers used:
 14395 ;;		wreg, status,2, status,0
 14396 ;; Tracked objects:
 14397 ;;		On entry : 0/0
 14398 ;;		On exit  : 0/0
 14399 ;;		Unchanged: 0/0
 14400 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 14401 ;;      Params:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0
 14402 ;;      Locals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0
 14403 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14404 ;;      Totals:         0       0       6       0       0       0       0       0       0       0       0       0       
      +0       0
 14405 ;;Total ram usage:        6 bytes
 14406 ;; Hardware stack levels used: 1
 14407 ;; Hardware stack levels required when called: 5
 14408 ;; This function calls:
 14409 ;;		Nothing
 14410 ;; This function is called by:
 14411 ;;		_dtoa
 14412 ;; This function uses a non-reentrant model
 14413 ;;
 14414                           
 14415     12A1                     ___awmod:	
 14416                           ;psect for function ___awmod
 14417                           
 14418     12A1                     l4286:	
 14419                           ;incstack = 0
 14420                           ; Regs used in ___awmod: [wreg+status,2+status,0]
 14421                           
 14422     12A1  0021               	movlb	1	; select bank1
 14423     12A2  01A5               	clrf	___awmod@sign^(0+128)
 14424     12A3                     l4288:
 14425     12A3  1FA3               	btfss	(___awmod@dividend+1)^(0+128),7
 14426     12A4  2AA6               	goto	u4071
 14427     12A5  2AA7               	goto	u4070
 14428     12A6                     u4071:
 14429     12A6  2AAE               	goto	l4294
 14430     12A7                     u4070:
 14431     12A7                     l4290:
 14432     12A7  09A2               	comf	___awmod@dividend^(0+128),f
 14433     12A8  09A3               	comf	(___awmod@dividend+1)^(0+128),f
 14434     12A9  0AA2               	incf	___awmod@dividend^(0+128),f
 14435     12AA  1903               	skipnz
 14436     12AB  0AA3               	incf	(___awmod@dividend+1)^(0+128),f
 14437     12AC                     l4292:
 14438     12AC  3001               	movlw	1
 14439     12AD  00A5               	movwf	___awmod@sign^(0+128)
 14440     12AE                     l4294:
 14441     12AE  1FA1               	btfss	(___awmod@divisor+1)^(0+128),7
 14442     12AF  2AB1               	goto	u4081
 14443     12B0  2AB2               	goto	u4080
 14444     12B1                     u4081:
 14445     12B1  2AB7               	goto	l4298
 14446     12B2                     u4080:
 14447     12B2                     l4296:
 14448     12B2  09A0               	comf	___awmod@divisor^(0+128),f
 14449     12B3  09A1               	comf	(___awmod@divisor+1)^(0+128),f
 14450     12B4  0AA0               	incf	___awmod@divisor^(0+128),f
 14451     12B5  1903               	skipnz
 14452     12B6  0AA1               	incf	(___awmod@divisor+1)^(0+128),f
 14453     12B7                     l4298:
 14454     12B7  0820               	movf	___awmod@divisor^(0+128),w
 14455     12B8  0421               	iorwf	(___awmod@divisor+1)^(0+128),w
 14456     12B9  1903               	btfsc	3,2
 14457     12BA  2ABC               	goto	u4091
 14458     12BB  2ABD               	goto	u4090
 14459     12BC                     u4091:
 14460     12BC  2AE4               	goto	l4316
 14461     12BD                     u4090:
 14462     12BD                     l4300:
 14463     12BD  3001               	movlw	1
 14464     12BE  00A4               	movwf	___awmod@counter^(0+128)
 14465     12BF  2AC7               	goto	l4306
 14466     12C0                     l4302:
 14467     12C0  3001               	movlw	1
 14468     12C1                     u4105:
 14469     12C1  35A0               	lslf	___awmod@divisor^(0+128),f
 14470     12C2  0DA1               	rlf	(___awmod@divisor+1)^(0+128),f
 14471     12C3  0B89               	decfsz	9,f
 14472     12C4  2AC1               	goto	u4105
 14473     12C5                     l4304:
 14474     12C5  3001               	movlw	1
 14475     12C6  07A4               	addwf	___awmod@counter^(0+128),f
 14476     12C7                     l4306:
 14477     12C7  1FA1               	btfss	(___awmod@divisor+1)^(0+128),7
 14478     12C8  2ACA               	goto	u4111
 14479     12C9  2ACB               	goto	u4110
 14480     12CA                     u4111:
 14481     12CA  2AC0               	goto	l4302
 14482     12CB                     u4110:
 14483     12CB                     l4308:
 14484     12CB  0821               	movf	(___awmod@divisor+1)^(0+128),w
 14485     12CC  0223               	subwf	(___awmod@dividend+1)^(0+128),w
 14486     12CD  1D03               	skipz
 14487     12CE  2AD1               	goto	u4125
 14488     12CF  0820               	movf	___awmod@divisor^(0+128),w
 14489     12D0  0222               	subwf	___awmod@dividend^(0+128),w
 14490     12D1                     u4125:
 14491     12D1  1C03               	skipc
 14492     12D2  2AD4               	goto	u4121
 14493     12D3  2AD5               	goto	u4120
 14494     12D4                     u4121:
 14495     12D4  2AD9               	goto	l4312
 14496     12D5                     u4120:
 14497     12D5                     l4310:
 14498     12D5  0820               	movf	___awmod@divisor^(0+128),w
 14499     12D6  02A2               	subwf	___awmod@dividend^(0+128),f
 14500     12D7  0821               	movf	(___awmod@divisor+1)^(0+128),w
 14501     12D8  3BA3               	subwfb	(___awmod@dividend+1)^(0+128),f
 14502     12D9                     l4312:
 14503     12D9  3001               	movlw	1
 14504     12DA                     u4135:
 14505     12DA  36A1               	lsrf	(___awmod@divisor+1)^(0+128),f
 14506     12DB  0CA0               	rrf	___awmod@divisor^(0+128),f
 14507     12DC  0B89               	decfsz	9,f
 14508     12DD  2ADA               	goto	u4135
 14509     12DE                     l4314:
 14510     12DE  3001               	movlw	1
 14511     12DF  02A4               	subwf	___awmod@counter^(0+128),f
 14512     12E0  1D03               	btfss	3,2
 14513     12E1  2AE3               	goto	u4141
 14514     12E2  2AE4               	goto	u4140
 14515     12E3                     u4141:
 14516     12E3  2ACB               	goto	l4308
 14517     12E4                     u4140:
 14518     12E4                     l4316:
 14519     12E4  0825               	movf	___awmod@sign^(0+128),w
 14520     12E5  1903               	btfsc	3,2
 14521     12E6  2AE8               	goto	u4151
 14522     12E7  2AE9               	goto	u4150
 14523     12E8                     u4151:
 14524     12E8  2AEE               	goto	l4320
 14525     12E9                     u4150:
 14526     12E9                     l4318:
 14527     12E9  09A2               	comf	___awmod@dividend^(0+128),f
 14528     12EA  09A3               	comf	(___awmod@dividend+1)^(0+128),f
 14529     12EB  0AA2               	incf	___awmod@dividend^(0+128),f
 14530     12EC  1903               	skipnz
 14531     12ED  0AA3               	incf	(___awmod@dividend+1)^(0+128),f
 14532     12EE                     l4320:
 14533     12EE  0823               	movf	(___awmod@dividend+1)^(0+128),w
 14534     12EF  00A1               	movwf	(?___awmod+1)^(0+128)
 14535     12F0  0822               	movf	___awmod@dividend^(0+128),w
 14536     12F1  00A0               	movwf	?___awmod^(0+128)
 14537     12F2                     l1374:
 14538     12F2  0008               	return
 14539     12F3                     __end_of___awmod:
 14540                           
 14541                           	psect	text31
 14542     1454                     __ptext31:	
 14543 ;; *************** function ___awdiv *****************
 14544 ;; Defined at:
 14545 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\awdiv.c"
 14546 ;; Parameters:    Size  Location     Type
 14547 ;;  divisor         2    0[BANK1 ] int 
 14548 ;;  dividend        2    2[BANK1 ] int 
 14549 ;; Auto vars:     Size  Location     Type
 14550 ;;  quotient        2    6[BANK1 ] int 
 14551 ;;  sign            1    5[BANK1 ] unsigned char 
 14552 ;;  counter         1    4[BANK1 ] unsigned char 
 14553 ;; Return value:  Size  Location     Type
 14554 ;;                  2    0[BANK1 ] int 
 14555 ;; Registers used:
 14556 ;;		wreg, status,2, status,0
 14557 ;; Tracked objects:
 14558 ;;		On entry : 0/0
 14559 ;;		On exit  : 0/0
 14560 ;;		Unchanged: 0/0
 14561 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 14562 ;;      Params:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0
 14563 ;;      Locals:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0
 14564 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14565 ;;      Totals:         0       0       8       0       0       0       0       0       0       0       0       0       
      +0       0
 14566 ;;Total ram usage:        8 bytes
 14567 ;; Hardware stack levels used: 1
 14568 ;; Hardware stack levels required when called: 5
 14569 ;; This function calls:
 14570 ;;		Nothing
 14571 ;; This function is called by:
 14572 ;;		_dtoa
 14573 ;; This function uses a non-reentrant model
 14574 ;;
 14575                           
 14576     1454                     ___awdiv:	
 14577                           ;psect for function ___awdiv
 14578                           
 14579     1454                     l4242:	
 14580                           ;incstack = 0
 14581                           ; Regs used in ___awdiv: [wreg+status,2+status,0]
 14582                           
 14583     1454  0021               	movlb	1	; select bank1
 14584     1455  01A5               	clrf	___awdiv@sign^(0+128)
 14585     1456                     l4244:
 14586     1456  1FA1               	btfss	(___awdiv@divisor+1)^(0+128),7
 14587     1457  2C59               	goto	u3971
 14588     1458  2C5A               	goto	u3970
 14589     1459                     u3971:
 14590     1459  2C61               	goto	l4250
 14591     145A                     u3970:
 14592     145A                     l4246:
 14593     145A  09A0               	comf	___awdiv@divisor^(0+128),f
 14594     145B  09A1               	comf	(___awdiv@divisor+1)^(0+128),f
 14595     145C  0AA0               	incf	___awdiv@divisor^(0+128),f
 14596     145D  1903               	skipnz
 14597     145E  0AA1               	incf	(___awdiv@divisor+1)^(0+128),f
 14598     145F                     l4248:
 14599     145F  3001               	movlw	1
 14600     1460  00A5               	movwf	___awdiv@sign^(0+128)
 14601     1461                     l4250:
 14602     1461  1FA3               	btfss	(___awdiv@dividend+1)^(0+128),7
 14603     1462  2C64               	goto	u3981
 14604     1463  2C65               	goto	u3980
 14605     1464                     u3981:
 14606     1464  2C6C               	goto	l4256
 14607     1465                     u3980:
 14608     1465                     l4252:
 14609     1465  09A2               	comf	___awdiv@dividend^(0+128),f
 14610     1466  09A3               	comf	(___awdiv@dividend+1)^(0+128),f
 14611     1467  0AA2               	incf	___awdiv@dividend^(0+128),f
 14612     1468  1903               	skipnz
 14613     1469  0AA3               	incf	(___awdiv@dividend+1)^(0+128),f
 14614     146A                     l4254:
 14615     146A  3001               	movlw	1
 14616     146B  06A5               	xorwf	___awdiv@sign^(0+128),f
 14617     146C                     l4256:
 14618     146C  01A6               	clrf	___awdiv@quotient^(0+128)
 14619     146D  01A7               	clrf	(___awdiv@quotient+1)^(0+128)
 14620     146E                     l4258:
 14621     146E  0820               	movf	___awdiv@divisor^(0+128),w
 14622     146F  0421               	iorwf	(___awdiv@divisor+1)^(0+128),w
 14623     1470  1903               	btfsc	3,2
 14624     1471  2C73               	goto	u3991
 14625     1472  2C74               	goto	u3990
 14626     1473                     u3991:
 14627     1473  2CA1               	goto	l4278
 14628     1474                     u3990:
 14629     1474                     l4260:
 14630     1474  3001               	movlw	1
 14631     1475  00A4               	movwf	___awdiv@counter^(0+128)
 14632     1476  2C7E               	goto	l4266
 14633     1477                     l4262:
 14634     1477  3001               	movlw	1
 14635     1478                     u4005:
 14636     1478  35A0               	lslf	___awdiv@divisor^(0+128),f
 14637     1479  0DA1               	rlf	(___awdiv@divisor+1)^(0+128),f
 14638     147A  0B89               	decfsz	9,f
 14639     147B  2C78               	goto	u4005
 14640     147C                     l4264:
 14641     147C  3001               	movlw	1
 14642     147D  07A4               	addwf	___awdiv@counter^(0+128),f
 14643     147E                     l4266:
 14644     147E  1FA1               	btfss	(___awdiv@divisor+1)^(0+128),7
 14645     147F  2C81               	goto	u4011
 14646     1480  2C82               	goto	u4010
 14647     1481                     u4011:
 14648     1481  2C77               	goto	l4262
 14649     1482                     u4010:
 14650     1482                     l4268:
 14651     1482  3001               	movlw	1
 14652     1483                     u4025:
 14653     1483  35A6               	lslf	___awdiv@quotient^(0+128),f
 14654     1484  0DA7               	rlf	(___awdiv@quotient+1)^(0+128),f
 14655     1485  0B89               	decfsz	9,f
 14656     1486  2C83               	goto	u4025
 14657     1487  0821               	movf	(___awdiv@divisor+1)^(0+128),w
 14658     1488  0223               	subwf	(___awdiv@dividend+1)^(0+128),w
 14659     1489  1D03               	skipz
 14660     148A  2C8D               	goto	u4035
 14661     148B  0820               	movf	___awdiv@divisor^(0+128),w
 14662     148C  0222               	subwf	___awdiv@dividend^(0+128),w
 14663     148D                     u4035:
 14664     148D  1C03               	skipc
 14665     148E  2C90               	goto	u4031
 14666     148F  2C91               	goto	u4030
 14667     1490                     u4031:
 14668     1490  2C96               	goto	l4274
 14669     1491                     u4030:
 14670     1491                     l4270:
 14671     1491  0820               	movf	___awdiv@divisor^(0+128),w
 14672     1492  02A2               	subwf	___awdiv@dividend^(0+128),f
 14673     1493  0821               	movf	(___awdiv@divisor+1)^(0+128),w
 14674     1494  3BA3               	subwfb	(___awdiv@dividend+1)^(0+128),f
 14675     1495                     l4272:
 14676     1495  1426               	bsf	___awdiv@quotient^(0+128),0
 14677     1496                     l4274:
 14678     1496  3001               	movlw	1
 14679     1497                     u4045:
 14680     1497  36A1               	lsrf	(___awdiv@divisor+1)^(0+128),f
 14681     1498  0CA0               	rrf	___awdiv@divisor^(0+128),f
 14682     1499  0B89               	decfsz	9,f
 14683     149A  2C97               	goto	u4045
 14684     149B                     l4276:
 14685     149B  3001               	movlw	1
 14686     149C  02A4               	subwf	___awdiv@counter^(0+128),f
 14687     149D  1D03               	btfss	3,2
 14688     149E  2CA0               	goto	u4051
 14689     149F  2CA1               	goto	u4050
 14690     14A0                     u4051:
 14691     14A0  2C82               	goto	l4268
 14692     14A1                     u4050:
 14693     14A1                     l4278:
 14694     14A1  0825               	movf	___awdiv@sign^(0+128),w
 14695     14A2  1903               	btfsc	3,2
 14696     14A3  2CA5               	goto	u4061
 14697     14A4  2CA6               	goto	u4060
 14698     14A5                     u4061:
 14699     14A5  2CAB               	goto	l4282
 14700     14A6                     u4060:
 14701     14A6                     l4280:
 14702     14A6  09A6               	comf	___awdiv@quotient^(0+128),f
 14703     14A7  09A7               	comf	(___awdiv@quotient+1)^(0+128),f
 14704     14A8  0AA6               	incf	___awdiv@quotient^(0+128),f
 14705     14A9  1903               	skipnz
 14706     14AA  0AA7               	incf	(___awdiv@quotient+1)^(0+128),f
 14707     14AB                     l4282:
 14708     14AB  0827               	movf	(___awdiv@quotient+1)^(0+128),w
 14709     14AC  00A1               	movwf	(?___awdiv+1)^(0+128)
 14710     14AD  0826               	movf	___awdiv@quotient^(0+128),w
 14711     14AE  00A0               	movwf	?___awdiv^(0+128)
 14712     14AF                     l1361:
 14713     14AF  0008               	return
 14714     14B0                     __end_of___awdiv:
 14715                           
 14716                           	psect	text32
 14717     1E2B                     __ptext32:	
 14718 ;; *************** function _initLedstrip *****************
 14719 ;; Defined at:
 14720 ;;		line 134 in file "ledstrip.c"
 14721 ;; Parameters:    Size  Location     Type
 14722 ;;		None
 14723 ;; Auto vars:     Size  Location     Type
 14724 ;;		None
 14725 ;; Return value:  Size  Location     Type
 14726 ;;                  1    wreg      void 
 14727 ;; Registers used:
 14728 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
 14729 ;; Tracked objects:
 14730 ;;		On entry : 0/0
 14731 ;;		On exit  : 0/0
 14732 ;;		Unchanged: 0/0
 14733 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 14734 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14735 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14736 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14737 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14738 ;;Total ram usage:        0 bytes
 14739 ;; Hardware stack levels used: 1
 14740 ;; Hardware stack levels required when called: 7
 14741 ;; This function calls:
 14742 ;;		_SPI1_Open
 14743 ;;		_TMR6_PeriodMatchCallbackRegister
 14744 ;; This function is called by:
 14745 ;;		_main
 14746 ;; This function uses a non-reentrant model
 14747 ;;
 14748                           
 14749     1E2B                     _initLedstrip:	
 14750                           ;psect for function _initLedstrip
 14751                           
 14752     1E2B                     l6078:	
 14753                           ;incstack = 0
 14754                           ; Regs used in _initLedstrip: [wreg-fsr0h+status,2+status,0+pclath+cstack]
 14755                           
 14756                           
 14757                           ;ledstrip.c: 135:     SPI1_Open(HOST_CONFIG);
 14758     1E2B  0021               	movlb	1	; select bank1
 14759     1E2C  01A6               	clrf	SPI1_Open@spiConfigIndex^(0+128)
 14760     1E2D  3195  25D9  319E   	fcall	_SPI1_Open
 14761     1E30                     l6080:
 14762                           
 14763                           ;ledstrip.c: 136:     TMR6_PeriodMatchCallbackRegister(updateLedstripAnimation);
 14764     1E30  305A               	movlw	low _updateLedstripAnimation
 14765     1E31  0021               	movlb	1	; select bank1
 14766     1E32  00A0               	movwf	TMR6_PeriodMatchCallbackRegister@CallbackHandler^(0+128)
 14767     1E33  301D               	movlw	high _updateLedstripAnimation
 14768     1E34  00A1               	movwf	(TMR6_PeriodMatchCallbackRegister@CallbackHandler^(0+128)+1)
 14769     1E35  319D  25BA  319E   	fcall	_TMR6_PeriodMatchCallbackRegister
 14770     1E38                     l1034:
 14771     1E38  0008               	return
 14772     1E39                     __end_of_initLedstrip:
 14773                           
 14774                           	psect	text33
 14775     1DBA                     __ptext33:	
 14776 ;; *************** function _TMR6_PeriodMatchCallbackRegister *****************
 14777 ;; Defined at:
 14778 ;;		line 104 in file "mcc_generated_files/timer/src/tmr6.c"
 14779 ;; Parameters:    Size  Location     Type
 14780 ;;  CallbackHand    2    0[BANK1 ] PTR FTN()void 
 14781 ;;		 -> updateLedstripAnimation(1), 
 14782 ;; Auto vars:     Size  Location     Type
 14783 ;;		None
 14784 ;; Return value:  Size  Location     Type
 14785 ;;                  1    wreg      void 
 14786 ;; Registers used:
 14787 ;;		wreg
 14788 ;; Tracked objects:
 14789 ;;		On entry : 0/0
 14790 ;;		On exit  : 0/0
 14791 ;;		Unchanged: 0/0
 14792 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 14793 ;;      Params:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0
 14794 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14795 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14796 ;;      Totals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0
 14797 ;;Total ram usage:        2 bytes
 14798 ;; Hardware stack levels used: 1
 14799 ;; Hardware stack levels required when called: 5
 14800 ;; This function calls:
 14801 ;;		Nothing
 14802 ;; This function is called by:
 14803 ;;		_initLedstrip
 14804 ;; This function uses a non-reentrant model
 14805 ;;
 14806                           
 14807     1DBA                     _TMR6_PeriodMatchCallbackRegister:	
 14808                           ;psect for function _TMR6_PeriodMatchCallbackRegister
 14809                           
 14810     1DBA                     l5808:	
 14811                           ;incstack = 0
 14812                           ; Regs used in _TMR6_PeriodMatchCallbackRegister: [wreg]
 14813                           
 14814                           
 14815                           ;mcc_generated_files/timer/src/tmr6.c: 104: void TMR6_PeriodMatchCallbackRegister(void (
      +                          * CallbackHandler)(void));mcc_generated_files/timer/src/tmr6.c: 105: {;mcc_generated_fil
      +                          es/timer/src/tmr6.c: 106:    TMR6_PeriodMatchCallback = CallbackHandler;
 14816     1DBA  0021               	movlb	1	; select bank1
 14817     1DBB  0821               	movf	(TMR6_PeriodMatchCallbackRegister@CallbackHandler+1)^(0+128),w
 14818     1DBC  0022               	movlb	2	; select bank2
 14819     1DBD  00D5               	movwf	(_TMR6_PeriodMatchCallback+1)^(0+256)
 14820     1DBE  0021               	movlb	1	; select bank1
 14821     1DBF  0820               	movf	TMR6_PeriodMatchCallbackRegister@CallbackHandler^(0+128),w
 14822     1DC0  0022               	movlb	2	; select bank2
 14823     1DC1  00D4               	movwf	_TMR6_PeriodMatchCallback^(0+256)
 14824     1DC2                     l543:
 14825     1DC2  0008               	return
 14826     1DC3                     __end_of_TMR6_PeriodMatchCallbackRegister:
 14827                           
 14828                           	psect	text34
 14829     15D9                     __ptext34:	
 14830 ;; *************** function _SPI1_Open *****************
 14831 ;; Defined at:
 14832 ;;		line 81 in file "mcc_generated_files/spi/src/mssp1.c"
 14833 ;; Parameters:    Size  Location     Type
 14834 ;;  spiConfigInd    1    6[BANK1 ] unsigned char 
 14835 ;; Auto vars:     Size  Location     Type
 14836 ;;  returnValue     1    0        _Bool 
 14837 ;; Return value:  Size  Location     Type
 14838 ;;                  1    wreg      _Bool 
 14839 ;; Registers used:
 14840 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
 14841 ;; Tracked objects:
 14842 ;;		On entry : 0/0
 14843 ;;		On exit  : 0/0
 14844 ;;		Unchanged: 0/0
 14845 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 14846 ;;      Params:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0
 14847 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14848 ;;      Temps:          0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0
 14849 ;;      Totals:         0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0
 14850 ;;Total ram usage:        3 bytes
 14851 ;; Hardware stack levels used: 1
 14852 ;; Hardware stack levels required when called: 6
 14853 ;; This function calls:
 14854 ;;		___wmul
 14855 ;; This function is called by:
 14856 ;;		_initLedstrip
 14857 ;; This function uses a non-reentrant model
 14858 ;;
 14859                           
 14860     15D9                     _SPI1_Open:	
 14861                           ;psect for function _SPI1_Open
 14862                           
 14863     15D9                     l5676:	
 14864                           ;incstack = 0
 14865                           ; Regs used in _SPI1_Open: [wreg-fsr0h+status,2+status,0+pclath+cstack]
 14866                           
 14867     15D9                     l5678:
 14868                           
 14869                           ;mcc_generated_files/spi/src/mssp1.c: 84:     if (SSP1CON1bits.SSPEN == 0)
 14870     15D9  0024               	movlb	4	; select bank4
 14871     15DA  1A95               	btfsc	21,5	;volatile
 14872     15DB  2DDD               	goto	u6901
 14873     15DC  2DDE               	goto	u6900
 14874     15DD                     u6901:
 14875     15DD  2E48               	goto	l5686
 14876     15DE                     u6900:
 14877     15DE                     l5680:
 14878                           
 14879                           ;mcc_generated_files/spi/src/mssp1.c: 85:     {;mcc_generated_files/spi/src/mssp1.c: 86:
      +                                   SSP1STAT = spi1_configuration[spiConfigIndex].stat;
 14880     15DE  0021               	movlb	1	; select bank1
 14881     15DF  0826               	movf	SPI1_Open@spiConfigIndex^(0+128),w
 14882     15E0  00A7               	movwf	??_SPI1_Open^(0+128)
 14883     15E1  01A8               	clrf	(??_SPI1_Open^(0+128)+1)
 14884     15E2  0827               	movf	??_SPI1_Open^(0+128),w
 14885     15E3  00A0               	movwf	___wmul@multiplier^(0+128)
 14886     15E4  0828               	movf	(??_SPI1_Open+1)^(0+128),w
 14887     15E5  00A1               	movwf	(___wmul@multiplier+1)^(0+128)
 14888     15E6  3005               	movlw	5
 14889     15E7  00A2               	movwf	___wmul@multiplicand^(0+128)
 14890     15E8  3000               	movlw	0
 14891     15E9  00A3               	movwf	(___wmul@multiplicand^(0+128)+1)
 14892     15EA  319F  27C0  3195   	fcall	___wmul
 14893     15ED  30C2               	movlw	low _spi1_configuration
 14894     15EE  0021               	movlb	1	; select bank1
 14895     15EF  0720               	addwf	?___wmul^(0+128),w
 14896     15F0  0084               	movwf	4
 14897     15F1  3018               	movlw	high _spi1_configuration
 14898     15F2  3D21               	addwfc	(?___wmul+1)^(0+128),w
 14899     15F3  3880               	iorlw	128
 14900     15F4  0085               	movwf	5
 14901     15F5  0800               	movf	0,w	;code access
 14902     15F6  0024               	movlb	4	; select bank4
 14903     15F7  0094               	movwf	20	;volatile
 14904                           
 14905                           ;mcc_generated_files/spi/src/mssp1.c: 87:         SSP1CON1 = spi1_configuration[spiConfi
      +                          gIndex].con1;
 14906     15F8  0021               	movlb	1	; select bank1
 14907     15F9  0826               	movf	SPI1_Open@spiConfigIndex^(0+128),w
 14908     15FA  00A7               	movwf	??_SPI1_Open^(0+128)
 14909     15FB  01A8               	clrf	(??_SPI1_Open^(0+128)+1)
 14910     15FC  0827               	movf	??_SPI1_Open^(0+128),w
 14911     15FD  00A0               	movwf	___wmul@multiplier^(0+128)
 14912     15FE  0828               	movf	(??_SPI1_Open+1)^(0+128),w
 14913     15FF  00A1               	movwf	(___wmul@multiplier+1)^(0+128)
 14914     1600  3005               	movlw	5
 14915     1601  00A2               	movwf	___wmul@multiplicand^(0+128)
 14916     1602  3000               	movlw	0
 14917     1603  00A3               	movwf	(___wmul@multiplicand^(0+128)+1)
 14918     1604  319F  27C0  3195   	fcall	___wmul
 14919     1607  30C3               	movlw	low (_spi1_configuration+1)
 14920     1608  0021               	movlb	1	; select bank1
 14921     1609  0720               	addwf	?___wmul^(0+128),w
 14922     160A  0084               	movwf	4
 14923     160B  3018               	movlw	high (_spi1_configuration+1)
 14924     160C  3D21               	addwfc	(?___wmul+1)^(0+128),w
 14925     160D  3880               	iorlw	128
 14926     160E  0085               	movwf	5
 14927     160F  0800               	movf	0,w	;code access
 14928     1610  0024               	movlb	4	; select bank4
 14929     1611  0095               	movwf	21	;volatile
 14930                           
 14931                           ;mcc_generated_files/spi/src/mssp1.c: 88:         SSP1CON3 = spi1_configuration[spiConfi
      +                          gIndex].con3;
 14932     1612  0021               	movlb	1	; select bank1
 14933     1613  0826               	movf	SPI1_Open@spiConfigIndex^(0+128),w
 14934     1614  00A7               	movwf	??_SPI1_Open^(0+128)
 14935     1615  01A8               	clrf	(??_SPI1_Open^(0+128)+1)
 14936     1616  0827               	movf	??_SPI1_Open^(0+128),w
 14937     1617  00A0               	movwf	___wmul@multiplier^(0+128)
 14938     1618  0828               	movf	(??_SPI1_Open+1)^(0+128),w
 14939     1619  00A1               	movwf	(___wmul@multiplier+1)^(0+128)
 14940     161A  3005               	movlw	5
 14941     161B  00A2               	movwf	___wmul@multiplicand^(0+128)
 14942     161C  3000               	movlw	0
 14943     161D  00A3               	movwf	(___wmul@multiplicand^(0+128)+1)
 14944     161E  319F  27C0  3195   	fcall	___wmul
 14945     1621  30C4               	movlw	low (_spi1_configuration+2)
 14946     1622  0021               	movlb	1	; select bank1
 14947     1623  0720               	addwf	?___wmul^(0+128),w
 14948     1624  0084               	movwf	4
 14949     1625  3018               	movlw	high (_spi1_configuration+2)
 14950     1626  3D21               	addwfc	(?___wmul+1)^(0+128),w
 14951     1627  3880               	iorlw	128
 14952     1628  0085               	movwf	5
 14953     1629  0800               	movf	0,w	;code access
 14954     162A  0024               	movlb	4	; select bank4
 14955     162B  0097               	movwf	23	;volatile
 14956                           
 14957                           ;mcc_generated_files/spi/src/mssp1.c: 89:         SSP1ADD = spi1_configuration[spiConfig
      +                          Index].baud;
 14958     162C  0021               	movlb	1	; select bank1
 14959     162D  0826               	movf	SPI1_Open@spiConfigIndex^(0+128),w
 14960     162E  00A7               	movwf	??_SPI1_Open^(0+128)
 14961     162F  01A8               	clrf	(??_SPI1_Open^(0+128)+1)
 14962     1630  0827               	movf	??_SPI1_Open^(0+128),w
 14963     1631  00A0               	movwf	___wmul@multiplier^(0+128)
 14964     1632  0828               	movf	(??_SPI1_Open+1)^(0+128),w
 14965     1633  00A1               	movwf	(___wmul@multiplier+1)^(0+128)
 14966     1634  3005               	movlw	5
 14967     1635  00A2               	movwf	___wmul@multiplicand^(0+128)
 14968     1636  3000               	movlw	0
 14969     1637  00A3               	movwf	(___wmul@multiplicand^(0+128)+1)
 14970     1638  319F  27C0  3195   	fcall	___wmul
 14971     163B  30C5               	movlw	low (_spi1_configuration+3)
 14972     163C  0021               	movlb	1	; select bank1
 14973     163D  0720               	addwf	?___wmul^(0+128),w
 14974     163E  0084               	movwf	4
 14975     163F  3018               	movlw	high (_spi1_configuration+3)
 14976     1640  3D21               	addwfc	(?___wmul+1)^(0+128),w
 14977     1641  3880               	iorlw	128
 14978     1642  0085               	movwf	5
 14979     1643  0800               	movf	0,w	;code access
 14980     1644  0024               	movlb	4	; select bank4
 14981     1645  0092               	movwf	18	;volatile
 14982     1646                     l5682:
 14983                           
 14984                           ;mcc_generated_files/spi/src/mssp1.c: 91:         SSP1CON1bits.SSPEN = 1;
 14985     1646  1695               	bsf	21,5	;volatile
 14986     1647                     l5684:
 14987                           
 14988                           ;mcc_generated_files/spi/src/mssp1.c: 94:     }
 14989     1647  2E48               	goto	l141
 14990     1648                     l5686:
 14991     1648                     l141:
 14992     1648  0008               	return
 14993     1649                     __end_of_SPI1_Open:
 14994                           
 14995                           	psect	text35
 14996     1E1E                     __ptext35:	
 14997 ;; *************** function _initAdcMultiplexer *****************
 14998 ;; Defined at:
 14999 ;;		line 28 in file "adcMeasurements.c"
 15000 ;; Parameters:    Size  Location     Type
 15001 ;;		None
 15002 ;; Auto vars:     Size  Location     Type
 15003 ;;		None
 15004 ;; Return value:  Size  Location     Type
 15005 ;;                  1    wreg      void 
 15006 ;; Registers used:
 15007 ;;		wreg, status,2, status,0, pclath, cstack
 15008 ;; Tracked objects:
 15009 ;;		On entry : 0/0
 15010 ;;		On exit  : 0/0
 15011 ;;		Unchanged: 0/0
 15012 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 15013 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15014 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15015 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15016 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15017 ;;Total ram usage:        0 bytes
 15018 ;; Hardware stack levels used: 1
 15019 ;; Hardware stack levels required when called: 6
 15020 ;; This function calls:
 15021 ;;		_ADC_SelectChannel
 15022 ;;		_ADC_SetInterruptHandler
 15023 ;; This function is called by:
 15024 ;;		_main
 15025 ;; This function uses a non-reentrant model
 15026 ;;
 15027                           
 15028     1E1E                     _initAdcMultiplexer:	
 15029                           ;psect for function _initAdcMultiplexer
 15030                           
 15031     1E1E                     l6076:	
 15032                           ;incstack = 0
 15033                           ; Regs used in _initAdcMultiplexer: [wreg+status,2+status,0+pclath+cstack]
 15034                           
 15035                           
 15036                           ;adcMeasurements.c: 29:     ADC_SelectChannel(potentiometer);
 15037     1E1E  3010               	movlw	16
 15038     1E1F  319E  2605  319E   	fcall	_ADC_SelectChannel
 15039                           
 15040                           ;adcMeasurements.c: 30:     ADC_SetInterruptHandler(adcConversionDoneHandler);
 15041     1E22  30CD               	movlw	low _adcConversionDoneHandler
 15042     1E23  0021               	movlb	1	; select bank1
 15043     1E24  00A0               	movwf	ADC_SetInterruptHandler@InterruptHandler^(0+128)
 15044     1E25  3011               	movlw	high _adcConversionDoneHandler
 15045     1E26  00A1               	movwf	(ADC_SetInterruptHandler@InterruptHandler^(0+128)+1)
 15046     1E27  319D  2584  319E   	fcall	_ADC_SetInterruptHandler
 15047     1E2A                     l837:
 15048     1E2A  0008               	return
 15049     1E2B                     __end_of_initAdcMultiplexer:
 15050                           
 15051                           	psect	text36
 15052     1E05                     __ptext36:	
 15053 ;; *************** function _ADC_SelectChannel *****************
 15054 ;; Defined at:
 15055 ;;		line 82 in file "mcc_generated_files/adc/src/adc.c"
 15056 ;; Parameters:    Size  Location     Type
 15057 ;;  channel         1    wreg     enum E6663
 15058 ;; Auto vars:     Size  Location     Type
 15059 ;;  channel         1    1[BANK1 ] enum E6663
 15060 ;; Return value:  Size  Location     Type
 15061 ;;                  1    wreg      void 
 15062 ;; Registers used:
 15063 ;;		wreg, status,2, status,0
 15064 ;; Tracked objects:
 15065 ;;		On entry : 0/0
 15066 ;;		On exit  : 0/0
 15067 ;;		Unchanged: 0/0
 15068 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 15069 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15070 ;;      Locals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0
 15071 ;;      Temps:          0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0
 15072 ;;      Totals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0
 15073 ;;Total ram usage:        2 bytes
 15074 ;; Hardware stack levels used: 1
 15075 ;; Hardware stack levels required when called: 5
 15076 ;; This function calls:
 15077 ;;		Nothing
 15078 ;; This function is called by:
 15079 ;;		_initAdcMultiplexer
 15080 ;; This function uses a non-reentrant model
 15081 ;;
 15082                           
 15083     1E05                     _ADC_SelectChannel:	
 15084                           ;psect for function _ADC_SelectChannel
 15085                           
 15086                           
 15087                           ;incstack = 0
 15088                           ; Regs used in _ADC_SelectChannel: [wreg+status,2+status,0]
 15089                           ;ADC_SelectChannel@channel stored from wreg
 15090     1E05  0021               	movlb	1	; select bank1
 15091     1E06  00A1               	movwf	ADC_SelectChannel@channel^(0+128)
 15092     1E07                     l5660:
 15093                           
 15094                           ;mcc_generated_files/adc/src/adc.c: 82: void ADC_SelectChannel(adc_channel_t channel);mc
      +                          c_generated_files/adc/src/adc.c: 83: {;mcc_generated_files/adc/src/adc.c: 85:     ADCON0
      +                          bits.CHS = channel;
 15095     1E07  0821               	movf	ADC_SelectChannel@channel^(0+128),w
 15096     1E08  00A0               	movwf	??_ADC_SelectChannel^(0+128)
 15097     1E09  0DA0               	rlf	??_ADC_SelectChannel^(0+128),f
 15098     1E0A  0DA0               	rlf	??_ADC_SelectChannel^(0+128),f
 15099     1E0B  081D               	movf	29,w	;volatile
 15100     1E0C  0620               	xorwf	??_ADC_SelectChannel^(0+128),w
 15101     1E0D  3903               	andlw	-253
 15102     1E0E  0620               	xorwf	??_ADC_SelectChannel^(0+128),w
 15103     1E0F  009D               	movwf	29	;volatile
 15104     1E10                     l30:
 15105     1E10  0008               	return
 15106     1E11                     __end_of_ADC_SelectChannel:
 15107                           
 15108                           	psect	text37
 15109     13F9                     __ptext37:	
 15110 ;; *************** function _check_push_up *****************
 15111 ;; Defined at:
 15112 ;;		line 10 in file "PushUp.c"
 15113 ;; Parameters:    Size  Location     Type
 15114 ;;		None
 15115 ;; Auto vars:     Size  Location     Type
 15116 ;;		None
 15117 ;; Return value:  Size  Location     Type
 15118 ;;                  1    wreg      void 
 15119 ;; Registers used:
 15120 ;;		wreg, status,2, status,0, pclath, cstack
 15121 ;; Tracked objects:
 15122 ;;		On entry : 0/0
 15123 ;;		On exit  : 0/0
 15124 ;;		Unchanged: 0/0
 15125 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 15126 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15127 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15128 ;;      Temps:          0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0
 15129 ;;      Totals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0
 15130 ;;Total ram usage:        1 bytes
 15131 ;; Hardware stack levels used: 1
 15132 ;; Hardware stack levels required when called: 6
 15133 ;; This function calls:
 15134 ;;		_PWM_buzzer_LoadDutyValue
 15135 ;;		___wmul
 15136 ;;		_getPomphoogte
 15137 ;;		_setSetpoint
 15138 ;; This function is called by:
 15139 ;;		_main
 15140 ;; This function uses a non-reentrant model
 15141 ;;
 15142                           
 15143     13F9                     _check_push_up:	
 15144                           ;psect for function _check_push_up
 15145                           
 15146     13F9                     l6104:	
 15147                           ;incstack = 0
 15148                           ; Regs used in _check_push_up: [wreg+status,2+status,0+pclath+cstack]
 15149                           
 15150                           
 15151                           ;PushUp.c: 11:     if (buzzing == 0){
 15152     13F9  0020               	movlb	0	; select bank0
 15153     13FA  0864               	movf	_buzzing,w
 15154     13FB  1D03               	btfss	3,2
 15155     13FC  2BFE               	goto	u7241
 15156     13FD  2BFF               	goto	u7240
 15157     13FE                     u7241:
 15158     13FE  2C44               	goto	l6118
 15159     13FF                     u7240:
 15160     13FF                     l6106:
 15161                           
 15162                           ;PushUp.c: 13:        if (getPomphoogte() >= 450) {
 15163     13FF  319D  25B1  3193   	fcall	_getPomphoogte
 15164     1402  3001               	movlw	1
 15165     1403  0021               	movlb	1	; select bank1
 15166     1404  0221               	subwf	(?_getPomphoogte+1)^(0+128),w
 15167     1405  30C2               	movlw	194
 15168     1406  1903               	skipnz
 15169     1407  0220               	subwf	?_getPomphoogte^(0+128),w
 15170     1408  1C03               	skipc
 15171     1409  2C0B               	goto	u7251
 15172     140A  2C0C               	goto	u7250
 15173     140B                     u7251:
 15174     140B  2C3C               	goto	l6116
 15175     140C                     u7250:
 15176     140C                     l6108:
 15177                           
 15178                           ;PushUp.c: 14:         PWM_buzzer_LoadDutyValue(400);
 15179     140C  3090               	movlw	144
 15180     140D  00A0               	movwf	PWM_buzzer_LoadDutyValue@dutyValue^(0+128)
 15181     140E  3001               	movlw	1
 15182     140F  00A1               	movwf	(PWM_buzzer_LoadDutyValue@dutyValue^(0+128)+1)
 15183     1410  319F  2774  3193   	fcall	_PWM_buzzer_LoadDutyValue
 15184     1413                     l6110:
 15185                           
 15186                           ;PushUp.c: 15:         buzzing = 1;
 15187     1413  3001               	movlw	1
 15188     1414  0020               	movlb	0	; select bank0
 15189     1415  00E4               	movwf	_buzzing
 15190     1416                     l6112:
 15191                           
 15192                           ;PushUp.c: 16:         counter += 1;
 15193     1416  3001               	movlw	1
 15194     1417  0022               	movlb	2	; select bank2
 15195     1418  07C8               	addwf	_counter^(0+256),f
 15196     1419  3000               	movlw	0
 15197     141A  3DC9               	addwfc	(_counter+1)^(0+256),f
 15198     141B                     l6114:
 15199                           
 15200                           ;PushUp.c: 17:         setSetpoint(45 + counter * 50);
 15201     141B  0849               	movf	(_counter+1)^(0+256),w
 15202     141C  0021               	movlb	1	; select bank1
 15203     141D  00A1               	movwf	(___wmul@multiplier+1)^(0+128)
 15204     141E  0022               	movlb	2	; select bank2
 15205     141F  0848               	movf	_counter^(0+256),w
 15206     1420  0021               	movlb	1	; select bank1
 15207     1421  00A0               	movwf	___wmul@multiplier^(0+128)
 15208     1422  3032               	movlw	50
 15209     1423  00A2               	movwf	___wmul@multiplicand^(0+128)
 15210     1424  3000               	movlw	0
 15211     1425  00A3               	movwf	(___wmul@multiplicand^(0+128)+1)
 15212     1426  319F  27C0  3193   	fcall	___wmul
 15213     1429  0021               	movlb	1	; select bank1
 15214     142A  0820               	movf	?___wmul^(0+128),w
 15215     142B  3E2D               	addlw	45
 15216     142C  00AD               	movwf	setSetpoint@new_setpoint^(0+128)
 15217     142D  3000               	movlw	0
 15218     142E  3D21               	addwfc	(?___wmul+1)^(0+128),w
 15219     142F  00AE               	movwf	(setSetpoint@new_setpoint+1)^(0+128)
 15220     1430  319D  256A  3193   	fcall	_setSetpoint
 15221                           
 15222                           ;PushUp.c: 18:         _delay((unsigned long)((20)*(32000000U/4000.0)));
 15223     1433  30D0               	movlw	208
 15224     1434  0021               	movlb	1	; select bank1
 15225     1435  00AF               	movwf	??_check_push_up^(0+128)
 15226     1436  30C9               	movlw	201
 15227     1437                     u7537:
 15228     1437  0B89               	decfsz	9,f
 15229     1438  2C37               	goto	u7537
 15230     1439  0BAF               	decfsz	??_check_push_up^(0+128),f
 15231     143A  2C37               	goto	u7537
 15232     143B  3200               	nop2
 15233     143C                     l6116:
 15234                           
 15235                           ;PushUp.c: 21:        PWM_buzzer_LoadDutyValue(0);
 15236     143C  3000               	movlw	0
 15237     143D  0021               	movlb	1	; select bank1
 15238     143E  00A0               	movwf	PWM_buzzer_LoadDutyValue@dutyValue^(0+128)
 15239     143F  00A1               	movwf	(PWM_buzzer_LoadDutyValue@dutyValue+1)^(0+128)
 15240     1440  319F  2774  3193   	fcall	_PWM_buzzer_LoadDutyValue
 15241                           
 15242                           ;PushUp.c: 22:     } else {
 15243     1443  2C53               	goto	l1053
 15244     1444                     l6118:
 15245                           
 15246                           ;PushUp.c: 23:         if (getPomphoogte() <= 350) {
 15247     1444  319D  25B1  3193   	fcall	_getPomphoogte
 15248     1447  3001               	movlw	1
 15249     1448  0021               	movlb	1	; select bank1
 15250     1449  0221               	subwf	(?_getPomphoogte+1)^(0+128),w
 15251     144A  305F               	movlw	95
 15252     144B  1903               	skipnz
 15253     144C  0220               	subwf	?_getPomphoogte^(0+128),w
 15254     144D  1803               	skipnc
 15255     144E  2C50               	goto	u7261
 15256     144F  2C51               	goto	u7260
 15257     1450                     u7261:
 15258     1450  2C53               	goto	l1053
 15259     1451                     u7260:
 15260     1451                     l6120:
 15261                           
 15262                           ;PushUp.c: 24:             buzzing = 0;
 15263     1451  0020               	movlb	0	; select bank0
 15264     1452  01E4               	clrf	_buzzing
 15265     1453                     l1053:
 15266     1453  0008               	return
 15267     1454                     __end_of_check_push_up:
 15268                           
 15269                           	psect	text38
 15270     1D6A                     __ptext38:	
 15271 ;; *************** function _setSetpoint *****************
 15272 ;; Defined at:
 15273 ;;		line 44 in file "controller.c"
 15274 ;; Parameters:    Size  Location     Type
 15275 ;;  new_setpoint    2   13[BANK1 ] unsigned short 
 15276 ;; Auto vars:     Size  Location     Type
 15277 ;;		None
 15278 ;; Return value:  Size  Location     Type
 15279 ;;                  1    wreg      void 
 15280 ;; Registers used:
 15281 ;;		wreg
 15282 ;; Tracked objects:
 15283 ;;		On entry : 0/0
 15284 ;;		On exit  : 0/0
 15285 ;;		Unchanged: 0/0
 15286 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 15287 ;;      Params:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0
 15288 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15289 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15290 ;;      Totals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0
 15291 ;;Total ram usage:        2 bytes
 15292 ;; Hardware stack levels used: 1
 15293 ;; Hardware stack levels required when called: 5
 15294 ;; This function calls:
 15295 ;;		Nothing
 15296 ;; This function is called by:
 15297 ;;		_uartHandler
 15298 ;;		_check_push_up
 15299 ;; This function uses a non-reentrant model
 15300 ;;
 15301                           
 15302     1D6A                     _setSetpoint:	
 15303                           ;psect for function _setSetpoint
 15304                           
 15305     1D6A                     l5948:	
 15306                           ;incstack = 0
 15307                           ; Regs used in _setSetpoint: [wreg]
 15308                           
 15309     1D6A  0021               	movlb	1	; select bank1
 15310     1D6B  082E               	movf	(setSetpoint@new_setpoint+1)^(0+128),w
 15311     1D6C  00EE               	movwf	(_setpoint+1)^(0+128)
 15312     1D6D  082D               	movf	setSetpoint@new_setpoint^(0+128),w
 15313     1D6E  00ED               	movwf	_setpoint^(0+128)
 15314     1D6F                     l963:
 15315     1D6F  0008               	return
 15316     1D70                     __end_of_setSetpoint:
 15317                           
 15318                           	psect	text39
 15319     1DB1                     __ptext39:	
 15320 ;; *************** function _getPomphoogte *****************
 15321 ;; Defined at:
 15322 ;;		line 41 in file "adcMeasurements.c"
 15323 ;; Parameters:    Size  Location     Type
 15324 ;;		None
 15325 ;; Auto vars:     Size  Location     Type
 15326 ;;		None
 15327 ;; Return value:  Size  Location     Type
 15328 ;;                  2    0[BANK1 ] unsigned short 
 15329 ;; Registers used:
 15330 ;;		wreg
 15331 ;; Tracked objects:
 15332 ;;		On entry : 0/0
 15333 ;;		On exit  : 0/0
 15334 ;;		Unchanged: 0/0
 15335 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 15336 ;;      Params:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0
 15337 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15338 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15339 ;;      Totals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0
 15340 ;;Total ram usage:        2 bytes
 15341 ;; Hardware stack levels used: 1
 15342 ;; Hardware stack levels required when called: 5
 15343 ;; This function calls:
 15344 ;;		Nothing
 15345 ;; This function is called by:
 15346 ;;		_printLogs
 15347 ;;		_check_push_up
 15348 ;; This function uses a non-reentrant model
 15349 ;;
 15350                           
 15351     1DB1                     _getPomphoogte:	
 15352                           ;psect for function _getPomphoogte
 15353                           
 15354     1DB1                     l5836:	
 15355                           ;incstack = 0
 15356                           ; Regs used in _getPomphoogte: [wreg]
 15357                           
 15358                           
 15359                           ;adcMeasurements.c: 42:     return ADC_pomphoogte;
 15360     1DB1  0020               	movlb	0	; select bank0
 15361     1DB2  085A               	movf	_ADC_pomphoogte+1,w	;volatile
 15362     1DB3  0021               	movlb	1	; select bank1
 15363     1DB4  00A1               	movwf	(?_getPomphoogte+1)^(0+128)
 15364     1DB5  0020               	movlb	0	; select bank0
 15365     1DB6  0859               	movf	_ADC_pomphoogte,w	;volatile
 15366     1DB7  0021               	movlb	1	; select bank1
 15367     1DB8  00A0               	movwf	?_getPomphoogte^(0+128)
 15368     1DB9                     l846:
 15369     1DB9  0008               	return
 15370     1DBA                     __end_of_getPomphoogte:
 15371                           
 15372                           	psect	text40
 15373     1F74                     __ptext40:	
 15374 ;; *************** function _PWM_buzzer_LoadDutyValue *****************
 15375 ;; Defined at:
 15376 ;;		line 63 in file "mcc_generated_files/pwm/src/pwm6.c"
 15377 ;; Parameters:    Size  Location     Type
 15378 ;;  dutyValue       2    0[BANK1 ] unsigned short 
 15379 ;; Auto vars:     Size  Location     Type
 15380 ;;		None
 15381 ;; Return value:  Size  Location     Type
 15382 ;;                  1    wreg      void 
 15383 ;; Registers used:
 15384 ;;		wreg, status,2, status,0
 15385 ;; Tracked objects:
 15386 ;;		On entry : 0/0
 15387 ;;		On exit  : 0/0
 15388 ;;		Unchanged: 0/0
 15389 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 15390 ;;      Params:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0
 15391 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15392 ;;      Temps:          0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0
 15393 ;;      Totals:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0
 15394 ;;Total ram usage:        4 bytes
 15395 ;; Hardware stack levels used: 1
 15396 ;; Hardware stack levels required when called: 5
 15397 ;; This function calls:
 15398 ;;		Nothing
 15399 ;; This function is called by:
 15400 ;;		_check_push_up
 15401 ;; This function uses a non-reentrant model
 15402 ;;
 15403                           
 15404     1F74                     _PWM_buzzer_LoadDutyValue:	
 15405                           ;psect for function _PWM_buzzer_LoadDutyValue
 15406                           
 15407     1F74                     l5670:	
 15408                           ;incstack = 0
 15409                           ; Regs used in _PWM_buzzer_LoadDutyValue: [wreg+status,2+status,0]
 15410                           
 15411                           
 15412                           ;mcc_generated_files/pwm/src/pwm6.c: 63:  void PWM_buzzer_LoadDutyValue(uint16_t dutyVal
      +                          ue);mcc_generated_files/pwm/src/pwm6.c: 64:  {;mcc_generated_files/pwm/src/pwm6.c: 66:  
      +                              PWM6DCH = (uint8_t) ((dutyValue & 0x03FCu) >> 2);
 15413     1F74  0021               	movlb	1	; select bank1
 15414     1F75  0821               	movf	(PWM_buzzer_LoadDutyValue@dutyValue+1)^(0+128),w
 15415     1F76  00A3               	movwf	(??_PWM_buzzer_LoadDutyValue^(0+128)+1)
 15416     1F77  0820               	movf	PWM_buzzer_LoadDutyValue@dutyValue^(0+128),w
 15417     1F78  00A2               	movwf	??_PWM_buzzer_LoadDutyValue^(0+128)
 15418     1F79  36A3               	lsrf	(??_PWM_buzzer_LoadDutyValue^(0+128)+1),f
 15419     1F7A  0CA2               	rrf	??_PWM_buzzer_LoadDutyValue^(0+128),f
 15420     1F7B  36A3               	lsrf	(??_PWM_buzzer_LoadDutyValue^(0+128)+1),f
 15421     1F7C  0CA2               	rrf	??_PWM_buzzer_LoadDutyValue^(0+128),f
 15422     1F7D  0822               	movf	??_PWM_buzzer_LoadDutyValue^(0+128),w
 15423     1F7E  002C               	movlb	12	; select bank12
 15424     1F7F  009B               	movwf	27	;volatile
 15425                           
 15426                           ;mcc_generated_files/pwm/src/pwm6.c: 69:      PWM6DCL = (uint8_t) ((dutyValue & 0x0003u)
      +                           << 6);
 15427     1F80  0021               	movlb	1	; select bank1
 15428     1F81  0820               	movf	PWM_buzzer_LoadDutyValue@dutyValue^(0+128),w
 15429     1F82  3903               	andlw	3
 15430     1F83  00A2               	movwf	??_PWM_buzzer_LoadDutyValue^(0+128)
 15431     1F84  3006               	movlw	6
 15432     1F85                     u6895:
 15433     1F85  35A2               	lslf	??_PWM_buzzer_LoadDutyValue^(0+128),f
 15434     1F86  0B89               	decfsz	9,f
 15435     1F87  2F85               	goto	u6895
 15436     1F88  0822               	movf	??_PWM_buzzer_LoadDutyValue^(0+128),w
 15437     1F89  002C               	movlb	12	; select bank12
 15438     1F8A  009A               	movwf	26	;volatile
 15439     1F8B                     l86:
 15440     1F8B  0008               	return
 15441     1F8C                     __end_of_PWM_buzzer_LoadDutyValue:
 15442                           
 15443                           	psect	text41
 15444     1F0A                     __ptext41:	
 15445 ;; *************** function _TMR6_Tasks *****************
 15446 ;; Defined at:
 15447 ;;		line 124 in file "mcc_generated_files/timer/src/tmr6.c"
 15448 ;; Parameters:    Size  Location     Type
 15449 ;;		None
 15450 ;; Auto vars:     Size  Location     Type
 15451 ;;		None
 15452 ;; Return value:  Size  Location     Type
 15453 ;;                  1    wreg      void 
 15454 ;; Registers used:
 15455 ;;		wreg, status,2, status,0, pclath, cstack
 15456 ;; Tracked objects:
 15457 ;;		On entry : 0/0
 15458 ;;		On exit  : 0/0
 15459 ;;		Unchanged: 0/0
 15460 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 15461 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15462 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15463 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15464 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15465 ;;Total ram usage:        0 bytes
 15466 ;; Hardware stack levels used: 1
 15467 ;; Hardware stack levels required when called: 9
 15468 ;; This function calls:
 15469 ;;		NULL
 15470 ;;		_TMR6_DefaultPeriodMatchCallback
 15471 ;;		_updateLedstripAnimation
 15472 ;; This function is called by:
 15473 ;;		_main
 15474 ;; This function uses a non-reentrant model
 15475 ;;
 15476                           
 15477     1F0A                     _TMR6_Tasks:	
 15478                           ;psect for function _TMR6_Tasks
 15479                           
 15480     1F0A                     l6022:	
 15481                           ;incstack = 0
 15482                           ; Regs used in _TMR6_Tasks: [wreg+status,2+status,0+pclath+cstack]
 15483                           
 15484                           
 15485                           ;mcc_generated_files/timer/src/tmr6.c: 126:     if(1U == PIR2bits.TMR6IF)
 15486     1F0A  0020               	movlb	0	; select bank0
 15487     1F0B  1F92               	btfss	18,7	;volatile
 15488     1F0C  2F0E               	goto	u7141
 15489     1F0D  2F0F               	goto	u7140
 15490     1F0E                     u7141:
 15491     1F0E  2F1D               	goto	l557
 15492     1F0F                     u7140:
 15493     1F0F                     l6024:
 15494                           
 15495                           ;mcc_generated_files/timer/src/tmr6.c: 127:     {;mcc_generated_files/timer/src/tmr6.c: 
      +                          128:         if(((void*)0) != TMR6_PeriodMatchCallback)
 15496     1F0F  0022               	movlb	2	; select bank2
 15497     1F10  0854               	movf	_TMR6_PeriodMatchCallback^(0+256),w
 15498     1F11  0455               	iorwf	(_TMR6_PeriodMatchCallback+1)^(0+256),w
 15499     1F12  1903               	btfsc	3,2
 15500     1F13  2F15               	goto	u7151
 15501     1F14  2F16               	goto	u7150
 15502     1F15                     u7151:
 15503     1F15  2F1B               	goto	l6028
 15504     1F16                     u7150:
 15505     1F16                     l6026:
 15506                           
 15507                           ;mcc_generated_files/timer/src/tmr6.c: 129:         {;mcc_generated_files/timer/src/tmr6
      +                          .c: 130:             TMR6_PeriodMatchCallback();
 15508     1F16  0855               	movf	(_TMR6_PeriodMatchCallback+1)^(0+256),w
 15509     1F17  008A               	movwf	10
 15510     1F18  0854               	movf	_TMR6_PeriodMatchCallback^(0+256),w
 15511     1F19  000A               	callw
 15512     1F1A  319F               	pagesel	$
 15513     1F1B                     l6028:
 15514                           
 15515                           ;mcc_generated_files/timer/src/tmr6.c: 132:         PIR2bits.TMR6IF = 0;
 15516     1F1B  0020               	movlb	0	; select bank0
 15517     1F1C  1392               	bcf	18,7	;volatile
 15518     1F1D                     l557:
 15519     1F1D  0008               	return
 15520     1F1E                     __end_of_TMR6_Tasks:
 15521                           
 15522                           	psect	text42
 15523     07FF                     __ptext42:	
 15524 ;; *************** function _TMR6_DefaultPeriodMatchCallback *****************
 15525 ;; Defined at:
 15526 ;;		line 109 in file "mcc_generated_files/timer/src/tmr6.c"
 15527 ;; Parameters:    Size  Location     Type
 15528 ;;		None
 15529 ;; Auto vars:     Size  Location     Type
 15530 ;;		None
 15531 ;; Return value:  Size  Location     Type
 15532 ;;                  1    wreg      void 
 15533 ;; Registers used:
 15534 ;;		None
 15535 ;; Tracked objects:
 15536 ;;		On entry : 0/0
 15537 ;;		On exit  : 0/0
 15538 ;;		Unchanged: 0/0
 15539 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 15540 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15541 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15542 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15543 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15544 ;;Total ram usage:        0 bytes
 15545 ;; Hardware stack levels used: 1
 15546 ;; Hardware stack levels required when called: 5
 15547 ;; This function calls:
 15548 ;;		Nothing
 15549 ;; This function is called by:
 15550 ;;		_TMR6_Initialize
 15551 ;;		_TMR6_Tasks
 15552 ;; This function uses a non-reentrant model
 15553 ;;
 15554                           
 15555     07FF                     _TMR6_DefaultPeriodMatchCallback:	
 15556                           ;psect for function _TMR6_DefaultPeriodMatchCallback
 15557                           
 15558     07FF                     l546:	
 15559                           ;incstack = 0
 15560                           ; Regs used in _TMR6_DefaultPeriodMatchCallback: []
 15561                           
 15562     07FF  0008               	return
 15563     0800                     __end_of_TMR6_DefaultPeriodMatchCallback:
 15564                           
 15565                           	psect	text43
 15566     1D5A                     __ptext43:	
 15567 ;; *************** function _updateLedstripAnimation *****************
 15568 ;; Defined at:
 15569 ;;		line 130 in file "ledstrip.c"
 15570 ;; Parameters:    Size  Location     Type
 15571 ;;		None
 15572 ;; Auto vars:     Size  Location     Type
 15573 ;;		None
 15574 ;; Return value:  Size  Location     Type
 15575 ;;                  1    wreg      void 
 15576 ;; Registers used:
 15577 ;;		wreg, status,2, status,0, pclath, cstack
 15578 ;; Tracked objects:
 15579 ;;		On entry : 0/0
 15580 ;;		On exit  : 0/0
 15581 ;;		Unchanged: 0/0
 15582 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 15583 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15584 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15585 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15586 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15587 ;;Total ram usage:        0 bytes
 15588 ;; Hardware stack levels used: 1
 15589 ;; Hardware stack levels required when called: 8
 15590 ;; This function calls:
 15591 ;;		_counter_led
 15592 ;; This function is called by:
 15593 ;;		_initLedstrip
 15594 ;;		_TMR6_Tasks
 15595 ;; This function uses a non-reentrant model
 15596 ;;
 15597                           
 15598     1D5A                     _updateLedstripAnimation:	
 15599                           ;psect for function _updateLedstripAnimation
 15600                           
 15601     1D5A                     l5982:	
 15602                           ;incstack = 0
 15603                           ; Regs used in _updateLedstripAnimation: [wreg+status,2+status,0+pclath+cstack]
 15604                           
 15605                           
 15606                           ;ledstrip.c: 131:     counter_led();
 15607     1D5A  3193  2348  319D   	fcall	_counter_led
 15608     1D5D                     l1031:
 15609     1D5D  0008               	return
 15610     1D5E                     __end_of_updateLedstripAnimation:
 15611                           
 15612                           	psect	text44
 15613     1348                     __ptext44:	
 15614 ;; *************** function _counter_led *****************
 15615 ;; Defined at:
 15616 ;;		line 112 in file "ledstrip.c"
 15617 ;; Parameters:    Size  Location     Type
 15618 ;;		None
 15619 ;; Auto vars:     Size  Location     Type
 15620 ;;  led             1   13[BANK1 ] unsigned char 
 15621 ;;  counter         2   11[BANK1 ] unsigned short 
 15622 ;;  loops           2    9[BANK1 ] unsigned short 
 15623 ;; Return value:  Size  Location     Type
 15624 ;;                  1    wreg      void 
 15625 ;; Registers used:
 15626 ;;		wreg, status,2, status,0, pclath, cstack
 15627 ;; Tracked objects:
 15628 ;;		On entry : 0/0
 15629 ;;		On exit  : 0/0
 15630 ;;		Unchanged: 0/0
 15631 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 15632 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15633 ;;      Locals:         0       0       5       0       0       0       0       0       0       0       0       0       
      +0       0
 15634 ;;      Temps:          0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0
 15635 ;;      Totals:         0       0       7       0       0       0       0       0       0       0       0       0       
      +0       0
 15636 ;;Total ram usage:        7 bytes
 15637 ;; Hardware stack levels used: 1
 15638 ;; Hardware stack levels required when called: 7
 15639 ;; This function calls:
 15640 ;;		___lwdiv
 15641 ;;		___wmul
 15642 ;;		_getCounter
 15643 ;;		_sendLedstripEndFrame
 15644 ;;		_sendLedstripFrame
 15645 ;;		_sendLedstripStartFrame
 15646 ;; This function is called by:
 15647 ;;		_updateLedstripAnimation
 15648 ;; This function uses a non-reentrant model
 15649 ;;
 15650                           
 15651     1348                     _counter_led:	
 15652                           ;psect for function _counter_led
 15653                           
 15654     1348                     l4690:	
 15655                           ;incstack = 0
 15656                           ; Regs used in _counter_led: [wreg+status,2+status,0+pclath+cstack]
 15657                           
 15658                           
 15659                           ;ledstrip.c: 113:     uint16_t counter = getCounter();
 15660     1348  319D  25A8  3193   	fcall	_getCounter
 15661     134B  0021               	movlb	1	; select bank1
 15662     134C  0821               	movf	(?_getCounter+1)^(0+128),w
 15663     134D  00AC               	movwf	(counter_led@counter+1)^(0+128)
 15664     134E  0820               	movf	?_getCounter^(0+128),w
 15665     134F  00AB               	movwf	counter_led@counter^(0+128)
 15666     1350                     l4692:
 15667                           
 15668                           ;ledstrip.c: 114:     uint16_t loops = counter / 60;
 15669     1350  303C               	movlw	60
 15670     1351  00A0               	movwf	___lwdiv@divisor^(0+128)
 15671     1352  3000               	movlw	0
 15672     1353  00A1               	movwf	(___lwdiv@divisor^(0+128)+1)
 15673     1354  082C               	movf	(counter_led@counter+1)^(0+128),w
 15674     1355  00A3               	movwf	(___lwdiv@dividend+1)^(0+128)
 15675     1356  082B               	movf	counter_led@counter^(0+128),w
 15676     1357  00A2               	movwf	___lwdiv@dividend^(0+128)
 15677     1358  3191  2192  3193   	fcall	___lwdiv
 15678     135B  0021               	movlb	1	; select bank1
 15679     135C  0821               	movf	(?___lwdiv+1)^(0+128),w
 15680     135D  00AA               	movwf	(counter_led@loops+1)^(0+128)
 15681     135E  0820               	movf	?___lwdiv^(0+128),w
 15682     135F  00A9               	movwf	counter_led@loops^(0+128)
 15683     1360                     l4694:
 15684                           
 15685                           ;ledstrip.c: 115:     counter -= 60 * (loops);
 15686     1360  082A               	movf	(counter_led@loops+1)^(0+128),w
 15687     1361  00A1               	movwf	(___wmul@multiplier+1)^(0+128)
 15688     1362  0829               	movf	counter_led@loops^(0+128),w
 15689     1363  00A0               	movwf	___wmul@multiplier^(0+128)
 15690     1364  303C               	movlw	60
 15691     1365  00A2               	movwf	___wmul@multiplicand^(0+128)
 15692     1366  3000               	movlw	0
 15693     1367  00A3               	movwf	(___wmul@multiplicand^(0+128)+1)
 15694     1368  319F  27C0  3193   	fcall	___wmul
 15695     136B  0021               	movlb	1	; select bank1
 15696     136C  0820               	movf	?___wmul^(0+128),w
 15697     136D  02AB               	subwf	counter_led@counter^(0+128),f
 15698     136E  0821               	movf	(?___wmul+1)^(0+128),w
 15699     136F  3BAC               	subwfb	(counter_led@counter+1)^(0+128),f
 15700     1370                     l4696:
 15701                           
 15702                           ;ledstrip.c: 117:     sendLedstripStartFrame();
 15703     1370  319F  2733  3193   	fcall	_sendLedstripStartFrame
 15704     1373                     l4698:
 15705                           
 15706                           ;ledstrip.c: 118:     for (uint8_t led = 0; led < 60; led++) {
 15707     1373  0021               	movlb	1	; select bank1
 15708     1374  01AD               	clrf	counter_led@led^(0+128)
 15709     1375                     l4704:
 15710                           
 15711                           ;ledstrip.c: 119:         if (led <= counter) {
 15712     1375  082D               	movf	counter_led@led^(0+128),w
 15713     1376  00A7               	movwf	??_counter_led^(0+128)
 15714     1377  01A8               	clrf	(??_counter_led^(0+128)+1)
 15715     1378  0828               	movf	(??_counter_led+1)^(0+128),w
 15716     1379  022C               	subwf	(counter_led@counter+1)^(0+128),w
 15717     137A  1D03               	skipz
 15718     137B  2B7E               	goto	u4735
 15719     137C  0827               	movf	??_counter_led^(0+128),w
 15720     137D  022B               	subwf	counter_led@counter^(0+128),w
 15721     137E                     u4735:
 15722     137E  1C03               	skipc
 15723     137F  2B81               	goto	u4731
 15724     1380  2B82               	goto	u4730
 15725     1381                     u4731:
 15726     1381  2B8B               	goto	l4708
 15727     1382                     u4730:
 15728     1382                     l4706:
 15729                           
 15730                           ;ledstrip.c: 120:             sendLedstripFrame(0xFF, 0x00, 0x00, 0x05);
 15731     1382  01A1               	clrf	sendLedstripFrame@green^(0+128)
 15732     1383  01A2               	clrf	sendLedstripFrame@blue^(0+128)
 15733     1384  3005               	movlw	5
 15734     1385  00A3               	movwf	sendLedstripFrame@intensity^(0+128)
 15735     1386  30FF               	movlw	255
 15736     1387  319F  27A5  3193   	fcall	_sendLedstripFrame
 15737                           
 15738                           ;ledstrip.c: 121:         } else {
 15739     138A  2B93               	goto	l4710
 15740     138B                     l4708:
 15741                           
 15742                           ;ledstrip.c: 122:             sendLedstripFrame(0x00, 0x00, 0x00, 0x05);
 15743     138B  01A1               	clrf	sendLedstripFrame@green^(0+128)
 15744     138C  01A2               	clrf	sendLedstripFrame@blue^(0+128)
 15745     138D  3005               	movlw	5
 15746     138E  00A3               	movwf	sendLedstripFrame@intensity^(0+128)
 15747     138F  3000               	movlw	0
 15748     1390  319F  27A5  3193   	fcall	_sendLedstripFrame
 15749     1393                     l4710:
 15750                           
 15751                           ;ledstrip.c: 124:     }
 15752     1393  3001               	movlw	1
 15753     1394  0021               	movlb	1	; select bank1
 15754     1395  07AD               	addwf	counter_led@led^(0+128),f
 15755     1396                     l4712:
 15756     1396  303C               	movlw	60
 15757     1397  022D               	subwf	counter_led@led^(0+128),w
 15758     1398  1C03               	skipc
 15759     1399  2B9B               	goto	u4741
 15760     139A  2B9C               	goto	u4740
 15761     139B                     u4741:
 15762     139B  2B75               	goto	l4704
 15763     139C                     u4740:
 15764     139C                     l4714:
 15765                           
 15766                           ;ledstrip.c: 126:     sendLedstripEndFrame();
 15767     139C  319F  278C  3193   	fcall	_sendLedstripEndFrame
 15768     139F                     l1028:
 15769     139F  0008               	return
 15770     13A0                     __end_of_counter_led:
 15771                           
 15772                           	psect	text45
 15773     1F33                     __ptext45:	
 15774 ;; *************** function _sendLedstripStartFrame *****************
 15775 ;; Defined at:
 15776 ;;		line 7 in file "ledstrip.c"
 15777 ;; Parameters:    Size  Location     Type
 15778 ;;		None
 15779 ;; Auto vars:     Size  Location     Type
 15780 ;;		None
 15781 ;; Return value:  Size  Location     Type
 15782 ;;                  1    wreg      void 
 15783 ;; Registers used:
 15784 ;;		wreg, status,2, status,0, pclath, cstack
 15785 ;; Tracked objects:
 15786 ;;		On entry : 0/0
 15787 ;;		On exit  : 0/0
 15788 ;;		Unchanged: 0/0
 15789 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 15790 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15791 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15792 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15793 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15794 ;;Total ram usage:        0 bytes
 15795 ;; Hardware stack levels used: 1
 15796 ;; Hardware stack levels required when called: 6
 15797 ;; This function calls:
 15798 ;;		_SPI1_ByteExchange
 15799 ;; This function is called by:
 15800 ;;		_counter_led
 15801 ;;		_dutycycle_led_strip
 15802 ;;		_position_led_strip
 15803 ;; This function uses a non-reentrant model
 15804 ;;
 15805                           
 15806     1F33                     _sendLedstripStartFrame:	
 15807                           ;psect for function _sendLedstripStartFrame
 15808                           
 15809     1F33                     l4592:	
 15810                           ;incstack = 0
 15811                           ; Regs used in _sendLedstripStartFrame: [wreg+status,2+status,0+pclath+cstack]
 15812                           
 15813                           
 15814                           ;ledstrip.c: 9:     SPI1_ByteExchange(0x00);
 15815     1F33  0021               	movlb	1	; select bank1
 15816     1F34  01A0               	clrf	SPI1_ByteExchange@byteData^(0+128)
 15817     1F35  319E  2611  319F   	fcall	_SPI1_ByteExchange
 15818                           
 15819                           ;ledstrip.c: 10:     SPI1_ByteExchange(0x00);
 15820     1F38  0021               	movlb	1	; select bank1
 15821     1F39  01A0               	clrf	SPI1_ByteExchange@byteData^(0+128)
 15822     1F3A  319E  2611  319F   	fcall	_SPI1_ByteExchange
 15823                           
 15824                           ;ledstrip.c: 11:     SPI1_ByteExchange(0x00);
 15825     1F3D  0021               	movlb	1	; select bank1
 15826     1F3E  01A0               	clrf	SPI1_ByteExchange@byteData^(0+128)
 15827     1F3F  319E  2611  319F   	fcall	_SPI1_ByteExchange
 15828                           
 15829                           ;ledstrip.c: 12:     SPI1_ByteExchange(0x00);
 15830     1F42  0021               	movlb	1	; select bank1
 15831     1F43  01A0               	clrf	SPI1_ByteExchange@byteData^(0+128)
 15832     1F44  319E  2611  319F   	fcall	_SPI1_ByteExchange
 15833     1F47                     l989:
 15834     1F47  0008               	return
 15835     1F48                     __end_of_sendLedstripStartFrame:
 15836                           
 15837                           	psect	text46
 15838     1FA5                     __ptext46:	
 15839 ;; *************** function _sendLedstripFrame *****************
 15840 ;; Defined at:
 15841 ;;		line 23 in file "ledstrip.c"
 15842 ;; Parameters:    Size  Location     Type
 15843 ;;  red             1    wreg     unsigned char 
 15844 ;;  green           1    1[BANK1 ] unsigned char 
 15845 ;;  blue            1    2[BANK1 ] unsigned char 
 15846 ;;  intensity       1    3[BANK1 ] unsigned char 
 15847 ;; Auto vars:     Size  Location     Type
 15848 ;;  red             1    4[BANK1 ] unsigned char 
 15849 ;; Return value:  Size  Location     Type
 15850 ;;                  1    wreg      void 
 15851 ;; Registers used:
 15852 ;;		wreg, status,2, status,0, pclath, cstack
 15853 ;; Tracked objects:
 15854 ;;		On entry : 0/0
 15855 ;;		On exit  : 0/0
 15856 ;;		Unchanged: 0/0
 15857 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 15858 ;;      Params:         0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0
 15859 ;;      Locals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0
 15860 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15861 ;;      Totals:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0
 15862 ;;Total ram usage:        4 bytes
 15863 ;; Hardware stack levels used: 1
 15864 ;; Hardware stack levels required when called: 6
 15865 ;; This function calls:
 15866 ;;		_SPI1_ByteExchange
 15867 ;; This function is called by:
 15868 ;;		_counter_led
 15869 ;;		_dutycycle_led_strip
 15870 ;;		_position_led_strip
 15871 ;; This function uses a non-reentrant model
 15872 ;;
 15873                           
 15874     1FA5                     _sendLedstripFrame:	
 15875                           ;psect for function _sendLedstripFrame
 15876                           
 15877                           
 15878                           ;incstack = 0
 15879                           ; Regs used in _sendLedstripFrame: [wreg+status,2+status,0+pclath+cstack]
 15880                           ;sendLedstripFrame@red stored from wreg
 15881     1FA5  0021               	movlb	1	; select bank1
 15882     1FA6  00A4               	movwf	sendLedstripFrame@red^(0+128)
 15883     1FA7                     l4596:
 15884                           
 15885                           ;ledstrip.c: 24:     SPI1_ByteExchange(0xE0 | intensity);
 15886     1FA7  0823               	movf	sendLedstripFrame@intensity^(0+128),w
 15887     1FA8  38E0               	iorlw	224
 15888     1FA9  00A0               	movwf	SPI1_ByteExchange@byteData^(0+128)
 15889     1FAA  319E  2611  319F   	fcall	_SPI1_ByteExchange
 15890                           
 15891                           ;ledstrip.c: 26:     SPI1_ByteExchange(blue);
 15892     1FAD  0021               	movlb	1	; select bank1
 15893     1FAE  0822               	movf	sendLedstripFrame@blue^(0+128),w
 15894     1FAF  00A0               	movwf	SPI1_ByteExchange@byteData^(0+128)
 15895     1FB0  319E  2611  319F   	fcall	_SPI1_ByteExchange
 15896                           
 15897                           ;ledstrip.c: 27:     SPI1_ByteExchange(green);
 15898     1FB3  0021               	movlb	1	; select bank1
 15899     1FB4  0821               	movf	sendLedstripFrame@green^(0+128),w
 15900     1FB5  00A0               	movwf	SPI1_ByteExchange@byteData^(0+128)
 15901     1FB6  319E  2611  319F   	fcall	_SPI1_ByteExchange
 15902                           
 15903                           ;ledstrip.c: 28:     SPI1_ByteExchange(red);
 15904     1FB9  0021               	movlb	1	; select bank1
 15905     1FBA  0824               	movf	sendLedstripFrame@red^(0+128),w
 15906     1FBB  00A0               	movwf	SPI1_ByteExchange@byteData^(0+128)
 15907     1FBC  319E  2611  319F   	fcall	_SPI1_ByteExchange
 15908     1FBF                     l995:
 15909     1FBF  0008               	return
 15910     1FC0                     __end_of_sendLedstripFrame:
 15911                           
 15912                           	psect	text47
 15913     1F8C                     __ptext47:	
 15914 ;; *************** function _sendLedstripEndFrame *****************
 15915 ;; Defined at:
 15916 ;;		line 15 in file "ledstrip.c"
 15917 ;; Parameters:    Size  Location     Type
 15918 ;;		None
 15919 ;; Auto vars:     Size  Location     Type
 15920 ;;		None
 15921 ;; Return value:  Size  Location     Type
 15922 ;;                  1    wreg      void 
 15923 ;; Registers used:
 15924 ;;		wreg, status,2, status,0, pclath, cstack
 15925 ;; Tracked objects:
 15926 ;;		On entry : 0/0
 15927 ;;		On exit  : 0/0
 15928 ;;		Unchanged: 0/0
 15929 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 15930 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15931 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15932 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15933 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15934 ;;Total ram usage:        0 bytes
 15935 ;; Hardware stack levels used: 1
 15936 ;; Hardware stack levels required when called: 6
 15937 ;; This function calls:
 15938 ;;		_SPI1_ByteExchange
 15939 ;; This function is called by:
 15940 ;;		_counter_led
 15941 ;;		_dutycycle_led_strip
 15942 ;;		_position_led_strip
 15943 ;; This function uses a non-reentrant model
 15944 ;;
 15945                           
 15946     1F8C                     _sendLedstripEndFrame:	
 15947                           ;psect for function _sendLedstripEndFrame
 15948                           
 15949     1F8C                     l4594:	
 15950                           ;incstack = 0
 15951                           ; Regs used in _sendLedstripEndFrame: [wreg+status,2+status,0+pclath+cstack]
 15952                           
 15953                           
 15954                           ;ledstrip.c: 17:     SPI1_ByteExchange(0xFF);
 15955     1F8C  30FF               	movlw	255
 15956     1F8D  0021               	movlb	1	; select bank1
 15957     1F8E  00A0               	movwf	SPI1_ByteExchange@byteData^(0+128)
 15958     1F8F  319E  2611  319F   	fcall	_SPI1_ByteExchange
 15959                           
 15960                           ;ledstrip.c: 18:     SPI1_ByteExchange(0xFF);
 15961     1F92  30FF               	movlw	255
 15962     1F93  0021               	movlb	1	; select bank1
 15963     1F94  00A0               	movwf	SPI1_ByteExchange@byteData^(0+128)
 15964     1F95  319E  2611  319F   	fcall	_SPI1_ByteExchange
 15965                           
 15966                           ;ledstrip.c: 19:     SPI1_ByteExchange(0xFF);
 15967     1F98  30FF               	movlw	255
 15968     1F99  0021               	movlb	1	; select bank1
 15969     1F9A  00A0               	movwf	SPI1_ByteExchange@byteData^(0+128)
 15970     1F9B  319E  2611  319F   	fcall	_SPI1_ByteExchange
 15971                           
 15972                           ;ledstrip.c: 20:     SPI1_ByteExchange(0xFF);
 15973     1F9E  30FF               	movlw	255
 15974     1F9F  0021               	movlb	1	; select bank1
 15975     1FA0  00A0               	movwf	SPI1_ByteExchange@byteData^(0+128)
 15976     1FA1  319E  2611  319F   	fcall	_SPI1_ByteExchange
 15977     1FA4                     l992:
 15978     1FA4  0008               	return
 15979     1FA5                     __end_of_sendLedstripEndFrame:
 15980                           
 15981                           	psect	text48
 15982     1E11                     __ptext48:	
 15983 ;; *************** function _SPI1_ByteExchange *****************
 15984 ;; Defined at:
 15985 ;;		line 160 in file "mcc_generated_files/spi/src/mssp1.c"
 15986 ;; Parameters:    Size  Location     Type
 15987 ;;  byteData        1    0[BANK1 ] unsigned char 
 15988 ;; Auto vars:     Size  Location     Type
 15989 ;;		None
 15990 ;; Return value:  Size  Location     Type
 15991 ;;                  1    wreg      unsigned char 
 15992 ;; Registers used:
 15993 ;;		wreg
 15994 ;; Tracked objects:
 15995 ;;		On entry : 0/0
 15996 ;;		On exit  : 0/0
 15997 ;;		Unchanged: 0/0
 15998 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 15999 ;;      Params:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0
 16000 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16001 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16002 ;;      Totals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0
 16003 ;;Total ram usage:        1 bytes
 16004 ;; Hardware stack levels used: 1
 16005 ;; Hardware stack levels required when called: 5
 16006 ;; This function calls:
 16007 ;;		Nothing
 16008 ;; This function is called by:
 16009 ;;		_sendLedstripStartFrame
 16010 ;;		_sendLedstripEndFrame
 16011 ;;		_sendLedstripFrame
 16012 ;; This function uses a non-reentrant model
 16013 ;;
 16014                           
 16015     1E11                     _SPI1_ByteExchange:	
 16016                           ;psect for function _SPI1_ByteExchange
 16017                           
 16018     1E11                     l4494:	
 16019                           ;incstack = 0
 16020                           ; Regs used in _SPI1_ByteExchange: [wreg]
 16021                           
 16022                           
 16023                           ;mcc_generated_files/spi/src/mssp1.c: 160: uint8_t SPI1_ByteExchange(uint8_t byteData);m
      +                          cc_generated_files/spi/src/mssp1.c: 161: {;mcc_generated_files/spi/src/mssp1.c: 162:    
      +                           SSP1BUF = byteData;
 16024     1E11  0021               	movlb	1	; select bank1
 16025     1E12  0820               	movf	SPI1_ByteExchange@byteData^(0+128),w
 16026     1E13  0024               	movlb	4	; select bank4
 16027     1E14  0091               	movwf	17	;volatile
 16028     1E15                     l174:	
 16029                           ;mcc_generated_files/spi/src/mssp1.c: 164:     {;mcc_generated_files/spi/src/mssp1.c: 16
      +                          6:     }
 16030                           
 16031                           
 16032                           ;mcc_generated_files/spi/src/mssp1.c: 163:     while (!PIR1bits.SSP1IF)
 16033     1E15  0020               	movlb	0	; select bank0
 16034     1E16  1D91               	btfss	17,3	;volatile
 16035     1E17  2E19               	goto	u4511
 16036     1E18  2E1A               	goto	u4510
 16037     1E19                     u4511:
 16038     1E19  2E15               	goto	l174
 16039     1E1A                     u4510:
 16040     1E1A                     l176:
 16041                           
 16042                           ;mcc_generated_files/spi/src/mssp1.c: 167:     PIR1bits.SSP1IF = 0;
 16043     1E1A  1191               	bcf	17,3	;volatile
 16044     1E1B                     l4496:
 16045                           
 16046                           ;mcc_generated_files/spi/src/mssp1.c: 168:     return SSP1BUF;;	Return value of _SPI1_By
      +                          teExchange is never used
 16047     1E1B  0024               	movlb	4	; select bank4
 16048     1E1C  0811               	movf	17,w	;volatile
 16049     1E1D                     l177:
 16050     1E1D  0008               	return
 16051     1E1E                     __end_of_SPI1_ByteExchange:
 16052                           
 16053                           	psect	text49
 16054     1DA8                     __ptext49:	
 16055 ;; *************** function _getCounter *****************
 16056 ;; Defined at:
 16057 ;;		line 30 in file "PushUp.c"
 16058 ;; Parameters:    Size  Location     Type
 16059 ;;		None
 16060 ;; Auto vars:     Size  Location     Type
 16061 ;;		None
 16062 ;; Return value:  Size  Location     Type
 16063 ;;                  2    0[BANK1 ] unsigned short 
 16064 ;; Registers used:
 16065 ;;		wreg
 16066 ;; Tracked objects:
 16067 ;;		On entry : 0/0
 16068 ;;		On exit  : 0/0
 16069 ;;		Unchanged: 0/0
 16070 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 16071 ;;      Params:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0
 16072 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16073 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16074 ;;      Totals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0
 16075 ;;Total ram usage:        2 bytes
 16076 ;; Hardware stack levels used: 1
 16077 ;; Hardware stack levels required when called: 5
 16078 ;; This function calls:
 16079 ;;		Nothing
 16080 ;; This function is called by:
 16081 ;;		_printLogs
 16082 ;;		_counter_led
 16083 ;; This function uses a non-reentrant model
 16084 ;;
 16085                           
 16086     1DA8                     _getCounter:	
 16087                           ;psect for function _getCounter
 16088                           
 16089     1DA8                     l4588:	
 16090                           ;incstack = 0
 16091                           ; Regs used in _getCounter: [wreg]
 16092                           
 16093     1DA8  0022               	movlb	2	; select bank2
 16094     1DA9  0849               	movf	(_counter+1)^(0+256),w
 16095     1DAA  0021               	movlb	1	; select bank1
 16096     1DAB  00A1               	movwf	(?_getCounter+1)^(0+128)
 16097     1DAC  0022               	movlb	2	; select bank2
 16098     1DAD  0848               	movf	_counter^(0+256),w
 16099     1DAE  0021               	movlb	1	; select bank1
 16100     1DAF  00A0               	movwf	?_getCounter^(0+128)
 16101     1DB0                     l1056:
 16102     1DB0  0008               	return
 16103     1DB1                     __end_of_getCounter:
 16104                           
 16105                           	psect	text50
 16106     1FC0                     __ptext50:	
 16107 ;; *************** function ___wmul *****************
 16108 ;; Defined at:
 16109 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\Umul16.c"
 16110 ;; Parameters:    Size  Location     Type
 16111 ;;  multiplier      2    0[BANK1 ] unsigned int 
 16112 ;;  multiplicand    2    2[BANK1 ] unsigned int 
 16113 ;; Auto vars:     Size  Location     Type
 16114 ;;  product         2    4[BANK1 ] unsigned int 
 16115 ;; Return value:  Size  Location     Type
 16116 ;;                  2    0[BANK1 ] unsigned int 
 16117 ;; Registers used:
 16118 ;;		wreg, status,2, status,0
 16119 ;; Tracked objects:
 16120 ;;		On entry : 0/0
 16121 ;;		On exit  : 0/0
 16122 ;;		Unchanged: 0/0
 16123 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 16124 ;;      Params:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0
 16125 ;;      Locals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0
 16126 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16127 ;;      Totals:         0       0       6       0       0       0       0       0       0       0       0       0       
      +0       0
 16128 ;;Total ram usage:        6 bytes
 16129 ;; Hardware stack levels used: 1
 16130 ;; Hardware stack levels required when called: 5
 16131 ;; This function calls:
 16132 ;;		Nothing
 16133 ;; This function is called by:
 16134 ;;		_SPI1_Open
 16135 ;;		_counter_led
 16136 ;;		_check_push_up
 16137 ;;		_atoi
 16138 ;;		_read_prec_or_width
 16139 ;;		_dutycycle_led_strip
 16140 ;; This function uses a non-reentrant model
 16141 ;;
 16142                           
 16143     1FC0                     ___wmul:	
 16144                           ;psect for function ___wmul
 16145                           
 16146     1FC0                     l4228:	
 16147                           ;incstack = 0
 16148                           ; Regs used in ___wmul: [wreg+status,2+status,0]
 16149                           
 16150     1FC0  0021               	movlb	1	; select bank1
 16151     1FC1  01A4               	clrf	___wmul@product^(0+128)
 16152     1FC2  01A5               	clrf	(___wmul@product+1)^(0+128)
 16153     1FC3                     l4230:
 16154     1FC3  1C20               	btfss	___wmul@multiplier^(0+128),0
 16155     1FC4  2FC6               	goto	u3931
 16156     1FC5  2FC7               	goto	u3930
 16157     1FC6                     u3931:
 16158     1FC6  2FCB               	goto	l1208
 16159     1FC7                     u3930:
 16160     1FC7                     l4232:
 16161     1FC7  0822               	movf	___wmul@multiplicand^(0+128),w
 16162     1FC8  07A4               	addwf	___wmul@product^(0+128),f
 16163     1FC9  0823               	movf	(___wmul@multiplicand+1)^(0+128),w
 16164     1FCA  3DA5               	addwfc	(___wmul@product+1)^(0+128),f
 16165     1FCB                     l1208:
 16166     1FCB  3001               	movlw	1
 16167     1FCC                     u3945:
 16168     1FCC  35A2               	lslf	___wmul@multiplicand^(0+128),f
 16169     1FCD  0DA3               	rlf	(___wmul@multiplicand+1)^(0+128),f
 16170     1FCE  0B89               	decfsz	9,f
 16171     1FCF  2FCC               	goto	u3945
 16172     1FD0                     l4234:
 16173     1FD0  3001               	movlw	1
 16174     1FD1                     u3955:
 16175     1FD1  36A1               	lsrf	(___wmul@multiplier+1)^(0+128),f
 16176     1FD2  0CA0               	rrf	___wmul@multiplier^(0+128),f
 16177     1FD3  0B89               	decfsz	9,f
 16178     1FD4  2FD1               	goto	u3955
 16179     1FD5                     l4236:
 16180     1FD5  0820               	movf	___wmul@multiplier^(0+128),w
 16181     1FD6  0421               	iorwf	(___wmul@multiplier+1)^(0+128),w
 16182     1FD7  1D03               	btfss	3,2
 16183     1FD8  2FDA               	goto	u3961
 16184     1FD9  2FDB               	goto	u3960
 16185     1FDA                     u3961:
 16186     1FDA  2FC3               	goto	l4230
 16187     1FDB                     u3960:
 16188     1FDB                     l4238:
 16189     1FDB  0825               	movf	(___wmul@product+1)^(0+128),w
 16190     1FDC  00A1               	movwf	(?___wmul+1)^(0+128)
 16191     1FDD  0824               	movf	___wmul@product^(0+128),w
 16192     1FDE  00A0               	movwf	?___wmul^(0+128)
 16193     1FDF                     l1210:
 16194     1FDF  0008               	return
 16195     1FE0                     __end_of___wmul:
 16196                           
 16197                           	psect	text51
 16198     1192                     __ptext51:	
 16199 ;; *************** function ___lwdiv *****************
 16200 ;; Defined at:
 16201 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\lwdiv.c"
 16202 ;; Parameters:    Size  Location     Type
 16203 ;;  divisor         2    0[BANK1 ] unsigned int 
 16204 ;;  dividend        2    2[BANK1 ] unsigned int 
 16205 ;; Auto vars:     Size  Location     Type
 16206 ;;  quotient        2    4[BANK1 ] unsigned int 
 16207 ;;  counter         1    6[BANK1 ] unsigned char 
 16208 ;; Return value:  Size  Location     Type
 16209 ;;                  2    0[BANK1 ] unsigned int 
 16210 ;; Registers used:
 16211 ;;		wreg, status,2, status,0
 16212 ;; Tracked objects:
 16213 ;;		On entry : 0/0
 16214 ;;		On exit  : 0/0
 16215 ;;		Unchanged: 0/0
 16216 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 16217 ;;      Params:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0
 16218 ;;      Locals:         0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0
 16219 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16220 ;;      Totals:         0       0       7       0       0       0       0       0       0       0       0       0       
      +0       0
 16221 ;;Total ram usage:        7 bytes
 16222 ;; Hardware stack levels used: 1
 16223 ;; Hardware stack levels required when called: 5
 16224 ;; This function calls:
 16225 ;;		Nothing
 16226 ;; This function is called by:
 16227 ;;		_counter_led
 16228 ;;		_utoa
 16229 ;;		_dutycycle_led_strip
 16230 ;; This function uses a non-reentrant model
 16231 ;;
 16232                           
 16233     1192                     ___lwdiv:	
 16234                           ;psect for function ___lwdiv
 16235                           
 16236     1192                     l4324:	
 16237                           ;incstack = 0
 16238                           ; Regs used in ___lwdiv: [wreg+status,2+status,0]
 16239                           
 16240     1192  0021               	movlb	1	; select bank1
 16241     1193  01A4               	clrf	___lwdiv@quotient^(0+128)
 16242     1194  01A5               	clrf	(___lwdiv@quotient+1)^(0+128)
 16243     1195                     l4326:
 16244     1195  0820               	movf	___lwdiv@divisor^(0+128),w
 16245     1196  0421               	iorwf	(___lwdiv@divisor+1)^(0+128),w
 16246     1197  1903               	btfsc	3,2
 16247     1198  299A               	goto	u4161
 16248     1199  299B               	goto	u4160
 16249     119A                     u4161:
 16250     119A  29C8               	goto	l4346
 16251     119B                     u4160:
 16252     119B                     l4328:
 16253     119B  3001               	movlw	1
 16254     119C  00A6               	movwf	___lwdiv@counter^(0+128)
 16255     119D  29A5               	goto	l4334
 16256     119E                     l4330:
 16257     119E  3001               	movlw	1
 16258     119F                     u4175:
 16259     119F  35A0               	lslf	___lwdiv@divisor^(0+128),f
 16260     11A0  0DA1               	rlf	(___lwdiv@divisor+1)^(0+128),f
 16261     11A1  0B89               	decfsz	9,f
 16262     11A2  299F               	goto	u4175
 16263     11A3                     l4332:
 16264     11A3  3001               	movlw	1
 16265     11A4  07A6               	addwf	___lwdiv@counter^(0+128),f
 16266     11A5                     l4334:
 16267     11A5  1FA1               	btfss	(___lwdiv@divisor+1)^(0+128),7
 16268     11A6  29A8               	goto	u4181
 16269     11A7  29A9               	goto	u4180
 16270     11A8                     u4181:
 16271     11A8  299E               	goto	l4330
 16272     11A9                     u4180:
 16273     11A9                     l4336:
 16274     11A9  3001               	movlw	1
 16275     11AA                     u4195:
 16276     11AA  35A4               	lslf	___lwdiv@quotient^(0+128),f
 16277     11AB  0DA5               	rlf	(___lwdiv@quotient+1)^(0+128),f
 16278     11AC  0B89               	decfsz	9,f
 16279     11AD  29AA               	goto	u4195
 16280     11AE  0821               	movf	(___lwdiv@divisor+1)^(0+128),w
 16281     11AF  0223               	subwf	(___lwdiv@dividend+1)^(0+128),w
 16282     11B0  1D03               	skipz
 16283     11B1  29B4               	goto	u4205
 16284     11B2  0820               	movf	___lwdiv@divisor^(0+128),w
 16285     11B3  0222               	subwf	___lwdiv@dividend^(0+128),w
 16286     11B4                     u4205:
 16287     11B4  1C03               	skipc
 16288     11B5  29B7               	goto	u4201
 16289     11B6  29B8               	goto	u4200
 16290     11B7                     u4201:
 16291     11B7  29BD               	goto	l4342
 16292     11B8                     u4200:
 16293     11B8                     l4338:
 16294     11B8  0820               	movf	___lwdiv@divisor^(0+128),w
 16295     11B9  02A2               	subwf	___lwdiv@dividend^(0+128),f
 16296     11BA  0821               	movf	(___lwdiv@divisor+1)^(0+128),w
 16297     11BB  3BA3               	subwfb	(___lwdiv@dividend+1)^(0+128),f
 16298     11BC                     l4340:
 16299     11BC  1424               	bsf	___lwdiv@quotient^(0+128),0
 16300     11BD                     l4342:
 16301     11BD  3001               	movlw	1
 16302     11BE                     u4215:
 16303     11BE  36A1               	lsrf	(___lwdiv@divisor+1)^(0+128),f
 16304     11BF  0CA0               	rrf	___lwdiv@divisor^(0+128),f
 16305     11C0  0B89               	decfsz	9,f
 16306     11C1  29BE               	goto	u4215
 16307     11C2                     l4344:
 16308     11C2  3001               	movlw	1
 16309     11C3  02A6               	subwf	___lwdiv@counter^(0+128),f
 16310     11C4  1D03               	btfss	3,2
 16311     11C5  29C7               	goto	u4221
 16312     11C6  29C8               	goto	u4220
 16313     11C7                     u4221:
 16314     11C7  29A9               	goto	l4336
 16315     11C8                     u4220:
 16316     11C8                     l4346:
 16317     11C8  0825               	movf	(___lwdiv@quotient+1)^(0+128),w
 16318     11C9  00A1               	movwf	(?___lwdiv+1)^(0+128)
 16319     11CA  0824               	movf	___lwdiv@quotient^(0+128),w
 16320     11CB  00A0               	movwf	?___lwdiv^(0+128)
 16321     11CC                     l1488:
 16322     11CC  0008               	return
 16323     11CD                     __end_of___lwdiv:
 16324                           
 16325                           	psect	text52
 16326     1D9F                     __ptext52:	
 16327 ;; *************** function _TMR4_PeriodMatchCallbackRegister *****************
 16328 ;; Defined at:
 16329 ;;		line 124 in file "mcc_generated_files/timer/src/tmr4.c"
 16330 ;; Parameters:    Size  Location     Type
 16331 ;;  CallbackHand    2    0[BANK1 ] PTR FTN()void 
 16332 ;;		 -> controller(1), 
 16333 ;; Auto vars:     Size  Location     Type
 16334 ;;		None
 16335 ;; Return value:  Size  Location     Type
 16336 ;;                  1    wreg      void 
 16337 ;; Registers used:
 16338 ;;		wreg
 16339 ;; Tracked objects:
 16340 ;;		On entry : 0/0
 16341 ;;		On exit  : 0/0
 16342 ;;		Unchanged: 0/0
 16343 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 16344 ;;      Params:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0
 16345 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16346 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16347 ;;      Totals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0
 16348 ;;Total ram usage:        2 bytes
 16349 ;; Hardware stack levels used: 1
 16350 ;; Hardware stack levels required when called: 5
 16351 ;; This function calls:
 16352 ;;		Nothing
 16353 ;; This function is called by:
 16354 ;;		_main
 16355 ;; This function uses a non-reentrant model
 16356 ;;
 16357                           
 16358     1D9F                     _TMR4_PeriodMatchCallbackRegister:	
 16359                           ;psect for function _TMR4_PeriodMatchCallbackRegister
 16360                           
 16361     1D9F                     l6020:	
 16362                           ;incstack = 0
 16363                           ; Regs used in _TMR4_PeriodMatchCallbackRegister: [wreg]
 16364                           
 16365                           
 16366                           ;mcc_generated_files/timer/src/tmr4.c: 124: void TMR4_PeriodMatchCallbackRegister(void (
      +                          * CallbackHandler)(void));mcc_generated_files/timer/src/tmr4.c: 125: {;mcc_generated_fil
      +                          es/timer/src/tmr4.c: 126:    TMR4_PeriodMatchCallback = CallbackHandler;
 16367     1D9F  0021               	movlb	1	; select bank1
 16368     1DA0  0821               	movf	(TMR4_PeriodMatchCallbackRegister@CallbackHandler+1)^(0+128),w
 16369     1DA1  0022               	movlb	2	; select bank2
 16370     1DA2  00D7               	movwf	(_TMR4_PeriodMatchCallback+1)^(0+256)
 16371     1DA3  0021               	movlb	1	; select bank1
 16372     1DA4  0820               	movf	TMR4_PeriodMatchCallbackRegister@CallbackHandler^(0+128),w
 16373     1DA5  0022               	movlb	2	; select bank2
 16374     1DA6  00D6               	movwf	_TMR4_PeriodMatchCallback^(0+256)
 16375     1DA7                     l494:
 16376     1DA7  0008               	return
 16377     1DA8                     __end_of_TMR4_PeriodMatchCallbackRegister:
 16378                           
 16379                           	psect	text53
 16380     101E                     __ptext53:	
 16381 ;; *************** function _SYSTEM_Initialize *****************
 16382 ;; Defined at:
 16383 ;;		line 39 in file "mcc_generated_files/system/src/system.c"
 16384 ;; Parameters:    Size  Location     Type
 16385 ;;		None
 16386 ;; Auto vars:     Size  Location     Type
 16387 ;;		None
 16388 ;; Return value:  Size  Location     Type
 16389 ;;                  1    wreg      void 
 16390 ;; Registers used:
 16391 ;;		wreg, status,2, status,0, pclath, cstack
 16392 ;; Tracked objects:
 16393 ;;		On entry : 0/0
 16394 ;;		On exit  : 0/0
 16395 ;;		Unchanged: 0/0
 16396 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 16397 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16398 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16399 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16400 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16401 ;;Total ram usage:        0 bytes
 16402 ;; Hardware stack levels used: 1
 16403 ;; Hardware stack levels required when called: 7
 16404 ;; This function calls:
 16405 ;;		_ADC_Initialize
 16406 ;;		_CLOCK_Initialize
 16407 ;;		_EUSART_Initialize
 16408 ;;		_INTERRUPT_Initialize
 16409 ;;		_PIN_MANAGER_Initialize
 16410 ;;		_PWM_buzzer_Initialize
 16411 ;;		_SPI1_Initialize
 16412 ;;		_TMR2_Initialize
 16413 ;;		_TMR4_Initialize
 16414 ;;		_TMR6_Initialize
 16415 ;;		_pwm_fan_Initialize
 16416 ;; This function is called by:
 16417 ;;		_main
 16418 ;; This function uses a non-reentrant model
 16419 ;;
 16420                           
 16421     101E                     _SYSTEM_Initialize:	
 16422                           ;psect for function _SYSTEM_Initialize
 16423                           
 16424     101E                     l6002:	
 16425                           ;incstack = 0
 16426                           ; Regs used in _SYSTEM_Initialize: [wreg+status,2+status,0+pclath+cstack]
 16427                           
 16428                           
 16429                           ;mcc_generated_files/system/src/system.c: 41:     CLOCK_Initialize();
 16430     101E  319D  258D  3190   	fcall	_CLOCK_Initialize
 16431                           
 16432                           ;mcc_generated_files/system/src/system.c: 42:     PIN_MANAGER_Initialize();
 16433     1021  3192  2209  3190   	fcall	_PIN_MANAGER_Initialize
 16434     1024                     l6004:
 16435                           
 16436                           ;mcc_generated_files/system/src/system.c: 43:     TMR2_Initialize();
 16437     1024  319E  26A3  3190   	fcall	_TMR2_Initialize
 16438     1027                     l6006:
 16439                           
 16440                           ;mcc_generated_files/system/src/system.c: 44:     TMR4_Initialize();
 16441     1027  319E  26B4  3190   	fcall	_TMR4_Initialize
 16442     102A                     l6008:
 16443                           
 16444                           ;mcc_generated_files/system/src/system.c: 45:     TMR6_Initialize();
 16445     102A  319E  2684  3190   	fcall	_TMR6_Initialize
 16446     102D                     l6010:
 16447                           
 16448                           ;mcc_generated_files/system/src/system.c: 46:     ADC_Initialize();
 16449     102D  319F  2748  3190   	fcall	_ADC_Initialize
 16450     1030                     l6012:
 16451                           
 16452                           ;mcc_generated_files/system/src/system.c: 47:     EUSART_Initialize();
 16453     1030  3191  215B  3190   	fcall	_EUSART_Initialize
 16454     1033                     l6014:
 16455                           
 16456                           ;mcc_generated_files/system/src/system.c: 48:     PWM_buzzer_Initialize();
 16457     1033  319D  25ED  3190   	fcall	_PWM_buzzer_Initialize
 16458     1036                     l6016:
 16459                           
 16460                           ;mcc_generated_files/system/src/system.c: 49:     pwm_fan_Initialize();
 16461     1036  319D  25F9  3190   	fcall	_pwm_fan_Initialize
 16462     1039                     l6018:
 16463                           
 16464                           ;mcc_generated_files/system/src/system.c: 50:     SPI1_Initialize();
 16465     1039  3188  2001  3190   	fcall	_SPI1_Initialize
 16466                           
 16467                           ;mcc_generated_files/system/src/system.c: 51:     INTERRUPT_Initialize();
 16468     103C  319D  25E1  3190   	fcall	_INTERRUPT_Initialize
 16469     103F                     l379:
 16470     103F  0008               	return
 16471     1040                     __end_of_SYSTEM_Initialize:
 16472                           
 16473                           	psect	text54
 16474     1DF9                     __ptext54:	
 16475 ;; *************** function _pwm_fan_Initialize *****************
 16476 ;; Defined at:
 16477 ;;		line 45 in file "mcc_generated_files/pwm/src/pwm5.c"
 16478 ;; Parameters:    Size  Location     Type
 16479 ;;		None
 16480 ;; Auto vars:     Size  Location     Type
 16481 ;;		None
 16482 ;; Return value:  Size  Location     Type
 16483 ;;                  1    wreg      void 
 16484 ;; Registers used:
 16485 ;;		wreg, status,2, status,0
 16486 ;; Tracked objects:
 16487 ;;		On entry : 0/0
 16488 ;;		On exit  : 0/0
 16489 ;;		Unchanged: 0/0
 16490 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 16491 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16492 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16493 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16494 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16495 ;;Total ram usage:        0 bytes
 16496 ;; Hardware stack levels used: 1
 16497 ;; Hardware stack levels required when called: 5
 16498 ;; This function calls:
 16499 ;;		Nothing
 16500 ;; This function is called by:
 16501 ;;		_SYSTEM_Initialize
 16502 ;; This function uses a non-reentrant model
 16503 ;;
 16504                           
 16505     1DF9                     _pwm_fan_Initialize:	
 16506                           ;psect for function _pwm_fan_Initialize
 16507                           
 16508     1DF9                     l5662:	
 16509                           ;incstack = 0
 16510                           ; Regs used in _pwm_fan_Initialize: [wreg+status,2+status,0]
 16511                           
 16512                           
 16513                           ;mcc_generated_files/pwm/src/pwm5.c: 50:     PWM5CON = 0x80;
 16514     1DF9  3080               	movlw	128
 16515     1DFA  002C               	movlb	12	; select bank12
 16516     1DFB  0099               	movwf	25	;volatile
 16517                           
 16518                           ;mcc_generated_files/pwm/src/pwm5.c: 54:     PWM5DCH = 0x7C;
 16519     1DFC  307C               	movlw	124
 16520     1DFD  0098               	movwf	24	;volatile
 16521                           
 16522                           ;mcc_generated_files/pwm/src/pwm5.c: 57:     PWM5DCL = 0xC0;
 16523     1DFE  30C0               	movlw	192
 16524     1DFF  0097               	movwf	23	;volatile
 16525     1E00                     l5664:
 16526                           
 16527                           ;mcc_generated_files/pwm/src/pwm5.c: 61:     PWMTMRSbits.P5TSEL = 0x1;
 16528     1E00  081F               	movf	31,w	;volatile
 16529     1E01  39FC               	andlw	-4
 16530     1E02  3801               	iorlw	1
 16531     1E03  009F               	movwf	31	;volatile
 16532     1E04                     l69:
 16533     1E04  0008               	return
 16534     1E05                     __end_of_pwm_fan_Initialize:
 16535                           
 16536                           	psect	text55
 16537     1E84                     __ptext55:	
 16538 ;; *************** function _TMR6_Initialize *****************
 16539 ;; Defined at:
 16540 ;;		line 45 in file "mcc_generated_files/timer/src/tmr6.c"
 16541 ;; Parameters:    Size  Location     Type
 16542 ;;		None
 16543 ;; Auto vars:     Size  Location     Type
 16544 ;;		None
 16545 ;; Return value:  Size  Location     Type
 16546 ;;                  1    wreg      void 
 16547 ;; Registers used:
 16548 ;;		wreg, status,2
 16549 ;; Tracked objects:
 16550 ;;		On entry : 0/0
 16551 ;;		On exit  : 0/0
 16552 ;;		Unchanged: 0/0
 16553 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 16554 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16555 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16556 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16557 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16558 ;;Total ram usage:        0 bytes
 16559 ;; Hardware stack levels used: 1
 16560 ;; Hardware stack levels required when called: 5
 16561 ;; This function calls:
 16562 ;;		Nothing
 16563 ;; This function is called by:
 16564 ;;		_SYSTEM_Initialize
 16565 ;; This function uses a non-reentrant model
 16566 ;;
 16567                           
 16568     1E84                     _TMR6_Initialize:	
 16569                           ;psect for function _TMR6_Initialize
 16570                           
 16571     1E84                     l5762:	
 16572                           ;incstack = 0
 16573                           ; Regs used in _TMR6_Initialize: [wreg+status,2]
 16574                           
 16575                           
 16576                           ;mcc_generated_files/timer/src/tmr6.c: 48:     PR6 = 0xE;
 16577     1E84  300E               	movlw	14
 16578     1E85  0028               	movlb	8	; select bank8
 16579     1E86  009D               	movwf	29	;volatile
 16580     1E87                     l5764:
 16581                           
 16582                           ;mcc_generated_files/timer/src/tmr6.c: 49:     TMR6 = 0x0;
 16583     1E87  019C               	clrf	28	;volatile
 16584     1E88                     l5766:
 16585                           
 16586                           ;mcc_generated_files/timer/src/tmr6.c: 50:     TMR6_PeriodMatchCallback = TMR6_DefaultPe
      +                          riodMatchCallback;
 16587     1E88  30FF               	movlw	low _TMR6_DefaultPeriodMatchCallback
 16588     1E89  0022               	movlb	2	; select bank2
 16589     1E8A  00D4               	movwf	_TMR6_PeriodMatchCallback^(0+256)
 16590     1E8B  3007               	movlw	high _TMR6_DefaultPeriodMatchCallback
 16591     1E8C  00D5               	movwf	(_TMR6_PeriodMatchCallback^(0+256)+1)
 16592     1E8D                     l5768:
 16593                           
 16594                           ;mcc_generated_files/timer/src/tmr6.c: 52:     PIR2bits.TMR6IF = 0;
 16595     1E8D  0020               	movlb	0	; select bank0
 16596     1E8E  1392               	bcf	18,7	;volatile
 16597     1E8F                     l5770:
 16598                           
 16599                           ;mcc_generated_files/timer/src/tmr6.c: 53:     T6CON = (1 << 0x0)
 16600     1E8F  301D               	movlw	29
 16601     1E90  0028               	movlb	8	; select bank8
 16602     1E91  009E               	movwf	30	;volatile
 16603     1E92                     l516:
 16604     1E92  0008               	return
 16605     1E93                     __end_of_TMR6_Initialize:
 16606                           
 16607                           	psect	text56
 16608     1EB4                     __ptext56:	
 16609 ;; *************** function _TMR4_Initialize *****************
 16610 ;; Defined at:
 16611 ;;		line 45 in file "mcc_generated_files/timer/src/tmr4.c"
 16612 ;; Parameters:    Size  Location     Type
 16613 ;;		None
 16614 ;; Auto vars:     Size  Location     Type
 16615 ;;		None
 16616 ;; Return value:  Size  Location     Type
 16617 ;;                  1    wreg      void 
 16618 ;; Registers used:
 16619 ;;		wreg, status,2
 16620 ;; Tracked objects:
 16621 ;;		On entry : 0/0
 16622 ;;		On exit  : 0/0
 16623 ;;		Unchanged: 0/0
 16624 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 16625 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16626 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16627 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16628 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16629 ;;Total ram usage:        0 bytes
 16630 ;; Hardware stack levels used: 1
 16631 ;; Hardware stack levels required when called: 5
 16632 ;; This function calls:
 16633 ;;		Nothing
 16634 ;; This function is called by:
 16635 ;;		_SYSTEM_Initialize
 16636 ;; This function uses a non-reentrant model
 16637 ;;
 16638                           
 16639     1EB4                     _TMR4_Initialize:	
 16640                           ;psect for function _TMR4_Initialize
 16641                           
 16642     1EB4                     l5750:	
 16643                           ;incstack = 0
 16644                           ; Regs used in _TMR4_Initialize: [wreg+status,2]
 16645                           
 16646                           
 16647                           ;mcc_generated_files/timer/src/tmr4.c: 48:     PR4 = 0xF9;
 16648     1EB4  30F9               	movlw	249
 16649     1EB5  0028               	movlb	8	; select bank8
 16650     1EB6  0096               	movwf	22	;volatile
 16651     1EB7                     l5752:
 16652                           
 16653                           ;mcc_generated_files/timer/src/tmr4.c: 49:     TMR4 = 0x0;
 16654     1EB7  0195               	clrf	21	;volatile
 16655     1EB8                     l5754:
 16656                           
 16657                           ;mcc_generated_files/timer/src/tmr4.c: 50:     TMR4_PeriodMatchCallback = TMR4_DefaultPe
      +                          riodMatchCallback;
 16658     1EB8  3000               	movlw	low _TMR4_DefaultPeriodMatchCallback
 16659     1EB9  0022               	movlb	2	; select bank2
 16660     1EBA  00D6               	movwf	_TMR4_PeriodMatchCallback^(0+256)
 16661     1EBB  3008               	movlw	high _TMR4_DefaultPeriodMatchCallback
 16662     1EBC  00D7               	movwf	(_TMR4_PeriodMatchCallback^(0+256)+1)
 16663     1EBD                     l5756:
 16664                           
 16665                           ;mcc_generated_files/timer/src/tmr4.c: 52:     PIR2bits.TMR4IF = 0;
 16666     1EBD  0020               	movlb	0	; select bank0
 16667     1EBE  1092               	bcf	18,1	;volatile
 16668     1EBF                     l5758:
 16669                           
 16670                           ;mcc_generated_files/timer/src/tmr4.c: 53:     PIE2bits.TMR4IE = 1;
 16671     1EBF  0021               	movlb	1	; select bank1
 16672     1EC0  1492               	bsf	18,1	;volatile
 16673     1EC1                     l5760:
 16674                           
 16675                           ;mcc_generated_files/timer/src/tmr4.c: 54:     T4CON = (3 << 0x0)
 16676     1EC1  3077               	movlw	119
 16677     1EC2  0028               	movlb	8	; select bank8
 16678     1EC3  0097               	movwf	23	;volatile
 16679     1EC4                     l457:
 16680     1EC4  0008               	return
 16681     1EC5                     __end_of_TMR4_Initialize:
 16682                           
 16683                           	psect	text57
 16684     1EA3                     __ptext57:	
 16685 ;; *************** function _TMR2_Initialize *****************
 16686 ;; Defined at:
 16687 ;;		line 45 in file "mcc_generated_files/timer/src/tmr2.c"
 16688 ;; Parameters:    Size  Location     Type
 16689 ;;		None
 16690 ;; Auto vars:     Size  Location     Type
 16691 ;;		None
 16692 ;; Return value:  Size  Location     Type
 16693 ;;                  1    wreg      void 
 16694 ;; Registers used:
 16695 ;;		wreg, status,2
 16696 ;; Tracked objects:
 16697 ;;		On entry : 0/0
 16698 ;;		On exit  : 0/0
 16699 ;;		Unchanged: 0/0
 16700 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 16701 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16702 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16703 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16704 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16705 ;;Total ram usage:        0 bytes
 16706 ;; Hardware stack levels used: 1
 16707 ;; Hardware stack levels required when called: 5
 16708 ;; This function calls:
 16709 ;;		Nothing
 16710 ;; This function is called by:
 16711 ;;		_SYSTEM_Initialize
 16712 ;; This function uses a non-reentrant model
 16713 ;;
 16714                           
 16715     1EA3                     _TMR2_Initialize:	
 16716                           ;psect for function _TMR2_Initialize
 16717                           
 16718     1EA3                     l5738:	
 16719                           ;incstack = 0
 16720                           ; Regs used in _TMR2_Initialize: [wreg+status,2]
 16721                           
 16722                           
 16723                           ;mcc_generated_files/timer/src/tmr2.c: 48:     PR2 = 0xF9;
 16724     1EA3  30F9               	movlw	249
 16725     1EA4  0020               	movlb	0	; select bank0
 16726     1EA5  009E               	movwf	30	;volatile
 16727     1EA6                     l5740:
 16728                           
 16729                           ;mcc_generated_files/timer/src/tmr2.c: 49:     TMR2 = 0x0;
 16730     1EA6  019D               	clrf	29	;volatile
 16731     1EA7                     l5742:
 16732                           
 16733                           ;mcc_generated_files/timer/src/tmr2.c: 50:     TMR2_PeriodMatchCallback = TMR2_DefaultPe
      +                          riodMatchCallback;
 16734     1EA7  3001               	movlw	low _TMR2_DefaultPeriodMatchCallback
 16735     1EA8  0022               	movlb	2	; select bank2
 16736     1EA9  00D8               	movwf	_TMR2_PeriodMatchCallback^(0+256)
 16737     1EAA  3010               	movlw	high _TMR2_DefaultPeriodMatchCallback
 16738     1EAB  00D9               	movwf	(_TMR2_PeriodMatchCallback^(0+256)+1)
 16739     1EAC                     l5744:
 16740                           
 16741                           ;mcc_generated_files/timer/src/tmr2.c: 52:     PIR1bits.TMR2IF = 0;
 16742     1EAC  0020               	movlb	0	; select bank0
 16743     1EAD  1091               	bcf	17,1	;volatile
 16744     1EAE                     l5746:
 16745                           
 16746                           ;mcc_generated_files/timer/src/tmr2.c: 53:     PIE1bits.TMR2IE = 1;
 16747     1EAE  0021               	movlb	1	; select bank1
 16748     1EAF  1491               	bsf	17,1	;volatile
 16749     1EB0                     l5748:
 16750                           
 16751                           ;mcc_generated_files/timer/src/tmr2.c: 54:     T2CON = (2 << 0x0)
 16752     1EB0  301E               	movlw	30
 16753     1EB1  0020               	movlb	0	; select bank0
 16754     1EB2  009F               	movwf	31	;volatile
 16755     1EB3                     l398:
 16756     1EB3  0008               	return
 16757     1EB4                     __end_of_TMR2_Initialize:
 16758                           
 16759                           	psect	text58
 16760     0801                     __ptext58:	
 16761 ;; *************** function _SPI1_Initialize *****************
 16762 ;; Defined at:
 16763 ;;		line 60 in file "mcc_generated_files/spi/src/mssp1.c"
 16764 ;; Parameters:    Size  Location     Type
 16765 ;;		None
 16766 ;; Auto vars:     Size  Location     Type
 16767 ;;		None
 16768 ;; Return value:  Size  Location     Type
 16769 ;;                  1    wreg      void 
 16770 ;; Registers used:
 16771 ;;		status,2
 16772 ;; Tracked objects:
 16773 ;;		On entry : 0/0
 16774 ;;		On exit  : 0/0
 16775 ;;		Unchanged: 0/0
 16776 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 16777 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16778 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16779 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16780 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16781 ;;Total ram usage:        0 bytes
 16782 ;; Hardware stack levels used: 1
 16783 ;; Hardware stack levels required when called: 5
 16784 ;; This function calls:
 16785 ;;		Nothing
 16786 ;; This function is called by:
 16787 ;;		_SYSTEM_Initialize
 16788 ;; This function uses a non-reentrant model
 16789 ;;
 16790                           
 16791     0801                     _SPI1_Initialize:	
 16792                           ;psect for function _SPI1_Initialize
 16793                           
 16794     0801                     l5672:	
 16795                           ;incstack = 0
 16796                           ; Regs used in _SPI1_Initialize: [status,2]
 16797                           
 16798                           
 16799                           ;mcc_generated_files/spi/src/mssp1.c: 63:     PIE1bits.SSP1IE = 0;
 16800     0801  0021               	movlb	1	; select bank1
 16801     0802  1191               	bcf	17,3	;volatile
 16802                           
 16803                           ;mcc_generated_files/spi/src/mssp1.c: 64:     PIR1bits.SSP1IF = 0;
 16804     0803  0020               	movlb	0	; select bank0
 16805     0804  1191               	bcf	17,3	;volatile
 16806     0805                     l5674:
 16807                           
 16808                           ;mcc_generated_files/spi/src/mssp1.c: 66:     SSP1STAT = 0x00;
 16809     0805  0024               	movlb	4	; select bank4
 16810     0806  0194               	clrf	20	;volatile
 16811                           
 16812                           ;mcc_generated_files/spi/src/mssp1.c: 67:     SSP1CON1 = 0x00;
 16813     0807  0195               	clrf	21	;volatile
 16814                           
 16815                           ;mcc_generated_files/spi/src/mssp1.c: 68:     SSP1CON3 = 0x00;
 16816     0808  0197               	clrf	23	;volatile
 16817                           
 16818                           ;mcc_generated_files/spi/src/mssp1.c: 69:     SSP1ADD = 0x00;
 16819     0809  0192               	clrf	18	;volatile
 16820     080A                     l133:
 16821     080A  0008               	return
 16822     080B                     __end_of_SPI1_Initialize:
 16823                           
 16824                           	psect	text59
 16825     1DED                     __ptext59:	
 16826 ;; *************** function _PWM_buzzer_Initialize *****************
 16827 ;; Defined at:
 16828 ;;		line 45 in file "mcc_generated_files/pwm/src/pwm6.c"
 16829 ;; Parameters:    Size  Location     Type
 16830 ;;		None
 16831 ;; Auto vars:     Size  Location     Type
 16832 ;;		None
 16833 ;; Return value:  Size  Location     Type
 16834 ;;                  1    wreg      void 
 16835 ;; Registers used:
 16836 ;;		wreg, status,2, status,0
 16837 ;; Tracked objects:
 16838 ;;		On entry : 0/0
 16839 ;;		On exit  : 0/0
 16840 ;;		Unchanged: 0/0
 16841 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 16842 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16843 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16844 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16845 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16846 ;;Total ram usage:        0 bytes
 16847 ;; Hardware stack levels used: 1
 16848 ;; Hardware stack levels required when called: 5
 16849 ;; This function calls:
 16850 ;;		Nothing
 16851 ;; This function is called by:
 16852 ;;		_SYSTEM_Initialize
 16853 ;; This function uses a non-reentrant model
 16854 ;;
 16855                           
 16856     1DED                     _PWM_buzzer_Initialize:	
 16857                           ;psect for function _PWM_buzzer_Initialize
 16858                           
 16859     1DED                     l5666:	
 16860                           ;incstack = 0
 16861                           ; Regs used in _PWM_buzzer_Initialize: [wreg+status,2+status,0]
 16862                           
 16863                           
 16864                           ;mcc_generated_files/pwm/src/pwm6.c: 50:     PWM6CON = 0x80;
 16865     1DED  3080               	movlw	128
 16866     1DEE  002C               	movlb	12	; select bank12
 16867     1DEF  009C               	movwf	28	;volatile
 16868                           
 16869                           ;mcc_generated_files/pwm/src/pwm6.c: 53:     PWM6DCH = 0x7C;
 16870     1DF0  307C               	movlw	124
 16871     1DF1  009B               	movwf	27	;volatile
 16872                           
 16873                           ;mcc_generated_files/pwm/src/pwm6.c: 56:     PWM6DCL = 0xC0;
 16874     1DF2  30C0               	movlw	192
 16875     1DF3  009A               	movwf	26	;volatile
 16876     1DF4                     l5668:
 16877                           
 16878                           ;mcc_generated_files/pwm/src/pwm6.c: 60:     PWMTMRSbits.P6TSEL = 0x1;
 16879     1DF4  081F               	movf	31,w	;volatile
 16880     1DF5  39F3               	andlw	-13
 16881     1DF6  3804               	iorlw	4
 16882     1DF7  009F               	movwf	31	;volatile
 16883     1DF8                     l83:
 16884     1DF8  0008               	return
 16885     1DF9                     __end_of_PWM_buzzer_Initialize:
 16886                           
 16887                           	psect	text60
 16888     1209                     __ptext60:	
 16889 ;; *************** function _PIN_MANAGER_Initialize *****************
 16890 ;; Defined at:
 16891 ;;		line 38 in file "mcc_generated_files/system/src/pins.c"
 16892 ;; Parameters:    Size  Location     Type
 16893 ;;		None
 16894 ;; Auto vars:     Size  Location     Type
 16895 ;;		None
 16896 ;; Return value:  Size  Location     Type
 16897 ;;                  1    wreg      void 
 16898 ;; Registers used:
 16899 ;;		status,2
 16900 ;; Tracked objects:
 16901 ;;		On entry : 0/0
 16902 ;;		On exit  : 0/0
 16903 ;;		Unchanged: 0/0
 16904 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 16905 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16906 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16907 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16908 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16909 ;;Total ram usage:        0 bytes
 16910 ;; Hardware stack levels used: 1
 16911 ;; Hardware stack levels required when called: 5
 16912 ;; This function calls:
 16913 ;;		Nothing
 16914 ;; This function is called by:
 16915 ;;		_SYSTEM_Initialize
 16916 ;; This function uses a non-reentrant model
 16917 ;;
 16918                           
 16919     1209                     _PIN_MANAGER_Initialize:	
 16920                           ;psect for function _PIN_MANAGER_Initialize
 16921                           
 16922     1209                     l5698:	
 16923                           ;incstack = 0
 16924                           ; Regs used in _PIN_MANAGER_Initialize: [status,2]
 16925                           
 16926                           
 16927                           ;mcc_generated_files/system/src/pins.c: 43:     LATA = 0x0;
 16928     1209  0022               	movlb	2	; select bank2
 16929     120A  018C               	clrf	12	;volatile
 16930                           
 16931                           ;mcc_generated_files/system/src/pins.c: 44:     LATB = 0x0;
 16932     120B  018D               	clrf	13	;volatile
 16933                           
 16934                           ;mcc_generated_files/system/src/pins.c: 45:     LATC = 0x0;
 16935     120C  018E               	clrf	14	;volatile
 16936     120D                     l5700:
 16937                           
 16938                           ;mcc_generated_files/system/src/pins.c: 50:     TRISA = 0x19;
 16939     120D  3019               	movlw	25
 16940     120E  0021               	movlb	1	; select bank1
 16941     120F  008C               	movwf	12	;volatile
 16942     1210                     l5702:
 16943                           
 16944                           ;mcc_generated_files/system/src/pins.c: 51:     TRISB = 0x20;
 16945     1210  3020               	movlw	32
 16946     1211  008D               	movwf	13	;volatile
 16947     1212                     l5704:
 16948                           
 16949                           ;mcc_generated_files/system/src/pins.c: 52:     TRISC = 0x1F;
 16950     1212  301F               	movlw	31
 16951     1213  008E               	movwf	14	;volatile
 16952     1214                     l5706:
 16953                           
 16954                           ;mcc_generated_files/system/src/pins.c: 57:     ANSELA = 0x10;
 16955     1214  3010               	movlw	16
 16956     1215  0023               	movlb	3	; select bank3
 16957     1216  008C               	movwf	12	;volatile
 16958     1217                     l5708:
 16959                           
 16960                           ;mcc_generated_files/system/src/pins.c: 58:     ANSELB = 0x80;
 16961     1217  3080               	movlw	128
 16962     1218  008D               	movwf	13	;volatile
 16963     1219                     l5710:
 16964                           
 16965                           ;mcc_generated_files/system/src/pins.c: 59:     ANSELC = 0xBF;
 16966     1219  30BF               	movlw	191
 16967     121A  008E               	movwf	14	;volatile
 16968                           
 16969                           ;mcc_generated_files/system/src/pins.c: 64:     WPUA = 0x0;
 16970     121B  0024               	movlb	4	; select bank4
 16971     121C  018C               	clrf	12	;volatile
 16972                           
 16973                           ;mcc_generated_files/system/src/pins.c: 65:     WPUB = 0x0;
 16974     121D  018D               	clrf	13	;volatile
 16975                           
 16976                           ;mcc_generated_files/system/src/pins.c: 66:     WPUC = 0x0;
 16977     121E  018E               	clrf	14	;volatile
 16978                           
 16979                           ;mcc_generated_files/system/src/pins.c: 72:     ODCONA = 0x0;
 16980     121F  0025               	movlb	5	; select bank5
 16981     1220  018C               	clrf	12	;volatile
 16982                           
 16983                           ;mcc_generated_files/system/src/pins.c: 73:     ODCONB = 0x0;
 16984     1221  018D               	clrf	13	;volatile
 16985                           
 16986                           ;mcc_generated_files/system/src/pins.c: 74:     ODCONC = 0x0;
 16987     1222  018E               	clrf	14	;volatile
 16988     1223                     l5712:
 16989                           
 16990                           ;mcc_generated_files/system/src/pins.c: 78:     SLRCONA = 0x37;
 16991     1223  3037               	movlw	55
 16992     1224  0026               	movlb	6	; select bank6
 16993     1225  008C               	movwf	12	;volatile
 16994     1226                     l5714:
 16995                           
 16996                           ;mcc_generated_files/system/src/pins.c: 79:     SLRCONB = 0xF0;
 16997     1226  30F0               	movlw	240
 16998     1227  008D               	movwf	13	;volatile
 16999     1228                     l5716:
 17000                           
 17001                           ;mcc_generated_files/system/src/pins.c: 80:     SLRCONC = 0xFF;
 17002     1228  30FF               	movlw	255
 17003     1229  008E               	movwf	14	;volatile
 17004     122A                     l5718:
 17005                           
 17006                           ;mcc_generated_files/system/src/pins.c: 84:     INLVLA = 0x3F;
 17007     122A  303F               	movlw	63
 17008     122B  0027               	movlb	7	; select bank7
 17009     122C  008C               	movwf	12	;volatile
 17010     122D                     l5720:
 17011                           
 17012                           ;mcc_generated_files/system/src/pins.c: 85:     INLVLB = 0xF0;
 17013     122D  30F0               	movlw	240
 17014     122E  008D               	movwf	13	;volatile
 17015     122F                     l5722:
 17016                           
 17017                           ;mcc_generated_files/system/src/pins.c: 86:     INLVLC = 0xFF;
 17018     122F  30FF               	movlw	255
 17019     1230  008E               	movwf	14	;volatile
 17020                           
 17021                           ;mcc_generated_files/system/src/pins.c: 91:     SSP1DATPPS = 0x0;
 17022     1231  003C               	movlb	28	; select bank28
 17023     1232  01A1               	clrf	33	;volatile
 17024     1233                     l5724:
 17025                           
 17026                           ;mcc_generated_files/system/src/pins.c: 92:     RXPPS = 0xD;
 17027     1233  300D               	movlw	13
 17028     1234  00A4               	movwf	36	;volatile
 17029     1235                     l5726:
 17030                           
 17031                           ;mcc_generated_files/system/src/pins.c: 93:     RB4PPS = 25;
 17032     1235  3019               	movlw	25
 17033     1236  003D               	movlb	29	; select bank29
 17034     1237  009C               	movwf	28	;volatile
 17035     1238                     l5728:
 17036                           
 17037                           ;mcc_generated_files/system/src/pins.c: 94:     RC5PPS = 2;
 17038     1238  3002               	movlw	2
 17039     1239  00A5               	movwf	37	;volatile
 17040     123A                     l5730:
 17041                           
 17042                           ;mcc_generated_files/system/src/pins.c: 95:     RC7PPS = 3;
 17043     123A  3003               	movlw	3
 17044     123B  00A7               	movwf	39	;volatile
 17045     123C                     l5732:
 17046                           
 17047                           ;mcc_generated_files/system/src/pins.c: 96:     RB7PPS = 20;
 17048     123C  3014               	movlw	20
 17049     123D  009F               	movwf	31	;volatile
 17050     123E                     l5734:
 17051                           
 17052                           ;mcc_generated_files/system/src/pins.c: 97:     SSP1CLKPPS = 0xE;
 17053     123E  300E               	movlw	14
 17054     123F  003C               	movlb	28	; select bank28
 17055     1240  00A0               	movwf	32	;volatile
 17056     1241                     l5736:
 17057                           
 17058                           ;mcc_generated_files/system/src/pins.c: 98:     RB6PPS = 24;
 17059     1241  3018               	movlw	24
 17060     1242  003D               	movlb	29	; select bank29
 17061     1243  009E               	movwf	30	;volatile
 17062                           
 17063                           ;mcc_generated_files/system/src/pins.c: 107:     IOCAP = 0x0;
 17064     1244  0027               	movlb	7	; select bank7
 17065     1245  0191               	clrf	17	;volatile
 17066                           
 17067                           ;mcc_generated_files/system/src/pins.c: 108:     IOCAN = 0x0;
 17068     1246  0192               	clrf	18	;volatile
 17069                           
 17070                           ;mcc_generated_files/system/src/pins.c: 109:     IOCAF = 0x0;
 17071     1247  0193               	clrf	19	;volatile
 17072                           
 17073                           ;mcc_generated_files/system/src/pins.c: 110:     IOCBP = 0x0;
 17074     1248  0194               	clrf	20	;volatile
 17075                           
 17076                           ;mcc_generated_files/system/src/pins.c: 111:     IOCBN = 0x0;
 17077     1249  0195               	clrf	21	;volatile
 17078                           
 17079                           ;mcc_generated_files/system/src/pins.c: 112:     IOCBF = 0x0;
 17080     124A  0196               	clrf	22	;volatile
 17081                           
 17082                           ;mcc_generated_files/system/src/pins.c: 113:     IOCCP = 0x0;
 17083     124B  0197               	clrf	23	;volatile
 17084                           
 17085                           ;mcc_generated_files/system/src/pins.c: 114:     IOCCN = 0x0;
 17086     124C  0198               	clrf	24	;volatile
 17087                           
 17088                           ;mcc_generated_files/system/src/pins.c: 115:     IOCCF = 0x0;
 17089     124D  0199               	clrf	25	;volatile
 17090     124E                     l351:
 17091     124E  0008               	return
 17092     124F                     __end_of_PIN_MANAGER_Initialize:
 17093                           
 17094                           	psect	text61
 17095     1DE1                     __ptext61:	
 17096 ;; *************** function _INTERRUPT_Initialize *****************
 17097 ;; Defined at:
 17098 ;;		line 40 in file "mcc_generated_files/system/src/interrupt.c"
 17099 ;; Parameters:    Size  Location     Type
 17100 ;;		None
 17101 ;; Auto vars:     Size  Location     Type
 17102 ;;		None
 17103 ;; Return value:  Size  Location     Type
 17104 ;;                  1    wreg      void 
 17105 ;; Registers used:
 17106 ;;		wreg, status,2, status,0, pclath, cstack
 17107 ;; Tracked objects:
 17108 ;;		On entry : 0/0
 17109 ;;		On exit  : 0/0
 17110 ;;		Unchanged: 0/0
 17111 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 17112 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17113 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17114 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17115 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17116 ;;Total ram usage:        0 bytes
 17117 ;; Hardware stack levels used: 1
 17118 ;; Hardware stack levels required when called: 6
 17119 ;; This function calls:
 17120 ;;		_INT_SetInterruptHandler
 17121 ;; This function is called by:
 17122 ;;		_SYSTEM_Initialize
 17123 ;; This function uses a non-reentrant model
 17124 ;;
 17125                           
 17126     1DE1                     _INTERRUPT_Initialize:	
 17127                           ;psect for function _INTERRUPT_Initialize
 17128                           
 17129     1DE1                     l5690:	
 17130                           ;incstack = 0
 17131                           ; Regs used in _INTERRUPT_Initialize: [wreg+status,2+status,0+pclath+cstack]
 17132                           
 17133                           
 17134                           ;mcc_generated_files/system/src/interrupt.c: 44:     (PIR0bits.INTF = 0);
 17135     1DE1  0020               	movlb	0	; select bank0
 17136     1DE2  1010               	bcf	16,0	;volatile
 17137                           
 17138                           ;mcc_generated_files/system/src/interrupt.c: 45:     (INTCONbits.INTEDG = 1);
 17139     1DE3  140B               	bsf	11,0	;volatile
 17140     1DE4                     l5692:
 17141                           
 17142                           ;mcc_generated_files/system/src/interrupt.c: 47:     INT_SetInterruptHandler(INT_Default
      +                          InterruptHandler);
 17143     1DE4  3000               	movlw	0
 17144     1DE5  0021               	movlb	1	; select bank1
 17145     1DE6  00A0               	movwf	INT_SetInterruptHandler@InterruptHandler^(0+128)
 17146     1DE7  3000               	movlw	0
 17147     1DE8  00A1               	movwf	(INT_SetInterruptHandler@InterruptHandler^(0+128)+1)
 17148     1DE9  319D  2596  319D   	fcall	_INT_SetInterruptHandler
 17149     1DEC                     l227:
 17150     1DEC  0008               	return
 17151     1DED                     __end_of_INTERRUPT_Initialize:
 17152                           
 17153                           	psect	text62
 17154     1D96                     __ptext62:	
 17155 ;; *************** function _INT_SetInterruptHandler *****************
 17156 ;; Defined at:
 17157 ;;		line 113 in file "mcc_generated_files/system/src/interrupt.c"
 17158 ;; Parameters:    Size  Location     Type
 17159 ;;  InterruptHan    2    0[BANK1 ] PTR FTN()void 
 17160 ;;		 -> INT_DefaultInterruptHandler(1), 
 17161 ;; Auto vars:     Size  Location     Type
 17162 ;;		None
 17163 ;; Return value:  Size  Location     Type
 17164 ;;                  1    wreg      void 
 17165 ;; Registers used:
 17166 ;;		wreg
 17167 ;; Tracked objects:
 17168 ;;		On entry : 0/0
 17169 ;;		On exit  : 0/0
 17170 ;;		Unchanged: 0/0
 17171 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 17172 ;;      Params:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0
 17173 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17174 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17175 ;;      Totals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0
 17176 ;;Total ram usage:        2 bytes
 17177 ;; Hardware stack levels used: 1
 17178 ;; Hardware stack levels required when called: 5
 17179 ;; This function calls:
 17180 ;;		Nothing
 17181 ;; This function is called by:
 17182 ;;		_INTERRUPT_Initialize
 17183 ;; This function uses a non-reentrant model
 17184 ;;
 17185                           
 17186     1D96                     _INT_SetInterruptHandler:	
 17187                           ;psect for function _INT_SetInterruptHandler
 17188                           
 17189     1D96                     l4646:	
 17190                           ;incstack = 0
 17191                           ; Regs used in _INT_SetInterruptHandler: [wreg]
 17192                           
 17193                           
 17194                           ;mcc_generated_files/system/src/interrupt.c: 114:     INT_InterruptHandler = InterruptHa
      +                          ndler;
 17195     1D96  0021               	movlb	1	; select bank1
 17196     1D97  0821               	movf	(INT_SetInterruptHandler@InterruptHandler+1)^(0+128),w
 17197     1D98  0020               	movlb	0	; select bank0
 17198     1D99  00E2               	movwf	_INT_InterruptHandler+1
 17199     1D9A  0021               	movlb	1	; select bank1
 17200     1D9B  0820               	movf	INT_SetInterruptHandler@InterruptHandler^(0+128),w
 17201     1D9C  0020               	movlb	0	; select bank0
 17202     1D9D  00E1               	movwf	_INT_InterruptHandler
 17203     1D9E                     l254:
 17204     1D9E  0008               	return
 17205     1D9F                     __end_of_INT_SetInterruptHandler:
 17206                           
 17207                           	psect	text63
 17208     115B                     __ptext63:	
 17209 ;; *************** function _EUSART_Initialize *****************
 17210 ;; Defined at:
 17211 ;;		line 131 in file "mcc_generated_files/uart/src/eusart.c"
 17212 ;; Parameters:    Size  Location     Type
 17213 ;;		None
 17214 ;; Auto vars:     Size  Location     Type
 17215 ;;		None
 17216 ;; Return value:  Size  Location     Type
 17217 ;;                  1    wreg      void 
 17218 ;; Registers used:
 17219 ;;		wreg, status,2, status,0, pclath, cstack
 17220 ;; Tracked objects:
 17221 ;;		On entry : 0/0
 17222 ;;		On exit  : 0/0
 17223 ;;		Unchanged: 0/0
 17224 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 17225 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17226 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17227 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17228 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17229 ;;Total ram usage:        0 bytes
 17230 ;; Hardware stack levels used: 1
 17231 ;; Hardware stack levels required when called: 6
 17232 ;; This function calls:
 17233 ;;		_EUSART_FramingErrorCallbackRegister
 17234 ;;		_EUSART_OverrunErrorCallbackRegister
 17235 ;; This function is called by:
 17236 ;;		_SYSTEM_Initialize
 17237 ;; This function uses a non-reentrant model
 17238 ;;
 17239                           
 17240     115B                     _EUSART_Initialize:	
 17241                           ;psect for function _EUSART_Initialize
 17242                           
 17243     115B                     l5772:	
 17244                           ;incstack = 0
 17245                           ; Regs used in _EUSART_Initialize: [wreg+status,2+status,0+pclath+cstack]
 17246                           
 17247                           
 17248                           ;mcc_generated_files/uart/src/eusart.c: 133:     PIE1bits.RCIE = 0;
 17249     115B  0021               	movlb	1	; select bank1
 17250     115C  1291               	bcf	17,5	;volatile
 17251     115D                     l5774:
 17252                           
 17253                           ;mcc_generated_files/uart/src/eusart.c: 134:      EUSART_RxInterruptHandler = EUSART_Rec
      +                          eiveISR;
 17254     115D  304F               	movlw	low _EUSART_ReceiveISR
 17255     115E  0022               	movlb	2	; select bank2
 17256     115F  00DA               	movwf	_EUSART_RxInterruptHandler^(0+256)
 17257     1160  3012               	movlw	high _EUSART_ReceiveISR
 17258     1161  00DB               	movwf	(_EUSART_RxInterruptHandler^(0+256)+1)
 17259     1162                     l5776:
 17260                           
 17261                           ;mcc_generated_files/uart/src/eusart.c: 136:     PIE1bits.TXIE = 0;
 17262     1162  0021               	movlb	1	; select bank1
 17263     1163  1211               	bcf	17,4	;volatile
 17264                           
 17265                           ;mcc_generated_files/uart/src/eusart.c: 137:     EUSART_TxInterruptHandler = EUSART_Tran
      +                          smitISR;
 17266     1164  3002               	movlw	low _EUSART_TransmitISR
 17267     1165  0022               	movlb	2	; select bank2
 17268     1166  00DC               	movwf	_EUSART_TxInterruptHandler^(0+256)
 17269     1167  3010               	movlw	high _EUSART_TransmitISR
 17270     1168  00DD               	movwf	(_EUSART_TxInterruptHandler^(0+256)+1)
 17271     1169                     l5778:
 17272                           
 17273                           ;mcc_generated_files/uart/src/eusart.c: 142:     BAUD1CON = 0x48;
 17274     1169  3048               	movlw	72
 17275     116A  0023               	movlb	3	; select bank3
 17276     116B  009F               	movwf	31	;volatile
 17277     116C                     l5780:
 17278                           
 17279                           ;mcc_generated_files/uart/src/eusart.c: 144:     RC1STA = 0x90;
 17280     116C  3090               	movlw	144
 17281     116D  009D               	movwf	29	;volatile
 17282     116E                     l5782:
 17283                           
 17284                           ;mcc_generated_files/uart/src/eusart.c: 146:     TX1STA = 0x26;
 17285     116E  3026               	movlw	38
 17286     116F  009E               	movwf	30	;volatile
 17287     1170                     l5784:
 17288                           
 17289                           ;mcc_generated_files/uart/src/eusart.c: 148:     SP1BRGL = 0x40;
 17290     1170  3040               	movlw	64
 17291     1171  009B               	movwf	27	;volatile
 17292     1172                     l5786:
 17293                           
 17294                           ;mcc_generated_files/uart/src/eusart.c: 150:     SP1BRGH = 0x3;
 17295     1172  3003               	movlw	3
 17296     1173  009C               	movwf	28	;volatile
 17297     1174                     l5788:
 17298                           
 17299                           ;mcc_generated_files/uart/src/eusart.c: 152:     EUSART_FramingErrorCallbackRegister(EUS
      +                          ART_DefaultFramingErrorCallback);
 17300     1174  3000               	movlw	low _EUSART_DefaultFramingErrorCallback
 17301     1175  0021               	movlb	1	; select bank1
 17302     1176  00A0               	movwf	EUSART_FramingErrorCallbackRegister@callbackHandler^(0+128)
 17303     1177  3010               	movlw	high _EUSART_DefaultFramingErrorCallback
 17304     1178  00A1               	movwf	(EUSART_FramingErrorCallbackRegister@callbackHandler^(0+128)+1)
 17305     1179  319E  2666  3191   	fcall	_EUSART_FramingErrorCallbackRegister
 17306     117C                     l5790:
 17307                           
 17308                           ;mcc_generated_files/uart/src/eusart.c: 153:     EUSART_OverrunErrorCallbackRegister(EUS
      +                          ART_DefaultOverrunErrorCallback);
 17309     117C  3056               	movlw	low _EUSART_DefaultOverrunErrorCallback
 17310     117D  0021               	movlb	1	; select bank1
 17311     117E  00A0               	movwf	EUSART_OverrunErrorCallbackRegister@callbackHandler^(0+128)
 17312     117F  301D               	movlw	high _EUSART_DefaultOverrunErrorCallback
 17313     1180  00A1               	movwf	(EUSART_OverrunErrorCallbackRegister@callbackHandler^(0+128)+1)
 17314     1181  319E  2675  3191   	fcall	_EUSART_OverrunErrorCallbackRegister
 17315     1184                     l5792:
 17316                           
 17317                           ;mcc_generated_files/uart/src/eusart.c: 154:     eusartRxLastError.status = 0;
 17318     1184  0022               	movlb	2	; select bank2
 17319     1185  01D2               	clrf	_eusartRxLastError^(0+256)	;volatile
 17320     1186  01D3               	clrf	(_eusartRxLastError+1)^(0+256)	;volatile
 17321     1187                     l5794:
 17322                           
 17323                           ;mcc_generated_files/uart/src/eusart.c: 156:     eusartTxHead = 0;
 17324     1187  0020               	movlb	0	; select bank0
 17325     1188  01EC               	clrf	_eusartTxHead	;volatile
 17326     1189                     l5796:
 17327                           
 17328                           ;mcc_generated_files/uart/src/eusart.c: 157:     eusartTxTail = 0;
 17329     1189  01EB               	clrf	_eusartTxTail	;volatile
 17330     118A                     l5798:
 17331                           
 17332                           ;mcc_generated_files/uart/src/eusart.c: 158:     eusartTxBufferRemaining = sizeof(eusart
      +                          TxBuffer);
 17333     118A  3008               	movlw	8
 17334     118B  00EA               	movwf	_eusartTxBufferRemaining	;volatile
 17335     118C                     l5800:
 17336                           
 17337                           ;mcc_generated_files/uart/src/eusart.c: 160:     eusartRxHead = 0;
 17338     118C  01E9               	clrf	_eusartRxHead	;volatile
 17339     118D                     l5802:
 17340                           
 17341                           ;mcc_generated_files/uart/src/eusart.c: 161:     eusartRxTail = 0;
 17342     118D  01E8               	clrf	_eusartRxTail	;volatile
 17343     118E                     l5804:
 17344                           
 17345                           ;mcc_generated_files/uart/src/eusart.c: 162:     eusartRxCount = 0;
 17346     118E  01E7               	clrf	_eusartRxCount	;volatile
 17347     118F                     l5806:
 17348                           
 17349                           ;mcc_generated_files/uart/src/eusart.c: 164:     PIE1bits.RCIE = 1;
 17350     118F  0021               	movlb	1	; select bank1
 17351     1190  1691               	bsf	17,5	;volatile
 17352     1191                     l656:
 17353     1191  0008               	return
 17354     1192                     __end_of_EUSART_Initialize:
 17355                           
 17356                           	psect	text64
 17357     1E75                     __ptext64:	
 17358 ;; *************** function _EUSART_OverrunErrorCallbackRegister *****************
 17359 ;; Defined at:
 17360 ;;		line 438 in file "mcc_generated_files/uart/src/eusart.c"
 17361 ;; Parameters:    Size  Location     Type
 17362 ;;  callbackHand    2    0[BANK1 ] PTR FTN()void 
 17363 ;;		 -> EUSART_DefaultOverrunErrorCallback(1), 
 17364 ;; Auto vars:     Size  Location     Type
 17365 ;;		None
 17366 ;; Return value:  Size  Location     Type
 17367 ;;                  1    wreg      void 
 17368 ;; Registers used:
 17369 ;;		wreg, status,2, status,0
 17370 ;; Tracked objects:
 17371 ;;		On entry : 0/0
 17372 ;;		On exit  : 0/0
 17373 ;;		Unchanged: 0/0
 17374 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 17375 ;;      Params:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0
 17376 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17377 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17378 ;;      Totals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0
 17379 ;;Total ram usage:        2 bytes
 17380 ;; Hardware stack levels used: 1
 17381 ;; Hardware stack levels required when called: 5
 17382 ;; This function calls:
 17383 ;;		Nothing
 17384 ;; This function is called by:
 17385 ;;		_EUSART_Initialize
 17386 ;; This function uses a non-reentrant model
 17387 ;;
 17388                           
 17389     1E75                     _EUSART_OverrunErrorCallbackRegister:	
 17390                           ;psect for function _EUSART_OverrunErrorCallbackRegister
 17391                           
 17392     1E75                     l4652:	
 17393                           ;incstack = 0
 17394                           ; Regs used in _EUSART_OverrunErrorCallbackRegister: [wreg+status,2+status,0]
 17395                           
 17396                           
 17397                           ;mcc_generated_files/uart/src/eusart.c: 438: void EUSART_OverrunErrorCallbackRegister(vo
      +                          id (* callbackHandler)(void));mcc_generated_files/uart/src/eusart.c: 439: {;mcc_generate
      +                          d_files/uart/src/eusart.c: 440:     if(((void*)0) != callbackHandler)
 17398     1E75  0021               	movlb	1	; select bank1
 17399     1E76  0820               	movf	EUSART_OverrunErrorCallbackRegister@callbackHandler^(0+128),w
 17400     1E77  0421               	iorwf	(EUSART_OverrunErrorCallbackRegister@callbackHandler+1)^(0+128),w
 17401     1E78  1903               	btfsc	3,2
 17402     1E79  2E7B               	goto	u4691
 17403     1E7A  2E7C               	goto	u4690
 17404     1E7B                     u4691:
 17405     1E7B  2E83               	goto	l774
 17406     1E7C                     u4690:
 17407     1E7C                     l4654:
 17408                           
 17409                           ;mcc_generated_files/uart/src/eusart.c: 441:     {;mcc_generated_files/uart/src/eusart.c
      +                          : 442:         EUSART_OverrunErrorHandler = callbackHandler;
 17410     1E7C  0821               	movf	(EUSART_OverrunErrorCallbackRegister@callbackHandler+1)^(0+128),w
 17411     1E7D  0020               	movlb	0	; select bank0
 17412     1E7E  00DE               	movwf	_EUSART_OverrunErrorHandler+1
 17413     1E7F  0021               	movlb	1	; select bank1
 17414     1E80  0820               	movf	EUSART_OverrunErrorCallbackRegister@callbackHandler^(0+128),w
 17415     1E81  0020               	movlb	0	; select bank0
 17416     1E82  00DD               	movwf	_EUSART_OverrunErrorHandler
 17417     1E83                     l774:
 17418     1E83  0008               	return
 17419     1E84                     __end_of_EUSART_OverrunErrorCallbackRegister:
 17420                           
 17421                           	psect	text65
 17422     1E66                     __ptext65:	
 17423 ;; *************** function _EUSART_FramingErrorCallbackRegister *****************
 17424 ;; Defined at:
 17425 ;;		line 430 in file "mcc_generated_files/uart/src/eusart.c"
 17426 ;; Parameters:    Size  Location     Type
 17427 ;;  callbackHand    2    0[BANK1 ] PTR FTN()void 
 17428 ;;		 -> EUSART_DefaultFramingErrorCallback(1), 
 17429 ;; Auto vars:     Size  Location     Type
 17430 ;;		None
 17431 ;; Return value:  Size  Location     Type
 17432 ;;                  1    wreg      void 
 17433 ;; Registers used:
 17434 ;;		wreg, status,2, status,0
 17435 ;; Tracked objects:
 17436 ;;		On entry : 0/0
 17437 ;;		On exit  : 0/0
 17438 ;;		Unchanged: 0/0
 17439 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 17440 ;;      Params:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0
 17441 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17442 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17443 ;;      Totals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0
 17444 ;;Total ram usage:        2 bytes
 17445 ;; Hardware stack levels used: 1
 17446 ;; Hardware stack levels required when called: 5
 17447 ;; This function calls:
 17448 ;;		Nothing
 17449 ;; This function is called by:
 17450 ;;		_EUSART_Initialize
 17451 ;; This function uses a non-reentrant model
 17452 ;;
 17453                           
 17454     1E66                     _EUSART_FramingErrorCallbackRegister:	
 17455                           ;psect for function _EUSART_FramingErrorCallbackRegister
 17456                           
 17457     1E66                     l4648:	
 17458                           ;incstack = 0
 17459                           ; Regs used in _EUSART_FramingErrorCallbackRegister: [wreg+status,2+status,0]
 17460                           
 17461                           
 17462                           ;mcc_generated_files/uart/src/eusart.c: 430: void EUSART_FramingErrorCallbackRegister(vo
      +                          id (* callbackHandler)(void));mcc_generated_files/uart/src/eusart.c: 431: {;mcc_generate
      +                          d_files/uart/src/eusart.c: 432:     if(((void*)0) != callbackHandler)
 17463     1E66  0021               	movlb	1	; select bank1
 17464     1E67  0820               	movf	EUSART_FramingErrorCallbackRegister@callbackHandler^(0+128),w
 17465     1E68  0421               	iorwf	(EUSART_FramingErrorCallbackRegister@callbackHandler+1)^(0+128),w
 17466     1E69  1903               	btfsc	3,2
 17467     1E6A  2E6C               	goto	u4681
 17468     1E6B  2E6D               	goto	u4680
 17469     1E6C                     u4681:
 17470     1E6C  2E74               	goto	l770
 17471     1E6D                     u4680:
 17472     1E6D                     l4650:
 17473                           
 17474                           ;mcc_generated_files/uart/src/eusart.c: 433:     {;mcc_generated_files/uart/src/eusart.c
      +                          : 434:         EUSART_FramingErrorHandler = callbackHandler;
 17475     1E6D  0821               	movf	(EUSART_FramingErrorCallbackRegister@callbackHandler+1)^(0+128),w
 17476     1E6E  0020               	movlb	0	; select bank0
 17477     1E6F  00E0               	movwf	_EUSART_FramingErrorHandler+1
 17478     1E70  0021               	movlb	1	; select bank1
 17479     1E71  0820               	movf	EUSART_FramingErrorCallbackRegister@callbackHandler^(0+128),w
 17480     1E72  0020               	movlb	0	; select bank0
 17481     1E73  00DF               	movwf	_EUSART_FramingErrorHandler
 17482     1E74                     l770:
 17483     1E74  0008               	return
 17484     1E75                     __end_of_EUSART_FramingErrorCallbackRegister:
 17485                           
 17486                           	psect	text66
 17487     1D8D                     __ptext66:	
 17488 ;; *************** function _CLOCK_Initialize *****************
 17489 ;; Defined at:
 17490 ;;		line 39 in file "mcc_generated_files/system/src/clock.c"
 17491 ;; Parameters:    Size  Location     Type
 17492 ;;		None
 17493 ;; Auto vars:     Size  Location     Type
 17494 ;;		None
 17495 ;; Return value:  Size  Location     Type
 17496 ;;                  1    wreg      void 
 17497 ;; Registers used:
 17498 ;;		status,2
 17499 ;; Tracked objects:
 17500 ;;		On entry : 0/0
 17501 ;;		On exit  : 0/0
 17502 ;;		Unchanged: 0/0
 17503 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 17504 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17505 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17506 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17507 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17508 ;;Total ram usage:        0 bytes
 17509 ;; Hardware stack levels used: 1
 17510 ;; Hardware stack levels required when called: 5
 17511 ;; This function calls:
 17512 ;;		Nothing
 17513 ;; This function is called by:
 17514 ;;		_SYSTEM_Initialize
 17515 ;; This function uses a non-reentrant model
 17516 ;;
 17517                           
 17518     1D8D                     _CLOCK_Initialize:	
 17519                           ;psect for function _CLOCK_Initialize
 17520                           
 17521     1D8D                     l5694:	
 17522                           ;incstack = 0
 17523                           ; Regs used in _CLOCK_Initialize: [status,2]
 17524                           
 17525                           
 17526                           ;mcc_generated_files/system/src/clock.c: 42:     OSCCON1 = (0 << 0x0)
 17527     1D8D  0032               	movlb	18	; select bank18
 17528     1D8E  0199               	clrf	25	;volatile
 17529                           
 17530                           ;mcc_generated_files/system/src/clock.c: 44:     OSCCON3 = (0 << 0x6)
 17531     1D8F  019B               	clrf	27	;volatile
 17532                           
 17533                           ;mcc_generated_files/system/src/clock.c: 46:     OSCEN = (0 << 0x7)
 17534     1D90  019D               	clrf	29	;volatile
 17535     1D91                     l5696:
 17536                           
 17537                           ;mcc_generated_files/system/src/clock.c: 51:     OSCFRQ = (6 << 0x0);
 17538     1D91  3006               	movlw	6
 17539     1D92  009F               	movwf	31	;volatile
 17540                           
 17541                           ;mcc_generated_files/system/src/clock.c: 52:     OSCSTAT1 =
 17542     1D93  019E               	clrf	30	;volatile
 17543     1D94  019C               	clrf	28	;volatile
 17544     1D95                     l272:
 17545     1D95  0008               	return
 17546     1D96                     __end_of_CLOCK_Initialize:
 17547                           
 17548                           	psect	text67
 17549     1F48                     __ptext67:	
 17550 ;; *************** function _ADC_Initialize *****************
 17551 ;; Defined at:
 17552 ;;		line 55 in file "mcc_generated_files/adc/src/adc.c"
 17553 ;; Parameters:    Size  Location     Type
 17554 ;;		None
 17555 ;; Auto vars:     Size  Location     Type
 17556 ;;		None
 17557 ;; Return value:  Size  Location     Type
 17558 ;;                  1    wreg      void 
 17559 ;; Registers used:
 17560 ;;		wreg, status,2, status,0, pclath, cstack
 17561 ;; Tracked objects:
 17562 ;;		On entry : 0/0
 17563 ;;		On exit  : 0/0
 17564 ;;		Unchanged: 0/0
 17565 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 17566 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17567 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17568 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17569 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17570 ;;Total ram usage:        0 bytes
 17571 ;; Hardware stack levels used: 1
 17572 ;; Hardware stack levels required when called: 6
 17573 ;; This function calls:
 17574 ;;		_ADC_SetInterruptHandler
 17575 ;; This function is called by:
 17576 ;;		_SYSTEM_Initialize
 17577 ;; This function uses a non-reentrant model
 17578 ;;
 17579                           
 17580     1F48                     _ADC_Initialize:	
 17581                           ;psect for function _ADC_Initialize
 17582                           
 17583     1F48                     l5646:	
 17584                           ;incstack = 0
 17585                           ; Regs used in _ADC_Initialize: [wreg+status,2+status,0+pclath+cstack]
 17586                           
 17587                           
 17588                           ;mcc_generated_files/adc/src/adc.c: 58:     ADCON1 = 0xA0;
 17589     1F48  30A0               	movlw	160
 17590     1F49  0021               	movlb	1	; select bank1
 17591     1F4A  009E               	movwf	30	;volatile
 17592     1F4B                     l5648:
 17593                           
 17594                           ;mcc_generated_files/adc/src/adc.c: 61:     ADRESL = 0x0;
 17595     1F4B  019B               	clrf	27	;volatile
 17596                           
 17597                           ;mcc_generated_files/adc/src/adc.c: 64:     ADRESH = 0x0;
 17598     1F4C  019C               	clrf	28	;volatile
 17599     1F4D                     l5650:
 17600                           
 17601                           ;mcc_generated_files/adc/src/adc.c: 67:     ADACT = 0x5;
 17602     1F4D  3005               	movlw	5
 17603     1F4E  009F               	movwf	31	;volatile
 17604     1F4F                     l5652:
 17605                           
 17606                           ;mcc_generated_files/adc/src/adc.c: 70:     ADCON0 = 0x1;
 17607     1F4F  3001               	movlw	1
 17608     1F50  009D               	movwf	29	;volatile
 17609     1F51                     l5654:
 17610                           
 17611                           ;mcc_generated_files/adc/src/adc.c: 73:     PIR1bits.ADIF = 0;
 17612     1F51  0020               	movlb	0	; select bank0
 17613     1F52  1311               	bcf	17,6	;volatile
 17614     1F53                     l5656:
 17615                           
 17616                           ;mcc_generated_files/adc/src/adc.c: 76:     ADC_SetInterruptHandler(ADC_DefaultInterrupt
      +                          Handler);
 17617     1F53  3055               	movlw	low _ADC_DefaultInterruptHandler
 17618     1F54  0021               	movlb	1	; select bank1
 17619     1F55  00A0               	movwf	ADC_SetInterruptHandler@InterruptHandler^(0+128)
 17620     1F56  301D               	movlw	high _ADC_DefaultInterruptHandler
 17621     1F57  00A1               	movwf	(ADC_SetInterruptHandler@InterruptHandler^(0+128)+1)
 17622     1F58  319D  2584  319F   	fcall	_ADC_SetInterruptHandler
 17623     1F5B                     l5658:
 17624                           
 17625                           ;mcc_generated_files/adc/src/adc.c: 79:     PIE1bits.ADIE = 1;
 17626     1F5B  0021               	movlb	1	; select bank1
 17627     1F5C  1711               	bsf	17,6	;volatile
 17628     1F5D                     l27:
 17629     1F5D  0008               	return
 17630     1F5E                     __end_of_ADC_Initialize:
 17631                           
 17632                           	psect	text68
 17633     1D84                     __ptext68:	
 17634 ;; *************** function _ADC_SetInterruptHandler *****************
 17635 ;; Defined at:
 17636 ;;		line 145 in file "mcc_generated_files/adc/src/adc.c"
 17637 ;; Parameters:    Size  Location     Type
 17638 ;;  InterruptHan    2    0[BANK1 ] PTR FTN()void 
 17639 ;;		 -> adcConversionDoneHandler(1), ADC_DefaultInterruptHandler(1), 
 17640 ;; Auto vars:     Size  Location     Type
 17641 ;;		None
 17642 ;; Return value:  Size  Location     Type
 17643 ;;                  1    wreg      void 
 17644 ;; Registers used:
 17645 ;;		wreg
 17646 ;; Tracked objects:
 17647 ;;		On entry : 0/0
 17648 ;;		On exit  : 0/0
 17649 ;;		Unchanged: 0/0
 17650 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 17651 ;;      Params:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0
 17652 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17653 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17654 ;;      Totals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0
 17655 ;;Total ram usage:        2 bytes
 17656 ;; Hardware stack levels used: 1
 17657 ;; Hardware stack levels required when called: 5
 17658 ;; This function calls:
 17659 ;;		Nothing
 17660 ;; This function is called by:
 17661 ;;		_ADC_Initialize
 17662 ;;		_initAdcMultiplexer
 17663 ;; This function uses a non-reentrant model
 17664 ;;
 17665                           
 17666     1D84                     _ADC_SetInterruptHandler:	
 17667                           ;psect for function _ADC_SetInterruptHandler
 17668                           
 17669     1D84                     l4638:	
 17670                           ;incstack = 0
 17671                           ; Regs used in _ADC_SetInterruptHandler: [wreg]
 17672                           
 17673                           
 17674                           ;mcc_generated_files/adc/src/adc.c: 145: void ADC_SetInterruptHandler(void (* InterruptH
      +                          andler)(void));mcc_generated_files/adc/src/adc.c: 146: {;mcc_generated_files/adc/src/adc
      +                          .c: 147:     ADC_InterruptHandler = InterruptHandler;
 17675     1D84  0021               	movlb	1	; select bank1
 17676     1D85  0821               	movf	(ADC_SetInterruptHandler@InterruptHandler+1)^(0+128),w
 17677     1D86  0022               	movlb	2	; select bank2
 17678     1D87  00DF               	movwf	(_ADC_InterruptHandler+1)^(0+256)
 17679     1D88  0021               	movlb	1	; select bank1
 17680     1D89  0820               	movf	ADC_SetInterruptHandler@InterruptHandler^(0+128),w
 17681     1D8A  0022               	movlb	2	; select bank2
 17682     1D8B  00DE               	movwf	_ADC_InterruptHandler^(0+256)
 17683     1D8C                     l55:
 17684     1D8C  0008               	return
 17685     1D8D                     __end_of_ADC_SetInterruptHandler:
 17686                           
 17687                           	psect	intentry
 17688     0004                     __pintentry:	
 17689 ;; *************** function _INTERRUPT_InterruptManager *****************
 17690 ;; Defined at:
 17691 ;;		line 59 in file "mcc_generated_files/system/src/interrupt.c"
 17692 ;; Parameters:    Size  Location     Type
 17693 ;;		None
 17694 ;; Auto vars:     Size  Location     Type
 17695 ;;		None
 17696 ;; Return value:  Size  Location     Type
 17697 ;;                  1    wreg      void 
 17698 ;; Registers used:
 17699 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 17700 ;; Tracked objects:
 17701 ;;		On entry : 0/0
 17702 ;;		On exit  : 0/0
 17703 ;;		Unchanged: 0/0
 17704 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 17705 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17706 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17707 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17708 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17709 ;;Total ram usage:        0 bytes
 17710 ;; Hardware stack levels used: 1
 17711 ;; Hardware stack levels required when called: 4
 17712 ;; This function calls:
 17713 ;;		NULL
 17714 ;;		_ADC_ISR
 17715 ;;		_EUSART_ReceiveISR
 17716 ;;		_EUSART_TransmitISR
 17717 ;;		_TMR2_ISR
 17718 ;;		_TMR4_ISR
 17719 ;; This function is called by:
 17720 ;;		Interrupt level 1
 17721 ;; This function uses a non-reentrant model
 17722 ;;
 17723                           
 17724     0004                     _INTERRUPT_InterruptManager:
 17725                           
 17726                           ;incstack = 0
 17727     0004  147E               	bsf	int$flags,0	;set compiler interrupt flag (level 1)
 17728                           
 17729                           ; Regs used in _INTERRUPT_InterruptManager: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 17730     0005  3180               	pagesel	$
 17731     0006                     i1l6138:
 17732                           
 17733                           ;mcc_generated_files/system/src/interrupt.c: 62:     if(INTCONbits.PEIE == 1)
 17734     0006  1F0B               	btfss	11,6	;volatile
 17735     0007  2809               	goto	u728_21
 17736     0008  280A               	goto	u728_20
 17737     0009                     u728_21:
 17738     0009  2856               	goto	i1l244
 17739     000A                     u728_20:
 17740     000A                     i1l6140:
 17741                           
 17742                           ;mcc_generated_files/system/src/interrupt.c: 63:     {;mcc_generated_files/system/src/in
      +                          terrupt.c: 64:         if(PIE1bits.TXIE == 1 && PIR1bits.TXIF == 1)
 17743     000A  0021               	movlb	1	; select bank1
 17744     000B  1E11               	btfss	17,4	;volatile
 17745     000C  280E               	goto	u729_21
 17746     000D  280F               	goto	u729_20
 17747     000E                     u729_21:
 17748     000E  281B               	goto	i1l233
 17749     000F                     u729_20:
 17750     000F                     i1l6142:
 17751     000F  0020               	movlb	0	; select bank0
 17752     0010  1E11               	btfss	17,4	;volatile
 17753     0011  2813               	goto	u730_21
 17754     0012  2814               	goto	u730_20
 17755     0013                     u730_21:
 17756     0013  281B               	goto	i1l233
 17757     0014                     u730_20:
 17758     0014                     i1l6144:
 17759                           
 17760                           ;mcc_generated_files/system/src/interrupt.c: 65:         {;mcc_generated_files/system/sr
      +                          c/interrupt.c: 66:             EUSART_TxInterruptHandler();
 17761     0014  0022               	movlb	2	; select bank2
 17762     0015  085D               	movf	(_EUSART_TxInterruptHandler+1)^(0+256),w
 17763     0016  008A               	movwf	10
 17764     0017  085C               	movf	_EUSART_TxInterruptHandler^(0+256),w
 17765     0018  000A               	callw
 17766     0019  3180               	pagesel	$
 17767                           
 17768                           ;mcc_generated_files/system/src/interrupt.c: 67:         }
 17769     001A  2856               	goto	i1l244
 17770     001B                     i1l233:	
 17771                           ;mcc_generated_files/system/src/interrupt.c: 68:         else if(PIE1bits.RCIE == 1 && P
      +                          IR1bits.RCIF == 1)
 17772                           
 17773     001B  0021               	movlb	1	; select bank1
 17774     001C  1E91               	btfss	17,5	;volatile
 17775     001D  281F               	goto	u731_21
 17776     001E  2820               	goto	u731_20
 17777     001F                     u731_21:
 17778     001F  282C               	goto	i1l235
 17779     0020                     u731_20:
 17780     0020                     i1l6146:
 17781     0020  0020               	movlb	0	; select bank0
 17782     0021  1E91               	btfss	17,5	;volatile
 17783     0022  2824               	goto	u732_21
 17784     0023  2825               	goto	u732_20
 17785     0024                     u732_21:
 17786     0024  282C               	goto	i1l235
 17787     0025                     u732_20:
 17788     0025                     i1l6148:
 17789                           
 17790                           ;mcc_generated_files/system/src/interrupt.c: 69:         {;mcc_generated_files/system/sr
      +                          c/interrupt.c: 70:             EUSART_RxInterruptHandler();
 17791     0025  0022               	movlb	2	; select bank2
 17792     0026  085B               	movf	(_EUSART_RxInterruptHandler+1)^(0+256),w
 17793     0027  008A               	movwf	10
 17794     0028  085A               	movf	_EUSART_RxInterruptHandler^(0+256),w
 17795     0029  000A               	callw
 17796     002A  3180               	pagesel	$
 17797                           
 17798                           ;mcc_generated_files/system/src/interrupt.c: 71:         }
 17799     002B  2856               	goto	i1l244
 17800     002C                     i1l235:	
 17801                           ;mcc_generated_files/system/src/interrupt.c: 72:         else if(PIE2bits.TMR4IE == 1 &&
      +                           PIR2bits.TMR4IF == 1)
 17802                           
 17803     002C  0021               	movlb	1	; select bank1
 17804     002D  1C92               	btfss	18,1	;volatile
 17805     002E  2830               	goto	u733_21
 17806     002F  2831               	goto	u733_20
 17807     0030                     u733_21:
 17808     0030  283A               	goto	i1l237
 17809     0031                     u733_20:
 17810     0031                     i1l6150:
 17811     0031  0020               	movlb	0	; select bank0
 17812     0032  1C92               	btfss	18,1	;volatile
 17813     0033  2835               	goto	u734_21
 17814     0034  2836               	goto	u734_20
 17815     0035                     u734_21:
 17816     0035  283A               	goto	i1l237
 17817     0036                     u734_20:
 17818     0036                     i1l6152:
 17819                           
 17820                           ;mcc_generated_files/system/src/interrupt.c: 73:         {;mcc_generated_files/system/sr
      +                          c/interrupt.c: 74:             TMR4_ISR();
 17821     0036  319E  2657  3180   	fcall	_TMR4_ISR
 17822                           
 17823                           ;mcc_generated_files/system/src/interrupt.c: 75:         }
 17824     0039  2856               	goto	i1l244
 17825     003A                     i1l237:	
 17826                           ;mcc_generated_files/system/src/interrupt.c: 76:         else if(PIE1bits.TMR2IE == 1 &&
      +                           PIR1bits.TMR2IF == 1)
 17827                           
 17828     003A  0021               	movlb	1	; select bank1
 17829     003B  1C91               	btfss	17,1	;volatile
 17830     003C  283E               	goto	u735_21
 17831     003D  283F               	goto	u735_20
 17832     003E                     u735_21:
 17833     003E  2848               	goto	i1l239
 17834     003F                     u735_20:
 17835     003F                     i1l6154:
 17836     003F  0020               	movlb	0	; select bank0
 17837     0040  1C91               	btfss	17,1	;volatile
 17838     0041  2843               	goto	u736_21
 17839     0042  2844               	goto	u736_20
 17840     0043                     u736_21:
 17841     0043  2848               	goto	i1l239
 17842     0044                     u736_20:
 17843     0044                     i1l6156:
 17844                           
 17845                           ;mcc_generated_files/system/src/interrupt.c: 77:         {;mcc_generated_files/system/sr
      +                          c/interrupt.c: 78:             TMR2_ISR();
 17846     0044  319E  2648  3180   	fcall	_TMR2_ISR
 17847                           
 17848                           ;mcc_generated_files/system/src/interrupt.c: 79:         }
 17849     0047  2856               	goto	i1l244
 17850     0048                     i1l239:	
 17851                           ;mcc_generated_files/system/src/interrupt.c: 80:         else if(PIE1bits.ADIE == 1 && P
      +                          IR1bits.ADIF == 1)
 17852                           
 17853     0048  0021               	movlb	1	; select bank1
 17854     0049  1F11               	btfss	17,6	;volatile
 17855     004A  284C               	goto	u737_21
 17856     004B  284D               	goto	u737_20
 17857     004C                     u737_21:
 17858     004C  2856               	goto	i1l238
 17859     004D                     u737_20:
 17860     004D                     i1l6158:
 17861     004D  0020               	movlb	0	; select bank0
 17862     004E  1F11               	btfss	17,6	;volatile
 17863     004F  2851               	goto	u738_21
 17864     0050  2852               	goto	u738_20
 17865     0051                     u738_21:
 17866     0051  2856               	goto	i1l238
 17867     0052                     u738_20:
 17868     0052                     i1l6160:
 17869                           
 17870                           ;mcc_generated_files/system/src/interrupt.c: 81:         {;mcc_generated_files/system/sr
      +                          c/interrupt.c: 82:             ADC_ISR();
 17871     0052  319E  2639  3180   	fcall	_ADC_ISR
 17872                           
 17873                           ;mcc_generated_files/system/src/interrupt.c: 83:         }
 17874     0055  2856               	goto	i1l244
 17875     0056                     i1l238:
 17876     0056                     i1l244:
 17877     0056  107E               	bcf	int$flags,0	;clear compiler interrupt flag (level 1)
 17878     0057  0009               	retfie
 17879     0058                     __end_of_INTERRUPT_InterruptManager:
 17880                           
 17881                           	psect	text70
 17882     1E57                     __ptext70:	
 17883 ;; *************** function _TMR4_ISR *****************
 17884 ;; Defined at:
 17885 ;;		line 114 in file "mcc_generated_files/timer/src/tmr4.c"
 17886 ;; Parameters:    Size  Location     Type
 17887 ;;		None
 17888 ;; Auto vars:     Size  Location     Type
 17889 ;;		None
 17890 ;; Return value:  Size  Location     Type
 17891 ;;                  1    wreg      void 
 17892 ;; Registers used:
 17893 ;;		wreg, status,2, status,0, pclath, cstack
 17894 ;; Tracked objects:
 17895 ;;		On entry : 0/0
 17896 ;;		On exit  : 0/0
 17897 ;;		Unchanged: 0/0
 17898 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 17899 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17900 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17901 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17902 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17903 ;;Total ram usage:        0 bytes
 17904 ;; Hardware stack levels used: 1
 17905 ;; Hardware stack levels required when called: 3
 17906 ;; This function calls:
 17907 ;;		NULL
 17908 ;;		_TMR4_DefaultPeriodMatchCallback
 17909 ;;		_controller
 17910 ;; This function is called by:
 17911 ;;		_INTERRUPT_InterruptManager
 17912 ;; This function uses a non-reentrant model
 17913 ;;
 17914                           
 17915     1E57                     _TMR4_ISR:	
 17916                           ;psect for function _TMR4_ISR
 17917                           
 17918     1E57                     i1l5990:	
 17919                           ;incstack = 0
 17920                           ; Regs used in _TMR4_ISR: [wreg+status,2+status,0+pclath+cstack]
 17921                           
 17922                           
 17923                           ;mcc_generated_files/timer/src/tmr4.c: 117:     if(((void*)0) != TMR4_PeriodMatchCallbac
      +                          k)
 17924     1E57  0022               	movlb	2	; select bank2
 17925     1E58  0856               	movf	_TMR4_PeriodMatchCallback^(0+256),w
 17926     1E59  0457               	iorwf	(_TMR4_PeriodMatchCallback+1)^(0+256),w
 17927     1E5A  1903               	btfsc	3,2
 17928     1E5B  2E5D               	goto	u712_21
 17929     1E5C  2E5E               	goto	u712_20
 17930     1E5D                     u712_21:
 17931     1E5D  2E63               	goto	i1l5994
 17932     1E5E                     u712_20:
 17933     1E5E                     i1l5992:
 17934                           
 17935                           ;mcc_generated_files/timer/src/tmr4.c: 118:     {;mcc_generated_files/timer/src/tmr4.c: 
      +                          119:         TMR4_PeriodMatchCallback();
 17936     1E5E  0857               	movf	(_TMR4_PeriodMatchCallback+1)^(0+256),w
 17937     1E5F  008A               	movwf	10
 17938     1E60  0856               	movf	_TMR4_PeriodMatchCallback^(0+256),w
 17939     1E61  000A               	callw
 17940     1E62  319E               	pagesel	$
 17941     1E63                     i1l5994:
 17942                           
 17943                           ;mcc_generated_files/timer/src/tmr4.c: 121:     PIR2bits.TMR4IF = 0;
 17944     1E63  0020               	movlb	0	; select bank0
 17945     1E64  1092               	bcf	18,1	;volatile
 17946     1E65                     i1l491:
 17947     1E65  0008               	return
 17948     1E66                     __end_of_TMR4_ISR:
 17949                           
 17950                           	psect	text71
 17951     0800                     __ptext71:	
 17952 ;; *************** function _TMR4_DefaultPeriodMatchCallback *****************
 17953 ;; Defined at:
 17954 ;;		line 129 in file "mcc_generated_files/timer/src/tmr4.c"
 17955 ;; Parameters:    Size  Location     Type
 17956 ;;		None
 17957 ;; Auto vars:     Size  Location     Type
 17958 ;;		None
 17959 ;; Return value:  Size  Location     Type
 17960 ;;                  1    wreg      void 
 17961 ;; Registers used:
 17962 ;;		None
 17963 ;; Tracked objects:
 17964 ;;		On entry : 0/0
 17965 ;;		On exit  : 0/0
 17966 ;;		Unchanged: 0/0
 17967 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 17968 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17969 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17970 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17971 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17972 ;;Total ram usage:        0 bytes
 17973 ;; Hardware stack levels used: 1
 17974 ;; This function calls:
 17975 ;;		Nothing
 17976 ;; This function is called by:
 17977 ;;		_TMR4_Initialize
 17978 ;;		_TMR4_ISR
 17979 ;; This function uses a non-reentrant model
 17980 ;;
 17981                           
 17982     0800                     _TMR4_DefaultPeriodMatchCallback:	
 17983                           ;psect for function _TMR4_DefaultPeriodMatchCallback
 17984                           
 17985     0800                     i1l497:	
 17986                           ;incstack = 0
 17987                           ; Regs used in _TMR4_DefaultPeriodMatchCallback: []
 17988                           
 17989     0800  0008               	return
 17990     0801                     __end_of_TMR4_DefaultPeriodMatchCallback:
 17991                           
 17992                           	psect	text72
 17993     09D4                     __ptext72:	
 17994 ;; *************** function _controller *****************
 17995 ;; Defined at:
 17996 ;;		line 13 in file "controller.c"
 17997 ;; Parameters:    Size  Location     Type
 17998 ;;		None
 17999 ;; Auto vars:     Size  Location     Type
 18000 ;;  error           2   51[BANK0 ] short 
 18001 ;;  I               2   49[BANK0 ] short 
 18002 ;;  P               2   47[BANK0 ] short 
 18003 ;; Return value:  Size  Location     Type
 18004 ;;                  1    wreg      void 
 18005 ;; Registers used:
 18006 ;;		wreg, status,2, status,0, pclath, cstack
 18007 ;; Tracked objects:
 18008 ;;		On entry : 0/0
 18009 ;;		On exit  : 0/0
 18010 ;;		Unchanged: 0/0
 18011 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 18012 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18013 ;;      Locals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18014 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18015 ;;      Totals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18016 ;;Total ram usage:        7 bytes
 18017 ;; Hardware stack levels used: 1
 18018 ;; Hardware stack levels required when called: 2
 18019 ;; This function calls:
 18020 ;;		___fltol
 18021 ;;		_getHoogtesensor
 18022 ;;		_pwm_fan_LoadDutyValue
 18023 ;;		i1___fladd
 18024 ;;		i1___flmul
 18025 ;;		i1___xxtofl
 18026 ;; This function is called by:
 18027 ;;		_main
 18028 ;;		_TMR4_ISR
 18029 ;; This function uses a non-reentrant model
 18030 ;;
 18031                           
 18032     09D4                     _controller:	
 18033                           ;psect for function _controller
 18034                           
 18035     09D4                     i1l5954:	
 18036                           ;incstack = 0
 18037                           ; Regs used in _controller: [wreg+status,2+status,0+pclath+cstack]
 18038                           
 18039                           
 18040                           ;controller.c: 14:     hoogte_bal = getHoogtesensor();
 18041     09D4  319D  2564  3189   	fcall	_getHoogtesensor
 18042     09D7  0871               	movf	?_getHoogtesensor+1,w
 18043     09D8  0022               	movlb	2	; select bank2
 18044     09D9  00CB               	movwf	(_hoogte_bal+1)^(0+256)
 18045     09DA  0870               	movf	?_getHoogtesensor,w
 18046     09DB  00CA               	movwf	_hoogte_bal^(0+256)
 18047     09DC                     i1l5956:
 18048                           
 18049                           ;controller.c: 17:     int16_t error = setpoint - hoogte_bal;
 18050     09DC  084A               	movf	_hoogte_bal^(0+256),w
 18051     09DD  0021               	movlb	1	; select bank1
 18052     09DE  026D               	subwf	_setpoint^(0+128),w
 18053     09DF  0020               	movlb	0	; select bank0
 18054     09E0  00D3               	movwf	controller@error
 18055     09E1  0022               	movlb	2	; select bank2
 18056     09E2  084B               	movf	(_hoogte_bal+1)^(0+256),w
 18057     09E3  0021               	movlb	1	; select bank1
 18058     09E4  3B6E               	subwfb	(_setpoint+1)^(0+128),w
 18059     09E5  0020               	movlb	0	; select bank0
 18060     09E6  00D4               	movwf	controller@error+1
 18061     09E7                     i1l5958:
 18062                           
 18063                           ;controller.c: 19:     integraal += error * 0.002;
 18064     09E7  0853               	movf	controller@error,w
 18065     09E8  00F0               	movwf	i1___xxtofl@val
 18066     09E9  0854               	movf	controller@error+1,w
 18067     09EA  00F1               	movwf	i1___xxtofl@val+1
 18068     09EB  0D89               	rlf	9,f
 18069     09EC  3B89               	subwfb	9,f
 18070     09ED  0989               	comf	9,f
 18071     09EE  00F2               	movwf	i1___xxtofl@val+2
 18072     09EF  00F3               	movwf	i1___xxtofl@val+3
 18073     09F0  3001               	movlw	1
 18074     09F1  3197  275C  3189   	fcall	i1___xxtofl
 18075     09F4  0873               	movf	?i1___xxtofl+3,w
 18076     09F5  0020               	movlb	0	; select bank0
 18077     09F6  00A7               	movwf	i1___flmul@a+3
 18078     09F7  0872               	movf	?i1___xxtofl+2,w
 18079     09F8  00A6               	movwf	i1___flmul@a+2
 18080     09F9  0871               	movf	?i1___xxtofl+1,w
 18081     09FA  00A5               	movwf	i1___flmul@a+1
 18082     09FB  0870               	movf	?i1___xxtofl,w
 18083     09FC  00A4               	movwf	i1___flmul@a
 18084     09FD  303B               	movlw	59
 18085     09FE  00A3               	movwf	i1___flmul@b+3
 18086     09FF  3003               	movlw	3
 18087     0A00  00A2               	movwf	i1___flmul@b+2
 18088     0A01  3012               	movlw	18
 18089     0A02  00A1               	movwf	i1___flmul@b+1
 18090     0A03  306F               	movlw	111
 18091     0A04  00A0               	movwf	i1___flmul@b
 18092     0A05  3182  22CE  3189   	fcall	i1___flmul
 18093     0A08  0020               	movlb	0	; select bank0
 18094     0A09  0823               	movf	?i1___flmul+3,w
 18095     0A0A  00BD               	movwf	i1___fladd@b+3
 18096     0A0B  0822               	movf	?i1___flmul+2,w
 18097     0A0C  00BC               	movwf	i1___fladd@b+2
 18098     0A0D  0821               	movf	?i1___flmul+1,w
 18099     0A0E  00BB               	movwf	i1___fladd@b+1
 18100     0A0F  0820               	movf	?i1___flmul,w
 18101     0A10  00BA               	movwf	i1___fladd@b
 18102     0A11  0022               	movlb	2	; select bank2
 18103     0A12  0843               	movf	(_integraal+3)^(0+256),w
 18104     0A13  0020               	movlb	0	; select bank0
 18105     0A14  00C1               	movwf	i1___fladd@a+3
 18106     0A15  0022               	movlb	2	; select bank2
 18107     0A16  0842               	movf	(_integraal+2)^(0+256),w
 18108     0A17  0020               	movlb	0	; select bank0
 18109     0A18  00C0               	movwf	i1___fladd@a+2
 18110     0A19  0022               	movlb	2	; select bank2
 18111     0A1A  0841               	movf	(_integraal+1)^(0+256),w
 18112     0A1B  0020               	movlb	0	; select bank0
 18113     0A1C  00BF               	movwf	i1___fladd@a+1
 18114     0A1D  0022               	movlb	2	; select bank2
 18115     0A1E  0840               	movf	_integraal^(0+256),w
 18116     0A1F  0020               	movlb	0	; select bank0
 18117     0A20  00BE               	movwf	i1___fladd@a
 18118     0A21  318D  25F4  3189   	fcall	i1___fladd
 18119     0A24  0020               	movlb	0	; select bank0
 18120     0A25  083D               	movf	?i1___fladd+3,w
 18121     0A26  0022               	movlb	2	; select bank2
 18122     0A27  00C3               	movwf	(_integraal+3)^(0+256)
 18123     0A28  0020               	movlb	0	; select bank0
 18124     0A29  083C               	movf	?i1___fladd+2,w
 18125     0A2A  0022               	movlb	2	; select bank2
 18126     0A2B  00C2               	movwf	(_integraal+2)^(0+256)
 18127     0A2C  0020               	movlb	0	; select bank0
 18128     0A2D  083B               	movf	?i1___fladd+1,w
 18129     0A2E  0022               	movlb	2	; select bank2
 18130     0A2F  00C1               	movwf	(_integraal+1)^(0+256)
 18131     0A30  0020               	movlb	0	; select bank0
 18132     0A31  083A               	movf	?i1___fladd,w
 18133     0A32  0022               	movlb	2	; select bank2
 18134     0A33  00C0               	movwf	_integraal^(0+256)
 18135     0A34                     i1l5960:
 18136                           
 18137                           ;controller.c: 21:     int16_t P = kp * error;
 18138     0A34  0020               	movlb	0	; select bank0
 18139     0A35  0853               	movf	controller@error,w
 18140     0A36  00F0               	movwf	i1___xxtofl@val
 18141     0A37  0854               	movf	controller@error+1,w
 18142     0A38  00F1               	movwf	i1___xxtofl@val+1
 18143     0A39  0D89               	rlf	9,f
 18144     0A3A  3B89               	subwfb	9,f
 18145     0A3B  0989               	comf	9,f
 18146     0A3C  00F2               	movwf	i1___xxtofl@val+2
 18147     0A3D  00F3               	movwf	i1___xxtofl@val+3
 18148     0A3E  3001               	movlw	1
 18149     0A3F  3197  275C  3189   	fcall	i1___xxtofl
 18150     0A42  0873               	movf	?i1___xxtofl+3,w
 18151     0A43  0020               	movlb	0	; select bank0
 18152     0A44  00A7               	movwf	i1___flmul@a+3
 18153     0A45  0872               	movf	?i1___xxtofl+2,w
 18154     0A46  00A6               	movwf	i1___flmul@a+2
 18155     0A47  0871               	movf	?i1___xxtofl+1,w
 18156     0A48  00A5               	movwf	i1___flmul@a+1
 18157     0A49  0870               	movf	?i1___xxtofl,w
 18158     0A4A  00A4               	movwf	i1___flmul@a
 18159     0A4B  0022               	movlb	2	; select bank2
 18160     0A4C  0867               	movf	(_kp+3)^(0+256),w
 18161     0A4D  0020               	movlb	0	; select bank0
 18162     0A4E  00A3               	movwf	i1___flmul@b+3
 18163     0A4F  0022               	movlb	2	; select bank2
 18164     0A50  0866               	movf	(_kp+2)^(0+256),w
 18165     0A51  0020               	movlb	0	; select bank0
 18166     0A52  00A2               	movwf	i1___flmul@b+2
 18167     0A53  0022               	movlb	2	; select bank2
 18168     0A54  0865               	movf	(_kp+1)^(0+256),w
 18169     0A55  0020               	movlb	0	; select bank0
 18170     0A56  00A1               	movwf	i1___flmul@b+1
 18171     0A57  0022               	movlb	2	; select bank2
 18172     0A58  0864               	movf	_kp^(0+256),w
 18173     0A59  0020               	movlb	0	; select bank0
 18174     0A5A  00A0               	movwf	i1___flmul@b
 18175     0A5B  3182  22CE  3189   	fcall	i1___flmul
 18176     0A5E  0020               	movlb	0	; select bank0
 18177     0A5F  0823               	movf	?i1___flmul+3,w
 18178     0A60  00BD               	movwf	___fltol@f1+3
 18179     0A61  0822               	movf	?i1___flmul+2,w
 18180     0A62  00BC               	movwf	___fltol@f1+2
 18181     0A63  0821               	movf	?i1___flmul+1,w
 18182     0A64  00BB               	movwf	___fltol@f1+1
 18183     0A65  0820               	movf	?i1___flmul,w
 18184     0A66  00BA               	movwf	___fltol@f1
 18185     0A67  3195  256A  3189   	fcall	___fltol
 18186     0A6A  0020               	movlb	0	; select bank0
 18187     0A6B  083B               	movf	?___fltol+1,w
 18188     0A6C  00D0               	movwf	controller@P+1
 18189     0A6D  083A               	movf	?___fltol,w
 18190     0A6E  00CF               	movwf	controller@P
 18191     0A6F                     i1l5962:
 18192                           
 18193                           ;controller.c: 22:     int16_t I = ki * integraal;
 18194     0A6F  0022               	movlb	2	; select bank2
 18195     0A70  0863               	movf	(_ki+3)^(0+256),w
 18196     0A71  0020               	movlb	0	; select bank0
 18197     0A72  00A7               	movwf	i1___flmul@a+3
 18198     0A73  0022               	movlb	2	; select bank2
 18199     0A74  0862               	movf	(_ki+2)^(0+256),w
 18200     0A75  0020               	movlb	0	; select bank0
 18201     0A76  00A6               	movwf	i1___flmul@a+2
 18202     0A77  0022               	movlb	2	; select bank2
 18203     0A78  0861               	movf	(_ki+1)^(0+256),w
 18204     0A79  0020               	movlb	0	; select bank0
 18205     0A7A  00A5               	movwf	i1___flmul@a+1
 18206     0A7B  0022               	movlb	2	; select bank2
 18207     0A7C  0860               	movf	_ki^(0+256),w
 18208     0A7D  0020               	movlb	0	; select bank0
 18209     0A7E  00A4               	movwf	i1___flmul@a
 18210     0A7F  0022               	movlb	2	; select bank2
 18211     0A80  0843               	movf	(_integraal+3)^(0+256),w
 18212     0A81  0020               	movlb	0	; select bank0
 18213     0A82  00A3               	movwf	i1___flmul@b+3
 18214     0A83  0022               	movlb	2	; select bank2
 18215     0A84  0842               	movf	(_integraal+2)^(0+256),w
 18216     0A85  0020               	movlb	0	; select bank0
 18217     0A86  00A2               	movwf	i1___flmul@b+2
 18218     0A87  0022               	movlb	2	; select bank2
 18219     0A88  0841               	movf	(_integraal+1)^(0+256),w
 18220     0A89  0020               	movlb	0	; select bank0
 18221     0A8A  00A1               	movwf	i1___flmul@b+1
 18222     0A8B  0022               	movlb	2	; select bank2
 18223     0A8C  0840               	movf	_integraal^(0+256),w
 18224     0A8D  0020               	movlb	0	; select bank0
 18225     0A8E  00A0               	movwf	i1___flmul@b
 18226     0A8F  3182  22CE  3189   	fcall	i1___flmul
 18227     0A92  0020               	movlb	0	; select bank0
 18228     0A93  0823               	movf	?i1___flmul+3,w
 18229     0A94  00BD               	movwf	___fltol@f1+3
 18230     0A95  0822               	movf	?i1___flmul+2,w
 18231     0A96  00BC               	movwf	___fltol@f1+2
 18232     0A97  0821               	movf	?i1___flmul+1,w
 18233     0A98  00BB               	movwf	___fltol@f1+1
 18234     0A99  0820               	movf	?i1___flmul,w
 18235     0A9A  00BA               	movwf	___fltol@f1
 18236     0A9B  3195  256A  3189   	fcall	___fltol
 18237     0A9E  0020               	movlb	0	; select bank0
 18238     0A9F  083B               	movf	?___fltol+1,w
 18239     0AA0  00D2               	movwf	controller@I+1
 18240     0AA1  083A               	movf	?___fltol,w
 18241     0AA2  00D1               	movwf	controller@I
 18242     0AA3                     i1l5964:
 18243                           
 18244                           ;controller.c: 24:     dutycycle = P + I;
 18245     0AA3  0851               	movf	controller@I,w
 18246     0AA4  074F               	addwf	controller@P,w
 18247     0AA5  00D7               	movwf	_dutycycle
 18248     0AA6  0852               	movf	controller@I+1,w
 18249     0AA7  3D50               	addwfc	controller@P+1,w
 18250     0AA8  00D8               	movwf	_dutycycle+1
 18251     0AA9                     i1l5966:
 18252                           
 18253                           ;controller.c: 26:     if (dutycycle > 1023 && error > 0) {
 18254     0AA9  3004               	movlw	4
 18255     0AAA  0258               	subwf	_dutycycle+1,w
 18256     0AAB  3000               	movlw	0
 18257     0AAC  1903               	skipnz
 18258     0AAD  0257               	subwf	_dutycycle,w
 18259     0AAE  1C03               	skipc
 18260     0AAF  2AB1               	goto	u707_21
 18261     0AB0  2AB2               	goto	u707_20
 18262     0AB1                     u707_21:
 18263     0AB1  2AC5               	goto	i1l5972
 18264     0AB2                     u707_20:
 18265     0AB2                     i1l5968:
 18266     0AB2  0854               	movf	controller@error+1,w
 18267     0AB3  3A80               	xorlw	128
 18268     0AB4  00CE               	movwf	??_controller
 18269     0AB5  3080               	movlw	128
 18270     0AB6  024E               	subwf	??_controller,w
 18271     0AB7  1D03               	skipz
 18272     0AB8  2ABB               	goto	u708_25
 18273     0AB9  3001               	movlw	1
 18274     0ABA  0253               	subwf	controller@error,w
 18275     0ABB                     u708_25:
 18276     0ABB  1C03               	skipc
 18277     0ABC  2ABE               	goto	u708_21
 18278     0ABD  2ABF               	goto	u708_20
 18279     0ABE                     u708_21:
 18280     0ABE  2AC5               	goto	i1l5972
 18281     0ABF                     u708_20:
 18282     0ABF                     i1l5970:
 18283                           
 18284                           ;controller.c: 27:         dutycycle = 1023;
 18285     0ABF  30FF               	movlw	255
 18286     0AC0  0020               	movlb	0	; select bank0
 18287     0AC1  00D7               	movwf	_dutycycle
 18288     0AC2  3003               	movlw	3
 18289     0AC3  00D8               	movwf	_dutycycle+1
 18290                           
 18291                           ;controller.c: 28:     } else if (dutycycle > 1023 && error < 0) {
 18292     0AC4  2AD6               	goto	i1l5980
 18293     0AC5                     i1l5972:
 18294     0AC5  3004               	movlw	4
 18295     0AC6  0020               	movlb	0	; select bank0
 18296     0AC7  0258               	subwf	_dutycycle+1,w
 18297     0AC8  3000               	movlw	0
 18298     0AC9  1903               	skipnz
 18299     0ACA  0257               	subwf	_dutycycle,w
 18300     0ACB  1C03               	skipc
 18301     0ACC  2ACE               	goto	u709_21
 18302     0ACD  2ACF               	goto	u709_20
 18303     0ACE                     u709_21:
 18304     0ACE  2AD6               	goto	i1l946
 18305     0ACF                     u709_20:
 18306     0ACF                     i1l5974:
 18307     0ACF  1FD4               	btfss	controller@error+1,7
 18308     0AD0  2AD2               	goto	u710_21
 18309     0AD1  2AD3               	goto	u710_20
 18310     0AD2                     u710_21:
 18311     0AD2  2AD6               	goto	i1l946
 18312     0AD3                     u710_20:
 18313     0AD3                     i1l5976:
 18314                           
 18315                           ;controller.c: 29:         dutycycle = 0;
 18316     0AD3  01D7               	clrf	_dutycycle
 18317     0AD4  01D8               	clrf	_dutycycle+1
 18318                           
 18319                           ;controller.c: 30:     } else if (dutycycle < 0) {
 18320     0AD5  2AD6               	goto	i1l5980
 18321     0AD6                     i1l946:
 18322     0AD6                     i1l5980:
 18323                           
 18324                           ;controller.c: 34:     pwm_fan_LoadDutyValue(dutycycle);
 18325     0AD6  0858               	movf	_dutycycle+1,w
 18326     0AD7  00F1               	movwf	pwm_fan_LoadDutyValue@dutyValue+1
 18327     0AD8  0857               	movf	_dutycycle,w
 18328     0AD9  00F0               	movwf	pwm_fan_LoadDutyValue@dutyValue
 18329     0ADA  319F  271E  3189   	fcall	_pwm_fan_LoadDutyValue
 18330     0ADD                     i1l948:
 18331     0ADD  0008               	return
 18332     0ADE                     __end_of_controller:
 18333                           
 18334                           	psect	text73
 18335     175C                     __ptext73:	
 18336 ;; *************** function i1___xxtofl *****************
 18337 ;; Defined at:
 18338 ;;		line 10 in file "C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\xxtofl.c"
 18339 ;; Parameters:    Size  Location     Type
 18340 ;;  sign            1    wreg     unsigned char 
 18341 ;;  val             4    0[COMMON] long 
 18342 ;; Auto vars:     Size  Location     Type
 18343 ;;  sign            1    8[COMMON] unsigned char 
 18344 ;;  arg             4   10[COMMON] unsigned long 
 18345 ;;  exp             1    9[COMMON] unsigned char 
 18346 ;; Return value:  Size  Location     Type
 18347 ;;                  4    0[COMMON] unsigned char 
 18348 ;; Registers used:
 18349 ;;		wreg, status,2, status,0
 18350 ;; Tracked objects:
 18351 ;;		On entry : 0/0
 18352 ;;		On exit  : 0/0
 18353 ;;		Unchanged: 0/0
 18354 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 18355 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18356 ;;      Locals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18357 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18358 ;;      Totals:        14       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18359 ;;Total ram usage:       14 bytes
 18360 ;; Hardware stack levels used: 1
 18361 ;; This function calls:
 18362 ;;		Nothing
 18363 ;; This function is called by:
 18364 ;;		_controller
 18365 ;; This function uses a non-reentrant model
 18366 ;;
 18367                           
 18368     175C                     i1___xxtofl:	
 18369                           ;psect for function i1___xxtofl
 18370                           
 18371                           
 18372                           ;incstack = 0
 18373                           ; Regs used in i1___xxtofl: [wreg+status,2+status,0]
 18374                           ;i1___xxtofl@sign stored from wreg
 18375     175C  00F8               	movwf	i1___xxtofl@sign
 18376     175D                     i1l5606:
 18377     175D  0878               	movf	i1___xxtofl@sign,w
 18378     175E  1903               	btfsc	3,2
 18379     175F  2F61               	goto	u675_21
 18380     1760  2F62               	goto	u675_20
 18381     1761                     u675_21:
 18382     1761  2F76               	goto	i1l5612
 18383     1762                     u675_20:
 18384     1762                     i1l5608:
 18385     1762  1FF3               	btfss	i1___xxtofl@val+3,7
 18386     1763  2F65               	goto	u676_21
 18387     1764  2F66               	goto	u676_20
 18388     1765                     u676_21:
 18389     1765  2F76               	goto	i1l5612
 18390     1766                     u676_20:
 18391     1766                     i1l5610:
 18392     1766  0970               	comf	i1___xxtofl@val,w
 18393     1767  00FA               	movwf	i1___xxtofl@arg
 18394     1768  0971               	comf	i1___xxtofl@val+1,w
 18395     1769  00FB               	movwf	i1___xxtofl@arg+1
 18396     176A  0972               	comf	i1___xxtofl@val+2,w
 18397     176B  00FC               	movwf	i1___xxtofl@arg+2
 18398     176C  0973               	comf	i1___xxtofl@val+3,w
 18399     176D  00FD               	movwf	i1___xxtofl@arg+3
 18400     176E  0AFA               	incf	i1___xxtofl@arg,f
 18401     176F  1903               	skipnz
 18402     1770  0AFB               	incf	i1___xxtofl@arg+1,f
 18403     1771  1903               	skipnz
 18404     1772  0AFC               	incf	i1___xxtofl@arg+2,f
 18405     1773  1903               	skipnz
 18406     1774  0AFD               	incf	i1___xxtofl@arg+3,f
 18407     1775  2F7E               	goto	i1l1649
 18408     1776                     i1l5612:
 18409     1776  0873               	movf	i1___xxtofl@val+3,w
 18410     1777  00FD               	movwf	i1___xxtofl@arg+3
 18411     1778  0872               	movf	i1___xxtofl@val+2,w
 18412     1779  00FC               	movwf	i1___xxtofl@arg+2
 18413     177A  0871               	movf	i1___xxtofl@val+1,w
 18414     177B  00FB               	movwf	i1___xxtofl@arg+1
 18415     177C  0870               	movf	i1___xxtofl@val,w
 18416     177D  00FA               	movwf	i1___xxtofl@arg
 18417     177E                     i1l1649:
 18418     177E  0873               	movf	i1___xxtofl@val+3,w
 18419     177F  0472               	iorwf	i1___xxtofl@val+2,w
 18420     1780  0471               	iorwf	i1___xxtofl@val+1,w
 18421     1781  0470               	iorwf	i1___xxtofl@val,w
 18422     1782  1D03               	skipz
 18423     1783  2F85               	goto	u677_21
 18424     1784  2F86               	goto	u677_20
 18425     1785                     u677_21:
 18426     1785  2F8F               	goto	i1l1650
 18427     1786                     u677_20:
 18428     1786                     i1l5614:
 18429     1786  3000               	movlw	0
 18430     1787  00F3               	movwf	?i1___xxtofl+3
 18431     1788  3000               	movlw	0
 18432     1789  00F2               	movwf	?i1___xxtofl+2
 18433     178A  3000               	movlw	0
 18434     178B  00F1               	movwf	?i1___xxtofl+1
 18435     178C  3000               	movlw	0
 18436     178D  00F0               	movwf	?i1___xxtofl
 18437     178E  2FFF               	goto	i1l1651
 18438     178F                     i1l1650:
 18439     178F  3096               	movlw	150
 18440     1790  00F9               	movwf	i1___xxtofl@exp
 18441     1791  2F9B               	goto	i1l5620
 18442     1792                     i1l5618:
 18443     1792  3001               	movlw	1
 18444     1793  07F9               	addwf	i1___xxtofl@exp,f
 18445     1794  3001               	movlw	1
 18446     1795                     u678_25:
 18447     1795  36FD               	lsrf	i1___xxtofl@arg+3,f
 18448     1796  0CFC               	rrf	i1___xxtofl@arg+2,f
 18449     1797  0CFB               	rrf	i1___xxtofl@arg+1,f
 18450     1798  0CFA               	rrf	i1___xxtofl@arg,f
 18451     1799  0B89               	decfsz	9,f
 18452     179A  2F95               	goto	u678_25
 18453     179B                     i1l5620:
 18454     179B  30FE               	movlw	254
 18455     179C  057D               	andwf	i1___xxtofl@arg+3,w
 18456     179D  1D03               	btfss	3,2
 18457     179E  2FA0               	goto	u679_21
 18458     179F  2FA1               	goto	u679_20
 18459     17A0                     u679_21:
 18460     17A0  2F92               	goto	i1l5618
 18461     17A1                     u679_20:
 18462     17A1  2FB1               	goto	i1l5624
 18463     17A2                     i1l5622:
 18464     17A2  3001               	movlw	1
 18465     17A3  07F9               	addwf	i1___xxtofl@exp,f
 18466     17A4  3001               	movlw	1
 18467     17A5  07FA               	addwf	i1___xxtofl@arg,f
 18468     17A6  3000               	movlw	0
 18469     17A7  3DFB               	addwfc	i1___xxtofl@arg+1,f
 18470     17A8  3DFC               	addwfc	i1___xxtofl@arg+2,f
 18471     17A9  3DFD               	addwfc	i1___xxtofl@arg+3,f
 18472     17AA  3001               	movlw	1
 18473     17AB                     u680_25:
 18474     17AB  36FD               	lsrf	i1___xxtofl@arg+3,f
 18475     17AC  0CFC               	rrf	i1___xxtofl@arg+2,f
 18476     17AD  0CFB               	rrf	i1___xxtofl@arg+1,f
 18477     17AE  0CFA               	rrf	i1___xxtofl@arg,f
 18478     17AF  0B89               	decfsz	9,f
 18479     17B0  2FAB               	goto	u680_25
 18480     17B1                     i1l5624:
 18481     17B1  30FF               	movlw	255
 18482     17B2  057D               	andwf	i1___xxtofl@arg+3,w
 18483     17B3  1D03               	btfss	3,2
 18484     17B4  2FB6               	goto	u681_21
 18485     17B5  2FB7               	goto	u681_20
 18486     17B6                     u681_21:
 18487     17B6  2FA2               	goto	i1l5622
 18488     17B7                     u681_20:
 18489     17B7  2FC1               	goto	i1l5628
 18490     17B8                     i1l5626:
 18491     17B8  3001               	movlw	1
 18492     17B9  02F9               	subwf	i1___xxtofl@exp,f
 18493     17BA  3001               	movlw	1
 18494     17BB                     u682_25:
 18495     17BB  35FA               	lslf	i1___xxtofl@arg,f
 18496     17BC  0DFB               	rlf	i1___xxtofl@arg+1,f
 18497     17BD  0DFC               	rlf	i1___xxtofl@arg+2,f
 18498     17BE  0DFD               	rlf	i1___xxtofl@arg+3,f
 18499     17BF  0B89               	decfsz	9,f
 18500     17C0  2FBB               	goto	u682_25
 18501     17C1                     i1l5628:
 18502     17C1  1BFC               	btfsc	i1___xxtofl@arg+2,7
 18503     17C2  2FC4               	goto	u683_21
 18504     17C3  2FC5               	goto	u683_20
 18505     17C4                     u683_21:
 18506     17C4  2FCB               	goto	i1l1662
 18507     17C5                     u683_20:
 18508     17C5                     i1l5630:
 18509     17C5  3002               	movlw	2
 18510     17C6  0279               	subwf	i1___xxtofl@exp,w
 18511     17C7  1803               	skipnc
 18512     17C8  2FCA               	goto	u684_21
 18513     17C9  2FCB               	goto	u684_20
 18514     17CA                     u684_21:
 18515     17CA  2FB8               	goto	i1l5626
 18516     17CB                     u684_20:
 18517     17CB                     i1l1662:
 18518     17CB  1879               	btfsc	i1___xxtofl@exp,0
 18519     17CC  2FCE               	goto	u685_21
 18520     17CD  2FCF               	goto	u685_20
 18521     17CE                     u685_21:
 18522     17CE  2FD7               	goto	i1l1663
 18523     17CF                     u685_20:
 18524     17CF                     i1l5632:
 18525     17CF  30FF               	movlw	255
 18526     17D0  05FA               	andwf	i1___xxtofl@arg,f
 18527     17D1  30FF               	movlw	255
 18528     17D2  05FB               	andwf	i1___xxtofl@arg+1,f
 18529     17D3  307F               	movlw	127
 18530     17D4  05FC               	andwf	i1___xxtofl@arg+2,f
 18531     17D5  30FF               	movlw	255
 18532     17D6  05FD               	andwf	i1___xxtofl@arg+3,f
 18533     17D7                     i1l1663:
 18534     17D7  1003               	clrc
 18535     17D8  0CF9               	rrf	i1___xxtofl@exp,f
 18536     17D9                     i1l5634:
 18537     17D9  0879               	movf	i1___xxtofl@exp,w
 18538     17DA  00F4               	movwf	??i1___xxtofl
 18539     17DB  01F5               	clrf	??i1___xxtofl+1
 18540     17DC  01F6               	clrf	??i1___xxtofl+2
 18541     17DD  01F7               	clrf	??i1___xxtofl+3
 18542     17DE  3018               	movlw	24
 18543     17DF                     u686_25:
 18544     17DF  35F4               	lslf	??i1___xxtofl,f
 18545     17E0  0DF5               	rlf	??i1___xxtofl+1,f
 18546     17E1  0DF6               	rlf	??i1___xxtofl+2,f
 18547     17E2  0DF7               	rlf	??i1___xxtofl+3,f
 18548     17E3                     u686_20:
 18549     17E3  0B89               	decfsz	9,f
 18550     17E4  2FDF               	goto	u686_25
 18551     17E5  0874               	movf	??i1___xxtofl,w
 18552     17E6  04FA               	iorwf	i1___xxtofl@arg,f
 18553     17E7  0875               	movf	??i1___xxtofl+1,w
 18554     17E8  04FB               	iorwf	i1___xxtofl@arg+1,f
 18555     17E9  0876               	movf	??i1___xxtofl+2,w
 18556     17EA  04FC               	iorwf	i1___xxtofl@arg+2,f
 18557     17EB  0877               	movf	??i1___xxtofl+3,w
 18558     17EC  04FD               	iorwf	i1___xxtofl@arg+3,f
 18559     17ED                     i1l5636:
 18560     17ED  0878               	movf	i1___xxtofl@sign,w
 18561     17EE  1903               	btfsc	3,2
 18562     17EF  2FF1               	goto	u687_21
 18563     17F0  2FF2               	goto	u687_20
 18564     17F1                     u687_21:
 18565     17F1  2FF7               	goto	i1l5642
 18566     17F2                     u687_20:
 18567     17F2                     i1l5638:
 18568     17F2  1FF3               	btfss	i1___xxtofl@val+3,7
 18569     17F3  2FF5               	goto	u688_21
 18570     17F4  2FF6               	goto	u688_20
 18571     17F5                     u688_21:
 18572     17F5  2FF7               	goto	i1l5642
 18573     17F6                     u688_20:
 18574     17F6                     i1l5640:
 18575     17F6  17FD               	bsf	i1___xxtofl@arg+3,7
 18576     17F7                     i1l5642:
 18577     17F7  087D               	movf	i1___xxtofl@arg+3,w
 18578     17F8  00F3               	movwf	?i1___xxtofl+3
 18579     17F9  087C               	movf	i1___xxtofl@arg+2,w
 18580     17FA  00F2               	movwf	?i1___xxtofl+2
 18581     17FB  087B               	movf	i1___xxtofl@arg+1,w
 18582     17FC  00F1               	movwf	?i1___xxtofl+1
 18583     17FD  087A               	movf	i1___xxtofl@arg,w
 18584     17FE  00F0               	movwf	?i1___xxtofl
 18585     17FF                     i1l1651:
 18586     17FF  0008               	return
 18587     1800                     __end_ofi1___xxtofl:
 18588                           
 18589                           	psect	text74
 18590     02CE                     __ptext74:	
 18591 ;; *************** function i1___flmul *****************
 18592 ;; Defined at:
 18593 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\sprcmul.c"
 18594 ;; Parameters:    Size  Location     Type
 18595 ;;  b               4    0[BANK0 ] unsigned char 
 18596 ;;  a               4    4[BANK0 ] unsigned char 
 18597 ;; Auto vars:     Size  Location     Type
 18598 ;;  prod            4   20[BANK0 ] struct .
 18599 ;;  grs             4   14[BANK0 ] unsigned long 
 18600 ;;  temp            2   24[BANK0 ] struct .
 18601 ;;  bexp            1   19[BANK0 ] unsigned char 
 18602 ;;  aexp            1   18[BANK0 ] unsigned char 
 18603 ;;  sign            1   13[BANK0 ] unsigned char 
 18604 ;; Return value:  Size  Location     Type
 18605 ;;                  4    0[BANK0 ] unsigned char 
 18606 ;; Registers used:
 18607 ;;		wreg, status,2, status,0, pclath, cstack
 18608 ;; Tracked objects:
 18609 ;;		On entry : 0/0
 18610 ;;		On exit  : 0/0
 18611 ;;		Unchanged: 0/0
 18612 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 18613 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18614 ;;      Locals:         0      13       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18615 ;;      Temps:          0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18616 ;;      Totals:         0      26       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18617 ;;Total ram usage:       26 bytes
 18618 ;; Hardware stack levels used: 1
 18619 ;; Hardware stack levels required when called: 1
 18620 ;; This function calls:
 18621 ;;		i1__Umul8_16
 18622 ;; This function is called by:
 18623 ;;		_controller
 18624 ;; This function uses a non-reentrant model
 18625 ;;
 18626                           
 18627     02CE                     i1___flmul:	
 18628                           ;psect for function i1___flmul
 18629                           
 18630     02CE                     i1l5466:	
 18631                           ;incstack = 0
 18632                           ; Regs used in i1___flmul: [wreg+status,2+status,0+pclath+cstack]
 18633                           
 18634     02CE  0020               	movlb	0	; select bank0
 18635     02CF  0823               	movf	i1___flmul@b+3,w
 18636     02D0  3980               	andlw	128
 18637     02D1  00AD               	movwf	i1___flmul@sign
 18638     02D2                     i1l5468:
 18639     02D2  3523               	lslf	i1___flmul@b+3,w
 18640     02D3  00B3               	movwf	i1___flmul@bexp
 18641     02D4                     i1l5470:
 18642     02D4  1FA2               	btfss	i1___flmul@b+2,7
 18643     02D5  2AD7               	goto	u648_21
 18644     02D6  2AD8               	goto	u648_20
 18645     02D7                     u648_21:
 18646     02D7  2AD9               	goto	i1l5474
 18647     02D8                     u648_20:
 18648     02D8                     i1l5472:
 18649     02D8  1433               	bsf	i1___flmul@bexp,0
 18650     02D9                     i1l5474:
 18651     02D9  0833               	movf	i1___flmul@bexp,w
 18652     02DA  1903               	btfsc	3,2
 18653     02DB  2ADD               	goto	u649_21
 18654     02DC  2ADE               	goto	u649_20
 18655     02DD                     u649_21:
 18656     02DD  2AED               	goto	i1l5482
 18657     02DE                     u649_20:
 18658     02DE                     i1l5476:
 18659     02DE  0A33               	incf	i1___flmul@bexp,w
 18660     02DF  1D03               	btfss	3,2
 18661     02E0  2AE2               	goto	u650_21
 18662     02E1  2AE3               	goto	u650_20
 18663     02E2                     u650_21:
 18664     02E2  2AEB               	goto	i1l5480
 18665     02E3                     u650_20:
 18666     02E3                     i1l5478:
 18667     02E3  3000               	movlw	0
 18668     02E4  00A3               	movwf	i1___flmul@b+3
 18669     02E5  3000               	movlw	0
 18670     02E6  00A2               	movwf	i1___flmul@b+2
 18671     02E7  3000               	movlw	0
 18672     02E8  00A1               	movwf	i1___flmul@b+1
 18673     02E9  3000               	movlw	0
 18674     02EA  00A0               	movwf	i1___flmul@b
 18675     02EB                     i1l5480:
 18676     02EB  17A2               	bsf	i1___flmul@b+2,7
 18677     02EC  2AF5               	goto	i1l5484
 18678     02ED                     i1l5482:
 18679     02ED  3000               	movlw	0
 18680     02EE  00A3               	movwf	i1___flmul@b+3
 18681     02EF  3000               	movlw	0
 18682     02F0  00A2               	movwf	i1___flmul@b+2
 18683     02F1  3000               	movlw	0
 18684     02F2  00A1               	movwf	i1___flmul@b+1
 18685     02F3  3000               	movlw	0
 18686     02F4  00A0               	movwf	i1___flmul@b
 18687     02F5                     i1l5484:
 18688     02F5  0827               	movf	i1___flmul@a+3,w
 18689     02F6  3980               	andlw	128
 18690     02F7  06AD               	xorwf	i1___flmul@sign,f
 18691     02F8                     i1l5486:
 18692     02F8  3527               	lslf	i1___flmul@a+3,w
 18693     02F9  00B2               	movwf	i1___flmul@aexp
 18694     02FA                     i1l5488:
 18695     02FA  1FA6               	btfss	i1___flmul@a+2,7
 18696     02FB  2AFD               	goto	u651_21
 18697     02FC  2AFE               	goto	u651_20
 18698     02FD                     u651_21:
 18699     02FD  2AFF               	goto	i1l5492
 18700     02FE                     u651_20:
 18701     02FE                     i1l5490:
 18702     02FE  1432               	bsf	i1___flmul@aexp,0
 18703     02FF                     i1l5492:
 18704     02FF  0832               	movf	i1___flmul@aexp,w
 18705     0300  1903               	btfsc	3,2
 18706     0301  2B03               	goto	u652_21
 18707     0302  2B04               	goto	u652_20
 18708     0303                     u652_21:
 18709     0303  2B13               	goto	i1l5500
 18710     0304                     u652_20:
 18711     0304                     i1l5494:
 18712     0304  0A32               	incf	i1___flmul@aexp,w
 18713     0305  1D03               	btfss	3,2
 18714     0306  2B08               	goto	u653_21
 18715     0307  2B09               	goto	u653_20
 18716     0308                     u653_21:
 18717     0308  2B11               	goto	i1l5498
 18718     0309                     u653_20:
 18719     0309                     i1l5496:
 18720     0309  3000               	movlw	0
 18721     030A  00A7               	movwf	i1___flmul@a+3
 18722     030B  3000               	movlw	0
 18723     030C  00A6               	movwf	i1___flmul@a+2
 18724     030D  3000               	movlw	0
 18725     030E  00A5               	movwf	i1___flmul@a+1
 18726     030F  3000               	movlw	0
 18727     0310  00A4               	movwf	i1___flmul@a
 18728     0311                     i1l5498:
 18729     0311  17A6               	bsf	i1___flmul@a+2,7
 18730     0312  2B1B               	goto	i1l5502
 18731     0313                     i1l5500:
 18732     0313  3000               	movlw	0
 18733     0314  00A7               	movwf	i1___flmul@a+3
 18734     0315  3000               	movlw	0
 18735     0316  00A6               	movwf	i1___flmul@a+2
 18736     0317  3000               	movlw	0
 18737     0318  00A5               	movwf	i1___flmul@a+1
 18738     0319  3000               	movlw	0
 18739     031A  00A4               	movwf	i1___flmul@a
 18740     031B                     i1l5502:
 18741     031B  0832               	movf	i1___flmul@aexp,w
 18742     031C  1903               	btfsc	3,2
 18743     031D  2B1F               	goto	u654_21
 18744     031E  2B20               	goto	u654_20
 18745     031F                     u654_21:
 18746     031F  2B25               	goto	i1l5506
 18747     0320                     u654_20:
 18748     0320                     i1l5504:
 18749     0320  0833               	movf	i1___flmul@bexp,w
 18750     0321  1D03               	btfss	3,2
 18751     0322  2B24               	goto	u655_21
 18752     0323  2B25               	goto	u655_20
 18753     0324                     u655_21:
 18754     0324  2B2E               	goto	i1l5510
 18755     0325                     u655_20:
 18756     0325                     i1l5506:
 18757     0325  3000               	movlw	0
 18758     0326  00A3               	movwf	?i1___flmul+3
 18759     0327  3000               	movlw	0
 18760     0328  00A2               	movwf	?i1___flmul+2
 18761     0329  3000               	movlw	0
 18762     032A  00A1               	movwf	?i1___flmul+1
 18763     032B  3000               	movlw	0
 18764     032C  00A0               	movwf	?i1___flmul
 18765     032D  2D08               	goto	i1l1605
 18766     032E                     i1l5510:
 18767     032E  0820               	movf	i1___flmul@b,w
 18768     032F  00F0               	movwf	i1__Umul8_16@multiplicand
 18769     0330  0826               	movf	i1___flmul@a+2,w
 18770     0331  3190  2040  3182   	fcall	i1__Umul8_16
 18771     0334  0871               	movf	?i1__Umul8_16+1,w
 18772     0335  0020               	movlb	0	; select bank0
 18773     0336  00B9               	movwf	i1___flmul@temp+1
 18774     0337  0870               	movf	?i1__Umul8_16,w
 18775     0338  00B8               	movwf	i1___flmul@temp
 18776     0339                     i1l5512:
 18777     0339  0838               	movf	i1___flmul@temp,w
 18778     033A  00A8               	movwf	??i1___flmul
 18779     033B  01A9               	clrf	??i1___flmul+1
 18780     033C  01AA               	clrf	??i1___flmul+2
 18781     033D  01AB               	clrf	??i1___flmul+3
 18782     033E  082B               	movf	??i1___flmul+3,w
 18783     033F  00B1               	movwf	i1___flmul@grs+3
 18784     0340  082A               	movf	??i1___flmul+2,w
 18785     0341  00B0               	movwf	i1___flmul@grs+2
 18786     0342  0829               	movf	??i1___flmul+1,w
 18787     0343  00AF               	movwf	i1___flmul@grs+1
 18788     0344  0828               	movf	??i1___flmul,w
 18789     0345  00AE               	movwf	i1___flmul@grs
 18790     0346                     i1l5514:
 18791     0346  0839               	movf	i1___flmul@temp+1,w
 18792     0347  00A8               	movwf	??i1___flmul
 18793     0348  01A9               	clrf	??i1___flmul+1
 18794     0349  01AA               	clrf	??i1___flmul+2
 18795     034A  01AB               	clrf	??i1___flmul+3
 18796     034B  082B               	movf	??i1___flmul+3,w
 18797     034C  00B7               	movwf	i1___flmul@prod+3
 18798     034D  082A               	movf	??i1___flmul+2,w
 18799     034E  00B6               	movwf	i1___flmul@prod+2
 18800     034F  0829               	movf	??i1___flmul+1,w
 18801     0350  00B5               	movwf	i1___flmul@prod+1
 18802     0351  0828               	movf	??i1___flmul,w
 18803     0352  00B4               	movwf	i1___flmul@prod
 18804     0353  0821               	movf	i1___flmul@b+1,w
 18805     0354  00F0               	movwf	i1__Umul8_16@multiplicand
 18806     0355  0825               	movf	i1___flmul@a+1,w
 18807     0356  3190  2040  3182   	fcall	i1__Umul8_16
 18808     0359  0871               	movf	?i1__Umul8_16+1,w
 18809     035A  0020               	movlb	0	; select bank0
 18810     035B  00B9               	movwf	i1___flmul@temp+1
 18811     035C  0870               	movf	?i1__Umul8_16,w
 18812     035D  00B8               	movwf	i1___flmul@temp
 18813     035E                     i1l5516:
 18814     035E  0838               	movf	i1___flmul@temp,w
 18815     035F  00A8               	movwf	??i1___flmul
 18816     0360  01A9               	clrf	??i1___flmul+1
 18817     0361  01AA               	clrf	??i1___flmul+2
 18818     0362  01AB               	clrf	??i1___flmul+3
 18819     0363  0828               	movf	??i1___flmul,w
 18820     0364  07AE               	addwf	i1___flmul@grs,f
 18821     0365  0829               	movf	??i1___flmul+1,w
 18822     0366  3DAF               	addwfc	i1___flmul@grs+1,f
 18823     0367  082A               	movf	??i1___flmul+2,w
 18824     0368  3DB0               	addwfc	i1___flmul@grs+2,f
 18825     0369  082B               	movf	??i1___flmul+3,w
 18826     036A  3DB1               	addwfc	i1___flmul@grs+3,f
 18827     036B                     i1l5518:
 18828     036B  0839               	movf	i1___flmul@temp+1,w
 18829     036C  00A8               	movwf	??i1___flmul
 18830     036D  01A9               	clrf	??i1___flmul+1
 18831     036E  01AA               	clrf	??i1___flmul+2
 18832     036F  01AB               	clrf	??i1___flmul+3
 18833     0370  0828               	movf	??i1___flmul,w
 18834     0371  07B4               	addwf	i1___flmul@prod,f
 18835     0372  0829               	movf	??i1___flmul+1,w
 18836     0373  3DB5               	addwfc	i1___flmul@prod+1,f
 18837     0374  082A               	movf	??i1___flmul+2,w
 18838     0375  3DB6               	addwfc	i1___flmul@prod+2,f
 18839     0376  082B               	movf	??i1___flmul+3,w
 18840     0377  3DB7               	addwfc	i1___flmul@prod+3,f
 18841     0378  0822               	movf	i1___flmul@b+2,w
 18842     0379  00F0               	movwf	i1__Umul8_16@multiplicand
 18843     037A  0824               	movf	i1___flmul@a,w
 18844     037B  3190  2040  3182   	fcall	i1__Umul8_16
 18845     037E  0871               	movf	?i1__Umul8_16+1,w
 18846     037F  0020               	movlb	0	; select bank0
 18847     0380  00B9               	movwf	i1___flmul@temp+1
 18848     0381  0870               	movf	?i1__Umul8_16,w
 18849     0382  00B8               	movwf	i1___flmul@temp
 18850     0383                     i1l5520:
 18851     0383  0838               	movf	i1___flmul@temp,w
 18852     0384  00A8               	movwf	??i1___flmul
 18853     0385  01A9               	clrf	??i1___flmul+1
 18854     0386  01AA               	clrf	??i1___flmul+2
 18855     0387  01AB               	clrf	??i1___flmul+3
 18856     0388  0828               	movf	??i1___flmul,w
 18857     0389  07AE               	addwf	i1___flmul@grs,f
 18858     038A  0829               	movf	??i1___flmul+1,w
 18859     038B  3DAF               	addwfc	i1___flmul@grs+1,f
 18860     038C  082A               	movf	??i1___flmul+2,w
 18861     038D  3DB0               	addwfc	i1___flmul@grs+2,f
 18862     038E  082B               	movf	??i1___flmul+3,w
 18863     038F  3DB1               	addwfc	i1___flmul@grs+3,f
 18864     0390                     i1l5522:
 18865     0390  0839               	movf	i1___flmul@temp+1,w
 18866     0391  00A8               	movwf	??i1___flmul
 18867     0392  01A9               	clrf	??i1___flmul+1
 18868     0393  01AA               	clrf	??i1___flmul+2
 18869     0394  01AB               	clrf	??i1___flmul+3
 18870     0395  0828               	movf	??i1___flmul,w
 18871     0396  07B4               	addwf	i1___flmul@prod,f
 18872     0397  0829               	movf	??i1___flmul+1,w
 18873     0398  3DB5               	addwfc	i1___flmul@prod+1,f
 18874     0399  082A               	movf	??i1___flmul+2,w
 18875     039A  3DB6               	addwfc	i1___flmul@prod+2,f
 18876     039B  082B               	movf	??i1___flmul+3,w
 18877     039C  3DB7               	addwfc	i1___flmul@prod+3,f
 18878     039D                     i1l5524:
 18879     039D  3008               	movlw	8
 18880     039E                     u656_25:
 18881     039E  35AE               	lslf	i1___flmul@grs,f
 18882     039F  0DAF               	rlf	i1___flmul@grs+1,f
 18883     03A0  0DB0               	rlf	i1___flmul@grs+2,f
 18884     03A1  0DB1               	rlf	i1___flmul@grs+3,f
 18885     03A2  0B89               	decfsz	9,f
 18886     03A3  2B9E               	goto	u656_25
 18887     03A4                     i1l5526:
 18888     03A4  0821               	movf	i1___flmul@b+1,w
 18889     03A5  00F0               	movwf	i1__Umul8_16@multiplicand
 18890     03A6  0824               	movf	i1___flmul@a,w
 18891     03A7  3190  2040  3182   	fcall	i1__Umul8_16
 18892     03AA  0871               	movf	?i1__Umul8_16+1,w
 18893     03AB  0020               	movlb	0	; select bank0
 18894     03AC  00B9               	movwf	i1___flmul@temp+1
 18895     03AD  0870               	movf	?i1__Umul8_16,w
 18896     03AE  00B8               	movwf	i1___flmul@temp
 18897     03AF                     i1l5528:
 18898     03AF  0838               	movf	i1___flmul@temp,w
 18899     03B0  07AE               	addwf	i1___flmul@grs,f
 18900     03B1  0839               	movf	i1___flmul@temp+1,w
 18901     03B2  3DAF               	addwfc	i1___flmul@grs+1,f
 18902     03B3  3000               	movlw	0
 18903     03B4  3DB0               	addwfc	i1___flmul@grs+2,f
 18904     03B5  3DB1               	addwfc	i1___flmul@grs+3,f
 18905     03B6                     i1l5530:
 18906     03B6  0820               	movf	i1___flmul@b,w
 18907     03B7  00F0               	movwf	i1__Umul8_16@multiplicand
 18908     03B8  0825               	movf	i1___flmul@a+1,w
 18909     03B9  3190  2040  3182   	fcall	i1__Umul8_16
 18910     03BC  0871               	movf	?i1__Umul8_16+1,w
 18911     03BD  0020               	movlb	0	; select bank0
 18912     03BE  00B9               	movwf	i1___flmul@temp+1
 18913     03BF  0870               	movf	?i1__Umul8_16,w
 18914     03C0  00B8               	movwf	i1___flmul@temp
 18915     03C1                     i1l5532:
 18916     03C1  0838               	movf	i1___flmul@temp,w
 18917     03C2  07AE               	addwf	i1___flmul@grs,f
 18918     03C3  0839               	movf	i1___flmul@temp+1,w
 18919     03C4  3DAF               	addwfc	i1___flmul@grs+1,f
 18920     03C5  3000               	movlw	0
 18921     03C6  3DB0               	addwfc	i1___flmul@grs+2,f
 18922     03C7  3DB1               	addwfc	i1___flmul@grs+3,f
 18923     03C8                     i1l5534:
 18924     03C8  3008               	movlw	8
 18925     03C9                     u657_25:
 18926     03C9  35AE               	lslf	i1___flmul@grs,f
 18927     03CA  0DAF               	rlf	i1___flmul@grs+1,f
 18928     03CB  0DB0               	rlf	i1___flmul@grs+2,f
 18929     03CC  0DB1               	rlf	i1___flmul@grs+3,f
 18930     03CD  0B89               	decfsz	9,f
 18931     03CE  2BC9               	goto	u657_25
 18932     03CF  0820               	movf	i1___flmul@b,w
 18933     03D0  00F0               	movwf	i1__Umul8_16@multiplicand
 18934     03D1  0824               	movf	i1___flmul@a,w
 18935     03D2  3190  2040  3182   	fcall	i1__Umul8_16
 18936     03D5  0871               	movf	?i1__Umul8_16+1,w
 18937     03D6  0020               	movlb	0	; select bank0
 18938     03D7  00B9               	movwf	i1___flmul@temp+1
 18939     03D8  0870               	movf	?i1__Umul8_16,w
 18940     03D9  00B8               	movwf	i1___flmul@temp
 18941     03DA                     i1l5536:
 18942     03DA  0838               	movf	i1___flmul@temp,w
 18943     03DB  07AE               	addwf	i1___flmul@grs,f
 18944     03DC  0839               	movf	i1___flmul@temp+1,w
 18945     03DD  3DAF               	addwfc	i1___flmul@grs+1,f
 18946     03DE  3000               	movlw	0
 18947     03DF  3DB0               	addwfc	i1___flmul@grs+2,f
 18948     03E0  3DB1               	addwfc	i1___flmul@grs+3,f
 18949     03E1                     i1l5538:
 18950     03E1  0821               	movf	i1___flmul@b+1,w
 18951     03E2  00F0               	movwf	i1__Umul8_16@multiplicand
 18952     03E3  0826               	movf	i1___flmul@a+2,w
 18953     03E4  3190  2040  3182   	fcall	i1__Umul8_16
 18954     03E7  0871               	movf	?i1__Umul8_16+1,w
 18955     03E8  0020               	movlb	0	; select bank0
 18956     03E9  00B9               	movwf	i1___flmul@temp+1
 18957     03EA  0870               	movf	?i1__Umul8_16,w
 18958     03EB  00B8               	movwf	i1___flmul@temp
 18959     03EC  0838               	movf	i1___flmul@temp,w
 18960     03ED  07B4               	addwf	i1___flmul@prod,f
 18961     03EE  0839               	movf	i1___flmul@temp+1,w
 18962     03EF  3DB5               	addwfc	i1___flmul@prod+1,f
 18963     03F0  3000               	movlw	0
 18964     03F1  3DB6               	addwfc	i1___flmul@prod+2,f
 18965     03F2  3DB7               	addwfc	i1___flmul@prod+3,f
 18966     03F3                     i1l5540:
 18967     03F3  0822               	movf	i1___flmul@b+2,w
 18968     03F4  00F0               	movwf	i1__Umul8_16@multiplicand
 18969     03F5  0825               	movf	i1___flmul@a+1,w
 18970     03F6  3190  2040  3182   	fcall	i1__Umul8_16
 18971     03F9  0871               	movf	?i1__Umul8_16+1,w
 18972     03FA  0020               	movlb	0	; select bank0
 18973     03FB  00B9               	movwf	i1___flmul@temp+1
 18974     03FC  0870               	movf	?i1__Umul8_16,w
 18975     03FD  00B8               	movwf	i1___flmul@temp
 18976     03FE                     i1l5542:
 18977     03FE  0838               	movf	i1___flmul@temp,w
 18978     03FF  07B4               	addwf	i1___flmul@prod,f
 18979     0400  0839               	movf	i1___flmul@temp+1,w
 18980     0401  3DB5               	addwfc	i1___flmul@prod+1,f
 18981     0402  3000               	movlw	0
 18982     0403  3DB6               	addwfc	i1___flmul@prod+2,f
 18983     0404  3DB7               	addwfc	i1___flmul@prod+3,f
 18984     0405  0822               	movf	i1___flmul@b+2,w
 18985     0406  00F0               	movwf	i1__Umul8_16@multiplicand
 18986     0407  0826               	movf	i1___flmul@a+2,w
 18987     0408  3190  2040  3182   	fcall	i1__Umul8_16
 18988     040B  0871               	movf	?i1__Umul8_16+1,w
 18989     040C  0020               	movlb	0	; select bank0
 18990     040D  00B9               	movwf	i1___flmul@temp+1
 18991     040E  0870               	movf	?i1__Umul8_16,w
 18992     040F  00B8               	movwf	i1___flmul@temp
 18993     0410                     i1l5544:
 18994     0410  0838               	movf	i1___flmul@temp,w
 18995     0411  00A8               	movwf	??i1___flmul
 18996     0412  0839               	movf	i1___flmul@temp+1,w
 18997     0413  00A9               	movwf	??i1___flmul+1
 18998     0414  01AA               	clrf	??i1___flmul+2
 18999     0415  01AB               	clrf	??i1___flmul+3
 19000     0416  3008               	movlw	8
 19001     0417                     u658_25:
 19002     0417  35A8               	lslf	??i1___flmul,f
 19003     0418  0DA9               	rlf	??i1___flmul+1,f
 19004     0419  0DAA               	rlf	??i1___flmul+2,f
 19005     041A  0DAB               	rlf	??i1___flmul+3,f
 19006     041B                     u658_20:
 19007     041B  0B89               	decfsz	9,f
 19008     041C  2C17               	goto	u658_25
 19009     041D  0828               	movf	??i1___flmul,w
 19010     041E  07B4               	addwf	i1___flmul@prod,f
 19011     041F  0829               	movf	??i1___flmul+1,w
 19012     0420  3DB5               	addwfc	i1___flmul@prod+1,f
 19013     0421  082A               	movf	??i1___flmul+2,w
 19014     0422  3DB6               	addwfc	i1___flmul@prod+2,f
 19015     0423  082B               	movf	??i1___flmul+3,w
 19016     0424  3DB7               	addwfc	i1___flmul@prod+3,f
 19017     0425                     i1l5546:
 19018     0425  082E               	movf	i1___flmul@grs,w
 19019     0426  00A8               	movwf	??i1___flmul
 19020     0427  082F               	movf	i1___flmul@grs+1,w
 19021     0428  00A9               	movwf	??i1___flmul+1
 19022     0429  0830               	movf	i1___flmul@grs+2,w
 19023     042A  00AA               	movwf	??i1___flmul+2
 19024     042B  0831               	movf	i1___flmul@grs+3,w
 19025     042C  00AB               	movwf	??i1___flmul+3
 19026     042D  3018               	movlw	24
 19027     042E                     u659_25:
 19028     042E  36AB               	lsrf	??i1___flmul+3,f
 19029     042F  0CAA               	rrf	??i1___flmul+2,f
 19030     0430  0CA9               	rrf	??i1___flmul+1,f
 19031     0431  0CA8               	rrf	??i1___flmul,f
 19032     0432                     u659_20:
 19033     0432  0B89               	decfsz	9,f
 19034     0433  2C2E               	goto	u659_25
 19035     0434  0828               	movf	??i1___flmul,w
 19036     0435  07B4               	addwf	i1___flmul@prod,f
 19037     0436  0829               	movf	??i1___flmul+1,w
 19038     0437  3DB5               	addwfc	i1___flmul@prod+1,f
 19039     0438  082A               	movf	??i1___flmul+2,w
 19040     0439  3DB6               	addwfc	i1___flmul@prod+2,f
 19041     043A  082B               	movf	??i1___flmul+3,w
 19042     043B  3DB7               	addwfc	i1___flmul@prod+3,f
 19043     043C                     i1l5548:
 19044     043C  3008               	movlw	8
 19045     043D                     u660_25:
 19046     043D  35AE               	lslf	i1___flmul@grs,f
 19047     043E  0DAF               	rlf	i1___flmul@grs+1,f
 19048     043F  0DB0               	rlf	i1___flmul@grs+2,f
 19049     0440  0DB1               	rlf	i1___flmul@grs+3,f
 19050     0441  0B89               	decfsz	9,f
 19051     0442  2C3D               	goto	u660_25
 19052     0443                     i1l5550:
 19053     0443  0833               	movf	i1___flmul@bexp,w
 19054     0444  0732               	addwf	i1___flmul@aexp,w
 19055     0445  00A8               	movwf	??i1___flmul
 19056     0446  01A9               	clrf	??i1___flmul+1
 19057     0447  0DA9               	rlf	??i1___flmul+1,f
 19058     0448  0828               	movf	??i1___flmul,w
 19059     0449  3E82               	addlw	130
 19060     044A  00B8               	movwf	i1___flmul@temp
 19061     044B  30FF               	movlw	255
 19062     044C  3D29               	addwfc	??i1___flmul+1,w
 19063     044D  00B9               	movwf	i1___flmul@temp+1
 19064     044E  2C66               	goto	i1l5562
 19065     044F                     i1l5552:
 19066     044F  3001               	movlw	1
 19067     0450                     u661_25:
 19068     0450  35B4               	lslf	i1___flmul@prod,f
 19069     0451  0DB5               	rlf	i1___flmul@prod+1,f
 19070     0452  0DB6               	rlf	i1___flmul@prod+2,f
 19071     0453  0DB7               	rlf	i1___flmul@prod+3,f
 19072     0454  0B89               	decfsz	9,f
 19073     0455  2C50               	goto	u661_25
 19074     0456                     i1l5554:
 19075     0456  1FB1               	btfss	i1___flmul@grs+3,7
 19076     0457  2C59               	goto	u662_21
 19077     0458  2C5A               	goto	u662_20
 19078     0459                     u662_21:
 19079     0459  2C5B               	goto	i1l5558
 19080     045A                     u662_20:
 19081     045A                     i1l5556:
 19082     045A  1434               	bsf	i1___flmul@prod,0
 19083     045B                     i1l5558:
 19084     045B  3001               	movlw	1
 19085     045C                     u663_25:
 19086     045C  35AE               	lslf	i1___flmul@grs,f
 19087     045D  0DAF               	rlf	i1___flmul@grs+1,f
 19088     045E  0DB0               	rlf	i1___flmul@grs+2,f
 19089     045F  0DB1               	rlf	i1___flmul@grs+3,f
 19090     0460  0B89               	decfsz	9,f
 19091     0461  2C5C               	goto	u663_25
 19092     0462                     i1l5560:
 19093     0462  30FF               	movlw	255
 19094     0463  07B8               	addwf	i1___flmul@temp,f
 19095     0464  30FF               	movlw	255
 19096     0465  3DB9               	addwfc	i1___flmul@temp+1,f
 19097     0466                     i1l5562:
 19098     0466  1FB6               	btfss	i1___flmul@prod+2,7
 19099     0467  2C69               	goto	u664_21
 19100     0468  2C6A               	goto	u664_20
 19101     0469                     u664_21:
 19102     0469  2C4F               	goto	i1l5552
 19103     046A                     u664_20:
 19104     046A                     i1l5564:
 19105     046A  01B2               	clrf	i1___flmul@aexp
 19106     046B                     i1l5566:
 19107     046B  1FB1               	btfss	i1___flmul@grs+3,7
 19108     046C  2C6E               	goto	u665_21
 19109     046D  2C6F               	goto	u665_20
 19110     046E                     u665_21:
 19111     046E  2C8B               	goto	i1l5574
 19112     046F                     u665_20:
 19113     046F                     i1l5568:
 19114     046F  30FF               	movlw	255
 19115     0470  052E               	andwf	i1___flmul@grs,w
 19116     0471  00A8               	movwf	??i1___flmul
 19117     0472  30FF               	movlw	255
 19118     0473  052F               	andwf	i1___flmul@grs+1,w
 19119     0474  00A9               	movwf	??i1___flmul+1
 19120     0475  30FF               	movlw	255
 19121     0476  0530               	andwf	i1___flmul@grs+2,w
 19122     0477  00AA               	movwf	??i1___flmul+2
 19123     0478  307F               	movlw	127
 19124     0479  0531               	andwf	i1___flmul@grs+3,w
 19125     047A  00AB               	movwf	??i1___flmul+3
 19126     047B  082B               	movf	??i1___flmul+3,w
 19127     047C  042A               	iorwf	??i1___flmul+2,w
 19128     047D  0429               	iorwf	??i1___flmul+1,w
 19129     047E  0428               	iorwf	??i1___flmul,w
 19130     047F  1903               	skipnz
 19131     0480  2C82               	goto	u666_21
 19132     0481  2C83               	goto	u666_20
 19133     0482                     u666_21:
 19134     0482  2C86               	goto	i1l1611
 19135     0483                     u666_20:
 19136     0483                     i1l5570:
 19137     0483  3001               	movlw	1
 19138     0484  00B2               	movwf	i1___flmul@aexp
 19139     0485  2C8B               	goto	i1l5574
 19140     0486                     i1l1611:
 19141     0486  1C34               	btfss	i1___flmul@prod,0
 19142     0487  2C89               	goto	u667_21
 19143     0488  2C8A               	goto	u667_20
 19144     0489                     u667_21:
 19145     0489  2C8B               	goto	i1l5574
 19146     048A                     u667_20:
 19147     048A  2C83               	goto	i1l5570
 19148     048B                     i1l5574:
 19149     048B  0832               	movf	i1___flmul@aexp,w
 19150     048C  1903               	btfsc	3,2
 19151     048D  2C8F               	goto	u668_21
 19152     048E  2C90               	goto	u668_20
 19153     048F                     u668_21:
 19154     048F  2CB6               	goto	i1l5584
 19155     0490                     u668_20:
 19156     0490                     i1l5576:
 19157     0490  3001               	movlw	1
 19158     0491  07B4               	addwf	i1___flmul@prod,f
 19159     0492  3000               	movlw	0
 19160     0493  3DB5               	addwfc	i1___flmul@prod+1,f
 19161     0494  3DB6               	addwfc	i1___flmul@prod+2,f
 19162     0495  3DB7               	addwfc	i1___flmul@prod+3,f
 19163     0496                     i1l5578:
 19164     0496  1C37               	btfss	i1___flmul@prod+3,0
 19165     0497  2C99               	goto	u669_21
 19166     0498  2C9A               	goto	u669_20
 19167     0499                     u669_21:
 19168     0499  2CB6               	goto	i1l5584
 19169     049A                     u669_20:
 19170     049A                     i1l5580:
 19171     049A  0834               	movf	i1___flmul@prod,w
 19172     049B  00A8               	movwf	??i1___flmul
 19173     049C  0835               	movf	i1___flmul@prod+1,w
 19174     049D  00A9               	movwf	??i1___flmul+1
 19175     049E  0836               	movf	i1___flmul@prod+2,w
 19176     049F  00AA               	movwf	??i1___flmul+2
 19177     04A0  0837               	movf	i1___flmul@prod+3,w
 19178     04A1  00AB               	movwf	??i1___flmul+3
 19179     04A2  3001               	movlw	1
 19180     04A3  00AC               	movwf	??i1___flmul+4
 19181     04A4                     u670_25:
 19182     04A4  37AB               	asrf	??i1___flmul+3,f
 19183     04A5  0CAA               	rrf	??i1___flmul+2,f
 19184     04A6  0CA9               	rrf	??i1___flmul+1,f
 19185     04A7  0CA8               	rrf	??i1___flmul,f
 19186     04A8                     u670_20:
 19187     04A8  0BAC               	decfsz	??i1___flmul+4,f
 19188     04A9  2CA4               	goto	u670_25
 19189     04AA  082B               	movf	??i1___flmul+3,w
 19190     04AB  00B7               	movwf	i1___flmul@prod+3
 19191     04AC  082A               	movf	??i1___flmul+2,w
 19192     04AD  00B6               	movwf	i1___flmul@prod+2
 19193     04AE  0829               	movf	??i1___flmul+1,w
 19194     04AF  00B5               	movwf	i1___flmul@prod+1
 19195     04B0  0828               	movf	??i1___flmul,w
 19196     04B1  00B4               	movwf	i1___flmul@prod
 19197     04B2                     i1l5582:
 19198     04B2  3001               	movlw	1
 19199     04B3  07B8               	addwf	i1___flmul@temp,f
 19200     04B4  3000               	movlw	0
 19201     04B5  3DB9               	addwfc	i1___flmul@temp+1,f
 19202     04B6                     i1l5584:
 19203     04B6  0839               	movf	i1___flmul@temp+1,w
 19204     04B7  3A80               	xorlw	128
 19205     04B8  00A8               	movwf	??i1___flmul
 19206     04B9  3080               	movlw	128
 19207     04BA  0228               	subwf	??i1___flmul,w
 19208     04BB  1D03               	skipz
 19209     04BC  2CBF               	goto	u671_25
 19210     04BD  30FF               	movlw	255
 19211     04BE  0238               	subwf	i1___flmul@temp,w
 19212     04BF                     u671_25:
 19213     04BF  1C03               	skipc
 19214     04C0  2CC2               	goto	u671_21
 19215     04C1  2CC3               	goto	u671_20
 19216     04C2                     u671_21:
 19217     04C2  2CCD               	goto	i1l5588
 19218     04C3                     u671_20:
 19219     04C3                     i1l5586:
 19220     04C3  307F               	movlw	127
 19221     04C4  0020               	movlb	0	; select bank0
 19222     04C5  00B7               	movwf	i1___flmul@prod+3
 19223     04C6  3080               	movlw	128
 19224     04C7  00B6               	movwf	i1___flmul@prod+2
 19225     04C8  3000               	movlw	0
 19226     04C9  00B5               	movwf	i1___flmul@prod+1
 19227     04CA  3000               	movlw	0
 19228     04CB  00B4               	movwf	i1___flmul@prod
 19229     04CC  2CFE               	goto	i1l1617
 19230     04CD                     i1l5588:
 19231     04CD  0020               	movlb	0	; select bank0
 19232     04CE  0839               	movf	i1___flmul@temp+1,w
 19233     04CF  3A80               	xorlw	128
 19234     04D0  00A8               	movwf	??i1___flmul
 19235     04D1  3080               	movlw	128
 19236     04D2  0228               	subwf	??i1___flmul,w
 19237     04D3  1D03               	skipz
 19238     04D4  2CD7               	goto	u672_25
 19239     04D5  3001               	movlw	1
 19240     04D6  0238               	subwf	i1___flmul@temp,w
 19241     04D7                     u672_25:
 19242     04D7  1803               	skipnc
 19243     04D8  2CDA               	goto	u672_21
 19244     04D9  2CDB               	goto	u672_20
 19245     04DA                     u672_21:
 19246     04DA  2CE6               	goto	i1l5594
 19247     04DB                     u672_20:
 19248     04DB                     i1l5590:
 19249     04DB  3000               	movlw	0
 19250     04DC  0020               	movlb	0	; select bank0
 19251     04DD  00B7               	movwf	i1___flmul@prod+3
 19252     04DE  3000               	movlw	0
 19253     04DF  00B6               	movwf	i1___flmul@prod+2
 19254     04E0  3000               	movlw	0
 19255     04E1  00B5               	movwf	i1___flmul@prod+1
 19256     04E2  3000               	movlw	0
 19257     04E3  00B4               	movwf	i1___flmul@prod
 19258     04E4                     i1l5592:
 19259     04E4  01AD               	clrf	i1___flmul@sign
 19260     04E5  2CFE               	goto	i1l1617
 19261     04E6                     i1l5594:
 19262     04E6  0020               	movlb	0	; select bank0
 19263     04E7  0838               	movf	i1___flmul@temp,w
 19264     04E8  00B3               	movwf	i1___flmul@bexp
 19265     04E9  30FF               	movlw	255
 19266     04EA  05B4               	andwf	i1___flmul@prod,f
 19267     04EB  30FF               	movlw	255
 19268     04EC  05B5               	andwf	i1___flmul@prod+1,f
 19269     04ED  307F               	movlw	127
 19270     04EE  05B6               	andwf	i1___flmul@prod+2,f
 19271     04EF  3000               	movlw	0
 19272     04F0  05B7               	andwf	i1___flmul@prod+3,f
 19273     04F1                     i1l5596:
 19274     04F1  1C33               	btfss	i1___flmul@bexp,0
 19275     04F2  2CF4               	goto	u673_21
 19276     04F3  2CF5               	goto	u673_20
 19277     04F4                     u673_21:
 19278     04F4  2CF6               	goto	i1l5600
 19279     04F5                     u673_20:
 19280     04F5                     i1l5598:
 19281     04F5  17B6               	bsf	i1___flmul@prod+2,7
 19282     04F6                     i1l5600:
 19283     04F6  0833               	movf	i1___flmul@bexp,w
 19284     04F7  00A8               	movwf	??i1___flmul
 19285     04F8  3001               	movlw	1
 19286     04F9                     u674_25:
 19287     04F9  36A8               	lsrf	??i1___flmul,f
 19288     04FA  0B89               	decfsz	9,f
 19289     04FB  2CF9               	goto	u674_25
 19290     04FC  0828               	movf	??i1___flmul,w
 19291     04FD  00B7               	movwf	i1___flmul@prod+3
 19292     04FE                     i1l1617:
 19293     04FE  082D               	movf	i1___flmul@sign,w
 19294     04FF  04B7               	iorwf	i1___flmul@prod+3,f
 19295     0500                     i1l5602:
 19296     0500  0837               	movf	i1___flmul@prod+3,w
 19297     0501  00A3               	movwf	?i1___flmul+3
 19298     0502  0836               	movf	i1___flmul@prod+2,w
 19299     0503  00A2               	movwf	?i1___flmul+2
 19300     0504  0835               	movf	i1___flmul@prod+1,w
 19301     0505  00A1               	movwf	?i1___flmul+1
 19302     0506  0834               	movf	i1___flmul@prod,w
 19303     0507  00A0               	movwf	?i1___flmul
 19304     0508                     i1l1605:
 19305     0508  0008               	return
 19306     0509                     __end_ofi1___flmul:
 19307                           
 19308                           	psect	text75
 19309     1040                     __ptext75:	
 19310 ;; *************** function i1__Umul8_16 *****************
 19311 ;; Defined at:
 19312 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\Umul8_16.c"
 19313 ;; Parameters:    Size  Location     Type
 19314 ;;  multiplier      1    wreg     unsigned char 
 19315 ;;  multiplicand    1    0[COMMON] unsigned char 
 19316 ;; Auto vars:     Size  Location     Type
 19317 ;;  multiplier      1    8[COMMON] unsigned char 
 19318 ;;  word_mpld       2    6[COMMON] unsigned short 
 19319 ;;  product         2    4[COMMON] unsigned short 
 19320 ;; Return value:  Size  Location     Type
 19321 ;;                  2    0[COMMON] unsigned int 
 19322 ;; Registers used:
 19323 ;;		wreg, status,2, status,0
 19324 ;; Tracked objects:
 19325 ;;		On entry : 0/0
 19326 ;;		On exit  : 0/0
 19327 ;;		Unchanged: 0/0
 19328 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 19329 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 19330 ;;      Locals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 19331 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 19332 ;;      Totals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 19333 ;;Total ram usage:        9 bytes
 19334 ;; Hardware stack levels used: 1
 19335 ;; This function calls:
 19336 ;;		Nothing
 19337 ;; This function is called by:
 19338 ;;		i1___flmul
 19339 ;; This function uses a non-reentrant model
 19340 ;;
 19341                           
 19342     1040                     i1__Umul8_16:	
 19343                           ;psect for function i1__Umul8_16
 19344                           
 19345                           
 19346                           ;incstack = 0
 19347                           ; Regs used in i1__Umul8_16: [wreg+status,2+status,0]
 19348                           ;i1__Umul8_16@multiplier stored from wreg
 19349     1040  00F8               	movwf	i1__Umul8_16@multiplier
 19350     1041                     i1l4624:
 19351     1041  01F4               	clrf	i1__Umul8_16@product
 19352     1042  01F5               	clrf	i1__Umul8_16@product+1
 19353     1043                     i1l4626:
 19354     1043  0870               	movf	i1__Umul8_16@multiplicand,w
 19355     1044  00F2               	movwf	??i1__Umul8_16
 19356     1045  01F3               	clrf	??i1__Umul8_16+1
 19357     1046  0872               	movf	??i1__Umul8_16,w
 19358     1047  00F6               	movwf	i1__Umul8_16@word_mpld
 19359     1048  0873               	movf	??i1__Umul8_16+1,w
 19360     1049  00F7               	movwf	i1__Umul8_16@word_mpld+1
 19361     104A                     i1l4628:
 19362     104A  1C78               	btfss	i1__Umul8_16@multiplier,0
 19363     104B  284D               	goto	u464_21
 19364     104C  284E               	goto	u464_20
 19365     104D                     u464_21:
 19366     104D  2852               	goto	i1l1624
 19367     104E                     u464_20:
 19368     104E                     i1l4630:
 19369     104E  0876               	movf	i1__Umul8_16@word_mpld,w
 19370     104F  07F4               	addwf	i1__Umul8_16@product,f
 19371     1050  0877               	movf	i1__Umul8_16@word_mpld+1,w
 19372     1051  3DF5               	addwfc	i1__Umul8_16@product+1,f
 19373     1052                     i1l1624:
 19374     1052  3001               	movlw	1
 19375     1053                     u465_25:
 19376     1053  35F6               	lslf	i1__Umul8_16@word_mpld,f
 19377     1054  0DF7               	rlf	i1__Umul8_16@word_mpld+1,f
 19378     1055  0B89               	decfsz	9,f
 19379     1056  2853               	goto	u465_25
 19380     1057  1003               	clrc
 19381     1058  0CF8               	rrf	i1__Umul8_16@multiplier,f
 19382     1059                     i1l4632:
 19383     1059  0878               	movf	i1__Umul8_16@multiplier,w
 19384     105A  1D03               	btfss	3,2
 19385     105B  285D               	goto	u466_21
 19386     105C  285E               	goto	u466_20
 19387     105D                     u466_21:
 19388     105D  284A               	goto	i1l4628
 19389     105E                     u466_20:
 19390     105E                     i1l4634:
 19391     105E  0875               	movf	i1__Umul8_16@product+1,w
 19392     105F  00F1               	movwf	?i1__Umul8_16+1
 19393     1060  0874               	movf	i1__Umul8_16@product,w
 19394     1061  00F0               	movwf	?i1__Umul8_16
 19395     1062                     i1l1626:
 19396     1062  0008               	return
 19397     1063                     __end_ofi1__Umul8_16:
 19398                           
 19399                           	psect	text76
 19400     0DF4                     __ptext76:	
 19401 ;; *************** function i1___fladd *****************
 19402 ;; Defined at:
 19403 ;;		line 10 in file "C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\sprcadd.c"
 19404 ;; Parameters:    Size  Location     Type
 19405 ;;  b               4   26[BANK0 ] unsigned int 
 19406 ;;  a               4   30[BANK0 ] unsigned int 
 19407 ;; Auto vars:     Size  Location     Type
 19408 ;;  grs             1   45[BANK0 ] unsigned char 
 19409 ;;  bexp            1   44[BANK0 ] unsigned char 
 19410 ;;  aexp            1   43[BANK0 ] unsigned char 
 19411 ;;  signs           1   42[BANK0 ] unsigned char 
 19412 ;; Return value:  Size  Location     Type
 19413 ;;                  4   26[BANK0 ] unsigned char 
 19414 ;; Registers used:
 19415 ;;		wreg, status,2, status,0
 19416 ;; Tracked objects:
 19417 ;;		On entry : 0/0
 19418 ;;		On exit  : 0/0
 19419 ;;		Unchanged: 0/0
 19420 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 19421 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0
 19422 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
 19423 ;;      Temps:          0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0
 19424 ;;      Totals:         0      20       0       0       0       0       0       0       0       0       0       0       
      +0       0
 19425 ;;Total ram usage:       20 bytes
 19426 ;; Hardware stack levels used: 1
 19427 ;; This function calls:
 19428 ;;		Nothing
 19429 ;; This function is called by:
 19430 ;;		_controller
 19431 ;; This function uses a non-reentrant model
 19432 ;;
 19433                           
 19434     0DF4                     i1___fladd:	
 19435                           ;psect for function i1___fladd
 19436                           
 19437     0DF4                     i1l5270:	
 19438                           ;incstack = 0
 19439                           ; Regs used in i1___fladd: [wreg+status,2+status,0]
 19440                           
 19441     0DF4  0020               	movlb	0	; select bank0
 19442     0DF5  083D               	movf	i1___fladd@b+3,w
 19443     0DF6  3980               	andlw	128
 19444     0DF7  00CA               	movwf	i1___fladd@signs
 19445     0DF8                     i1l5272:
 19446     0DF8  353D               	lslf	i1___fladd@b+3,w
 19447     0DF9  00CC               	movwf	i1___fladd@bexp
 19448     0DFA                     i1l5274:
 19449     0DFA  1FBC               	btfss	i1___fladd@b+2,7
 19450     0DFB  2DFD               	goto	u602_21
 19451     0DFC  2DFE               	goto	u602_20
 19452     0DFD                     u602_21:
 19453     0DFD  2DFF               	goto	i1l5278
 19454     0DFE                     u602_20:
 19455     0DFE                     i1l5276:
 19456     0DFE  144C               	bsf	i1___fladd@bexp,0
 19457     0DFF                     i1l5278:
 19458     0DFF  084C               	movf	i1___fladd@bexp,w
 19459     0E00  1903               	btfsc	3,2
 19460     0E01  2E03               	goto	u603_21
 19461     0E02  2E04               	goto	u603_20
 19462     0E03                     u603_21:
 19463     0E03  2E14               	goto	i1l5288
 19464     0E04                     u603_20:
 19465     0E04                     i1l5280:
 19466     0E04  0A4C               	incf	i1___fladd@bexp,w
 19467     0E05  1D03               	btfss	3,2
 19468     0E06  2E08               	goto	u604_21
 19469     0E07  2E09               	goto	u604_20
 19470     0E08                     u604_21:
 19471     0E08  2E11               	goto	i1l5284
 19472     0E09                     u604_20:
 19473     0E09                     i1l5282:
 19474     0E09  3000               	movlw	0
 19475     0E0A  00BD               	movwf	i1___fladd@b+3
 19476     0E0B  3000               	movlw	0
 19477     0E0C  00BC               	movwf	i1___fladd@b+2
 19478     0E0D  3000               	movlw	0
 19479     0E0E  00BB               	movwf	i1___fladd@b+1
 19480     0E0F  3000               	movlw	0
 19481     0E10  00BA               	movwf	i1___fladd@b
 19482     0E11                     i1l5284:
 19483     0E11  17BC               	bsf	i1___fladd@b+2,7
 19484     0E12                     i1l5286:
 19485     0E12  01BD               	clrf	i1___fladd@b+3
 19486     0E13  2E1C               	goto	i1l5290
 19487     0E14                     i1l5288:
 19488     0E14  3000               	movlw	0
 19489     0E15  00BD               	movwf	i1___fladd@b+3
 19490     0E16  3000               	movlw	0
 19491     0E17  00BC               	movwf	i1___fladd@b+2
 19492     0E18  3000               	movlw	0
 19493     0E19  00BB               	movwf	i1___fladd@b+1
 19494     0E1A  3000               	movlw	0
 19495     0E1B  00BA               	movwf	i1___fladd@b
 19496     0E1C                     i1l5290:
 19497     0E1C  0841               	movf	i1___fladd@a+3,w
 19498     0E1D  3980               	andlw	128
 19499     0E1E  00CB               	movwf	i1___fladd@aexp
 19500     0E1F                     i1l5292:
 19501     0E1F  084B               	movf	i1___fladd@aexp,w
 19502     0E20  064A               	xorwf	i1___fladd@signs,w
 19503     0E21  1903               	skipnz
 19504     0E22  2E24               	goto	u605_21
 19505     0E23  2E25               	goto	u605_20
 19506     0E24                     u605_21:
 19507     0E24  2E26               	goto	i1l5296
 19508     0E25                     u605_20:
 19509     0E25                     i1l5294:
 19510     0E25  174A               	bsf	i1___fladd@signs,6
 19511     0E26                     i1l5296:
 19512     0E26  3541               	lslf	i1___fladd@a+3,w
 19513     0E27  00CB               	movwf	i1___fladd@aexp
 19514     0E28                     i1l5298:
 19515     0E28  1FC0               	btfss	i1___fladd@a+2,7
 19516     0E29  2E2B               	goto	u606_21
 19517     0E2A  2E2C               	goto	u606_20
 19518     0E2B                     u606_21:
 19519     0E2B  2E2D               	goto	i1l5302
 19520     0E2C                     u606_20:
 19521     0E2C                     i1l5300:
 19522     0E2C  144B               	bsf	i1___fladd@aexp,0
 19523     0E2D                     i1l5302:
 19524     0E2D  084B               	movf	i1___fladd@aexp,w
 19525     0E2E  1903               	btfsc	3,2
 19526     0E2F  2E31               	goto	u607_21
 19527     0E30  2E32               	goto	u607_20
 19528     0E31                     u607_21:
 19529     0E31  2E42               	goto	i1l5312
 19530     0E32                     u607_20:
 19531     0E32                     i1l5304:
 19532     0E32  0A4B               	incf	i1___fladd@aexp,w
 19533     0E33  1D03               	btfss	3,2
 19534     0E34  2E36               	goto	u608_21
 19535     0E35  2E37               	goto	u608_20
 19536     0E36                     u608_21:
 19537     0E36  2E3F               	goto	i1l5308
 19538     0E37                     u608_20:
 19539     0E37                     i1l5306:
 19540     0E37  3000               	movlw	0
 19541     0E38  00C1               	movwf	i1___fladd@a+3
 19542     0E39  3000               	movlw	0
 19543     0E3A  00C0               	movwf	i1___fladd@a+2
 19544     0E3B  3000               	movlw	0
 19545     0E3C  00BF               	movwf	i1___fladd@a+1
 19546     0E3D  3000               	movlw	0
 19547     0E3E  00BE               	movwf	i1___fladd@a
 19548     0E3F                     i1l5308:
 19549     0E3F  17C0               	bsf	i1___fladd@a+2,7
 19550     0E40                     i1l5310:
 19551     0E40  01C1               	clrf	i1___fladd@a+3
 19552     0E41  2E4A               	goto	i1l1509
 19553     0E42                     i1l5312:
 19554     0E42  3000               	movlw	0
 19555     0E43  00C1               	movwf	i1___fladd@a+3
 19556     0E44  3000               	movlw	0
 19557     0E45  00C0               	movwf	i1___fladd@a+2
 19558     0E46  3000               	movlw	0
 19559     0E47  00BF               	movwf	i1___fladd@a+1
 19560     0E48  3000               	movlw	0
 19561     0E49  00BE               	movwf	i1___fladd@a
 19562     0E4A                     i1l1509:
 19563     0E4A  084C               	movf	i1___fladd@bexp,w
 19564     0E4B  024B               	subwf	i1___fladd@aexp,w
 19565     0E4C  1803               	skipnc
 19566     0E4D  2E4F               	goto	u609_21
 19567     0E4E  2E50               	goto	u609_20
 19568     0E4F                     u609_21:
 19569     0E4F  2E74               	goto	i1l5348
 19570     0E50                     u609_20:
 19571     0E50                     i1l5314:
 19572     0E50  1F4A               	btfss	i1___fladd@signs,6
 19573     0E51  2E53               	goto	u610_21
 19574     0E52  2E54               	goto	u610_20
 19575     0E53                     u610_21:
 19576     0E53  2E56               	goto	i1l5318
 19577     0E54                     u610_20:
 19578     0E54                     i1l5316:
 19579     0E54  3080               	movlw	128
 19580     0E55  06CA               	xorwf	i1___fladd@signs,f
 19581     0E56                     i1l5318:
 19582     0E56  084C               	movf	i1___fladd@bexp,w
 19583     0E57  00CD               	movwf	i1___fladd@grs
 19584     0E58                     i1l5320:
 19585     0E58  084B               	movf	i1___fladd@aexp,w
 19586     0E59  00CC               	movwf	i1___fladd@bexp
 19587     0E5A                     i1l5322:
 19588     0E5A  084D               	movf	i1___fladd@grs,w
 19589     0E5B  00CB               	movwf	i1___fladd@aexp
 19590     0E5C                     i1l5324:
 19591     0E5C  083A               	movf	i1___fladd@b,w
 19592     0E5D  00CD               	movwf	i1___fladd@grs
 19593     0E5E                     i1l5326:
 19594     0E5E  083E               	movf	i1___fladd@a,w
 19595     0E5F  00BA               	movwf	i1___fladd@b
 19596     0E60                     i1l5328:
 19597     0E60  084D               	movf	i1___fladd@grs,w
 19598     0E61  00BE               	movwf	i1___fladd@a
 19599     0E62                     i1l5330:
 19600     0E62  083B               	movf	i1___fladd@b+1,w
 19601     0E63  00CD               	movwf	i1___fladd@grs
 19602     0E64                     i1l5332:
 19603     0E64  083F               	movf	i1___fladd@a+1,w
 19604     0E65  00BB               	movwf	i1___fladd@b+1
 19605     0E66                     i1l5334:
 19606     0E66  084D               	movf	i1___fladd@grs,w
 19607     0E67  00BF               	movwf	i1___fladd@a+1
 19608     0E68                     i1l5336:
 19609     0E68  083C               	movf	i1___fladd@b+2,w
 19610     0E69  00CD               	movwf	i1___fladd@grs
 19611     0E6A                     i1l5338:
 19612     0E6A  0840               	movf	i1___fladd@a+2,w
 19613     0E6B  00BC               	movwf	i1___fladd@b+2
 19614     0E6C                     i1l5340:
 19615     0E6C  084D               	movf	i1___fladd@grs,w
 19616     0E6D  00C0               	movwf	i1___fladd@a+2
 19617     0E6E                     i1l5342:
 19618     0E6E  083D               	movf	i1___fladd@b+3,w
 19619     0E6F  00CD               	movwf	i1___fladd@grs
 19620     0E70                     i1l5344:
 19621     0E70  0841               	movf	i1___fladd@a+3,w
 19622     0E71  00BD               	movwf	i1___fladd@b+3
 19623     0E72                     i1l5346:
 19624     0E72  084D               	movf	i1___fladd@grs,w
 19625     0E73  00C1               	movwf	i1___fladd@a+3
 19626     0E74                     i1l5348:
 19627     0E74  01CD               	clrf	i1___fladd@grs
 19628     0E75                     i1l5350:
 19629     0E75  084B               	movf	i1___fladd@aexp,w
 19630     0E76  00C2               	movwf	??i1___fladd
 19631     0E77  01C3               	clrf	??i1___fladd+1
 19632     0E78  0843               	movf	??i1___fladd+1,w
 19633     0E79  00C5               	movwf	??i1___fladd+3
 19634     0E7A  084C               	movf	i1___fladd@bexp,w
 19635     0E7B  0242               	subwf	??i1___fladd,w
 19636     0E7C  00C4               	movwf	??i1___fladd+2
 19637     0E7D  1C03               	skipc
 19638     0E7E  03C5               	decf	??i1___fladd+3,f
 19639     0E7F  0845               	movf	??i1___fladd+3,w
 19640     0E80  3A80               	xorlw	128
 19641     0E81  00C6               	movwf	??i1___fladd+4
 19642     0E82  3080               	movlw	128
 19643     0E83  0246               	subwf	??i1___fladd+4,w
 19644     0E84  1D03               	skipz
 19645     0E85  2E88               	goto	u611_25
 19646     0E86  301A               	movlw	26
 19647     0E87  0244               	subwf	??i1___fladd+2,w
 19648     0E88                     u611_25:
 19649     0E88  1C03               	skipc
 19650     0E89  2E8B               	goto	u611_21
 19651     0E8A  2E8C               	goto	u611_20
 19652     0E8B                     u611_21:
 19653     0E8B  2EC2               	goto	i1l5366
 19654     0E8C                     u611_20:
 19655     0E8C                     i1l5352:
 19656     0E8C  0020               	movlb	0	; select bank0
 19657     0E8D  083D               	movf	i1___fladd@b+3,w
 19658     0E8E  043C               	iorwf	i1___fladd@b+2,w
 19659     0E8F  043B               	iorwf	i1___fladd@b+1,w
 19660     0E90  043A               	iorwf	i1___fladd@b,w
 19661     0E91  1D03               	skipz
 19662     0E92  2E94               	goto	u612_21
 19663     0E93  2E96               	goto	u612_20
 19664     0E94                     u612_21:
 19665     0E94  3001               	movlw	1
 19666     0E95  2E97               	goto	u613_20
 19667     0E96                     u612_20:
 19668     0E96  3000               	movlw	0
 19669     0E97                     u613_20:
 19670     0E97  00CD               	movwf	i1___fladd@grs
 19671     0E98  3000               	movlw	0
 19672     0E99  00BD               	movwf	i1___fladd@b+3
 19673     0E9A  3000               	movlw	0
 19674     0E9B  00BC               	movwf	i1___fladd@b+2
 19675     0E9C  3000               	movlw	0
 19676     0E9D  00BB               	movwf	i1___fladd@b+1
 19677     0E9E  3000               	movlw	0
 19678     0E9F  00BA               	movwf	i1___fladd@b
 19679     0EA0  084B               	movf	i1___fladd@aexp,w
 19680     0EA1  00CC               	movwf	i1___fladd@bexp
 19681     0EA2  2EC9               	goto	i1l1513
 19682     0EA3                     i1l1515:
 19683     0EA3  1C4D               	btfss	i1___fladd@grs,0
 19684     0EA4  2EA6               	goto	u614_21
 19685     0EA5  2EA7               	goto	u614_20
 19686     0EA6                     u614_21:
 19687     0EA6  2EB1               	goto	i1l5356
 19688     0EA7                     u614_20:
 19689     0EA7                     i1l5354:
 19690     0EA7  084D               	movf	i1___fladd@grs,w
 19691     0EA8  00C2               	movwf	??i1___fladd
 19692     0EA9  3001               	movlw	1
 19693     0EAA                     u615_25:
 19694     0EAA  36C2               	lsrf	??i1___fladd,f
 19695     0EAB  0B89               	decfsz	9,f
 19696     0EAC  2EAA               	goto	u615_25
 19697     0EAD  0842               	movf	??i1___fladd,w
 19698     0EAE  3801               	iorlw	1
 19699     0EAF  00CD               	movwf	i1___fladd@grs
 19700     0EB0  2EB3               	goto	i1l5358
 19701     0EB1                     i1l5356:
 19702     0EB1  1003               	clrc
 19703     0EB2  0CCD               	rrf	i1___fladd@grs,f
 19704     0EB3                     i1l5358:
 19705     0EB3  1C3A               	btfss	i1___fladd@b,0
 19706     0EB4  2EB6               	goto	u616_21
 19707     0EB5  2EB7               	goto	u616_20
 19708     0EB6                     u616_21:
 19709     0EB6  2EB8               	goto	i1l5362
 19710     0EB7                     u616_20:
 19711     0EB7                     i1l5360:
 19712     0EB7  17CD               	bsf	i1___fladd@grs,7
 19713     0EB8                     i1l5362:
 19714     0EB8  3001               	movlw	1
 19715     0EB9  00C2               	movwf	??i1___fladd
 19716     0EBA                     u617_25:
 19717     0EBA  37BD               	asrf	i1___fladd@b+3,f
 19718     0EBB  0CBC               	rrf	i1___fladd@b+2,f
 19719     0EBC  0CBB               	rrf	i1___fladd@b+1,f
 19720     0EBD  0CBA               	rrf	i1___fladd@b,f
 19721     0EBE  0BC2               	decfsz	??i1___fladd& (0+127),f
 19722     0EBF  2EBA               	goto	u617_25
 19723     0EC0                     i1l5364:
 19724     0EC0  3001               	movlw	1
 19725     0EC1  07CC               	addwf	i1___fladd@bexp,f
 19726     0EC2                     i1l5366:
 19727     0EC2  0020               	movlb	0	; select bank0
 19728     0EC3  084B               	movf	i1___fladd@aexp,w
 19729     0EC4  024C               	subwf	i1___fladd@bexp,w
 19730     0EC5  1C03               	skipc
 19731     0EC6  2EC8               	goto	u618_21
 19732     0EC7  2EC9               	goto	u618_20
 19733     0EC8                     u618_21:
 19734     0EC8  2EA3               	goto	i1l1515
 19735     0EC9                     u618_20:
 19736     0EC9                     i1l1513:
 19737     0EC9  1B4A               	btfsc	i1___fladd@signs,6
 19738     0ECA  2ECC               	goto	u619_21
 19739     0ECB  2ECD               	goto	u619_20
 19740     0ECC                     u619_21:
 19741     0ECC  2F07               	goto	i1l5392
 19742     0ECD                     u619_20:
 19743     0ECD                     i1l5368:
 19744     0ECD  084C               	movf	i1___fladd@bexp,w
 19745     0ECE  1D03               	btfss	3,2
 19746     0ECF  2ED1               	goto	u620_21
 19747     0ED0  2ED2               	goto	u620_20
 19748     0ED1                     u620_21:
 19749     0ED1  2EDB               	goto	i1l5374
 19750     0ED2                     u620_20:
 19751     0ED2                     i1l5370:
 19752     0ED2  3000               	movlw	0
 19753     0ED3  00BD               	movwf	?i1___fladd+3
 19754     0ED4  3000               	movlw	0
 19755     0ED5  00BC               	movwf	?i1___fladd+2
 19756     0ED6  3000               	movlw	0
 19757     0ED7  00BB               	movwf	?i1___fladd+1
 19758     0ED8  3000               	movlw	0
 19759     0ED9  00BA               	movwf	?i1___fladd
 19760     0EDA  2FFF               	goto	i1l1522
 19761     0EDB                     i1l5374:
 19762     0EDB  083E               	movf	i1___fladd@a,w
 19763     0EDC  07BA               	addwf	i1___fladd@b,f
 19764     0EDD  083F               	movf	i1___fladd@a+1,w
 19765     0EDE  3DBB               	addwfc	i1___fladd@b+1,f
 19766     0EDF  0840               	movf	i1___fladd@a+2,w
 19767     0EE0  3DBC               	addwfc	i1___fladd@b+2,f
 19768     0EE1  0841               	movf	i1___fladd@a+3,w
 19769     0EE2  3DBD               	addwfc	i1___fladd@b+3,f
 19770     0EE3                     i1l5376:
 19771     0EE3  1C3D               	btfss	i1___fladd@b+3,0
 19772     0EE4  2EE6               	goto	u621_21
 19773     0EE5  2EE7               	goto	u621_20
 19774     0EE6                     u621_21:
 19775     0EE6  2F91               	goto	i1l5428
 19776     0EE7                     u621_20:
 19777     0EE7                     i1l5378:
 19778     0EE7  1C4D               	btfss	i1___fladd@grs,0
 19779     0EE8  2EEA               	goto	u622_21
 19780     0EE9  2EEB               	goto	u622_20
 19781     0EEA                     u622_21:
 19782     0EEA  2EF5               	goto	i1l5382
 19783     0EEB                     u622_20:
 19784     0EEB                     i1l5380:
 19785     0EEB  084D               	movf	i1___fladd@grs,w
 19786     0EEC  00C2               	movwf	??i1___fladd
 19787     0EED  3001               	movlw	1
 19788     0EEE                     u623_25:
 19789     0EEE  36C2               	lsrf	??i1___fladd,f
 19790     0EEF  0B89               	decfsz	9,f
 19791     0EF0  2EEE               	goto	u623_25
 19792     0EF1  0842               	movf	??i1___fladd,w
 19793     0EF2  3801               	iorlw	1
 19794     0EF3  00CD               	movwf	i1___fladd@grs
 19795     0EF4  2EF7               	goto	i1l5384
 19796     0EF5                     i1l5382:
 19797     0EF5  1003               	clrc
 19798     0EF6  0CCD               	rrf	i1___fladd@grs,f
 19799     0EF7                     i1l5384:
 19800     0EF7  1C3A               	btfss	i1___fladd@b,0
 19801     0EF8  2EFA               	goto	u624_21
 19802     0EF9  2EFB               	goto	u624_20
 19803     0EFA                     u624_21:
 19804     0EFA  2EFC               	goto	i1l5388
 19805     0EFB                     u624_20:
 19806     0EFB                     i1l5386:
 19807     0EFB  17CD               	bsf	i1___fladd@grs,7
 19808     0EFC                     i1l5388:
 19809     0EFC  3001               	movlw	1
 19810     0EFD  00C2               	movwf	??i1___fladd
 19811     0EFE                     u625_25:
 19812     0EFE  37BD               	asrf	i1___fladd@b+3,f
 19813     0EFF  0CBC               	rrf	i1___fladd@b+2,f
 19814     0F00  0CBB               	rrf	i1___fladd@b+1,f
 19815     0F01  0CBA               	rrf	i1___fladd@b,f
 19816     0F02  0BC2               	decfsz	??i1___fladd& (0+127),f
 19817     0F03  2EFE               	goto	u625_25
 19818     0F04                     i1l5390:
 19819     0F04  3001               	movlw	1
 19820     0F05  07CC               	addwf	i1___fladd@bexp,f
 19821     0F06  2F91               	goto	i1l5428
 19822     0F07                     i1l5392:
 19823     0F07  083D               	movf	i1___fladd@b+3,w
 19824     0F08  3A80               	xorlw	128
 19825     0F09  00C2               	movwf	??i1___fladd
 19826     0F0A  0841               	movf	i1___fladd@a+3,w
 19827     0F0B  3A80               	xorlw	128
 19828     0F0C  0242               	subwf	??i1___fladd,w
 19829     0F0D  1D03               	skipz
 19830     0F0E  2F19               	goto	u626_23
 19831     0F0F  0840               	movf	i1___fladd@a+2,w
 19832     0F10  023C               	subwf	i1___fladd@b+2,w
 19833     0F11  1D03               	skipz
 19834     0F12  2F19               	goto	u626_23
 19835     0F13  083F               	movf	i1___fladd@a+1,w
 19836     0F14  023B               	subwf	i1___fladd@b+1,w
 19837     0F15  1D03               	skipz
 19838     0F16  2F19               	goto	u626_23
 19839     0F17  083E               	movf	i1___fladd@a,w
 19840     0F18  023A               	subwf	i1___fladd@b,w
 19841     0F19                     u626_23:
 19842     0F19  1803               	skipnc
 19843     0F1A  2F1C               	goto	u626_21
 19844     0F1B  2F1D               	goto	u626_20
 19845     0F1C                     u626_21:
 19846     0F1C  2F52               	goto	i1l5404
 19847     0F1D                     u626_20:
 19848     0F1D                     i1l5394:
 19849     0F1D  30FF               	movlw	255
 19850     0F1E  00C2               	movwf	??i1___fladd
 19851     0F1F  30FF               	movlw	255
 19852     0F20  00C3               	movwf	??i1___fladd+1
 19853     0F21  30FF               	movlw	255
 19854     0F22  00C4               	movwf	??i1___fladd+2
 19855     0F23  30FF               	movlw	255
 19856     0F24  00C5               	movwf	??i1___fladd+3
 19857     0F25  083A               	movf	i1___fladd@b,w
 19858     0F26  023E               	subwf	i1___fladd@a,w
 19859     0F27  00C6               	movwf	??i1___fladd+4
 19860     0F28  083B               	movf	i1___fladd@b+1,w
 19861     0F29  3B3F               	subwfb	i1___fladd@a+1,w
 19862     0F2A  00C7               	movwf	??i1___fladd+5
 19863     0F2B  083C               	movf	i1___fladd@b+2,w
 19864     0F2C  3B40               	subwfb	i1___fladd@a+2,w
 19865     0F2D  00C8               	movwf	??i1___fladd+6
 19866     0F2E  083D               	movf	i1___fladd@b+3,w
 19867     0F2F  3B41               	subwfb	i1___fladd@a+3,w
 19868     0F30  00C9               	movwf	??i1___fladd+7
 19869     0F31  0846               	movf	??i1___fladd+4,w
 19870     0F32  07C2               	addwf	??i1___fladd,f
 19871     0F33  0847               	movf	??i1___fladd+5,w
 19872     0F34  3DC3               	addwfc	??i1___fladd+1,f
 19873     0F35  0848               	movf	??i1___fladd+6,w
 19874     0F36  3DC4               	addwfc	??i1___fladd+2,f
 19875     0F37  0849               	movf	??i1___fladd+7,w
 19876     0F38  3DC5               	addwfc	??i1___fladd+3,f
 19877     0F39  0845               	movf	??i1___fladd+3,w
 19878     0F3A  00BD               	movwf	i1___fladd@b+3
 19879     0F3B  0844               	movf	??i1___fladd+2,w
 19880     0F3C  00BC               	movwf	i1___fladd@b+2
 19881     0F3D  0843               	movf	??i1___fladd+1,w
 19882     0F3E  00BB               	movwf	i1___fladd@b+1
 19883     0F3F  0842               	movf	??i1___fladd,w
 19884     0F40  00BA               	movwf	i1___fladd@b
 19885     0F41                     i1l5396:
 19886     0F41  3080               	movlw	128
 19887     0F42  06CA               	xorwf	i1___fladd@signs,f
 19888     0F43                     i1l5398:
 19889     0F43  034D               	decf	i1___fladd@grs,w
 19890     0F44  3AFF               	xorlw	255
 19891     0F45  00CD               	movwf	i1___fladd@grs
 19892     0F46                     i1l5400:
 19893     0F46  084D               	movf	i1___fladd@grs,w
 19894     0F47  1D03               	btfss	3,2
 19895     0F48  2F4A               	goto	u627_21
 19896     0F49  2F4B               	goto	u627_20
 19897     0F4A                     u627_21:
 19898     0F4A  2F5A               	goto	i1l1530
 19899     0F4B                     u627_20:
 19900     0F4B                     i1l5402:
 19901     0F4B  3001               	movlw	1
 19902     0F4C  07BA               	addwf	i1___fladd@b,f
 19903     0F4D  3000               	movlw	0
 19904     0F4E  3DBB               	addwfc	i1___fladd@b+1,f
 19905     0F4F  3DBC               	addwfc	i1___fladd@b+2,f
 19906     0F50  3DBD               	addwfc	i1___fladd@b+3,f
 19907     0F51  2F5A               	goto	i1l1530
 19908     0F52                     i1l5404:
 19909     0F52  083E               	movf	i1___fladd@a,w
 19910     0F53  02BA               	subwf	i1___fladd@b,f
 19911     0F54  083F               	movf	i1___fladd@a+1,w
 19912     0F55  3BBB               	subwfb	i1___fladd@b+1,f
 19913     0F56  0840               	movf	i1___fladd@a+2,w
 19914     0F57  3BBC               	subwfb	i1___fladd@b+2,f
 19915     0F58  0841               	movf	i1___fladd@a+3,w
 19916     0F59  3BBD               	subwfb	i1___fladd@b+3,f
 19917     0F5A                     i1l1530:
 19918     0F5A  083D               	movf	i1___fladd@b+3,w
 19919     0F5B  043C               	iorwf	i1___fladd@b+2,w
 19920     0F5C  043B               	iorwf	i1___fladd@b+1,w
 19921     0F5D  043A               	iorwf	i1___fladd@b,w
 19922     0F5E  1D03               	skipz
 19923     0F5F  2F61               	goto	u628_21
 19924     0F60  2F62               	goto	u628_20
 19925     0F61                     u628_21:
 19926     0F61  2F8D               	goto	i1l5426
 19927     0F62                     u628_20:
 19928     0F62                     i1l5406:
 19929     0F62  084D               	movf	i1___fladd@grs,w
 19930     0F63  1D03               	btfss	3,2
 19931     0F64  2F66               	goto	u629_21
 19932     0F65  2F67               	goto	u629_20
 19933     0F66                     u629_21:
 19934     0F66  2F8D               	goto	i1l5426
 19935     0F67                     u629_20:
 19936     0F67                     i1l5408:
 19937     0F67  3000               	movlw	0
 19938     0F68  00BD               	movwf	?i1___fladd+3
 19939     0F69  3000               	movlw	0
 19940     0F6A  00BC               	movwf	?i1___fladd+2
 19941     0F6B  3000               	movlw	0
 19942     0F6C  00BB               	movwf	?i1___fladd+1
 19943     0F6D  3000               	movlw	0
 19944     0F6E  00BA               	movwf	?i1___fladd
 19945     0F6F  2FFF               	goto	i1l1522
 19946     0F70                     i1l5412:
 19947     0F70  3001               	movlw	1
 19948     0F71                     u630_25:
 19949     0F71  35BA               	lslf	i1___fladd@b,f
 19950     0F72  0DBB               	rlf	i1___fladd@b+1,f
 19951     0F73  0DBC               	rlf	i1___fladd@b+2,f
 19952     0F74  0DBD               	rlf	i1___fladd@b+3,f
 19953     0F75  0B89               	decfsz	9,f
 19954     0F76  2F71               	goto	u630_25
 19955     0F77                     i1l5414:
 19956     0F77  1FCD               	btfss	i1___fladd@grs,7
 19957     0F78  2F7A               	goto	u631_21
 19958     0F79  2F7B               	goto	u631_20
 19959     0F7A                     u631_21:
 19960     0F7A  2F7C               	goto	i1l1534
 19961     0F7B                     u631_20:
 19962     0F7B                     i1l5416:
 19963     0F7B  143A               	bsf	i1___fladd@b,0
 19964     0F7C                     i1l1534:
 19965     0F7C  1C4D               	btfss	i1___fladd@grs,0
 19966     0F7D  2F7F               	goto	u632_21
 19967     0F7E  2F80               	goto	u632_20
 19968     0F7F                     u632_21:
 19969     0F7F  2F84               	goto	i1l5420
 19970     0F80                     u632_20:
 19971     0F80                     i1l5418:
 19972     0F80  1403               	setc
 19973     0F81  0D4D               	rlf	i1___fladd@grs,w
 19974     0F82  00CD               	movwf	i1___fladd@grs
 19975     0F83  2F86               	goto	i1l5422
 19976     0F84                     i1l5420:
 19977     0F84  1003               	clrc
 19978     0F85  0DCD               	rlf	i1___fladd@grs,f
 19979     0F86                     i1l5422:
 19980     0F86  084C               	movf	i1___fladd@bexp,w
 19981     0F87  1903               	btfsc	3,2
 19982     0F88  2F8A               	goto	u633_21
 19983     0F89  2F8B               	goto	u633_20
 19984     0F8A                     u633_21:
 19985     0F8A  2F8D               	goto	i1l5426
 19986     0F8B                     u633_20:
 19987     0F8B                     i1l5424:
 19988     0F8B  3001               	movlw	1
 19989     0F8C  02CC               	subwf	i1___fladd@bexp,f
 19990     0F8D                     i1l5426:
 19991     0F8D  1FBC               	btfss	i1___fladd@b+2,7
 19992     0F8E  2F90               	goto	u634_21
 19993     0F8F  2F91               	goto	u634_20
 19994     0F90                     u634_21:
 19995     0F90  2F70               	goto	i1l5412
 19996     0F91                     u634_20:
 19997     0F91                     i1l5428:
 19998     0F91  01CB               	clrf	i1___fladd@aexp
 19999     0F92                     i1l5430:
 20000     0F92  1FCD               	btfss	i1___fladd@grs,7
 20001     0F93  2F95               	goto	u635_21
 20002     0F94  2F96               	goto	u635_20
 20003     0F95                     u635_21:
 20004     0F95  2FA4               	goto	i1l5438
 20005     0F96                     u635_20:
 20006     0F96                     i1l5432:
 20007     0F96  084D               	movf	i1___fladd@grs,w
 20008     0F97  397F               	andlw	127
 20009     0F98  1903               	btfsc	3,2
 20010     0F99  2F9B               	goto	u636_21
 20011     0F9A  2F9C               	goto	u636_20
 20012     0F9B                     u636_21:
 20013     0F9B  2F9F               	goto	i1l1540
 20014     0F9C                     u636_20:
 20015     0F9C                     i1l5434:
 20016     0F9C  3001               	movlw	1
 20017     0F9D  00CB               	movwf	i1___fladd@aexp
 20018     0F9E  2FA4               	goto	i1l5438
 20019     0F9F                     i1l1540:
 20020     0F9F  1C3A               	btfss	i1___fladd@b,0
 20021     0FA0  2FA2               	goto	u637_21
 20022     0FA1  2FA3               	goto	u637_20
 20023     0FA2                     u637_21:
 20024     0FA2  2FA4               	goto	i1l5438
 20025     0FA3                     u637_20:
 20026     0FA3  2F9C               	goto	i1l5434
 20027     0FA4                     i1l5438:
 20028     0FA4  084B               	movf	i1___fladd@aexp,w
 20029     0FA5  1903               	btfsc	3,2
 20030     0FA6  2FA8               	goto	u638_21
 20031     0FA7  2FA9               	goto	u638_20
 20032     0FA8                     u638_21:
 20033     0FA8  2FD2               	goto	i1l1543
 20034     0FA9                     u638_20:
 20035     0FA9                     i1l5440:
 20036     0FA9  3001               	movlw	1
 20037     0FAA  07BA               	addwf	i1___fladd@b,f
 20038     0FAB  3000               	movlw	0
 20039     0FAC  3DBB               	addwfc	i1___fladd@b+1,f
 20040     0FAD  3DBC               	addwfc	i1___fladd@b+2,f
 20041     0FAE  3DBD               	addwfc	i1___fladd@b+3,f
 20042     0FAF                     i1l5442:
 20043     0FAF  1C3D               	btfss	i1___fladd@b+3,0
 20044     0FB0  2FB2               	goto	u639_21
 20045     0FB1  2FB3               	goto	u639_20
 20046     0FB2                     u639_21:
 20047     0FB2  2FD2               	goto	i1l1543
 20048     0FB3                     u639_20:
 20049     0FB3                     i1l5444:
 20050     0FB3  083A               	movf	i1___fladd@b,w
 20051     0FB4  00C2               	movwf	??i1___fladd
 20052     0FB5  083B               	movf	i1___fladd@b+1,w
 20053     0FB6  00C3               	movwf	??i1___fladd+1
 20054     0FB7  083C               	movf	i1___fladd@b+2,w
 20055     0FB8  00C4               	movwf	??i1___fladd+2
 20056     0FB9  083D               	movf	i1___fladd@b+3,w
 20057     0FBA  00C5               	movwf	??i1___fladd+3
 20058     0FBB  3001               	movlw	1
 20059     0FBC  00C6               	movwf	??i1___fladd+4
 20060     0FBD                     u640_25:
 20061     0FBD  37C5               	asrf	??i1___fladd+3,f
 20062     0FBE  0CC4               	rrf	??i1___fladd+2,f
 20063     0FBF  0CC3               	rrf	??i1___fladd+1,f
 20064     0FC0  0CC2               	rrf	??i1___fladd,f
 20065     0FC1                     u640_20:
 20066     0FC1  0BC6               	decfsz	??i1___fladd+4,f
 20067     0FC2  2FBD               	goto	u640_25
 20068     0FC3  0845               	movf	??i1___fladd+3,w
 20069     0FC4  00BD               	movwf	i1___fladd@b+3
 20070     0FC5  0844               	movf	??i1___fladd+2,w
 20071     0FC6  00BC               	movwf	i1___fladd@b+2
 20072     0FC7  0843               	movf	??i1___fladd+1,w
 20073     0FC8  00BB               	movwf	i1___fladd@b+1
 20074     0FC9  0842               	movf	??i1___fladd,w
 20075     0FCA  00BA               	movwf	i1___fladd@b
 20076     0FCB  0A4C               	incf	i1___fladd@bexp,w
 20077     0FCC  1903               	btfsc	3,2
 20078     0FCD  2FCF               	goto	u641_21
 20079     0FCE  2FD0               	goto	u641_20
 20080     0FCF                     u641_21:
 20081     0FCF  2FD2               	goto	i1l1543
 20082     0FD0                     u641_20:
 20083     0FD0                     i1l5446:
 20084     0FD0  3001               	movlw	1
 20085     0FD1  07CC               	addwf	i1___fladd@bexp,f
 20086     0FD2                     i1l1543:
 20087     0FD2  0A4C               	incf	i1___fladd@bexp,w
 20088     0FD3  1903               	btfsc	3,2
 20089     0FD4  2FD6               	goto	u642_21
 20090     0FD5  2FD7               	goto	u642_20
 20091     0FD6                     u642_21:
 20092     0FD6  2FDC               	goto	i1l5450
 20093     0FD7                     u642_20:
 20094     0FD7                     i1l5448:
 20095     0FD7  084C               	movf	i1___fladd@bexp,w
 20096     0FD8  1D03               	btfss	3,2
 20097     0FD9  2FDB               	goto	u643_21
 20098     0FDA  2FDC               	goto	u643_20
 20099     0FDB                     u643_21:
 20100     0FDB  2FEA               	goto	i1l5456
 20101     0FDC                     u643_20:
 20102     0FDC                     i1l5450:
 20103     0FDC  3000               	movlw	0
 20104     0FDD  00BD               	movwf	i1___fladd@b+3
 20105     0FDE  3000               	movlw	0
 20106     0FDF  00BC               	movwf	i1___fladd@b+2
 20107     0FE0  3000               	movlw	0
 20108     0FE1  00BB               	movwf	i1___fladd@b+1
 20109     0FE2  3000               	movlw	0
 20110     0FE3  00BA               	movwf	i1___fladd@b
 20111     0FE4                     i1l5452:
 20112     0FE4  084C               	movf	i1___fladd@bexp,w
 20113     0FE5  1D03               	btfss	3,2
 20114     0FE6  2FE8               	goto	u644_21
 20115     0FE7  2FE9               	goto	u644_20
 20116     0FE8                     u644_21:
 20117     0FE8  2FEA               	goto	i1l5456
 20118     0FE9                     u644_20:
 20119     0FE9                     i1l5454:
 20120     0FE9  01CA               	clrf	i1___fladd@signs
 20121     0FEA                     i1l5456:
 20122     0FEA  1C4C               	btfss	i1___fladd@bexp,0
 20123     0FEB  2FED               	goto	u645_21
 20124     0FEC  2FEE               	goto	u645_20
 20125     0FED                     u645_21:
 20126     0FED  2FF0               	goto	i1l5460
 20127     0FEE                     u645_20:
 20128     0FEE                     i1l5458:
 20129     0FEE  17BC               	bsf	i1___fladd@b+2,7
 20130     0FEF  2FF2               	goto	i1l1551
 20131     0FF0                     i1l5460:
 20132     0FF0  307F               	movlw	127
 20133     0FF1  05BC               	andwf	i1___fladd@b+2,f
 20134     0FF2                     i1l1551:
 20135     0FF2  084C               	movf	i1___fladd@bexp,w
 20136     0FF3  00C2               	movwf	??i1___fladd
 20137     0FF4  3001               	movlw	1
 20138     0FF5                     u646_25:
 20139     0FF5  36C2               	lsrf	??i1___fladd,f
 20140     0FF6  0B89               	decfsz	9,f
 20141     0FF7  2FF5               	goto	u646_25
 20142     0FF8  0842               	movf	??i1___fladd,w
 20143     0FF9  00BD               	movwf	i1___fladd@b+3
 20144     0FFA                     i1l5462:
 20145     0FFA  1FCA               	btfss	i1___fladd@signs,7
 20146     0FFB  2FFD               	goto	u647_21
 20147     0FFC  2FFE               	goto	u647_20
 20148     0FFD                     u647_21:
 20149     0FFD  2FFF               	goto	i1l1552
 20150     0FFE                     u647_20:
 20151     0FFE                     i1l5464:
 20152     0FFE  17BD               	bsf	i1___fladd@b+3,7
 20153     0FFF                     i1l1552:
 20154     0FFF                     i1l1522:
 20155     0FFF  0008               	return
 20156     1000                     __end_ofi1___fladd:
 20157                           
 20158                           	psect	text77
 20159     1F1E                     __ptext77:	
 20160 ;; *************** function _pwm_fan_LoadDutyValue *****************
 20161 ;; Defined at:
 20162 ;;		line 64 in file "mcc_generated_files/pwm/src/pwm5.c"
 20163 ;; Parameters:    Size  Location     Type
 20164 ;;  dutyValue       2    0[COMMON] unsigned short 
 20165 ;; Auto vars:     Size  Location     Type
 20166 ;;		None
 20167 ;; Return value:  Size  Location     Type
 20168 ;;                  1    wreg      void 
 20169 ;; Registers used:
 20170 ;;		wreg, status,2, status,0
 20171 ;; Tracked objects:
 20172 ;;		On entry : 0/0
 20173 ;;		On exit  : 0/0
 20174 ;;		Unchanged: 0/0
 20175 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 20176 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 20177 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 20178 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 20179 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 20180 ;;Total ram usage:        4 bytes
 20181 ;; Hardware stack levels used: 1
 20182 ;; This function calls:
 20183 ;;		Nothing
 20184 ;; This function is called by:
 20185 ;;		_controller
 20186 ;; This function uses a non-reentrant model
 20187 ;;
 20188                           
 20189     1F1E                     _pwm_fan_LoadDutyValue:	
 20190                           ;psect for function _pwm_fan_LoadDutyValue
 20191                           
 20192     1F1E                     i1l4644:	
 20193                           ;incstack = 0
 20194                           ; Regs used in _pwm_fan_LoadDutyValue: [wreg+status,2+status,0]
 20195                           
 20196                           
 20197                           ;mcc_generated_files/pwm/src/pwm5.c: 64:  void pwm_fan_LoadDutyValue(uint16_t dutyValue)
      +                          ;mcc_generated_files/pwm/src/pwm5.c: 65:  {;mcc_generated_files/pwm/src/pwm5.c: 67:     
      +                           PWM5DCH = (uint8_t) ((dutyValue & 0x03FCu) >> 2);
 20198     1F1E  0871               	movf	pwm_fan_LoadDutyValue@dutyValue+1,w
 20199     1F1F  00F3               	movwf	??_pwm_fan_LoadDutyValue+1
 20200     1F20  0870               	movf	pwm_fan_LoadDutyValue@dutyValue,w
 20201     1F21  00F2               	movwf	??_pwm_fan_LoadDutyValue
 20202     1F22  36F3               	lsrf	??_pwm_fan_LoadDutyValue+1,f
 20203     1F23  0CF2               	rrf	??_pwm_fan_LoadDutyValue,f
 20204     1F24  36F3               	lsrf	??_pwm_fan_LoadDutyValue+1,f
 20205     1F25  0CF2               	rrf	??_pwm_fan_LoadDutyValue,f
 20206     1F26  0872               	movf	??_pwm_fan_LoadDutyValue,w
 20207     1F27  002C               	movlb	12	; select bank12
 20208     1F28  0098               	movwf	24	;volatile
 20209                           
 20210                           ;mcc_generated_files/pwm/src/pwm5.c: 70:      PWM5DCL = (uint8_t) ((dutyValue & 0x0003u)
      +                           << 6);
 20211     1F29  0870               	movf	pwm_fan_LoadDutyValue@dutyValue,w
 20212     1F2A  3903               	andlw	3
 20213     1F2B  00F2               	movwf	??_pwm_fan_LoadDutyValue
 20214     1F2C  3006               	movlw	6
 20215     1F2D                     u467_25:
 20216     1F2D  35F2               	lslf	??_pwm_fan_LoadDutyValue,f
 20217     1F2E  0B89               	decfsz	9,f
 20218     1F2F  2F2D               	goto	u467_25
 20219     1F30  0872               	movf	??_pwm_fan_LoadDutyValue,w
 20220     1F31  0097               	movwf	23	;volatile
 20221     1F32                     i1l72:
 20222     1F32  0008               	return
 20223     1F33                     __end_of_pwm_fan_LoadDutyValue:
 20224                           
 20225                           	psect	text78
 20226     1D64                     __ptext78:	
 20227 ;; *************** function _getHoogtesensor *****************
 20228 ;; Defined at:
 20229 ;;		line 37 in file "adcMeasurements.c"
 20230 ;; Parameters:    Size  Location     Type
 20231 ;;		None
 20232 ;; Auto vars:     Size  Location     Type
 20233 ;;		None
 20234 ;; Return value:  Size  Location     Type
 20235 ;;                  2    0[COMMON] unsigned short 
 20236 ;; Registers used:
 20237 ;;		wreg
 20238 ;; Tracked objects:
 20239 ;;		On entry : 0/0
 20240 ;;		On exit  : 0/0
 20241 ;;		Unchanged: 0/0
 20242 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 20243 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 20244 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 20245 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 20246 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 20247 ;;Total ram usage:        2 bytes
 20248 ;; Hardware stack levels used: 1
 20249 ;; This function calls:
 20250 ;;		Nothing
 20251 ;; This function is called by:
 20252 ;;		_controller
 20253 ;;		_position_led_strip
 20254 ;; This function uses a non-reentrant model
 20255 ;;
 20256                           
 20257     1D64                     _getHoogtesensor:	
 20258                           ;psect for function _getHoogtesensor
 20259                           
 20260     1D64                     i1l4680:	
 20261                           ;incstack = 0
 20262                           ; Regs used in _getHoogtesensor: [wreg]
 20263                           
 20264                           
 20265                           ;adcMeasurements.c: 38:     return ADC_hoogtesensor;
 20266     1D64  0020               	movlb	0	; select bank0
 20267     1D65  085C               	movf	_ADC_hoogtesensor+1,w	;volatile
 20268     1D66  00F1               	movwf	?_getHoogtesensor+1
 20269     1D67  085B               	movf	_ADC_hoogtesensor,w	;volatile
 20270     1D68  00F0               	movwf	?_getHoogtesensor
 20271     1D69                     i1l843:
 20272     1D69  0008               	return
 20273     1D6A                     __end_of_getHoogtesensor:
 20274                           
 20275                           	psect	text79
 20276     156A                     __ptext79:	
 20277 ;; *************** function ___fltol *****************
 20278 ;; Defined at:
 20279 ;;		line 43 in file "C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\fltol.c"
 20280 ;; Parameters:    Size  Location     Type
 20281 ;;  f1              4   26[BANK0 ] unsigned short 
 20282 ;; Auto vars:     Size  Location     Type
 20283 ;;  exp1            1   35[BANK0 ] unsigned char 
 20284 ;;  sign1           1   34[BANK0 ] unsigned char 
 20285 ;; Return value:  Size  Location     Type
 20286 ;;                  4   26[BANK0 ] long 
 20287 ;; Registers used:
 20288 ;;		wreg, status,2, status,0
 20289 ;; Tracked objects:
 20290 ;;		On entry : 0/0
 20291 ;;		On exit  : 0/0
 20292 ;;		Unchanged: 0/0
 20293 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 20294 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
 20295 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 20296 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
 20297 ;;      Totals:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0
 20298 ;;Total ram usage:       10 bytes
 20299 ;; Hardware stack levels used: 1
 20300 ;; This function calls:
 20301 ;;		Nothing
 20302 ;; This function is called by:
 20303 ;;		_controller
 20304 ;;		_printFloat
 20305 ;;		_getLedNumber
 20306 ;; This function uses a non-reentrant model
 20307 ;;
 20308                           
 20309     156A                     ___fltol:	
 20310                           ;psect for function ___fltol
 20311                           
 20312     156A                     i1l4716:	
 20313                           ;incstack = 0
 20314                           ; Regs used in ___fltol: [wreg+status,2+status,0]
 20315                           
 20316     156A  1003               	clrc
 20317     156B  0020               	movlb	0	; select bank0
 20318     156C  0D3C               	rlf	___fltol@f1+2,w
 20319     156D  0D3D               	rlf	___fltol@f1+3,w
 20320     156E  00C3               	movwf	___fltol@exp1
 20321     156F  0843               	movf	___fltol@exp1,w
 20322     1570  1D03               	btfss	3,2
 20323     1571  2D73               	goto	u475_21
 20324     1572  2D74               	goto	u475_20
 20325     1573                     u475_21:
 20326     1573  2D7D               	goto	i1l4722
 20327     1574                     u475_20:
 20328     1574                     i1l4718:
 20329     1574  3000               	movlw	0
 20330     1575  00BD               	movwf	?___fltol+3
 20331     1576  3000               	movlw	0
 20332     1577  00BC               	movwf	?___fltol+2
 20333     1578  3000               	movlw	0
 20334     1579  00BB               	movwf	?___fltol+1
 20335     157A  3000               	movlw	0
 20336     157B  00BA               	movwf	?___fltol
 20337     157C  2DD8               	goto	i1l1402
 20338     157D                     i1l4722:
 20339     157D  083A               	movf	___fltol@f1,w
 20340     157E  00BE               	movwf	??___fltol
 20341     157F  083B               	movf	___fltol@f1+1,w
 20342     1580  00BF               	movwf	??___fltol+1
 20343     1581  083C               	movf	___fltol@f1+2,w
 20344     1582  00C0               	movwf	??___fltol+2
 20345     1583  083D               	movf	___fltol@f1+3,w
 20346     1584  00C1               	movwf	??___fltol+3
 20347     1585  301F               	movlw	31
 20348     1586                     u476_25:
 20349     1586  36C1               	lsrf	??___fltol+3,f
 20350     1587  0CC0               	rrf	??___fltol+2,f
 20351     1588  0CBF               	rrf	??___fltol+1,f
 20352     1589  0CBE               	rrf	??___fltol,f
 20353     158A                     u476_20:
 20354     158A  0B89               	decfsz	9,f
 20355     158B  2D86               	goto	u476_25
 20356     158C  083E               	movf	??___fltol,w
 20357     158D  00C2               	movwf	___fltol@sign1
 20358     158E                     i1l4724:
 20359     158E  17BC               	bsf	___fltol@f1+2,7
 20360     158F                     i1l4726:
 20361     158F  30FF               	movlw	255
 20362     1590  05BA               	andwf	___fltol@f1,f
 20363     1591  30FF               	movlw	255
 20364     1592  05BB               	andwf	___fltol@f1+1,f
 20365     1593  30FF               	movlw	255
 20366     1594  05BC               	andwf	___fltol@f1+2,f
 20367     1595  3000               	movlw	0
 20368     1596  05BD               	andwf	___fltol@f1+3,f
 20369     1597                     i1l4728:
 20370     1597  3096               	movlw	150
 20371     1598  02C3               	subwf	___fltol@exp1,f
 20372     1599                     i1l4730:
 20373     1599  1FC3               	btfss	___fltol@exp1,7
 20374     159A  2D9C               	goto	u477_21
 20375     159B  2D9D               	goto	u477_20
 20376     159C                     u477_21:
 20377     159C  2DB3               	goto	i1l4740
 20378     159D                     u477_20:
 20379     159D                     i1l4732:
 20380     159D  0843               	movf	___fltol@exp1,w
 20381     159E  3A80               	xorlw	128
 20382     159F  3E97               	addlw	151
 20383     15A0  1803               	skipnc
 20384     15A1  2DA3               	goto	u478_21
 20385     15A2  2DA4               	goto	u478_20
 20386     15A3                     u478_21:
 20387     15A3  2DA5               	goto	i1l4738
 20388     15A4                     u478_20:
 20389     15A4  2D74               	goto	i1l4718
 20390     15A5                     i1l4738:
 20391     15A5  3001               	movlw	1
 20392     15A6                     u479_25:
 20393     15A6  36BD               	lsrf	___fltol@f1+3,f
 20394     15A7  0CBC               	rrf	___fltol@f1+2,f
 20395     15A8  0CBB               	rrf	___fltol@f1+1,f
 20396     15A9  0CBA               	rrf	___fltol@f1,f
 20397     15AA  0B89               	decfsz	9,f
 20398     15AB  2DA6               	goto	u479_25
 20399     15AC  3001               	movlw	1
 20400     15AD  07C3               	addwf	___fltol@exp1,f
 20401     15AE  1D03               	btfss	3,2
 20402     15AF  2DB1               	goto	u480_21
 20403     15B0  2DB2               	goto	u480_20
 20404     15B1                     u480_21:
 20405     15B1  2DA5               	goto	i1l4738
 20406     15B2                     u480_20:
 20407     15B2  2DC8               	goto	i1l4748
 20408     15B3                     i1l4740:
 20409     15B3  3020               	movlw	32
 20410     15B4  0243               	subwf	___fltol@exp1,w
 20411     15B5  1C03               	skipc
 20412     15B6  2DB8               	goto	u481_21
 20413     15B7  2DB9               	goto	u481_20
 20414     15B8                     u481_21:
 20415     15B8  2DC3               	goto	i1l1409
 20416     15B9                     u481_20:
 20417     15B9  2D74               	goto	i1l4718
 20418     15BA                     i1l4746:
 20419     15BA  3001               	movlw	1
 20420     15BB                     u482_25:
 20421     15BB  35BA               	lslf	___fltol@f1,f
 20422     15BC  0DBB               	rlf	___fltol@f1+1,f
 20423     15BD  0DBC               	rlf	___fltol@f1+2,f
 20424     15BE  0DBD               	rlf	___fltol@f1+3,f
 20425     15BF  0B89               	decfsz	9,f
 20426     15C0  2DBB               	goto	u482_25
 20427     15C1  3001               	movlw	1
 20428     15C2  02C3               	subwf	___fltol@exp1,f
 20429     15C3                     i1l1409:
 20430     15C3  0843               	movf	___fltol@exp1,w
 20431     15C4  1D03               	btfss	3,2
 20432     15C5  2DC7               	goto	u483_21
 20433     15C6  2DC8               	goto	u483_20
 20434     15C7                     u483_21:
 20435     15C7  2DBA               	goto	i1l4746
 20436     15C8                     u483_20:
 20437     15C8                     i1l4748:
 20438     15C8  0842               	movf	___fltol@sign1,w
 20439     15C9  1903               	btfsc	3,2
 20440     15CA  2DCC               	goto	u484_21
 20441     15CB  2DCD               	goto	u484_20
 20442     15CC                     u484_21:
 20443     15CC  2DD8               	goto	i1l1412
 20444     15CD                     u484_20:
 20445     15CD                     i1l4750:
 20446     15CD  09BA               	comf	___fltol@f1,f
 20447     15CE  09BB               	comf	___fltol@f1+1,f
 20448     15CF  09BC               	comf	___fltol@f1+2,f
 20449     15D0  09BD               	comf	___fltol@f1+3,f
 20450     15D1  0ABA               	incf	___fltol@f1,f
 20451     15D2  1903               	skipnz
 20452     15D3  0ABB               	incf	___fltol@f1+1,f
 20453     15D4  1903               	skipnz
 20454     15D5  0ABC               	incf	___fltol@f1+2,f
 20455     15D6  1903               	skipnz
 20456     15D7  0ABD               	incf	___fltol@f1+3,f
 20457     15D8                     i1l1412:
 20458     15D8                     i1l1402:
 20459     15D8  0008               	return
 20460     15D9                     __end_of___fltol:
 20461                           
 20462                           	psect	text80
 20463     1E48                     __ptext80:	
 20464 ;; *************** function _TMR2_ISR *****************
 20465 ;; Defined at:
 20466 ;;		line 114 in file "mcc_generated_files/timer/src/tmr2.c"
 20467 ;; Parameters:    Size  Location     Type
 20468 ;;		None
 20469 ;; Auto vars:     Size  Location     Type
 20470 ;;		None
 20471 ;; Return value:  Size  Location     Type
 20472 ;;                  1    wreg      void 
 20473 ;; Registers used:
 20474 ;;		wreg, status,2, status,0, pclath, cstack
 20475 ;; Tracked objects:
 20476 ;;		On entry : 0/0
 20477 ;;		On exit  : 0/0
 20478 ;;		Unchanged: 0/0
 20479 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 20480 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 20481 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 20482 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 20483 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 20484 ;;Total ram usage:        0 bytes
 20485 ;; Hardware stack levels used: 1
 20486 ;; Hardware stack levels required when called: 1
 20487 ;; This function calls:
 20488 ;;		NULL
 20489 ;;		_TMR2_DefaultPeriodMatchCallback
 20490 ;; This function is called by:
 20491 ;;		_INTERRUPT_InterruptManager
 20492 ;; This function uses a non-reentrant model
 20493 ;;
 20494                           
 20495     1E48                     _TMR2_ISR:	
 20496                           ;psect for function _TMR2_ISR
 20497                           
 20498     1E48                     i1l5996:	
 20499                           ;incstack = 0
 20500                           ; Regs used in _TMR2_ISR: [wreg+status,2+status,0+pclath+cstack]
 20501                           
 20502                           
 20503                           ;mcc_generated_files/timer/src/tmr2.c: 117:     if(((void*)0) != TMR2_PeriodMatchCallbac
      +                          k)
 20504     1E48  0022               	movlb	2	; select bank2
 20505     1E49  0858               	movf	_TMR2_PeriodMatchCallback^(0+256),w
 20506     1E4A  0459               	iorwf	(_TMR2_PeriodMatchCallback+1)^(0+256),w
 20507     1E4B  1903               	btfsc	3,2
 20508     1E4C  2E4E               	goto	u713_21
 20509     1E4D  2E4F               	goto	u713_20
 20510     1E4E                     u713_21:
 20511     1E4E  2E54               	goto	i1l6000
 20512     1E4F                     u713_20:
 20513     1E4F                     i1l5998:
 20514                           
 20515                           ;mcc_generated_files/timer/src/tmr2.c: 118:     {;mcc_generated_files/timer/src/tmr2.c: 
      +                          119:         TMR2_PeriodMatchCallback();
 20516     1E4F  0859               	movf	(_TMR2_PeriodMatchCallback+1)^(0+256),w
 20517     1E50  008A               	movwf	10
 20518     1E51  0858               	movf	_TMR2_PeriodMatchCallback^(0+256),w
 20519     1E52  000A               	callw
 20520     1E53  319E               	pagesel	$
 20521     1E54                     i1l6000:
 20522                           
 20523                           ;mcc_generated_files/timer/src/tmr2.c: 121:     PIR1bits.TMR2IF = 0;
 20524     1E54  0020               	movlb	0	; select bank0
 20525     1E55  1091               	bcf	17,1	;volatile
 20526     1E56                     i1l432:
 20527     1E56  0008               	return
 20528     1E57                     __end_of_TMR2_ISR:
 20529                           
 20530                           	psect	text81
 20531     1001                     __ptext81:	
 20532 ;; *************** function _TMR2_DefaultPeriodMatchCallback *****************
 20533 ;; Defined at:
 20534 ;;		line 129 in file "mcc_generated_files/timer/src/tmr2.c"
 20535 ;; Parameters:    Size  Location     Type
 20536 ;;		None
 20537 ;; Auto vars:     Size  Location     Type
 20538 ;;		None
 20539 ;; Return value:  Size  Location     Type
 20540 ;;                  1    wreg      void 
 20541 ;; Registers used:
 20542 ;;		None
 20543 ;; Tracked objects:
 20544 ;;		On entry : 0/0
 20545 ;;		On exit  : 0/0
 20546 ;;		Unchanged: 0/0
 20547 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 20548 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 20549 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 20550 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 20551 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 20552 ;;Total ram usage:        0 bytes
 20553 ;; Hardware stack levels used: 1
 20554 ;; This function calls:
 20555 ;;		Nothing
 20556 ;; This function is called by:
 20557 ;;		_TMR2_Initialize
 20558 ;;		_TMR2_ISR
 20559 ;; This function uses a non-reentrant model
 20560 ;;
 20561                           
 20562     1001                     _TMR2_DefaultPeriodMatchCallback:	
 20563                           ;psect for function _TMR2_DefaultPeriodMatchCallback
 20564                           
 20565     1001                     i1l438:	
 20566                           ;incstack = 0
 20567                           ; Regs used in _TMR2_DefaultPeriodMatchCallback: []
 20568                           
 20569     1001  0008               	return
 20570     1002                     __end_of_TMR2_DefaultPeriodMatchCallback:
 20571                           
 20572                           	psect	text82
 20573     1002                     __ptext82:	
 20574 ;; *************** function _EUSART_TransmitISR *****************
 20575 ;; Defined at:
 20576 ;;		line 377 in file "mcc_generated_files/uart/src/eusart.c"
 20577 ;; Parameters:    Size  Location     Type
 20578 ;;		None
 20579 ;; Auto vars:     Size  Location     Type
 20580 ;;  tempTxTail      1    0[COMMON] unsigned char 
 20581 ;; Return value:  Size  Location     Type
 20582 ;;                  1    wreg      void 
 20583 ;; Registers used:
 20584 ;;		wreg, fsr1l, fsr1h, status,2, status,0
 20585 ;; Tracked objects:
 20586 ;;		On entry : 0/0
 20587 ;;		On exit  : 0/0
 20588 ;;		Unchanged: 0/0
 20589 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 20590 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 20591 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 20592 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 20593 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 20594 ;;Total ram usage:        1 bytes
 20595 ;; Hardware stack levels used: 1
 20596 ;; This function calls:
 20597 ;;		Nothing
 20598 ;; This function is called by:
 20599 ;;		_EUSART_Initialize
 20600 ;;		_INTERRUPT_InterruptManager
 20601 ;; This function uses a non-reentrant model
 20602 ;;
 20603                           
 20604     1002                     _EUSART_TransmitISR:	
 20605                           ;psect for function _EUSART_TransmitISR
 20606                           
 20607     1002                     i1l6064:	
 20608                           ;incstack = 0
 20609                           ; Regs used in _EUSART_TransmitISR: [wreg+fsr1l+fsr1h+status,2+status,0]
 20610                           
 20611                           
 20612                           ;mcc_generated_files/uart/src/eusart.c: 379:     uint8_t tempTxTail;;mcc_generated_files
      +                          /uart/src/eusart.c: 381:     if(sizeof(eusartTxBuffer) > eusartTxBufferRemaining)
 20613     1002  3008               	movlw	8
 20614     1003  0020               	movlb	0	; select bank0
 20615     1004  026A               	subwf	_eusartTxBufferRemaining,w	;volatile
 20616     1005  1803               	skipnc
 20617     1006  2808               	goto	u721_21
 20618     1007  2809               	goto	u721_20
 20619     1008                     u721_21:
 20620     1008  281B               	goto	i1l745
 20621     1009                     u721_20:
 20622     1009                     i1l6066:
 20623                           
 20624                           ;mcc_generated_files/uart/src/eusart.c: 382:     {;mcc_generated_files/uart/src/eusart.c
      +                          : 383:        TX1REG = eusartTxBuffer[eusartTxTail];
 20625     1009  086B               	movf	_eusartTxTail,w
 20626     100A  3E38               	addlw	(low (_eusartTxBuffer| (0+256)))& (0+255)
 20627     100B  0086               	movwf	6
 20628     100C  3001               	movlw	1	; select bank2/3
 20629     100D  0087               	movwf	7
 20630     100E  0801               	movf	1,w
 20631     100F  0023               	movlb	3	; select bank3
 20632     1010  009A               	movwf	26	;volatile
 20633     1011                     i1l6068:
 20634                           
 20635                           ;mcc_generated_files/uart/src/eusart.c: 384:        tempTxTail = (eusartTxTail + 1U) & (
      +                          (8U) - 1U);
 20636     1011  0020               	movlb	0	; select bank0
 20637     1012  086B               	movf	_eusartTxTail,w	;volatile
 20638     1013  3E01               	addlw	1
 20639     1014  3907               	andlw	7
 20640     1015  00F0               	movwf	EUSART_TransmitISR@tempTxTail
 20641     1016                     i1l6070:
 20642                           
 20643                           ;mcc_generated_files/uart/src/eusart.c: 386:        eusartTxTail = tempTxTail;
 20644     1016  0870               	movf	EUSART_TransmitISR@tempTxTail,w
 20645     1017  00EB               	movwf	_eusartTxTail	;volatile
 20646     1018                     i1l6072:
 20647                           
 20648                           ;mcc_generated_files/uart/src/eusart.c: 387:        eusartTxBufferRemaining++;
 20649     1018  3001               	movlw	1
 20650     1019  07EA               	addwf	_eusartTxBufferRemaining,f	;volatile
 20651                           
 20652                           ;mcc_generated_files/uart/src/eusart.c: 388:     }
 20653     101A  281D               	goto	i1l748
 20654     101B                     i1l745:	
 20655                           ;mcc_generated_files/uart/src/eusart.c: 389:     else
 20656                           
 20657                           
 20658                           ;mcc_generated_files/uart/src/eusart.c: 390:     {;mcc_generated_files/uart/src/eusart.c
      +                          : 391:         PIE1bits.TXIE = 0;
 20659     101B  0021               	movlb	1	; select bank1
 20660     101C  1211               	bcf	17,4	;volatile
 20661     101D                     i1l748:
 20662     101D  0008               	return
 20663     101E                     __end_of_EUSART_TransmitISR:
 20664                           
 20665                           	psect	text83
 20666     124F                     __ptext83:	
 20667 ;; *************** function _EUSART_ReceiveISR *****************
 20668 ;; Defined at:
 20669 ;;		line 308 in file "mcc_generated_files/uart/src/eusart.c"
 20670 ;; Parameters:    Size  Location     Type
 20671 ;;		None
 20672 ;; Auto vars:     Size  Location     Type
 20673 ;;  tempRxHead      1    1[COMMON] unsigned char 
 20674 ;;  regValue        1    0[COMMON] unsigned char 
 20675 ;; Return value:  Size  Location     Type
 20676 ;;                  1    wreg      void 
 20677 ;; Registers used:
 20678 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 20679 ;; Tracked objects:
 20680 ;;		On entry : 0/0
 20681 ;;		On exit  : 0/0
 20682 ;;		Unchanged: 0/0
 20683 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 20684 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 20685 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 20686 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 20687 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 20688 ;;Total ram usage:        2 bytes
 20689 ;; Hardware stack levels used: 1
 20690 ;; Hardware stack levels required when called: 1
 20691 ;; This function calls:
 20692 ;;		NULL
 20693 ;;		_EUSART_DefaultFramingErrorCallback
 20694 ;;		_EUSART_DefaultOverrunErrorCallback
 20695 ;; This function is called by:
 20696 ;;		_EUSART_Initialize
 20697 ;;		_INTERRUPT_InterruptManager
 20698 ;; This function uses a non-reentrant model
 20699 ;;
 20700                           
 20701     124F                     _EUSART_ReceiveISR:	
 20702                           ;psect for function _EUSART_ReceiveISR
 20703                           
 20704     124F                     i1l6030:	
 20705                           ;incstack = 0
 20706                           ; Regs used in _EUSART_ReceiveISR: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
 20707                           
 20708                           
 20709                           ;mcc_generated_files/uart/src/eusart.c: 310:     uint8_t regValue;;mcc_generated_files/u
      +                          art/src/eusart.c: 311:  uint8_t tempRxHead;;mcc_generated_files/uart/src/eusart.c: 314: 
      +                              eusartRxStatusBuffer[eusartRxHead].status = 0;
 20710     124F  0020               	movlb	0	; select bank0
 20711     1250  3569               	lslf	_eusartRxHead,w	;volatile
 20712     1251  3E20               	addlw	(low (_eusartRxStatusBuffer| (0+256)))& (0+255)
 20713     1252  0086               	movwf	6
 20714     1253  3001               	movlw	1	; select bank2/3
 20715     1254  0087               	movwf	7
 20716     1255  3000               	movlw	0
 20717     1256  3FC0               	movwi [0]fsr1
 20718     1257  3FC1               	movwi [1]fsr1
 20719     1258                     i1l6032:
 20720                           
 20721                           ;mcc_generated_files/uart/src/eusart.c: 316:     if(1 == RC1STAbits.OERR)
 20722     1258  0023               	movlb	3	; select bank3
 20723     1259  1C9D               	btfss	29,1	;volatile
 20724     125A  2A5C               	goto	u716_21
 20725     125B  2A5D               	goto	u716_20
 20726     125C                     u716_21:
 20727     125C  2A6F               	goto	i1l6040
 20728     125D                     u716_20:
 20729     125D                     i1l6034:
 20730                           
 20731                           ;mcc_generated_files/uart/src/eusart.c: 317:     {;mcc_generated_files/uart/src/eusart.c
      +                          : 318:         eusartRxStatusBuffer[eusartRxHead].oerr = 1;
 20732     125D  0020               	movlb	0	; select bank0
 20733     125E  3569               	lslf	_eusartRxHead,w	;volatile
 20734     125F  3E20               	addlw	(low (_eusartRxStatusBuffer| (0+256)))& (0+255)
 20735     1260  0086               	movwf	6
 20736     1261  3001               	movlw	1	; select bank2/3
 20737     1262  0087               	movwf	7
 20738     1263  1501               	bsf	1,2
 20739     1264                     i1l6036:
 20740                           
 20741                           ;mcc_generated_files/uart/src/eusart.c: 319:         if(((void*)0) != EUSART_OverrunErro
      +                          rHandler)
 20742     1264  085D               	movf	_EUSART_OverrunErrorHandler,w
 20743     1265  045E               	iorwf	_EUSART_OverrunErrorHandler+1,w
 20744     1266  1903               	btfsc	3,2
 20745     1267  2A69               	goto	u717_21
 20746     1268  2A6A               	goto	u717_20
 20747     1269                     u717_21:
 20748     1269  2A6F               	goto	i1l6040
 20749     126A                     u717_20:
 20750     126A                     i1l6038:
 20751                           
 20752                           ;mcc_generated_files/uart/src/eusart.c: 320:         {;mcc_generated_files/uart/src/eusa
      +                          rt.c: 321:             EUSART_OverrunErrorHandler();
 20753     126A  085E               	movf	_EUSART_OverrunErrorHandler+1,w
 20754     126B  008A               	movwf	10
 20755     126C  085D               	movf	_EUSART_OverrunErrorHandler,w
 20756     126D  000A               	callw
 20757     126E  3192               	pagesel	$
 20758     126F                     i1l6040:
 20759                           
 20760                           ;mcc_generated_files/uart/src/eusart.c: 324:     if(1 == RC1STAbits.FERR)
 20761     126F  0023               	movlb	3	; select bank3
 20762     1270  1D1D               	btfss	29,2	;volatile
 20763     1271  2A73               	goto	u718_21
 20764     1272  2A74               	goto	u718_20
 20765     1273                     u718_21:
 20766     1273  2A86               	goto	i1l6048
 20767     1274                     u718_20:
 20768     1274                     i1l6042:
 20769                           
 20770                           ;mcc_generated_files/uart/src/eusart.c: 325:     {;mcc_generated_files/uart/src/eusart.c
      +                          : 326:         eusartRxStatusBuffer[eusartRxHead].ferr = 1;
 20771     1274  0020               	movlb	0	; select bank0
 20772     1275  3569               	lslf	_eusartRxHead,w	;volatile
 20773     1276  3E20               	addlw	(low (_eusartRxStatusBuffer| (0+256)))& (0+255)
 20774     1277  0086               	movwf	6
 20775     1278  3001               	movlw	1	; select bank2/3
 20776     1279  0087               	movwf	7
 20777     127A  1481               	bsf	1,1
 20778     127B                     i1l6044:
 20779                           
 20780                           ;mcc_generated_files/uart/src/eusart.c: 327:         if(((void*)0) != EUSART_FramingErro
      +                          rHandler)
 20781     127B  085F               	movf	_EUSART_FramingErrorHandler,w
 20782     127C  0460               	iorwf	_EUSART_FramingErrorHandler+1,w
 20783     127D  1903               	btfsc	3,2
 20784     127E  2A80               	goto	u719_21
 20785     127F  2A81               	goto	u719_20
 20786     1280                     u719_21:
 20787     1280  2A86               	goto	i1l6048
 20788     1281                     u719_20:
 20789     1281                     i1l6046:
 20790                           
 20791                           ;mcc_generated_files/uart/src/eusart.c: 328:         {;mcc_generated_files/uart/src/eusa
      +                          rt.c: 329:             EUSART_FramingErrorHandler();
 20792     1281  0860               	movf	_EUSART_FramingErrorHandler+1,w
 20793     1282  008A               	movwf	10
 20794     1283  085F               	movf	_EUSART_FramingErrorHandler,w
 20795     1284  000A               	callw
 20796     1285  3192               	pagesel	$
 20797     1286                     i1l6048:
 20798                           
 20799                           ;mcc_generated_files/uart/src/eusart.c: 333:     regValue = RC1REG;
 20800     1286  0023               	movlb	3	; select bank3
 20801     1287  0819               	movf	25,w	;volatile
 20802     1288  00F0               	movwf	EUSART_ReceiveISR@regValue
 20803     1289                     i1l6050:
 20804                           
 20805                           ;mcc_generated_files/uart/src/eusart.c: 335:     tempRxHead = (eusartRxHead + 1U) & ((8U
      +                          ) - 1U);
 20806     1289  0020               	movlb	0	; select bank0
 20807     128A  0869               	movf	_eusartRxHead,w	;volatile
 20808     128B  3E01               	addlw	1
 20809     128C  3907               	andlw	7
 20810     128D  00F1               	movwf	EUSART_ReceiveISR@tempRxHead
 20811     128E                     i1l6052:
 20812                           
 20813                           ;mcc_generated_files/uart/src/eusart.c: 336:     if (tempRxHead == eusartRxTail)
 20814     128E  0871               	movf	EUSART_ReceiveISR@tempRxHead,w
 20815     128F  0668               	xorwf	_eusartRxTail,w	;volatile
 20816     1290  1D03               	skipz
 20817     1291  2A93               	goto	u720_21
 20818     1292  2A94               	goto	u720_20
 20819     1293                     u720_21:
 20820     1293  2A95               	goto	i1l6056
 20821     1294                     u720_20:
 20822     1294  2AA0               	goto	i1l735
 20823     1295                     i1l6056:
 20824                           
 20825                           ;mcc_generated_files/uart/src/eusart.c: 341:     {;mcc_generated_files/uart/src/eusart.c
      +                          : 342:         eusartRxBuffer[eusartRxHead] = regValue;
 20826     1295  0869               	movf	_eusartRxHead,w
 20827     1296  3E30               	addlw	(low (_eusartRxBuffer| (0+256)))& (0+255)
 20828     1297  0086               	movwf	6
 20829     1298  3001               	movlw	1	; select bank2/3
 20830     1299  0087               	movwf	7
 20831     129A  0870               	movf	EUSART_ReceiveISR@regValue,w
 20832     129B  0081               	movwf	1
 20833     129C                     i1l6058:
 20834                           
 20835                           ;mcc_generated_files/uart/src/eusart.c: 343:   eusartRxHead = tempRxHead;
 20836     129C  0871               	movf	EUSART_ReceiveISR@tempRxHead,w
 20837     129D  00E9               	movwf	_eusartRxHead	;volatile
 20838     129E                     i1l6060:
 20839                           
 20840                           ;mcc_generated_files/uart/src/eusart.c: 344:   eusartRxCount++;
 20841     129E  3001               	movlw	1
 20842     129F  07E7               	addwf	_eusartRxCount,f	;volatile
 20843     12A0                     i1l735:
 20844     12A0  0008               	return
 20845     12A1                     __end_of_EUSART_ReceiveISR:
 20846                           
 20847                           	psect	text84
 20848     1D56                     __ptext84:	
 20849 ;; *************** function _EUSART_DefaultOverrunErrorCallback *****************
 20850 ;; Defined at:
 20851 ;;		line 423 in file "mcc_generated_files/uart/src/eusart.c"
 20852 ;; Parameters:    Size  Location     Type
 20853 ;;		None
 20854 ;; Auto vars:     Size  Location     Type
 20855 ;;		None
 20856 ;; Return value:  Size  Location     Type
 20857 ;;                  1    wreg      void 
 20858 ;; Registers used:
 20859 ;;		None
 20860 ;; Tracked objects:
 20861 ;;		On entry : 0/0
 20862 ;;		On exit  : 0/0
 20863 ;;		Unchanged: 0/0
 20864 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 20865 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 20866 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 20867 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 20868 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 20869 ;;Total ram usage:        0 bytes
 20870 ;; Hardware stack levels used: 1
 20871 ;; This function calls:
 20872 ;;		Nothing
 20873 ;; This function is called by:
 20874 ;;		_EUSART_Initialize
 20875 ;;		_EUSART_ReceiveISR
 20876 ;; This function uses a non-reentrant model
 20877 ;;
 20878                           
 20879     1D56                     _EUSART_DefaultOverrunErrorCallback:	
 20880                           ;psect for function _EUSART_DefaultOverrunErrorCallback
 20881                           
 20882     1D56                     i1l5810:	
 20883                           ;incstack = 0
 20884                           ; Regs used in _EUSART_DefaultOverrunErrorCallback: []
 20885                           
 20886                           
 20887                           ;mcc_generated_files/uart/src/eusart.c: 426:     RC1STAbits.CREN = 0;
 20888     1D56  0023               	movlb	3	; select bank3
 20889     1D57  121D               	bcf	29,4	;volatile
 20890                           
 20891                           ;mcc_generated_files/uart/src/eusart.c: 427:     RC1STAbits.CREN = 1;
 20892     1D58  161D               	bsf	29,4	;volatile
 20893     1D59                     i1l766:
 20894     1D59  0008               	return
 20895     1D5A                     __end_of_EUSART_DefaultOverrunErrorCallback:
 20896                           
 20897                           	psect	text85
 20898     1000                     __ptext85:	
 20899 ;; *************** function _EUSART_DefaultFramingErrorCallback *****************
 20900 ;; Defined at:
 20901 ;;		line 418 in file "mcc_generated_files/uart/src/eusart.c"
 20902 ;; Parameters:    Size  Location     Type
 20903 ;;		None
 20904 ;; Auto vars:     Size  Location     Type
 20905 ;;		None
 20906 ;; Return value:  Size  Location     Type
 20907 ;;                  1    wreg      void 
 20908 ;; Registers used:
 20909 ;;		None
 20910 ;; Tracked objects:
 20911 ;;		On entry : 0/0
 20912 ;;		On exit  : 0/0
 20913 ;;		Unchanged: 0/0
 20914 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 20915 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 20916 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 20917 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 20918 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 20919 ;;Total ram usage:        0 bytes
 20920 ;; Hardware stack levels used: 1
 20921 ;; This function calls:
 20922 ;;		Nothing
 20923 ;; This function is called by:
 20924 ;;		_EUSART_Initialize
 20925 ;;		_EUSART_ReceiveISR
 20926 ;; This function uses a non-reentrant model
 20927 ;;
 20928                           
 20929     1000                     _EUSART_DefaultFramingErrorCallback:	
 20930                           ;psect for function _EUSART_DefaultFramingErrorCallback
 20931                           
 20932     1000                     i1l763:	
 20933                           ;incstack = 0
 20934                           ; Regs used in _EUSART_DefaultFramingErrorCallback: []
 20935                           
 20936     1000  0008               	return
 20937     1001                     __end_of_EUSART_DefaultFramingErrorCallback:
 20938                           
 20939                           	psect	text86
 20940     1E39                     __ptext86:	
 20941 ;; *************** function _ADC_ISR *****************
 20942 ;; Defined at:
 20943 ;;		line 134 in file "mcc_generated_files/adc/src/adc.c"
 20944 ;; Parameters:    Size  Location     Type
 20945 ;;		None
 20946 ;; Auto vars:     Size  Location     Type
 20947 ;;		None
 20948 ;; Return value:  Size  Location     Type
 20949 ;;                  1    wreg      void 
 20950 ;; Registers used:
 20951 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
 20952 ;; Tracked objects:
 20953 ;;		On entry : 0/0
 20954 ;;		On exit  : 0/0
 20955 ;;		Unchanged: 0/0
 20956 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 20957 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 20958 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 20959 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 20960 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 20961 ;;Total ram usage:        0 bytes
 20962 ;; Hardware stack levels used: 1
 20963 ;; Hardware stack levels required when called: 2
 20964 ;; This function calls:
 20965 ;;		NULL
 20966 ;;		_ADC_DefaultInterruptHandler
 20967 ;;		_adcConversionDoneHandler
 20968 ;; This function is called by:
 20969 ;;		_INTERRUPT_InterruptManager
 20970 ;; This function uses a non-reentrant model
 20971 ;;
 20972                           
 20973     1E39                     _ADC_ISR:	
 20974                           ;psect for function _ADC_ISR
 20975                           
 20976     1E39                     i1l5984:	
 20977                           ;incstack = 0
 20978                           ; Regs used in _ADC_ISR: [wreg-fsr0h+status,2+status,0+pclath+cstack]
 20979                           
 20980                           
 20981                           ;mcc_generated_files/adc/src/adc.c: 137:     PIR1bits.ADIF = 0;
 20982     1E39  0020               	movlb	0	; select bank0
 20983     1E3A  1311               	bcf	17,6	;volatile
 20984     1E3B                     i1l5986:
 20985                           
 20986                           ;mcc_generated_files/adc/src/adc.c: 139:  if(ADC_InterruptHandler)
 20987     1E3B  0022               	movlb	2	; select bank2
 20988     1E3C  085E               	movf	_ADC_InterruptHandler^(0+256),w
 20989     1E3D  045F               	iorwf	(_ADC_InterruptHandler+1)^(0+256),w
 20990     1E3E  1903               	btfsc	3,2
 20991     1E3F  2E41               	goto	u711_21
 20992     1E40  2E42               	goto	u711_20
 20993     1E41                     u711_21:
 20994     1E41  2E47               	goto	i1l52
 20995     1E42                     u711_20:
 20996     1E42                     i1l5988:
 20997                           
 20998                           ;mcc_generated_files/adc/src/adc.c: 140:     {;mcc_generated_files/adc/src/adc.c: 141:  
      +                                 ADC_InterruptHandler();
 20999     1E42  085F               	movf	(_ADC_InterruptHandler+1)^(0+256),w
 21000     1E43  008A               	movwf	10
 21001     1E44  085E               	movf	_ADC_InterruptHandler^(0+256),w
 21002     1E45  000A               	callw
 21003     1E46  319E               	pagesel	$
 21004     1E47                     i1l52:
 21005     1E47  0008               	return
 21006     1E48                     __end_of_ADC_ISR:
 21007                           
 21008                           	psect	text87
 21009     1D55                     __ptext87:	
 21010 ;; *************** function _ADC_DefaultInterruptHandler *****************
 21011 ;; Defined at:
 21012 ;;		line 150 in file "mcc_generated_files/adc/src/adc.c"
 21013 ;; Parameters:    Size  Location     Type
 21014 ;;		None
 21015 ;; Auto vars:     Size  Location     Type
 21016 ;;		None
 21017 ;; Return value:  Size  Location     Type
 21018 ;;                  1    wreg      void 
 21019 ;; Registers used:
 21020 ;;		None
 21021 ;; Tracked objects:
 21022 ;;		On entry : 0/0
 21023 ;;		On exit  : 0/0
 21024 ;;		Unchanged: 0/0
 21025 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 21026 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 21027 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 21028 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 21029 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 21030 ;;Total ram usage:        0 bytes
 21031 ;; Hardware stack levels used: 1
 21032 ;; This function calls:
 21033 ;;		Nothing
 21034 ;; This function is called by:
 21035 ;;		_ADC_Initialize
 21036 ;;		_ADC_ISR
 21037 ;; This function uses a non-reentrant model
 21038 ;;
 21039                           
 21040     1D55                     _ADC_DefaultInterruptHandler:	
 21041                           ;psect for function _ADC_DefaultInterruptHandler
 21042                           
 21043     1D55                     i1l58:	
 21044                           ;incstack = 0
 21045                           ; Regs used in _ADC_DefaultInterruptHandler: []
 21046                           
 21047     1D55  0008               	return
 21048     1D56                     __end_of_ADC_DefaultInterruptHandler:
 21049                           
 21050                           	psect	text88
 21051     11CD                     __ptext88:	
 21052 ;; *************** function _adcConversionDoneHandler *****************
 21053 ;; Defined at:
 21054 ;;		line 5 in file "adcMeasurements.c"
 21055 ;; Parameters:    Size  Location     Type
 21056 ;;		None
 21057 ;; Auto vars:     Size  Location     Type
 21058 ;;		None
 21059 ;; Return value:  Size  Location     Type
 21060 ;;                  1    wreg      void 
 21061 ;; Registers used:
 21062 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
 21063 ;; Tracked objects:
 21064 ;;		On entry : 0/0
 21065 ;;		On exit  : 0/0
 21066 ;;		Unchanged: 0/0
 21067 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 21068 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 21069 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 21070 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 21071 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 21072 ;;Total ram usage:        2 bytes
 21073 ;; Hardware stack levels used: 1
 21074 ;; Hardware stack levels required when called: 1
 21075 ;; This function calls:
 21076 ;;		_ADC_GetConversionResult
 21077 ;;		i1_ADC_SelectChannel
 21078 ;; This function is called by:
 21079 ;;		_initAdcMultiplexer
 21080 ;;		_ADC_ISR
 21081 ;; This function uses a non-reentrant model
 21082 ;;
 21083                           
 21084     11CD                     _adcConversionDoneHandler:	
 21085                           ;psect for function _adcConversionDoneHandler
 21086                           
 21087     11CD                     i1l5812:	
 21088                           ;incstack = 0
 21089                           ; Regs used in _adcConversionDoneHandler: [wreg-fsr0h+status,2+status,0+pclath+cstack]
 21090                           
 21091                           
 21092                           ;adcMeasurements.c: 10:     static adc_channel_t new_channel = potentiometer;;adcMeasure
      +                          ments.c: 11:     switch (new_channel) {
 21093     11CD  29F0               	goto	i1l5828
 21094     11CE                     i1l5814:
 21095                           
 21096                           ;adcMeasurements.c: 13:             ADC_potentiometer = ADC_GetConversionResult();
 21097     11CE  319D  255E  3191   	fcall	_ADC_GetConversionResult
 21098     11D1  0871               	movf	?_ADC_GetConversionResult+1,w
 21099     11D2  0022               	movlb	2	; select bank2
 21100     11D3  00CD               	movwf	(_ADC_potentiometer+1)^(0+256)	;volatile
 21101     11D4  0870               	movf	?_ADC_GetConversionResult,w
 21102     11D5  00CC               	movwf	_ADC_potentiometer^(0+256)	;volatile
 21103     11D6                     i1l5816:
 21104                           
 21105                           ;adcMeasurements.c: 14:             new_channel = hoogtesensor;
 21106     11D6  3012               	movlw	18
 21107     11D7  0020               	movlb	0	; select bank0
 21108     11D8  00EE               	movwf	adcConversionDoneHandler@new_channel
 21109                           
 21110                           ;adcMeasurements.c: 15:             break;
 21111     11D9  2A04               	goto	i1l5830
 21112     11DA                     i1l5818:
 21113                           
 21114                           ;adcMeasurements.c: 17:             ADC_hoogtesensor = ADC_GetConversionResult();
 21115     11DA  319D  255E  3191   	fcall	_ADC_GetConversionResult
 21116     11DD  0871               	movf	?_ADC_GetConversionResult+1,w
 21117     11DE  0020               	movlb	0	; select bank0
 21118     11DF  00DC               	movwf	_ADC_hoogtesensor+1	;volatile
 21119     11E0  0870               	movf	?_ADC_GetConversionResult,w
 21120     11E1  00DB               	movwf	_ADC_hoogtesensor	;volatile
 21121     11E2                     i1l5820:
 21122                           
 21123                           ;adcMeasurements.c: 18:             new_channel = pomphoogte;
 21124     11E2  3013               	movlw	19
 21125     11E3  00EE               	movwf	adcConversionDoneHandler@new_channel
 21126                           
 21127                           ;adcMeasurements.c: 19:             break;
 21128     11E4  2A04               	goto	i1l5830
 21129     11E5                     i1l5822:
 21130                           
 21131                           ;adcMeasurements.c: 21:             ADC_pomphoogte = ADC_GetConversionResult();
 21132     11E5  319D  255E  3191   	fcall	_ADC_GetConversionResult
 21133     11E8  0871               	movf	?_ADC_GetConversionResult+1,w
 21134     11E9  0020               	movlb	0	; select bank0
 21135     11EA  00DA               	movwf	_ADC_pomphoogte+1	;volatile
 21136     11EB  0870               	movf	?_ADC_GetConversionResult,w
 21137     11EC  00D9               	movwf	_ADC_pomphoogte	;volatile
 21138     11ED                     i1l5824:
 21139                           
 21140                           ;adcMeasurements.c: 22:             new_channel = potentiometer;
 21141     11ED  3010               	movlw	16
 21142     11EE  00EE               	movwf	adcConversionDoneHandler@new_channel
 21143                           
 21144                           ;adcMeasurements.c: 23:             break;
 21145     11EF  2A04               	goto	i1l5830
 21146     11F0                     i1l5828:
 21147     11F0  0020               	movlb	0	; select bank0
 21148     11F1  086E               	movf	adcConversionDoneHandler@new_channel,w
 21149     11F2  00F2               	movwf	??_adcConversionDoneHandler
 21150     11F3  01F3               	clrf	??_adcConversionDoneHandler+1
 21151                           
 21152                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 21153                           ; Switch size 1, requested type "simple"
 21154                           ; Number of cases is 1, Range of values is 0 to 0
 21155                           ; switch strategies available:
 21156                           ; Name         Instructions Cycles
 21157                           ; simple_byte            4     3 (average)
 21158                           ; direct_byte            8     6 (fixed)
 21159                           ; jumptable            260     6 (fixed)
 21160                           ;	Chosen strategy is simple_byte
 21161     11F4  0873               	movf	??_adcConversionDoneHandler+1,w
 21162     11F5  3A00               	xorlw	0	; case 0
 21163     11F6  1903               	skipnz
 21164     11F7  29F9               	goto	i1l6310
 21165     11F8  2A04               	goto	i1l5830
 21166     11F9                     i1l6310:
 21167                           
 21168                           ; Switch size 1, requested type "simple"
 21169                           ; Number of cases is 3, Range of values is 16 to 19
 21170                           ; switch strategies available:
 21171                           ; Name         Instructions Cycles
 21172                           ; simple_byte           10     6 (average)
 21173                           ; direct_byte           17     9 (fixed)
 21174                           ; jumptable            263     9 (fixed)
 21175                           ;	Chosen strategy is simple_byte
 21176     11F9  0872               	movf	??_adcConversionDoneHandler,w
 21177     11FA  3A10               	xorlw	16	; case 16
 21178     11FB  1903               	skipnz
 21179     11FC  29CE               	goto	i1l5814
 21180     11FD  3A02               	xorlw	2	; case 18
 21181     11FE  1903               	skipnz
 21182     11FF  29DA               	goto	i1l5818
 21183     1200  3A01               	xorlw	1	; case 19
 21184     1201  1903               	skipnz
 21185     1202  29E5               	goto	i1l5822
 21186     1203  2A04               	goto	i1l5830
 21187     1204                     i1l5830:
 21188                           
 21189                           ;adcMeasurements.c: 25:     ADC_SelectChannel(new_channel);
 21190     1204  086E               	movf	adcConversionDoneHandler@new_channel,w
 21191     1205  319D  25D5  3191   	fcall	i1_ADC_SelectChannel
 21192     1208                     i1l834:
 21193     1208  0008               	return
 21194     1209                     __end_of_adcConversionDoneHandler:
 21195                           
 21196                           	psect	text89
 21197     1DD5                     __ptext89:	
 21198 ;; *************** function i1_ADC_SelectChannel *****************
 21199 ;; Defined at:
 21200 ;;		line 82 in file "mcc_generated_files/adc/src/adc.c"
 21201 ;; Parameters:    Size  Location     Type
 21202 ;;  channel         1    wreg     enum E6663
 21203 ;; Auto vars:     Size  Location     Type
 21204 ;;  channel         1    1[COMMON] enum E6663
 21205 ;; Return value:  Size  Location     Type
 21206 ;;                  1    wreg      void 
 21207 ;; Registers used:
 21208 ;;		wreg, status,2, status,0
 21209 ;; Tracked objects:
 21210 ;;		On entry : 0/0
 21211 ;;		On exit  : 0/0
 21212 ;;		Unchanged: 0/0
 21213 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 21214 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 21215 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 21216 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 21217 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 21218 ;;Total ram usage:        2 bytes
 21219 ;; Hardware stack levels used: 1
 21220 ;; This function calls:
 21221 ;;		Nothing
 21222 ;; This function is called by:
 21223 ;;		_adcConversionDoneHandler
 21224 ;; This function uses a non-reentrant model
 21225 ;;
 21226                           
 21227     1DD5                     i1_ADC_SelectChannel:	
 21228                           ;psect for function i1_ADC_SelectChannel
 21229                           
 21230                           
 21231                           ;incstack = 0
 21232                           ; Regs used in i1_ADC_SelectChannel: [wreg+status,2+status,0]
 21233                           ;i1ADC_SelectChannel@channel stored from wreg
 21234     1DD5  00F1               	movwf	i1ADC_SelectChannel@channel
 21235     1DD6                     i1l5268:
 21236                           
 21237                           ;mcc_generated_files/adc/src/adc.c: 82: void ADC_SelectChannel(adc_channel_t channel);mc
      +                          c_generated_files/adc/src/adc.c: 83: {;mcc_generated_files/adc/src/adc.c: 85:     ADCON0
      +                          bits.CHS = channel;
 21238     1DD6  0871               	movf	i1ADC_SelectChannel@channel,w
 21239     1DD7  00F0               	movwf	??i1_ADC_SelectChannel
 21240     1DD8  0DF0               	rlf	??i1_ADC_SelectChannel,f
 21241     1DD9  0DF0               	rlf	??i1_ADC_SelectChannel,f
 21242     1DDA  0021               	movlb	1	; select bank1
 21243     1DDB  081D               	movf	29,w	;volatile
 21244     1DDC  0670               	xorwf	??i1_ADC_SelectChannel,w
 21245     1DDD  3903               	andlw	-253
 21246     1DDE  0670               	xorwf	??i1_ADC_SelectChannel,w
 21247     1DDF  009D               	movwf	29	;volatile
 21248     1DE0                     i1l30:
 21249     1DE0  0008               	return
 21250     1DE1                     __end_ofi1_ADC_SelectChannel:
 21251                           
 21252                           	psect	text90
 21253     1D5E                     __ptext90:	
 21254 ;; *************** function _ADC_GetConversionResult *****************
 21255 ;; Defined at:
 21256 ;;		line 100 in file "mcc_generated_files/adc/src/adc.c"
 21257 ;; Parameters:    Size  Location     Type
 21258 ;;		None
 21259 ;; Auto vars:     Size  Location     Type
 21260 ;;		None
 21261 ;; Return value:  Size  Location     Type
 21262 ;;                  2    0[COMMON] unsigned short 
 21263 ;; Registers used:
 21264 ;;		wreg
 21265 ;; Tracked objects:
 21266 ;;		On entry : 0/0
 21267 ;;		On exit  : 0/0
 21268 ;;		Unchanged: 0/0
 21269 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 21270 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 21271 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 21272 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 21273 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 21274 ;;Total ram usage:        2 bytes
 21275 ;; Hardware stack levels used: 1
 21276 ;; This function calls:
 21277 ;;		Nothing
 21278 ;; This function is called by:
 21279 ;;		_adcConversionDoneHandler
 21280 ;; This function uses a non-reentrant model
 21281 ;;
 21282                           
 21283     1D5E                     _ADC_GetConversionResult:	
 21284                           ;psect for function _ADC_GetConversionResult
 21285                           
 21286     1D5E                     i1l4640:	
 21287                           ;incstack = 0
 21288                           ; Regs used in _ADC_GetConversionResult: [wreg]
 21289                           
 21290                           
 21291                           ;mcc_generated_files/adc/src/adc.c: 103:     return ((adc_result_t)((ADRESH << 8) + ADRE
      +                          SL));
 21292     1D5E  0021               	movlb	1	; select bank1
 21293     1D5F  081C               	movf	28,w	;volatile
 21294     1D60  00F1               	movwf	?_ADC_GetConversionResult+1
 21295     1D61  081B               	movf	27,w	;volatile
 21296     1D62  00F0               	movwf	?_ADC_GetConversionResult
 21297     1D63                     i1l39:
 21298     1D63  0008               	return
 21299     1D64                     __end_of_ADC_GetConversionResult:
 21300     0002                     ___latbits      equ	2
 21301     007E                     btemp           set	126	;btemp
 21302     007E                     int$flags       set	126
 21303     007E                     wtemp0          set	126
 21304                           
 21305                           	psect	config
 21306                           
 21307                           ;Config register CONFIG1 @ 0x8007
 21308                           ;	FEXTOSC External Oscillator mode Selection bits
 21309                           ;	FEXTOSC = OFF, Oscillator not enabled
 21310                           ;	Power-up default value for COSC bits
 21311                           ;	RSTOSC = HFINT32, HFINTOSC with 2x PLL (32MHz)
 21312                           ;	Clock Out Enable bit
 21313                           ;	CLKOUTEN = OFF, CLKOUT function is disabled; I/O or oscillator function on OSC2
 21314                           ;	Clock Switch Enable bit
 21315                           ;	CSWEN = ON, Writing to NOSC and NDIV is allowed
 21316                           ;	Fail-Safe Clock Monitor Enable
 21317                           ;	FCMEN = ON, Fail-Safe Clock Monitor is enabled
 21318     8007                     	org	32775
 21319     8007  3F8C               	dw	16268
 21320                           
 21321                           ;Config register CONFIG2 @ 0x8008
 21322                           ;	Master Clear Enable bit
 21323                           ;	MCLRE = ON, MCLR/VPP pin function is MCLR; Weak pull-up enabled
 21324                           ;	Power-up Timer Enable bit
 21325                           ;	PWRTE = OFF, PWRT disabled
 21326                           ;	Watchdog Timer Enable bits
 21327                           ;	WDTE = OFF, WDT disabled; SWDTEN is ignored
 21328                           ;	Low-power BOR enable bit
 21329                           ;	LPBOREN = OFF, ULPBOR disabled
 21330                           ;	Brown-out Reset Enable bits
 21331                           ;	BOREN = ON, Brown-out Reset enabled, SBOREN bit ignored
 21332                           ;	Brown-out Reset Voltage selection bit
 21333                           ;	BORV = LOW, Brown-out voltage (Vbor) set to 2.45V
 21334                           ;	PPSLOCK bit One-Way Set Enable bit
 21335                           ;	PPS1WAY = ON, The PPSLOCK bit can be cleared and set only once; PPS registers remain l
      +                          ocked after one clear/set cycle
 21336                           ;	Stack Overflow/Underflow Reset Enable bit
 21337                           ;	STVREN = ON, Stack Overflow or Underflow will cause a Reset
 21338                           ;	Debugger enable bit
 21339                           ;	DEBUG = 0x1, unprogrammed default
 21340     8008                     	org	32776
 21341     8008  3FF3               	dw	16371
 21342                           
 21343                           ;Config register CONFIG3 @ 0x8009
 21344                           ;	User NVM self-write protection bits
 21345                           ;	WRT = OFF, Write protection off
 21346                           ;	Low Voltage Programming Enable bit
 21347                           ;	LVP = ON, Low Voltage programming enabled. MCLR/VPP pin function is MCLR. MCLRE config
      +                          uration bit is ignored.
 21348     8009                     	org	32777
 21349     8009  3FFF               	dw	16383
 21350                           
 21351                           ;Config register CONFIG4 @ 0x800A
 21352                           ;	User NVM Program Memory Code Protection bit
 21353                           ;	CP = OFF, User NVM code protection disabled
 21354                           ;	Data NVM Memory Code Protection bit
 21355                           ;	CPD = OFF, Data NVM code protection disabled
 21356     800A                     	org	32778
 21357     800A  3FFF               	dw	16383

Data Sizes:
    Strings     136
    Constant    86
    Data        12
    BSS         128
    Persistent  44
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     14      14
    BANK0            80     53      79
    BANK1            80     77      79
    BANK2            80      0      72
    BANK3            80      0      52
    BANK4            80      0       0
    BANK5            80      0       0
    BANK6            80      0       0
    BANK7            80      0       0
    BANK8            80      0       0
    BANK9            80      0       0
    BANK10           80      0       0
    BANK11           80      0       0
    BANK12           48      0       0

Pointer List with Targets:

    ADC_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> ADC_DefaultInterruptHandler(), adcConversionDoneHandler(), NULL(), 

    ADC_SetInterruptHandler@InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> ADC_DefaultInterruptHandler(), adcConversionDoneHandler(), 

    atoi@s	PTR const unsigned char  size(1) Largest target is 20
		 -> line(BANK3[20]), 

    dtoa@fp	PTR struct _IO_FILE size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    EUSART_FramingErrorCallbackRegister@callbackHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART_DefaultFramingErrorCallback(), 

    EUSART_FramingErrorHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART_DefaultFramingErrorCallback(), NULL(), 

    EUSART_OverrunErrorCallbackRegister@callbackHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART_DefaultOverrunErrorCallback(), 

    EUSART_OverrunErrorHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART_DefaultOverrunErrorCallback(), NULL(), 

    EUSART_RxCompleteInterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> NULL(), 

    EUSART_RxInterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART_ReceiveISR(), NULL(), 

    EUSART_TxCompleteInterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> NULL(), 

    EUSART_TxInterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART_TransmitISR(), NULL(), 

    fputc@fp	PTR struct _IO_FILE size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    fputc@fp$.$buffer	PTR unsigned char  size(2) Largest target is 0

    fputc@fp$.$source	PTR const unsigned char  size(2) Largest target is 0

    fputs@fp	PTR struct _IO_FILE size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    fputs@s	PTR const unsigned char  size(1) Largest target is 32
		 -> dbuf(BANK3[32]), 

    INT_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> INT_DefaultInterruptHandler(), NULL(), 

    INT_SetInterruptHandler@InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> INT_DefaultInterruptHandler(), 

    ledstrip$BufferExchange	PTR FTN(PTR void ,unsigned int ,)void  size(2) Largest target is 1
		 -> SPI1_BufferExchange(), 

    ledstrip$BufferRead	PTR FTN(PTR void ,unsigned int ,)void  size(2) Largest target is 1
		 -> SPI1_BufferRead(), 

    ledstrip$BufferWrite	PTR FTN(PTR void ,unsigned int ,)void  size(2) Largest target is 1
		 -> SPI1_BufferWrite(), 

    ledstrip$ByteExchange	PTR FTN(unsigned char ,)unsigned char  size(2) Largest target is 1
		 -> SPI1_ByteExchange(), 

    ledstrip$ByteRead	PTR FTN()unsigned char  size(2) Largest target is 1
		 -> SPI1_ByteRead(), 

    ledstrip$ByteWrite	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> SPI1_ByteWrite(), 

    ledstrip$Close	PTR FTN()void  size(2) Largest target is 1
		 -> SPI1_Close(), 

    ledstrip$Deinitialize	PTR FTN()void  size(2) Largest target is 1
		 -> SPI1_Deinitialize(), 

    ledstrip$Initialize	PTR FTN()void  size(2) Largest target is 1
		 -> SPI1_Initialize(), 

    ledstrip$IsRxReady	PTR FTN()_Bool  size(2) Largest target is 1
		 -> SPI1_IsRxReady(), 

    ledstrip$IsTxReady	PTR FTN()_Bool  size(2) Largest target is 1
		 -> SPI1_IsTxReady(), 

    ledstrip$Open	PTR FTN(unsigned char ,)_Bool  size(2) Largest target is 1
		 -> SPI1_Open(), 

    ledstrip$RxCompleteCallbackRegister	PTR FTN(PTR FTN()void ,)void  size(2) Largest target is 1
		 -> NULL(), 

    ledstrip$TxCompleteCallbackRegister	PTR FTN(PTR FTN()void ,)void  size(2) Largest target is 1
		 -> NULL(), 

    pad@buf	PTR unsigned char  size(1) Largest target is 32
		 -> dbuf(BANK3[32]), 

    pad@fp	PTR struct _IO_FILE size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    printf@ap	PTR void [1] size(1) Largest target is 2
		 -> ?_printf(BANK1[2]), 

    printf@fmt	PTR const unsigned char  size(2) Largest target is 25
		 -> STR_1(CODE[8]), STR_10(CODE[17]), STR_2(CODE[24]), STR_3(CODE[10]), 
		 -> STR_4(CODE[11]), STR_5(CODE[3]), STR_6(CODE[25]), STR_7(CODE[13]), 
		 -> STR_8(CODE[13]), STR_9(CODE[15]), 

    read_prec_or_width@ap	PTR PTR void [1] size(1) Largest target is 1
		 -> printf@ap(BANK1[1]), 

    read_prec_or_width@fmt	PTR PTR const unsigned char  size(1) Largest target is 2
		 -> vfprintf@cfmt(BANK1[2]), 

    S2068$buffer	PTR unsigned char  size(2) Largest target is 0

    S2068$source	PTR const unsigned char  size(2) Largest target is 0

    S242$4$0	PTR void  size(2) Largest target is 0

    S242$5$0	PTR void  size(2) Largest target is 0

    S242$6$0	PTR void  size(2) Largest target is 0

    S242SPI_INTERFACE$BufferExchange	PTR FTN(PTR void ,unsigned int ,)void  size(2) Largest target is 1
		 -> SPI1_BufferExchange(), 

    S242SPI_INTERFACE$BufferRead	PTR FTN(PTR void ,unsigned int ,)void  size(2) Largest target is 1
		 -> SPI1_BufferRead(), 

    S242SPI_INTERFACE$BufferWrite	PTR FTN(PTR void ,unsigned int ,)void  size(2) Largest target is 1
		 -> SPI1_BufferWrite(), 

    S242SPI_INTERFACE$ByteExchange	PTR FTN(unsigned char ,)unsigned char  size(2) Largest target is 1
		 -> SPI1_ByteExchange(), 

    S242SPI_INTERFACE$ByteRead	PTR FTN()unsigned char  size(2) Largest target is 1
		 -> SPI1_ByteRead(), 

    S242SPI_INTERFACE$ByteWrite	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> SPI1_ByteWrite(), 

    S242SPI_INTERFACE$Close	PTR FTN()void  size(2) Largest target is 1
		 -> SPI1_Close(), 

    S242SPI_INTERFACE$Deinitialize	PTR FTN()void  size(2) Largest target is 1
		 -> SPI1_Deinitialize(), 

    S242SPI_INTERFACE$Initialize	PTR FTN()void  size(2) Largest target is 1
		 -> SPI1_Initialize(), 

    S242SPI_INTERFACE$IsRxReady	PTR FTN()_Bool  size(2) Largest target is 1
		 -> SPI1_IsRxReady(), 

    S242SPI_INTERFACE$IsTxReady	PTR FTN()_Bool  size(2) Largest target is 1
		 -> SPI1_IsTxReady(), 

    S242SPI_INTERFACE$Open	PTR FTN(unsigned char ,)_Bool  size(2) Largest target is 1
		 -> SPI1_Open(), 

    S242SPI_INTERFACE$RxCompleteCallbackRegister	PTR FTN(PTR FTN()void ,)void  size(2) Largest target is 1
		 -> NULL(), 

    S242SPI_INTERFACE$TxCompleteCallbackRegister	PTR FTN(PTR FTN()void ,)void  size(2) Largest target is 1
		 -> NULL(), 

    S997$17$0	PTR FTN()void  size(2) Largest target is 0

    S997$18$0	PTR FTN()void  size(2) Largest target is 0

    S997$20$0	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART_DefaultFramingErrorCallback(), 

    S997$21$0	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART_DefaultOverrunErrorCallback(), 

    S997$AutoBaudEventEnableGet	PTR FTN()_Bool  size(2) Largest target is 1
		 -> NULL(), 

    S997$AutoBaudQuery	PTR FTN()_Bool  size(2) Largest target is 1
		 -> EUSART_AutoBaudQuery(), 

    S997$AutoBaudSet	PTR FTN(_Bool ,)void  size(2) Largest target is 1
		 -> EUSART_AutoBaudSet(), 

    S997$BaudRateGet	PTR FTN()unsigned long  size(2) Largest target is 1
		 -> NULL(), 

    S997$BaudRateSet	PTR FTN(unsigned long ,)void  size(2) Largest target is 1
		 -> NULL(), 

    S997$BRGCountGet	PTR FTN()unsigned long  size(2) Largest target is 1
		 -> NULL(), 

    S997$BRGCountSet	PTR FTN(unsigned long ,)void  size(2) Largest target is 1
		 -> NULL(), 

    S997$Deinitialize	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART_Deinitialize(), 

    S997$ErrorGet	PTR FTN()unsigned int  size(2) Largest target is 2
		 -> EUSART_ErrorGet(), 

    S997$EventCallbackRegister	PTR FTN(PTR FTN()void ,)void  size(2) Largest target is 1
		 -> NULL(), 

    S997$FramingErrorCallbackRegister	PTR FTN(PTR FTN()void ,)void  size(2) Largest target is 1
		 -> EUSART_FramingErrorCallbackRegister(), 

    S997$Initialize	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART_Initialize(), 

    S997$IsRxReady	PTR FTN()_Bool  size(2) Largest target is 1
		 -> EUSART_IsRxReady(), 

    S997$IsTxDone	PTR FTN()_Bool  size(2) Largest target is 1
		 -> EUSART_IsTxDone(), 

    S997$IsTxReady	PTR FTN()_Bool  size(2) Largest target is 1
		 -> EUSART_IsTxReady(), 

    S997$OverrunErrorCallbackRegister	PTR FTN(PTR FTN()void ,)void  size(2) Largest target is 1
		 -> EUSART_OverrunErrorCallbackRegister(), 

    S997$ParityErrorCallbackRegister	PTR FTN(PTR FTN()void ,)void  size(2) Largest target is 1
		 -> NULL(), 

    S997$Read	PTR FTN()unsigned char  size(2) Largest target is 1
		 -> EUSART_Read(), 

    S997$RxCompleteCallbackRegister	PTR FTN(PTR FTN()void ,)void  size(2) Largest target is 1
		 -> EUSART_RxCompleteCallbackRegister(), 

    S997$TransmitDisable	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART_TransmitDisable(), 

    S997$TransmitEnable	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART_TransmitEnable(), 

    S997$TxCollisionCallbackRegister	PTR FTN(PTR FTN()void ,)void  size(2) Largest target is 1
		 -> NULL(), 

    S997$TxCompleteCallbackRegister	PTR FTN(PTR FTN()void ,)void  size(2) Largest target is 1
		 -> EUSART_TxCompleteCallbackRegister(), 

    S997$Write	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> EUSART_Write(), 

    sp__readLine	PTR unsigned char  size(1) Largest target is 20
		 -> line(BANK3[20]), 

    str2float@str	PTR unsigned char  size(1) Largest target is 20
		 -> line(BANK3[20]), 

    strlen@a	PTR const unsigned char  size(1) Largest target is 32
		 -> dbuf(BANK3[32]), 

    strlen@s	PTR const unsigned char  size(1) Largest target is 32
		 -> dbuf(BANK3[32]), 

    TMR2_PeriodMatchCallback	PTR FTN()void  size(2) Largest target is 1
		 -> TMR2_DefaultPeriodMatchCallback(), NULL(), 

    TMR4_PeriodMatchCallback	PTR FTN()void  size(2) Largest target is 1
		 -> controller(), TMR4_DefaultPeriodMatchCallback(), NULL(), 

    TMR4_PeriodMatchCallbackRegister@CallbackHandler	PTR FTN()void  size(2) Largest target is 1
		 -> controller(), 

    TMR6_PeriodMatchCallback	PTR FTN()void  size(2) Largest target is 1
		 -> TMR6_DefaultPeriodMatchCallback(), updateLedstripAnimation(), NULL(), 

    TMR6_PeriodMatchCallbackRegister@CallbackHandler	PTR FTN()void  size(2) Largest target is 1
		 -> updateLedstripAnimation(), 

    UART1$AutoBaudEventEnableGet	PTR FTN()_Bool  size(2) Largest target is 1
		 -> NULL(), 

    UART1$AutoBaudQuery	PTR FTN()_Bool  size(2) Largest target is 1
		 -> EUSART_AutoBaudQuery(), 

    UART1$AutoBaudSet	PTR FTN(_Bool ,)void  size(2) Largest target is 1
		 -> EUSART_AutoBaudSet(), 

    UART1$BaudRateGet	PTR FTN()unsigned long  size(2) Largest target is 1
		 -> NULL(), 

    UART1$BaudRateSet	PTR FTN(unsigned long ,)void  size(2) Largest target is 1
		 -> NULL(), 

    UART1$BRGCountGet	PTR FTN()unsigned long  size(2) Largest target is 1
		 -> NULL(), 

    UART1$BRGCountSet	PTR FTN(unsigned long ,)void  size(2) Largest target is 1
		 -> NULL(), 

    UART1$Deinitialize	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART_Deinitialize(), 

    UART1$ErrorGet	PTR FTN()unsigned int  size(2) Largest target is 2
		 -> EUSART_ErrorGet(), 

    UART1$EventCallbackRegister	PTR FTN(PTR FTN()void ,)void  size(2) Largest target is 1
		 -> NULL(), 

    UART1$FramingErrorCallbackRegister	PTR FTN(PTR FTN()void ,)void  size(2) Largest target is 1
		 -> EUSART_FramingErrorCallbackRegister(), 

    UART1$Initialize	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART_Initialize(), 

    UART1$IsRxReady	PTR FTN()_Bool  size(2) Largest target is 1
		 -> EUSART_IsRxReady(), 

    UART1$IsTxDone	PTR FTN()_Bool  size(2) Largest target is 1
		 -> EUSART_IsTxDone(), 

    UART1$IsTxReady	PTR FTN()_Bool  size(2) Largest target is 1
		 -> EUSART_IsTxReady(), 

    UART1$OverrunErrorCallbackRegister	PTR FTN(PTR FTN()void ,)void  size(2) Largest target is 1
		 -> EUSART_OverrunErrorCallbackRegister(), 

    UART1$ParityErrorCallbackRegister	PTR FTN(PTR FTN()void ,)void  size(2) Largest target is 1
		 -> NULL(), 

    UART1$Read	PTR FTN()unsigned char  size(2) Largest target is 1
		 -> EUSART_Read(), 

    UART1$RxCompleteCallbackRegister	PTR FTN(PTR FTN()void ,)void  size(2) Largest target is 1
		 -> EUSART_RxCompleteCallbackRegister(), 

    UART1$TransmitDisable	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART_TransmitDisable(), 

    UART1$TransmitEnable	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART_TransmitEnable(), 

    UART1$TxCollisionCallbackRegister	PTR FTN(PTR FTN()void ,)void  size(2) Largest target is 1
		 -> NULL(), 

    UART1$TxCompleteCallbackRegister	PTR FTN(PTR FTN()void ,)void  size(2) Largest target is 1
		 -> EUSART_TxCompleteCallbackRegister(), 

    UART1$Write	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> EUSART_Write(), 

    uartHandler@str	PTR unsigned char  size(1) Largest target is 20
		 -> line(BANK3[20]), 

    utoa@fp	PTR struct _IO_FILE size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    vfpfcnvrt@ap	PTR PTR void  size(2) Largest target is 1
		 -> printf@ap(BANK1[1]), 

    vfpfcnvrt@cp	PTR unsigned char  size(2) Largest target is 25
		 -> STR_1(CODE[8]), STR_10(CODE[17]), STR_2(CODE[24]), STR_3(CODE[10]), 
		 -> STR_4(CODE[11]), STR_5(CODE[3]), STR_6(CODE[25]), STR_7(CODE[13]), 
		 -> STR_8(CODE[13]), STR_9(CODE[15]), 

    vfpfcnvrt@fmt	PTR PTR unsigned char  size(1) Largest target is 2
		 -> vfprintf@cfmt(BANK1[2]), 

    vfpfcnvrt@fp	PTR struct _IO_FILE size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    vfprintf@ap	PTR PTR void  size(1) Largest target is 1
		 -> printf@ap(BANK1[1]), 

    vfprintf@cfmt	PTR unsigned char  size(2) Largest target is 25
		 -> STR_1(CODE[8]), STR_10(CODE[17]), STR_2(CODE[24]), STR_3(CODE[10]), 
		 -> STR_4(CODE[11]), STR_5(CODE[3]), STR_6(CODE[25]), STR_7(CODE[13]), 
		 -> STR_8(CODE[13]), STR_9(CODE[15]), 

    vfprintf@fmt	PTR const unsigned char  size(2) Largest target is 25
		 -> STR_1(CODE[8]), STR_10(CODE[17]), STR_2(CODE[24]), STR_3(CODE[10]), 
		 -> STR_4(CODE[11]), STR_5(CODE[3]), STR_6(CODE[25]), STR_7(CODE[13]), 
		 -> STR_8(CODE[13]), STR_9(CODE[15]), 

    vfprintf@fp	PTR struct _IO_FILE size(2) Largest target is 0
		 -> NULL(NULL[0]), 


Critical Paths under _main in COMMON

    None.

Critical Paths under _INTERRUPT_InterruptManager in COMMON

    _controller->i1___xxtofl
    i1___flmul->i1___xxtofl
    i1___fladd->i1___xxtofl
    ___fltol->i1___xxtofl
    _ADC_ISR->_adcConversionDoneHandler
    _adcConversionDoneHandler->_ADC_GetConversionResult
    _adcConversionDoneHandler->i1_ADC_SelectChannel

Critical Paths under _main in BANK0

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK0

    _TMR4_ISR->_controller
    _controller->i1___fladd
    i1___fladd->i1___flmul
    ___fltol->i1___flmul

Critical Paths under _main in BANK1

    _main->_uartHandler
    _uartHandler->_readLine
    _str2float->___flmul
    ___flmul->__Umul8_16
    ___fladd->___xxtofl
    _setKp->_str2float
    _setKi->_str2float
    _readLine->_printf
    _atoi->___wmul
    _printLogs->_printf
    _printf->_vfprintf
    _vfprintf->_vfpfcnvrt
    _vfpfcnvrt->_dtoa
    _utoa->_pad
    _read_prec_or_width->___wmul
    _dtoa->_pad
    _pad->_fputs
    _fputs->_fputc
    _fputc->_putch
    _putch->_EUSART_Write
    _abs->___awmod
    _initLedstrip->_SPI1_Open
    _SPI1_Open->___wmul
    _initAdcMultiplexer->_ADC_SelectChannel
    _initAdcMultiplexer->_ADC_SetInterruptHandler
    _check_push_up->_setSetpoint
    _setSetpoint->_atoi
    _updateLedstripAnimation->_counter_led
    _counter_led->___lwdiv
    _sendLedstripStartFrame->_SPI1_ByteExchange
    _sendLedstripFrame->_SPI1_ByteExchange
    _sendLedstripEndFrame->_SPI1_ByteExchange
    _INTERRUPT_Initialize->_INT_SetInterruptHandler
    _EUSART_Initialize->_EUSART_FramingErrorCallbackRegister
    _EUSART_Initialize->_EUSART_OverrunErrorCallbackRegister
    _ADC_Initialize->_ADC_SetInterruptHandler

Critical Paths under _INTERRUPT_InterruptManager in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK12

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 1     1      0   23365
                                             76 BANK1      1     1      0
                  _SYSTEM_Initialize
   _TMR4_PeriodMatchCallbackRegister
                         _TMR6_Tasks
                      _check_push_up
                 _initAdcMultiplexer
                       _initLedstrip
                          _printLogs
                        _uartHandler
 ---------------------------------------------------------------------------------
 (1) _uartHandler                                          1     1      0   16715
                                             75 BANK1      1     1      0
                               _atoi
                             _printf
                           _readLine
                              _setKi
                              _setKp
                        _setSetpoint
                          _str2float
 ---------------------------------------------------------------------------------
 (2) _str2float                                           12     8      4    5361
                                             35 BANK1     12     8      4
                            ___fladd
                            ___fldiv
                            ___flmul
                           ___xxtofl
 ---------------------------------------------------------------------------------
 (3) ___xxtofl                                            14    10      4     339
                                              0 BANK1     14    10      4
 ---------------------------------------------------------------------------------
 (3) ___flmul                                             26    18      8    1611
                                              9 BANK1     26    18      8
                          __Umul8_16
 ---------------------------------------------------------------------------------
 (4) __Umul8_16                                            9     7      2     139
                                              0 BANK1      9     7      2
 ---------------------------------------------------------------------------------
 (3) ___fldiv                                             26    18      8    1123
                                              0 BANK1     26    18      8
 ---------------------------------------------------------------------------------
 (3) ___fladd                                             20    12      8    1988
                                             14 BANK1     20    12      8
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (2) _setKp                                                4     0      4      23
                                             47 BANK1      4     0      4
                          _str2float (ARG)
 ---------------------------------------------------------------------------------
 (2) _setKi                                                4     0      4      23
                                             47 BANK1      4     0      4
                          _str2float (ARG)
 ---------------------------------------------------------------------------------
 (2) _readLine                                             3     1      2    5440
                                             72 BANK1      3     1      2
                   _EUSART_IsRxReady
                        _EUSART_Read
                             _printf
 ---------------------------------------------------------------------------------
 (3) _EUSART_Read                                          2     2      0      47
                                              0 BANK1      2     2      0
 ---------------------------------------------------------------------------------
 (3) _EUSART_IsRxReady                                     0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _atoi                                                 7     5      2     340
                                              6 BANK1      7     5      2
                             ___wmul
 ---------------------------------------------------------------------------------
 (1) _printLogs                                            0     0      0    5393
                         _getCounter
                      _getPomphoogte
                             _printf
 ---------------------------------------------------------------------------------
 (3) _printf                                               9     3      6    5393
                                             65 BANK1      7     1      6
                               _atoi (ARG)
                         _getCounter (ARG)
                      _getPomphoogte (ARG)
                           _vfprintf
 ---------------------------------------------------------------------------------
 (4) _vfprintf                                             8     3      5    5322
                                             57 BANK1      8     3      5
                          _vfpfcnvrt
 ---------------------------------------------------------------------------------
 (5) _vfpfcnvrt                                           17    12      5    5181
                                             41 BANK1     16    11      5
                               _dtoa
                              _fputc
                 _read_prec_or_width
                               _utoa
 ---------------------------------------------------------------------------------
 (6) _utoa                                                10     6      4    1663
                                             28 BANK1     10     6      4
                            ___lwdiv
                            ___lwmod
                                _pad
 ---------------------------------------------------------------------------------
 (7) ___lwmod                                              5     1      4     161
                                              0 BANK1      5     1      4
 ---------------------------------------------------------------------------------
 (6) _read_prec_or_width                                   8     6      2     292
                                              6 BANK1      8     6      2
                             ___wmul
 ---------------------------------------------------------------------------------
 (6) _dtoa                                                13     9      4    2161
                                             28 BANK1     13     9      4
                            ___awdiv
                            ___awmod
                                _abs
                                _pad
 ---------------------------------------------------------------------------------
 (7) _pad                                                  8     3      5    1083
                                             20 BANK1      8     3      5
                              _fputc
                              _fputs
                             _strlen
 ---------------------------------------------------------------------------------
 (8) _strlen                                               3     1      2      91
                                              0 BANK1      3     1      2
 ---------------------------------------------------------------------------------
 (8) _fputs                                                8     5      3     432
                                             12 BANK1      8     5      3
                              _fputc
 ---------------------------------------------------------------------------------
 (9) _fputc                                                9     5      4     331
                                              3 BANK1      9     5      4
                              _putch
 ---------------------------------------------------------------------------------
 (10) _putch                                               1     1      0      97
                                              2 BANK1      1     1      0
                   _EUSART_IsTxReady
                       _EUSART_Write
 ---------------------------------------------------------------------------------
 (11) _EUSART_Write                                        2     1      1      68
                                              0 BANK1      2     1      1
 ---------------------------------------------------------------------------------
 (11) _EUSART_IsTxReady                                    0     0      0       0
 ---------------------------------------------------------------------------------
 (7) _abs                                                  4     2      2      67
                                              6 BANK1      4     2      2
                            ___awmod (ARG)
 ---------------------------------------------------------------------------------
 (7) ___awmod                                              6     2      4     298
                                              0 BANK1      6     2      4
 ---------------------------------------------------------------------------------
 (7) ___awdiv                                              8     4      4     302
                                              0 BANK1      8     4      4
 ---------------------------------------------------------------------------------
 (1) _initLedstrip                                         0     0      0     231
                          _SPI1_Open
   _TMR6_PeriodMatchCallbackRegister
 ---------------------------------------------------------------------------------
 (2) _TMR6_PeriodMatchCallbackRegister                     2     0      2      23
                                              0 BANK1      2     0      2
 ---------------------------------------------------------------------------------
 (2) _SPI1_Open                                            4     3      1     208
                                              6 BANK1      3     2      1
                             ___wmul
 ---------------------------------------------------------------------------------
 (1) _initAdcMultiplexer                                   0     0      0      53
                  _ADC_SelectChannel
            _ADC_SetInterruptHandler
 ---------------------------------------------------------------------------------
 (2) _ADC_SelectChannel                                    2     2      0      29
                                              0 BANK1      2     2      0
 ---------------------------------------------------------------------------------
 (1) _check_push_up                                        1     1      0     180
                                             15 BANK1      1     1      0
           _PWM_buzzer_LoadDutyValue
                             ___wmul
                      _getPomphoogte
                        _setSetpoint
 ---------------------------------------------------------------------------------
 (2) _setSetpoint                                          2     0      2      24
                                             13 BANK1      2     0      2
                             ___wmul (ARG)
                               _atoi (ARG)
 ---------------------------------------------------------------------------------
 (2) _getPomphoogte                                        2     0      2       0
                                              0 BANK1      2     0      2
 ---------------------------------------------------------------------------------
 (2) _PWM_buzzer_LoadDutyValue                             4     2      2      46
                                              0 BANK1      4     2      2
 ---------------------------------------------------------------------------------
 (1) _TMR6_Tasks                                           0     0      0     633
                                NULL *
    _TMR6_DefaultPeriodMatchCallback *
            _updateLedstripAnimation *
 ---------------------------------------------------------------------------------
 (2) _updateLedstripAnimation                              0     0      0     633
                        _counter_led
 ---------------------------------------------------------------------------------
 (3) _counter_led                                          7     7      0     633
                                              7 BANK1      7     7      0
                            ___lwdiv
                             ___wmul
                         _getCounter
               _sendLedstripEndFrame
                  _sendLedstripFrame
             _sendLedstripStartFrame
 ---------------------------------------------------------------------------------
 (4) _sendLedstripStartFrame                               0     0      0      34
                  _SPI1_ByteExchange
 ---------------------------------------------------------------------------------
 (4) _sendLedstripFrame                                    4     1      3     150
                                              1 BANK1      4     1      3
                  _SPI1_ByteExchange
 ---------------------------------------------------------------------------------
 (4) _sendLedstripEndFrame                                 0     0      0      34
                  _SPI1_ByteExchange
 ---------------------------------------------------------------------------------
 (5) _SPI1_ByteExchange                                    1     0      1      34
                                              0 BANK1      1     0      1
 ---------------------------------------------------------------------------------
 (2) _getCounter                                           2     0      2       0
                                              0 BANK1      2     0      2
 ---------------------------------------------------------------------------------
 (7) ___wmul                                               6     2      4     110
                                              0 BANK1      6     2      4
 ---------------------------------------------------------------------------------
 (7) ___lwdiv                                              7     3      4     168
                                              0 BANK1      7     3      4
 ---------------------------------------------------------------------------------
 (2) _TMR6_DefaultPeriodMatchCallback                      0     0      0       0
 ---------------------------------------------------------------------------------
 (14) NULL(Fake)                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _TMR4_PeriodMatchCallbackRegister                     2     0      2      23
                                              0 BANK1      2     0      2
 ---------------------------------------------------------------------------------
 (1) _SYSTEM_Initialize                                    0     0      0     137
                     _ADC_Initialize
                   _CLOCK_Initialize
                  _EUSART_Initialize
               _INTERRUPT_Initialize
             _PIN_MANAGER_Initialize
              _PWM_buzzer_Initialize
                    _SPI1_Initialize
                    _TMR2_Initialize
                    _TMR4_Initialize
                    _TMR6_Initialize
                 _pwm_fan_Initialize
 ---------------------------------------------------------------------------------
 (2) _pwm_fan_Initialize                                   0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _TMR6_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _TMR4_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _TMR2_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _SPI1_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _PWM_buzzer_Initialize                                0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _PIN_MANAGER_Initialize                               0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _INTERRUPT_Initialize                                 0     0      0      23
            _INT_SetInterruptHandler
 ---------------------------------------------------------------------------------
 (3) _INT_SetInterruptHandler                              2     0      2      23
                                              0 BANK1      2     0      2
 ---------------------------------------------------------------------------------
 (2) _EUSART_Initialize                                    0     0      0      90
_EUSART_FramingErrorCallbackRegister
_EUSART_OverrunErrorCallbackRegister
 ---------------------------------------------------------------------------------
 (3) _EUSART_OverrunErrorCallbackRegister                  2     0      2      45
                                              0 BANK1      2     0      2
 ---------------------------------------------------------------------------------
 (3) _EUSART_FramingErrorCallbackRegister                  2     0      2      45
                                              0 BANK1      2     0      2
 ---------------------------------------------------------------------------------
 (2) _CLOCK_Initialize                                     0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _ADC_Initialize                                       0     0      0      24
            _ADC_SetInterruptHandler
 ---------------------------------------------------------------------------------
 (2) _ADC_SetInterruptHandler                              2     0      2      24
                                              0 BANK1      2     0      2
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 14
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (12) _INTERRUPT_InterruptManager                          0     0      0    4469
                                NULL *
                            _ADC_ISR
                  _EUSART_ReceiveISR *
                 _EUSART_TransmitISR *
                           _TMR2_ISR
                           _TMR4_ISR
 ---------------------------------------------------------------------------------
 (13) _TMR4_ISR                                            0     0      0    4349
                                NULL *
    _TMR4_DefaultPeriodMatchCallback *
                         _controller *
 ---------------------------------------------------------------------------------
 (14) _controller                                          7     7      0    4349
                                             46 BANK0      7     7      0
                            ___fltol
                    _getHoogtesensor
              _pwm_fan_LoadDutyValue
                          i1___fladd
                          i1___flmul
                         i1___xxtofl
 ---------------------------------------------------------------------------------
 (15) i1___xxtofl                                         14    10      4     338
                                              0 COMMON    14    10      4
 ---------------------------------------------------------------------------------
 (15) i1___flmul                                          26    18      8    1611
                                              0 BANK0     26    18      8
                        i1__Umul8_16
                         i1___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (16) i1__Umul8_16                                         9     7      2     139
                                              0 COMMON     9     7      2
 ---------------------------------------------------------------------------------
 (15) i1___fladd                                          20    12      8    1986
                                             26 BANK0     20    12      8
                          i1___flmul (ARG)
                         i1___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (15) _pwm_fan_LoadDutyValue                               4     2      2      45
                                              0 COMMON     4     2      2
 ---------------------------------------------------------------------------------
 (15) _getHoogtesensor                                     2     0      2       0
                                              0 COMMON     2     0      2
 ---------------------------------------------------------------------------------
 (15) ___fltol                                            10     6      4     234
                                             26 BANK0     10     6      4
                          i1___flmul (ARG)
                         i1___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (14) _TMR4_DefaultPeriodMatchCallback                     0     0      0       0
 ---------------------------------------------------------------------------------
 (13) _TMR2_ISR                                            0     0      0       0
                                NULL *
    _TMR2_DefaultPeriodMatchCallback *
 ---------------------------------------------------------------------------------
 (14) _TMR2_DefaultPeriodMatchCallback                     0     0      0       0
 ---------------------------------------------------------------------------------
 (13) _EUSART_TransmitISR                                  1     1      0      23
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (13) _EUSART_ReceiveISR                                   2     2      0      68
                                              0 COMMON     2     2      0
                                NULL *
 _EUSART_DefaultFramingErrorCallback *
 _EUSART_DefaultOverrunErrorCallback *
 ---------------------------------------------------------------------------------
 (14) _EUSART_DefaultOverrunErrorCallback                  0     0      0       0
 ---------------------------------------------------------------------------------
 (14) _EUSART_DefaultFramingErrorCallback                  0     0      0       0
 ---------------------------------------------------------------------------------
 (13) _ADC_ISR                                             0     0      0      29
                                NULL *
        _ADC_DefaultInterruptHandler *
           _adcConversionDoneHandler *
 ---------------------------------------------------------------------------------
 (14) _adcConversionDoneHandler                            2     2      0      29
                                              2 COMMON     2     2      0
            _ADC_GetConversionResult
                i1_ADC_SelectChannel
 ---------------------------------------------------------------------------------
 (15) i1_ADC_SelectChannel                                 2     2      0      29
                                              0 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 (15) _ADC_GetConversionResult                             2     0      2       0
                                              0 COMMON     2     0      2
 ---------------------------------------------------------------------------------
 (14) _ADC_DefaultInterruptHandler                         0     0      0       0
 ---------------------------------------------------------------------------------
 (14) NULL(Fake)                                           0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 16
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _SYSTEM_Initialize
     _ADC_Initialize
       _ADC_SetInterruptHandler
     _CLOCK_Initialize
     _EUSART_Initialize
       _EUSART_FramingErrorCallbackRegister
       _EUSART_OverrunErrorCallbackRegister
     _INTERRUPT_Initialize
       _INT_SetInterruptHandler
     _PIN_MANAGER_Initialize
     _PWM_buzzer_Initialize
     _SPI1_Initialize
     _TMR2_Initialize
     _TMR4_Initialize
     _TMR6_Initialize
     _pwm_fan_Initialize
   _TMR4_PeriodMatchCallbackRegister
   _TMR6_Tasks
     NULL(Fake) *
     _TMR6_DefaultPeriodMatchCallback *
     _updateLedstripAnimation *
       _counter_led
         ___lwdiv
         ___wmul
         _getCounter
         _sendLedstripEndFrame
           _SPI1_ByteExchange
         _sendLedstripFrame
           _SPI1_ByteExchange
         _sendLedstripStartFrame
           _SPI1_ByteExchange
   _check_push_up
     _PWM_buzzer_LoadDutyValue
     ___wmul
     _getPomphoogte
     _setSetpoint
       ___wmul (ARG)
       _atoi (ARG)
         ___wmul
   _initAdcMultiplexer
     _ADC_SelectChannel
     _ADC_SetInterruptHandler
   _initLedstrip
     _SPI1_Open
       ___wmul
     _TMR6_PeriodMatchCallbackRegister
   _printLogs
     _getCounter
     _getPomphoogte
     _printf
       _atoi (ARG)
       _getCounter (ARG)
       _getPomphoogte (ARG)
       _vfprintf (ARG)
         _vfpfcnvrt
           _dtoa
             ___awdiv
             ___awmod
             _abs
               ___awmod (ARG)
             _pad
               _fputc
                 _putch
                   _EUSART_IsTxReady
                   _EUSART_Write
               _fputs
                 _fputc
               _strlen
           _fputc
           _read_prec_or_width
             ___wmul
           _utoa
             ___lwdiv
             ___lwmod
             _pad
   _uartHandler
     _atoi
     _printf
     _readLine
       _EUSART_IsRxReady
       _EUSART_Read
       _printf
     _setKi
       _str2float (ARG)
         ___fladd
           ___xxtofl (ARG)
         ___fldiv
         ___flmul
           __Umul8_16
         ___xxtofl
     _setKp
       _str2float (ARG)
     _setSetpoint
     _str2float

 _INTERRUPT_InterruptManager (ROOT)
   NULL(Fake) *
   _ADC_ISR *
     NULL(Fake) *
     _ADC_DefaultInterruptHandler *
     _adcConversionDoneHandler *
       _ADC_GetConversionResult
       i1_ADC_SelectChannel
   _EUSART_ReceiveISR *
     NULL(Fake) *
     _EUSART_DefaultFramingErrorCallback *
     _EUSART_DefaultOverrunErrorCallback *
   _EUSART_TransmitISR *
   _TMR2_ISR *
     NULL(Fake) *
     _TMR2_DefaultPeriodMatchCallback *
   _TMR4_ISR *
     NULL(Fake) *
     _TMR4_DefaultPeriodMatchCallback *
     _controller *
       ___fltol
         i1___flmul (ARG)
           i1__Umul8_16
           i1___xxtofl (ARG)
         i1___xxtofl (ARG)
       _getHoogtesensor
       _pwm_fan_LoadDutyValue
       i1___fladd
         i1___flmul (ARG)
         i1___xxtofl (ARG)
       i1___flmul
       i1___xxtofl

Address spaces:
Name               Size   Autos  Total    Usage
BITCOMMON           14      0       0      0.0%
BITBANK0            80      0       0      0.0%
BITBANK1            80      0       0      0.0%
BITBANK2            80      0       0      0.0%
BITBANK3            80      0       0      0.0%
BITBANK4            80      0       0      0.0%
BITBANK5            80      0       0      0.0%
BITBANK6            80      0       0      0.0%
BITBANK7            80      0       0      0.0%
BITBANK8            80      0       0      0.0%
BITBANK9            80      0       0      0.0%
BITBANK10           80      0       0      0.0%
BITBANK11           80      0       0      0.0%
BITBANK12           48      0       0      0.0%
BIGRAM            1008      0       0      0.0%
COMMON              14     14      14    100.0%
BANK0               80     53      79     98.8%
BANK1               80     77      79     98.8%
BANK2               80      0      72     90.0%
BANK3               80      0      52     65.0%
BANK4               80      0       0      0.0%
BANK5               80      0       0      0.0%
BANK6               80      0       0      0.0%
BANK7               80      0       0      0.0%
BANK8               80      0       0      0.0%
BANK9               80      0       0      0.0%
BANK10              80      0       0      0.0%
BANK11              80      0       0      0.0%
BANK12              48      0       0      0.0%
STACK                0      0       0      0.0%
DATA                 0      0     296      0.0%


Microchip Technology PIC Macro Assembler V3.00 build 20241204225717 
Symbol Table                                                                                   Wed Mar 12 16:43:25 2025

           __end_of_TMR4_DefaultPeriodMatchCallback 0801                   ??_TMR4_DefaultPeriodMatchCallback 0070  
                  ?_TMR4_DefaultPeriodMatchCallback 0070                     _TMR4_DefaultPeriodMatchCallback 0800  
                                 _SPI1_ByteExchange 1E11                          __end_of_pwm_fan_Initialize 1E05  
                                      ___fldiv@aexp 00B9                                        ___fldiv@bexp 00B8  
                                       i1___fladd@a 003E                                         i1___fladd@b 003A  
                                      ___fldiv@sign 00B1                                                  l30 1E10  
                                                l27 1F5D                                                  l55 1D8C  
                                                l83 1DF8                                                  l69 1E04  
                                                l86 1F8B                                  ?_SPI1_ByteExchange 00A0  
                                      ___awdiv@sign 00A5                             ??_PWM_buzzer_Initialize 00A0  
       __end_of_EUSART_OverrunErrorCallbackRegister 1E84               ??_EUSART_OverrunErrorCallbackRegister 00A2  
              ?_EUSART_OverrunErrorCallbackRegister 00A0                 _EUSART_OverrunErrorCallbackRegister 1E75  
                                       i1___flmul@a 0024                                                  _ki 0160  
                                       i1___flmul@b 0020                                                  _kp 0164  
                               ___wmul@multiplicand 00A2                                 __Umul8_16@word_mpld 00A6  
                                   ??_getPomphoogte 00A2                                          i1___xxtofl 175C  
                                               l133 080A                                                 l141 1648  
                                               l227 1DEC                                                 l254 1D9E  
                                               l174 1E15                                                 l351 124E  
                                               l272 1D95                                                 l176 1E1A  
                                               l177 1E1D                                                 l516 1E92  
                                               l543 1DC2                                                 l712 1DD4  
                                               l457 1EC4                                                 l546 07FF  
                                               l379 103F                                                 l715 1DCB  
                                               l557 1F1D                                                 l725 1FFF  
                                               l398 1EB3                                                 l494 1DA7  
                                               l742 10D2                                                 l656 1191  
                                               l760 1ED5                                                 l770 1E74  
                                               l906 07FC                                                 l739 10D0  
                                               l924 175B                                                 l837 1E2A  
                                               l774 1E83                                                 l846 1DB9  
                                               l963 1D6F                                                 l972 1EE6  
                                               l893 13A0                                                 l895 13F8  
                                               l879 099C                                                 l992 1FA4  
                                               l888 09D3                                                 l969 1EF7  
                                               l995 1FBF                                                 l989 1F47  
                                               _PR2 001E                                                 _PR4 0416  
                                               _PR6 041D                                                 _abs 1EF8  
                                               _pad 12F3                                     __end_of_ADC_ISR 1E48  
                   __end_of_ADC_SetInterruptHandler 1D8D                                 ??_SPI1_ByteExchange 00A1  
                                      ___awmod@sign 00A5                                     _TMR2_Initialize 1EA3  
                      __end_of_sendLedstripEndFrame 1FA5                                                 wreg 0009  
                                     i1___fladd@grs 004D                                        ___flmul@aexp 00BB  
                                      ___flmul@bexp 00BC                        ?_ADC_DefaultInterruptHandler 0070  
                                      ___flmul@sign 00B6                                        ___flmul@temp 00C1  
                                      ___flmul@prod 00BD                                 i1_ADC_SelectChannel 1DD5  
                                      ?_EUSART_Read 0070                                        _BAUD1CONbits 019F  
                                      ___fltol@exp1 0043                                                l1031 1D5D  
                                              l1210 1FDF                                                l1034 1E38  
                                              ?_abs 00A6                                                l1028 139F  
                                              l1053 1453                                                l1208 1FCB  
                                              l1056 1DB0                                                l1361 14AF  
                                              l1513 05DE                                                l1530 066F  
                                              l1522 0714                                                l1515 05B8  
                                              l1611 024B                                                l1540 06B4  
                                              l1509 055F                                                l1605 02CD  
                                              l1374 12F2                                                l1534 0691  
                                              l1711 1309                                                l1551 0707  
                                              l1543 06E7                                                l4200 151E  
                                              l1552 0714                                                l1624 109A  
                                              l1617 02C3                                                l4202 1529  
                                              l4210 1063                                                l1714 132B  
                                              l5010 0CF4                                                l5002 0CCC  
                                              l1626 10AA                                                l1650 08B8  
                                              l1723 073E                                                l1651 0928  
                                              l4300 12BD                                                l4204 1549  
                                              l4212 1067                                                l1812 1F73  
                                              l4220 1F62                                                l1716 1347  
                                              l1732 07CD                                                l5020 0D0E  
                                              l5012 0CF6                                                l5004 0CDC  
                                              l5100 00A8                                                l1581 0D79  
                                              l1565 0C9F                                                l4230 1FC3  
                                              l4310 12D5                                                l4302 12C0  
                                              l4206 155F                                                l1806 1086  
                                              l4214 1075                                                l4222 1F64  
                                              l1750 150B                                                l1742 16C1  
                                              l5014 0CFB                                                l5022 0D15  
                                              l5030 0D32                                                l5006 0CE4  
                                              l5110 00BF                                                l5102 00B0  
                                              l1662 08F4                                                l1719 0740  
                                              l1567 0DF3                                                l1663 0900  
                                              l1488 11CC                                                l4232 1FC7  
                                              l4320 12EE                                                l4312 12D9  
                                              l4304 12C5                                                l4216 107A  
                                              l4224 1F6D                                                l4400 0715  
                                              l1680 0883                                                l5040 0D4D  
                                              l5032 0D38                                                l5024 0D27  
                                              l5016 0D09                                                l5008 0CEC  
                                              l5200 025B                                                l5120 00D6  
                                              l5112 00C3                                                l5104 00B2  
                                              l1649 08A7                                                l6010 102D  
                                              l6002 101E                                                l4330 119E  
                                              l4234 1FD0                                                l4250 1461  
                                              l4242 1454                                                l4314 12DE  
                                              l4306 12C7                                                l4170 10AB  
                                              l4218 1F5E                                                l4410 0735  
                                              l4402 0718                                                l1498 115A  
                                              l1586 0DC3                                                l5050 0D5E  
                                              l5042 0D4E                                                l5034 0D40  
                                              l5026 0D28                                                l5018 0D0D  
                                              l5210 0292                                                l5202 025F  
                                              l5122 00D8                                                l5114 00C4  
                                              l5106 00BA                                                l1587 0DDD  
                                              l6012 1030                                                l6004 1024  
                                              l6020 1D9F                                                l4340 11BC  
                                              l4332 11A3                                                l4324 1192  
                                              l4236 1FD5                                                l4228 1FC0  
                                              l4260 1474                                                l4252 1465  
                                              l4244 1456                                                l4308 12CB  
                                              l4316 12E4                                                l4180 10C8  
                                              l4172 10B0                                                l4420 0768  
                                              l4412 073A                                                l4404 0727  
                                              l4500 0ADE                                                l5060 0D83  
                                              l5052 0D62                                                l5044 0D55  
                                              l5036 0D42                                                l5028 0D30  
                                              l5220 02BA                                                l5212 02A0  
                                              l5204 0277                                                l5140 0130  
                                              l5132 00F3                                                l5124 00E0  
                                              l5116 00C9                                                l5108 00BD  
                                              l6100 1732                                                l1765 0C4F  
                                              l1757 0B05                                                l1589 0DE8  
                                              l6014 1033                                                l6006 1027  
                                              l4342 11BD                                                l4334 11A5  
                                              l4326 1195                                                l4238 1FDB  
                                              l6022 1F0A                                                l6110 1413  
                                              l4270 1491                                                l4262 1477  
                                              l4254 146A                                                l4246 145A  
                                              l4318 12E9                                                l4166 1DC3  
                                              l4182 10CB                                                l4174 10B4  
                                              l4190 1ECF                                                l4430 0792  
                                              l4422 0769                                                l4414 0744  
                                              l4406 072C                                                l4350 1128  
                                              l4510 0B07                                                l4502 0AF0  
                                              l5070 0DB6                                                l5062 0D89  
                                              l5054 0D76                                                l5038 0D49  
                                              l5046 0D59                                                l5222 02BB  
                                              l5214 02A9                                                l5206 027B  
                                              l5150 0174                                                l5142 0148  
                                              l5134 00FE                                                l5126 00E5  
                                              l5118 00CE                                                l5230 088B  
                                              l6102 173A                                                l1759 0B11  
                                              l1687 1EA2                                                l6016 1036  
                                              l6008 102A                                                l4344 11C2  
                                              l4336 11A9                                                l4328 119B  
                                              l6024 1F0F                                                l6120 1451  
                                              l6112 1416                                                l6104 13F9  
                                              l4280 14A6                                                l4272 1495  
                                              l4264 147C                                                l4256 146C  
                                              l4248 145F                                                l4184 10CD  
                                              l4176 10BA                                                l4440 07B3  
                                              l4432 0797                                                l4424 076D  
                                              l4416 0747                                                l4408 0730  
                                              l4360 113D                                                l4352 112F  
                                              l4520 0B38                                                l4504 0AF8  
                                              l5080 0DE4                                                l5072 0DD1  
                                              l5064 0D8D                                                l5048 0D5D  
                                              l4600 108B                                                l5224 02C5  
                                              l5216 02AB                                                l5208 0288  
                                              l5160 01A6                                                l5152 017B  
                                              l5144 0155                                                l5136 010B  
                                              l5128 00EA                                                l5240 08BB  
                                              l5232 088F                                                l6200 1110  
                                              l6018 1039                                                l4338 11B8  
                                              l4346 11C8                                                l6026 1F16  
                                              l6114 141B                                                l6106 13FF  
                                              l4282 14AB                                                l4274 1496  
                                              l4266 147E                                                l4258 146E  
                                              l4290 12A7                                                l1786 1F09  
                                              l4178 10C2                                                l4186 1EC7  
                                              l4194 150C                                                l4442 07BA  
                                              l4434 07A4                                                l4418 074C  
                                              l4426 077D                                                l4362 1147  
                                              l4354 1132                                                l4450 1658  
                                              l4530 0B54                                                l4522 0B3C  
                                              l4514 0B14                                                l4506 0AFD  
                                              l6122 07CE                                                l5082 0DE6  
                                              l5074 0DD4                                                l5066 0DA5  
                                              l5058 0D7E                                                l4602 1092  
                                              l5218 02B6                                                l5170 0201  
                                              l5162 01B8                                                l5154 0186  
                                              l5146 0162                                                l5138 0123  
                                              l5090 0097                                                l5250 08EA  
                                              l5242 08C4                                                l5234 089F  
                                              l6202 1113                                                l1779 10FC  
                                              l6028 1F1B                                                l6108 140C  
                                              l6116 143C                                                l4276 149B  
                                              l4268 1482                                                l4292 12AC  
                                              l4188 1EC7                                                l4196 1513  
                                              l4380 130C                                                l4372 12F3  
                                              l4428 078B                                                l4436 07A9  
                                              l4364 114B                                                l4356 1137  
                                              l4460 1679                                                l4452 165B  
                                              l4540 0B89                                                l4532 0B5E  
                                              l4524 0B3D                                                l4516 0B24  
                                              l4508 0B02                                                l4620 10FA  
                                              l4612 10D3                                                l6124 07D4  
                                              l5076 0DDC                                                l5068 0DA9  
                                              l4604 1096                                                l5180 0220  
                                              l5172 0208                                                l5164 01C3  
                                              l5156 018D                                                l5148 0169  
                                              l5092 0099                                                l5260 091B  
                                              l5252 08EE                                                l5244 08CB  
                                              l5236 08AF                                                l5228 0886  
                                              l6204 1116                                                l4710 1393  
                                              l6118 1444                                                l4278 14A1  
                                              l4294 12AE                                                l4286 12A1  
                                              l1798 1569                                                l4198 1519  
                                              l4382 1318                                                l4374 12F8  
                                              l4438 07AF                                                l4366 1150  
                                              l4358 1139                                                l4470 16A8  
                                              l4454 1660                                                l4462 1689  
                                              l4446 1649                                                l4542 0B93  
                                              l4534 0B6B                                                l4526 0B42  
                                              l4518 0B29                                                l4614 10D8  
                                              l5078 0DE0                                                l4606 10A1  
                                              l5190 0234                                                l5182 0227  
                                              l5174 0214                                                l5166 01D5  
                                              l5158 019F                                                l5094 009D  
                                              l5262 091F                                                l5254 08F8  
                                              l5246 08DA                                                l6206 111F  
                                              ?_pad 00B4                                                l4712 1396  
                                              l4704 1375                                                l6080 1E30  
                                              l4296 12B2                                                l4288 12A3  
                                              l4392 1EF8                                                l4384 131D  
                                              l4376 1302                                                l4480 14C4  
                                              l4368 1156                                                l4464 1690  
                                              l4472 16AD                                                l4456 1674  
                                              l4448 164C                                                l4560 0BF6  
                                              l4552 0BBF                                                l4544 0BA0  
                                              l4536 0B78                                                l4528 0B4A  
                                              l4616 10DC                                                l4800 056B  
                                              l4608 10A6                                                l5192 0248  
                                              l5176 021B                                                l5184 022B  
                                              l5168 01EA                                                l5096 009E  
                                              l5088 0093                                                l5264 0920  
                                              l5256 0902                                                l5248 08E1  
                                              l6208 1122                                                l4650 1E6D  
                                              l4714 139C                                                l4706 1382  
                                              l4298 12B7                                                l4394 1EFD  
                                              l4386 1330                                                l4378 1307  
                                              l4490 1507                                                l4482 14CC  
                                              l4466 1696                                                l4458 1675  
                                              l4570 0C1D                                                l4546 0BAE  
                                              l4554 0BC8                                                l4618 10F0  
                                              l4810 0575                                                l4802 056D  
                                              l5186 022F                                                l5178 021F  
                                              l5098 00A3                                                l5258 0916  
                                              l6090 16FC                                                l6082 16C2  
                                              l4652 1E75                                                l5700 120D  
                                              l4708 138B                                                l6076 1E1E  
                                              l4396 1EFE                                                l4388 133A  
                                              l4484 14D9                                                l4476 14B0  
                                              l4468 169B                                                l4556 0BD2  
                                              l4564 0BF9                                                l4580 0C2C  
                                              l4660 1FE0                                                l4900 0695  
                                              l4820 057F                                                l4812 0577  
                                              l4804 056F                                                l5196 0250  
                                              l5188 0230                                                l6092 1705  
                                              l6084 16C8                                                l4638 1D84  
                                              l4654 1E7C                                                l4646 1D96  
                                              l5710 1219                                                l5702 1210  
                                              l4494 1E11                                                l6078 1E2B  
                                              l4486 14EB                                                l4478 14B3  
                                              l4582 0C45                                                l4566 0C0A  
                                              l4574 0C23                                                l4558 0BE8  
                                              l4670 1FF4                                                l4662 1FE0  
                                              l4902 0699                                                l4910 06A6  
                                              l4822 0581                                                l4814 0579  
                                              l4806 0571                                                l4830 0589  
                                              l5198 0255                                                l6094 1717  
                                              l6086 16D6                                                l4648 1E66  
                                              l5800 118C                                                l5720 122D  
                                              l5712 1223                                                l5704 1212  
                                              l4496 1E1B                                                l4592 1F33  
                                              l4488 14F3                                                l4568 0C12  
                                              l4656 1DCC                                                l4672 1FFA  
                                              l4664 1FE9                                                l4920 06B9  
                                              l4912 06A7                                                l4904 069B  
                                              l4840 05C8                                                l4832 058A  
                                              l4824 0583                                                l4816 057B  
                                              l4808 0573                                                l4760 0514  
                                              l4752 0509                                                l6096 1720  
                                              l6088 16EA                                                l6192 10FD  
                                              l5650 1F4D                                                l5802 118D  
                                              l5730 123A                                                l5722 122F  
                                              l5714 1226                                                l5706 1214  
                                              l4594 1F8C                                                l4690 1348  
                                              l4674 1FFC                                                l4666 1FEF  
                                              l4930 06EC                                                l4922 06BE  
                                              l4914 06AB                                                l4906 06A0  
                                              l4850 05E2                                                l4842 05CC  
                                              l4834 05A1                                                l4826 0585  
                                              l4818 057D                                                l4762 0519  
                                              l4770 0529                                                l4754 050D  
                                              l6098 1729                                                l6194 1100  
                                              l5652 1F4F                                                l5804 118E  
                                              l5732 123C                                                l5724 1233  
                                              l5716 1228                                                l5708 1217  
                                              l5740 1EA6                                                l4588 1DA8  
                                              l4596 1FA7                                                l4692 1350  
                                              l5660 1E07                                                l4684 1E93  
                                              l4676 1FFE                                                l4668 1FF2  
                                              l4940 0703                                                l4932 06F1  
                                              l4924 06C4                                                l4916 06B1  
                                              l4908 06A2                                                l4860 05FC  
                                              l4852 05E7                                                l4844 05CD  
                                              l4836 05BC                                                l4828 0587  
                                              l4780 053D                                                l4772 0531  
                                              l4764 051E                                                l4756 050F  
                                              l6196 1101                                                l5654 1F51  
                                              l5646 1F48                                                l5806 118F  
                                              l5734 123E                                                l5726 1235  
                                              l5718 122A                                                l5742 1EA7  
                                              l5750 1EB4                                                l5662 1DF9  
                                              l4694 1360                                                l5670 1F74  
                                              l4686 1E96                                                l5902 13D3  
                                              l4942 0705                                                l4934 06F9  
                                              l4926 06C8                                                l4870 0611  
                                              l4862 0600                                                l4846 05D5  
                                              l4838 05C6                                                l4790 0554  
                                              l4782 0541                                                l4774 0534  
                                              l4766 0526                                                l4758 0513  
                                              l4950 0C54                                                l4598 1089  
                                              l6198 110D                                                l5656 1F53  
                                              l5648 1F4B                                                l5736 1241  
                                              l5728 1238                                                l5672 0801  
                                              l5744 1EAC                                                l5760 1EC1  
                                              l5752 1EB7                                                l5664 1E00  
                                              l4696 1370                                                l5680 15DE  
                                              l5808 1DBA                                                l5920 0812  
                                              l5904 13E1                                                l4944 070F  
                                              l4936 06FE                                                l4928 06E5  
                                              l4880 0658                                                l4872 0619  
                                              l4864 060A                                                l4856 05F0  
                                              l4848 05D7                                                l4792 0555  
                                              l4784 0542                                                l4776 053A  
                                              l4768 0527                                                l4960 0C65  
                                              l4952 0C56                                                l5840 0929  
                                              l5658 1F5B                                                l5690 1DE1  
                                              l5666 1DED                                                l5674 0805  
                                              l5746 1EAE                                                l5738 1EA3  
                                              l5754 1EB8                                                l5770 1E8F  
                                              l5762 1E84                                                l4698 1373  
                                              l5682 1646                                                l5930 0838  
                                              l5922 081C                                                l5906 13ED  
                                              l5914 13F5                                                l4946 0713  
                                              l4938 06FF                                                l4890 067C  
                                              l4882 065B                                                l4866 060C  
                                              l4858 05F8                                                l4874 061C  
                                              l4786 0547                                                l4794 0557  
                                              l4778 053B                                                l4970 0C7B  
                                              l4962 0C6D                                                l4954 0C5A  
                                              l5850 0941                                                l5842 0932  
                                              l5780 116C                                                l5772 115B  
                                              l5692 1DE4                                                l5668 1DF4  
                                              l5748 1EB0                                                l5756 1EBD  
                                              l5764 1E87                                                l5836 1DB1  
                                              l5684 1647                                                l5676 15D9  
                                              l5940 086E                                                l5924 0829  
                                              l5916 080B                                                l5908 13F3  
                                              l4884 0660                                                l4876 0632  
                                              l4868 0610                                                l4796 0565  
                                              l4788 054C                                                l4980 0C8C  
                                              l4972 0C7D                                                l4964 0C6E  
                                              l4956 0C5B                                                l4948 0C50  
                                              l5860 099E                                                l5852 0947  
                                              l5844 0933                                                l5694 1D8D  
                                              l5790 117C                                                l5782 116E  
                                              l5774 115D                                                l5758 1EBF  
                                              l5766 1E88                                                l5686 1648  
                                              l5678 15D9                                                l5942 0873  
                                              l5934 0843                                                l5926 0833  
                                              l5918 0810                                                l5950 1EE7  
                                              l4894 0685                                                l4878 0656  
                                              l4886 0667                                                l4798 0569  
                                              l4990 0CB3                                                l4982 0C94  
                                              l4974 0C81                                                l4958 0C60  
                                              l4966 0C70                                                l5870 09C5  
                                              l5862 09A0                                                l5854 098D  
                                              l5846 0939                                                l5696 1D91  
                                              l5792 1184                                                l5784 1170  
                                              l5776 1162                                                l5768 1E8D  
                                              l5944 087F                                                l5928 0835  
                                              l5880 13AF                                                l5952 1ED6  
                                              l4896 068C                                                l4888 0677  
                                              l4992 0CB5                                                l4984 0C95  
                                              l4976 0C82                                                l4968 0C78  
                                              l5872 09CB                                                l5864 09A2  
                                              l5856 0990                                                l5848 093B  
                                              l5794 1187                                                l5786 1172  
                                              l5778 1169                                                l5698 1209  
                                              l5938 0861                                                l5890 13BD  
                                              l4898 0690                                                l4978 0C87  
                                              l4986 0C97                                                l5866 09BE  
                                              l5858 0996                                                l5796 1189  
                                              l5788 1174                                                l5948 1D6A  
                                              l5892 13C5                                                l5884 13B2  
                                              l5876 13A0                                                l4988 0CA7  
                                              l4996 0CBE                                                l5868 09C0  
                                              l5798 118A                                                l5982 1D5A  
                                              l5894 13CD                                                l5878 13A8  
                                              l4998 0CC3                                                l5896 13CF  
                                              l5888 13BA                                                l5898 13D1  
                                              STR_1 18D6                                                STR_2 1865  
                                              STR_3 18CC                                                STR_4 18B7  
                                              STR_5 189A                                                STR_6 184C  
                                              STR_7 18AA                                                STR_8 189D  
                                              STR_9 188E                                                _LATA 010C  
                                              _LATB 010D                                                _LATC 010E  
                                              u4010 1482                                                u4011 1481  
                                              u4005 1478                                                u4030 1491  
                                              u4110 12CB                                                u4031 1490  
                                              u4111 12CA                                                u4200 11B8  
                                              u4120 12D5                                                u4201 11B7  
                                              u4025 1483                                                u4121 12D4  
                                              u4105 12C1                                                u4050 14A1  
                                              u5010 05DE                                                u4051 14A0  
                                              u4035 148D                                                u5011 05DD  
                                              u4220 11C8                                                u4060 14A6  
                                              u4140 12E4                                                u4300 1307  
                                              u5100 0660                                                u5020 05E2  
                                              u4221 11C7                                                u4205 11B4  
                                              u4061 14A5                                                u4045 1497  
                                              u4141 12E3                                                u4125 12D1  
                                              u4301 1306                                                u5101 065F  
                                              u5021 05E1                                                u5005 05CF  
                                              u4150 12E9                                                u4070 12A7  
                                              u4310 132B                                                u4230 112F  
                                              u5110 0677                                                u5030 05E7  
                                              u4215 11BE                                                u4151 12E8  
                                              u4135 12DA                                                u4071 12A6  
                                              u4311 132A                                                u4231 112E  
                                              u5111 0676                                                u5031 05E6  
                                              u4160 119B                                                u4080 12B2  
                                              u4320 1330                                                u4400 0797  
                                              u5200 06B8                                                u5120 067C  
                                              u5040 05FC                                                u6000 091B  
                                              u4161 119A                                                u4081 12B1  
                                              u4321 132F                                                u4401 0796  
                                              u5201 06B7                                                u5121 067B  
                                              u5041 05FB                                                u6001 091A  
                                              u4090 12BD                                                u4330 1EFD  
                                              u4410 07A4                                                u4250 113D  
                                              u5210 06BE                                                u5050 0600  
                                              u6010 091F                                                u4091 12BC  
                                              u4331 1EFC                                                u4315 1327  
                                              u4411 07A3                                                u4251 113C  
                                              u5211 06BD                                                u5051 05FF  
                                              u6011 091E                                                u4180 11A9  
                                              u4420 07A9                                                u4340 071D  
                                              u4500 1507                                                u4260 1147  
                                              u5300 0713                                                u5220 06C8  
                                              u5140 0690                                                u4181 11A8  
                                              u4421 07A8                                                u4341 071B  
                                              u4501 1506                                                u4261 1146  
                                              u4245 1133                                                u5301 0712  
                                              u5221 06C7                                                u5141 068F  
                                              u4510 1E1A                                                u4430 07AF  
                                              u4350 071E                                                u5230 06D6  
                                              u5150 0695                                                u5070 0610  
                                              u5310 0C5A                                                u4175 119F  
                                              u4511 1E19                                                u4431 07AE  
                                              u4415 07A0                                                u5151 0694  
                                              u5135 0686                                                u5071 060F  
                                              u5311 0C59                                                u4360 072C  
                                              u4280 1156                                                u4440 1690  
                                              u4520 0AF0                                                u7000 13ED  
                                              u5240 06E5                                                u5160 06A0  
                                              u5320 0C60                                                u4600 1096  
                                              u4361 072B                                                u4281 1155  
                                              u4265 1143                                                u4441 168F  
                                              u4521 0AEF                                                u7001 13EC  
                                              u5241 06E4                                                u5161 069F  
                                              u5065 0603                                                u5321 0C5F  
                                              u4601 1095                                                u4290 12F8  
                                              u4370 0735                                                u4450 1696  
                                              u4530 0B29                                                u7010 081C  
                                              u5250 06EC                                                u5170 06A6  
                                              u5090 0632                                                u5330 0C65  
                                              u4195 11AA                                                u4291 12F7  
                                              u4371 0734                                                u4275 114C  
                                              u4451 1695                                                u4531 0B28  
                                              u7011 081B                                                u5251 06EB  
                                              u5235 06D2                                                u5171 06A5  
                                              u5091 0631                                                u5331 0C64  
                                              u3820 1DCA                                                u3900 1549  
                                              u4380 078B                                                u4460 169B  
                                              u4540 0B3C                                                u7020 0829  
                                              u4700 1DD3                                                u5260 06F1  
                                              u5180 06AB                                                u5500 0D5D  
                                              u5420 0D0D                                                u5340 0C81  
                                              u4620 10A6                                                u3821 1DC8  
                                              u3901 1548                                                u4381 078A  
                                              u4461 169A                                                u4541 0B3B  
                                              u7021 0828                                                u4701 1DD1  
                                              u5261 06F0                                                u5181 06AA  
                                              u5093 062E                                                u5085 0613  
                                              u5501 0D5C                                                u5421 0D0C  
                                              u5405 0CFC                                                u5341 0C80  
                                              u4621 10A5                                                i1l30 1DE0  
                                              u3830 1DCB                                                u3910 1086  
                                              u4390 0792                                                u4470 16A8  
                                              u4550 0B54                                                u4630 10FA  
                                              u7030 0833                                                u4710 1DD4  
                                              u5270 06FE                                                u5190 06B1  
                                              u5510 0D62                                                u5350 0C87  
                                              u3911 1085                                                u4391 0791  
                                              u4471 16A7                                                u4551 0B53  
                                              u4631 10F9                                                u7031 0832  
                                              u5271 06FD                                                u5191 06B0  
                                              u5511 0D61                                                u5415 0D03  
                                              u5351 0C86                                                u4615 109B  
                                              u3840 10B0                                                u3920 1F6D  
                                              u4480 16AD                                                u4560 0B5E  
                                              u7040 0842                                                u4720 1FFA  
                                              u5280 0703                                                u5520 0D76  
                                              u5440 0D27                                                u5360 0C8C  
                                              u3841 10AF                                                u3905 1545  
                                              u3921 1F6C                                                u4385 0787  
                                              u4481 16AC                                                u4561 0B5D  
                                              u7041 0841                                                u4721 1FF9  
                                              u5281 0702                                                u5521 0D75  
                                              u5441 0D26                                                u5361 0C8B  
                                              u3930 1FC7                                                u4730 1382  
                                              u3850 10BA                                                u4490 14C4  
                                              u4570 0B93                                                u7050 086E  
                                              u5530 0D7D                                                u5450 0D38  
                                              u5370 0CA7                                                u5610 009D  
                                              u3931 1FC6                                                u4731 1381  
                                              u3851 10B9                                                u4491 14C3  
                                              u4475 16A4                                                u4571 0B92  
                                              u7051 086D                                                u5531 0D7C  
                                              u5451 0D37                                                u5435 0D0F  
                                              u5371 0CA6                                                u5611 009C  
                                              i1l52 1E47                                                u4740 139C  
                                              u7140 1F0F                                                u3860 1ECF  
                                              u4580 0BD2                                                u7060 0873  
                                              u4900 0547                                                u5540 0D83  
                                              u5460 0D40                                                u5380 0CC3  
                                              u5620 00A3                                                u7220 1727  
                                              u4741 139B                                                u7141 1F0E  
                                              u3861 1ECE                                                u4581 0BD1  
                                              u7061 0872                                                u4901 0546  
                                              u5605 0DEB                                                u5541 0D82  
                                              u5461 0D3F                                                u5445 0D23  
                                              u5381 0CC2                                                u5621 00A2  
                                              u7221 1725                                                u7150 1F16  
                                              u3870 1513                                                u4590 0C0A  
                                              u4910 054C                                                u5550 0D8D  
                                              u5390 0CFB                                                u5710 01E0  
                                              u5630 00A8                                                u7230 1728  
                                              i1l39 1D63                                                u4735 137E  
                                              u7151 1F15                                                u3871 1512  
                                              u4591 0C09                                                u5295 070A  
                                              u4911 054B                                                u5551 0D8C  
                                              u5391 0CFA                                                u5631 00A7  
                                              i1l72 1F32                                                u4680 1E6D  
                                              u3960 1FDB                                                u7240 13FF  
                                              u3880 1519                                                u4920 0565  
                                              u5560 0D9B                                                u5480 0D4D  
                                              u5800 024F                                                u5720 01F7  
                                              u5640 00C3                                                u4681 1E6C  
                                              u3961 1FDA                                                u3945 1FCC  
                                              u7241 13FE                                                u3881 1518  
                                              u4921 0564                                                u5481 0D4C  
                                              u5801 024E                                                u5705 018E  
                                              u5641 00C2                                                i1l58 1D55  
                                              u4690 1E7C                                                u7250 140C  
                                              u3970 145A                                                u3890 1529  
                                              u4930 0569                                                u4850 0513  
                                              u5570 0DB6                                                u5810 0255  
                                              u5650 00C9                                                u4691 1E7B  
                                              u3955 1FD1                                                u7251 140B  
                                              u3971 1459                                                u3891 1528  
                                              u4931 0568                                                u4851 0512  
                                              u5571 0DB5                                                u5475 0D43  
                                              u5811 0254                                                u5715 01DC  
                                              u5651 00C8                                                u7260 1451  
                                              u3980 1465                                                u4940 05A1  
                                              u4860 0519                                                u5580 0DD1  
                                              u5820 025F                                                u5660 00CE  
                                              u5900 08AF                                                u7261 1450  
                                              u3981 1464                                                u4941 05A0  
                                              u4861 0518                                                u5581 0DD0  
                                              u5565 0D97                                                u5821 025E  
                                              u5725 01F3                                                u5661 00CD  
                                              u5901 08AE                                                u3990 1474  
                                              u7270 07D4                                                u4950 05AB  
                                              u4870 051E                                                u5590 0DE4  
                                              u5830 026D                                                u5750 021F  
                                              u5670 00E5                                                u3991 1473  
                                              u7271 07D3                                                u4951 05A9  
                                              u4871 051D                                                u5591 0DE3  
                                              u5575 0DB2                                                u5495 0D4F  
                                              u5751 021E                                                u5735 0202  
                                              u5671 00E4                                                u4960 05AC  
                                              u4880 053A                                                u5840 0288  
                                              u5680 00EA                                                u5920 08CA  
                                              u4945 059D                                                u4881 0539  
                                              u5585 0DCD                                                u5841 0287  
                                              u5745 0215                                                u5681 00E9  
                                              u5921 08C9                                                u4970 05BC  
                                              u4890 0541                                                u5850 02A0  
                                              u5770 022F                                                u4971 05BB  
                                              u4891 0540                                                u5851 029F  
                                              u5835 0269                                                u5771 022E  
                                              u5915 08BE                                                u6900 15DE  
                                              u5860 02BA                                                u5780 0234  
                                              u5940 08E0                                                u6901 15DD  
                                              u5861 02B9                                                u5845 0284  
                                              u5781 0233                                                u5765 0221  
                                              u5941 08DF                                                u4990 05CC  
                                              u5790 0248                                                u6910 0941  
                                              u4991 05CB                                                u5855 029C  
                                              u5791 0247                                                u5695 0163  
                                              u5935 08D4                                                u6911 0940  
                                              u7527 111A                                                u5960 08EE  
                                              u5880 088B                                                u6920 0947  
                                              u7537 1437                                                u4985 05BF  
                                              u5961 08ED                                                u5881 088A  
                                              u6921 0946                                                u5970 08F4  
                                              u5890 088F                                                u6930 0996  
                                              u5875 02BE                                                u5971 08F3  
                                              u5955 08E4                                                u5891 088E  
                                              u6931 0995                                                u5980 08F8  
                                              u6940 099C                                                u5981 08F7  
                                              u6941 099B                                                u5990 090C  
                                              u6950 09C5                                                u6951 09C4  
                                              u6960 09CB                                                u6961 09CA  
                                              u6970 13A8                                                u6971 13A7  
                                              u5995 0908                                                u6980 13B9  
                                              u6981 13B8                                                u6990 13C5  
                                              u6895 1F85                                                u6991 13C4  
                                              _TMR2 001D                                                _TMR4 0415  
                                              _TMR6 041C                                                _WPUA 020C  
                                              _WPUB 020D                                                _WPUC 020E  
                         EUSART_ReceiveISR@regValue 0070                                     _getHoogtesensor 1D64  
                                              abs@a 00A6                                                _dbuf 01A0  
                                              _atoi 080B                                                _main 10FD  
                                              _dtoa 0715                                                _line 01C0  
                                     i1___flmul@grs 002E                                                _prec 0146  
                                              _nout 0144                                                pad@i 00BA  
                                              pad@p 00B7                                                fsr0h 0005  
                                              fsr1h 0007                                                indf0 0000  
                                              fsr0l 0004                                                indf1 0001  
                                              fsr1l 0006                                                btemp 007E  
                                              _utoa 1649                         _INT_DefaultInterruptHandler 0000  
                  __end_of_adcConversionDoneHandler 1209                                        ?_counter_led 0070  
                             __end_of_check_push_up 1454                                      i1___fladd@aexp 004B  
                                    i1___fladd@bexp 004C                                                start 0058  
        __end_of_EUSART_DefaultOverrunErrorCallback 1D5A                ??_EUSART_DefaultOverrunErrorCallback 0070  
               ?_EUSART_DefaultOverrunErrorCallback 0070                  _EUSART_DefaultOverrunErrorCallback 1D56  
                                   ___fldiv@new_exp 00B2                           __end_of_SPI1_ByteExchange 1E1E  
                   __end_of_INT_SetInterruptHandler 1D9F                                ?i1_ADC_SelectChannel 0070  
                                             ??_abs 00A8                                               ??_pad 00B9  
                                     ?_EUSART_Write 00A0                                       ___fltol@sign1 0042  
                                             _ADACT 009F                                               ?_atoi 00A6  
                                   __end_of___fladd 0715                                               ?_main 0070  
                                             ?_dtoa 00BC                                     __end_of___fldiv 0DF4  
                                   __end_of___awdiv 14B0                                               STR_10 187D  
                                   __end_of___awmod 12F3                                     __end_of___flmul 02CE  
                                   __end_of___fltol 15D9                                               ?_utoa 00BC  
                                   ___awdiv@divisor 00A0                                               _T2CON 001F  
                                             _T4CON 0417                                               _IOCAF 0393  
                                             _IOCBF 0396                                               _IOCCF 0399  
                                             _IOCAN 0392                                               _IOCAP 0391  
                                             _IOCBN 0395                                               _T6CON 041E  
                                             _IOCBP 0394                                               _IOCCN 0398  
                                             _IOCCP 0397                                     __end_of___lwdiv 11CD  
                                             i1l233 001B                                               i1l235 002C  
                                             i1l244 0056                                               i1l237 003A  
                                             i1l238 0056                                               i1l239 0048  
                                             i1l432 1E56                                     __end_of___lwmod 115B  
                                             i1l438 1001                                               i1l491 1E65  
                                             i1l735 12A0                                               i1l745 101B  
                                             i1l497 0800                                               i1l834 1208  
                                             i1l763 1000                                               i1l843 1D69  
                                             i1l748 101D                                               i1l766 1D59  
                                             i1l946 0AD6                                               i1l948 0ADD  
                                   ___awdiv@counter 00A4                                               _OSCEN 091D  
                                             _UART1 1800                                        vfpfcnvrt@fmt 00CB  
                                             _TRISA 008C                                               _TRISB 008D  
                                             _TRISC 008E                                               _RXPPS 0E24  
                                   _TMR4_Initialize 1EB4                                    __end_of_TMR2_ISR 1E57  
                                  __end_of_TMR4_ISR 1E66                                               _flags 0063  
                                _EUSART_TransmitISR 1002                                      i1___flmul@aexp 0032  
                               read_prec_or_width@c 00AB                                      i1___flmul@bexp 0033  
                               read_prec_or_width@n 00AC                                               _fputc 150C  
                                             _fputs 1063                                               _setKi 1ED6  
                                             _setKp 1EE7                                         ?_TMR6_Tasks 0070  
                                    i1___flmul@sign 002D                                      i1___flmul@temp 0038  
                                    i1___flmul@prod 0034                                               atoi@n 00AB  
                                             pad@fp 00B4                                               atoi@s 00A6  
                                             _width 0055                                               _putch 1EC5  
                                             dtoa@d 00BE                                               dtoa@i 00C7  
                                             dtoa@p 00C3                                               dtoa@s 00C6  
                                             dtoa@w 00C4                                               pclath 000A  
                                             utoa@d 00BE                                               utoa@i 00C4  
                                             utoa@p 00C1                                               utoa@w 00C2  
                                             status 0003                                               wtemp0 007E  
                               ?_EUSART_TransmitISR 0070                                     i1___fladd@signs 004A  
                                       controller@I 0051                                         controller@P 004F  
                             ??i1_ADC_SelectChannel 0070                                     __initialization 005A  
                                      __end_of_atoi 0884                                        __end_of_main 1128  
                                      __end_of_dtoa 07CE                                        __end_of_utoa 16C2  
                                     ?_initLedstrip 0070                          ??_PWM_buzzer_LoadDutyValue 00A2  
                                    ??_EUSART_Write 00A1                   _EUSART_TxCompleteInterruptHandler 0150  
                           __end_of_TMR2_Initialize 1EB4                                           ??_ADC_ISR 0074  
                       ?_INTERRUPT_InterruptManager 0070                                              ??_atoi 00A8  
                              ??_EUSART_TransmitISR 0070                                              ??_main 00EC  
                                            ??_dtoa 00C0                                         ?i1___xxtofl 0070  
                                            ??_utoa 00C0                             setSetpoint@new_setpoint 00AD  
                        __end_of_read_prec_or_width 150C                   PWM_buzzer_LoadDutyValue@dutyValue 00A0  
                                   _TMR6_Initialize 1E84  EUSART_OverrunErrorCallbackRegister@callbackHandler 00A0  
EUSART_FramingErrorCallbackRegister@callbackHandler 00A0                             __end_of_getHoogtesensor 1D6A  
                                            _ADCON0 009D                                              _ADCON1 009E  
                        _EUSART_OverrunErrorHandler 005D                                              ?_fputc 00A3  
                                            ?_fputs 00AC                                              _ADRESH 009C  
                                            _ADRESL 009B                                              ?_setKi 00CF  
                                            ?_setKp 00CF                                    ___awdiv@dividend 00A2  
                                            _ANSELA 018C                                              ?_putch 0070  
                                            _ANSELB 018D                                              _ANSELC 018E  
                                      ?_setSetpoint 00AD                                              _RC1REG 0199  
                                            _RC1STA 019D                                              _RB4PPS 0E9C  
                                            _RB6PPS 0E9E                                              i1l1402 15D8  
                                            _RC5PPS 0EA5                                              _RB7PPS 0E9F  
                                            i1l1412 15D8                                              i1l1409 15C3  
                                            i1l1513 0EC9                                              _ODCONA 028C  
                                            i1l1530 0F5A                                              i1l1522 0FFF  
                                            _ODCONB 028D                                              i1l1515 0EA3  
                                            i1l1611 0486                                              _ODCONC 028E  
                                            i1l1540 0F9F                                              i1l1509 0E4A  
                                            i1l1605 0508                                              i1l1534 0F7C  
                                            i1l1551 0FF2                                              i1l1543 0FD2  
                                            i1l1552 0FFF                                              i1l1624 1052  
                                            i1l1617 04FE                                              i1l1626 1062  
                                            i1l1650 178F                                              i1l1651 17FF  
                                            _RC7PPS 0EA7                                              i1l1662 17CB  
                                            i1l1663 17D7                                              i1l6000 1E54  
                                            i1l1649 177E                                              i1l5300 0E2C  
                                            i1l6030 124F                                              i1l5310 0E40  
                                            i1l5302 0E2D                                              i1l6040 126F  
                                            i1l6032 1258                                              i1l5400 0F46  
                                            i1l5320 0E58                                              i1l5304 0E32  
                                            i1l5312 0E42                                              i1l6050 1289  
                                            i1l6042 1274                                              i1l6034 125D  
                                            i1l5402 0F4B                                              i1l5330 0E62  
                                            i1l5322 0E5A                                              i1l5314 0E50  
                                            i1l5306 0E37                                              i1l6060 129E  
                                            i1l6052 128E                                              i1l6044 127B  
                                            i1l6036 1264                                              i1l5420 0F84  
                                            i1l5412 0F70                                              i1l5404 0F52  
                                            i1l5340 0E6C                                              i1l5332 0E64  
                                            i1l5324 0E5C                                              i1l5316 0E54  
                                            i1l5308 0E3F                                              i1l5500 0313  
                                            i1l6140 000A                                              i1l6310 11F9  
                                            i1l6046 1281                                              i1l6038 126A  
                                            i1l6070 1016                                              i1l5430 0F92  
                                            i1l5422 0F86                                              i1l5414 0F77  
                                            i1l5406 0F62                                              i1l5350 0E75  
                                            i1l5342 0E6E                                              i1l5334 0E66  
                                            i1l5326 0E5E                                              i1l5318 0E56  
                                            i1l5270 0DF4                                              i1l4630 104E  
                                            i1l5510 032E                                              i1l5502 031B  
                                            i1l6150 0031                                              i1l6142 000F  
                                            i1l4640 1D5E                                              i1l6056 1295  
                                            i1l6048 1286                                              i1l6072 1018  
                                            i1l6064 1002                                              i1l5440 0FA9  
                                            i1l5432 0F96                                              i1l5424 0F8B  
                                            i1l5416 0F7B                                              i1l5408 0F67  
                                            i1l5360 0EB7                                              i1l5352 0E8C  
                                            i1l5344 0E70                                              i1l5336 0E68  
                                            i1l5328 0E60                                              i1l5280 0E04  
                                            i1l5272 0DF8                                              i1l4632 1059  
                                            i1l4624 1041                                              i1l5600 04F6  
                                            i1l5520 0383                                              i1l5512 0339  
                                            i1l5504 0320                                              i1l6160 0052  
                                            i1l6152 0036                                              i1l6144 0014  
                                            i1l6058 129C                                              i1l6066 1009  
                                            i1l4730 1599                                              i1l4722 157D  
                                            i1l5450 0FDC                                              i1l5442 0FAF  
                                            i1l5434 0F9C                                              i1l5418 0F80  
                                            i1l5426 0F8D                                              i1l5370 0ED2  
                                            i1l5362 0EB8                                              i1l5354 0EA7  
                                            i1l5346 0E72                                              i1l5338 0E6A  
                                            i1l5290 0E1C                                              i1l5282 0E09  
                                            i1l5274 0DFA                                              i1l4634 105E  
                                            i1l4626 1043                                              i1l5602 0500  
                                            i1l5530 03B6                                              i1l5522 0390  
                                            i1l5514 0346                                              i1l5506 0325  
                                            i1l5610 1766                                              i1l6154 003F  
                                            i1l6146 0020                                              i1l6138 0006  
                                            i1l5268 1DD6                                              i1l6068 1011  
                                            i1l4732 159D                                              i1l4740 15B3  
                                            i1l4724 158E                                              i1l4716 156A  
                                            i1l4644 1F1E                                              i1l5460 0FF0  
                                            i1l5452 0FE4                                              i1l5444 0FB3  
                                            i1l5380 0EEB                                              i1l5428 0F91  
                                            i1l5364 0EC0                                              i1l5356 0EB1  
                                            i1l5348 0E74                                              i1l5292 0E1F  
                                            i1l5284 0E11                                              i1l5276 0DFE  
                                            i1l4628 104A                                              i1l5540 03F3  
                                            i1l5532 03C1                                              i1l5524 039D  
                                            i1l5516 035E                                              i1l5620 179B  
                                            i1l5612 1776                                              i1l6156 0044  
                                            i1l6148 0025                                              i1l4750 15CD  
                                            i1l4726 158F                                              i1l4718 1574  
                                            i1l5462 0FFA                                              i1l5454 0FE9  
                                            i1l5446 0FD0                                              i1l5438 0FA4  
                                            i1l5390 0F04                                              i1l5382 0EF5  
                                            i1l5374 0EDB                                              i1l5358 0EB3  
                                            i1l5366 0EC2                                              i1l5294 0E25  
                                            i1l5286 0E12                                              i1l5278 0DFF  
                                            i1l5550 0443                                              i1l5542 03FE  
                                            i1l5534 03C8                                              i1l5526 03A4  
                                            i1l5518 036B                                              i1l5470 02D4  
                                            i1l5630 17C5                                              i1l5622 17A2  
                                            i1l5614 1786                                              i1l5606 175D  
                                            i1l6158 004D                                              i1l4728 1597  
                                            i1l4680 1D64                                              i1l5464 0FFE  
                                            i1l5456 0FEA                                              i1l5448 0FD7  
                                            i1l5384 0EF7                                              i1l5376 0EE3  
                                            i1l5368 0ECD                                              i1l5392 0F07  
                                            i1l5296 0E26                                              i1l5288 0E14  
                                            i1l5560 0462                                              i1l5552 044F  
                                            i1l5544 0410                                              i1l5536 03DA  
                                            i1l5528 03AF                                              i1l5480 02EB  
                                            i1l5472 02D8                                              i1l5640 17F6  
                                            i1l5632 17CF                                              i1l5624 17B1  
                                            i1l5608 1762                                              i1l5810 1D56  
                                            i1l4746 15BA                                              i1l4738 15A5  
                                            i1l5458 0FEE                                              i1l5394 0F1D  
                                            i1l5386 0EFB                                              i1l5378 0EE7  
                                            i1l5298 0E28                                              i1l5570 0483  
                                            i1l5554 0456                                              i1l5562 0466  
                                            i1l5546 0425                                              i1l5538 03E1  
                                            i1l5490 02FE                                              i1l5482 02ED  
                                            i1l5474 02D9                                              i1l5466 02CE  
                                            i1l5642 17F7                                              i1l5634 17D9  
                                            i1l5626 17B8                                              i1l5618 1792  
                                            i1l5820 11E2                                              i1l5812 11CD  
                                            i1l4748 15C8                                              i1l5396 0F41  
                                            i1l5388 0EFC                                              i1l5580 049A  
                                            i1l5564 046A                                              i1l5556 045A  
                                            i1l5548 043C                                              i1l5492 02FF  
                                            i1l5484 02F5                                              i1l5476 02DE  
                                            i1l5468 02D2                                              i1l5636 17ED  
                                            i1l5628 17C1                                              i1l5822 11E5  
                                            i1l5830 1204                                              i1l5814 11CE  
                                            i1l5398 0F43                                              i1l5590 04DB  
                                            i1l5582 04B2                                              i1l5574 048B  
                                            i1l5566 046B                                              i1l5558 045B  
                                            i1l5494 0304                                              i1l5486 02F8  
                                            i1l5478 02E3                                              i1l5638 17F2  
                                            i1l5824 11ED                                              i1l5816 11D6  
                                            i1l5592 04E4                                              i1l5576 0490  
                                            i1l5584 04B6                                              i1l5568 046F  
                                            i1l5496 0309                                              i1l5488 02FA  
                                            i1l5818 11DA                                              i1l5594 04E6  
                                            i1l5586 04C3                                              i1l5578 0496  
                                            i1l5498 0311                                              i1l5828 11F0  
                                            i1l5596 04F1                                              i1l5588 04CD  
                                            i1l5598 04F5                                              i1l5960 0A34  
                                            i1l5970 0ABF                                              i1l5962 0A6F  
                                            i1l5954 09D4                                              i1l5980 0AD6  
                                            i1l5972 0AC5                                              i1l5964 0AA3  
                                            i1l5956 09DC                                              i1l5974 0ACF  
                                            i1l5966 0AA9                                              i1l5958 09E7  
                                            i1l5990 1E57                                              i1l5984 1E39  
                                            i1l5976 0AD3                                              i1l5968 0AB2  
                                            i1l5992 1E5E                                              _INLVLA 038C  
                                            i1l5986 1E3B                                              i1l5994 1E63  
                                            _INLVLB 038D                                              _INLVLC 038E  
                                            i1l5988 1E42                                              i1l5996 1E48  
                                            i1l5998 1E4F                                              u610_20 0E54  
                                            u602_20 0DFE                                              u610_21 0E53  
                                            u602_21 0DFD                                              u611_20 0E8C  
                                            u603_20 0E04                                              u611_21 0E8B  
                                            u603_21 0E03                                              u611_25 0E88  
                                            u620_20 0ED2                                              u612_20 0E96  
                                            u604_20 0E09                                              u620_21 0ED1  
                                            u612_21 0E94                                              u604_21 0E08  
                                            u621_20 0EE7                                              u613_20 0E97  
                                            u605_20 0E25                                              u621_21 0EE6  
                                            u605_21 0E24                                              u622_20 0EEB  
                                            u614_20 0EA7                                              u606_20 0E2C  
                                            u710_20 0AD3                                              u622_21 0EEA  
                                            u614_21 0EA6                                              u606_21 0E2B  
                                            u710_21 0AD2                                              u630_25 0F71  
                                            u711_20 1E42                                              u631_20 0F7B  
                                            u607_20 0E32                                              u711_21 1E41  
                                            u631_21 0F7A                                              u607_21 0E31  
                                            u623_25 0EEE                                              u615_25 0EAA  
                                            u720_20 1294                                              u480_20 15B2  
                                            u640_20 0FC1                                              u632_20 0F80  
                                            u624_20 0EFB                                              u616_20 0EB7  
                                            u608_20 0E37                                              u464_20 104E  
                                            u712_20 1E5E                                              u720_21 1293  
                                            u480_21 15B1                                              u632_21 0F7F  
                                            u624_21 0EFA                                              u616_21 0EB6  
                                            u608_21 0E36                                              u464_21 104D  
                                            u712_21 1E5D                                              u640_25 0FBD  
                                            u721_20 1009                                              u713_20 1E4F  
                                            u481_20 15B9                                              u641_20 0FD0  
                                            u633_20 0F8B                                              u609_20 0E50  
                                            u721_21 1008                                              u713_21 1E4E  
                                            u481_21 15B8                                              u641_21 0FCF  
                                            u633_21 0F8A                                              u609_21 0E4F  
                                            u625_25 0EFE                                              u617_25 0EBA  
                                            u465_25 1053                                              u642_20 0FD7  
                                            u634_20 0F91                                              u626_20 0F1D  
                                            u618_20 0EC9                                              u466_20 105E  
                                            u650_20 02E3                                              u730_20 0014  
                                            u642_21 0FD6                                              u634_21 0F90  
                                            u626_21 0F1C                                              u618_21 0EC8  
                                            u466_21 105D                                              u650_21 02E2  
                                            u730_21 0013                                              u626_23 0F19  
                                            u482_25 15BB                                              u483_20 15C8  
                                            u475_20 1574                                              u643_20 0FDC  
                                            u635_20 0F96                                              u627_20 0F4B  
                                            u619_20 0ECD                                              u651_20 02FE  
                                            u707_20 0AB2                                              u731_20 0020  
                                            u483_21 15C7                                              u475_21 1573  
                                            u643_21 0FDB                                              u635_21 0F95  
                                            u627_21 0F4A                                              u619_21 0ECC  
                                            u651_21 02FD                                              u707_21 0AB1  
                                            u731_21 001F                                              u467_25 1F2D  
                                            u716_20 125D                                              u484_20 15CD  
                                            u476_20 158A                                              u644_20 0FE9  
                                            u636_20 0F9C                                              u628_20 0F62  
                                            u652_20 0304                                              u708_20 0ABF  
                                            u732_20 0025                                              u716_21 125C  
                                            u484_21 15CC                                              u644_21 0FE8  
                                            u636_21 0F9B                                              u628_21 0F61  
                                            u652_21 0303                                              u708_21 0ABE  
                                            u732_21 0024                                              u476_25 1586  
                                            u660_25 043D                                              u708_25 0ABB  
                                            _OSCFRQ 091F                                              u717_20 126A  
                                            u477_20 159D                                              u645_20 0FEE  
                                            u637_20 0FA3                                              u629_20 0F67  
                                            u653_20 0309                                              u709_20 0ACF  
                                            u733_20 0031                                              u717_21 1269  
                                            u477_21 159C                                              u645_21 0FED  
                                            u637_21 0FA2                                              u629_21 0F66  
                                            u653_21 0308                                              u709_21 0ACE  
                                            u733_21 0030                                              u661_25 0450  
                                            u718_20 1274                                              u478_20 15A4  
                                            u638_20 0FA9                                              u670_20 04A8  
                                            u662_20 045A                                              u654_20 0320  
                                            u734_20 0036                                              u718_21 1273  
                                            u478_21 15A3                                              u638_21 0FA8  
                                            u662_21 0459                                              u654_21 031F  
                                            u734_21 0035                                              u646_25 0FF5  
                                            u670_25 04A4                                              u719_20 1281  
                                            u647_20 0FFE                                              u639_20 0FB3  
                                            u671_20 04C3                                              u655_20 0325  
                                            u735_20 003F                                              u719_21 1280  
                                            u647_21 0FFD                                              u639_21 0FB2  
                                            u671_21 04C2                                              u655_21 0324  
                                            u735_21 003E                                              u479_25 15A6  
                                            u671_25 04BF                                              u663_25 045C  
                                            u672_20 04DB                                              u664_20 046A  
                                            u648_20 02D8                                              u736_20 0044  
                                            u728_20 000A                                              u672_21 04DA  
                                            u664_21 0469                                              u648_21 02D7  
                                            u736_21 0043                                              u728_21 0009  
                                            u672_25 04D7                                              u656_25 039E  
                                            u680_25 17AB                                       vfpfcnvrt@done 00D2  
                                            u673_20 04F5                                              u665_20 046F  
                                            u649_20 02DE                                              u681_20 17B7  
                                            u737_20 004D                                              u729_20 000F  
                                            u673_21 04F4                                              u665_21 046E  
                                            u649_21 02DD                                              u681_21 17B6  
                                            u737_21 004C                                              u729_21 000E  
                                            u657_25 03C9                                              u666_20 0483  
                                            u658_20 041B                                              u738_20 0052  
                                            u666_21 0482                                              u738_21 0051  
                                            u674_25 04F9                                              u658_25 0417  
                                            u682_25 17BB                                              u667_20 048A  
                                            u659_20 0432                                              u683_20 17C5  
                                            u675_20 1762                                              u667_21 0489  
                                            u683_21 17C4                                              u675_21 1761  
                                            u659_25 042E                                              u668_20 0490  
                                            u684_20 17CB                                              u676_20 1766  
                                            u668_21 048F                                              u684_21 17CA  
                                            u676_21 1765                                              u669_20 049A  
                                            u685_20 17CF                                              u677_20 1786  
                                            u669_21 0499                                              u685_21 17CE  
                                            u677_21 1785                                              u686_20 17E3  
                                            u686_25 17DF                                              u678_25 1795  
                                            u687_20 17F2                                              u679_20 17A1  
                                            u687_21 17F1                                              u679_21 17A0  
                                            u688_20 17F6                                              u688_21 17F5  
                                            _TX1REG 019A                                              _TX1STA 019E  
                                  __end_of___xxtofl 0929                                        ?_uartHandler 0070  
                                 __end_of_SPI1_Open 1649                                _sendLedstripEndFrame 1F8C  
                                 _ADC_potentiometer 014C                                        vfprintf@cfmt 00DF  
                                    ??_initLedstrip 00A9                                           ??___fladd 00B6  
                                            ___wmul 1FC0                             _updateLedstripAnimation 1D5A  
                                         ??___fldiv 00A8                                           ??___awdiv 00A4  
                                         ??___awmod 00A4                                           ??___flmul 00B1  
                                         ??___fltol 003E                                      counter_led@led 00AD  
                                         ??___lwdiv 00A4                                           ??___lwmod 00A4  
                                  __end_of_ledstrip 184C                                    __end_of_readLine 13F9  
                              read_prec_or_width@ap 00A7                             __end_of_TMR4_Initialize 1EC5  
                                  ___awdiv@quotient 00A6                                   ?_EUSART_IsRxReady 0070  
                                   ___awmod@divisor 00A0                                   ?_EUSART_IsTxReady 0070  
                                   ___awmod@counter 00A4                                              _printf 1E93  
                                            pad@buf 00B6                                   ?_CLOCK_Initialize 0070  
                                            dtoa@fp 00BC                                              _strlen 1F5E  
                                 __end_ofi1___fladd 1000                                  ??_EUSART_IsRxReady 00A0  
                                 __end_ofi1___flmul 0509                                              fputc@c 00A3  
                                ??_EUSART_IsTxReady 00A0                                              fputs@c 00B1  
                                            fputs@i 00B2                                              fputs@s 00AC  
                         ?_adcConversionDoneHandler 0070                                  ??_CLOCK_Initialize 00A0  
                        str2float@decimal_separator 00C7                             ?_sendLedstripStartFrame 0070  
                       EUSART_ReceiveISR@tempRxHead 0071                                    __end_of_vfprintf 10FD  
                             _pwm_fan_LoadDutyValue 1F1E                                              utoa@fp 00BC  
           INT_SetInterruptHandler@InterruptHandler 00A0             ADC_SetInterruptHandler@InterruptHandler 00A0  
                                    _SPI1_IsRxReady 0000                                      _SPI1_IsTxReady 0000  
                                      ___xxtofl@arg 00AA                                        ___xxtofl@exp 00A9  
                                 _SYSTEM_Initialize 101E                                        ___xxtofl@val 00A0  
                           __end_of__initialization 008F                                      _SPI1_ByteWrite 0000  
                                ?_SYSTEM_Initialize 0070                                          ___fltol@f1 003A  
                                      ?i1__Umul8_16 0070                                       __end_of_UART1 1830  
                             ?_sendLedstripEndFrame 0070                                      __pcstackCOMMON 0070  
                                      __pidataBANK0 07FD                                        __pidataBANK1 0002  
                                      __pidataBANK2 1D7C                                 ??_SYSTEM_Initialize 00A2  
                                         ?_TMR2_ISR 0070                                           ?_TMR4_ISR 0070  
                                     __end_of_fputc 156A                                       __end_of_fputs 1087  
                                 ??_SPI1_Initialize 00A0                                       __end_of_setKi 1EE7  
                                     __end_of_setKp 1EF8                                       __end_of_putch 1ED6  
                                  ?_TMR2_Initialize 0070                             __end_of_TMR6_Initialize 1E93  
                     __end_of_PWM_buzzer_Initialize 1DF9                             _ADC_GetConversionResult 1D5E  
                                _spi1_configuration 18C2                      __end_of_sendLedstripStartFrame 1F48  
                              _eusartRxStatusBuffer 0120                                    _ADC_hoogtesensor 005B  
                                _pwm_fan_Initialize 1DF9                                    ?_getHoogtesensor 0070  
                                       setKi@new_ki 00CF                                             ??_fputc 00A7  
                         __end_of_SYSTEM_Initialize 1040                                             ??_fputs 00AF  
                                           ??_setKi 00D3                                             ??_setKp 00D3  
                                           ??_putch 00A2                                          __pbssBANK0 0055  
                                        __pbssBANK2 0120                                          __pbssBANK3 01A0  
                               ?_pwm_fan_Initialize 0070                                __end_of_EUSART_Write 10D3  
                                       setKp@new_kp 00CF                                      i1___xxtofl@arg 007A  
                                    i1___xxtofl@exp 0079                                      i1___xxtofl@val 0070  
                         ??_updateLedstripAnimation 00AE                                   __end_of__Umul8_16 10AB  
                          _TMR6_PeriodMatchCallback 0154                                          __pmaintext 10FD  
                                           ?___wmul 00A0                                          ??_TMR2_ISR 0070  
                                        ??_TMR4_ISR 007E                                          _getCounter 1DA8  
                                        __pintentry 0004                                _EUSART_AutoBaudQuery 0000  
                              ??_pwm_fan_Initialize 00A0                                             _ADC_ISR 1E39  
                                  ?_TMR4_Initialize 0070                                             ?_printf 00E1  
                                counter_led@counter 00AB                                             ?_strlen 00A0  
                                   _EUSART_IsTxDone 0000                                       _eusartRxCount 0067  
                 _EUSART_RxCompleteCallbackRegister 0000                               __end_of_getPomphoogte 1DBA  
                                         ?___xxtofl 00A0                                     _EUSART_ErrorGet 0000  
                                           _SP1BRGH 019C                                             _SP1BRGL 019B  
                                           _OSCCON1 0919                                             _OSCCON3 091B  
                               i1__Umul8_16@product 0074                              ?_pwm_fan_LoadDutyValue 0070  
                                           _OSCTUNE 091E                                             _PWM5DCH 0618  
                                           _PWM5DCL 0617                                             _PWM6DCH 061B  
                                           _PWM6DCL 061A                                             _PWM5CON 0619  
                                           _PWM6CON 061C                          sendLedstripFrame@intensity 00A3  
                                           _SSP1ADD 0212                                             _SLRCONA 030C  
                                           _SLRCONB 030D                                             _SLRCONC 030E  
                                           _SSP1BUF 0211                                        ??_TMR6_Tasks 00AE  
                              __end_of_initLedstrip 1E39                                           ?_readLine 00E8  
                                        _controller 09D4                               EUSART_Read@tempRxTail 00A0  
                            ??_sendLedstripEndFrame 00A1                                _ADC_InterruptHandler 015E  
                           _ADC_SetInterruptHandler 1D84                                             ___fladd 0509  
                                           ___fldiv 0C50                                             ___awdiv 1454  
                                           ___awmod 12A1                                             ___flmul 0093  
                                           ___fltol 156A                 adcConversionDoneHandler@new_channel 006E  
                                    uartHandler@str 00EB                                             ___lwdiv 1192  
                                           ___lwmod 1128                                           ?_vfprintf 00D9  
                         ??_ADC_GetConversionResult 0072                                          _hoogte_bal 014A  
                                  ?_TMR6_Initialize 0070                                  __end_of_TMR6_Tasks 1F1E  
                                      ??i1___xxtofl 0074                                             __ptext1 16C2  
                                           __ptext2 0929                                             __ptext3 0884  
                                           __ptext4 0093                                             __ptext5 1087  
                                           __ptext6 0C50                                             __ptext7 0509  
                                           __ptext8 1EE7                                             __ptext9 1ED6  
                                           _counter 0148                                           _T2CONbits 001F  
                             read_prec_or_width@fmt 00A6                     __end_of_updateLedstripAnimation 1D5E  
                                        ??___xxtofl 00A4                                    ___awmod@dividend 00A2  
                                           _buzzing 0064                                           _T4CONbits 0417  
                          ??_PIN_MANAGER_Initialize 00A0                             _INT_SetInterruptHandler 1D96  
                                         _T6CONbits 041E                                             atoi@neg 00AA  
                                           clrloop0 1D71                                end_of_initialization 008F  
                                           fputc@fp 00A5                         __end_ofi1_ADC_SelectChannel 1DE1  
                                        ??_readLine 00EA                                             init_ram 1D76  
                                           fputs@fp 00AD                                             initloop 1D77  
                                _read_prec_or_width 14B0                                   _EUSART_Initialize 115B  
                                 __end_of_str2float 09D4                                  __end_ofi1___xxtofl 1800  
                                 __end_of_printLogs 07FD             __end_of_TMR6_DefaultPeriodMatchCallback 0800  
                  ?_TMR6_DefaultPeriodMatchCallback 0070                   ??_TMR6_DefaultPeriodMatchCallback 00A0  
                   _TMR6_DefaultPeriodMatchCallback 07FF                                  ?_EUSART_Initialize 0070  
                                 __end_of_vfpfcnvrt 0C50                                     _SPI1_BufferRead 0000  
                                 _EUSART_ReceiveISR 124F                                 ?_read_prec_or_width 00A6  
                                  vfpfcnvrt@convarg 00D3                                         ?_getCounter 00A0  
                                        ??_vfprintf 00DE                                  ?_EUSART_ReceiveISR 0070  
                                         _SPI1_Open 15D9                                             strlen@a 00A2  
                                           strlen@s 00A0                                 ??_EUSART_Initialize 00A2  
                             i1__Umul8_16@word_mpld 0076                                 _SPI1_BufferExchange 0000  
                                       ___fladd@grs 00C1                                 ??_EUSART_ReceiveISR 0070  
               __end_of_ADC_DefaultInterruptHandler 1D56                         _ADC_DefaultInterruptHandler 1D55  
                                     ___xxtofl@sign 00A8     TMR6_PeriodMatchCallbackRegister@CallbackHandler 00A0  
   TMR4_PeriodMatchCallbackRegister@CallbackHandler 00A0            __end_of_TMR6_PeriodMatchCallbackRegister 1DC3  
                ??_TMR6_PeriodMatchCallbackRegister 00A2                   ?_TMR6_PeriodMatchCallbackRegister 00A0  
                  _TMR6_PeriodMatchCallbackRegister 1DBA                                           i1___fladd 0DF4  
                              ??_read_prec_or_width 00A8                                           i1___flmul 02CE  
                                       ___fldiv@grs 00B4                                         ___fldiv@rem 00AD  
                               _EUSART_Deinitialize 0000                          __end_of_initAdcMultiplexer 1E2B  
                         ?_PWM_buzzer_LoadDutyValue 00A0                                         ___flmul@grs 00B7  
                         __end_of_EUSART_Initialize 1192                       ??_ADC_DefaultInterruptHandler 0070  
                         ??_ADC_SetInterruptHandler 00A2                                     _SPI1_Initialize 0801  
                                       ?_controller 0070                           __end_of_EUSART_ReceiveISR 12A1  
                                     _check_push_up 13F9             __end_of_TMR2_DefaultPeriodMatchCallback 1002  
                 ??_TMR2_DefaultPeriodMatchCallback 0070                    ?_TMR2_DefaultPeriodMatchCallback 0070  
                   _TMR2_DefaultPeriodMatchCallback 1001                        __end_of_INTERRUPT_Initialize 1DED  
                                        ?_SPI1_Open 00A6                                         vfpfcnvrt@ap 00CC  
                                       vfpfcnvrt@cp 00D7                                         vfpfcnvrt@fp 00C9  
                                    __end_of___wmul 1FE0                                 str2float@multiplier 00C8  
                                      _EUSART_Write 10AB                                      _ADC_Initialize 1F48  
                         ??_INT_SetInterruptHandler 00A2                                      __end_of_printf 1EA3  
                                    __end_of_strlen 1F74                                 start_initialization 005A  
                                       __end_of_abs 1F0A                                          ?i1___fladd 003A  
                                       __end_of_pad 1348                                          ?i1___flmul 0020  
                                     ??_EUSART_Read 00A0            __end_of_TMR4_PeriodMatchCallbackRegister 1DA8  
                ??_TMR4_PeriodMatchCallbackRegister 00A2                   ?_TMR4_PeriodMatchCallbackRegister 00A0  
                  _TMR4_PeriodMatchCallbackRegister 1D9F                                         putch@txData 00A2  
                         _EUSART_RxInterruptHandler 015A                                       ??_counter_led 00A7  
                                    ?_check_push_up 0070                                     str2float@number 00CA  
                                       vfprintf@fmt 00DB                          _EUSART_FramingErrorHandler 005F  
                                          ??___wmul 00A4                              __end_of_ADC_Initialize 1F5E  
                                         __Umul8_16 1087                                        _initLedstrip 1E2B  
                                       __pdataBANK0 006D                                         __pdataBANK1 00ED  
                                       __pdataBANK2 0160                                            ?_ADC_ISR 0070  
                          _adcConversionDoneHandler 11CD                                            ??_printf 00E7  
                                          ??_strlen 00A2                             ??_pwm_fan_LoadDutyValue 0072  
                                         ___fladd@a 00B2                                           ___fladd@b 00AE  
                                     _SPI1_ByteRead 0000                                           ___fldiv@a 00A0  
                                         ___fldiv@b 00A4                                           ___flmul@a 00AD  
                                         ___flmul@b 00A9                               _PWM_buzzer_Initialize 1DED  
                                         ___latbits 0002                                       __pcstackBANK0 0020  
                                     __pcstackBANK1 00A0                             __end_of_SPI1_Initialize 080B  
                                   i1___xxtofl@sign 0078                                   _sendLedstripFrame 1FA5  
                               __end_of_EUSART_Read 2000                              EUSART_Write@tempTxHead 00A1  
                                      _is_on_target 0065                                           __pnvBANK2 0154  
                                ?_sendLedstripFrame 00A1                                    ___lwdiv@dividend 00A2  
                            _PIN_MANAGER_Initialize 1209                                           _dtoa$2139 00C1  
                          _TMR4_PeriodMatchCallback 0156                                EUSART_Read@readValue 00A1  
                                 _ADC_SelectChannel 1E05                            i1__Umul8_16@multiplicand 0070  
                                          ?___fladd 00AE                                            ?___fldiv 00A0  
                                          ?___awdiv 00A0                                            ?___awmod 00A0  
                                          ?___flmul 00A9                                 __end_of_counter_led 13A0  
                                          ?___fltol 003A                                 ??_sendLedstripFrame 00A4  
                                        ?__Umul8_16 00A0                                            ?___lwdiv 00A0  
                                       ??_SPI1_Open 00A7                                            ?___lwmod 00A0  
                                   ?_ADC_Initialize 0070                                        _eusartRxHead 0069  
                                ?_ADC_SelectChannel 0070                                        _eusartTxHead 006C  
                                      _eusartRxTail 0068                                        _eusartTxTail 006B  
                      ??_INTERRUPT_InterruptManager 007E                        EUSART_TransmitISR@tempTxTail 0070  
                           _eusartTxBufferRemaining 006A                                            _BAUD1CON 019F  
                            _EUSART_TransmitDisable 0000                                 ??_ADC_SelectChannel 00A0  
                                       ??i1___fladd 0042                                         ??i1___flmul 0028  
                                  ___lwdiv@quotient 00A4                                       ??_setSetpoint 00AF  
                         __end_of_sendLedstripFrame 1FC0                                    _EUSART_IsRxReady 1DCC  
                              _INTERRUPT_Initialize 1DE1                                           _integraal 0140  
                                  _EUSART_IsTxReady 1DC3                                      _eusartRxBuffer 0130  
                                  _CLOCK_Initialize 1D8D                                           _dutycycle 0057  
                          ?_updateLedstripAnimation 0070                                     ??_check_push_up 00AF  
                                    _eusartTxBuffer 0138                                      ___wmul@product 00A4  
                                         clear_ram0 1D70                                            _PIE1bits 0091  
                 _EUSART_TxCompleteCallbackRegister 0000                                            _PIE2bits 0092  
                                 _eusartRxLastError 0152                                       ??_uartHandler 00EB  
                         __end_of_ADC_SelectChannel 1E11                                            _PIR0bits 0010  
                                          _PIR1bits 0011                                            _PIR2bits 0012  
                                          _OSCSTAT1 091C                                          str2float@i 00C9  
                                         _str2float 0929                                            _SSP1CON1 0215  
                                          _SSP1CON3 0217                                            _TMR2_ISR 1E48  
                                      ??_getCounter 00A2                                            _TMR4_ISR 1E57  
                                          _SSP1STAT 0214                                           _printLogs 07CE  
                          ??_sendLedstripStartFrame 00A1                                           _vfpfcnvrt 0ADE  
                  __end_of_PWM_buzzer_LoadDutyValue 1F8C                                          _ADCON0bits 009D  
                                 _SPI1_Deinitialize 0000                                   ___wmul@multiplier 00A0  
                          ADC_SelectChannel@channel 00A1                              ?_PWM_buzzer_Initialize 0070  
                                     readLine@index 0066                                         _EUSART_Read 1FE0  
                                  ?_SPI1_Initialize 0070                               ?_INTERRUPT_Initialize 0070  
                 _EUSART_RxCompleteInterruptHandler 014E                                  __end_of_getCounter 1DB1  
                                 ??_TMR2_Initialize 00A0                                        ??_controller 004E  
                                     ??i1__Umul8_16 0072                                         _counter_led 1348  
                               __end_of_setSetpoint 1D70                                      str2float@digit 00CE  
                                _initAdcMultiplexer 1E1E                                          vfprintf@ap 00DD  
                                        vfprintf@fp 00D9                            ?_ADC_GetConversionResult 0070  
                                        ?_str2float 00C3                          i1ADC_SelectChannel@channel 0071  
                                 ??_getHoogtesensor 0072                                         ??__Umul8_16 00A2  
                                        ?_printLogs 0070                                 __end_of_uartHandler 175C  
                        __end_of_EUSART_TransmitISR 101E                                 ?_initAdcMultiplexer 0070  
                                        ?_vfpfcnvrt 00C9                                            ___xxtofl 0884  
                                __end_of_controller 0ADE                                       _getPomphoogte 1DB1  
                                   ___lwdiv@divisor 00A0                                  _EUSART_AutoBaudSet 0000  
                                   ___lwdiv@counter 00A6                                            __ptext10 13A0  
                                          __ptext11 1FE0                                            __ptext20 14B0  
                                          __ptext12 1DCC                                            __ptext21 0715  
                                          __ptext13 080B                                            __ptext30 12A1  
                                          __ptext22 12F3                                            __ptext14 07CE  
                                          __ptext31 1454                                            __ptext23 1F5E  
                                          __ptext15 1E93                                            __ptext40 1F74  
                                          __ptext32 1E2B                                            __ptext24 1063  
                                          __ptext16 10D3                                            __ptext41 1F0A  
                                          __ptext33 1DBA                                            __ptext25 150C  
                                          __ptext17 0ADE                                            __ptext50 1FC0  
                                          __ptext42 07FF                                            __ptext34 15D9  
                                          __ptext26 1EC5                                            __ptext18 1649  
                                          __ptext51 1192                                            __ptext43 1D5A  
                                          __ptext35 1E1E                                            __ptext27 10AB  
                                          __ptext19 1128                                            __ptext60 1209  
                                          __ptext52 1D9F                                            __ptext44 1348  
                                          __ptext36 1E05                                            __ptext28 1DC3  
                                          __ptext61 1DE1                                            __ptext53 101E  
                                          __ptext45 1F33                                            __ptext37 13F9  
                                          __ptext29 1EF8                                            __ptext70 1E57  
                                          __ptext62 1D96                                            __ptext54 1DF9  
                                          __ptext46 1FA5                                            __ptext38 1D6A  
                                          __ptext71 0800                                            __ptext63 115B  
                                          __ptext55 1E84                                            __ptext47 1F8C  
                                          __ptext39 1DB1                                            __ptext80 1E48  
                                          __ptext72 09D4                                            __ptext64 1E75  
                                          __ptext56 1EB4                                            __ptext48 1E11  
                                          __ptext81 1001                                            __ptext73 175C  
                                          __ptext65 1E66                                            __ptext57 1EA3  
                                          __ptext49 1DA8                                            __ptext90 1D5E  
                                          __ptext82 1002                                            __ptext74 02CE  
                                          __ptext66 1D8D                                            __ptext58 0801  
                                          __ptext83 124F                                            __ptext75 1040  
                                          __ptext67 1F48                                            __ptext59 1DED  
                                          __ptext84 1D56                                            __ptext76 0DF4  
                                          __ptext68 1D84                                            __ptext85 1000  
                                          __ptext77 1F1E                                            __ptext86 1E39  
                                          __ptext78 1D64                                            __ptext87 1D55  
                                          __ptext79 156A                                            __ptext88 11CD  
                                          __ptext89 1DD5                                        _SSP1CON1bits 0215  
                                  counter_led@loops 00A9                                ??_initAdcMultiplexer 00A2  
                             _EUSART_TransmitEnable 0000                                            _ledstrip 1830  
                                          _readLine 13A0                                   ??_TMR4_Initialize 00A0  
                        ??_adcConversionDoneHandler 0072                                          _RC1STAbits 019D  
                                          _setpoint 00ED                                            int$flags 007E  
                               __end_ofi1__Umul8_16 1063                                            _vfprintf 10D3  
                __end_of_INTERRUPT_InterruptManager 0058                          _INTERRUPT_InterruptManager 0004  
       __end_of_EUSART_FramingErrorCallbackRegister 1E75               ??_EUSART_FramingErrorCallbackRegister 00A2  
              ?_EUSART_FramingErrorCallbackRegister 00A0                 _EUSART_FramingErrorCallbackRegister 1E66  
                                         printf@fmt 00E1                      pwm_fan_LoadDutyValue@dutyValue 0070  
                                    _ADC_pomphoogte 0059                                      ?_getPomphoogte 00A0  
                                        _INTCONbits 000B                       __end_of_pwm_fan_LoadDutyValue 1F33  
                          _PWM_buzzer_LoadDutyValue 1F74                                _INT_InterruptHandler 0061  
                                    __pstringtext10 18B7                                      __pstringtext11 18CC  
                                    __pstringtext12 18D6                                      __pstringtext13 0000  
                            ??_INTERRUPT_Initialize 00A2                            ?_ADC_SetInterruptHandler 00A0  
                                       _setSetpoint 1D6A                                            intlevel1 0000  
                            i1__Umul8_16@multiplier 0078                                    ___lwmod@dividend 00A2  
                         _EUSART_TxInterruptHandler 015C                             ?_PIN_MANAGER_Initialize 0070  
                                 ??_TMR6_Initialize 00A0                           SPI1_ByteExchange@byteData 00A0  
        __end_of_EUSART_DefaultFramingErrorCallback 1001                ??_EUSART_DefaultFramingErrorCallback 0070  
               ?_EUSART_DefaultFramingErrorCallback 0070                  _EUSART_DefaultFramingErrorCallback 1000  
                   __end_of_ADC_GetConversionResult 1D64                                    ??_ADC_Initialize 00A2  
                                       _uartHandler 16C2                                         ??_str2float 00C7  
                                     _mustPrintLogs 006D                                            printf@ap 00E7  
                                  _SPI1_BufferWrite 0000                                         ??_printLogs 00E8  
                          ?_INT_SetInterruptHandler 00A0                            __end_of_EUSART_IsRxReady 1DD5  
                                       ??_vfpfcnvrt 00CE                            __end_of_EUSART_IsTxReady 1DCC  
                                      str2float@str 00C3                            __end_of_CLOCK_Initialize 1D96  
                                     __pstringtext1 1800                                       __pstringtext2 1830  
                                     __pstringtext3 18C2                                       __pstringtext4 184C  
                                     __pstringtext5 1865                                       __pstringtext6 187D  
                                     __pstringtext7 188E                                       __pstringtext8 189D  
                                     __pstringtext9 18AA                                          _SPI1_Close 0000  
                            __Umul8_16@multiplicand 00A0                                          _SSP1DATPPS 0E21  
                                        _SSP1CLKPPS 0E20                                     ___lwmod@divisor 00A0  
                                   ___lwmod@counter 00A4                                          _TX1STAbits 019E  
                            sendLedstripFrame@green 00A1                                       ___fladd@signs 00BE  
                                   controller@error 0053                                          _TMR6_Tasks 1F0A  
                                EUSART_Write@txData 00A0                              _sendLedstripStartFrame 1F33  
                    __end_of_PIN_MANAGER_Initialize 124F                                         _PWMTMRSbits 061F  
                                      ___fladd@aexp 00BF                                        ___fladd@bexp 00C0  
                             sendLedstripFrame@blue 00A2                                __Umul8_16@multiplier 00A8  
                           SPI1_Open@spiConfigIndex 00A6                                sendLedstripFrame@red 00A4  
                                       i1__Umul8_16 1040                            _TMR2_PeriodMatchCallback 0158  
                        __end_of_spi1_configuration 18CC                                   __Umul8_16@product 00A4  
